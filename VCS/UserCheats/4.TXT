#cheat Red car neons
R = 255;
G = 0;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Green car neons
R = 0;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Blue car neons
R = 0;
G = 0;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat White car neons
R = 255;
G = 255;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Purple car neons
R = 80;
G = 0;
B = 80;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Turquoise car neons
R = 0;
G = 255;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Yellow car neons
R = 255;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Orange car neons
R = 255;
G = 80;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Lime Green car neons
R = 80;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Pink car neons
R = 255;
G = 0;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Hot Pink car neons
R = 255;
G = 0;
B = 80;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Sky Blue car neons
R = 0;
G = 175;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Red bike neons
R = 255;
G = 0;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Green bike neons
R = 0;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Blue bike neons
R = 0;
G = 0;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat White bike neons
R = 255;
G = 255;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();


#cheat Purple bike neons
R = 80;
G = 0;
B = 80;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Turquoise bike neons
R = 0;
G = 255;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Yellow bike neons
R = 255;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Orange bike neons
R = 255;
G = 80;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Lime Green bike neons
R = 80;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Pink bike neons
R = 255;
G = 0;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Hot Pink bike neons
R = 255;
G = 0;
B = 80;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Sky Blue bike neons
R = 0;
G = 175;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Red Helicopter neons
R = 255;
G = 0;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x09730070+4*neon, R, G, B);}
off();

#cheat Green Helicopter neons
R = 0;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x09730070+4*neon, R, G, B);}
off();

#cheat Blue Helicopter neons
R = 0;
G = 0;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x09730070+4*neon, R, G, B);}
off();

#cheat White Helicopter neons
R = 255;
G = 255;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x09730070+4*neon, R, G, B);}
off();

#cheat Purple Helicopter neons
R = 80;
G = 0;
B = 80;
for(neon=0;neon<16;neon++)
{setchar(0x09730070+4*neon, R, G, B);}
off();

#cheat Turquoise Helicopter neons
R = 0;
G = 255;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x09730070+4*neon, R, G, B);}
off();

#cheat Yellow Helicopter neons
R = 255;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x09730070+4*neon, R, G, B);}
off();

#cheat Orange Helicopter neons
R = 255;
G = 80;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x09730070+4*neon, R, G, B);}
off();

#cheat Lime Green Helicopter neons
R = 80;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x09730070+4*neon, R, G, B);}
off();

#cheat Pink Helicopter neons
R = 255;
G = 0;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x09730070+4*neon, R, G, B);}
off();

#cheat Hot Pink Helicopter neons
R = 255;
G = 0;
B = 80;
for(neon=0;neon<16;neon++)
{setchar(0x09730070+4*neon, R, G, B);}
off();

#cheat Sky Blue Helicopter neons
R = 0;
G = 175;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x09730070+4*neon, R, G, B);}
off();

#cheat Red ped neons?!?
R = 255;
G = 0;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x09727690+4*neon, R, G, B);}
off();

#cheat Green ped neons?!?
R = 0;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x09727690+4*neon, R, G, B);}
off();

#cheat Blue ped neons?!?
R = 0;
G = 0;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x09727690+4*neon, R, G, B);}
off();

#cheat White ped neons?!?
R = 255;
G = 255;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x09727690+4*neon, R, G, B);}
off();


#cheat Purple ped neons?!?
R = 80;
G = 0;
B = 80;
for(neon=0;neon<16;neon++)
{setchar(0x09727690+4*neon, R, G, B);}
off();

#cheat Turquoise ped neons?!?
R = 0;
G = 255;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x09727690+4*neon, R, G, B);}
off();

#cheat Yellow ped neons?!?
R = 255;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x09727690+4*neon, R, G, B);}
off();

#cheat Orange ped neons?!?
R = 255;
G = 80;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x09727690+4*neon, R, G, B);}
off();

#cheat Lime Green ped neons?!?
R = 80;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x09727690+4*neon, R, G, B);}
off();

#cheat Pink ped neons?!?
R = 255;
G = 0;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x09727690+4*neon, R, G, B);}
off();

#cheat Hot Pink ped neons?!?
R = 255;
G = 0;
B = 80;
for(neon=0;neon<16;neon++)
{setchar(0x09727690+4*neon, R, G, B);}
off();

#cheat Sky Blue ped neons?!?
R = 0;
G = 175;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x09727690+4*neon, R, G, B);}
off();

#cheat Vehicles Health Bar Mod V2
//Thanks To Waterbottle for helping me getting the armor back
//Bar Color found by vettefan88

CarHP = getfloat(pcar+0x027C);
static armor;
static wasin;
static fInt;

if(!fInt)
{
armor = getfloat(pplayer + 0x4E8);  
fInt = 1;
}

if (pcar){
wasin = true;

//Show Health In Bar
setfloat(pplayer+0x4E8,   ((CarHP-250)/750)*100);

//change color
for(neon=0;neon<15;neon++){
setchar(0x96E1ED0+4*neon,   40,  240,  40);
}
}
else
{  if(wasin)
{
wasin = false;

setfloat(pplayer + 0x4E8,  armor);

//change color
for(neon=0;neon<15;neon++){
setchar(0x96E1ED0+4*neon,   106,  255,  255);
}
}
armor = getfloat(pplayer + 0x4E8);
} 

#cheat Infinate adrenaline
//BY PSPHACKER108
setchar(0x08BB3B5B,   0x8f);

#cheat Turbo Walker
//BY PSPHACKER108
setchar(0x08BB3B5B,  0x4f);

#cheat Infinate adrenaline/ walking code off
//BY PSPHACKER108
setchar(0x08BB3B5B,  0x3f);

#cheat crash fall chute
moveto(450.65,-224.86,360.70);  object(0x1CB2,270,270,357);
move(-11.29,-0.52,0.00);  object(0x1CB2,270,270,357);
move(-2.10,-0.10,0.00);  object(0x1CB2,270,270,357);
move(-9.85,-3.68,0.00);  object(0x1CB2,270,180,269);
move(-0.18,6.50,0.00);  object(0x1CB2,270,180,269);
move(-2.47,-3.27,0.00);  object(0x1CB2,270,180,184);
move(0.00,0.00,-13.70);  object(0x1CB2,270,180,184);
move(0.00,0.00,-1.70);  object(0x1CB2,270,180,184);
move(0.00,0.00,1.70);  object(0x1CB2,270,180,184);
move(-0.37,0.04,-7.80);  object(0x1CB2,270,180,188);
move(0.35,-0.04,0.00);  object(0x1CB2,270,180,184);
move(0.00,0.00,-4.70);  object(0x1CB2,270,180,184);
move(0.00,0.00,-4.50);  object(0x1CB2,270,180,184);
move(0.00,0.00,-13.80);  object(0x1CB2,270,180,184);
move(0.00,0.00,-13.80);  object(0x1CB2,270,180,184);
move(-0.00,0.00,-13.90);  object(0x1CB2,270,180,184);
move(0.00,0.00,-13.80);  object(0x1CB2,270,180,184);
move(0.00,0.00,-12.80);  object(0x1CB2,270,180,184);
move(0.00,0.00,-13.30);  object(0x1CB2,270,180,184);
move(0.00,0.00,-13.60);  object(0x1CB2,270,180,184);
move(0.00,0.00,-14.00);  object(0x1CB2,270,180,184);
move(0.00,0.00,-14.00);  object(0x1CB2,270,180,184);
move(0.00,0.00,-13.00);  object(0x1CB2,270,180,184);
move(0.00,0.00,-12.90);  object(0x1CB2,270,180,184);
move(0.00,0.00,-13.20);  object(0x1CB2,270,180,184);
move(0.00,0.00,-13.60);  object(0x1CB2,270,180,184);
move(-0.11,0.01,-13.80);  object(0x1CB2,270,180,185);
move(0.00,0.00,-13.50);  object(0x1CB2,270,180,185);
move(0.00,0.00,-13.60);  object(0x1CB2,270,180,185);
move(0.00,0.00,-12.90);  object(0x1CB2,270,180,185);
move(0.00,0.00,-12.90);  object(0x1CB2,270,180,185);
move(0.00,0.00,-13.80);  object(0x1CB2,270,180,185);
move(-0.28,-0.03,-26.60);  object(0x1CB2,270,180,185);
move(0.00,0.00,-13.50);  object(0x1CB2,270,180,185);
move(0.00,0.00,-15.10);  object(0x1CB2,270,180,185);
move(0.00,0.00,-9.20);  object(0x1CB2,270,180,185);
move(2.93,3.49,337.81);  object(0x1CB2,270,180,273);
move(0.00,0.00,-2.70);  object(0x1CB2,270,180,273);
move(0.00,0.00,-10.70);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.30);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.90);  object(0x1CB2,270,180,273);
move(0.00,0.00,-14.20);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.90);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.60);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.70);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.00);  object(0x1CB2,270,180,273);
move(0.00,0.00,-12.80);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.20);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.60);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.20);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.90);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.90);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.10);  object(0x1CB2,270,180,273);
move(0.00,0.00,-12.90);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.10);  object(0x1CB2,270,180,273);
move(0.00,0.00,-12.30);  object(0x1CB2,270,180,273);
move(0.00,0.00,-12.50);  object(0x1CB2,270,180,273);
move(0.00,0.00,-12.60);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.20);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.50);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.50);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.70);  object(0x1CB2,270,180,273);
move(0.00,0.00,-5.40);  object(0x1CB2,270,180,273);
move(0.00,0.00,-12.70);  object(0x1CB2,270,180,273);
move(-2.88,-3.52,13.30);  object(0x1CB2,270,180,5);
moveto(424.00,-234.45,-8.81);  object(0x1CA4,0,0,104);
move(0.40,8.45,68.80);  object(0x1CB2,270,0,4);
move(5.54,0.32,-50.27);  object(0x1CB2,270,0,4);
move(-0.00,-0.02,13.70);  object(0x1CB2,270,0,4);
move(0.00,0.00,13.80);  object(0x1CB2,270,0,4);
move(0.00,0.00,13.40);  object(0x1CB2,270,0,4);
move(0.00,0.00,13.40);  object(0x1CB2,270,0,4);
move(0.00,0.00,13.60);  object(0x1CB2,270,0,4);
move(0.00,0.07,14.40);  object(0x1CB2,270,0,4);
move(0.00,0.00,13.50);  object(0x1CB2,270,0,4);
move(0.00,0.00,12.30);  object(0x1CB2,270,0,4);
move(0.00,0.00,12.80);  object(0x1CB2,270,0,4);
move(0.00,0.00,14.40);  object(0x1CB2,270,0,4);
move(0.00,0.00,13.30);  object(0x1CB2,270,0,4);
move(0.00,0.00,13.80);  object(0x1CB2,270,0,4);
move(0.00,0.00,12.70);  object(0x1CB2,270,0,4);
move(0.00,0.00,11.10);  object(0x1CB2,270,0,4);
move(0.00,0.00,13.30);  object(0x1CB2,270,0,4);
move(0.00,0.00,11.20);  object(0x1CB2,270,0,4);
move(0.00,0.00,13.80);  object(0x1CB2,270,0,4);
move(0.01,0.00,14.30);  object(0x1CB2,270,0,4);
move(0.00,0.00,13.70);  object(0x1CB2,270,0,4);
move(0.00,0.00,13.80);  object(0x1CB2,270,0,4);
move(0.00,0.00,12.20);  object(0x1CB2,270,0,4);
move(0.00,0.00,10.60);  object(0x1CB2,270,0,4);
move(0.00,0.00,10.10);  object(0x1CB2,270,0,4);
move(0.00,0.00,8.90);  object(0x1CB2,270,0,4);
move(0.00,0.00,12.30);  object(0x1CB2,270,0,4);
move(-5.34,-0.44,-14.50);  object(0x1CB2,270,0,4);
moveto(436.38,-227.83,343.64);  object(0x1CB2,0,0,359);
move(-6.31,2.14,-1.50);  object(0x1CB2,270,0,6);
move(0.00,0.00,11.30);  object(0x1CB2,270,0,6);
move(-0.40,0.04,-6.50);  object(0x1CEA,270,0,6);
move(-4.08,0.39,0.00);  object(0x1CEA,270,0,6);
move(1.89,-0.18,0.00);  object(0x1CEA,270,0,6);
move(-0.28,-2.92,0.00);  object(0x1CEA,270,0,6);
move(-1.69,0.16,0.00);  object(0x1CEA,270,0,6);
move(3.88,-0.38,0.00);  object(0x1CEA,270,0,6);
move(0.16,1.61,0.00);  object(0x1CEA,270,0,6);
move(-2.29,0.22,0.00);  object(0x1CEA,270,0,6);
move(-1.69,0.16,0.00);  object(0x1CEA,270,0,6);
move(-0.05,3.68,-6.60);  object(0x1CEB,270,0,6);
move(1.49,-0.14,0.00);  object(0x1CEB,270,0,6);
move(2.09,-0.20,0.00);  object(0x1CEB,270,0,6);
move(-0.13,-1.38,0.00);  object(0x1CEB,270,0,6);
move(-2.09,0.20,0.00);  object(0x1CEB,270,0,6);
move(-1.39,0.13,0.00);  object(0x1CEB,270,0,6);
move(2.39,-0.23,0.00);  object(0x1CEB,270,0,6);
move(0.12,1.24,0.00);  object(0x1CEB,270,0,6);
move(-0.24,-2.53,0.00);  object(0x1CEB,270,0,6);
move(1.03,-0.10,0.00);  object(0x1CEB,270,0,4);
move(-2.10,0.13,0.00);  object(0x1CEB,270,0,4);
move(-1.20,0.07,0.00);  object(0x1CEB,270,0,4);
move(0.12,2.44,-13.70);  object(0x01C2,95,0,359);
move(1.10,0.02,0.00);  object(0x01C2,95,0,359);
move(1.10,0.02,0.00);  object(0x01C2,95,0,359);
move(1.30,0.02,0.00);  object(0x01C2,95,0,359);
move(0.02,-1.31,0.00);  object(0x01C2,95,0,359);
move(-1.30,-0.02,0.00);  object(0x01C2,95,0,359);
move(-1.00,-0.01,0.00);  object(0x01C2,95,0,359);
move(-1.00,-0.01,0.00);  object(0x01C2,95,0,359);
move(0.01,-0.90,0.00);  object(0x01C2,95,0,359);
move(1.00,0.01,0.00);  object(0x01C2,95,0,359);
move(1.00,0.01,0.00);  object(0x01C2,95,0,359);
move(1.20,0.02,0.00);  object(0x01C2,95,0,359);
move(0.01,-0.80,0.00);  object(0x01C2,95,0,359);
move(-1.30,-0.02,0.00);  object(0x01c2,95,0,359);
move(-1.00,-0.01,0.00);  object(0x01C2,95,0,359);
move(-0.90,-0.01,0.00);  object(0x01C2,95,0,359);
moveto(429.10,-223.18,317.24);  object(0x029F,165,0,8);
move(-1.88,0.26,0.00);  object(0x029F,165,0,8);
move(-1.49,0.20,0.00);  object(0x029F,165,0,8);
move(0.09,-2.44,0.00);  object(0x029F,165,0,4);
move(2.59,-0.20,0.00);  object(0x029F,165,0,4);
move(-1.56,-1.88,0.00);  object(0x029F,165,0,1);
move(-1.00,2.61,-19.60);  object(0x029F,0,0,2);
move(1.50,-0.06,0.00);  object(0x029F,0,0,2);
move(1.90,-0.08,0.00);  object(0x029F,0,0,2);
move(-0.26,-2.38,0.00);  object(0x029F,0,0,355);
move(-1.79,-0.16,0.00);  object(0x029F,0,0,355);
move(-1.39,-0.12,0.00);  object(0x029F,0,0,355);
moveto(429.11,-223.26,282.92);  object(0x1CE0,180,0,4);
move(-1.80,0.13,0.00);  object(0x1CE0,180,0,4);
move(-1.72,0.04,0.00);  object(0x1CE0,180,0,7);
move(-0.08,-1.83,0.00);  object(0x1CE0,180,0,4);
move(1.70,-0.11,0.00);  object(0x1CE0,180,0,4);
move(1.90,-0.12,0.00);  object(0x1CE0,180,0,4);
move(-0.12,-1.86,0.00);  object(0x1CE0,180,0,4);
move(-1.90,0.12,0.00);  object(0x1CE0,180,0,4);
move(-1.60,0.10,0.00);  object(0x1CE0,180,0,4);
moveto(425.93,-224.39,274.10);  object(0x029F,0,0,0);
move(2.80,0.02,0.00);  object(0x029F,0,0,0);
move(0.01,-1.69,0.00);  object(0x029F,0,0,0);
move(-2.60,-0.02,0.00);  object(0x029F,0,0,0);
move(0.02,-1.93,0.00);  object(0x029F,0,0,0);
move(2.40,0.02,0.00);  object(0x029F,0,0,0);
move(-0.04,4.59,-7.70);  object(0x029F,0,0,0);
move(-1.20,-0.01,0.00);  object(0x029F,0,0,0);
move(-1.40,-0.01,0.00);  object(0x029F,0,0,0);
move(0.01,-1.19,0.00);  object(0x029F,0,0,0);
move(1.40,0.01,0.00);  object(0x029F,0,0,0);
move(1.10,0.01,0.00);  object(0x029F,0,0,0);
move(0.01,-0.90,0.00);  object(0x029F,0,0,0);
move(-1.00,-0.01,0.00);  object(0x029F,0,0,0);
move(-1.40,-0.01,0.00);  object(0x029F,0,0,0);
move(0.01,-0.97,0.00);  object(0x029F,0,0,0);
move(0.01,-0.91,0.00);  object(0x029F,0,0,0);
move(1.00,0.01,0.00);  object(0x029F,0,0,0);
move(-0.01,1.13,0.00);  object(0x029F,0,0,0);
move(1.30,0.01,0.00);  object(0x029F,0,0,0);
move(0.01,-1.00,0.00);  object(0x029F,0,0,0);
move(-3.03,4.42,-8.30);  object(0x029F,0,0,0);
move(1.00,0.01,0.00);  object(0x029F,0,0,0);
move(0.70,0.01,0.00);  object(0x029F,0,0,0);
move(0.90,0.01,0.00);  object(0x029F,0,0,0);
move(0.90,0.01,0.00);  object(0x029F,0,0,0);
move(0.01,-0.93,0.00);  object(0x029F,0,0,0);
move(-1.00,-0.01,0.00);  object(0x029F,0,0,0);
move(-1.60,-0.01,0.00);  object(0x029F,0,0,0);
move(-0.80,-0.01,0.00);  object(0x029F,0,0,0);
move(0.01,-1.35,0.00);  object(0x029F,0,0,0);
move(0.70,0.01,0.00);  object(0x029F,0,0,0);
move(0.90,0.01,0.00);  object(0x029F,0,0,0);
move(-0.01,1.20,0.00);  object(0x029F,0,0,0);
move(0.81,-1.38,0.00);  object(0x029F,0,0,0);
move(0.70,0.01,0.00);  object(0x029F,0,0,0);
move(0.01,-0.93,0.00);  object(0x029F,0,0,0);
move(-0.80,-0.01,0.00);  object(0x029F,0,0,0);
move(-0.60,-0.00,0.00);  object(0x029F,0,0,0);
move(-0.90,-0.01,0.00);  object(0x029F,0,0,0);
move(-0.70,-0.01,0.00);  object(0x029F,0,0,0);
move(0.01,-1.27,0.00);  object(0x029F,0,0,0);
move(0.50,0.00,0.00);  object(0x029F,0,0,0);
move(0.80,0.01,0.00);  object(0x029F,0,0,0);
move(0.70,0.01,0.00);  object(0x029F,0,0,0);
move(0.80,0.01,0.00);  object(0x029F,0,0,0);
move(0.01,-1.06,0.00);  object(0x029F,0,0,0);
move(-1.00,-0.01,0.00);  object(0x029F,0,0,0);
move(-0.40,-0.00,0.00);  object(0x029F,0,0,0);
move(-0.80,-0.01,0.00);  object(0x029F,0,0,0);
move(-0.60,-0.00,0.00);  object(0x029F,0,0,0);
moveto(427.57,-223.98,240.64);  object(0x029F,270,0,3);
move(-1.30,0.06,0.00);  object(0x029F,270,0,3);
move(2.80,-0.13,0.00);  object(0x029F,270,0,3);
move(-0.13,-2.82,0.00);  object(0x029F,270,0,3);
move(-3.10,0.14,0.00);  object(0x029F,270,0,3);
move(1.40,-0.06,0.00);  object(0x029F,270,0,3);
move(-0.50,0.02,0.00);  object(0x029F,270,0,3);
move(0.04,0.90,0.00);  object(0x029F,270,0,3);
move(0.80,-0.04,0.00);  object(0x029F,270,0,3);
move(0.98,1.84,-18.10);  object(0x029F,270,0,3);
move(-2.60,0.12,0.00);  object(0x029F,270,0,3);
move(1.60,-0.07,0.00);  object(0x029F,270,0,3);
move(-1.40,0.06,0.00);  object(0x029F,270,0,3);
move(-0.14,-3.00,0.00);  object(0x029F,270,0,3);
move(2.30,-0.10,0.00);  object(0x029F,270,0,3);
move(-1.30,0.06,0.00);  object(0x029F,270,0,3);
move(1.20,-0.04,0.00);  object(0x029F,270,0,4);
move(0.60,-0.04,0.00);  object(0x029F,270,0,4);
move(-1.50,0.11,0.00);  object(0x029F,270,0,4);
moveto(427.20,-226.09,211.33);  object(0x1CB6,185,0,6);
move(0.00,0.00,-6.40);  object(0x1CB6,185,0,6);
move(0.00,0.00,-6.60);  object(0x1CB6,185,0,6);
move(0.00,0.00,-6.80);  object(0x1CB6,185,0,6);
move(0.00,0.00,-6.90);  object(0x1CB6,185,0,6);
move(0.00,0.00,-6.60);  object(0x1CB6,185,0,6);
move(-1.29,0.14,-4.80);  object(0x1CB6,185,0,6);
move(2.29,-0.26,0.00);  object(0x1CB6,185,0,6);
move(-0.99,0.11,0.00);  object(0x1CB6,185,0,6);
move(0.00,0.00,-7.80);  object(0x1CB6,185,0,6);
move(0.00,0.00,-7.10);  object(0x1CB6,185,0,6);
move(0.00,0.00,-8.20);  object(0x1CB9,185,0,6);
move(0.00,0.00,-6.30);  object(0x1CB9,185,0,6);
move(0.00,0.00,-5.20);  object(0x1CB9,185,0,6);
move(0.00,0.00,-4.70);  object(0x1CB9,185,0,6);
move(0.00,0.00,-4.50);  object(0x1CB9,185,0,6);
move(0.00,0.00,-4.60);  object(0x1CB9,185,0,6);
move(0.00,0.00,-3.70);  object(0x1CCF,185,0,6);
move(0.00,0.00,-3.90);  object(0x1CCF,185,0,6);
move(0.00,0.00,-3.20);  object(0x1CCF,185,0,6);
move(0.00,0.00,-3.00);  object(0x1CCF,185,0,6);
move(0.00,0.00,-2.20);  object(0x1CCF,185,0,6);
move(0.00,0.00,-2.60);  object(0x1CCF,185,0,6);
move(0.00,0.00,-3.20);  object(0x029F,110,0,6);
move(0.00,0.00,-4.50);  object(0x029F,110,0,6);
move(0.00,0.00,-5.20);  object(0x029F,110,0,6);
move(0.00,0.00,-4.70);  object(0x029F,110,0,6);
move(0.00,0.00,-4.20);  object(0x029F,110,0,6);
move(0.00,0.00,-5.10);  object(0x029F,110,0,6);
move(0.00,0.00,-5.40);  object(0x029F,110,0,6);
move(0.00,0.00,-5.90);  object(0x029F,110,0,6);
move(0.00,0.00,-4.30);  object(0x029F,110,0,6);
move(0.00,0.00,6.70);  object(0x029F,110,0,6);
move(0.00,0.00,-11.30);  object(0x029F,110,0,6);
move(0.00,0.00,-3.70);  object(0x029F,110,0,6);
move(0.00,0.00,-3.50);  object(0x029F,110,0,6);
move(0.00,0.00,-3.70);  object(0x01C2,10,0,6);
move(0.00,0.00,-1.60);  object(0x01C2,10,0,6);
move(0.00,0.00,-2.10);  object(0x01C2,10,0,6);
move(0.00,0.00,-1.40);  object(0x01C2,10,0,6);
move(0.00,0.00,-1.00);  object(0x01C2,10,0,6);
move(0.00,0.00,3.50);  object(0x01C2,10,0,6);
move(0.00,0.00,1.50);  object(0x01C2,10,0,6);
move(0.00,0.00,-6.60);  object(0x01C2,10,0,6);
move(0.00,0.00,-2.30);  object(0x01C1,10,0,6);
move(0.00,0.00,-3.70);  object(0x01C1,10,0,6);
move(0.00,0.00,-2.10);  object(0x01C1,10,0,6);
move(0.00,0.00,3.70);  object(0x01C1,10,0,6);
move(0.00,0.00,-2.40);  object(0x01C1,10,0,6);
move(0.00,0.00,-2.70);  object(0x01C1,10,0,6);
move(0.00,0.00,-3.40);  object(0x01C1,10,0,6);
move(0.00,0.00,-3.60);  object(0x01C1,10,0,6);
move(0.00,0.00,-4.40);  object(0x01C1,10,0,6);
move(0.00,0.00,-4.70);  object(0x01C1,10,0,6);
move(-0.03,0.69,-4.80);  object(0x01C1,10,0,5);
move(4.15,-6.92,-4.50);  object(0x01C1,10,0,113);
moveto(427.18,-229.22,350.28);  object(0x1CB2,270,0,87);
move(-0.41,6.89,0.00);  object(0x1CB2,270,0,87);
move(0.41,-6.79,-14.20);  object(0x1CB2,270,0,87);
move(0.00,0.00,-8.80);  object(0x1CB2,270,0,87);
move(0.00,0.00,-11.30);  object(0x1CB2,270,0,87);
move(0.00,0.00,-8.30);  object(0x1CB2,270,0,87);
move(0.00,0.00,-7.20);  object(0x1CB2,270,0,87);
move(0.00,0.00,-13.70);  object(0x1CB2,270,0,87);
move(0.00,0.00,-13.60);  object(0x1CB2,270,0,87);
move(0.00,0.00,-13.00);  object(0x1CB2,270,0,87);
move(0.00,0.00,-14.40);  object(0x1CB2,270,0,87);
move(0.00,0.00,-13.20);  object(0x1CB2,270,0,87);
move(0.00,0.00,-12.10);  object(0x1CB2,270,0,87);
move(0.00,0.00,-14.40);  object(0x1CB2,270,0,87);
move(0.00,0.00,-12.60);  object(0x1CB2,270,0,87);
move(0.00,0.00,-13.90);  object(0x1CB2,270,0,87);
move(0.00,0.00,-13.80);  object(0x1CB2,270,0,87);
move(0.00,0.00,-13.10);  object(0x1CB2,270,0,87);
move(0.00,0.00,-13.90);  object(0x1CB2,270,0,87);
move(0.00,0.00,-13.50);  object(0x1CB2,270,0,87);
move(0.00,0.00,-13.60);  object(0x1CB2,270,0,87);
move(0.00,0.00,-13.60);  object(0x1CB2,270,0,87);
move(0.00,0.00,-14.20);  object(0x1CB2,270,0,87);
move(0.00,0.00,-14.10);  object(0x1CB2,270,0,87);
move(0.00,0.00,-14.00);  object(0x1CB2,270,0,87);
move(0.00,0.00,-13.90);  object(0x1CB2,270,0,87);
move(0.00,0.00,-13.60);  object(0x1CB2,270,0,87);
move(0.00,0.00,-8.70);  object(0x1CB2,270,0,87);
move(0.58,0.34,-14.30);  object(0x1CB2,270,270,87);
teleport(430.43, -225.97, 365.84)

#cheat cars you don't see everyday
pspawn = 0x08E81290;
setint(pspawn, 262);
setfloat(pspawn + 0x4, 244.63, -183.85, 29.08, 90);
pspawn += 0x30;
setint(pspawn, 172);
setfloat(pspawn + 0x4, 225.27, -230.23, 11.41, 60);
pspawn += 0x30;
setint(pspawn, 175);
setfloat(pspawn + 0x4, 346.95, -281.08, 10.88, 180);
pspawn += 0x30;
setint(pspawn, 187);
setfloat(pspawn + 0x4, 454.94, 13.13, 10.67, 90);
pspawn += 0x30;
setint(pspawn, 212);
setfloat(pspawn + 0x4, 370.25, 705.49, 11.32, 0);
pspawn += 0x30;
setint(pspawn, 268);
setfloat(pspawn + 0x4, 520.97, 502.66, 10.99, 0);
pspawn += 0x30;

#cheat Hydraulics
setshort(0x08e90bd8, 1, 'P', 'r', 'e', 's', 's', ' ', 'r', 'i', 'g', 'h', 't', ' ', 't', 'o', ' ', 't', 'i', 'l', 't', ' ', 't', 'h', 'e', ' ', 'c', 'a', 'r', ' ', 'r', 'i', 'g', 'h', 't', ',', ' ', 'l', 'e', 'f', 't', ' ', 't', 'o', ' ', 't', 'i', 'l', 't', ' ', 'i', 't', ' ', 'l', 'e', 'f', 't', ',', ' ', 'u', 'p', ' ', 't', 'o', ' ', 't', 'i', 'l', 't', ' ', 'i', 't', ' ', 'f', 'o', 'r', 'w', 'a', 'r', 'd', 's', ',', ' ', 'd', 'o', 'w', 'n', ' ', 't', 'o', ' ', 't', 'i', 'l', 't', ' ', 'i', 't', ' ', 'b', 'a', 'c', 'k', 'w', 'a', 'r', 'd', 's', ',', ' ', 'H', 'o', 'l', 'd', ' ', 'R', ' ', 'a', 'n', 'd', ' ', 't', 'a', 'p', ' ', 'c', 'i', 'r', 'c', 'l', 'e', ' ', 't', 'o', ' ', 'b', 'o', 'u', 'n', 'c', 'e', '.', ' ', 'C', 'i', 'r', 'c', 'l', 'e', ' ', 'r', 'e', 's', 'e', 't', 's', ' ', 'c', 'a', 'r', '.', 0);
if(buttons & CTRL_LEFT)
{
setchar(pcar + 0x000003B8, 0);
setchar(pcar + 0x000003B9, 0);
setchar(pcar + 0x000003B7, 2);
setchar(pcar + 0x000003B6, 2);
}
if(buttons & CTRL_RIGHT)
{
setchar(pcar + 0x000003B8, 2);
setchar(pcar + 0x000003B9, 2);
setchar(pcar + 0x000003B7, 0);
setchar(pcar + 0x000003B6, 0);
}
if(buttons & CTRL_UP)
{
setchar(pcar + 0x000003B8, 2);
setchar(pcar + 0x000003B6, 2);
setchar(pcar + 0x000003B7, 0);
setchar(pcar + 0x000003B9, 0);
}
if(buttons & CTRL_DOWN)
{
setchar(pcar + 0x000003B7, 2);
setchar(pcar + 0x000003B9, 2);
setchar(pcar + 0x000003B6, 0);
setchar(pcar + 0x000003B8, 0);
}
if (press & CTRL_RTRIGGER)
{
setchar(pcar + 0x000003B7, 2);
setchar(pcar + 0x000003B9, 2);
setchar(pcar + 0x000003B8, 2);
setchar(pcar + 0x000003B6, 2);
}
if(buttons & CTRL_CIRCLE)
{
setchar(pcar + 0x000003B6, 0);
setchar(pcar + 0x000003B7, 0);
setchar(pcar + 0x000003B9, 0);
setchar(pcar + 0x000003B8, 0);
}
#off
setchar(pcar + 0x000003B6, 0);
setchar(pcar + 0x000003B7, 0);
setchar(pcar + 0x000003B9, 0);
setchar(pcar + 0x000003B8, 0);

#cheat Pop Everything
if(press & CTRL_UP)
setchar(pcar + 0x000003BA, 2);
if(press & CTRL_DOWN)
setchar(pcar + 0x000003BB, 2);
if(press & CTRL_RIGHT)
setchar(pcar + 0x000003BD, 2);
if(press & CTRL_LEFT)
setchar(pcar + 0x000003BC, 2);
#off
setchar(pcar + 0x000003BC, 0);
setchar(pcar + 0x000003BD, 0);
setchar(pcar + 0x000003BB, 0);
setchar(pcar + 0x000003BA, 0);

#cheat Drifting Minigame
static score;
static getMoney;
static money;
static points;
if(!getMoney) {
money = getint(0x08bde55c);
getMoney = 1;
}
if(getchar(pcar+0x764) == 0x02 || getchar(pcar+0x768) == 0x02 || getchar(pcar+0x76C) == 0x02 ||

getchar(pcar+0x770) == 0x02) {
score += points;
points += 0.1;
}
else {
points = 5;
}
if(getint(pcar+0x150) && score > 100) {
score -= 100;
points = 5;
}
setint(0x08bde55c,  score);
if(points > 15) {
setchar(0x9569c90,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x80,  0x3f,  0x00,  0x00,

0x00,  0x00,  0xff,  0x20,  0x00);
setshort(0x08e90bd8, 1, 'Y', 'o', 'u', ' ', 'a', 'r', 'e', ' ', 'o', 'n', ' ', 'F', 'I', 'R', 'E', '!', 0);
}
else {
setchar(0x9569c90,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x80,  0x3f,  0x04,  0x00,  

0x00,  0x00,  0x80,  0x80,  0x80);
}
#off
setint(0x08bde55c,  money);
score = getMoney = money = 0;

#cheat Gas Modification
//Use Ocean Beach Gas station to refuel!
static start;
static gas;
if(pcar&&!start) {
if(!getchar(pcar+0x3d)) {
gas = (abs((getint(pplayer+0x68)+getint(pplayer))*getint(0x08bb3b40)) % (100-50)) + 50;
setchar(pcar+0x3d,  1);
}
else {
gas = getchar(pcar+0x3c);
}
start = 1;
}
setchar(pcar+0x3c,  gas);
if(!pcar) {
start = 0;
}
static timepassed;
static init;
if(!init)
{
  lasttime = getchar( 0x08bb3b41 );
  init = 1;
}
if( lasttime != getchar( 0x08bb3b41 ) )
{
  timepassed++;
  lasttime = getchar( 0x08bb3b41 );
}
if( timepassed == 6 )
{
 if(gas > 0) {
   gas -= 1;
 }
 timepassed = 0;
}
if(pcar&&gas) {
setshort(0x08e90bd8,  'G',  'a',  's',  ' ',  'l',  'e',  'f',  't',  ':',  ' ');
int = gas;
size = 0;
for( i = 1; i < int; i *= 10 ) size+=2;
for( i = 0; int > 0; i+=2 )
{
  setshort(0x08e90bea+size-i,   '0' + (int % 10));
  int = int(int/10);
}
setshort(0x08e90bea+size-i+0x6,  '%',  ' ',  0);
}
if(pcar&&!gas) {
setfloat(pcar+0x140,  getfloat(pcar+0x140)*0.91,  getfloat(pcar+0x144)*0.91);
setshort(0x08e90bd8,  1,  'Y',  'o',  'u',  ' ',  'a',  'r',  'e',  ' ',  'o',  'u',  't',  ' ',  'o',  'f',  ' ',  'g',  'a',  's',  '!',  0);  
}
if(getfloat(pcar+0x140) == 0 && getfloat(pcar+0x144) == 0 && getfloat(pcar+0x30) > 21.09 && getfloat(pcar+0x30) < 71.80 && getfloat(pcar+0x34) > -1091.87 && getfloat(pcar+0x34) < -1042.57) {
if(gas<100) {
price = (100 - gas) * 0.4;
setint(0x08bde55c,  getint(0x08bde55c) - price,  getint(0x08bde55c) - price);
gas = 100;
}
}

#cheat First Person View in Car v2
setchar(pplayer + 0x000008B4, 61);
setchar(pplayer+0x4C,   0x10,   0x20);
#off
setchar(pplayer+0x4C,   0x00,   0x00);
setchar(pplayer + 0x000008B4, 55);

#cheat Automatically Busted
setchar(pplayer + 0x000008B4, 65);

#cheat Voodoo Hydraulics
setfloat(0x9632540, 0);
setfloat(0x9632544, 0);
if (getshort(pcar+0x56)==239)
{
if (getfloat(pcar+0xD0)==1000)
{hyd = .1;}
if (getfloat(pcar+0xD0) == 500)
{hyd = -.1;}
if (buttons & CTRL_LEFT)
{setfloat(0x9632540, -.5);}
if (buttons & CTRL_RIGHT)
{setfloat(0x9632540, .5);}
if (buttons & CTRL_UP)
{setfloat(0x9632544, 1.5);}
if (buttons & CTRL_DOWN)
{setfloat(0x9632544, -1.5);}
if (press & CTRL_CIRCLE && getchar(pcar+0x136))
{setfloat(pcar + 0x00000148, hyd);}
if (press & CTRL_NOTE)
{
if (hyd == .1)
{setfloat(pcar+0xD0, 500);
setfloat(pcar+0x688, .6, .6, .6, .6);
setfloat(pcar+0x698, 1.05, 1.05, 1.05, 1.05);}

if (hyd == -.1)
{setfloat(pcar+0xD0, 1000);
setfloat(pcar+0x688, .46, .46, .46, .46);
setfloat(pcar+0x698, .81, .81, .81, .81);}
}
}

#cheat 2D wintergreen
setchar(pcar + 0x00000003, 62);
setchar(0x098F56A3, 127);

#cheat First Person View in Car
setchar(pplayer + 0x000008B4, 61);
#off
setchar(pplayer + 0x000008B4, 55);

#cheat Teleport into Mendez House Interior
teleport(16.78,  1150.80,  -193.79);

#cheat White Nite Stick Color
setchar(0x9AF2C50,  0xff,  0xff,  0xff);
setchar(0x9AF2C54,  0xff,  0xff,  0xff);
setchar(0x9AF2C58,  0xff,  0xff,  0xff);
setchar(0x9AF2C5C,  0xff,  0xff,  0xff);
setchar(0x9AF2C60,  0xff,  0xff,  0xff);
setchar(0x9AF2C64,  0xff,  0xff,  0xff);
setchar(0x9AF2C68,  0xff,  0xff,  0xff);
setchar(0x9AF2C6C,  0xff,  0xff,  0xff);
setchar(0x9AF2C70,  0xff,  0xff,  0xff);
setchar(0x9AF2C74,  0xff,  0xff,  0xff);
setchar(0x9AF2C78,  0xff,  0xff,  0xff);
setchar(0x9AF2C7C,  0xff,  0xff,  0xff);
setchar(0x9AF2C80,  0xff,  0xff,  0xff);
setchar(0x9AF2C84,  0xff,  0xff,  0xff);
setchar(0x9AF2C88,  0xff,  0xff,  0xff);
setchar(0x9AF2C8C,  0xff,  0xff,  0xff);

#cheat Nite Stick Color Blue
setchar(0x9AF2C50,   0x00,   0x00,   0xff);  
setchar(0x9AF2C54,   0x00,   0x00,   0xff);  
setchar(0x9AF2C58,   0x00,   0x00,   0xff);  
setchar(0x9AF2C5C,   0x00,   0x00,   0xff);  
setchar(0x9AF2C60,   0x00,   0x00,   0xff);  
setchar(0x9AF2C64,   0x00,   0x00,   0xff);  
setchar(0x9AF2C68,   0x00,   0x00,   0xff);  
setchar(0x9AF2C6C,   0x00,   0x00,   0xff);  
setchar(0x9AF2C70,   0x00,   0x00,   0xff);  
setchar(0x9AF2C74,   0x00,   0x00,   0xff);  
setchar(0x9AF2C78,   0x00,   0x00,   0xff);  
setchar(0x9AF2C7C,   0x00,   0x00,   0xff);  
setchar(0x9AF2C80,   0x00,   0x00,   0xff);  
setchar(0x9AF2C84,   0x00,   0x00,   0xff);  
setchar(0x9AF2C88,   0x00,   0x00,   0xff);  
setchar(0x9AF2C8C,   0x00,   0x00,   0xff);

#cheat Nite Stick Color Red
setchar(0x9AF2C50,  0xff,  0x00,  0x00);
setchar(0x9AF2C54,  0xff,  0x00,  0x00);
setchar(0x9AF2C58,  0xff,  0x00,  0x00);
setchar(0x9AF2C5C,  0xff,  0x00,  0x00);
setchar(0x9AF2C60,  0xff,  0x00,  0x00);
setchar(0x9AF2C64,  0xff,  0x00,  0x00);
setchar(0x9AF2C68,  0xff,  0x00,  0x00);
setchar(0x9AF2C6C,  0xff,  0x00,  0x00);
setchar(0x9AF2C70,  0xff,  0x00,  0x00);
setchar(0x9AF2C74,  0xff,  0x00,  0x00);
setchar(0x9AF2C78,  0xff,  0x00,  0x00);
setchar(0x9AF2C7C,  0xff,  0x00,  0x00);
setchar(0x9AF2C80,  0xff,  0x00,  0x00);
setchar(0x9AF2C84,  0xff,  0x00,  0x00);
setchar(0x9AF2C88,  0xff,  0x00,  0x00);
setchar(0x9AF2C8C,  0xff,  0x00,  0x00);

#cheat Car Radio to VCPR
setchar(pcar + 0x000002B7, 3);

#cheat Car Radio to V Rock
setchar(pcar + 0x000002B7, 5);

#cheat Car Radio to Flash
setchar(pcar + 0x000002B7, 0);

#cheat Car Radio to V Rock
setchar(pcar + 0x000002B7, 1);

#cheat Car Radio to Paradise
setchar(pcar + 0x000002B7, 2);

#cheat Car Radio to VCFl
setchar(pcar + 0x000002B7, 4);

#cheat Car Radio to Wave 103
setchar(pcar + 0x000002B7, 5);

#cheat Car Radio to Fresh 105
setchar(pcar + 0x000002B7, 6);

#cheat Car Radio to Espantoso
setchar(pcar + 0x000002B7, 7);

#cheat Car Radio to Emotion
setchar(pcar + 0x000002B7, 8);

#cheat The Bomb Shelter
moveto(-1010.88,  -806.61,  13.39);  object(0x1CA4,  0,  0,  33);
move(-3.24,  0.76,  0.00);  object(0x1CA4,  0,  0,  354);
move(-3.69,  -0.67,  0.00);  object(0x1CA4,  0,  0,  346);
move(-3.92,  -0.14,  0.00);  object(0x1CA4,  0,  0,  10);
move(-3.81,  -0.57,  0.00);  object(0x1CA4,  0,  0,  331);
move(-2.67,  -3.22,  0.00);  object(0x1CA4,  0,  0,  288);
move(-0.18,  -2.99,  0.00);  object(0x1CA4,  0,  0,  259);
move(2.39,  -3.62,  0.00);  object(0x1CA4,  0,  0,  215);
move(3.61,  -1.32,  0.00);  object(0x1CA4,  0,  0,  177);
move(13.25,  8.45,  0.00);  object(0x1CA4,  0,  0,  89);
move(0.07,  -3.90,  0.00);  object(0x1CA4,  0,  0,  89);
move(-1.20,  -2.96,  0.00);  object(0x1CA4,  0,  0,  142);
move(-2.42,  -1.75,  0.00);  object(0x1CA4,  0,  0,  149);
move(-3.50,  -1.04,  -0.10);  object(0x1CA4,  0,  0,  175);
move(-2.37,  0.40,  0.00);  object(0x1CA4,  0,  0,  206);
move(7.92,  10.08,  -1.10);  object(0x1CA5,  0,  0,  36);
move(0.24,  0.32,  0.00);  object(0x1CA5,  0,  0,  36);
move(0.24,  0.32,  0.00);  object(0x1CA5,  0,  0,  36);
move(-0.32,  0.23,  0.00);  object(0x1CA5,  0,  0,  36);
move(-0.18,  -0.24,  0.00);  object(0x1CA5,  0,  0,  36);
move(-0.24,  -0.32,  0.00);  object(0x1CA5,  0,  0,  36);
move(-0.45,  1.02,  0.50);  object(0x1CB0,  0,  0,  33);
move(-0.25,  0.16,  0.00);  object(0x1CB0,  0,  0,  33);
move(-0.25,  0.16,  0.00);  object(0x1CB0,  0,  0,  33);
move(-0.25,  0.16,  0.00);  object(0x1CB0,  0,  0,  33);
move(-0.25,  0.16,  0.00);  object(0x1CB0,  0,  0,  33);
move(-0.27,  -0.42,  0.00);  object(0x1CB0,  0,  0,  33);
move(0.25,  -0.16,  0.00);  object(0x1CB0,  0,  0,  33);
move(0.25,  -0.16,  0.00);  object(0x1CB0,  0,  0,  33);
move(0.25,  -0.16,  0.00);  object(0x1CB0,  0,  0,  33);
move(0.25,  -0.16,  0.00);  object(0x1CB0,  0,  0,  33);
move(0.00,  0.00,  0.10);  object(0x1CB0,  0,  0,  33);
move(-0.25,  0.16,  0.00);  object(0x1CB0,  0,  0,  33);
move(-0.25,  0.16,  0.00);  object(0x1CB0,  0,  0,  33);
move(-0.17,  0.11,  0.00);  object(0x1CB0,  0,  0,  33);
move(-0.34,  0.22,  0.00);  object(0x1CB0,  0,  0,  33);
move(0.17,  -0.11,  0.00);  object(0x1CB0,  0,  0,  33);
move(-1.18,  0.79,  -0.60);  object(0x1CB3,  0,  0,  273);
move(-0.80,  -0.03,  0.00);  object(0x1CB3,  0,  0,  273);
move(-0.70,  -0.03,  0.00);  object(0x1CB3,  0,  0,  273);
move(0.02,  -0.56,  0.00);  object(0x1CB3,  0,  0,  273);
move(0.70,  0.03,  0.00);  object(0x1CB3,  0,  0,  273);
move(0.80,  0.03,  0.00);  object(0x1CB3,  0,  0,  273);
move(4.10,  -4.32,  -0.20);  object(0x1CD2,  0,  0,  87);
move(-0.23,  3.99,  0.00);  object(0x1CD2,  0,  0,  29);
move(-6.87,  1.14,  0.00);  object(0x1CD4,  0,  0,  346);
move(-1.74,  -0.45,  0.00);  object(0x1CD4,  0,  0,  346);
move(0.70,  0.08,  1.20);  object(0x1CE6,  0,  0,  346);
move(-1.14,  -11.47,  0.00);  object(0x1CE6,  0,  0,  196);
move(2.76,  11.35,  -0.60);  object(0x1CEB,  0,  0,  180);
move(0.00,  0.00,  0.60);  object(0x1CEB,  0,  0,  180);
move(0.00,  0.00,  0.60);  object(0x1CEB,  0,  0,  180);
move(9.91,  -8.51,  1.40);  object(0x1CF4,  0,  0,  291);
move(-4.81,  3.14,  -3.20);  object(0x1CF5,  0,  0,  86);
move(-3.32,  -1.69,  -0.00);  object(0x1CF7,  0,  0,  175);
move(-1.02,  -0.07,  0.00);  object(0x1CF7,  0,  0,  175);
move(-10.82,  0.43,  -0.10);  object(0x1CF8,  0,  0,  345);
move(-0.58,  4.08,  0.20);  object(0x1CF9,  0,  0,  310);
move(4.91,  1.65,  0.30);  object(0x1CFB,  0,  0,  8);
move(-1.10,  -0.03,  0.00);  object(0x1CFB,  0,  0,  8);
move(-0.94,  -0.12,  0.00);  object(0x1CFB,  0,  0,  358);
move(2.41,  -8.81,  -0.30);  object(0x1CFC,  0,  0,  183);
move(4.72,  -0.95,  0.20);  object(0x1D00,  0,  0,  186);
move(-7.34,  4.85,  -0.50);  object(0x1D01,  0,  0,  270);
move(0.05,  -0.30,  0.00);  object(0x1D01,  0,  0,  270);
move(0.09,  -0.49,  0.00);  object(0x1D01,  0,  0,  270);
move(0.10,  -0.59,  0.00);  object(0x1D01,  0,  0,  270);
move(-0.33,  1.87,  0.00);  object(0x1D01,  0,  0,  270);
move(5.05,  3.41,  0.80);  object(0x1D03,  0,  0,  170);
move(-0.29,  -0.08,  0.00);  object(0x1D03,  0,  0,  170);
move(1.71,  -2.41,  -0.40);  object(0x1D04,  0,  0,  257);
move(2.34,  -5.75,  0.10);  object(0x1D14,  0,  0,  325);
move(-0.42,  -0.30,  0.00);  object(0x1D14,  0,  0,  333);
move(-0.41,  -0.21,  0.00);  object(0x1D14,  0,  0,  341);
move(-0.10,  0.22,  0.00);  object(0x1D14,  0,  0,  341);
move(0.48,  0.27,  0.00);  object(0x1D14,  0,  0,  331);
move(5.05,  5.11,  0.60);  object(0x1D14,  0,  0,  282);
move(-0.25,  0.03,  0.00);  object(0x1D14,  0,  0,  282);
move(-0.30,  0.04,  0.00);  object(0x1D14,  0,  0,  282);
move(-0.26,  -0.47,  0.00);  object(0x1D14,  0,  0,  282);
move(0.02,  0.47,  0.00);  object(0x1D14,  0,  0,  274);
move(-0.91,  -0.87,  -0.70);  object(0x1D14,  0,  0,  289);
move(0.07,  0.58,  0.00);  object(0x1D14,  0,  0,  274);
move(-0.19,  0.85,  0.00);  object(0x1D14,  0,  0,  251);
move(-0.40,  -0.39,  0.00);  object(0x1D14,  0,  0,  186);
move(0.06,  -0.67,  0.00);  object(0x1D14,  0,  0,  205);
move(0.00,  0.30,  0.00);  object(0x1D14,  0,  0,  196);
move(-0.05,  0.80,  0.00);  object(0x1D14,  0,  0,  196);
move(-0.05,  -1.53,  0.00);  object(0x1D14,  0,  0,  203);
move(0.21,  0.19,  0.00);  object(0x1D14,  0,  0,  203);
move(1.50,  4.93,  0.00);  object(0x1D14,  0,  0,  138);
move(-0.24,  0.39,  0.00);  object(0x1D14,  0,  0,  138);
move(-0.27,  0.14,  0.00);  object(0x1D14,  0,  0,  138);
move(-0.27,  0.14,  0.00);  object(0x1D14,  0,  0,  138);
move(-0.18,  0.09,  0.00);  object(0x1D14,  0,  0,  138);
move(-0.27,  0.14,  0.00);  object(0x1D14,  0,  0,  138);
move(-0.27,  0.14,  0.00);  object(0x1D14,  0,  0,  138);
move(1.33,  -0.70,  0.00);  object(0x1D14,  0,  0,  138);
move(-0.86,  -0.49,  0.40);  object(0x1D14,  0,  30,  123);
move(0.19,  -0.05,  0.00);  object(0x1D14,  0,  30,  123);
move(0.19,  -0.05,  0.00);  object(0x1D14,  0,  30,  123);
move(-0.88,  0.20,  0.00);  object(0x1D14,  0,  30,  123);
move(-0.29,  0.07,  0.00);  object(0x1D14,  0,  30,  123);
move(0.68,  -0.16,  0.00);  object(0x1D14,  0,  30,  123);
move(0.00,  0.00,  0.00);  object(0x1D14,  0,  30,  123);
move(-1.47,  -0.61,  1.10);  object(0x1D1A,  0,  0,  121);
move(9.34,  -10.77,  2.60);  object(0x1CB4,  0,  0,  237);
off#

#cheat teleport to Bomb Shelter
teleport(-1019.04,  -812.44,  13.27)

#cheat krazy long dragster line
moveto(-367.81,-560.05,38.95);  object(0x1CB2,0,270,180);
move(0.01,-14.20,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.89,0.00);  object(0x1CB2,0,270,180);
move(-0.02,-13.31,0.00);  object(0x1CB2,0,270,180);
move(-0.00,-13.58,0.00);  object(0x1CB2,0,270,180);
move(-0.00,-14.30,0.00);  object(0x1CB2,0,270,180);
move(-0.00,-14.34,0.00);  object(0x1CB2,0,270,180);
move(-0.00,-14.16,0.00);  object(0x1CB2,0,270,180);
move(-0.00,-14.12,0.00);  object(0x1CB2,0,270,180);
move(-0.00,-14.59,0.00);  object(0x1CB2,0,270,180);
move(-0.00,-14.30,0.00);  object(0x1CB2,0,270,180);
move(-0.00,-14.45,0.00);  object(0x1CB2,0,270,180);
move(-0.00,-14.03,0.00);  object(0x1CB2,0,270,180);
move(-0.00,-13.83,0.00);  object(0x1CB2,0,270,180);
move(-0.00,-13.95,0.00);  object(0x1CB2,0,270,180);
move(-0.00,-13.90,0.00);  object(0x1CB2,0,270,180);
move(-0.00,-14.03,0.00);  object(0x1CB2,0,270,180);
move(0.01,-12.44,0.00);  object(0x1CB2,0,270,180);
move(0.02,-14.60,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.26,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.57,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.48,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.25,0.00);  object(0x1CB2,0,270,180);
move(0.04,-31.86,0.00);  object(0x1CB2,0,270,180);
move(0.02,-14.50,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.47,0.00);  object(0x1CB2,0,270,180);
move(0.03,-26.04,0.00);  object(0x1CB2,0,270,180);
move(0.02,-14.16,0.00);  object(0x1CB2,0,270,180);
move(0.02,-14.02,0.00);  object(0x1CB2,0,270,180);
move(0.02,-14.08,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.80,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.47,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.78,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.22,0.00);  object(0x1CB2,0,270,180);
move(0.02,-12.51,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.76,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.84,0.00);  object(0x1CB2,0,270,180);
move(0.02,-12.63,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.84,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.17,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.86,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.73,0.00);  object(0x1CB2,0,270,180);
move(0.02,-14.03,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.21,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.15,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.87,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.67,0.00);  object(0x1CB2,0,270,180);
move(0.02,-14.28,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.52,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.38,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.43,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.43,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.83,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.85,0.00);  object(0x1CB2,0,270,180);
move(0.01,-14.36,0.00);  object(0x1CB2,0,270,180);
move(0.01,-14.04,0.00);  object(0x1CB2,0,270,180);
move(-0.09,-14.34,0.00);  object(0x1CB2,0,270,181);
move(-0.25,-13.58,0.00);  object(0x1CB2,0,270,181);
move(-0.26,-14.37,0.00);  object(0x1CB2,0,270,181);
move(-0.25,-14.07,0.00);  object(0x1CB2,0,270,181);
move(-0.25,-14.11,0.00);  object(0x1CB2,0,270,181);
move(-0.25,-13.87,0.00);  object(0x1CB2,0,270,181);
move(-0.21,-19.64,0.00);  object(0x1CB2,0,270,181);
move(0.09,9.36,-0.00);  object(0x1CB2,0,270,180);
move(-0.30,-23.37,0.00);  object(0x1CB2,0,270,181);
move(-0.24,-12.02,0.00);  object(0x1CB2,0,270,181);
move(-0.24,-12.04,0.00);  object(0x1CB2,0,270,181);
move(-0.16,-8.01,0.00);  object(0x1CB2,0,270,181);
move(-0.26,-13.16,0.00);  object(0x1CB2,0,270,181);
move(-0.27,-13.81,0.00);  object(0x1CB2,0,270,181);
move(-0.26,-12.78,0.00);  object(0x1CB2,0,270,181);
move(-0.20,-13.24,0.00);  object(0x1CB2,0,270,181);
move(-0.20,-13.55,0.00);  object(0x1CB2,0,270,181);
move(-0.19,-12.79,0.00);  object(0x1CB2,0,270,181);
move(-0.20,-13.60,0.00);  object(0x1CB2,0,270,181);
move(-0.19,-12.99,0.00);  object(0x1CB2,0,270,181);
move(-0.44,-29.43,0.00);  object(0x1CB2,0,270,181);
move(0.12,8.34,0.00);  object(0x1CB2,0,270,181);
move(0.09,6.01,0.00);  object(0x1CB2,0,270,181);
move(-0.33,-21.72,0.00);  object(0x1CB2,0,270,181);
move(-0.14,-11.12,0.00);  object(0x1CB2,0,270,181);
move(0.07,5.52,0.00);  object(0x1CB2,0,270,181);
move(-0.20,-16.40,0.00);  object(0x1CB2,0,270,181);
move(-0.14,-11.42,0.00);  object(0x1CB2,0,270,181);
move(-0.13,-10.64,0.00);  object(0x1CB2,0,270,181);
move(-0.13,-10.15,0.00);  object(0x1CB2,0,270,181);
move(-0.14,-11.05,0.00);  object(0x1CB2,0,270,181);
move(-0.13,-10.80,0.00);  object(0x1CB2,0,270,181);
move(-0.14,-11.10,0.00);  object(0x1CB2,0,270,181);
move(-0.18,-14.49,0.00);  object(0x1CB2,0,270,181);
move(-0.17,-13.54,0.00);  object(0x1CB2,0,270,181);
move(-0.12,-9.74,0.00);  object(0x1CB2,0,270,181);
move(-0.13,-10.69,0.00);  object(0x1CB2,0,270,181);
move(-0.16,-12.80,0.00);  object(0x1CB2,0,270,181);
move(-0.17,-13.59,0.00);  object(0x1CB2,0,270,181);
move(-0.08,-6.53,0.00);  object(0x1CB2,0,270,181);
move(-0.10,-7.77,0.00);  object(0x1CB2,0,270,181);
move(-0.13,-10.81,0.00);  object(0x1CB2,0,270,181);
move(-0.16,-12.77,0.00);  object(0x1CB2,0,270,181);
move(-0.16,-12.76,0.00);  object(0x1CB2,0,270,181);
move(-0.17,-13.84,0.00);  object(0x1CB2,0,270,181);
move(-0.04,-3.57,0.00);  object(0x1CB2,0,270,181);
move(-0.12,-9.61,0.00);  object(0x1CB2,0,270,181);
move(-0.16,-13.45,0.00);  object(0x1CB2,0,270,181);
move(-0.15,-12.49,0.00);  object(0x1CB2,0,270,181);
move(-0.15,-12.51,0.00);  object(0x1CB2,0,270,181);
move(-0.16,-12.97,0.00);  object(0x1CB2,0,270,181);
move(-0.27,-13.60,0.00);  object(0x1CB2,0,270,181);
move(4.39,335.34,0.00);  object(0x1CB2,0,270,181);
move(3.59,669.94,0.00);  object(0x1CB2,0,270,180);
move(0.02,55.43,0.00);  object(0x1CB2,0,270,180);
move(0.03,5.80,0.00);  object(0x1CB2,0,270,180);
move(-0.40,330.72,0.00);  object(0x1CB2,0,270,179);
move(-0.22,12.49,0.00);  object(0x1CB2,0,270,179);
move(-0.22,12.37,0.00);  object(0x1CB2,0,270,179);
move(-0.22,12.67,0.00);  object(0x1CB2,0,270,179);
move(-0.23,13.00,0.00);  object(0x1CB2,0,270,179);
move(-0.25,14.29,0.00);  object(0x1CB2,0,270,179);
move(-0.26,14.61,0.00);  object(0x1CB2,0,270,179);
move(-0.20,11.35,0.00);  object(0x1CB2,0,270,179);
move(-0.20,10.42,0.00);  object(0x1CB2,0,270,179);
move(-0.29,13.35,0.00);  object(0x1CB2,0,270,179);
move(-0.45,12.51,0.00);  object(0x1CB2,0,270,176);
move(-0.74,12.84,0.00);  object(0x1CB2,0,270,178);
move(-0.59,14.00,0.00);  object(0x1CB2,0,270,178);
move(-0.50,11.77,0.00);  object(0x1CB2,0,270,178);
move(-0.48,11.33,0.00);  object(0x1CB2,0,270,178);
move(-0.49,11.49,0.00);  object(0x1CB2,0,270,177);
move(-0.53,11.51,0.00);  object(0x1CB2,0,270,177);
move(-0.37,8.04,0.00);  object(0x1CB2,0,270,177);
move(-0.61,13.20,0.00);  object(0x1CB2,0,270,177);
move(-0.58,12.42,0.00);  object(0x1CB2,0,270,177);
move(-0.64,13.74,0.00);  object(0x1CB2,0,270,177);
move(-0.64,13.65,0.00);  object(0x1CB2,0,270,177);
move(-0.50,10.77,0.00);  object(0x1CB2,0,270,177);
move(-0.62,13.42,0.00);  object(0x1CB2,0,270,177);
move(-0.63,13.56,0.00);  object(0x1CB2,0,270,177);
move(-0.67,14.17,0.00);  object(0x1CB2,0,270,177);
move(-0.69,14.20,0.00);  object(0x1CB2,0,270,177);
move(-0.69,13.73,0.00);  object(0x1CB2,0,270,177);
move(-0.69,13.68,0.00);  object(0x1CB2,0,270,177);
move(-0.68,13.50,0.00);  object(0x1CB2,0,270,177);
move(-0.65,13.04,0.00);  object(0x1CB2,0,270,177);
move(-0.68,12.78,0.00);  object(0x1CB2,0,270,177);
move(-0.75,13.46,0.00);  object(0x1CB2,0,270,177);
move(-0.79,14.27,0.00);  object(0x1CB2,0,270,177);
move(-0.73,13.14,0.00);  object(0x1CB2,0,270,177);
move(-0.77,13.86,0.00);  object(0x1CB2,0,270,177);
move(-0.67,12.07,0.00);  object(0x1CB2,0,270,177);
move(-0.73,13.19,0.00);  object(0x1CB2,0,270,177);
move(-0.75,13.51,0.00);  object(0x1CB2,0,270,177);
move(-0.72,12.92,0.00);  object(0x1CB2,0,270,177);
move(-0.77,13.72,0.00);  object(0x1CB2,0,270,177);
move(-0.79,13.89,0.00);  object(0x1CB2,0,270,177);
move(-0.79,13.92,0.00);  object(0x1CB2,0,270,177);
move(-0.81,14.26,0.00);  object(0x1CB2,0,270,177);
move(-0.75,13.21,0.00);  object(0x1CB2,0,270,177);
move(-0.79,13.90,0.00);  object(0x1CB2,0,270,177);
move(-0.75,13.25,0.00);  object(0x1CB2,0,270,177);
move(-0.84,13.54,0.00);  object(0x1CB2,0,270,176);
move(-0.85,13.49,0.00);  object(0x1CB2,0,270,176);
move(-0.82,13.01,0.00);  object(0x1CB2,0,270,176);
move(-0.84,13.21,0.00);  object(0x1CB2,0,270,176);
move(-0.83,13.18,0.00);  object(0x1CB2,0,270,176);
move(-0.81,12.72,0.00);  object(0x1CB2,0,270,176);
move(-0.51,7.98,0.00);  object(0x1CB2,0,270,176);
move(0.21,-3.36,0.00);  object(0x1CB2,0,270,176);
move(-1.04,16.38,0.00);  object(0x1CB2,0,270,176);
move(-0.82,12.90,0.00);  object(0x1CB2,0,270,176);
move(-0.82,13.25,0.00);  object(0x1CB2,0,270,176);
move(-0.80,13.01,0.00);  object(0x1CB2,0,270,176);
move(-0.81,12.93,0.00);  object(0x1CB2,0,270,176);
move(-0.93,13.71,0.00);  object(0x1CB2,0,270,176);
move(-0.89,13.09,0.00);  object(0x1CB2,0,270,176);
move(-1.01,13.69,0.00);  object(0x1CB2,0,270,175);
move(-0.92,11.24,0.00);  object(0x1CB2,0,270,175);
move(-1.17,14.36,0.00);  object(0x1CB2,0,270,175);
move(-1.08,13.16,0.00);  object(0x1CB2,0,270,175);
move(-1.15,14.07,0.00);  object(0x1CB2,0,270,175);
move(-1.05,12.86,0.00);  object(0x1CB2,0,270,175);
move(-1.07,12.99,0.00);  object(0x1CB2,0,270,175);
move(-1.04,12.62,0.00);  object(0x1CB2,0,270,175);
move(-1.08,13.08,0.00);  object(0x1CB2,0,270,175);
move(-1.07,13.36,0.00);  object(0x1CB2,0,270,175);
move(-1.14,14.24,0.00);  object(0x1CB2,0,270,175);
move(-1.13,14.11,0.00);  object(0x1CB2,0,270,175);
move(-1.14,14.20,0.00);  object(0x1CB2,0,270,175);
move(-1.12,13.86,0.00);  object(0x1CB2,0,270,175);
move(-1.17,14.07,0.00);  object(0x1CB2,0,270,175);
move(-1.12,13.17,0.00);  object(0x1CB2,0,270,175);
move(-1.06,12.02,0.00);  object(0x1CB2,0,270,175);
move(-1.27,14.11,0.00);  object(0x1CB2,0,270,175);
move(-1.24,13.79,0.00);  object(0x1CB2,0,270,175);
move(-1.11,12.32,0.00);  object(0x1CB2,0,270,175);
move(-1.03,11.46,0.00);  object(0x1CB2,0,270,175);
move(-1.20,13.25,0.00);  object(0x1CB2,0,270,175);
move(-1.27,14.02,0.00);  object(0x1CB2,0,270,175);
move(-1.11,12.25,0.00);  object(0x1CB2,0,270,175);
move(-0.90,9.95,0.00);  object(0x1CB2,0,270,175);
move(-0.94,10.46,0.00);  object(0x1CB2,0,270,175);
move(-0.71,7.89,0.00);  object(0x1CB2,0,270,175);
move(-0.88,9.72,0.00);  object(0x1CB2,0,270,175);
move(-0.85,9.44,0.00);  object(0x1CB2,0,270,175);
move(-1.04,13.57,0.00);  object(0x1CB2,0,270,176);
move(-0.68,10.02,0.00);  object(0x1CB2,0,270,176);
move(-0.72,10.55,0.00);  object(0x1CB2,0,270,176);
move(-0.79,11.67,0.00);  object(0x1CB2,0,270,176);
move(-0.28,4.14,0.00);  object(0x1CB2,0,270,176);
move(-0.70,10.34,0.00);  object(0x1CB2,0,270,176);
move(-0.54,7.92,0.00);  object(0x1CB2,0,270,176);
move(-0.40,5.89,0.00);  object(0x1CB2,0,270,176);
move(-0.57,8.39,0.00);  object(0x1CB2,0,270,176);
move(-0.66,9.64,0.00);  object(0x1CB2,0,270,176);
move(-0.31,4.49,0.00);  object(0x1CB2,0,270,176);
move(-1.39,13.87,-2.37);  object(0x1CB2,85,250,87);
move(-2.07,13.51,-5.00);  object(0x1CB2,85,250,87);
move(-1.91,13.14,-4.80);  object(0x1CB2,85,250,87);
move(-1.92,13.35,-4.90);  object(0x1CB2,85,250,87);
move(-1.84,12.85,-4.70);  object(0x1CB2,85,250,87);
move(-1.86,12.63,-4.60);  object(0x1CB2,85,250,87);
move(9.70,-65.56,24.03);  object(0x1CB2,85,250,87);
move(-8.44,78.10,-27.64);  object(0x1CB2,0,180,350);
move(-2.06,5.70,1.80);  object(0x01D5,0,0,355);
move(0.62,-2.84,0.00);  object(0x01D5,0,0,355);
move(0.42,-2.84,0.00);  object(0x01D5,0,0,355);
move(20.49,-223.71,28.22);  object(0x1CB2,180,270,173);
teleport(-461.20,791.57, 11.28)

