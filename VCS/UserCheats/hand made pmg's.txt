http://z10.invisionfree.com/CheatSync_Forums/index.php?showtopic=2448

#cheat monster Caddy
//By: Dudek13l or Dudek12l
setint(0x8C73B30, 184); //Car Id
setchar(0x8C73B30+0x24, 0, 80, 255, 255); //Color 1
setchar(0x8C73B30+0x28, 0, 80, 255, 255); //Color 2
setfloat(0x9360658, 1.5, 1.5); //wheel size
setfloat(0x962f3e0+0x6c, 0.75); //Traction multiplier
setfloat(0x962f3e0+0xc4, 0.85); //Traction loss
setfloat(0x962f3e0+0x70, 0.5); //Traction bias
setchar(0x962f3e0+0x5c, 'R', 'P', 6); // Drive type / Engine type / Gears
setfloat(0x962f3e0+0x7c, 0.47); //Suspension Upper limit
setfloat(0x962f3e0+0x80, -1); //Suspension lower limit
setfloat(0x962f3e0+0x78, 0.4); //Suspension Damping level
setfloat(0x962f3e0+0x74, 4); //Suspension force level
setfloat(0x962f3e0+0x84, 0.5); //Suspension Bias
setfloat(0x962f3e0+0x88, 0.3); //Anti-dive Multiplier
setfloat(0x962f3e0+0x68, 30); //Steering Lock
setfloat(0x962f3e0+0xbc, 1500); //Vehilce Mass
setfloat(0x962f3e0+0xc0, 1500); //Turn Mass
setfloat(0x962f3e0+0xa0, 0); //Centre of Mass - X
setfloat(0x962f3e0+0xa4, 0); //Centre of Mass - Y
setfloat(0x962f3e0+0xa8, -1.5); //Centre of Mass - Z
setchar(0x09569B94, 0, 80, 255); // Exhuast
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,  0, 80, 255);}
teleport( 268.31, -174.98, 11.50);
off()

#cheat ???? Pcj 600
//By: Dudek13l or Dudek12l
//im not sure about this one
setint(0x8C73B30, 212); //Car Id
setchar(0x8C73B30+0x24, 255, 255, 255, 255); //Color 1
setchar(0x8C73B30+0x28, 0, 80, 255, 255); //Color 2
setfloat(0x9630c60+0x6c, 0.75); //Traction multiplier
setfloat(0x9630c60+0xc4, 0.85); //Traction loss
setfloat(0x9630c60+0x70, 0.5); //Traction bias
setchar(0x9630c60+0x5c, 'R', 'P', 6); // Drive type / Engine type / Gears
setfloat(0x9630c60+0x7c, 0.47); //Suspension Upper limit
setfloat(0x9630c60+0x80, -1); //Suspension lower limit
setfloat(0x9630c60+0x78, 0.4); //Suspension Damping level
setfloat(0x9630c60+0x74, 4); //Suspension force level
setfloat(0x9630c60+0x84, 0.5); //Suspension Bias
setfloat(0x9630c60+0x88, 0.3); //Anti-dive Multiplier
setfloat(0x9630c60+0x68, 30); //Steering Lock
setfloat(0x9630c60+0xbc, 1500); //Vehilce Mass
setfloat(0x9630c60+0xc0, 1500); //Turn Mass
setfloat(0x9630c60+0xa0, 0); //Centre of Mass - X
setfloat(0x9630c60+0xa4, 0); //Centre of Mass - Y
setfloat(0x9630c60+0xa8, -1.5); //Centre of Mass - Z
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, 150, 150, 150);}
setchar(0x9569c90,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x80,  0x3f,  0x00,  0x00,  0x00,  0x00,  0xff,  0x20,  0x00); 
setchar(0x09569B94, 255, 80, 0);
teleport( 268.31, -174.98, 11.50);
off()

#cheat Hot Rod O for boost at hotel place
//By: Dudek13l or Dudek12l
setint(0x8C73B30, 267 ); //Car Id
setchar(0x8C73B30+0x24, 0, 0, 90, 255); //Color 1
setchar(0x8C73B30+0x28, 90, 0, 0, 255); //Color 2
setshort(0x98a3450, 1, 'H','o','t',' ','R','o','d', 0);
setfloat(0x936E038, 1.2, 1.2); //wheel size
setfloat(0x9633d20+0x6c, 0.85); //Traction multiplier
setfloat(0x9633d20+0xc4, 0.75); //Traction loss
setfloat(0x9633d20+0x70, 0.5); //Traction bias
setchar(0x9633d20+0x5c, 'R', 'D', 6); // Drive type / Engine type / Gears
setfloat(0x9633d20+0x7c, 0.47); //Suspension Upper limit
setfloat(0x9633d20+0x80, -0.3); //Suspension lower limit
setfloat(0x9633d20+0x78, 3); //Suspension Damping level
setfloat(0x9633d20+0x74, 2); //Suspension force level
setfloat(0x9633d20+0x84, 0.6); //Suspension Bias
setfloat(0x9633d20+0x88, 0.3); //Anti-dive Multiplier
setfloat(0x9633d20+0x68, 30); //Steering Lock
setfloat(0x9633d20+0xbc, 1500); //Vehilce Mass
setfloat(0x9633d20+0xc0, 1500); //Turn Mass
setfloat(0x9633d20+0xa0, 0); //Centre of Mass - X
setfloat(0x9633d20+0xa4, -0.4); //Centre of Mass - Y
setfloat(0x9633d20+0xa8, -1.0); //Centre of Mass - Z
setchar(0x09569B94, 255, 80, 0); // Exhuast
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,  0, 0, 0255);}
//Fire Burn Out Smoke
setchar(0x9569c90,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x80,  0x3f,  0x00,  0x00,  0x00,  0x00,  0xff,  0x20,  0x00);
// Nos to vcs 2
static On;
static going;
if(buttons & CTRL_CIRCLE &&!On) {
  On = 1;
}
if(On) {
static timepassed;
static init;
if(!init)
{
  lasttime = getchar( 0x08bb3b41 );
  init = 1;
}
if( lasttime != getchar( 0x08bb3b41 ) )
{
  timepassed++;
  lasttime = getchar( 0x08bb3b41 );
}
if( timepassed < 30 )
{
   going = 1;
}
else {
 On = 0;
 timepassed = 0;
 going = 0;
}
}
if(going) {
  setchar(0x09569B90,   0x10);
  setchar(0x09569B94,   255,   80,   0);
  speed = 0.7;                                                                                  
  thrust = speed * 0.00344;      
  if(buttons & CTRL_CROSS) {                            
     setfloat(pcar + 0x0140,   getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);          
     setfloat(pcar + 0x0144,   getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust);
  }
}
else
{
  setchar(0x09569B90,   0x4);
  setchar(0x09569B94,  255,   80,   0);
} 


#cheat Racing Cheetah O for boost
//By: Dudek13l or Dudek12l
//For cars
setint(0x8C73B30, 172); //Car Id
setchar(0x8C73B30+0x24, 150, 0, 150, 255); //Color 1
setchar(0x8C73B30+0x28, 0, 0, 0, 255); //Color 2
setfloat(0x935E6D8, 1.3, 1.3); //wheel size
setfloat(0x962ea40+0x6c, 0.85); //Traction multiplier
setfloat(0x962ea40+0xc4, 0.75); //Traction loss
setfloat(0x962ea40+0x70, 0.5); //Traction bias
setchar(0x962ea40+0x5c, 'R', 'P', 6); // Drive type / Engine type / Gears
setfloat(0x962ea40+0x7c, 0.35); //Suspension Upper limit
setfloat(0x962ea40+0x80, -3); //Suspension lower limit
setfloat(0x962ea40+0x78, 3); //Suspension Damping level
setfloat(0x962ea40+0x74, 2); //Suspension force level
setfloat(0x962ea40+0x84, 0.6); //Suspension Bias
setfloat(0x962ea40+0x88, 0.3); //Anti-dive Multiplier
setfloat(0x962ea40+0x68, 30); //Steering Lock
setfloat(0x962ea40+0xbc, 1500); //Vehilce Mass
setfloat(0x962ea40+0xc0, 1500); //Turn Mass
setfloat(0x962ea40+0xa0, 0); //Centre of Mass - X
setfloat(0x962ea40+0xa4, 0); //Centre of Mass - Y
setfloat(0x962ea40+0xa8, 1.0); //Centre of Mass - Z
setchar(0x09569B94, 255, 80, 0); // Exhuast
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,  255, 0, 0);}
//Fire Burn Out Smoke
setchar(0x9569c90,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x80,  0x3f,  0x00,  0x00,  0x00,  0x00,  0xff,  0x20,  0x00);
// Nos to vcs 2
static On;
static going;
if(buttons & CTRL_CIRCLE &&!On) {
  On = 1;
}
if(On) {
static timepassed;
static init;
if(!init)
{
  lasttime = getchar( 0x08bb3b41 );
  init = 1;
}
if( lasttime != getchar( 0x08bb3b41 ) )
{
  timepassed++;
  lasttime = getchar( 0x08bb3b41 );
}
if( timepassed < 30 )
{
   going = 1;
}
else {
 On = 0;
 timepassed = 0;
 going = 0;
}
}
if(going) {
  setchar(0x09569B90,   0x10);
  setchar(0x09569B94,   255,   80,   0);
  speed = 0.7;                                                                                  
  thrust = speed * 0.00344;      
  if(buttons & CTRL_CROSS) {                            
     setfloat(pcar + 0x0140,   getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);          
     setfloat(pcar + 0x0144,   getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust);
  }
}
else
{
  setchar(0x09569B90,   0x4);
  setchar(0x09569B94,  255,   80,   0);
} 


#cheat hummer
//By: Dudek13l or Dudek12l
setint(0x8C73B30, 267 ); //Car Id
setchar(0x8C73B30+0x24, 0, 0, 90, 255); //Color 1
setchar(0x8C73B30+0x28, 90, 0, 0, 255); //Color 2
setfloat(0x93647F8, 1.5, 1.5); //wheel size
setfloat(0x96309c0+0x6c, 0.85); //Traction multiplier
setfloat(0x96309c0+0xc4, 0.75); //Traction loss
setfloat(0x96309c0+0x70, 0.5); //Traction bias
setchar(0x96309c0+0x5c, 'R', 'D', 6); // Drive type / Engine type / Gears
setfloat(0x96309c0+0x7c, 0.47); //Suspension Upper limit
setfloat(0x96309c0+0x80, -0.4); //Suspension lower limit
setfloat(0x96309c0+0x78, 3); //Suspension Damping level
setfloat(0x96309c0+0x74, 4); //Suspension force level
setfloat(0x96309c0+0x84, 0.6); //Suspension Bias
setfloat(0x96309c0+0x88, 0.3); //Anti-dive Multiplier
setfloat(0x96309c0+0x68, 30); //Steering Lock
setfloat(0x96309c0+0xbc, 1500); //Vehilce Mass
setfloat(0x96309c0+0xc0, 1500); //Turn Mass
setfloat(0x96309c0+0xa0, 0); //Centre of Mass - X
setfloat(0x96309c0+0xa4, -0.4); //Centre of Mass - Y
setfloat(0x96309c0+0xa8, -1.5); //Centre of Mass - Z
setchar(0x09569B94, 255, 80, 0); // Exhuast
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,  0, 0, 0255);}
teleport( 268.31, -174.98, 11.50);
off()

#cheat cool Bulldozer
//By: Dudek13l or Dudek12l
setint(0x8C73B30, 181); //Car Id
setchar(0x8C73B30+0x24, 0, 80, 80, 255); //Color 1
setchar(0x8C73B30+0x28, 80, 0, 80, 255); //Color 2
setfloat(0x935FE78, 2.7, 2.7); //wheel size
setfloat(0x962ef80+0x6c, 0.85); //Traction multiplier
setfloat(0x962ef80+0xc4, 0.75); //Traction loss
setfloat(0x962ef80+0x70, 0.5); //Traction bias
setchar(0x962ef80+0x5c, 'R', 'E', 6); // Drive type / Engine type / Gears
setfloat(0x962ef80+0x7c, 0.47); //Suspension Upper limit
setfloat(0x962ef80+0x80, -0.4); //Suspension lower limit
setfloat(0x962ef80+0x78, 3); //Suspension Damping level
setfloat(0x962ef80+0x74, 4); //Suspension force level
setfloat(0x962ef80+0x84, 0.6); //Suspension Bias
setfloat(0x962ef80+0x88, 0.3); //Anti-dive Multiplier
setfloat(0x962ef80+0x68, 30); //Steering Lock
setfloat(0x962ef80+0xbc, 1500); //Vehilce Mass
setfloat(0x962ef80+0xc0, 1500); //Turn Mass
setfloat(0x962ef80+0xa0, 0); //Centre of Mass - X
setfloat(0x962ef80+0xa4, 0); //Centre of Mass - Y
setfloat(0x962ef80+0xa8, -1.5); //Centre of Mass - Z
setchar(0x09569B94, 255, 80, 0); // Exhuast
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,  0, 80, 80);}
teleport( 268.31, -174.98, 11.50);
off()


#cheat PCJ 600 press right, left ,up
//By: Dudek13l or Dudek12l
setint(0x8C73B30, 212); //Car Id
setchar(0x8C73B30+0x24, 255, 255, 255, 255); //Color 1
setchar(0x8C73B30+0x28, 0, 0, 0, 255); //Color 2
setfloat(0x9630c60+0x6c, 0.85); //Traction multiplier
setfloat(0x9630c60+0xc4, 0.75); //Traction loss
setfloat(0x9630c60+0x70, 0.5); //Traction bias
setchar(0x9630c60+0x5c, 'R', 'P', 6); // Drive type / Engine type / Gears
setfloat(0x9630c60+0x7c, 0.35); //Suspension Upper limit
setfloat(0x9630c60+0x80, -0.15); //Suspension lower limit
setfloat(0x9630c60+0x78, 0.4); //Suspension Damping level
setfloat(0x9630c60+0x74, 4); //Suspension force level
setfloat(0x9630c60+0x84, 0.5); //Suspension Bias
setfloat(0x9630c60+0x88, 0.3); //Anti-dive Multiplier
setfloat(0x9630c60+0x68, 30); //Steering Lock
setfloat(0x9630c60+0xbc, 3000); //Vehilce Mass
setfloat(0x9630c60+0xc0, 1500); //Turn Mass
setfloat(0x9630c60+0xa0, 0); //Centre of Mass - X
setfloat(0x9630c60+0xa4, -.2); //Centre of Mass - Y
setfloat(0x9630c60+0xa8, 0); //Centre of Mass - Z
setchar(0x09569B94, 255, 80, 0); // Exhuast
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon,  255, 0, 0);}
//Change Car colors right, left, up
//Right=blue
//Left=Green
//Up=Red
if (buttons & CTRL_RIGHT)
{
//blue
setchar(pcar+0x224, 0, 0, 255);
setchar(pcar+0x228, 0, 0, 0);
}
if (buttons & CTRL_LEFT)
{
//green
setchar(pcar+0x224, 0, 255, 0);
setchar(pcar+0x228, 0, 0, 0);
}
if (buttons & CTRL_UP)
{
//red
setchar(pcar+0x224, 255, 0, 0);
setchar(pcar+0x228, 0, 0, 0);
}


#cheat awesome Bf injection
//By: Dudek13l or Dudek12l
//For cars
setint(0x8C73B30, 255); //Car Id
setchar(0x8C73B30+0x24, 255, 0, 0, 255); //Color 1
setchar(0x8C73B30+0x28, 0, 0, 0, 255); //Color 2
setfloat(0x936C0B8, 2.6, 2.6); //wheel size
setfloat(0x96333c0+0x6c, 0.85); //Traction multiplier
setfloat(0x96333c0+0xc4, 0.75); //Traction loss
setfloat(0x96333c0+0x70, 0.5); //Traction bias
setchar(0x96333c0+0x5c, 'R', 'P', 6); // Drive type / Engine type / Gears
setfloat(0x96333c0+0x7c, 0.47); //Suspension Upper limit
setfloat(0x96333c0+0x80, -1); //Suspension lower limit
setfloat(0x96333c0+0x78, 0.4); //Suspension Damping level
setfloat(0x96333c0+0x74, 4); //Suspension force level
setfloat(0x96333c0+0x84, 0.5); //Suspension Bias
setfloat(0x96333c0+0x88, 0.3); //Anti-dive Multiplier
setfloat(0x96333c0+0x68, 30); //Steering Lock
setfloat(0x96333c0+0xbc, 1500); //Vehilce Mass
setfloat(0x96333c0+0xc0, 1500); //Turn Mass
setfloat(0x96333c0+0xa0, 0); //Centre of Mass - X
setfloat(0x96333c0+0xa4, 0); //Centre of Mass - Y
setfloat(0x96333c0+0xa8, 0); //Centre of Mass - Z
setchar(0x09569B94, 255, 80, 0); // Exhuast
setchar(0x09569B90, 0x20)
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,  255, 0, 0);}

#cheat Ganster sabre
//Dudek13l or Dudek12l
//For cars
setint(0x8C73B30, 265); //Car Id
setchar(0x8C73B30+0x24, 255, 0, 0, 255); //Color 1
setchar(0x8C73B30+0x28, 255, 80, 0, 255); //Color 2
setfloat(0x936DAF8, 1.7, 1.7); //wheel size
setfloat(0x9633880+0x6c, 0.85); //Traction multiplier
setfloat(0x9633880+0xc4, 0.75); //Traction loss
setfloat(0x9633880+0x70, 0.5); //Traction bias
setchar(0x9633880+0x5c, 'R', 'P', 6); // Drive type / Engine type / Gears
setfloat(0x9633880+0x7c, 0.47); //Suspension Upper limit
setfloat(0x9633880+0x80, -1); //Suspension lower limit
setfloat(0x9633880+0x78, 0.4); //Suspension Damping level
setfloat(0x9633880+0x74, 4); //Suspension force level
setfloat(0x9633880+0x84, 0.5); //Suspension Bias
setfloat(0x9633880+0x88, 0.3); //Anti-dive Multiplier
setfloat(0x9633880+0x68, 30); //Steering Lock
setfloat(0x9633880+0xbc, 1500); //Vehilce Mass
setfloat(0x9633880+0xc0, 1500); //Turn Mass
setfloat(0x9633880+0xa0, 0); //Centre of Mass - X
setfloat(0x9633880+0xa4, 0); //Centre of Mass - Y
setfloat(0x9633880+0xa8, -1); //Centre of Mass - Z
setchar(0x09569B94, 0, 80, 255); // Exhuast
setchar(0x09569B90, 0x10)
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,  255, 0, 0);}
teleport( 268.31, -174.98, 11.50);
off()

#cheat monsta
//By: Dudek13l or Dudek12l
//For cars
setint(0x8C73B30, 276); //Car Id
setchar(0x8C73B30+0x24, 0, 0, 255, 255); //Color 1
setchar(0x8C73B30+0x28, 0, 0, 0, 255); //Color 2
setshort(0x98a33c8, 1, 'M','o','n','s','t','a', 0);
setfloat(0x936F7D8, 1.7, 1.7); //wheel size
setfloat(0x9634800+0x6c, 0.85); //Traction multiplier
setfloat(0x9634800+0xc4, 0.75); //Traction loss
setfloat(0x9634800+0x70, 0.5); //Traction bias
setchar(0x9634800+0x5c, 'R', 'P', 6); // Drive type / Engine type / Gears
setfloat(0x9634800+0x7c, 0.47); //Suspension Upper limit
setfloat(0x9634800+0x80, -1); //Suspension lower limit
setfloat(0x9634800+0x78, 0.4); //Suspension Damping level
setfloat(0x9634800+0x74, 4); //Suspension force level
setfloat(0x9634800+0x84, 0.6); //Suspension Bias
setfloat(0x9634800+0x88, 0.3); //Anti-dive Multiplier
setfloat(0x9634800+0x68, 30); //Steering Lock
setfloat(0x9634800+0xbc, 1500); //Vehilce Mass
setfloat(0x9634800+0xc0, 1500); //Turn Mass
setfloat(0x9634800+0xa0, 0); //Centre of Mass - X
setfloat(0x9634800+0xa4, 0); //Centre of Mass - Y
setfloat(0x9634800+0xa8, 1.0); //Centre of Mass - Z
setchar(0x09569B94, 255, 80, 0); // Exhuast
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,  255, 0, 0);}
//Fire Burn Out Smoke
setchar(0x9569c90,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x80,  0x3f,  0x00,  0x00,  0x00,  0x00,  0xff,  0x20,  0x00);
// Nos to vcs 2
static On;
static going;
if(buttons & CTRL_CIRCLE &&!On) {
  On = 1;
}
if(On) {
static timepassed;
static init;
if(!init)
{
  lasttime = getchar( 0x08bb3b41 );
  init = 1;
}
if( lasttime != getchar( 0x08bb3b41 ) )
{
  timepassed++;
  lasttime = getchar( 0x08bb3b41 );
}
if( timepassed < 30 )
{
   going = 1;
}
else {
 On = 0;
 timepassed = 0;
 going = 0;
}
}
if(going) {
  setchar(0x09569B90,   0x10);
  setchar(0x09569B94,   255,   80,   0);
  speed = 0.7;                                                                                  
  thrust = speed * 0.00344;      
  if(buttons & CTRL_CROSS) {                            
     setfloat(pcar + 0x0140,   getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);          
     setfloat(pcar + 0x0144,   getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust);
  }
}
else
{
  setchar(0x09569B90,   0x4);
  setchar(0x09569B94,  255,   80,   0);
} 


#cheat TEST
//By: Dudek13l or Dudek12l
//For cars
setint(0x8C73B30, 276); //Car Id
setchar(0x8C73B30+0x24, 255, 0, 255, 255); //Color 1
setchar(0x8C73B30+0x28, 0, 0, 0, 255); //Color 2
setshort(0x98a33c8, 1, 'T','E','S','T', 0);
setfloat(0x936F7D8, 2.5, 2.5); //wheel size
setfloat(0x9634800+0x6c, 0.85); //Traction multiplier
setfloat(0x9634800+0xc4, 0.75); //Traction loss
setfloat(0x9634800+0x70, 0.5); //Traction bias
setchar(0x9634800+0x5c, 'R', 'P', 6); // Drive type / Engine type / Gears
setfloat(0x9634800+0x7c, 0.47); //Suspension Upper limit
setfloat(0x9634800+0x80, -3); //Suspension lower limit
setfloat(0x9634800+0x78, 0.4); //Suspension Damping level
setfloat(0x9634800+0x74, 4); //Suspension force level
setfloat(0x9634800+0x84, 0.6); //Suspension Bias
setfloat(0x9634800+0x88, 0.3); //Anti-dive Multiplier
setfloat(0x9634800+0x68, 30); //Steering Lock
setfloat(0x9634800+0xbc, 1500); //Vehilce Mass
setfloat(0x9634800+0xc0, 1500); //Turn Mass
setfloat(0x9634800+0xa0, 0); //Centre of Mass - X
setfloat(0x9634800+0xa4, 0); //Centre of Mass - Y
setfloat(0x9634800+0xa8, 1.0); //Centre of Mass - Z
setchar(0x09569B94, 255, 80, 0); // Exhuast
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,  255, 0, 0);}
//Fire Burn Out Smoke
setchar(0x9569c90,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x80,  0x3f,  0x00,  0x00,  0x00,  0x00,  0xff,  0x20,  0x00);
// Nos to vcs 2
static On;
static going;
if(buttons & CTRL_CIRCLE &&!On) {
  On = 1;
}
if(On) {
static timepassed;
static init;
if(!init)
{
  lasttime = getchar( 0x08bb3b41 );
  init = 1;
}
if( lasttime != getchar( 0x08bb3b41 ) )
{
  timepassed++;
  lasttime = getchar( 0x08bb3b41 );
}
if( timepassed < 30 )
{
   going = 1;
}
else {
 On = 0;
 timepassed = 0;
 going = 0;
}
}
if(going) {
  setchar(0x09569B90,   0x20);
  setchar(0x09569B94,   255,   80,   0);
  speed = 1.0;                                                                                  
  thrust = speed * 0.00344;      
  if(buttons & CTRL_CROSS) {                            
     setfloat(pcar + 0x0140,   getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);          
     setfloat(pcar + 0x0144,   getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust);
  }
}
else
{
  setchar(0x09569B90,   0x10);
  setchar(0x09569B94,  255,   80,   0);
} 

#cheat Pimp
//By: Dudek13l or Dudek12l
//For cars
setint(0x8C73B30, 186); //Car Id
setchar(0x8C73B30+0x24, 255, 0, 255, 255); //Color 1
setchar(0x8C73B30+0x28, 0, 0, 0, 255); //Color 2
setshort(0x98a2edc, 1, 'P','i','m','p', 0);
setfloat(0x9360B98, 1.2, 1.2); //wheel size
setfloat(0x962f4c0+0x6c, 0.85); //Traction multiplier
setfloat(0x962f4c0+0xc4, 0.75); //Traction loss
setfloat(0x962f4c0+0x70, 0.5); //Traction bias
setchar(0x962f4c0+0x5c, 'R', 'P', 6); // Drive type / Engine type / Gears
setfloat(0x962f4c0+0x7c, 0.47); //Suspension Upper limit
setfloat(0x962f4c0+0x80, -0.3); //Suspension lower limit
setfloat(0x962f4c0+0x78, 3); //Suspension Damping level
setfloat(0x962f4c0+0x74, 2); //Suspension force level
setfloat(0x962f4c0+0x84, 0.6); //Suspension Bias
setfloat(0x962f4c0+0x88, 0.3); //Anti-dive Multiplier
setfloat(0x962f4c0+0x68, 30); //Steering Lock
setfloat(0x962f4c0+0xbc, 1500); //Vehilce Mass
setfloat(0x962f4c0+0xc0, 1500); //Turn Mass
setfloat(0x962f4c0+0xa0, 0); //Centre of Mass - X
setfloat(0x962f4c0+0xa4, -0.4); //Centre of Mass - Y
setfloat(0x962f4c0+0xa8, -1.0); //Centre of Mass - Z
setchar(0x09569B94, 255, 80, 0); // Exhuast
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,  255, 0, 0);}
//Fire Burn Out Smoke
setchar(0x9569c90,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x80,  0x3f,  0x00,  0x00,  0x00,  0x00,  0xff,  0x20,  0x00);
// Nos to vcs 2
static On;
static going;
if(buttons & CTRL_CIRCLE &&!On) {
  On = 1;
}
if(On) {
static timepassed;
static init;
if(!init)
{
  lasttime = getchar( 0x08bb3b41 );
  init = 1;
}
if( lasttime != getchar( 0x08bb3b41 ) )
{
  timepassed++;
  lasttime = getchar( 0x08bb3b41 );
}
if( timepassed < 30 )
{
   going = 1;
}
else {
 On = 0;
 timepassed = 0;
 going = 0;
}
}
if(going) {
  setchar(0x09569B90,   0x10);
  setchar(0x09569B94,   255,   80,   0);
  speed = 0.7;                                                                                  
  thrust = speed * 0.00344;      
  if(buttons & CTRL_CROSS) {                            
     setfloat(pcar + 0x0140,   getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);          
     setfloat(pcar + 0x0144,   getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust);
  }
}
else
{
  setchar(0x09569B90,   0x4);
  setchar(0x09569B94,  255,   80,   0);
} 

