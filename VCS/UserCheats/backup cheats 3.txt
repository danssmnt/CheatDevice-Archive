#cheat No Peds
static counter;
player = getint(0x08bc8170);//address of pplayer 
if(counter++ % 30 == 0) {
     for(p=0x098b4a40; p <= 0x098ecf90; p+=0xd10) {
             if(p != player) setchar(p + 0x4c, 1);
     }
}

#cheat The rich by.m.s
moveto(-907.34,1099.31,75.46);  object(0x1CA8,0,0,90);
move(10.13,-0.00,0.00);  object(0x1CA8,0,0,90);
move(7.73,-7.86,0.00);  object(0x1CA8,0,0,181);
move(-0.19,-12.04,0.00);  object(0x1CA8,0,0,181);
move(-1.39,-49.91,0.00);  object(0x1CA8,0,0,181);
move(-0.28,-13.74,0.00);  object(0x1CA8,0,0,181);
move(-23.74,29.15,0.00);  object(0x1CA8,0,0,0);
move(-0.02,15.56,0.00);  object(0x1CA8,0,0,0);
move(0.06,15.65,0.00);  object(0x1CA8,0,0,0);
move(0.02,15.45,0.00);  object(0x1CA8,0,0,0);
move(26.63,-24.81,0.40);  object(0x1CE6,0,0,273);
move(-1.07,-23.85,0.00);  object(0x1CE6,0,0,273);
move(-6.16,-5.79,-0.70);  object(0x1CE4,0,0,0);
move(6.32,32.47,-0.30);  object(0x1D01,0,0,252);
move(-0.27,1.08,0.00);  object(0x1D01,0,0,239);
move(-0.16,-6.09,0.00);  object(0x1D01,0,0,305);
move(-0.45,-1.22,0.00);  object(0x1D01,0,0,324);
move(-0.12,-23.54,0.10);  object(0x1D01,0,0,314);
move(-0.82,-0.91,0.00);  object(0x1D01,0,0,327);
move(0.53,6.54,0.00);  object(0x1D01,0,0,294);
move(-0.40,1.22,-0.20);  object(0x1D01,0,0,258);
move(-6.60,-9.39,0.10);  object(0x1D4E,0,0,180);
move(-2.24,-0.00,0.00);  object(0x1D4E,0,0,180);
move(-1.30,4.99,-1.80);  object(0x1D06,0,0,311);
move(0.53,39.21,1.80);  object(0x1CF9,0,0,104);
move(0.01,3.40,0.00);  object(0x1CF9,0,0,69);
move(-1.97,-0.75,-0.60);  object(0x1D06,0,0,89);
move(0.05,-1.80,0.00);  object(0x1D06,0,0,89);
move(-0.04,0.90,0.00);  object(0x1D06,0,0,89);
move(-0.80,-0.02,0.00);  object(0x1D06,0,0,89);
move(1.14,2.87,1.00);  object(0x1CEA,0,0,124);
move(0.26,0.43,-0.40);  object(0x1D03,0,0,124);
move(-0.56,-0.83,0.00);  object(0x1D03,0,0,124);
move(2.67,-5.82,-0.10);  object(0x1D01,0,0,67);
move(-0.13,6.98,0.00);  object(0x1D01,0,0,146);
move(-3.15,-4.62,0.40);  object(0x1CFF,0,0,230);
move(0.26,1.04,0.10);  object(0x1CF2,0,0,295);
move(0.34,0.93,0.00);  object(0x1CEF,0,0,291);
move(0.03,-1.96,0.00);  object(0x1CEC,0,0,271);
move(0.09,2.57,0.00);  object(0x1D4F,80,0,294);
move(-0.96,-1.21,0.00);  object(0x1D14,0,0,297);
move(1.41,-46.30,-0.40);  object(0x1D4E,0,0,179);
move(-0.80,-0.08,0.00);  object(0x1D4E,0,0,179);
move(2.33,45.59,-0.20);  object(0x1D05,0,0,271);
move(0.04,0.80,0.00);  object(0x1D05,0,0,271);
move(-0.21,-0.01,0.40);  object(0x1CEE,0,0,301);
move(0.30,0.02,0.00);  object(0x1CEE,0,0,291);
move(-0.07,-0.41,0.00);  object(0x1CEE,0,0,236);
move(-0.17,-0.41,0.20);  object(0x1CEE,0,0,346);
move(0.40,0.03,0.00);  object(0x1CEE,0,0,6);
move(0.00,0.00,-0.10);  object(0x1CEE,0,0,6);
move(-0.50,-0.04,0.00);  object(0x1CEE,0,0,6);
move(0.00,0.00,-0.10);  object(0x1CEE,0,0,6);
move(-0.00,0.01,0.00);  object(0x1CEE,0,0,6);
move(0.01,0.71,0.00);  object(0x1CEE,0,0,16);
move(-0.01,-0.65,0.00);  object(0x1CEE,0,0,7);
move(-0.00,0.46,0.00);  object(0x1CEE,0,0,13);
move(-0.01,-0.28,0.00);  object(0x1CEE,0,0,10);
move(-0.55,0.77,0.00);  object(0x1CEE,0,0,18);
pspawn = 0x08E81290;
setint(pspawn,     275);
setfloat(pspawn + 4,     -906.16,    1020.91,    78.18,    275);
teleport(-896.05,  1050.85,  75.86);

#cheat Lamborghini Doors
// By Waterbottle & vettefan88
setfloat(pcar+0x450, 0, -1.2566371, 0);
setfloat(pcar+0x480, 0, -1.2566371, 0);
setfloat(pcar+0x4b0, 0, -1.2566371, 0);
setfloat(pcar+0x4e0, 0, -1.2566371, 0);

#cheat Departed Soul ver0.1
static obj;
pped = getint(0x08BA1D70);
if(!obj)
{
moveto(getfloat(pplayer+0x30),getfloat(pplayer+0x34),getfloat(pplayer+0x38) + 3);
obj = object(0x1C91,0,0,0);
}
else
{
setshort(obj + 0x56, 0x1C91);
selectobject(obj);
if(pped != 0)
{
if(press & CTRL_CIRCLE)
setfloat(pped + 0x0148, +1.5);
else
{
if(getfloat(pped + 0x0148) == 0)
{
if(getfloat(obj + 0x30) != getfloat(pped+0x30) || getfloat(obj + 0x34) != getfloat(pped+0x34))
setfloat(obj + 0x30, getfloat(pped + 0x30), getfloat(pped + 0x34), getfloat(pped + 0x38) + 3);
}
}
}
else
{
if(getfloat(obj + 0x30) != getfloat(pplayer+0x30) || getfloat(obj + 0x34) != getfloat(pplayer+0x34))
setfloat(obj + 0x30, getfloat(pplayer+0x30), getfloat(pplayer+0x34), getfloat(pplayer+0x38) + 3);
}
propagateobject();
}
#off
obj = 0;

--------------------------------------------------------------------------------
Mega Weapons Ver1.0
ロックオンできる武器は全部人を吹っ飛ばすことができます。

#cheat Mega Weapons Ver1.0
static A;
static B;
static damege;
level = 3;
pped = getint(0x08BA1D70);
if(pped != 0)
{
if(A == 0)
{
if(getchar(0x08BA1D6D) != 0)
{
damege = getchar(0x08BA1D6D);
A = 1;
}
}
else if(damege != getchar(0x08BA1D6D))
B = 1;
if(B == 1)
{
dx = getfloat(pped + 0x0030) - getfloat(pplayer + 0x0030);
dy = getfloat(pped + 0x0034) - getfloat(pplayer + 0x0034);
dz = getfloat(pped + 0x0038) - getfloat(pplayer + 0x0038);
setshort(pped + 0x01c8, 0x1020);
setfloat(pped + 0x0140, dx * 0.1 * level);
setfloat(pped + 0x0144, dy * 0.1 * level);
setfloat(pped + 0x0148, (fabs(dx) + fabs(dy)) * 0.01 + 0.1 * level);
A = B = 0;
}
}
else
A = B = 0;

#cheat In The Mendes house
pspawn = 0x08E81290;
setint(pspawn, 208);
setfloat(pspawn + 4, 22.28, 1150.19, -193.80, 270);
pspawn += 0x30;
teleport(29.04, 1153.41, -193.80);

#cheat VCN maverick spawn
pspawn = 0x08E81290;
setint(pspawn, 260);
setfloat(pspawn + 4, -469.28, 1123.50, 64.75, 0);
pspawn += 0x30;
teleport(-415.07, 1118.77, 52.06);

#cheat EASY ACTION
moveto(-846.61,563.14,11.36);  object(0x1CB2,90,255,251);
move(0.00,0.00,0.00);  object(0x1CB2,90,255,251);
move(-2.12,6.36,1.80);  object(0x1CB2,90,235,247);
move(-1.31,3.34,0.00);  object(0x1CB2,90,210,246);
move(-1.38,3.04,5.80);  object(0x1CB2,90,210,247);
move(-1.16,2.84,4.20);  object(0x1CB2,90,195,247);
move(-0.76,1.82,6.50);  object(0x1CB2,90,185,247);
move(-6.28,-2.42,0.00);  object(0x1CB2,90,185,250);
move(0.82,-1.85,-6.30);  object(0x1CB2,90,195,248);
move(12.42,5.03,0.00);  object(0x1CB2,90,195,248);
move(-1.10,1.55,6.20);  object(0x1CB2,90,185,247);
move(1.74,-3.82,-9.40);  object(0x1CB2,90,210,248);
move(-11.95,-4.85,0.00);  object(0x1CB2,90,210,248);
move(3.06,-7.54,-7.30);  object(0x1CB2,90,235,248);
move(11.44,5.35,0.30);  object(0x1CB2,90,235,248);
move(-9.51,-11.25,-1.90);  object(0x1CB2,90,255,251);
move(12.09,4.19,0.00);  object(0x1CB2,90,255,250);
move(3.95,-11.10,-1.30);  object(0x1CB2,90,270,250);
move(-6.22,-2.22,0.00);  object(0x1CB2,90,270,250);
move(-5.74,-2.05,0.00);  object(0x1CB2,90,270,250);
move(4.29,-11.47,1.40);  object(0x1CB2,90,285,250);
move(5.74,2.06,0.00);  object(0x1CB2,90,285,250);
move(6.02,2.16,0.00);  object(0x1CB2,90,285,250);
move(-9.03,-11.89,2.50);  object(0x1CB2,90,305,249);
move(0.00,0.00,0.00);  object(0x1CB2,90,305,249);
move(5.71,2.14,0.00);  object(0x1CB2,90,305,249);
move(5.97,2.29,0.00);  object(0x1CB2,90,305,249);
move(-3.23,-8.49,5.60);  object(0x1CB2,90,330,248);
move(5.53,2.33,0.00);  object(0x1CB2,90,330,248);
move(-11.47,-4.71,0.00);  object(0x1CB2,90,330,248);
move(1.42,-3.30,6.40);  object(0x1CB2,90,195,69);
move(0.00,0.00,0.00);  object(0x1CB2,90,195,69);
move(0.00,0.00,0.00);  object(0x1CB2,90,195,69);
move(5.88,2.27,0.00);  object(0x1CB2,90,195,69);
move(5.69,2.20,0.00);  object(0x1CB2,90,195,69);
move(-6.23,-1.12,-2.10);  object(0x1CB2,90,210,68);
move(6.80,-0.68,9.90);  object(0x1CB2,90,185,68);
move(-5.54,-2.54,0.00);  object(0x1CB2,90,185,68);
move(-5.57,-2.23,0.00);  object(0x1CB2,90,185,68);
move(-27.76,3.61,-21.90);  object(0x1CE9,0,0,192);
move(9.62,60.19,29.90);  object(0x1CAA,295,0,339);
move(0.00,0.00,0.00);  object(0x1CAA,295,0,339);
move(24.49,-63.46,4.00);  object(0x1CAA,295,0,157);
move(-25.93,27.69,-35.00);  object(0x1CAA,0,0,70);
move(26.96,9.66,0.00);  object(0x1CAA,0,0,250);
pspawn=0x08E81290;
setint(pspawn,230);
setfloat(pspawn + 4,-808.69,578.00,11.03,185);
pspawn+=0x30;
pspawn=0x08E81290;
setint(pspawn,205);
setfloat(pspawn + 4,-813.64,571.51,10.98,180);
pspawn+=0x30;
teleport(-817.65,581.12,12.41);

#cheat Sealand BASE
moveto(-1620.78,520.17,7.29);  object(0x1CD5,90,0,301);
move(9.50,16.34,0.00);  object(0x1CD5,90,0,300);
move(-19.04,11.04,0.00);  object(0x1CD5,90,0,300);
move(-9.78,-16.87,0.00);  object(0x1CD5,90,0,300);
move(-1.27,-0.08,10.80);  object(0x1CD5,90,0,298);
move(11.10,16.49,0.00);  object(0x1CD5,90,0,296);
move(-9.40,-16.95,0.00);  object(0x1CD5,90,0,295);
move(-1.51,0.46,-6.90);  object(0x1CD5,90,0,294);
move(20.46,-10.62,6.90);  object(0x1CD5,90,0,294);
move(10.05,16.37,0.10);  object(0x1CD5,90,0,301);
move(-5.17,2.90,0.60);  object(0x1CD5,0,0,300);
move(-14.01,8.04,0.00);  object(0x1CD5,0,0,300);
move(7.50,-4.30,0.00);  object(0x1CD5,0,0,300);
move(-3.44,-20.29,0.00);  object(0x1CD5,0,0,300);
move(1.99,3.47,0.00);  object(0x1CD5,0,0,300);
move(1.89,3.30,0.00);  object(0x1CD5,0,0,300);
move(2.29,3.99,0.00);  object(0x1CD5,0,0,300);
move(1.20,2.08,0.00);  object(0x1CD5,0,0,300);
move(-23.03,-5.34,0.00);  object(0x1CD5,0,0,300);
move(5.79,-2.52,0.00);  object(0x1CD5,0,0,300);
move(1.74,3.04,0.00);  object(0x1CD5,0,0,300);
move(2.39,4.16,0.00);  object(0x1CD5,0,0,300);
move(2.69,4.68,0.00);  object(0x1CD5,0,0,300);
move(1.15,1.99,0.00);  object(0x1CD5,0,0,300);
move(-4.80,2.76,0.00);  object(0x1CD5,0,0,300);
move(-2.44,-4.25,0.00);  object(0x1CD5,0,0,300);
move(-1.99,-3.47,0.00);  object(0x1CD5,0,0,300);
move(-1.59,-2.78,0.00);  object(0x1CD5,0,0,300);
move(7.45,13.95,0.00);  object(0x1CD5,0,0,298);
move(1.79,-12.40,3.80);  object(0x1D08,0,0,300);
move(-6.37,-10.98,-3.80);  object(0x1CD5,0,0,300);
move(-8.21,4.77,0.00);  object(0x1CD5,0,0,300);
move(2.61,4.50,0.00);  object(0x1CD5,0,0,300);
move(2.86,4.93,0.00);  object(0x1CD5,0,0,300);
move(-0.80,-1.38,0.00);  object(0x1CD5,0,0,300);
move(3.21,5.53,0.00);  object(0x1CD5,0,0,300);
move(2.61,4.50,0.00);  object(0x1CD5,0,0,300);
move(2.26,3.89,0.00);  object(0x1CD5,0,0,300);
move(8.57,-4.97,0.00);  object(0x1CD5,0,0,300);
move(8.03,-4.67,0.00);  object(0x1CD5,0,0,300);
move(-12.88,-22.13,0.00);  object(0x1CD5,0,0,300);
move(-3.90,31.61,8.90);  object(0x1CD5,90,0,303);
move(-12.74,-21.64,0.00);  object(0x1CD5,90,0,303);
move(21.33,-12.48,0.00);  object(0x1CD5,90,0,303);
move(13.00,21.93,0.00);  object(0x1CD5,90,0,302);
move(-19.66,-2.94,5.50);  object(0x1D08,0,0,302);
move(0.84,-15.40,-4.60);  object(0x1CD5,0,0,297);
move(-15.56,9.76,0.00);  object(0x1CD5,0,0,302);
move(8.14,-5.08,0.00);  object(0x1CD5,0,0,302);
move(2.39,4.86,0.00);  object(0x1CD5,0,0,301);
move(2.48,4.10,0.00);  object(0x1CD5,0,0,301);
move(2.48,4.11,0.00);  object(0x1CD5,0,0,301);
move(2.33,3.85,0.00);  object(0x1CD5,0,0,301);
move(2.07,3.42,0.00);  object(0x1CD5,0,0,301);
move(0.98,1.63,0.00);  object(0x1CD5,0,0,301);
move(-8.46,5.12,0.00);  object(0x1CD5,0,0,301);
move(-3.05,-5.05,0.00);  object(0x1CD5,0,0,301);
move(-2.48,-4.11,0.00);  object(0x1CD5,0,0,301);
move(-2.69,-4.45,0.00);  object(0x1CD5,0,0,301);
move(-2.28,-3.77,0.00);  object(0x1CD5,0,0,301);
move(16.70,-10.11,0.00);  object(0x1CD5,0,0,301);
move(2.33,3.85,0.00);  object(0x1CD5,0,0,301);
move(2.33,3.85,0.00);  object(0x1CD5,0,0,301);
move(2.48,4.11,0.00);  object(0x1CD5,0,0,301);
move(2.28,3.77,0.00);  object(0x1CD5,0,0,301);
move(1.14,1.88,0.00);  object(0x1CD5,0,0,301);
move(0.65,-13.20,-10.50);  object(0x1CD5,0,0,25);
move(0.00,0.00,0.70);  object(0x1CD5,0,0,25);
move(3.12,5.00,0.00);  object(0x1CD5,340,0,28);
move(3.44,4.34,1.70);  object(0x1CD5,0,0,295);
move(2.62,-1.25,0.00);  object(0x1CD5,0,0,295);
move(0.00,0.00,0.00);  object(0x1CD5,340,0,295);
move(-3.08,-7.19,-1.50);  object(0x1CD5,340,0,201);
move(-3.21,-8.47,3.30);  object(0x1CD5,340,0,201);
move(-2.87,-7.58,2.90);  object(0x1CD5,340,0,201);
move(-1.91,11.66,3.40);  object(0x1CD5,0,0,216);
move(3.19,4.41,0.00);  object(0x1CD5,0,0,216);
move(3.95,5.36,0.00);  object(0x1CD5,0,0,216);
move(-12.45,-18.02,0.00);  object(0x1CD5,0,0,214);
move(3.10,-5.33,-1.00);  object(0x1CD5,345,0,304);
move(2.92,-0.31,-1.10);  object(0x1CD5,0,30,297);
move(-0.92,-1.78,0.40);  object(0x1CD5,0,0,297);
move(14.35,28.49,3.20);  object(0x1CB4,0,0,284);
move(-3.48,-0.81,0.00);  object(0x1CD4,0,0,295);
move(1.49,4.72,-9.70);  object(0x1CD5,0,0,295);
move(-19.70,-0.39,4.00);  object(0x1CF8,0,0,286);
move(-18.29,-13.02,-0.50);  object(0x1CFA,0,0,245);
move(19.69,-8.16,1.90);  object(0x1C91,0,0,310);
move(1.90,1.92,0.00);  object(0x1C91,0,0,310);
move(-11.87,16.17,-1.80);  object(0x1D04,0,0,117);
move(3.93,-2.48,0.00);  object(0x1D04,0,0,117);
move(-2.19,-3.47,0.00);  object(0x1D04,0,0,117);
move(-4.84,3.05,0.00);  object(0x1D04,0,0,117);
move(20.46,-2.67,0.70);  object(0x01C5,0,0,123);
move(-3.13,-8.14,0.00);  object(0x01C5,0,0,123);
move(-11.94,23.37,-0.30);  object(0x1D4E,0,0,36);
move(2.55,-1.19,0.00);  object(0x1D4E,0,0,42);
move(-12.30,-20.20,-0.50);  object(0x1D06,0,0,217);
move(1.48,-0.61,0.00);  object(0x1D06,0,0,217);
move(7.27,-7.12,0.00);  object(0x1D06,0,0,215);
move(1.37,3.67,0.00);  object(0x1D06,0,0,215);
move(2.69,-4.99,2.20);  object(0x1D34,0,0,226);
move(-1.38,7.44,-2.20);  object(0x1D39,0,0,28);
move(-9.51,3.09,0.00);  object(0x1D39,0,0,32);
move(-1.00,-1.64,1.40);  object(0x1CEB,0,0,48);
move(0.00,0.00,0.60);  object(0x1CEB,0,0,48);
move(-0.44,0.58,0.00);  object(0x1CEB,0,0,48);
move(-0.04,0.08,-0.50);  object(0x1CEB,0,0,59);
move(1.19,-1.35,-0.20);  object(0x1CEA,0,0,59);
move(7.36,-6.83,0.00);  object(0x1CEB,0,0,39);
move(0.61,4.05,0.00);  object(0x1CEA,0,0,39);
move(13.38,18.72,-1.30);  object(0x1CF5,0,0,35);
move(-0.99,0.68,0.00);  object(0x1CF5,0,0,35);
move(-21.68,3.95,0.00);  object(0x1CFC,0,0,302);
move(-1.44,-2.28,0.00);  object(0x1CFC,0,0,302);
move(-4.87,-9.46,0.00);  object(0x1D4E,0,0,302);
move(7.71,-1.37,0.00);  object(0x1D4B,0,0,212);
move(-4.86,6.89,0.00);  object(0x1D15,0,0,305);
move(28.01,-2.70,0.00);  object(0x1D15,0,0,28);
move(-3.35,6.84,0.00);  object(0x1D03,0,0,17);
move(3.49,-1.17,0.00);  object(0x1D03,0,0,27);
move(-17.84,4.06,0.00);  object(0x1CFE,0,0,340);
move(-6.60,-3.98,0.00);  object(0x1CF9,0,0,115);
move(1.02,2.17,0.00);  object(0x1CF9,0,0,115);
move(22.64,-9.44,0.00);  object(0x1CF9,0,0,220);
move(-26.71,3.22,0.00);  object(0x1CF7,0,0,120);
teleport(-1622.34,523.13,24.99);

#cheat Versus Police Special Force
moveto(-1044.78,-856.21,10.57);  object(0x1CD5,0,0,334);
move(-1.11,8.01,0.00);  object(0x1CD5,0,0,5);
move(1.84,7.41,-1.00);  object(0x1CD5,15,0,31);
move(5.50,6.52,-1.80);  object(0x1CD5,15,0,48);
move(7.77,4.02,-1.90);  object(0x1CD5,5,0,83);
move(7.81,-0.97,-0.50);  object(0x1CD5,5,0,119);
move(-1.67,-4.82,4.90);  object(0x1CB2,0,270,105);
move(-6.27,9.58,1.30);  object(0x1CB2,0,270,71);
move(7.81,-2.21,0.00);  object(0x1CB2,0,270,168);
move(6.29,1.57,-0.10);  object(0x1CB2,0,270,173);
move(7.23,-4.38,0.00);  object(0x1CB2,0,270,176);
move(-3.28,-5.88,0.00);  object(0x1CB2,0,270,268);
move(0.07,-1.57,0.00);  object(0x1CB2,0,270,272);
move(9.91,4.86,0.00);  object(0x1CB2,0,270,0);
move(-0.55,6.51,0.00);  object(0x1CB2,0,270,0);
move(7.27,-6.40,0.00);  object(0x1CB2,0,270,0);
move(8.89,3.83,0.00);  object(0x1CB2,0,270,93);
move(0.22,-5.60,0.00);  object(0x1CB2,0,270,93);
move(0.25,-6.39,0.00);  object(0x1CB2,0,270,93);
move(-0.64,-6.03,0.20);  object(0x1CB2,0,270,93);
move(-10.16,4.95,0.00);  object(0x1CB2,0,270,7);
move(7.84,-8.17,0.00);  object(0x1CB2,0,270,90);
move(-50.96,-7.22,1.10);  object(0x1CB7,0,0,244);
move(0.19,-1.97,3.20);  object(0x1CD6,0,0,331);
move(-1.85,-0.97,3.70);  object(0x1CD6,0,0,330);
move(0.58,0.18,-3.40);  object(0x1C8E,0,0,331);
move(50.52,6.04,-7.30);  object(0x1CA4,0,0,15);
move(-1.36,0.62,1.30);  object(0x1CA4,0,0,1);
move(0.00,0.00,-2.00);  object(0x1CA4,0,0,1);
move(4.41,-0.05,0.00);  object(0x1CA4,0,0,1);
move(0.00,0.00,2.00);  object(0x1CA4,0,0,1);
move(2.06,0.08,-0.70);  object(0x1CA4,0,270,358);
move(0.50,2.08,-2.80);  object(0x1C92,0,270,118);
move(-2.25,0.40,0.10);  object(0x1C93,0,0,82);
move(-3.08,9.90,4.60);  object(0x1D1D,0,0,334);
move(8.53,27.81,0.50);  object(0x1D29,0,0,334);
move(-25.07,-13.85,-3.90);  object(0x1CE1,35,0,2);
move(1.86,-0.14,0.00);  object(0x1CE2,35,0,7);
move(2.41,-0.15,0.00);  object(0x1CE3,35,0,7);
move(2.83,-0.07,-0.10);  object(0x1CE4,35,0,3);
move(13.94,-26.31,1.40);  object(0x1CE5,270,270,88);
move(-0.64,-0.10,0.60);  object(0x1CE5,180,180,147);
move(0.00,0.00,-0.50);  object(0x1CE5,180,180,147);
move(0.14,0.15,-0.70);  object(0x1CE5,180,180,156);
move(-0.40,-0.21,0.70);  object(0x1CE5,180,235,158);
move(0.11,0.05,0.50);  object(0x1CE5,180,305,158);
move(-0.13,0.01,-0.70);  object(0x1CE5,180,305,158);
move(0.00,0.00,0.00);  object(0x1CE5,180,25,158);
move(-0.59,0.01,0.20);  object(0x1CE5,180,90,157);
move(-0.99,0.08,0.00);  object(0x1CE5,180,90,157);
move(-0.39,0.05,0.10);  object(0x1CE5,180,55,157);
move(-0.30,0.04,0.00);  object(0x1CE5,180,270,157);
move(1.64,46.21,1.20);  object(0x1D0D,180,180,327);
move(0.42,-45.56,-3.60);  object(0x1CF9,0,0,173);
moveto(-991.09,-841.41,5.07);  object(0x1C93,0,0,164);
move(0.28,1.30,1.10);  object(0x015C,270,350,63);
move(0.26,-1.27,-0.00);  object(0x015C,270,350,53);
move(0.41,-1.02,0.00);  object(0x015C,270,350,53);
move(-0.64,-0.18,0.10);  object(0x015C,270,350,57);
move(-0.53,1.61,0.00);  object(0x015C,270,350,57);
move(-0.44,1.33,0.00);  object(0x015E,270,350,57);
move(0.15,-2.27,0.00);  object(0x015F,270,350,57);
move(0.28,-0.85,0.00);  object(0x015F,270,350,57);
move(-0.63,2.10,0.00);  object(0x0160,270,350,61);
move(-0.04,-1.76,-5.40);  object(0x1CA8,90,180,341);
move(0.41,-0.65,6.10);  object(0x0169,0,0,244);
move(-0.54,1.40,0.00);  object(0x0169,0,0,244);
move(0.00,0.00,0.40);  object(0x015B,0,0,244);
move(0.39,-1.24,0.30);  object(0x0163,0,0,244);
move(-0.34,0.94,0.00);  object(0x0164,0,0,244);
move(-0.21,0.56,0.60);  object(0x0165,0,0,244);
move(0.00,0.00,-0.30);  object(0x0166,0,0,244);
move(-0.21,0.56,-0.50);  object(0x0167,0,0,244);
move(0.72,-1.87,-0.20);  object(0x0165,0,0,244);
move(0.00,0.00,1.00);  object(0x0163,0,0,244);
move(0.18,-0.47,0.00);  object(0x0162,0,0,244);
move(-0.36,0.93,0.00);  object(0x0165,0,0,244);
move(0.07,-0.19,-0.50);  object(0x0161,0,0,244);
move(0.36,-0.93,0.00);  object(0x0162,0,0,244);
move(0.00,0.00,-0.60);  object(0x0163,0,0,244);
move(-0.39,1.03,-0.30);  object(0x0164,0,0,244);
move(-0.43,1.12,-0.20);  object(0x0164,0,0,244);
move(0.64,-1.68,-0.30);  object(0x0164,0,0,244);
move(-0.29,0.75,0.20);  object(0x015F,0,0,244);
move(-0.38,1.05,-0.20);  object(0x015F,0,0,243);
move(1.22,-3.35,-0.50);  object(0x01C2,0,0,200);
move(1.44,-1.07,0.90);  object(0x01C1,345,0,157);
move(-4.58,7.02,-1.60);  object(0x01C4,345,0,283);
move(-1.72,0.64,0.90);  object(0x01C5,0,0,188);
move(-2.17,1.58,-0.10);  object(0x01C6,0,0,186);
move(5.62,-2.36,-0.60);  object(0x01C8,0,0,147);
move(6.56,1.21,0.00);  object(0x01D1,0,0,82);
move(-5.45,-1.05,0.00);  object(0x01BE,0,0,229);
move(3.31,2.40,0.40);  object(0x01BF,0,0,51);
move(0.45,-0.66,0.00);  object(0x01BB,0,0,51);
move(-0.72,-0.01,0.00);  object(0x01BB,0,0,51);
move(0.29,1.41,-0.10);  object(0x01BA,0,0,51);
move(-7.83,1.79,-1.10);  object(0x1C93,0,0,280);
move(0.41,2.17,0.00);  object(0x1C93,0,0,280);
move(0.00,0.00,0.00);  object(0x1C93,0,0,280);
move(-1.46,-2.28,1.40);  object(0x01D4,0,0,189);
move(0.76,-0.01,0.00);  object(0x01D4,0,0,188);
move(0.33,1.38,0.00);  object(0x01D4,0,0,190);
move(-1.00,0.00,0.00);  object(0x01D4,0,0,190);
move(2.09,-0.25,0.00);  object(0x01D4,0,0,190);
move(0.10,1.19,0.00);  object(0x01D4,0,0,193);
move(-0.90,0.05,0.00);  object(0x01D4,0,0,193);
move(-1.00,0.05,0.00);  object(0x01D4,0,0,193);
move(-8.16,-5.26,0.60);  object(0x01E0,0,20,98);
move(-0.11,-0.51,1.60);  object(0x01DA,350,0,16);
move(12.27,5.70,-3.00);  object(0x01FF,0,0,191);
move(-6.25,-0.70,0.60);  object(0x1CA7,0,355,182);
move(-1.72,0.06,0.00);  object(0x1CA7,0,355,183);
move(-1.25,0.31,0.00);  object(0x1CA7,0,355,183);
move(-0.89,-0.12,0.40);  object(0x1CA7,0,355,183);
moveto(-1002.19,-827.75,9.57);  object(0x1CEB,20,0,182);
move(-0.72,0.05,0.00);  object(0x1CEB,20,0,182);
move(-0.71,0.06,0.00);  object(0x1CEB,20,0,182);
move(0.04,-0.50,0.70);  object(0x1CEB,20,0,182);
move(0.62,-0.03,0.00);  object(0x1CEB,20,0,182);
move(0.62,-0.03,0.00);  object(0x1CEB,20,0,182);
move(-0.72,2.58,0.10);  object(0x1C93,340,0,358);
move(-17.25,-50.49,6.60);  object(0x1CD5,90,0,48);
move(3.91,3.46,0.00);  object(0x1CD5,90,0,48);
move(3.52,3.16,0.00);  object(0x1CD5,90,0,45);
move(3.52,3.46,0.00);  object(0x1CD5,90,0,45);
move(-3.75,3.86,0.00);  object(0x1CD5,90,0,47);
move(-3.57,3.78,0.00);  object(0x1CD5,90,0,47);
move(-3.64,3.85,0.00);  object(0x1CD5,90,0,47);
move(-3.57,3.78,0.00);  object(0x1CD5,90,0,47);
move(-3.50,3.71,0.00);  object(0x1CD5,90,0,47);
move(-3.37,3.56,0.00);  object(0x1CD5,90,0,47);
move(-2.96,3.13,0.00);  object(0x1CD5,90,0,47);
move(-3.56,-3.36,0.00);  object(0x1CD5,90,0,47);
move(-3.84,-3.24,0.00);  object(0x1CD5,90,0,50);
move(-1.57,-0.69,0.00);  object(0x1CD5,90,0,82);
move(1.17,-4.81,0.00);  object(0x1CD5,90,0,74);
move(1.57,-4.05,0.00);  object(0x1CD5,90,0,65);
move(16.15,-16.58,0.00);  object(0x1CD5,90,0,42);
move(-3.71,3.35,0.00);  object(0x1CD5,90,0,42);
move(-3.83,3.50,0.00);  object(0x1CD5,90,0,57);
move(-1.17,0.20,0.00);  object(0x1CD5,90,0,55);
move(-2.54,5.36,0.20);  object(0x1C8E,0,0,52);
move(3.27,0.32,0.00);  object(0x1CD5,0,0,322);
move(-4.30,6.64,0.00);  object(0x1CD5,90,0,223);
move(7.54,-8.76,0.00);  object(0x1CD5,90,0,234);
move(-7.34,12.55,-2.20);  object(0x1CD5,0,0,142);
move(3.97,3.37,0.00);  object(0x1CD5,0,0,142);
move(1.82,1.40,0.00);  object(0x1CD5,0,0,142);
move(9.41,-21.31,0.00);  object(0x1CD5,0,0,316);
move(0.00,0.00,0.00);  object(0x1CD5,0,0,316);
move(-5.57,5.97,0.00);  object(0x1CD5,0,0,324);
move(-2.28,3.11,0.00);  object(0x1CD5,0,0,324);
move(13.34,-6.67,0.00);  object(0x1CD5,0,0,223);
move(-2.74,3.99,-2.10);  object(0x1CD5,30,0,314);
move(-4.92,4.95,-4.00);  object(0x1CD5,30,0,315);
move(-4.78,1.37,5.00);  object(0x1CD6,0,30,225);
move(3.05,-3.09,2.50);  object(0x1CD6,0,30,226);
move(3.22,-3.16,2.40);  object(0x1CD6,0,30,224);
move(1.50,-1.47,1.30);  object(0x1CD6,0,30,224);
move(-13.53,17.63,-8.60);  object(0x1C93,0,0,49);
move(-0.53,-1.51,1.20);  object(0x015B,90,0,305);
move(0.43,0.47,0.00);  object(0x015C,90,0,314);
move(0.58,0.40,0.00);  object(0x015D,90,0,314);
move(0.40,0.30,0.00);  object(0x015D,90,0,314);
move(-1.85,-1.36,0.00);  object(0x015F,90,0,314);
move(2.58,2.07,0.00);  object(0x0161,90,0,314);
move(-0.96,0.29,0.70);  object(0x0163,0,0,314);
move(-0.50,-0.50,0.00);  object(0x0164,0,0,314);
move(-0.57,-0.55,0.00);  object(0x0165,0,0,311);
move(-0.62,-0.50,0.00);  object(0x0166,0,0,311);
move(0.54,0.44,-0.50);  object(0x0167,0,0,311);
move(0.24,0.34,1.10);  object(0x0168,0,0,331);
move(-0.68,-1.73,-1.40);  object(0x0170,0,0,327);
move(1.61,-3.54,-0.40);  object(0x01B4,0,0,174);
move(-3.24,1.59,0.00);  object(0x01BA,0,0,267);
move(1.08,0.85,0.00);  object(0x01BB,0,0,267);
move(9.10,-11.46,0.00);  object(0x01BA,0,0,96);
move(-8.79,13.38,0.50);  object(0x1D0E,0,270,136);
move(0.89,0.81,0.00);  object(0x1D0E,0,270,136);
move(6.38,-15.19,-12.80);  object(0x1CA8,270,180,164);
move(2.02,1.08,13.70);  object(0x1D0E,0,180,139);
move(-0.94,-0.92,0.00);  object(0x1D0E,0,180,139);
move(-1.08,-0.90,0.00);  object(0x1D0E,0,180,139);
move(-0.96,-0.92,0.00);  object(0x1D0E,0,180,138);
move(-0.97,-0.87,0.00);  object(0x1D0E,0,180,138);
move(11.32,-1.52,7.70);  object(0x1D0E,0,90,131);
move(-1.54,-1.72,0.00);  object(0x1D0E,0,90,224);
move(-1.73,1.66,0.00);  object(0x1D0E,0,90,224);
move(-1.71,1.65,0.00);  object(0x1D0E,0,90,227);
move(-1.59,1.82,0.00);  object(0x1D0E,0,90,244);
move(-0.26,8.99,0.80);  object(0x1CD5,0,180,51);
move(-0.79,-6.74,-2.20);  object(0x1D0E,0,270,53);
move(-6.36,-2.72,1.80);  object(0x1CD5,0,0,321);
move(4.77,-5.62,0.00);  object(0x1CD5,0,0,319);
move(4.51,-4.72,0.00);  object(0x1CD5,0,0,309);
move(6.79,-1.23,0.00);  object(0x1CD5,0,0,48);
move(-4.82,-0.47,0.00);  object(0x1CD5,0,0,311);
move(10.69,6.28,0.00);  object(0x1CD5,0,0,44);
move(-0.02,4.67,0.00);  object(0x1CD5,0,0,315);
move(-7.78,7.85,0.00);  object(0x1CD5,0,0,315);
move(-6.59,7.10,0.00);  object(0x1CD5,0,0,320);
move(-5.28,6.31,0.00);  object(0x1CD5,0,0,318);
move(-4.03,0.03,0.00);  object(0x1CD5,0,0,45);
move(-3.42,-3.32,0.00);  object(0x1CD5,0,0,45);
move(-2.13,-6.87,0.00);  object(0x1CD5,0,0,350);
move(3.81,-7.49,0.00);  object(0x1CD5,0,0,317);
move(1.00,0.52,0.00);  object(0x1CD5,0,0,317);
move(5.30,-7.41,0.00);  object(0x1CD5,0,0,314);
move(4.05,13.28,-3.20);  object(0x1CD5,30,0,317);
move(5.71,-6.04,4.80);  object(0x1CD5,30,0,317);
move(0.84,4.41,3.20);  object(0x1CD5,0,0,136);
move(-6.02,6.72,0.00);  object(0x1CD5,0,0,141);
move(-5.06,6.02,0.00);  object(0x1CD5,0,0,139);
move(-3.83,-0.14,0.00);  object(0x1CD5,0,0,48);
move(-4.74,-7.71,0.00);  object(0x1CD5,0,0,16);
move(1.42,-7.61,0.00);  object(0x1CD5,0,0,322);
move(6.99,-8.29,0.00);  object(0x1CD5,0,0,319);
move(7.61,-7.09,0.00);  object(0x1CD5,0,0,309);
move(5.52,-0.22,0.00);  object(0x1CD5,0,0,231);
move(6.40,10.69,-0.30);  object(0x1CD5,0,0,316);
move(-0.61,-3.03,0.00);  object(0x1CD5,0,0,350);
move(-1.08,-2.29,0.00);  object(0x1CD5,0,0,37);
move(1.72,0.02,0.00);  object(0x1CD5,0,0,223);
move(-18.73,11.59,-4.20);  object(0x1CD6,0,0,230);
move(-7.60,5.44,-1.50);  object(0x1C93,0,0,172);
move(0.45,-1.13,1.10);  object(0x0161,270,0,82);
move(-0.15,0.48,0.00);  object(0x0162,270,0,82);
move(0.61,-0.12,0.00);  object(0x0162,270,0,82);
move(-0.27,0.54,0.10);  object(0x0163,270,0,82);
move(-0.18,0.57,0.00);  object(0x0164,270,0,82);
move(-0.42,0.08,0.00);  object(0x0160,270,0,82);
move(-0.21,1.19,0.00);  object(0x0160,270,0,82);
move(0.54,-0.25,0.00);  object(0x015F,270,0,82);
move(1.16,1.24,0.20);  object(0x1CEA,0,0,137);
move(21.02,-16.72,3.60);  object(0x1CD5,0,0,316);
move(-20.57,17.35,-5.00);  object(0x1C93,0,0,50);
move(15.23,-18.80,5.00);  object(0x1CD5,0,0,316);
move(-2.41,-1.08,0.00);  object(0x1CD5,0,0,316);
move(-5.99,6.26,0.00);  object(0x1CD5,0,0,316);
moveto(-987.84,-876.62,12.86);  object(0x1C93,0,0,170);
move(-2.16,-0.40,-0.80);  object(0x1C93,0,0,170);
move(1.77,-2.19,0.60);  object(0x1C93,0,0,80);
move(-0.89,5.02,0.00);  object(0x1C93,0,0,80);
move(0.35,-1.97,-0.10);  object(0x1D39,0,0,80);
move(-1.35,-0.77,0.50);  object(0x1CF9,0,0,77);
move(0.00,0.00,0.00);  object(0x1CF9,0,0,77);
move(0.45,3.17,0.30);  object(0x1CD4,270,0,78);
move(-0.10,0.49,-0.40);  object(0x1CD4,270,0,78);
move(-0.12,0.59,-0.40);  object(0x1CD4,270,0,78);
move(-0.14,0.68,-0.50);  object(0x1CD4,270,0,78);
move(0.12,-0.59,0.00);  object(0x1CD4,270,0,78);
move(1.54,0.28,0.20);  object(0x1CD4,0,245,73);
move(-3.02,-0.57,0.00);  object(0x1CD4,0,245,74);
move(-4.86,-5.63,6.80);  object(0x1CD5,335,180,75);
move(-5.01,-1.32,2.30);  object(0x1CD6,30,180,73);
move(7.64,2.11,-9.40);  object(0x1CD6,335,180,75);
move(1.16,0.25,0.70);  object(0x1C93,25,180,258);
move(-5.95,-1.24,0.00);  object(0x1C93,90,180,162);
move(9.82,0.58,0.60);  object(0x1CC0,225,180,254);
move(-9.53,-2.86,6.10);  object(0x1C9F,25,180,257);
move(-0.33,1.46,0.00);  object(0x1C9F,25,180,257);
move(-0.33,1.46,0.00);  object(0x1C9F,25,180,257);
move(-0.38,0.92,-1.40);  object(0x1C9F,25,180,243);
move(0.59,-1.16,0.00);  object(0x1C9F,25,180,243);
move(1.23,-2.40,0.00);  object(0x1C9F,25,180,243);
move(-0.21,0.87,-0.10);  object(0x1C9F,25,180,256);
move(-0.90,-0.22,-1.60);  object(0x1C9F,25,180,256);
move(-0.31,1.26,0.00);  object(0x1C9F,25,180,256);
move(-0.38,1.55,0.00);  object(0x1C9F,25,180,256);
moveto(-1025.00,-901.80,15.13);  object(0x1CA9,0,0,228);
move(1.87,-2.09,0.00);  object(0x1CA9,0,0,228);
move(26.26,1.48,-0.50);  object(0x1D1C,0,355,131);
move(-10.45,-0.30,1.20);  object(0x1CB4,0,355,162);
move(30.75,50.35,0.00);  object(0x1CB4,0,355,15);
move(0.01,0.06,0.00);  object(0x1CB4,0,355,12);
move(0.00,0.00,0.00);  object(0x1CB4,0,355,12);
pspawn=0x08E81290;
setint(pspawn,275);
setfloat(pspawn + 4,-977.60,-866.54,13.16);
pspawn+=0x30;
teleport(-987.68,-849.96,7.83);

#cheat Car Color Changer
static counter;
static rotation;
static car;
static menu;
static stateIn;
static Start;
static R;
static G;
static B;
static R2;
static G2;
static B2;{
stateIn = 1;
car = pcar;
R = getchar(pcar + 0x224);
G = getchar(pcar + 0x225);
B = getchar(pcar + 0x226);
R2 = getchar(pcar + 0x228);
G2 = getchar(pcar + 0x229);
B2 = getchar(pcar + 0x22A);}
if(stateIn && getfloat(pcar + 0x140) == 0 && getfloat(pcar + 0x144) == 0){
Start = 1;
xRightHandVector = getfloat(pobj + 0x0000);
yRightHandVector = getfloat(pobj + 0x0004);
zRightHandVector = getfloat(pobj + 0x0008);
xForwardVector = getfloat(pobj + 0x0010);
yForwardVector = getfloat(pobj + 0x0014);
zForwardVector = getfloat(pobj + 0x0018);
xUpVector = getfloat(pobj + 0x0020);
yUpVector = getfloat(pobj + 0x0024);
zUpVector = getfloat(pobj + 0x0028);
xRotationalMomentum = getfloat(pobj + 0x0070);
yRotationalMomentum = getfloat(pobj + 0x0074);
zRotationalMomentum = getfloat(pobj + 0x0078);
xVelocity = getfloat(pobj + 0x0140);
yVelocity = getfloat(pobj + 0x0144);}
if(Start){
stateIn = 0;
setfloat(pobj + 0x0000, xRightHandVector);
setfloat(pobj + 0x0004, yRightHandVector);
setfloat(pobj + 0x0008, zRightHandVector);
setfloat(pobj + 0x0010, xForwardVector);
setfloat(pobj + 0x0014, yForwardVector);
setfloat(pobj + 0x0018, zForwardVector);
setfloat(pobj + 0x0020, xUpVector);
setfloat(pobj + 0x0024, yUpVector);
setfloat(pobj + 0x0028, zUpVector);
setfloat(pobj + 0x0070, xRotationalMomentum);
setfloat(pobj + 0x0074, yRotationalMomentum);
setfloat(pobj + 0x0078, zRotationalMomentum);
setfloat(pobj + 0x0140, 0, 0);
if( menu == 0 ){
int = R;
setshort( 0x08e90bd8, 1, 'R', ':', ' ', 0 );}
if( menu == 1 ){
int = G;
setshort( 0x08e90bd8, 1, 'G', ':', ' ', 0 );}
if( menu == 2 ){
int = B;
setshort( 0x08e90bd8, 1, 'B', ':', ' ', 0 );}
if( menu == 3 ){
int = R2;
setshort( 0x08e90bd8, 1, 'R', '2', ':', ' ', 0 );}
if( menu == 4 ){
int = G2;
setshort( 0x08e90bd8, 1, 'G', '2', ':', ' ', 0 );}
if( menu == 5 ){
int = B2;
setshort( 0x08e90bd8, 1, 'B', '2', ':', ' ', 0 );}
if(buttons & CTRL_LEFT){
if(menu == 0)
R--;
if(menu == 1)
G--;
if(menu == 2)
B--;
if(menu == 3)
R2--;
if(menu == 4)
G2--;
if(menu == 5)
B2--;}
if(buttons & CTRL_RIGHT){
if(menu == 0)
R++;
if(menu == 1)
G++;
if(menu == 2)
B++;
if(menu == 3)
R2++;
if(menu == 4)
G2++;
if(menu == 5)
B2++;}
if(press & CTRL_DOWN && menu < 5)
menu++;
if(press & CTRL_UP && menu > 0)
menu--;
setchar(pcar + 0x224, R, G, B);
setchar(pcar + 0x228, R2, G2, B2);}

#cheat Player Model Changer
setchar(0x08BAEDB8, '%', 'd', 0);
setchar(0x08BAEDC0, '%', 'd', 0);
static start;
if (!start)
{
value = 109;
start = 1;
money = getint(0x08E81290);
}
setint(0x08BDE55C, money, money);
setint(0x08BDE55C, value, value);
if (buttons & CTRL_LTRIGGER && pressfast & CTRL_LEFT)
{
value = value - 1;
}
if (buttons & CTRL_LTRIGGER && pressfast & CTRL_RIGHT)
{
value = value + 1;
}
if (buttons & CTRL_RTRIGGER)
{
setchar(pplayer + 0x56, value);
setchar(pplayer + 0x58, value);
}

#cheat Drive On Water
if (getfloat(pcar+0x38)<getfloat(0x96C96B0)+0.8)
{
   static speed;
   //set the car ontop of the water
   setfloat(pcar+0x38,  getfloat(0x96C96B0)+0.8);
   setfloat(pcar+0x8,  0);
   setfloat(pcar+0x18,  0);
   setfloat(pcar+0x20,  0,  0,  0);
   setfloat(pcar+0x148,  0);
   //hand brake
   if(buttons & CTRL_RTRIGGER)
   {
   speed*=0.9;
   handb = 2.5;
   } else handb = 1;
   //rotate the vehicle
   if(speed > 0.1)
           setfloat(pcar+0x78,  -0.015 * xstick * handb);
   else if(speed < -0.1)
           setfloat(pcar+0x78,  0.015 * xstick * handb);
   //accelerte
   if(buttons & CTRL_CROSS)
   {
   if(speed < 0)
           speed += 0.02;
   if(speed < 0.7)
           speed += 0.02;
   }
   else
   if(buttons & CTRL_SQUARE)
   {
   if(speed > 0)
           speed -= 0.02;
   if(speed > -0.5)
           speed -= 0.02;
   }
   else speed *= 0.95;
   //add speed to car
   setfloat(pcar+0x140,  -getfloat(pcar+4)*speed);
   setfloat(pcar+0x144,  getfloat(pcar)*speed);
}

#cheat chikanogotei
teleport(29.04, 1153.41, -193.80);

#cheat Robot
moveto(-914.93,-1413.19,12.36); object(0x028E,0,0,23);
move(9.87,-4.14,0.00); object(0x028E,0,0,23);
move(1.67,1.91,2.40); object(0x01C5,0,90,23);
move(0.00,0.00,1.90); object(0x01C5,0,90,23);
move(0.00,0.00,2.00); object(0x01C5,0,90,23);
move(0.00,0.00,2.10); object(0x01C5,0,90,23);
move(0.00,0.00,1.80); object(0x01C5,0,90,23);
move(-11.25,4.72,-7.80); object(0x01C5,0,90,198);
move(0.00,0.00,2.00); object(0x01C5,0,90,198);
move(0.00,0.00,2.00); object(0x01C5,0,90,198);
move(0.00,0.00,1.90); object(0x01C5,0,90,198);
move(0.00,0.00,1.60); object(0x01C5,0,90,198);
move(9.87,-4.14,0.30); object(0x01C5,0,90,198);
move(0.00,0.00,-2.00); object(0x01C5,0,90,198);
move(0.00,0.00,-2.00); object(0x01C5,0,90,198);
move(0.00,0.00,-2.10); object(0x01C5,0,90,198);
move(0.00,0.00,-1.80); object(0x01C5,0,90,198);
move(-8.48,3.56,0.00); object(0x01C5,0,90,23);
move(0.00,0.00,2.20); object(0x01C5,0,90,23);
move(0.00,0.00,2.20); object(0x01C5,0,90,23);
move(0.00,0.00,1.90); object(0x01C5,0,90,23);
move(0.00,0.00,1.40); object(0x01C5,0,90,23);
move(0.00,0.00,0.40); object(0x01C5,0,90,23);
move(-1.29,0.54,0.00); object(0x01C5,0,90,23);
move(5.37,-2.33,0.00); object(0x1CD5,0,0,114);
move(0.01,-0.04,4.90); object(0x1CD5,230,0,25);
move(-1.42,-3.10,0.90); object(0x1CD5,90,0,25);
move(4.32,1.80,5.30); object(0x01C5,0,35,25);
move(0.64,-0.29,1.00); object(0x01C5,0,35,25);
move(-6.23,2.96,-0.80); object(0x01C5,0,325,25);
move(-0.73,0.33,1.20); object(0x01C5,0,325,25);
move(-2.64,1.21,-7.60); object(0x01A4,0,290,25);
move(-0.47,-0.08,-7.50); object(0x01A4,0,270,106);
move(-0.11,-0.39,0.50); object(0x01A4,0,20,106);
move(10.38,-4.30,13.40); object(0x01A4,0,70,26);
move(1.83,-1.87,-7.00); object(0x01A4,0,90,299);
move(0.16,0.22,-6.50); object(0x01A4,0,20,111);
move(-7.87,0.70,14.50); object(0x01C5,0,50,111);
move(1.01,-0.39,0.00); object(0x01C5,0,310,291);
move(1.22,0.92,0.70); object(0x01C5,0,0,291);
move(-2.52,1.17,0.00); object(0x01C5,0,0,111);
move(1.61,-0.84,0.00); object(0x01C5,180,0,111);
move(-0.75,0.29,0.00); object(0x01C5,180,0,111);
move(-0.16,-1.71,-1.40); object(0x01C5,150,0,204);
move(-1.65,-3.40,-5.80); object(0x1CD6,130,0,208);
move(-1.75,9.19,-0.70); object(0x1CD6,0,0,293);
move(10.41,-4.65,0.00); object(0x1CD6,0,0,293);
move(-4.04,5.02,-4.50); object(0x1CD6,50,0,23);
move(-4.05,-2.43,10.80); object(0x1CD6,90,0,295);
move(2.98,-2.64,-0.40); object(0x1CD4,155,0,293);
move(-2.78,1.16,0.00); object(0x1CD4,200,0,292);
move(2.89,0.04,0.00); object(0x1CD4,0,0,202);
move(-1.76,0.72,0.00); object(0x1CD4,0,0,202);
move(-0.28,0.11,0.00); object(0x1CD4,0,0,202);
teleport(-922.46, -1427.92, 11.88);

#cheat Teleport to Robot
teleport(-922.46, -1427.92, 11.88);

#cheat Dodo Cars
if (buttons & CTRL_CROSS){
boost = 1.0;
thrust = boost * 0.00333;
setfloat(pcar + 0x0140, getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);
setfloat(pcar + 0x0144, getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust);
setfloat(pcar + 0x0148, getfloat(pcar + 0x0148) + getfloat(pcar + 0x0018) * thrust);
if (getshort(pcar + 0x0058) >= 202 && getshort(pcar + 0x0058) <= 210)
setfloat(pcar + 0x0078, -0.03 * xstick);}
speed = sqrt(getfloat(pcar + 0x140) * getfloat(pcar + 0x140) + getfloat(pcar +
0x144) * getfloat(pcar + 0x144));
if(speed>0.50){
if(!(buttons & CTRL_SQUARE) && buttons & CTRL_CROSS){
thrust = 0.00333;
setfloat(pcar+0x70,  ystick * getfloat(pcar) / 32);
setfloat(pcar+0x74,  ystick * getfloat(pcar+4) / 32);
setfloat(pcar+0x78, -xstick / 8);
setfloat(pcar + 0x0140,  getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * (0.1*thrust));
setfloat(pcar + 0x0144,  getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * (0.1*thrust));
setfloat(pcar + 0x0148,  getfloat(pcar + 0x0148) + getfloat(pcar + 0x0018) * (4*thrust));
if(ystick){
Xdeg = getfloat(pcar) * -10 * ystick;
Ydeg = getfloat(pcar+4) * -10 * ystick;}
else Ydeg = Xdeg = 0;}}

#cheat The Rich
moveto(-852.12,-1018.70,20.48);  object(0x1D39,0,0,265);
move(1.10,1.78,-0.00);  object(0x1D05,0,0,314);
move(-0.66,-4.07,-0.10);  object(0x1D01,0,0,226);
move(0.74,4.11,0.50);  object(0x1CFF,0,0,39);
move(-0.79,-4.86,-0.10);  object(0x1CEA,0,0,62);
move(0.74,1.78,-0.30);  object(0x1D14,0,0,62);
move(-0.03,-0.70,0.00);  object(0x1D14,0,0,72);
move(0.43,0.08,0.00);  object(0x1D14,0,0,72);
move(-0.56,1.62,0.00);  object(0x1D14,0,0,72);
move(0.10,-2.51,0.00);  object(0x1D14,0,0,72);
move(0.42,0.48,0.00);  object(0x1D14,0,0,292);
move(0.06,1.40,0.00);  object(0x1D14,0,0,292);
move(-0.09,-2.30,0.00);  object(0x1D14,0,0,292);
move(0.22,4.19,0.00);  object(0x1D14,0,0,292);
move(0.31,-2.31,0.00);  object(0x1D14,0,0,292);
move(-0.37,0.82,0.00);  object(0x1D14,0,0,197);
move(0.03,0.70,0.00);  object(0x1D14,0,0,197);
move(-0.12,-2.90,0.00);  object(0x1D14,0,0,197);
move(0.82,0.57,0.00);  object(0x1D14,0,0,197);
move(-0.19,2.61,0.00);  object(0x1D14,0,0,197);
move(0.06,-0.90,0.00);  object(0x1D14,0,0,237);
move(0.06,1.40,0.00);  object(0x1D14,0,0,237);
move(-0.16,-3.80,0.00);  object(0x1D14,0,0,237);
move(0.54,1.08,0.00);  object(0x1D14,0,0,237);
move(-0.67,-1.67,0.00);  object(0x1D14,0,0,237);
move(0.09,2.10,0.00);  object(0x1D14,0,0,237);
move(-1.07,1.98,0.00);  object(0x1D14,0,0,239);
move(0.25,-0.62,0.00);  object(0x1D14,0,0,239);
move(-0.06,-0.80,0.00);  object(0x1D14,0,0,239);
move(0.54,-0.84,0.00);  object(0x1D14,0,0,239);
move(0.00,0.00,0.10);  object(0x1D14,0,0,239);
move(-0.51,1.24,0.00);  object(0x1D14,0,0,239);
move(-0.13,-1.80,0.00);  object(0x1D14,0,0,239);
move(0.07,-0.41,0.00);  object(0x1D14,0,0,239);
move(1.24,0.01,-0.10);  object(0x1D14,0,0,239);
move(0.30,-0.02,0.00);  object(0x1D14,0,0,239);
move(-0.08,-1.10,0.00);  object(0x1D14,0,0,239;
move(-1.83,-2.71,0.00);  object(0x1CF8,0,0,302
move(-0.53,9.61,0.00);  object(0x1D06,0,0,302);
move(-0.24,-0.29,1.00);  object(0x1CEC,0,0,212);
move(0.32,0.31,0.00);  object(0x1CF2,0,0,212);
move(0.16,0.47,0.00);  object(0x1CF2,0,0,212);
move(-1.50,-3.17,0.70);  object(0x0169,0,0,258);
move(0.01,-1.02,0.00);  object(0x0167,0,0,273;
move(-0.05,2.24,0.00);  object(0x015C,0,0,258;
move(0.16,-3.74,0.00);  object(0x015E,0,0,264);
move(-6.74,9.26,-2.30);  object(0x1CAE,225,0,275);
pspawn = 0x08E81290;
setint(pspawn,     263);
setfloat(pspawn + 4,     -856.95,     -1034.45,     24.48,     90);
pspawn += 0x30;
setint(pspawn,     212);
setfloat(pspawn + 4,     -857.90,     -1003.41,     24.45,     90);
pspawn += 0x30;
setint(pspawn,     208);
setfloat(pspawn + 4,     -850.05,     -1023.77,     21.48,     270);
pspawn += 0x30;
teleport(-847.88,  -1018.53,  21.48);

#cheat by ak from best MOD verβ
moveto(-1691.41,10.62,10.87);  object(0x1CD5,270,0,0);
move(-10.53,-5.13,-2.90);  object(0x1CA8,0,180,270);
move(-7.70,0.05,0.00);  object(0x1CA8,0,180,270);
move(-10.48,5.03,2.90);  object(0x1CD5,270,0,359);
move(-2.55,7.84,-3.00);  object(0x1CA8,0,180,0);
move(-0.06,7.80,0.00);  object(0x1CA8,0,180,0);
move(2.45,13.02,3.00);  object(0x1CD5,270,0,0);
move(10.43,-0.09,-2.90);  object(0x1CA8,180,0,90);
move(7.90,-0.02,0.00);  object(0x1CA8,180,0,90);
move(10.49,-5.12,2.90);  object(0x1CD5,90,0,0);
move(11.09,5.13,-3.90);  object(0x1CA8,0,0,271);
move(-0.16,-33.80,0.00);  object(0x1CA8,0,0,271);
move(-10.84,10.89,-5.60);  object(0x1CD5,0,0,180);
move(0.00,12.40,0.00);  object(0x1CD5,0,0,180);
move(0.00,-6.20,0.00);  object(0x1CD5,0,0,0);
move(-0.04,-11.80,13.40);  object(0x1CD5,270,0,0);
move(0.00,28.60,0.00);  object(0x1CD5,270,0,0);
move(-28.90,-0.00,0.00);  object(0x1CD5,270,0,0);
move(0.20,-28.60,0.00);  object(0x1CD5,270,0,0);
move(28.70,5.30,5.60);  object(0x1CD5,180,0,0);
move(0.00,11.20,0.00);  object(0x1CD5,180,0,0);
move(0.00,1.60,0.00);  object(0x1CD5,180,0,0);
move(-29.52,-0.01,-0.20);  object(0x1CD5,180,0,0);
move(0.01,-12.70,0.00);  object(0x1CD5,180,0,0);
move(-0.01,5.50,0.00);  object(0x1CD5,180,0,0);
move(21.35,15.51,0.10);  object(0x1CD5,180,0,90);
move(-12.60,0.06,0.00);  object(0x1CD5,180,0,90);
move(5.90,-0.03,0.00);  object(0x1CD5,180,0,90);
move(6.57,-29.34,0.10);  object(0x1CD5,180,0,270);
move(-12.40,-0.00,0.00);  object(0x1CD5,180,0,270);
move(4.60,0.00,0.00);  object(0x1CD5,180,0,270);
move(11.34,18.79,-0.10);  object(0x1CA8,180,270,0);
move(0.14,-13.10,0.00);  object(0x1CA8,180,270,0);
move(-9.50,-1.61,0.00);  object(0x1CA8,180,270,270);
move(-9.51,6.59,0.00);  object(0x1CA8,180,270,180);
move(-0.15,13.20,0.00);  object(0x1CA8,180,270,180);
move(9.46,1.00,0.00);  object(0x1CA8,180,270,270);
move(3.07,-16.03,0.00);  object(0x1CD6,90,0,270);
move(-5.20,-0.02,0.00);  object(0x1CD6,90,0,270);
move(-5.00,-0.02,0.00);  object(0x1CD6,90,0,270);
move(-0.80,-0.00,0.00);  object(0x1CD6,90,0,270);
move(-0.02,5.22,0.00);  object(0x1CD6,90,0,270);
move(5.20,0.02,0.00);  object(0x1CD6,90,0,270);
move(5.80,0.03,0.00);  object(0x1CD6,90,0,270);
move(-1.20,-0.01,0.00);  object(0x1CD6,90,0,270);
move(-0.03,6.90,0.00);  object(0x1CD6,90,0,270);
move(-5.00,-0.02,0.00);  object(0x1CD6,90,0,270);
move(-4.80,-0.02,0.00);  object(0x1CD6,90,0,270);
move(11.03,0.14,0.00);  object(0x1CD6,90,0,270);
move(-0.00,-3.70,0.00);  object(0x1CD6,90,0,270);
move(-5.20,0.00,0.00);  object(0x1CD6,90,0,270);
move(-3.10,-2.10,0.00);  object(0x1CD6,90,0,180);
move(2.50,-0.00,0.00);  object(0x1CD6,90,0,180);
move(0.00,-3.83,0.00);  object(0x1CD6,90,0,180);
move(-4.65,-6.40,-5.16);  object(0x1CD6,90,0,90);
move(-0.03,5.20,0.00);  object(0x1CD6,90,0,90);
move(-0.03,5.20,0.00);  object(0x1CD6,90,0,90);
move(-0.02,5.10,0.00);  object(0x1CD6,90,0,90);
move(-0.02,3.80,0.00);  object(0x1CD6,90,0,90);
move(5.18,0.03,0.00);  object(0x1CD6,90,0,90);
move(0.03,-5.20,0.00);  object(0x1CD6,90,0,90);
move(0.03,-5.20,0.00);  object(0x1CD6,90,0,90);
move(0.01,-5.09,0.00);  object(0x1CD6,90,0,90);
move(0.03,-4.00,0.00);  object(0x1CD6,90,0,90);
move(4.96,0.03,0.00);  object(0x1CD6,90,0,90);
move(-0.03,5.10,0.00);  object(0x1CD6,90,0,90);
move(-0.03,5.20,0.00);  object(0x1CD6,90,0,90);
move(-0.03,5.20,0.00);  object(0x1CD6,90,0,90);
move(-0.02,3.80,0.00);  object(0x1CD6,90,0,90);
move(4.84,0.03,0.00);  object(0x1CD6,90,0,90);
move(0.03,-5.10,0.00);  object(0x1CD6,90,0,90);
move(0.03,-5.20,0.00);  object(0x1CD6,90,0,90);
move(0.03,-5.20,0.00);  object(0x1CD6,90,0,90);
move(0.02,-3.90,0.00);  object(0x1CD6,90,0,90);
move(1.16,9.54,-4.00);  object(0x1CA8,90,60,90);
move(4.86,14.25,-4.00);  object(0x1D0E,90,0,90);
move(-3.52,-5.10,-1.10);  object(0x1CA8,0,270,0);
move(-0.59,-2.60,1.40);  object(0x1CA8,270,60,90);
move(0.81,0.00,-0.00);  object(0x1CA8,270,60,90);
move(0.02,-6.60,3.70);  object(0x1CA8,270,60,90);
move(-6.43,-8.88,3.90);  object(0x1CA8,0,270,90);
move(0.04,-3.60,0.00);  object(0x1CA8,0,270,90);
move(6.30,5.98,-9.00);  object(0x1CA8,0,270,359);
move(-3.99,17.74,9.04);  object(0x1CF5,0,0,0);
move(-1.80,0.01,0.00);  object(0x1CF5,0,0,0);
move(-1.80,0.01,0.00);  object(0x1CF5,0,0,0);
move(-1.80,0.01,0.00);  object(0x1CF5,0,0,0);
move(-1.90,0.01,0.00);  object(0x1CF5,0,0,0);
move(-1.90,0.01,0.00);  object(0x1CF5,0,0,0);
move(-1.90,0.01,0.00);  object(0x1CF5,0,0,0);
move(-1.90,0.01,0.00);  object(0x1CF5,0,0,0);
move(-1.90,0.01,0.00);  object(0x1CF5,0,0,0);
move(-1.90,0.01,0.00);  object(0x1CF5,0,0,0);
move(-1.45,-21.14,0.00);  object(0x1D06,0,0,270);
move(-0.02,1.50,0.00);  object(0x1D06,0,0,270);
move(-0.02,1.50,0.00);  object(0x1D06,0,0,270);
move(-0.26,0.30,1.30);  object(0x1CEB,0,0,90);
move(0.01,-0.80,0.00);  object(0x1CEB,0,0,90);
move(0.01,-0.80,0.00);  object(0x1CEB,0,0,90);
move(0.01,-0.80,0.00);  object(0x1CEB,0,0,90);
move(0.00,0.00,0.60);  object(0x1CEB,0,0,90);
move(-0.01,0.80,0.00);  object(0x1CEB,0,0,90);
move(-0.01,0.80,0.00);  object(0x1CEB,0,0,90);
move(-0.01,0.80,0.00);  object(0x1CEB,0,0,90);
move(0.00,0.00,0.60);  object(0x1CEB,0,0,90);
move(0.01,-0.80,0.00);  object(0x1CEB,0,0,90);
move(0.01,-0.81,0.00);  object(0x1CEB,0,0,89);
move(0.01,-0.80,0.00);  object(0x1CEB,0,0,89);
move(0.02,-1.40,-1.50);  object(0x1CC9,0,0,74);
move(-0.01,0.72,0.30);  object(0x1CEA,0,0,90);
move(0.00,0.00,0.60);  object(0x1CEA,0,0,90);
move(0.00,0.00,0.60);  object(0x1CEA,0,0,90);
move(19.67,14.36,-1.70);  object(0x01A4,0,0,270);
move(0.03,-3.99,0.00);  object(0x01A4,0,0,270);
move(0.04,-4.00,0.00);  object(0x01A4,0,0,270);
move(-19.59,-1.54,-0.80);  object(0x1D4E,0,0,270);
move(0.00,2.30,0.00);  object(0x1D4E,0,0,270);
move(0.00,2.30,0.00);  object(0x1D4E,0,0,270);
move(0.00,2.30,0.00);  object(0x1D4E,0,0,270);
move(7.41,4.51,1.50);  object(0x1CA8,0,0,270);
move(16.35,-15.77,0.00);  object(0x1CE4,0,0,90);
move(0.00,0.00,0.00);  object(0x1CE4,0,0,90);
move(0.07,5.40,0.00);  object(0x1CE3,0,0,90);
move(-0.02,4.90,0.00);  object(0x1CE2,0,0,90);
move(-0.02,4.50,0.00);  object(0x1CE1,0,0,90);
move(-16.18,-12.38,0.00);  object(0x1CA8,0,0,0);
move(3.39,6.62,-1.40);  object(0x1D00,0,0,0);
move(0.26,-2.99,0.00);  object(0x1D00,0,0,0);
move(0.02,-2.51,0.00);  object(0x1D00,0,0,0);
move(4.35,-0.04,0.00);  object(0x1D00,0,0,0);
move(-0.01,2.40,0.00);  object(0x1D00,0,0,0);
move(-0.01,3.10,0.00);  object(0x1D00,0,0,0);
move(-2.21,-9.48,0.00);  object(0x1D06,0,0,180);
move(0.00,-1.80,-0.10);  object(0x1CF7,0,0,180);
move(0.10,1.83,0.90);  object(0x1D05,0,0,180);
moveto(-1683.59,36.80,1.34);  object(0x1CD5,0,0,269);
move(0.38,-29.50,0.00);  object(0x1CD5,0,0,269);
pspawn = 0x08E81290;
setint(pspawn, 275);
setfloat(pspawn + 4, -1704.68, 21.53, 21.31, 0);
pspawn += 0x30;
teleport(-1720.58, -310.07, 14.67);

#cheat Media Attention Meter
setshort(0x08bb41ac,  1);
setint(0x089bb648,  0);
setint(0x089bb65c,  0);
setint(0x089bb66c,  0);
#off
setshort(0x08bb41ac,  0);
setint(0x089bb648,  0x450100db);
setint(0x089bb65c,  0x450100d6);
setint(0x089bb66c,  0x144000d2);

#cheat Pop out Police Random Cars
for(p=0x098edcc0; p <= 0x099019a0; p+=0x820) {
setchar(p+0x267, 0x75);}

#cheat Vic of Fire
setchar(0x08be3a20, 1);
setfloat(0x08be3a30, getfloat(pobj+0x30), getfloat(pobj+0x34), getfloat(pobj+0x38));

#cheat Pop out Police Random Cars
for(p=0x098edcc0; p <= 0x099019a0; p+=0x820) {
setchar(p+0x267, 0x75);}

#cheat All Peds Invincible
player = getint(0x08bc8170);//address of pplayer
for(i=0; 0x098b4a40+i<=0x098ecf90; i+=0xd10) {
if(0x098b4a40 + i != player) setfloat(0x098b4a40 + i + 0x4e4, 150);
}

#cheat Mery X'mas!
moveto(-430.77,775.60,10.07);  object(0x1D5A,0,0,113);
move(-4.06,-4.60,9.30);  object(0x1CBA,0,0,113);
move(2.78,6.53,0.00);  object(0x1CBA,0,0,113);
move(-0.28,-1.81,-10.70);  object(0x1CC8,0,0,113);
move(0.86,9.32,5.00);  object(0x1CD0,0,270,25);
move(-2.34,-5.09,0.00);  object(0x1CD0,0,270,25);
move(-2.21,-4.82,0.00);  object(0x1CD0,0,270,25);
move(-2.05,-4.45,0.00);  object(0x1CD0,0,270,25);
move(-2.34,-0.22,0.00);  object(0x1CD0,0,270,293);
move(5.81,-2.43,0.00);  object(0x1CD0,0,270,293);
move(5.54,-2.31,0.00);  object(0x1CD0,0,270,293);
move(9.67,11.49,0.00);  object(0x1CD0,0,270,202);
move(-1.92,-4.72,0.00);  object(0x1CD0,0,270,202);
move(-2.07,-5.09,0.00);  object(0x1CD0,0,270,202);
move(-2.07,-5.09,0.00);  object(0x1CD0,0,270,202);
move(8.21,37.52,0.00);  object(0x1CD0,0,270,353);
move(-17.92,-42.86,-1.00);  object(0x1CD0,0,270,1);
move(-6.77,30.08,-1.80);  object(0x0159,0,270,115);
move(-5.02,-10.90,0.00);  object(0x0159,0,270,115);
move(-3.22,-6.99,0.00);  object(0x0159,0,270,115);
move(11.30,24.52,0.00);  object(0x0159,0,270,115);
move(7.80,-1.22,0.00);  object(0x0159,0,270,196);
move(5.05,-2.66,0.00);  object(0x0159,0,270,196);
move(9.87,-4.02,0.00);  object(0x0159,0,270,196);
move(-3.54,12.78,8.00);  object(0x0159,0,270,307);
move(6.62,-18.82,-8.40);  object(0x0159,0,270,290);
move(-3.09,-6.86,0.00);  object(0x0159,0,270,290);
move(-3.86,-8.38,0.00);  object(0x0159,0,270,290);
move(-2.34,-6.28,0.00);  object(0x0159,0,270,290);
move(-7.61,1.13,0.00);  object(0x0159,0,270,27);
move(-8.31,2.95,0.00);  object(0x0159,0,270,25);
move(-6.18,2.84,0.00);  object(0x0159,0,270,25);
move(6.39,-10.67,7.70);  object(0x0159,0,270,111);
move(-16.43,23.89,-7.50);  object(0x01B8,0,0,198);
move(-1.61,0.54,0.00);  object(0x01B8,0,0,198);
move(-1.99,0.67,0.00);  object(0x01B8,0,0,198);
move(-1.71,0.57,0.00);  object(0x01B8,0,0,198);
move(-1.61,0.54,0.00);  object(0x01B8,0,0,198);
move(-1.42,0.48,0.00);  object(0x01B8,0,0,198);
move(-2.09,0.70,0.00);  object(0x01B8,0,0,198);
move(-1.80,0.60,0.00);  object(0x01B8,0,0,198);
move(-1.99,0.67,0.00);  object(0x01B8,0,0,198);
move(-2.28,0.76,0.00);  object(0x01B8,0,0,198);
move(18.59,-6.21,0.00);  object(0x01B8,0,0,198);
move(2.18,-0.73,0.00);  object(0x01B8,0,0,198);
move(1.71,-0.57,0.00);  object(0x01B8,0,0,198);
move(3.99,11.01,0.00);  object(0x01B8,0,0,198);
move(-1.42,0.48,0.00);  object(0x01B8,0,0,198);
move(-1.90,0.63,0.00);  object(0x01B8,0,0,198);
move(-2.09,0.70,0.00);  object(0x01B8,0,0,198);
move(-1.99,0.67,0.00);  object(0x01B8,0,0,198);
move(-2.18,0.73,0.00);  object(0x01B8,0,0,198);
move(-1.61,0.54,0.00);  object(0x01B8,0,0,198);
move(-1.90,0.63,0.00);  object(0x01B8,0,0,198);
move(-1.80,0.60,0.00);  object(0x01B8,0,0,198);
move(-1.90,0.63,0.00);  object(0x01B8,0,0,198);
move(-1.61,0.54,0.00);  object(0x01B8,0,0,198);
move(-1.61,0.54,0.00);  object(0x01B8,0,0,198);
move(-1.52,0.51,0.00);  object(0x01B8,0,0,198);
move(19.92,-6.65,0.00);  object(0x01B8,0,0,198);
teleport(-469.18, 789.13, 11.07);

#cheat teleport to X'mas
teleport(-774.46, 439.78, 66.48);

#cheat barracks
moveto(-1747.20,-263.81,14.95);  object(0x1CB2,0,0,270);
move(7.14,7.26,0.00);  object(0x1CB2,0,0,180);
move(-11.30,-0.09,0.00);  object(0x1CB2,0,0,180);
move(0.00,14.60,-0.00);  object(0x1CB2,0,0,180);
move(4.07,7.13,0.00);  object(0x1CB2,0,0,90);
move(-4.41,-8.93,-12.20);  object(0x1D45,0,0,90);
move(1.14,-18.79,11.00);  object(0x1D4E,0,0,270);
move(-0.02,2.30,0.00);  object(0x1D4E,0,0,270);
move(-0.02,2.30,0.00);  object(0x1D4E,0,0,270);
move(-0.02,2.30,0.00);  object(0x1D4E,0,0,270);
move(-0.02,2.30,0.00);  object(0x1D4E,0,0,270);
move(-0.02,2.30,0.00);  object(0x1D4E,0,0,270);
move(-0.02,2.30,0.00);  object(0x1D4E,0,0,270);
move(-0.02,2.30,0.00);  object(0x1D4E,0,0,270);
move(2.07,0.02,-0.20);  object(0x1CF5,0,0,270);
move(0.02,-2.40,0.00);  object(0x1CF5,0,0,270);
move(0.02,-2.30,0.00);  object(0x1CF5,0,0,270);
move(0.02,-2.20,0.00);  object(0x1CF5,0,0,270);
move(0.02,-2.40,0.00);  object(0x1CF5,0,0,270);
move(0.02,-2.30,0.00);  object(0x1CF5,0,0,270);
move(0.02,-2.20,0.00);  object(0x1CF5,0,0,270);
move(0.02,-2.20,0.00);  object(0x1CF5,0,0,270);
move(7.96,-0.07,0.10);  object(0x1D06,0,0,90);
move(-0.00,1.50,0.00);  object(0x1D06,0,0,90);
move(-0.00,1.50,0.00);  object(0x1D06,0,0,90);
move(-0.00,1.50,0.00);  object(0x1D06,0,0,90);
move(-0.00,1.50,0.00);  object(0x1D06,0,0,90);
move(-0.00,1.50,0.00);  object(0x1D06,0,0,90);
move(-0.00,1.50,0.00);  object(0x1D06,0,0,90);
move(-0.00,1.50,0.00);  object(0x1D06,0,0,90);
move(-0.00,1.50,0.00);  object(0x1D06,0,0,90);
move(-0.00,1.50,0.00);  object(0x1D06,0,0,90);
move(0.43,0.57,1.30);  object(0x1CB2,0,0,180);
move(-0.02,13.60,-1.40);  object(0x1CE7,0,0,270);
move(-0.05,-6.30,0.00);  object(0x1CE7,0,0,155);
move(-11.20,1.79,1.40);  object(0x0166,0,0,85);
move(0.00,0.00,0.40);  object(0x0166,0,0,85);
move(0.00,0.00,0.40);  object(0x0166,0,0,85);
move(0.00,0.00,0.40);  object(0x0166,0,0,85);
move(0.00,0.00,0.40);  object(0x0166,0,0,85);
move(0.00,0.00,-2.00);  object(0x0166,0,0,85);
move(0.00,0.00,2.40);  object(0x0166,0,0,85);
move(0.00,0.00,-2.80);  object(0x0166,0,0,85);
move(-0.00,1.20,2.80);  object(0x0160,0,0,85);
move(0.00,0.00,-0.40);  object(0x0160,0,0,85);
move(0.00,0.00,-0.40);  object(0x0160,0,0,85);
move(0.00,0.00,-0.40);  object(0x0160,0,0,85);
move(0.00,0.00,-0.40);  object(0x0160,0,0,85);
move(0.00,0.00,-0.40);  object(0x0160,0,0,85);
move(0.00,0.00,-0.40);  object(0x0160,0,0,85);
move(0.00,0.00,-0.40);  object(0x0160,0,0,85);
move(0.01,-2.80,3.00);  object(0x015E,0,0,85);
move(0.00,0.00,-0.40);  object(0x015E,0,0,85);
move(0.00,0.00,-0.40);  object(0x015E,0,0,85);
move(0.00,0.00,-0.40);  object(0x015E,0,0,85);
move(0.00,0.00,-0.40);  object(0x015E,0,0,85);
move(0.00,0.00,-0.40);  object(0x015E,0,0,85);
move(0.00,0.00,-0.40);  object(0x015E,0,0,85);
move(0.00,0.00,-0.40);  object(0x015E,0,0,85);
move(0.01,-1.50,2.90);  object(0x0169,0,0,85);
move(0.00,0.00,-0.40);  object(0x0169,0,0,85);
move(0.00,0.00,-0.40);  object(0x0169,0,0,85);
move(0.00,0.00,-0.40);  object(0x0169,0,0,85);
move(0.00,0.00,-0.40);  object(0x0169,0,0,85);
move(0.00,0.00,-0.40);  object(0x0169,0,0,85);
move(0.00,0.00,-0.40);  object(0x0169,0,0,85);
move(0.00,0.00,-0.40);  object(0x0169,0,0,85);
move(-0.02,5.40,2.40);  object(0x015A,0,0,90);
move(0.00,0.00,-0.30);  object(0x015A,0,0,90);
move(0.00,0.00,-0.30);  object(0x015A,0,0,90);
move(0.00,0.00,-0.30);  object(0x015A,0,0,90);
move(-0.00,0.40,0.00);  object(0x015A,0,0,90);
move(0.00,0.00,0.30);  object(0x015A,0,0,90);
move(0.00,0.00,0.30);  object(0x015A,0,0,90);
move(0.00,0.00,0.30);  object(0x015A,0,0,90);
move(0.00,-0.40,-1.40);  object(0x0157,0,350,90);
move(0.00,0.00,-0.30);  object(0x0157,0,350,90);
move(0.00,0.00,-0.30);  object(0x0157,0,350,90);
move(0.00,0.00,-0.30);  object(0x0157,0,350,90);
move(-0.00,0.40,0.00);  object(0x0157,0,350,90);
move(0.00,0.00,0.30);  object(0x0157,0,350,90);
move(0.00,0.00,0.30);  object(0x0157,0,350,90);
move(0.00,0.00,0.30);  object(0x0157,0,350,90);
move(9.95,-25.88,-1.80);  object(0x1CF7,0,0,270);
move(-0.01,1.50,0.00);  object(0x1CF7,0,0,270);
move(-0.01,1.60,0.00);  object(0x1CF7,0,0,320);
move(-0.01,1.10,0.20);  object(0x1CF7,0,90,270);
move(-0.01,1.80,-0.20);  object(0x1CF7,0,0,270);
move(-0.01,1.50,0.00);  object(0x1CF7,0,0,270);
move(-0.01,1.50,0.00);  object(0x1CF7,0,0,270);
move(-0.01,1.50,0.00);  object(0x1CF7,0,0,270);
move(-0.01,1.60,0.00);  object(0x1CF7,0,0,270);
move(-0.01,1.50,0.00);  object(0x1CF7,0,0,230);
moveto(-1747.43,-260.36,18.32);  object(0x1CB2,0,270,90);
move(0.05,6.70,0.00);  object(0x1CB2,0,270,90);
move(0.06,6.81,0.00);  object(0x1CB2,0,270,90);
move(-0.04,6.80,0.00);  object(0x1CB2,0,270,90);
move(-0.01,1.82,0.00);  object(0x1CB2,0,270,90);
pspawn = 0x08E81290;
setint(pspawn, 275);
setfloat(pspawn + 4, -1704.68, 21.53, 21.31, 0);
pspawn += 0x30;
teleport(-1720.58, -310.07, 14.67);

#cheat Fort Baxter ICBM
moveto(-1687.90,-162.84,12.81);  object(0x1CD5,300,0,270);
move(-0.05,5.09,0.00);  object(0x1CD5,300,0,270);
move(0.05,0.12,-0.10);  object(0x1CD5,300,0,90);
move(0.12,-5.19,0.00);  object(0x1CD5,300,0,90);
move(0.10,2.99,3.00);  object(0x1CD5,0,0,180);
move(-0.04,-5.53,5.10);  object(0x1CD6,0,0,180);
move(0.07,11.17,0.00);  object(0x1CD6,0,0,180);
move(-0.21,-15.60,-7.70);  object(0x1CAA,0,0,0);
move(0.19,19.30,0.00);  object(0x1CAA,0,0,180);
move(8.63,0.91,8.50);  object(0x1CD5,15,0,0);
move(1.68,-1.46,4.10);  object(0x1C9F,335,0,180);
move(-1.11,0.00,0.00);  object(0x1C9F,335,0,180);
move(-1.10,-0.01,0.00);  object(0x1C9F,335,0,180);
move(-1.20,0.01,0.00);  object(0x1C9F,335,0,180);
move(0.00,-0.50,-1.20);  object(0x1C9F,335,0,180);
move(1.14,0.06,0.00);  object(0x1C9F,335,0,180);
move(1.20,-0.01,0.00);  object(0x1C9F,335,0,180);
move(1.10,-0.01,0.00);  object(0x1C9F,335,0,180);
move(-0.00,-0.30,-1.30);  object(0x1C9F,335,0,180);
move(-1.10,0.01,0.00);  object(0x1C9F,335,0,180);
move(-1.20,0.01,0.00);  object(0x1C9F,335,0,180);
move(-1.10,0.01,0.00);  object(0x1C9F,335,0,180);
move(1.60,-0.01,-2.50);  object(0x1D0F,10,0,180);
move(2.56,5.25,0.10);  object(0x1CD6,0,345,90);
move(0.23,-4.90,1.30);  object(0x1CD6,0,345,90);
move(-5.28,3.62,-1.00);  object(0x1CD6,0,15,270);
move(-0.15,-4.20,1.10);  object(0x1CD6,0,15,270);
move(2.58,-4.22,-1.50);  object(0x1CD6,20,0,180);
move(-0.00,0.20,3.00);  object(0x1CD6,350,0,180);
move(0.21,5.19,3.50);  object(0x1CD6,15,0,0);
move(-13.42,18.48,-10.50);  object(0x1CB4,0,0,0);
move(15.20,0.02,0.00);  object(0x1CB4,0,0,0);
move(-1.88,-10.69,8.30);  object(0x1CD6,15,0,0);
move(-1.20,-0.61,0.90);  object(0x01B8,15,0,180);
move(4.40,0.02,0.00);  object(0x01B8,15,0,180);
pspawn = 0x08E81290;
setint(pspawn, 270);
setfloat(pspawn + 4, -1682.07, -161, 14.81, 90);
pspawn += 0x30;
teleport(-1682.07,-161.13, 14.81);

#cheat Cheat name
moveto (1564.76, -218.81,58.44);

#cheat Flame Thrower kai
setchar(0x09569ff7 0x3e);
setchar(0x09569ffb 0x3e);
setchar(0x09569ffe 0x80);
setchar(0x0956a004 0x06);
setchar(0x0956a014 0x90);
setchar(0x0956a030 0x50);
setchar(0x0956a038 0x40,0x20,0xef);

#cheat ULTOR
moveto(-923.37,1325.27,78.60);  object(0x1CA4,0,0,269);
move(0.06,-4.10,0.00);  object(0x1CA4,0,0,269);
move(0.05,-3.90,0.00);  object(0x1CA4,0,0,269);
move(7.31,3.43,-1.25);  object(0x1D00,0,0,271);
move(1.42,0.10,0.00);  object(0x1CF9,0,0,88);
move(-1.45,-2.34,0.00);  object(0x1D01,0,0,88);
move(-0.13,4.50,0.00);  object(0x1D01,0,0,88);
move(-5.89,-1.42,0.00);  object(0x1D03,0,0,91);
move(-0.25,-1.80,0.00);  object(0x1D03,0,0,98);
move(0.21,0.84,0.40);  object(0x1CEA,0,0,264);
move(2.00,6.42,-0.30);  object(0x1CFA,0,0,359);
move(3.23,0.53,1.60);  object(0x0154,0,65,1);
teleport(-919.42, 1316.27, 78.44);

#cheat Teleport ULTOR
teleport(-919.42, 1316.27, 78.44);

#cheat test
setcher(0x09569b57 0x3d);
setcher(0x09569b5e 0x80);
setcher(0x09569b70 0x70);
setcher(0x09569b8d 0x04,0x00,0x00,0x00);

#cheat Unknown cheat
setchar (0x09569b57 0x3d);

#cheat test2
setchar(0x09569B5E, 0x80);
setchar(0x09569B70, 0x70);
setchar(0x09569B90, 0x00);
setchar(0x09569B94, 0x8F, 0x87, 0xA9);

#cheat 半角英数でタイトルを入力
static r;
static rPlus;
static v;
static vPlus;
static b;
static bPlus;
static NoCount;
Gradation = 0xMOD9568E54;
if(!NoCount)
setchar(Gradation + 0x5F, getchar(Gradation + 0x5C), getchar(Gradation + 0x5D), getchar(Gradation + 0x5E), getchar(Gradation + 0x58));
NoCount = 1;
if(!r && !v && !b)
{
r=255;
v=0;
b=0;
}
if(!rPlus && !vPlus && !bPlus)
{
rPlus = 0;
vPlus = 1;
bPlus = 1;
}
if(vPlus && !rPlus)
{
v++;
r--;
if(v==255)
{
vPlus=0;
rPlus=1;
}
}
else if(bPlus && !vPlus)
{
b++;
v--;
if(b==255)
{
bPlus=0;
vPlus=1;
}
}
else if(rPlus && !bPlus)
{
r++;
b--;
if(r==255)
{
rPlus=0;
bPlus=1;
}
}
setchar(Gradation + 0x58, 0x00);
setchar(Gradation + 0x5C, r, v, b);
#off
setchar(Gradation + 0x58, getchar(Gradation + 0x62));
setchar(Gradation + 0x5C, getchar(Gradation + 0x5F), getchar(Gradation + 0x60), getchar(Gradation + 0x61));
setchar(Gradation + 0x5F, 0x00, 0x00, 0x00, 0x00);
NoCount = 0;

#cheat Lock Camera
setchar(pplayer + 0x550,  1);
#off
setchar(pplayer + 0x550,  0);

#cheat Peds attack you with CAMERA
static x;
if(x%500==0)
for(i=0; 0x098b4a40+i<=0x098ecf90; i+=0xd10) {
if(0x098b4a40 + i != pplayer && !getint(0x098b4a40+i+0x480)) {
setchar(0x098b4a40 + i +0x674, 0x26);
setchar(0x098b4a40 + i +0x87c, 0x1e);
//setchar(0x098b4a40 + i +0x8B4, 0x0);
//setchar(0x098b4a40 + i +0x8C4, 0x0);
setint(0x098b4a40 + i + 0x648, 10000);
setchar(0x098b4a40 + i + 0x789, 0x09);
setchar(0x098b4a40 + i + 0x894, 0x8);
setint(0x098b4a40 + i + 0x890, pplayer);
}
}
x++;
if(x==500)
x=0;

#cheat Shokei
moveto(695.48,618.76,10.72);  object(0x1C93,0,0,6);
move(2.29,-0.25,0.00);  object(0x1C93,0,0,6);
move(2.29,-0.25,0.00);  object(0x1C93,0,0,6);
move(2.09,-0.23,0.00);  object(0x1C93,0,0,6);
move(1.61,2.78,0.00);  object(0x1CA8,0,0,6);
move(-7.01,8.40,0.00);  object(0x1CA8,0,0,275);
move(-8.34,-7.23,0.00);  object(0x1CA8,0,0,184);
move(7.39,-8.38,0.00);  object(0x1CA8,0,0,93);
move(-5.06,2.44,-3.30);  object(0x1CBB,0,0,340);
move(7.26,2.17,5.30);  object(0x1CBA,0,0,5);
move(0.73,6.46,-5.60);  object(0x1CBD,0,0,7);
move(3.67,-0.44,9.90);  object(0x1CCA,0,0,7);
move(-9.73,1.15,0.00);  object(0x1CCA,0,0,7);
move(4.29,-6.05,-4.80);  object(0x01BD,0,0,103);
move(1.27,-0.28,0.00);  object(0x01C2,0,0,103);
move(1.46,-0.33,0.00);  object(0x01C2,0,0,103);
move(-0.15,-0.68,0.00);  object(0x01C2,0,0,103);
move(-0.22,-0.98,0.00);  object(0x01C2,0,0,103);
move(-1.84,0.41,0.00);  object(0x01C2,0,0,103);
move(0.15,0.68,0.00);  object(0x01C2,0,0,103);
move(1.14,-0.25,0.00);  object(0x01C2,0,0,103);
move(0.20,0.88,0.00);  object(0x01C2,0,0,103);
move(0.24,1.07,0.00);  object(0x01C2,0,0,103);
move(0.95,-0.27,0.00);  object(0x01C2,0,0,103);
move(1.35,-0.34,0.00);  object(0x01C2,0,0,103);
move(-0.26,-1.07,0.00);  object(0x01C2,0,0,103);
move(-0.23,-0.97,0.00);  object(0x01C2,0,0,103);
move(-0.12,-0.49,0.00);  object(0x01C2,0,0,103);
move(-0.46,1.15,0.00);  object(0x01C2,0,0,91);
move(0.55,0.80,0.00);  object(0x01C2,0,0,91);
move(1.09,-0.00,0.00);  object(0x01C2,0,0,91);
move(-0.01,-1.30,0.00);  object(0x01C2,0,0,91);
move(-0.00,-1.00,0.00);  object(0x01C2,0,0,91);
move(0.01,1.50,0.00);  object(0x01C2,0,0,91);
move(0.01,1.60,0.00);  object(0x01C2,0,0,91);
move(-4.30,0.52,0.00);  object(0x01C2,0,0,91);
move(0.50,-3.15,0.00);  object(0x01C2,0,0,94);
move(-1.70,0.12,0.00);  object(0x01C2,0,0,94);
move(0.09,1.20,0.00);  object(0x01C2,0,0,94);
move(0.15,1.99,0.00);  object(0x01C2,0,0,94);
move(-1.17,0.09,0.00);  object(0x01C2,0,0,94);
move(-0.06,-0.80,0.00);  object(0x01C2,0,0,94);
move(-0.07,-1.00,0.00);  object(0x01C2,0,0,94);
move(-0.07,-0.90,0.00);  object(0x01C2,0,0,94);
move(-0.40,5.00,-1.90);  object(0x01C2,0,0,46);
move(1.09,1.04,0.00);  object(0x01C2,0,0,46);
move(0.96,0.91,0.00);  object(0x01C2,0,0,46);
move(0.00,0.00,0.00);  object(0x01C2,0,0,46);
move(0.69,-0.72,0.00);  object(0x01C2,0,0,46);
move(-0.84,-1.35,0.00);  object(0x01C2,0,0,46);
move(1.56,-0.03,0.00);  object(0x01C2,0,0,46);
move(0.97,0.92,0.00);  object(0x01C2,0,0,46);
move(0.00,0.00,0.00);  object(0x01C2,0,0,46);
move(-0.62,0.65,0.00);  object(0x01C2,0,0,46);
move(-1.59,1.66,0.00);  object(0x01C2,0,0,46);
move(0.69,-0.72,0.00);  object(0x01C2,0,0,46);
move(2.11,2.01,0.00);  object(0x01C2,0,0,46);
move(-0.46,-0.99,0.00);  object(0x01C2,0,0,46);
move(0.62,-0.65,0.00);  object(0x01C2,0,0,46);
move(0.55,-0.58,0.00);  object(0x01C2,0,0,46);
move(0.88,0.84,0.00);  object(0x01C2,0,0,46);
move(-0.69,0.72,0.00);  object(0x01C2,0,0,46);
move(1.01,0.96,0.00);  object(0x01C2,0,0,46);
move(-0.68,0.69,0.00);  object(0x01C2,0,0,46);
move(1.54,-1.57,0.00);  object(0x01C2,0,0,46);
move(-0.95,-1.77,0.00);  object(0x01C2,0,0,46);
move(0.51,-0.62,0.00);  object(0x01C2,0,0,46);
move(-0.63,-0.62,0.00);  object(0x01C2,0,0,46);
move(-0.65,-0.64,0.00);  object(0x01C2,0,0,46);
move(0.99,-0.43,0.10);  object(0x01C2,0,0,46);
move(-1.75,1.79,-0.40);  object(0x01C2,0,0,46);
move(-0.91,0.93,0.00);  object(0x01C2,0,0,46);
move(-0.98,1.00,0.00);  object(0x01C2,0,0,46);
move(-0.91,0.93,0.00);  object(0x01C2,0,0,46);
move(1.12,1.09,0.00);  object(0x01C2,0,0,46);
move(0.56,-0.57,0.00);  object(0x01C2,0,0,46);
move(-0.61,-0.59,0.00);  object(0x01C2,0,0,46);
move(-1.19,1.22,0.30);  object(0x01C2,0,0,46);
move(-0.90,-0.87,0.00);  object(0x01C2,0,0,46);
move(3.53,-4.66,0.00);  object(0x01C2,0,0,46);
move(0.70,-0.72,0.00);  object(0x01C2,0,0,46);
move(0.54,1.92,0.00);  object(0x01C2,0,0,46);
move(1.66,3.72,0.00);  object(0x01C2,0,0,46);
move(-2.69,0.77,0.00);  object(0x01C2,0,0,45);
move(2.96,-2.98,0.00);  object(0x01C2,0,0,45);
move(-0.58,-2.27,0.00);  object(0x01C2,0,0,45);
move(0.25,-1.30,0.00);  object(0x01C2,0,0,45);
move(-3.21,0.21,0.20);  object(0x01C2,0,0,29);
move(-3.33,4.23,0.00);  object(0x01C2,0,0,29);
move(-0.57,-1.42,0.00);  object(0x01C2,0,0,29);
move(-0.78,0.44,0.00);  object(0x01C2,0,0,29);
move(-0.00,1.01,0.00);  object(0x01C2,0,0,29);
move(0.26,0.87,0.00);  object(0x01C2,0,0,29);
move(0.46,0.82,0.00);  object(0x01C2,0,0,29);
move(-0.96,0.45,0.00);  object(0x01C2,0,0,25);
move(-1.04,-0.19,0.00);  object(0x01C2,0,0,25);
move(-1.51,-0.41,0.00);  object(0x01C2,0,0,25);
move(1.09,-0.50,0.00);  object(0x01C2,0,0,25);
move(0.82,-0.37,0.00);  object(0x01C2,0,0,25);
move(-0.41,-0.90,0.00);  object(0x01C2,0,0,25);
move(-0.91,0.42,0.00);  object(0x01C2,0,0,25);
move(-1.00,0.46,0.00);  object(0x01C2,0,0,25);
move(1.57,-1.85,-0.10);  object(0x01C2,0,0,25);
move(1.18,-0.54,0.00);  object(0x01C2,0,0,25);
move(-0.23,-1.23,0.00);  object(0x01C2,0,0,25);
move(-1.00,0.46,0.00);  object(0x01C2,0,0,25);
move(-0.80,0.78,0.00);  object(0x01C2,0,0,25);
move(0.13,0.95,0.00);  object(0x01C2,0,0,25);
move(-0.63,0.30,-0.20);  object(0x01C2,0,0,25);
move(-1.54,0.73,0.00);  object(0x01C2,0,0,25);
move(0.08,1.10,0.00);  object(0x01C2,0,0,25);
move(0.84,0.60,0.00);  object(0x01C2,0,0,25);
move(-0.63,-2.00,0.00);  object(0x01C2,0,0,23);
move(-0.47,-1.11,0.00);  object(0x01C2,0,0,23);
move(1.01,-0.43,0.00);  object(0x01C2,0,0,23);
move(0.34,-1.26,0.00);  object(0x01C2,0,0,23);
move(1.11,-0.47,0.00);  object(0x01C2,0,0,23);
move(1.35,-0.67,0.00);  object(0x01C2,0,0,23);
move(-0.28,-1.19,0.00);  object(0x01C2,0,0,23);
move(-1.20,0.25,0.00);  object(0x01C2,0,0,23);
move(-1.20,0.50,0.00);  object(0x01C2,0,0,23);
move(-0.92,0.39,0.00);  object(0x01C2,0,0,23);
move(0.45,1.57,0.00);  object(0x01C2,0,0,23);
move(-0.96,0.03,0.00);  object(0x01C2,0,0,23);
move(3.39,-3.91,0.00);  object(0x01C2,0,0,31);
move(-4.02,2.44,-0.20);  object(0x01C2,0,0,31);
move(1.68,-1.79,-0.10);  object(0x01C2,0,0,31);
move(1.29,-0.77,0.00);  object(0x01C2,0,0,31);
move(-2.32,1.38,0.00);  object(0x01C2,0,0,31);
move(3.42,-2.28,0.00);  object(0x01C2,0,0,31);
move(-2.46,0.76,0.00);  object(0x01C2,0,0,31);
move(-0.95,0.56,0.00);  object(0x01C2,0,0,31);
move(2.04,0.07,0.00);  object(0x01C2,0,0,37);
move(6.48,-5.21,0.00);  object(0x01C2,0,0,104);
move(1.70,-0.44,0.00);  object(0x01C2,0,0,104);
move(0.20,0.77,0.00);  object(0x01C2,0,0,104);
move(1.15,-0.77,0.00);  object(0x01C2,0,0,105);
move(-3.86,1.04,0.00);  object(0x01C2,0,0,105);
move(-1.45,0.39,0.00);  object(0x01C2,0,0,105);
move(-0.34,-1.26,0.00);  object(0x01C2,0,0,105);
move(1.15,-0.31,0.00);  object(0x01C2,0,0,105);
move(0.21,0.77,0.00);  object(0x01C2,0,0,105);
move(1.65,0.36,-0.30);  object(0x01C2,0,0,105);
move(-4.29,0.30,0.00);  object(0x01C2,0,0,105);
move(-0.28,-1.06,0.00);  object(0x01C2,0,0,105);
move(-0.72,2.35,-0.20);  object(0x01C2,0,0,102);
move(-0.27,-1.27,0.00);  object(0x01C2,0,0,102);
move(-0.23,-1.08,0.00);  object(0x01C2,0,0,102);
move(-0.54,3.72,0.00);  object(0x01C2,0,0,101);
move(-0.22,-1.18,0.00);  object(0x01C2,0,0,101);
move(0.71,0.38,0.00);  object(0x01C2,0,0,101);
move(-0.28,-1.47,0.00);  object(0x01C2,0,0,101);
move(-0.60,-1.11,0.00);  object(0x01C2,0,0,101);
move(-1.07,0.20,0.00);  object(0x01C2,0,0,101);
move(0.24,1.28,0.00);  object(0x01C2,0,0,101);
move(0.26,1.38,0.00);  object(0x01C2,0,0,101);
move(-1.12,0.65,0.00);  object(0x01C2,0,0,99);
move(-0.12,-0.79,0.00);  object(0x01C2,0,0,99);
move(-0.17,-1.09,0.00);  object(0x01C2,0,0,99);
move(-0.16,-0.99,0.00);  object(0x01C2,0,0,99);
move(-0.11,-0.69,0.00);  object(0x01C2,0,0,99);
move(-0.59,0.30,0.00);  object(0x01C2,0,0,99);
move(0.20,1.28,0.00);  object(0x01C2,0,0,99);
move(0.19,1.19,0.00);  object(0x01C2,0,0,99);
move(0.17,1.09,0.00);  object(0x01C2,0,0,99);
move(1.67,0.14,0.00);  object(0x01C2,0,0,99);
move(0.22,1.38,0.00);  object(0x01C2,0,0,99);
move(0.28,1.78,0.00);  object(0x01C2,0,0,99);
move(4.82,-0.46,0.00);  object(0x01C2,0,0,101);
move(2.21,-0.44,0.00);  object(0x01C2,0,0,101);
move(1.47,-0.29,0.60);  object(0x01C2,0,0,101);
move(0.06,-0.73,2.00);  object(0x01BD,0,0,110);
move(-0.30,-0.85,5.40);  object(0x0159,0,0,110);
move(-1.34,-3.77,0.00);  object(0x0159,0,0,110);
move(1.82,7.32,0.00);  object(0x0159,0,0,107);
move(0.06,3.65,0.00);  object(0x0159,0,0,100);
move(-4.72,0.87,0.00);  object(0x0159,0,0,100);
move(-4.51,0.85,0.00);  object(0x0159,0,0,100);
move(-0.69,-3.94,0.00);  object(0x0159,0,0,100);
move(-0.64,-3.64,0.00);  object(0x0159,0,0,100);
move(-0.84,-4.83,0.00);  object(0x0159,0,0,100);
move(4.13,0.08,0.00);  object(0x0159,0,0,95);
move(2.26,5.61,0.00);  object(0x0159,0,0,96);
move(-1.15,-12.05,-7.10);  object(0x01D0,0,0,96);
move(-3.86,0.72,0.00);  object(0x01D0,0,0,91);
move(-6.68,-8.36,1.80);  object(0x1C91,0,0,21);
move(2.24,-0.88,0.00);  object(0x1C91,0,0,21);
move(2.22,-0.79,0.00);  object(0x1C91,0,0,13);
move(2.53,-0.58,0.00);  object(0x1C91,0,0,13);
move(2.92,-0.67,0.00);  object(0x1C91,0,0,13);
move(0.72,3.11,-3.40);  object(0x1CC9,0,0,13);
move(2.91,15.68,8.20);  object(0x1CCA,0,0,4);
move(-3.82,-3.28,-8.70);  object(0x1CC8,0,0,4);
move(3.05,-0.83,0.60);  object(0x1CBA,0,0,4);

#cheat inconnu
moveto(-1044.94,-854.95,10.47);  object(0x1CD5,5,0,337);
move(3.78,-8.92,0.60);  object(0x1CD5,0,0,336);
move(-4.82,17.01,-1.90);  object(0x1CD5,10,0,15);
move(14.78,20.15,2.30);  object(0x1CB2,0,270,146);
move(-10.64,-11.47,-3.90);  object(0x1CD5,350,0,221);
move(4.91,5.53,-0.90);  object(0x1CD5,355,0,221);
move(12.36,-3.11,4.70);  object(0x1CB2,0,270,139);
move(6.46,0.41,0.00);  object(0x1CB2,0,270,160);
move(-6.01,6.79,0.00);  object(0x1CB2,0,270,160);
move(4.40,-0.96,-0.20);  object(0x1CB2,0,270,171);
move(4.84,0.76,0.00);  object(0x1CB2,0,270,171);
move(1.32,-8.42,0.00);  object(0x1CB2,0,270,171);
move(5.82,0.35,0.00);  object(0x1CB2,0,270,171);
move(-0.95,6.04,0.00);  object(0x1CB2,0,270,171);
move(6.16,-0.57,0.00);  object(0x1CB2,0,270,171);
move(0.94,-6.02,0.00);  object(0x1CB2,0,270,171);
move(4.58,0.49,-0.30);  object(0x1CB2,0,270,185);
move(-0.07,7.55,0.00);  object(0x1CB2,0,270,185);
move(5.37,-1.44,0.10);  object(0x1CB2,0,270,279);
move(2.18,-5.65,0.00);  object(0x1CB2,0,270,273);
move(-0.31,-6.69,0.00);  object(0x1CB2,0,270,273);
move(-0.28,-5.99,0.00);  object(0x1CB2,0,270,273);
move(0.08,-5.19,1.10);  object(0x1CB2,0,285,279);
move(-6.83,20.66,-7.40);  object(0x1C93,0,270,285);

#cheat OMEGA house
moveto(-1006.66,-862.29,16.18);  object(0x1CD5,270,0,315);
move(-7.61,-7.67,0.00);  object(0x1CD5,270,0,315);
move(-3.52,-3.55,0.00);  object(0x1CD5,270,0,315);
move(-2.41,-2.40,0.00);  object(0x1CD5,270,0,315);
move(0.33,3.31,0.00);  object(0x1CD5,270,0,44);
move(-7.97,7.73,0.00);  object(0x1CD5,270,0,44);
move(-3.52,3.41,0.00);  object(0x1CD5,270,0,44);
move(-2.94,3.29,0.00);  object(0x1CD5,270,0,52);
move(-1.85,2.94,0.00);  object(0x1CD5,270,0,69);
move(-0.92,3.53,0.00);  object(0x1CD5,270,0,85);
move(0.20,3.49,0.00);  object(0x1CD5,270,0,102);
move(1.31,2.59,0.00);  object(0x1CD5,270,0,126);
move(2.62,3.19,0.00);  object(0x1CD5,270,0,135);
move(3.38,3.34,0.00);  object(0x1CD5,270,0,139);
move(3.16,-3.63,0.00);  object(0x1CD5,270,0,139);
move(3.44,-3.33,0.00);  object(0x1CD5,270,0,135);
move(3.41,-3.46,0.00);  object(0x1CD5,270,0,135);
move(3.31,-3.57,0.00);  object(0x1CD5,270,0,136);
move(9.38,-9.84,0.00);  object(0x1CD5,270,0,136);
move(-3.45,3.62,0.00);  object(0x1CD5,270,0,136);
move(-2.73,2.87,0.00);  object(0x1CD5,270,0,136);
move(14.26,-9.96,0.00);  object(0x1CD5,175,0,237);
move(5.89,4.92,-1.00);  object(0x1CD5,170,0,228);
move(4.33,7.53,-2.50);  object(0x1CD5,160,0,194);
move(-18.96,-20.86,3.50);  object(0x1CD5,90,0,286);
move(3.90,0.29,0.00);  object(0x1CD5,90,0,262);
move(3.63,-1.94,0.00);  object(0x1CD5,90,0,321);
move(4.17,3.12,0.00);  object(0x1CD5,90,0,321);
move(-6.49,6.25,0.00);  object(0x1CD5,0,0,318);
move(-3.67,-3.25,0.00);  object(0x1CD5,0,0,318);
move(-1.12,-0.99,0.00);  object(0x1CD5,0,0,318);
move(-0.75,3.97,5.50);  object(0x1CD5,180,0,46);
move(-17.39,-2.74,0.10);  object(0x1CD5,180,0,134);
move(1.45,-32.89,-5.80);  object(0x1D1C,0,0,46);
move(0.00,0.00,0.00);  object(0x1D1C,0,0,46);
move(-5.65,42.31,-1.10);  object(0x1CD5,0,0,310);
move(1.03,1.22,0.00);  object(0x1CD5,0,0,310);
move(-7.10,5.35,0.00);  object(0x1CD5,0,0,310);
move(1.68,1.99,0.00);  object(0x1CD5,0,0,310);
move(10.00,-0.19,-5.50);  object(0x1CD5,25,0,318);
move(4.51,-5.07,3.20);  object(0x1CD5,25,0,318);
move(-3.22,-8.54,2.30);  object(0x1CD5,0,0,313);
move(3.07,-3.98,0.00);  object(0x1CD5,0,0,313);
move(1.58,1.68,0.00);  object(0x1CD5,0,0,313);
move(-6.28,8.60,0.00);  object(0x1CD5,0,0,317);
move(-4.07,4.43,0.00);  object(0x1CD5,0,0,317);
move(-7.72,7.89,0.00);  object(0x1CD5,0,0,314);
move(4.83,3.90,0.00);  object(0x1CD5,0,0,45);
move(19.99,-21.09,-0.10);  object(0x1CD5,0,0,47);
move(-7.70,6.46,-1.80);  object(0x1CD5,335,0,138);
move(3.64,-4.15,1.80);  object(0x1CD5,0,0,47);
move(16.06,-10.66,2.00);  object(0x1CD5,0,0,54);
move(-4.16,3.03,0.00);  object(0x1CD5,0,0,54);
move(-3.77,3.31,0.00);  object(0x1CD5,0,0,54);
move(-2.43,-7.43,0.00);  object(0x1CD5,0,0,112);
move(-1.68,3.37,9.20);  object(0x1CD5,270,0,43);
move(3.68,3.92,0.00);  object(0x1CD5,270,0,43);
move(3.61,3.83,0.00);  object(0x1CD5,270,0,43);
move(-3.59,3.38,0.00);  object(0x1CD5,270,0,44);
move(-2.53,3.84,0.00);  object(0x1CD5,270,0,47);
move(-3.70,3.94,0.00);  object(0x1CD5,270,0,47);
move(0.00,0.00,0.00);  object(0x1CD5,270,0,47);
move(-3.63,3.86,0.00);  object(0x1CD5,270,0,47);
move(-3.77,3.73,0.00);  object(0x1CD5,270,0,47);
move(-2.40,2.55,0.00);  object(0x1CD5,270,0,47);
move(-2.53,2.70,0.00);  object(0x1CD5,270,0,47);
move(-3.15,3.35,0.00);  object(0x1CD5,270,0,47);
move(-3.35,-3.15,0.00);  object(0x1CD5,270,0,47);
move(-3.51,-3.29,0.00);  object(0x1CD5,270,0,47);
move(-2.96,-3.02,0.00);  object(0x1CD5,270,0,8);
move(-0.82,-4.55,0.00);  object(0x1CD5,270,0,354);
move(0.43,-4.47,0.00);  object(0x1CD5,270,0,341);
move(1.36,-3.77,0.00);  object(0x1CD5,270,0,318);
move(3.56,-3.90,0.00);  object(0x1CD5,270,0,318);
move(3.24,-3.41,0.00);  object(0x1CD5,270,0,318);
move(3.44,-3.75,0.00);  object(0x1CD5,270,0,318);
move(2.99,-3.34,0.00);  object(0x1CD5,270,0,309);
move(4.44,-3.47,0.00);  object(0x1CD5,270,0,314);
move(2.14,1.97,0.00);  object(0x1CD5,270,0,314);
move(-2.76,-1.65,0.00);  object(0x1CD5,270,0,314);
move(-8.46,28.46,-4.60);  object(0x1CD5,210,0,316);
move(5.95,-6.16,5.90);  object(0x1CD5,220,0,316);
move(6.85,-6.83,4.20);  object(0x1CD5,190,0,316);
move(5.33,-5.72,0.80);  object(0x1CD5,180,0,44);
move(2.51,-2.44,0.00);  object(0x1CD5,180,0,44);
move(1.54,5.95,0.00);  object(0x1CD5,180,0,318);
move(-3.51,3.55,0.00);  object(0x1CD5,180,0,318);
move(-5.09,5.60,0.00);  object(0x1CD5,180,0,318);
move(-5.51,6.03,0.00);  object(0x1CD5,180,0,318);
move(-7.14,7.20,0.00);  object(0x1CD5,180,0,318);
move(7.67,-8.23,0.00);  object(0x1CD5,180,0,317);
move(-12.01,8.69,0.00);  object(0x1CD5,180,0,226);
move(-6.03,-7.88,-0.20);  object(0x1CD5,180,0,201);
move(-0.49,0.83,0.00);  object(0x1CD5,180,0,192);
move(4.73,7.07,0.00);  object(0x1CD5,180,0,236);
move(-4.44,-13.69,0.00);  object(0x1CD5,180,0,176);
move(0.48,-3.39,0.00);  object(0x1CD5,180,0,149);
move(6.88,-8.28,0.00);  object(0x1CD5,180,0,135);
move(7.52,-7.71,0.00);  object(0x1CD5,180,0,136);
move(7.69,-3.11,0.00);  object(0x1CD5,180,0,45);
move(1.27,1.27,0.00);  object(0x1CD5,180,0,45);
move(0.00,0.00,0.00);  object(0x1CD5,180,0,45);
move(-1.62,2.91,0.00);  object(0x1CD5,180,0,45);
move(-11.11,9.42,-1.60);  object(0x1CD5,180,0,314);
move(5.53,-5.40,0.00);  object(0x1CD5,180,0,313);
move(3.47,3.47,0.00);  object(0x1CD5,180,0,313);
move(-6.66,5.34,0.00);  object(0x1CD5,180,0,313);
move(-8.61,2.92,0.00);  object(0x1CD5,180,0,313);
move(0.92,4.22,0.00);  object(0x1CD5,180,0,313);
move(2.04,7.02,0.00);  object(0x1CD5,180,0,47);
move(1.29,-1.39,0.00);  object(0x1CD5,180,0,47);
move(-1.49,-23.37,-8.10);  object(0x1CE5,0,0,40);
move(0.82,-0.75,0.00);  object(0x1CE5,0,0,48);
move(0.13,-0.15,0.40);  object(0x1CE5,0,45,48);
move(-0.64,0.51,1.00);  object(0x1CE5,0,45,50);
move(0.10,0.09,0.80);  object(0x1CE5,0,135,50);
move(0.52,-0.61,0.80);  object(0x1CE5,0,135,50);
move(0.74,-0.81,0.40);  object(0x1CE5,0,180,50);
move(0.52,-0.61,0.00);  object(0x1CE5,0,180,50);
move(0.62,-0.92,-0.30);  object(0x1CE5,0,215,50);
move(0.65,-0.76,-0.70);  object(0x1CE5,0,215,50);
move(0.00,0.00,-0.80);  object(0x1CE5,0,310,50);
move(-0.52,0.61,-0.90);  object(0x1CE5,0,310,50);
move(0.19,-0.23,-0.50);  object(0x1CE5,0,0,50);
move(0.78,-0.91,0.00);  object(0x1CE5,0,0,50);

#cheat EVIL
moveto(-862.96,558.27,14.77);  object(0x1CD5,240,0,288);
move(3.20,-1.15,5.90);  object(0x1CD5,240,0,288);
move(0.67,-0.37,6.80);  object(0x1CD5,280,0,287);
move(-1.58,0.69,9.80);  object(0x1CD5,280,0,289);
move(2.84,17.85,-22.90);  object(0x1CD5,240,0,276);
move(5.45,-0.56,9.60);  object(0x1CD5,240,0,276);
move(0.60,-0.06,6.00);  object(0x1CD5,280,0,276);
move(-1.69,0.23,9.70);  object(0x1CD5,280,0,276);
move(3.83,-0.33,6.30);  object(0x1CD5,170,0,276);
move(-7.25,-18.53,0.00);  object(0x1CD5,170,0,287);
move(9.31,15.13,-1.40);  object(0x1CD5,170,10,10);
move(-4.92,-12.25,0.10);  object(0x1CD5,170,350,210);
move(3.34,5.98,-0.90);  object(0x1CD5,180,350,200);
move(-1.20,11.47,2.20);  object(0x1CD5,170,355,296);
move(-5.06,2.31,1.00);  object(0x1CD5,170,355,296);
move(-9.56,-20.11,0.50);  object(0x1CD5,170,0,288);
move(-1.73,3.74,0.40);  object(0x1CD5,180,10,20);
move(3.96,9.43,0.00);  object(0x1CD5,180,10,26);
move(2.75,5.20,0.00);  object(0x1CD5,180,10,29);
move(0.27,-14.99,-1.90);  object(0x1CD5,195,0,108);
move(1.59,4.95,0.00);  object(0x1CD5,195,0,108);
move(1.46,4.36,0.10);  object(0x1CD5,195,0,114);
move(1.69,3.84,0.00);  object(0x1CD5,195,0,114);
move(3.06,-7.60,-1.40);  object(0x1CD5,180,0,201);
move(4.16,1.80,4.60);  object(0x1CD5,80,0,279);
move(-1.42,-4.48,0.00);  object(0x1CD5,80,0,291);
move(-2.28,-4.70,-0.10);  object(0x1CD5,80,0,297);
move(-7.59,3.44,0.00);  object(0x1CD5,90,0,295);
move(1.96,4.32,0.00);  object(0x1CD5,90,0,294);
move(2.07,3.33,0.00);  object(0x1CD5,90,0,309);
move(5.28,1.89,0.00);  object(0x1CD5,90,355,205);
move(-4.46,2.03,0.00);  object(0x1CD5,90,355,205);
move(-0.82,0.38,0.00);  object(0x1CD5,90,355,205);
move(-1.22,-10.24,0.50);  object(0x1CD5,90,0,205);
move(-2.78,-1.68,10.00);  object(0x1CD5,90,0,295);
move(2.12,4.64,0.00);  object(0x1CD5,90,0,295);
move(2.00,2.82,0.00);  object(0x1CD5,90,0,313);
move(6.89,-6.84,0.10);  object(0x1CD5,85,0,290);
move(1.57,5.03,0.00);  object(0x1CD5,85,0,277);
move(-3.72,-9.81,0.00);  object(0x1CD5,85,0,298);
move(-7.59,0.96,0.00);  object(0x1CD5,90,0,25);
move(8.29,12.33,0.00);  object(0x1CD5,90,0,197);
move(-4.71,1.94,0.00);  object(0x1CD5,90,0,207);
move(6.50,-5.20,10.60);  object(0x1CD5,105,0,278);
move(-1.30,-4.77,0.00);  object(0x1CD5,105,0,291);
move(-2.11,-4.72,0.00);  object(0x1CD5,105,0,298);
move(-12.54,5.83,-0.90);  object(0x1CD5,90,0,115);
move(2.15,4.51,0.00);  object(0x1CD5,90,0,115);
move(2.79,4.16,0.00);  object(0x1CD5,90,0,133);
move(4.40,0.17,0.00);  object(0x1CD5,90,0,209);
move(2.91,-1.37,0.00);  object(0x1CD5,90,0,198);
move(-6.77,-12.91,0.00);  object(0x1CD5,90,0,21);
move(2.30,5.26,5.70);  object(0x1CD5,180,0,25);
move(1.27,2.66,0.00);  object(0x1CD5,180,0,25);
move(-2.66,1.62,0.00);  object(0x1CD5,180,0,25);
move(-1.42,-2.99,0.00);  object(0x1CD5,180,0,25);
move(-1.29,0.54,0.00);  object(0x1CD5,180,0,25);
move(6.59,-2.68,0.00);  object(0x1CD5,180,0,25);
move(1.10,2.84,-0.20);  object(0x1CD6,270,0,11);
move(-6.07,3.17,0.00);  object(0x1CD6,270,0,43);
move(-4.93,-4.93,-5.50);  object(0x1CD5,270,0,118);
move(2.55,4.53,0.00);  object(0x1CD5,270,0,118);
move(2.17,2.97,0.00);  object(0x1CD5,270,0,119);
move(-5.33,-3.65,0.50);  object(0x1CD5,0,0,208);
move(1.39,2.18,0.00);  object(0x1CD5,0,0,208);
move(0.55,2.75,-6.10);  object(0x1CD5,305,0,120);
move(-4.37,-6.95,0.00);  object(0x1CD5,305,0,120);
move(6.05,0.55,10.20);  object(0x1CD5,270,0,296);
move(7.27,-3.48,2.50);  object(0x1CD5,320,0,292);
move(-1.63,0.74,0.30);  object(0x1CD5,320,0,116);
move(2.42,-1.20,0.00);  object(0x1CD5,265,0,116);
move(-5.67,-5.58,-2.10);  object(0x1CD5,185,0,26);
move(6.28,16.16,0.30);  object(0x1CD5,185,0,200);
move(2.33,-11.52,-2.00);  object(0x1CD6,140,0,293);
move(2.20,-0.94,2.50);  object(0x1CE5,140,0,293);
move(0.58,0.83,0.30);  object(0x1CE5,325,330,324);
move(-0.74,-1.93,-0.10);  object(0x1CE5,205,205,249);
move(0.33,17.74,0.10);  object(0x1CD4,175,180,209);
move(-1.65,0.74,0.00);  object(0x1CD4,175,180,210);
move(-1.56,0.78,0.00);  object(0x1CD4,175,180,206);
move(-1.61,0.80,0.00);  object(0x1CD4,175,180,206);
move(0.18,-0.09,-2.90);  object(0x1CD4,175,180,206);
move(1.70,-0.84,0.00);  object(0x1CD4,175,180,206);
move(1.70,-0.84,0.00);  object(0x1CD4,175,180,206);
move(1.29,-0.32,0.00);  object(0x1CD4,175,180,206);
move(0.08,0.25,-2.40);  object(0x1CD4,175,180,207);
move(-1.43,0.72,0.00);  object(0x1CD4,175,180,207);
move(-1.34,0.67,0.00);  object(0x1CD4,175,180,207);
move(-1.71,0.60,0.00);  object(0x1CD4,175,180,207);
move(-6.55,-29.15,4.70);  object(0x1CD4,175,180,30);
move(0.00,0.00,0.00);  object(0x1CD4,175,180,30);
move(-1.74,0.87,0.00);  object(0x1CD4,175,180,29);
move(-1.66,0.73,0.00);  object(0x1CD4,175,180,28);
move(-1.67,0.91,0.00);  object(0x1CD4,175,180,28);
move(-0.13,-0.24,-2.90);  object(0x1CD4,175,180,28);
move(1.67,-0.91,0.00);  object(0x1CD4,175,180,28);
move(1.74,-0.77,0.00);  object(0x1CD4,175,180,28);
move(1.58,-0.86,0.00);  object(0x1CD4,175,180,28);
move(-0.07,-0.13,-2.40);  object(0x1CD4,175,180,28);
move(-1.56,0.85,0.00);  object(0x1CD4,175,180,27);
move(-1.73,0.78,0.00);  object(0x1CD4,175,180,27);
move(-1.69,0.87,0.00);  object(0x1CD4,175,180,27);
move(2.83,-0.78,6.90);  object(0x1CB2,90,150,116);
move(-0.60,-2.27,-7.70);  object(0x1CB2,90,165,116);
move(-1.37,-2.78,-11.60);  object(0x1CB2,90,165,116);
move(-0.52,0.24,10.00);  object(0x1CB2,90,150,117);
move(2.81,-1.86,-15.30);  object(0x1CB2,350,165,96);
move(8.15,-1.31,-1.30);  object(0x1CB2,350,165,97);
move(5.64,-0.32,2.10);  object(0x1C93,350,165,97);
move(-3.63,0.54,0.60);  object(0x1C93,350,165,97);
move(8.06,-1.24,-1.50);  object(0x1C93,350,165,97);
move(3.46,-0.75,-1.30);  object(0x1C93,330,165,97);
move(-6.92,1.00,-0.20);  object(0x1C93,350,165,97);
move(3.78,-0.68,-0.70);  object(0x1C93,350,165,97);
move(4.38,-0.58,-0.90);  object(0x1C93,350,165,97);
move(3.72,-0.75,-0.70);  object(0x1C93,350,165,104);
move(-2.38,0.10,-1.30);  object(0x1C93,350,165,95);
move(-3.39,-0.02,0.80);  object(0x1C93,10,165,98);
move(-3.05,0.66,0.10);  object(0x1C93,350,165,98);
move(-4.48,0.63,0.80);  object(0x1C93,350,165,98);
move(-4.08,0.78,0.80);  object(0x1C93,350,165,98);
move(21.73,-3.27,-1.90);  object(0x1C93,350,165,100);
move(-20.87,38.15,30.10);  object(0x1CB2,90,140,296);
move(1.98,4.15,-5.60);  object(0x1CB2,90,140,296);
move(-0.56,-1.17,-1.70);  object(0x1CB2,90,155,296);
move(2.41,5.05,-12.00);  object(0x1CB2,90,155,296);
move(3.89,-0.76,-4.60);  object(0x1CB2,25,155,320);
move(6.20,-5.03,-3.30);  object(0x1CB2,25,155,320);
move(3.54,-4.47,0.40);  object(0x1C93,25,155,320);
move(-3.59,2.61,1.40);  object(0x1C93,25,155,322);
move(6.75,-5.00,-3.00);  object(0x1C93,25,155,319);
move(2.77,-1.85,-2.10);  object(0x1C93,45,155,319);
move(-6.02,5.60,1.90);  object(0x1C93,25,155,319);
move(3.44,-2.60,-1.60);  object(0x1C93,25,155,319);
move(3.43,-2.59,-1.70);  object(0x1C93,25,155,319);
move(3.11,-2.38,-1.60);  object(0x1C93,25,155,319);
move(3.21,-2.49,-1.70);  object(0x1C93,25,155,319);
move(-16.26,13.90,6.60);  object(0x1C93,25,155,319);
move(3.15,-2.52,-1.80);  object(0x1C93,25,155,320);
move(3.12,-2.56,-1.50);  object(0x1C93,25,155,320);
move(3.05,-2.55,-0.70);  object(0x1C93,355,155,312);
move(2.13,-1.23,-1.60);  object(0x1C93,20,155,312);
move(-33.73,1.12,-37.50);  object(0x1CD5,0,0,186);
move(-5.29,-16.94,0.00);  object(0x1CD5,0,0,200);
move(4.77,3.94,4.10);  object(0x1C93,0,0,112);
move(-3.75,1.35,0.00);  object(0x1C93,0,0,108);
move(-3.85,1.25,0.00);  object(0x1C93,0,0,106);
move(-4.14,-9.54,0.00);  object(0x1C93,0,0,111);
move(4.23,-1.50,0.00);  object(0x1C93,0,0,107);
move(4.11,-1.27,0.00);  object(0x1C93,0,0,107);
move(2.97,17.34,0.00);  object(0x1C93,0,0,98);
move(4.21,-0.63,0.00);  object(0x1C93,0,0,98);
move(-8.41,1.23,0.00);  object(0x1C93,0,0,98);
move(1.28,9.69,0.00);  object(0x1C93,0,0,92);
move(4.59,-0.19,0.00);  object(0x1C93,0,0,92);
move(3.99,-0.47,0.00);  object(0x1C93,0,0,101);
move(5.16,-14.72,30.10);  object(0x1C93,90,0,290);
teleport(-793.36,558.12,10.95)

#cheat UPUCIRON
moveto(-800.83,440.70,56.26);  object(0x1CB1,0,0,98);
move(-1.34,0.05,0.00);  object(0x1CC9,0,0,98);
move(-22.68,107.52,-37.60);  object(0x1CD5,85,0,98);
move(0.23,20.44,0.00);  object(0x1CD5,85,0,76);
move(-0.79,-0.27,8.70);  object(0x1CD5,85,0,77);
move(-0.23,-20.15,0.00);  object(0x1CD5,85,0,96);
move(4.71,-0.42,5.90);  object(0x1CD6,85,0,95);
move(-4.89,0.41,-5.80);  object(0x1CD5,85,0,95);
move(4.96,21.23,5.80);  object(0x1CD6,85,0,77);
move(-10.17,-2.30,0.00);  object(0x1CD5,85,0,77);
move(-0.35,-18.30,0.00);  object(0x1CD5,85,0,95);
move(5.67,-0.75,-4.80);  object(0x1CD7,85,0,98);
move(0.17,20.38,0.00);  object(0x1CD7,85,0,76);
move(6.26,1.63,-14.80);  object(0x1CD7,85,0,75);
move(0.11,-22.70,0.00);  object(0x1CD7,85,0,98);
move(-13.12,1.55,29.10);  object(0x1CD5,85,0,95);
move(0.48,18.02,0.00);  object(0x1CD5,85,0,76);
move(-1.01,-0.37,0.60);  object(0x1CD5,0,0,72);
move(-0.64,-17.54,0.00);  object(0x1CD5,0,0,97);
move(-5.91,0.76,-2.40);  object(0x1CD5,315,0,98);
move(0.79,14.98,0.00);  object(0x1CD5,315,0,71);
move(-5.97,-2.14,-6.10);  object(0x1CD5,315,0,71);
move(-0.56,-12.00,0.40);  object(0x1CD5,315,0,100);
move(-3.64,1.81,-4.30);  object(0x1CD5,0,0,40);
move(-0.32,8.68,0.00);  object(0x1CD5,0,0,128);
move(4.93,2.73,0.00);  object(0x1CD5,0,0,128);
move(1.43,-11.47,0.00);  object(0x1CD5,0,0,38);
move(2.36,5.70,0.00);  object(0x1CD5,0,0,260);
move(-0.63,-3.65,0.00);  object(0x1CD5,0,0,38);
move(-0.96,7.76,0.00);  object(0x1CD5,0,0,127);
move(-10.15,7.70,-0.10);  object(0x1CD5,0,0,127);
move(-3.14,-4.14,0.00);  object(0x1CD5,0,0,127);
move(5.87,-21.86,0.10);  object(0x1CD5,0,0,38);
move(-3.96,3.07,0.00);  object(0x1CD5,0,0,41);
move(1.08,8.95,0.00);  object(0x1CD5,0,0,80);
move(-3.24,4.50,0.00);  object(0x1CD5,0,0,80);
move(-0.86,4.82,0.00);  object(0x1CD5,0,0,80);
move(1.71,-9.65,0.00);  object(0x1CD5,0,0,80);
move(0.86,-4.82,0.00);  object(0x1CD5,0,0,80);
move(0.56,-3.15,0.00);  object(0x1CD5,0,0,80);
move(-6.98,24.25,-0.10);  object(0x1CD5,0,0,80);
move(0.86,-4.82,0.00);  object(0x1CD5,0,0,80);
move(0.89,-5.02,0.00);  object(0x1CD5,0,0,80);
move(0.91,-5.12,0.00);  object(0x1CD5,0,0,80);
move(0.87,-4.92,0.00);  object(0x1CD5,0,0,80);
move(0.86,-4.82,0.00);  object(0x1CD5,0,0,80);
move(0.65,-3.64,0.00);  object(0x1CD5,0,0,80);
move(-1.62,-4.07,0.00);  object(0x1CD5,0,0,78);
move(-6.38,2.19,0.00);  object(0x1CD5,0,0,320);
move(-6.25,7.42,0.00);  object(0x1CD5,0,0,320);
move(-5.33,6.32,0.00);  object(0x1CD5,0,0,320);
move(0.37,5.00,0.00);  object(0x1CD5,0,0,43);
move(6.44,6.81,0.00);  object(0x1CD5,0,0,43);
move(1.42,-3.06,0.00);  object(0x1CD5,0,0,86);
move(-1.45,-5.02,0.00);  object(0x1CD5,0,0,86);
move(0.36,-4.89,0.00);  object(0x1CD5,0,0,86);
move(0.33,-4.49,0.00);  object(0x1CD5,0,0,86);
move(5.62,-4.40,0.00);  object(0x1CD5,0,0,86);
move(-6.87,18.95,0.00);  object(0x1CD5,0,0,86);
move(37.60,-4.57,1.70);  object(0x1CD6,230,0,261);
move(1.42,0.23,-1.20);  object(0x1CD6,230,0,261);
move(0.00,0.00,0.00);  object(0x1CD6,270,0,261);
move(-2.97,-2.75,2.70);  object(0x1CD6,0,320,168);
move(0.80,0.10,-0.40);  object(0x1CD6,0,320,168);
move(-1.74,4.58,0.80);  object(0x1CD6,0,320,168);
move(1.83,0.41,-1.60);  object(0x1CD6,0,320,170);
move(0.69,-5.06,0.00);  object(0x1CD6,0,320,170);
move(-0.22,2.29,-1.60);  object(0x1C93,90,230,170);
move(1.83,0.37,-1.50);  object(0x1C93,90,230,170);
move(9.75,8.10,-16.30);  object(0x1C93,90,240,224);
move(1.88,-1.87,-2.70);  object(0x1C93,90,210,224);
move(-1.17,8.59,0.00);  object(0x1C93,90,210,131);
move(-1.23,-2.15,3.10);  object(0x1C93,90,230,118);
move(-4.96,-4.08,-1.10);  object(0x1C93,90,230,345);
move(-2.13,-0.51,-2.80);  object(0x1C93,90,205,348);
move(1.82,-19.93,2.20);  object(0x1C93,90,235,12);
move(-2.44,0.56,-2.50);  object(0x1C93,90,210,12);
move(9.35,-3.90,-0.10);  object(0x1C93,90,210,202);
move(0.84,5.73,0.40);  object(0x1C93,90,210,177);
move(-2.50,-0.77,2.60);  object(0x1C93,90,235,159);
move(-0.88,-3.76,-0.30);  object(0x1C93,90,230,206);
move(-36.44,5.31,16.40);  object(0x1CD5,270,0,171);
move(-0.89,5.15,0.00);  object(0x1CD5,270,0,171);
move(-0.72,4.56,0.00);  object(0x1CD5,270,0,171);
move(7.13,3.49,0.00);  object(0x1CD5,270,0,83);
move(0.60,-4.86,0.00);  object(0x1CD5,270,0,83);
move(0.61,-4.96,0.00);  object(0x1CD5,270,0,83);
move(-6.21,-5.04,-4.20);  object(0x1CD5,180,0,80);
move(-0.91,5.12,0.00);  object(0x1CD5,180,0,80);
move(-0.90,5.02,0.00);  object(0x1CD5,180,0,80);
move(-0.93,5.22,0.00);  object(0x1CD5,180,0,80);
move(-0.49,2.76,0.00);  object(0x1CD5,180,0,80);
move(-3.65,-4.17,0.00);  object(0x1CD5,180,0,3);
move(-0.15,-2.86,0.00);  object(0x1CD5,180,0,3);
move(1.59,-8.73,0.00);  object(0x1CD5,180,0,335);
move(11.72,2.24,0.00);  object(0x1CD5,180,0,207);
move(-1.90,11.38,0.00);  object(0x1CD5,180,0,133);
move(0.96,-5.70,0.10);  object(0x1CD5,180,0,82);
move(-0.06,0.40,0.00);  object(0x1CD5,180,0,82);
move(5.38,0.55,0.00);  object(0x1CD6,0,0,82);
move(-6.78,-6.41,-9.80);  object(0x1CD5,65,0,115);
move(-1.11,8.70,0.00);  object(0x1CD5,65,0,60);
move(-7.39,2.18,0.70);  object(0x1CD5,45,0,306);
move(1.12,-13.73,0.00);  object(0x1CD5,45,0,216);
move(-2.02,-2.65,-5.30);  object(0x1CD5,85,0,216);
move(-1.81,18.40,0.00);  object(0x1CD5,85,0,306);
move(15.51,-0.73,1.90);  object(0x1CD6,65,0,57);
move(1.92,-15.17,0.00);  object(0x1CD6,65,0,115);
move(0.16,-0.08,-1.00);  object(0x1C93,65,0,115);
move(-0.90,3.77,-0.40);  object(0x1C93,65,0,48);
move(-2.83,-5.48,0.00);  object(0x1C93,65,0,192);
move(2.67,17.23,0.40);  object(0x1C93,65,0,57);
move(-3.81,1.65,0.00);  object(0x1C93,65,0,341);
move(2.52,-5.75,-0.20);  object(0x1C93,65,0,135);
move(-14.35,4.16,-0.60);  object(0x1C93,10,0,126);
move(1.81,-16.74,0.00);  object(0x1C93,10,0,40);
move(-6.66,-3.76,0.00);  object(0x1C93,10,0,267);
move(4.65,-3.82,0.00);  object(0x1C93,10,0,187);
move(-6.46,25.18,0.20);  object(0x1C93,10,0,266);
move(0.00,0.00,0.00);  object(0x1C93,10,0,266);
move(2.68,5.20,0.00);  object(0x1C93,10,0,336);
move(35.49,-13.47,22.90);  object(0x020B,10,0,73);
move(-2.29,2.52,1.30);  object(0x01B8,0,0,73);
move(0.83,-5.40,0.00);  object(0x01B8,0,0,73);
move(5.92,3.69,-6.20);  object(0x016E,0,325,167);
teleport(-793.36,558.12,10.95)

#cheat GENESIS
moveto(-836.33,546.70,14.77);  object(0x1CD5,240,0,87);
move(-5.31,-0.28,9.10);  object(0x1CD5,240,0,87);
move(3.85,0.21,3.20);  object(0x1CD5,240,0,87);
move(-7.52,-0.60,6.20);  object(0x1CD5,195,0,87);
move(3.66,0.20,-9.20);  object(0x1CD5,145,0,87);
move(4.25,0.22,3.90);  object(0x1CD5,240,0,87);
move(-6.98,-0.30,1.00);  object(0x1CD5,150,0,86);
move(-2.64,20.05,0.00);  object(0x1CD5,150,0,74);
move(2.31,0.60,-5.40);  object(0x1CD5,245,0,74);
move(3.18,0.93,-7.10);  object(0x1CD5,245,0,74);
move(1.23,-0.24,10.60);  object(0x1CD5,245,0,77);
move(-4.72,-1.07,-2.40);  object(0x1CD5,155,0,77);
move(0.74,0.16,0.30);  object(0x1CD5,65,0,77);
move(-4.84,-1.76,3.00);  object(0x1CD5,15,0,78);
move(-3.63,2.04,7.20);  object(0x1CD5,90,0,164);
move(2.95,-18.34,0.00);  object(0x1CD5,90,0,179);
move(0.84,13.96,0.00);  object(0x1CD5,0,0,122);
move(1.61,-14.46,0.00);  object(0x1CD5,0,0,46);
move(2.19,7.61,0.00);  object(0x1CD5,0,0,355);
move(0.04,-0.96,0.00);  object(0x1CD5,0,0,354);
move(-0.13,1.28,0.00);  object(0x1CD5,0,0,354);
move(-4.96,2.19,-0.10);  object(0x1CD5,0,0,355);
move(0.51,-5.57,0.00);  object(0x1CD5,0,0,355);
move(-4.09,-5.70,0.40);  object(0x1CD5,0,0,295);
move(-2.21,15.91,-0.20);  object(0x1CD5,0,0,241);
move(-2.77,-5.62,0.00);  object(0x1CD5,0,0,171);
move(0.58,-4.27,0.00);  object(0x1CD5,0,0,172);
move(3.43,1.34,-0.20);  object(0x1CD5,0,0,176);
move(-0.12,1.70,0.00);  object(0x1CD5,0,0,176);
move(2.16,11.70,0.10);  object(0x1CD5,295,0,177);
move(-0.34,7.01,-2.90);  object(0x1CD6,295,0,177);
move(3.24,-32.20,3.40);  object(0x1CD5,295,0,358);
move(0.19,-6.87,-3.00);  object(0x1CD6,295,0,358);
move(0.16,-0.18,0.20);  object(0x1CD6,295,0,358);
move(-0.17,4.69,9.70);  object(0x1CD6,295,0,358);
move(-3.14,29.83,-0.50);  object(0x1CD6,295,0,176);
move(2.12,-14.63,-4.40);  object(0x1CD5,180,0,266);
move(6.03,0.38,0.60);  object(0x1CD5,90,0,266);
move(-6.53,-0.41,0.00);  object(0x1CD5,90,0,266);
move(4.90,-4.31,4.70);  object(0x1CD5,90,0,308);
move(-4.16,-2.01,0.00);  object(0x1CD5,90,0,2);
move(-4.49,1.69,0.00);  object(0x1CD5,90,0,44);
move(-2.04,4.22,0.00);  object(0x1CD5,90,0,86);
move(1.88,4.46,0.00);  object(0x1CD5,90,0,139);
move(4.83,1.12,0.00);  object(0x1CD5,90,0,191);
move(5.03,-1.81,0.00);  object(0x1CD5,90,0,229);
move(1.02,-4.70,0.00);  object(0x1CD5,90,0,287);
move(-3.80,1.97,6.90);  object(0x1CD5,300,90,294);
move(0.41,-7.74,0.00);  object(0x1CD5,300,90,203);
move(-5.47,1.87,-2.60);  object(0x1CD5,0,0,83);
move(-1.84,-0.24,0.00);  object(0x1CD5,0,0,83);
move(-3.67,2.73,0.00);  object(0x1CD5,0,0,351);
move(13.01,3.91,0.10);  object(0x1CD5,0,0,176);
move(0.42,-2.33,0.00);  object(0x1CD5,0,0,173);
move(-3.65,5.17,0.00);  object(0x1CD5,0,0,265);
move(-7.01,-0.47,0.00);  object(0x1CD5,0,0,86);
move(-2.90,-3.30,0.00);  object(0x1CD5,0,0,356);
move(6.59,-1.45,0.00);  object(0x1CD5,0,0,82);
move(11.37,-2.61,5.60);  object(0x1CD5,285,0,85);
move(-0.42,4.88,0.00);  object(0x1CD5,285,0,85);
move(-0.31,3.59,0.00);  object(0x1CD5,285,0,85);
move(-5.45,-3.04,0.00);  object(0x1CD5,270,0,175);
move(-5.08,-0.43,0.00);  object(0x1CD5,270,0,175);
move(-5.18,-0.44,0.00);  object(0x1CD5,270,0,175);
move(-1.59,-0.13,0.00);  object(0x1CD5,270,0,175);
move(2.77,-1.56,-0.10);  object(0x1CD5,270,0,82);
move(0.62,-4.46,0.00);  object(0x1CD5,270,0,82);
move(2.17,2.74,0.00);  object(0x1CD5,270,0,353);
move(4.91,0.76,0.00);  object(0x1CD5,270,0,352);
move(1.09,0.16,0.00);  object(0x1CD5,270,0,352);
move(-0.25,2.36,5.20);  object(0x1CD5,320,0,265);
move(-0.29,3.49,0.00);  object(0x1CD5,320,0,265);
move(0.70,-8.37,0.00);  object(0x1CD5,320,0,265);
move(-3.94,5.43,1.90);  object(0x1CD5,270,0,174);
move(-2.69,-0.26,0.00);  object(0x1CD5,270,0,174);
move(-4.98,-0.47,0.00);  object(0x1CD5,270,0,174);
move(7.71,-2.61,0.00);  object(0x1CD5,270,0,353);
move(-4.76,-0.59,0.00);  object(0x1CD5,270,0,353);
move(-2.48,-0.31,0.00);  object(0x1CD5,270,0,353);
move(-0.50,4.02,0.00);  object(0x1CD5,270,0,353);
move(8.64,-3.07,-2.80);  object(0x1CD5,270,0,352);
move(2.19,3.59,0.00);  object(0x1CD5,270,0,176);
move(-7.97,1.77,8.50);  object(0x1CD5,180,0,264);
move(-2.36,-5.56,0.10);  object(0x1CD5,180,0,174);
move(2.81,0.97,0.00);  object(0x1CD5,180,0,83);
move(0.46,-3.87,0.00);  object(0x1CD5,180,0,83);
move(3.80,6.05,0.00);  object(0x1CD5,180,0,354);
move(0.26,-2.53,0.00);  object(0x1CD5,180,0,354);
move(-3.34,-1.81,0.10);  object(0x1C93,180,0,266);
move(-0.14,1.89,0.00);  object(0x1C93,180,0,266);
move(-0.16,2.09,0.00);  object(0x1C93,180,0,266);
move(-0.10,1.30,0.00);  object(0x1C93,180,0,266);
move(1.27,-1.14,2.00);  object(0x1CD4,65,0,282);
move(0.14,-2.52,0.00);  object(0x1CD4,65,0,254);
move(-0.36,1.21,0.00);  object(0x1CD4,65,0,266);
move(-1.80,-0.11,1.40);  object(0x1CD4,40,0,266);
move(0.22,1.66,0.00);  object(0x1CD4,40,0,282);
move(0.07,-3.17,0.00);  object(0x1CD4,40,0,257);
move(0.63,-0.06,0.70);  object(0x1CD4,70,0,257);
move(-0.38,1.69,0.00);  object(0x1CD4,70,0,266);
move(0.09,1.50,0.00);  object(0x1CD4,70,0,279);
move(2.59,-0.38,-1.20);  object(0x1CD4,60,0,279);
move(-0.03,-0.75,0.00);  object(0x1CD4,60,0,261);
move(0.23,-1.35,0.00);  object(0x1CD4,60,0,255);
move(1.62,1.26,-1.00);  object(0x1CD4,60,0,264);
move(0.16,0.29,-0.10);  object(0x1CD4,60,0,291);
move(0.20,-0.90,0.00);  object(0x1CD4,60,0,248);
move(-0.77,-0.20,-0.60);  object(0x1CD4,75,0,248);
move(-0.27,1.29,0.00);  object(0x1CD4,75,0,282);
move(-3.70,1.69,2.50);  object(0x1CD4,0,60,192);
move(1.65,-0.21,-0.80);  object(0x1CD4,0,60,190);
move(2.29,-0.52,-1.30);  object(0x1CD4,0,60,189);
move(-3.69,-4.30,2.10);  object(0x1CD4,0,300,351);
move(2.06,0.40,-1.10);  object(0x1CD4,0,300,351);
move(2.12,0.71,-1.00);  object(0x1CD4,0,300,339);
move(-0.95,2.19,1.20);  object(0x1CE5,0,150,248);
move(0.27,-0.97,0.10);  object(0x1CE5,0,225,248);
move(0.08,0.48,-0.40);  object(0x1CE5,270,320,182);
move(-2.21,9.82,-8.30);  object(0x1CD5,0,0,174);
move(1.91,1.70,-3.00);  object(0x1CD5,320,355,246);
move(6.19,3.23,-5.80);  object(0x1CD5,320,355,246);
move(8.12,4.47,-2.40);  object(0x1CD5,25,350,246);
move(4.72,1.71,2.30);  object(0x1CD5,25,350,245);
move(5.73,-1.66,6.30);  object(0x1CD6,350,20,334);
move(-2.39,4.90,0.90);  object(0x1CD6,10,340,152);
move(-0.21,-0.41,1.00);  object(0x1CD6,280,20,159);
move(1.39,1.76,-5.60);  object(0x1CD6,280,20,158);
move(-1.65,-3.49,-0.90);  object(0x1CD6,210,350,246);
move(-0.34,-2.67,3.00);  object(0x1C9F,200,350,244);
move(-0.68,1.13,0.00);  object(0x1C9F,200,350,244);
move(-0.47,1.21,0.40);  object(0x1C9F,200,350,244);
move(0.39,0.47,-1.30);  object(0x1C9F,200,350,244);
move(0.77,-0.99,0.00);  object(0x1C9F,200,350,244);
move(0.50,-1.31,-0.20);  object(0x1C9F,200,350,244);
move(0.53,0.52,-1.10);  object(0x1C9F,200,350,244);
move(-0.91,1.23,0.10);  object(0x1C9F,205,350,245);
move(-0.41,1.13,0.00);  object(0x1C9F,205,350,245);
move(-1.79,-0.64,3.00);  object(0x1C9F,205,350,245);
move(1.10,0.61,-0.50);  object(0x1C9F,205,350,245);
move(-0.10,0.28,-1.90);  object(0x1C9F,205,350,245);
move(-22.45,-35.55,8.20);  object(0x1CD5,180,270,356);
move(6.27,3.98,-4.50);  object(0x1CD5,90,225,185);
move(6.51,-0.57,-6.60);  object(0x1CD5,90,225,185);
move(4.78,-0.46,-1.00);  object(0x1CD5,90,125,184);
move(5.47,-0.39,3.80);  object(0x1CD5,90,125,184);
move(4.12,-5.42,3.00);  object(0x1CD6,90,125,184);
move(-0.10,4.47,2.50);  object(0x1C93,105,145,184);
move(1.91,-0.12,-2.80);  object(0x1C93,105,130,184);
move(-0.13,-2.91,0.10);  object(0x1C93,80,130,184);
move(-1.78,-0.24,2.60);  object(0x1C93,80,150,184);
move(1.69,3.33,2.90);  object(0x1C93,80,150,184);
move(2.74,-0.22,-2.50);  object(0x1C93,80,150,187);
move(-2.54,-3.25,2.80);  object(0x1C93,95,150,178);
move(2.48,-0.07,-3.00);  object(0x1C93,95,150,178);
move(-40.05,9.12,-1.30);  object(0x1CB2,90,190,352);
move(-0.91,7.16,0.00);  object(0x1CB2,90,190,353);
move(0.45,-4.10,0.00);  object(0x1CB2,90,190,353);
move(-5.35,-0.53,-13.00);  object(0x1CB2,90,215,356);
move(3.50,1.60,-12.10);  object(0x1CB2,90,205,353);
move(0.51,-4.01,0.00);  object(0x1CB2,90,205,353);
move(-0.94,7.91,0.00);  object(0x1CB2,90,205,353);
move(3.08,8.73,-0.20);  object(0x1CB2,90,205,61);
move(3.44,-23.90,0.00);  object(0x1CB2,90,205,296);
move(6.24,7.76,32.80);  object(0x1CB4,0,0,200);
move(7.21,16.96,-59.80);  object(0x1CD5,0,0,256);
move(4.86,-20.64,0.00);  object(0x1CD5,0,0,87);
move(9.73,26.36,50.10);  object(0x01B8,10,0,244);
move(-22.96,-15.01,10.80);  object(0x01B8,0,0,153);
move(0.34,-6.44,0.00);  object(0x01B8,0,0,176);
move(3.93,3.53,-1.30);  object(0x0169,0,45,345);
teleport(-793.36,558.12,10.95)

#cheat ACCELERATOR-080T (short)
moveto(-1703.75,13.49,14.87);  object(0x1CB2,0,270,270);

#cheat ACCELERATOR-080T
moveto(-1703.75,13.49,14.87);  object(0x1CB2,0,270,270);
move(-0.10,-0.06,0.00);  object(0x1CB2,0,270,270);
move(14.69,0.19,0.00);  object(0x1CB2,0,270,269);
move(-0.09,6.30,0.00);  object(0x1CB2,0,270,269);
move(-14.70,-0.22,0.00);  object(0x1CB2,0,270,269);
move(-14.40,-0.15,0.00);  object(0x1CB2,0,270,269);
move(0.09,-6.20,0.00);  object(0x1CB2,0,270,269);
move(13.11,13.10,0.00);  object(0x1CB2,0,270,269);
move(0.32,-19.80,0.00);  object(0x1CB2,0,270,270);
move(-13.32,17.79,0.00);  object(0x1CB2,0,270,254);
move(0.40,-16.12,0.00);  object(0x1CB2,0,270,284);
move(26.20,0.21,0.00);  object(0x1CB2,0,270,254);
move(-0.41,16.43,0.00);  object(0x1CB2,0,270,284);
move(10.70,-4.88,0.00);  object(0x1CB2,0,270,268);
move(0.19,-6.34,0.00);  object(0x1CB2,0,270,268);
move(2.65,-1.90,0.00);  object(0x1CB2,0,270,258);
move(-0.34,10.41,0.00);  object(0x1CB2,0,270,278);
move(5.45,-5.30,0.00);  object(0x1CB2,0,270,268);
move(-0.18,4.50,0.00);  object(0x1CB2,0,270,278);
move(0.38,-9.39,0.00);  object(0x1CB2,0,270,258);
move(-31.10,-8.25,-2.50);  object(0x1CB2,0,170,270);
move(0.05,25.35,0.00);  object(0x1CB2,0,190,270);
move(-14.38,-23.61,0.00);  object(0x1CB2,0,170,283);
move(28.68,22.08,0.00);  object(0x1CB2,0,190,282);
move(-0.59,-21.52,0.00);  object(0x1CB2,0,170,252);
move(14.03,3.96,0.00);  object(0x1CB2,0,170,257);
move(3.36,0.86,0.00);  object(0x1CB2,0,170,257);
move(-2.36,14.08,0.00);  object(0x1CB2,0,190,277);
move(3.12,-0.45,0.00);  object(0x1CB2,0,190,277);
move(-46.05,2.15,0.00);  object(0x1CB2,0,190,252);
move(14.13,-20.97,-5.90);  object(0x1CB2,0,155,270);
move(-0.21,21.57,0.00);  object(0x1CB2,0,205,270);
move(-13.19,-2.37,0.00);  object(0x1CB2,0,205,250);
move(26.68,-16.75,0.00);  object(0x1CB2,0,155,251);
move(14.06,4.05,0.00);  object(0x1CB2,0,155,255);
move(3.41,0.79,0.00);  object(0x1CB2,0,155,255);
move(-44.70,-5.77,0.00);  object(0x1CB2,0,155,282);
move(45.55,15.60,0.00);  object(0x1CB2,0,205,277);
move(-3.17,0.28,0.00);  object(0x1CB2,0,205,277);
move(-14.13,2.81,0.00);  object(0x1CB2,0,205,281);
move(-35.62,-10.73,5.20);  object(0x1CB2,0,180,0);
move(-4.96,4.67,0.20);  object(0x1CB2,0,195,232);
move(1.01,-2.08,-6.10);  object(0x1CB2,0,205,232);
move(-1.04,-7.80,6.00);  object(0x1CB2,0,190,115);
move(0.94,1.95,-6.00);  object(0x1CB2,0,210,115);
move(-4.21,2.19,2.90);  object(0x1CB2,90,25,183);
move(6.33,0.35,6.10);  object(0x1CB2,90,270,0);
move(-0.01,4.10,0.00);  object(0x1CB2,90,270,320);
move(0.01,-6.60,0.00);  object(0x1CB2,90,270,205);
move(68.81,8.75,-2.40);  object(0x1CB2,180,10,294);
move(-0.84,-2.11,-6.30);  object(0x1CB2,180,30,294);
move(-1.11,-1.10,-0.20);  object(0x1CB2,180,330,248);
move(1.60,-2.00,6.40);  object(0x1CB2,180,345,248);
move(-1.27,2.13,-6.00);  object(0x1CB2,180,30,68);
move(-5.06,-1.73,8.60);  object(0x1CB2,0,270,68);
move(0.37,4.38,0.00);  object(0x1CB2,0,270,114);
move(4.24,-4.88,-3.00);  object(0x1CB2,0,195,67);
moveto(-1698.14,16.88,16.01);  object(0x1CB2,0,0,180);
move(-7.17,-7.32,0.00);  object(0x1CB2,0,0,90);
move(-0.04,14.70,0.00);  object(0x1CB2,0,0,90);
move(-6.52,-7.18,0.00);  object(0x1CB2,0,0,2);
move(10.47,-0.33,3.30);  object(0x1CB2,0,270,0);
move(-6.80,-0.02,0.00);  object(0x1CB2,0,270,0);
move(6.70,-0.88,-2.80);  object(0x1CB2,270,180,180);
move(-0.01,2.20,0.00);  object(0x1CB2,270,180,180);
move(-3.31,3.29,0.00);  object(0x1CB2,270,180,90);
move(0.03,-8.70,0.00);  object(0x1CB2,270,180,90);
move(-3.36,3.36,0.00);  object(0x1CB2,270,180,0);
move(-0.02,2.18,0.00);  object(0x1CB2,270,180,0);
move(-0.69,-0.01,-8.80);  object(0x1CD6,270,275,0);
moveto(-1701.60,18.74,23.65);  object(0x1CD6,270,0,270);
move(0.03,-3.50,0.00);  object(0x1CD6,270,0,270);
move(-1.51,-0.01,0.00);  object(0x1CD6,270,0,270);
move(-0.03,3.60,0.00);  object(0x1CD6,270,0,270);
move(-1.70,-1.81,3.40);  object(0x1CB4,0,0,270);
moveto(-1705.59,17.16,25.61);  object(0x1CB5,0,0,91);
move(-0.00,-0.40,0.00);  object(0x1CB5,0,0,91);
move(-0.00,-0.50,0.00);  object(0x1CB5,0,0,91);
move(14.45,-3.69,-10.30);  object(0x1C93,0,180,0);
move(0.03,8.45,0.00);  object(0x1C93,0,180,1);
move(0.80,-1.52,0.90);  object(0x1C9F,20,180,90);
move(-0.00,1.50,0.00);  object(0x1C9F,20,180,90);
move(-0.00,1.50,0.00);  object(0x1C9F,20,180,90);
move(0.03,-11.30,0.00);  object(0x1C9F,20,180,90);
move(-0.00,1.50,0.00);  object(0x1C9F,20,180,90);
move(-0.00,1.60,0.00);  object(0x1C9F,20,180,90);
move(-10.07,1.56,3.10);  object(0x1C93,0,0,0);
move(0.72,-1.50,0.80);  object(0x1C9F,350,0,90);
move(0.00,1.40,0.00);  object(0x1C9F,350,0,90);
move(0.00,1.40,0.00);  object(0x1C9F,350,0,90);
pspawn = 0x08E81290;
setint(pspawn, 275);
setfloat(pspawn + 4, -1704.68, 21.53, 21.31, 0);
pspawn += 0x30;
teleport(-1720.58, -310.07, 14.67);
#cheat barracks
moveto(-1747.20,-263.81,14.95);  object(0x1CB2,0,0,270);
move(7.14,7.26,0.00);  object(0x1CB2,0,0,180);
move(-11.30,-0.09,0.00);  object(0x1CB2,0,0,180);
move(0.00,14.60,-0.00);  object(0x1CB2,0,0,180);
move(4.07,7.13,0.00);  object(0x1CB2,0,0,90);
move(-4.41,-8.93,-12.20);  object(0x1D45,0,0,90);
move(1.14,-18.79,11.00);  object(0x1D4E,0,0,270);
move(-0.02,2.30,0.00);  object(0x1D4E,0,0,270);
move(-0.02,2.30,0.00);  object(0x1D4E,0,0,270);
move(-0.02,2.30,0.00);  object(0x1D4E,0,0,270);
move(-0.02,2.30,0.00);  object(0x1D4E,0,0,270);
move(-0.02,2.30,0.00);  object(0x1D4E,0,0,270);
move(-0.02,2.30,0.00);  object(0x1D4E,0,0,270);
move(-0.02,2.30,0.00);  object(0x1D4E,0,0,270);
move(2.07,0.02,-0.20);  object(0x1CF5,0,0,270);
move(0.02,-2.40,0.00);  object(0x1CF5,0,0,270);
move(0.02,-2.30,0.00);  object(0x1CF5,0,0,270);
move(0.02,-2.20,0.00);  object(0x1CF5,0,0,270);
move(0.02,-2.40,0.00);  object(0x1CF5,0,0,270);
move(0.02,-2.30,0.00);  object(0x1CF5,0,0,270);
move(0.02,-2.20,0.00);  object(0x1CF5,0,0,270);
move(0.02,-2.20,0.00);  object(0x1CF5,0,0,270);
move(7.96,-0.07,0.10);  object(0x1D06,0,0,90);
move(-0.00,1.50,0.00);  object(0x1D06,0,0,90);
move(-0.00,1.50,0.00);  object(0x1D06,0,0,90);
move(-0.00,1.50,0.00);  object(0x1D06,0,0,90);
move(-0.00,1.50,0.00);  object(0x1D06,0,0,90);
move(-0.00,1.50,0.00);  object(0x1D06,0,0,90);
move(-0.00,1.50,0.00);  object(0x1D06,0,0,90);
move(-0.00,1.50,0.00);  object(0x1D06,0,0,90);
move(-0.00,1.50,0.00);  object(0x1D06,0,0,90);
move(-0.00,1.50,0.00);  object(0x1D06,0,0,90);
move(0.43,0.57,1.30);  object(0x1CB2,0,0,180);
move(-0.02,13.60,-1.40);  object(0x1CE7,0,0,270);
move(-0.05,-6.30,0.00);  object(0x1CE7,0,0,155);
move(-11.20,1.79,1.40);  object(0x0166,0,0,85);
move(0.00,0.00,0.40);  object(0x0166,0,0,85);
move(0.00,0.00,0.40);  object(0x0166,0,0,85);
move(0.00,0.00,0.40);  object(0x0166,0,0,85);
move(0.00,0.00,0.40);  object(0x0166,0,0,85);
move(0.00,0.00,-2.00);  object(0x0166,0,0,85);
move(0.00,0.00,2.40);  object(0x0166,0,0,85);
move(0.00,0.00,-2.80);  object(0x0166,0,0,85);
move(-0.00,1.20,2.80);  object(0x0160,0,0,85);
move(0.00,0.00,-0.40);  object(0x0160,0,0,85);
move(0.00,0.00,-0.40);  object(0x0160,0,0,85);
move(0.00,0.00,-0.40);  object(0x0160,0,0,85);
move(0.00,0.00,-0.40);  object(0x0160,0,0,85);
move(0.00,0.00,-0.40);  object(0x0160,0,0,85);
move(0.00,0.00,-0.40);  object(0x0160,0,0,85);
move(0.00,0.00,-0.40);  object(0x0160,0,0,85);
move(0.01,-2.80,3.00);  object(0x015E,0,0,85);
move(0.00,0.00,-0.40);  object(0x015E,0,0,85);
move(0.00,0.00,-0.40);  object(0x015E,0,0,85);
move(0.00,0.00,-0.40);  object(0x015E,0,0,85);
move(0.00,0.00,-0.40);  object(0x015E,0,0,85);
move(0.00,0.00,-0.40);  object(0x015E,0,0,85);
move(0.00,0.00,-0.40);  object(0x015E,0,0,85);
move(0.00,0.00,-0.40);  object(0x015E,0,0,85);
move(0.01,-1.50,2.90);  object(0x0169,0,0,85);
move(0.00,0.00,-0.40);  object(0x0169,0,0,85);
move(0.00,0.00,-0.40);  object(0x0169,0,0,85);
move(0.00,0.00,-0.40);  object(0x0169,0,0,85);
move(0.00,0.00,-0.40);  object(0x0169,0,0,85);
move(0.00,0.00,-0.40);  object(0x0169,0,0,85);
move(0.00,0.00,-0.40);  object(0x0169,0,0,85);
move(0.00,0.00,-0.40);  object(0x0169,0,0,85);
move(-0.02,5.40,2.40);  object(0x015A,0,0,90);
move(0.00,0.00,-0.30);  object(0x015A,0,0,90);
move(0.00,0.00,-0.30);  object(0x015A,0,0,90);
move(0.00,0.00,-0.30);  object(0x015A,0,0,90);
move(-0.00,0.40,0.00);  object(0x015A,0,0,90);
move(0.00,0.00,0.30);  object(0x015A,0,0,90);
move(0.00,0.00,0.30);  object(0x015A,0,0,90);
move(0.00,0.00,0.30);  object(0x015A,0,0,90);
move(0.00,-0.40,-1.40);  object(0x0157,0,350,90);
move(0.00,0.00,-0.30);  object(0x0157,0,350,90);
move(0.00,0.00,-0.30);  object(0x0157,0,350,90);
move(0.00,0.00,-0.30);  object(0x0157,0,350,90);
move(-0.00,0.40,0.00);  object(0x0157,0,350,90);
move(0.00,0.00,0.30);  object(0x0157,0,350,90);
move(0.00,0.00,0.30);  object(0x0157,0,350,90);
move(0.00,0.00,0.30);  object(0x0157,0,350,90);
move(9.95,-25.88,-1.80);  object(0x1CF7,0,0,270);
move(-0.01,1.50,0.00);  object(0x1CF7,0,0,270);
move(-0.01,1.60,0.00);  object(0x1CF7,0,0,320);
move(-0.01,1.10,0.20);  object(0x1CF7,0,90,270);
move(-0.01,1.80,-0.20);  object(0x1CF7,0,0,270);
move(-0.01,1.50,0.00);  object(0x1CF7,0,0,270);
move(-0.01,1.50,0.00);  object(0x1CF7,0,0,270);
move(-0.01,1.50,0.00);  object(0x1CF7,0,0,270);
move(-0.01,1.60,0.00);  object(0x1CF7,0,0,270);
move(-0.01,1.50,0.00);  object(0x1CF7,0,0,230);
moveto(-1747.43,-260.36,18.32);  object(0x1CB2,0,270,90);
move(0.05,6.70,0.00);  object(0x1CB2,0,270,90);
move(0.06,6.81,0.00);  object(0x1CB2,0,270,90);
move(-0.04,6.80,0.00);  object(0x1CB2,0,270,90);
move(-0.01,1.82,0.00);  object(0x1CB2,0,270,90);
pspawn = 0x08E81290;
setint(pspawn, 275);
setfloat(pspawn + 4, -1704.68, 21.53, 21.31, 0);
pspawn += 0x30;
teleport(-1720.58, -310.07, 14.67);

#cheat EASY ACTION2
moveto(-1035.43,1162.87,11.19);  object(0x1CB2,270,270,269);
move(0.06,9.96,1.70);  object(0x1CB2,270,240,273);
move(0.32,6.79,4.20);  object(0x1CB2,270,230,273);
move(0.25,5.19,4.80);  object(0x1CB2,270,210,273);
move(0.12,2.60,4.20);  object(0x1CB2,270,200,273);
move(-0.95,-22.23,-14.90);  object(0x1CB2,270,270,179);
move(-6.87,-0.15,0.00);  object(0x1CB2,270,245,180);
move(-5.20,0.02,2.40);  object(0x1CB2,270,235,180);
move(-6.60,0.02,5.00);  object(0x1CB2,270,225,180);
move(-5.00,0.02,5.70);  object(0x1CB2,270,205,180);
move(23.63,-0.02,-13.10);  object(0x1CB2,270,270,222);
move(-7.04,4.46,0.20);  object(0x1CB2,270,245,217);
move(-6.82,5.07,4.80);  object(0x1CB2,270,230,217);
move(-4.17,3.10,4.90);  object(0x1CB2,270,220,217);
move(-2.41,1.79,3.10);  object(0x1CB2,270,205,217);
move(12.37,-11.86,-12.90);  object(0x1CB2,270,240,198);
move(-7.05,2.26,4.40);  object(0x1CB2,270,235,198);
move(-1.32,0.48,1.20);  object(0x1CB2,270,225,192);
move(0.38,1.94,0.00);  object(0x1CB2,270,225,200);
move(-3.81,2.65,3.70);  object(0x1CB2,270,215,200);
move(-1.02,-4.69,0.00);  object(0x1CB2,270,215,188);
move(-3.07,0.42,3.40);  object(0x1CB2,270,200,188);
move(0.75,4.74,0.00);  object(0x1CB2,270,200,199);
move(7.02,7.74,0.50);  object(0x1CB2,265,200,245);
move(5.36,2.00,0.40);  object(0x1CB2,265,200,256);
move(5.79,1.51,0.50);  object(0x1CB2,265,200,258);
move(1.84,0.33,0.00);  object(0x1CB2,265,200,260);
move(-1.64,-3.43,-4.30);  object(0x1CB2,270,215,260);
move(-5.76,-1.17,0.00);  object(0x1CB2,270,215,260);
move(-4.84,-1.79,0.00);  object(0x1CB2,270,215,235);
move(3.70,-1.19,-3.40);  object(0x1CB2,270,230,229);
move(6.49,2.54,1.30);  object(0x1CB2,270,220,261);
move(1.68,-6.33,-4.40);  object(0x1CB2,270,240,261);
move(-3.76,-0.60,-0.70);  object(0x1CB2,270,240,251);
move(6.37,-12.02,-2.70);  object(0x1CB2,270,270,136);
move(0.58,4.55,0.00);  object(0x1CB2,270,270,325);
move(6.10,2.29,0.50);  object(0x1CB2,270,300,104);
move(1.34,7.07,4.20);  object(0x1CB2,270,300,103);
move(-0.16,1.08,0.00);  object(0x1CB2,270,310,95);
move(0.23,5.10,4.60);  object(0x1CB2,270,325,95);
move(0.33,3.48,4.70);  object(0x1CB2,270,340,95);
move(2.53,-16.38,-12.10);  object(0x1CB2,270,300,128);
move(1.70,4.24,2.50);  object(0x1CB2,270,300,114);
move(2.43,5.72,4.00);  object(0x1CB2,270,315,109);
move(-3.04,1.21,0.20);  object(0x1CB2,270,315,108);
move(1.42,4.48,6.00);  object(0x1CB2,270,340,107);
move(3.84,-1.57,0.00);  object(0x1CB2,270,340,122);
move(-3.48,-15.82,-12.20);  object(0x1CB2,270,300,141);
move(6.88,7.36,2.90);  object(0x1CB2,270,285,118);
move(1.36,-0.65,5.30);  object(0x1CB2,270,315,139);
move(-5.40,3.19,-2.70);  object(0x1CB2,260,315,151);
move(3.13,2.29,4.20);  object(0x1CB2,270,320,134);
move(0.98,1.05,1.60);  object(0x1CB2,270,340,126);
move(3.79,-3.88,0.00);  object(0x1CB2,270,340,142);
move(-30.11,-20.21,-13.20);  object(0x1CB2,270,295,316);
move(2.86,-2.03,0.00);  object(0x1CB2,270,295,293);
move(3.51,-0.69,0.00);  object(0x1CB2,270,295,271);
move(2.62,1.11,-0.30);  object(0x1CB2,270,295,243);
move(-14.58,-3.59,6.80);  object(0x1CB2,270,325,312);
move(4.74,-3.48,-0.30);  object(0x1CB2,270,325,303);
move(4.52,-1.82,0.00);  object(0x1CB2,270,325,281);
move(5.17,0.13,0.00);  object(0x1CB2,270,325,258);
move(4.30,1.32,0.30);  object(0x1CB2,270,325,244);
move(1.40,-2.88,4.40);  object(0x1CB2,270,340,244);
move(-5.28,-1.74,0.00);  object(0x1CB2,270,340,261);
move(-5.86,0.03,0.00);  object(0x1CB2,270,340,280);
move(-5.59,2.03,0.00);  object(0x1CB2,270,340,301);
move(-4.86,3.89,-0.20);  object(0x1CB2,270,340,315);
move(-1.13,-1.13,3.90);  object(0x1CB2,270,350,315);
move(5.09,-4.03,0.00);  object(0x1CB2,270,350,302);
move(6.06,-2.30,0.00);  object(0x1CB2,270,350,283);
move(5.89,-0.23,0.00);  object(0x1CB2,270,350,264);
move(5.92,1.77,0.00);  object(0x1CB2,270,350,241);
move(-14.54,17.25,-15.40);  object(0x1CB2,270,295,339);
move(-6.63,-2.53,3.60);  object(0x1CB2,270,320,339);
move(0.33,1.59,-0.30);  object(0x1CB2,270,310,345);
move(-4.81,-1.16,3.80);  object(0x1CB2,270,320,353);
move(1.64,-3.20,0.80);  object(0x1CB2,270,325,320);
move(-2.28,0.85,1.70);  object(0x1CB2,270,325,320);
move(-1.01,1.82,0.00);  object(0x1CB2,270,325,347);
move(2.26,-3.63,0.20);  object(0x1CB2,270,325,323);
move(-5.19,6.46,2.70);  object(0x1CB2,270,325,343);
move(-1.24,-0.38,0.90);  object(0x1CB2,270,335,343);
move(1.58,-3.90,0.00);  object(0x1CB2,270,335,334);
move(2.82,-3.45,0.90);  object(0x1CB2,270,340,315);
move(10.41,-9.57,1.60);  object(0x1CB2,270,350,297);
move(14.39,15.06,-15.60);  object(0x1CB2,270,90,114);
move(-0.77,-0.75,0.00);  object(0x1CB2,270,115,226);
move(1.47,2.03,0.00);  object(0x1CB2,270,115,204);
move(0.41,2.55,0.00);  object(0x1CB2,270,115,179);
move(-0.26,3.52,0.00);  object(0x1CB2,270,115,165);
move(7.96,2.41,5.60);  object(0x1CB2,270,140,162);
move(0.68,-5.22,-0.40);  object(0x1CB2,270,140,177);
move(-1.73,-6.33,-0.60);  object(0x1CB2,270,140,201);
move(1.00,2.83,0.00);  object(0x1CB2,270,140,198);
move(-3.30,-6.66,0.00);  object(0x1CB2,270,140,222);
move(-2.36,-1.86,-0.30);  object(0x1CB2,270,145,246);
move(2.56,-3.15,5.90);  object(0x1CB2,270,155,243);
move(3.08,2.48,0.00);  object(0x1CB2,270,155,226);
move(2.95,4.28,0.00);  object(0x1CB2,270,155,202);
move(1.44,4.70,0.00);  object(0x1CB2,270,155,191);
move(0.31,4.35,0.00);  object(0x1CB2,270,155,175);
move(-1.24,6.03,0.10);  object(0x1CB2,270,155,161);
move(-1.89,5.15,0.00);  object(0x1CB2,270,155,159);
move(-2.20,3.49,0.00);  object(0x1CB2,270,155,136);
move(-4.12,3.25,0.00);  object(0x1CB2,270,155,119);
move(-4.43,1.98,0.00);  object(0x1CB2,270,155,110);
move(6.74,-9.88,-4.70);  object(0x1CB2,270,140,147);
move(-2.30,2.62,0.00);  object(0x1CB2,270,140,133);
move(-2.81,2.21,0.00);  object(0x1CB2,270,140,124);
move(4.14,5.32,9.40);  object(0x1CB2,270,165,115);
move(-4.67,1.95,0.00);  object(0x1CB2,270,165,109);
move(9.09,-5.36,0.00);  object(0x1CB2,270,165,138);
move(2.69,-4.52,0.00);  object(0x1CB2,270,165,161);
move(1.72,-5.09,0.00);  object(0x1CB2,270,165,162);
move(0.94,-5.60,0.00);  object(0x1CB2,270,165,179);
move(-0.54,-5.28,0.00);  object(0x1CB2,270,165,194);
move(-2.03,-4.94,0.00);  object(0x1CB2,270,165,210);
move(-3.18,-4.76,0.00);  object(0x1CB2,270,165,218);
move(-3.21,-3.48,0.00);  object(0x1CB2,270,165,229);
move(3.20,6.89,-6.90);  object(0x1CB2,270,160,213);
move(-16.08,-16.88,10.50);  object(0x1CAA,165,180,183);
move(-0.40,-7.81,-5.40);  object(0x1CAA,170,180,185);
move(-0.46,-8.39,-4.90);  object(0x1CAA,175,180,185);
move(-0.99,-8.95,-4.00);  object(0x1CAA,180,180,187);
move(-1.24,-8.51,-3.00);  object(0x1CAA,185,180,187);
move(-0.99,-7.53,-2.30);  object(0x1CAA,185,180,187);
pspawn=0x08E81290;
setint(pspawn,205);
setfloat(pspawn + 4,-1039.87,1080.86,12.22);
pspawn+=0x30;
teleport(-1013.50,1076.63,9.10);

#cheat All Weapons ver2
//By Sousanator
setint(pplayer+0x5d8,   0x00ffffff);
setint(pplayer+0x5f4,   0x00ffffff);
setint(pplayer+0x610,   0x00ffffff);
setint(pplayer+0x5bc,   0x00ffffff);
setint(pplayer+0x62c,   0x00ffffff);
setint(pplayer+0x648,   0x00ffffff);
setint(pplayer+0x664,   0x00ffffff);
setint(pplayer+0x680,   0x00ffffff);

static weaponPlace;
static group0;
static group1;
static group2;
static group3;
static group4;
static group5;
static group6;
static group7;
static group8;
static group9;


if (pressslow & CTRL_LEFT) {
weaponPlace--;
} else if (pressslow & CTRL_RIGHT) {
weaponPlace++;
}
if (weaponPlace > 9) {
weaponPlace=0;
} else if (weaponPlace < 0) {
weaponPlace=9;
}

if (weaponPlace == 0) {
if (pressslow & CTRL_DOWN) {
group0--;
} else if (pressslow & CTRL_UP) {
group0++;
}
if (group0 > 1) {
group0=0;
} else if (group0 < 0) {
group0=1;
}
setchar(pplayer+0xCB8,    0x00);

if (group0 == 0){
setchar(pplayer+0x578,    0x00);//FIST
} else if (group0 == 1){
setchar(pplayer+0x578,    0x01);//BRASS KNUCLES
}
} else if (weaponPlace == 1) {
if (pressslow & CTRL_DOWN) {
group1--;
} else if (pressslow & CTRL_UP) {
group1++;
}
if (group1 > 9) {
group1=0;
} else if (group1 < 0) {
group1=9;
}
setchar(pplayer+0xCB8,    0x01);
if (group1==0){
setchar(pplayer+0x594,    0x02);//LITTLE KNIFE
} else if (group1==1){
setchar(pplayer+0x594,    0x03);//GOLF CLUB
} else if (group1==2){
setchar(pplayer+0x594,    0x04);//KNIGHT STICK
} else if (group1==3){
setchar(pplayer+0x594,    0x05);//KNIFE
} else if (group1==4){
setchar(pplayer+0x594,    0x06);//BAT
} else if (group1==5){
setchar(pplayer+0x594,    0x07);//AXE
} else if (group1==6){
setchar(pplayer+0x594,    0x08);//CANE
} else if (group1==7){
setchar(pplayer+0x594,    0x09);//MECHETTY
} else if (group1==8){
setchar(pplayer+0x594,    0x0A);//KATANA
} else if (group1==9){
setchar(pplayer+0x594,    0x0B);//SAW
}
} else if (weaponPlace == 2) {
if (pressslow & CTRL_DOWN) {
group2--;
} else if (pressslow & CTRL_UP) {
group2++;
}
if (group2 > 4) {
group2=0;
} else if (group2 < 0) {
group2=4;
}
setchar(pplayer+0xCB8,    0x02);
if (group2==0){
setchar(pplayer+0x5B0,    0x0C);//GRENADE
} else if (group2==1){
setchar(pplayer+0x5B0,    0x0D);//GRENADE2
} else if (group2==2){
setchar(pplayer+0x5B0,    0x0E);//REMOTE MINES
} else if (group2==3){
setchar(pplayer+0x5B0,    0x10);//TEAR GAS
} else if (group2==4){
setchar(pplayer+0x5B0,    0x11);//MOLTOV
}
} else if (weaponPlace == 3) {
if (pressslow & CTRL_DOWN) {
group3--;
} else if (pressslow & CTRL_UP) {
group3++;
}
if (group3 > 1) {
group3=0;
} else if (group3 < 0) {
group3=1;
}
setchar(pplayer+0xCB8,    0x03);
if (group3==0){
setchar(pplayer+0x5CC,    0x13);//PISTOL
} else if (group3==1){
setchar(pplayer+0x5CC,    0x14);//HANDGUN
}
} else if (weaponPlace == 4) {
if (pressslow & CTRL_DOWN) {
group4--;
} else if (pressslow & CTRL_UP) {
group4++;
}
if (group4 > 2) {
group4=0;
} else if (group4 < 0) {
group4=2;
}
setchar(pplayer+0xCB8,    0x04);
if (group4==0){
setchar(pplayer+0x5E8,    0x15);//SHOTGUN
} else if (group4==1){
setchar(pplayer+0x5E8,    0x16);//SHOTGUN2
} else if (group4==2){
setchar(pplayer+0x5E8,    0x17);//SHOTGUN3
}
} else if (weaponPlace == 5) {
if (pressslow & CTRL_DOWN) {
group5--;
} else if (pressslow & CTRL_UP) {
group5++;
}
if (group5 > 3) {
group5=0;
} else if (group5 < 0) {
group5=3;
}
setchar(pplayer+0xCB8,    0x05);
if (group5==0){
setchar(pplayer+0x604,    0x18);//UZI
} else if (group5==1){
setchar(pplayer+0x604,    0x19);//UZI2
} else if (group5==2){
setchar(pplayer+0x604,    0x1A);//SILENT UZI
} else if (group5==3){
setchar(pplayer+0x604,    0x1B);//2HAND UZI
}
} else if (weaponPlace == 6) {
if (pressslow & CTRL_DOWN) {
group6--;
} else if (pressslow & CTRL_UP) {
group6++;
}
if (group6 > 1) {
group6=0;
} else if (group6 < 0) {
group6=1;
}
setchar(pplayer+0xCB8,    0x06);
if (group6==0){
setchar(pplayer+0x620,    0x1C);//2HAND UZI2
} else if (group6==1){
setchar(pplayer+0x620,    0x1D);//AK47
}
} else if (weaponPlace == 7) {
if (pressslow & CTRL_DOWN) {
group7--;
} else if (pressslow & CTRL_UP) {
group7++;
}
if (group7 > 3) {
group7=0;
} else if (group7 < 0) {
group7=3;
}
setchar(pplayer+0xCB8,    0x07);
if (group7==0){
setchar(pplayer+0x63C,    0x20);//ROCKET LAUNCHER
}else if (group7==1){
setchar(pplayer+0x63C,    0x21);//FLAMETHROWER
} else if (group7==2){
setchar(pplayer+0x63C,    0x22);//MINIGUN2
} else if (group7==3){
setchar(pplayer+0x63C,    0x23);//CHAINGUN
}
} else if (weaponPlace == 8) {
if (pressslow & CTRL_DOWN) {
group8--;
} else if (pressslow & CTRL_UP) {
group8++;
}
if (group8 > 1) {
group8=0;
} else if (group8 < 0) {
group8=1;
}
setchar(pplayer+0xCB8,    0x08);
if (group8==0){
setchar(pplayer+0x658,    0x1E);//SNIPER
} else if (group8==1){
setchar(pplayer+0x658,    0x1F);//SNIPER2
}
} else if (weaponPlace == 9) {
if (pressslow & CTRL_DOWN) {
group9--;
} else if (pressslow & CTRL_UP) {
group9++;
}
if (group9 > 2) {
group9=0;
} else if (group9 < 0) {
group9=2;
}
setchar(pplayer+0xCB8,    0x09);
if (group9==0){
setchar(pplayer+0x674,    0x27);//BINOCULARS
} else if (group9==1){
setchar(pplayer+0x674,    0x26);//CAMERA
} else if (group9==2){
setchar(pplayer+0x674,    0x24);//REMOTE SWITCH
}
}

#cheat CITA
moveto(-847.35,545.01,13.99);  object(0x1CD5,280,0,276);
move(-1.77,0.20,10.20);  object(0x1CD5,280,0,276);
move(4.16,-0.46,5.80);  object(0x1CD5,280,0,276);
move(1.41,-0.15,-5.20);  object(0x1CD5,10,0,276);
move(-0.16,0.02,5.60);  object(0x1CD5,280,0,276);
move(-1.84,0.10,10.20);  object(0x1CD5,280,0,276);
move(-1.26,0.14,-0.40);  object(0x1CD5,280,0,276);
move(3.42,-0.27,1.30);  object(0x1CD5,20,0,276);
move(-1.37,0.15,5.50);  object(0x1CD5,290,0,276);
move(-0.66,0.07,0.30);  object(0x1CD5,20,0,276);
move(-0.38,0.01,-0.50);  object(0x1CD5,250,0,98);
move(2.94,-0.40,0.90);  object(0x1CD5,250,0,98);
move(-7.57,1.02,2.00);  object(0x1CD5,220,0,98);
move(1.02,-0.14,3.00);  object(0x1CD5,185,0,98);
move(-8.41,1.13,-3.70);  object(0x1CD6,220,0,98);
move(8.06,-1.29,-19.70);  object(0x1CD6,260,0,98);
move(0.00,0.00,0.00);  object(0x1CD6,260,0,98);
move(9.60,17.35,-14.40);  object(0x1CD5,260,0,98);
move(-1.62,0.22,9.50);  object(0x1CD5,260,0,98);
move(-0.47,0.06,5.60);  object(0x1CD5,170,0,98);
move(0.44,-0.06,0.40);  object(0x1CD5,80,0,98);
move(-1.26,0.17,0.00);  object(0x1CD5,80,0,98);
move(-0.70,0.10,11.00);  object(0x1CD5,80,0,98);
move(-1.22,0.17,0.00);  object(0x1CD5,80,0,98);
move(4.07,-0.55,1.60);  object(0x1CD5,340,0,98);
move(3.41,-0.46,7.10);  object(0x1CD5,250,0,98);
move(-5.99,0.82,-1.80);  object(0x1CD5,250,0,98);
move(-1.29,0.18,5.10);  object(0x1CD5,160,0,98);
move(1.13,-0.15,-3.00);  object(0x1CD5,160,0,98);
move(-2.59,0.35,3.90);  object(0x1CD5,185,0,98);
move(1.50,-0.20,-5.00);  object(0x1CD5,225,0,98);
move(-2.98,0.41,1.90);  object(0x1CD5,220,0,98);
move(-4.03,0.75,3.30);  object(0x1CD7,40,0,98);
move(6.21,-13.07,-9.90);  object(0x1CD5,0,0,182);
move(0.24,5.71,0.00);  object(0x1CD5,0,0,182);
move(-0.03,-0.61,9.20);  object(0x1CD5,90,0,182);
move(2.10,-0.08,9.70);  object(0x1CD5,90,335,182);
move(-0.74,-3.38,0.60);  object(0x1CD5,90,335,182);
move(0.28,6.98,0.00);  object(0x1CD5,90,335,182);
move(-4.40,0.18,0.70);  object(0x1CD5,90,10,182);
move(-0.13,-3.16,0.00);  object(0x1CD5,90,10,182);
move(-0.15,-3.80,0.00);  object(0x1CD5,90,10,182);
move(3.19,1.29,5.80);  object(0x1CD5,90,0,1);
move(-0.08,-3.10,0.00);  object(0x1CD5,90,0,1);
move(-0.08,-3.23,0.00);  object(0x1CD5,90,0,1);
move(-4.00,-0.03,4.90);  object(0x1CD5,90,0,1);
move(0.09,3.65,0.00);  object(0x1CD5,90,0,1);
move(0.08,3.29,0.00);  object(0x1CD5,90,0,1);
move(6.03,-3.93,-3.80);  object(0x1CD5,90,340,2);
move(-0.72,-3.15,0.50);  object(0x1CD5,90,340,2);
move(0.29,6.81,-0.10);  object(0x1CD5,90,340,2);
move(-1.70,0.09,4.40);  object(0x1CD5,90,340,2);
move(-0.29,-6.82,0.00);  object(0x1CD5,90,340,2);
move(0.73,3.09,0.00);  object(0x1CD5,90,340,2);
move(-2.38,2.55,-17.20);  object(0x1CD5,0,350,3);
move(0.04,0.70,0.00);  object(0x1CD5,0,350,3);
move(0.96,-0.76,-0.20);  object(0x1CD5,0,25,3);
move(0.04,0.80,0.00);  object(0x1CD5,0,25,3);
move(-3.15,-0.65,17.10);  object(0x1CD5,0,0,1);
move(0.02,0.81,0.00);  object(0x1CD5,0,0,1);
move(3.90,-0.10,0.90);  object(0x1CD5,0,340,1);
move(-0.02,-0.71,0.00);  object(0x1CD5,0,340,1);
move(-0.07,0.70,2.70);  object(0x1CD5,335,0,278);
move(-2.84,0.38,7.10);  object(0x1CD7,335,0,278);
move(9.83,-1.42,-4.70);  object(0x1CD7,20,0,278);
move(-0.27,2.67,-4.60);  object(0x1CD7,90,0,10);
move(-2.25,-4.83,3.90);  object(0x1CD7,0,340,10);
move(0.68,5.20,0.00);  object(0x1CD7,0,340,10);
move(2.91,-2.14,-1.30);  object(0x1CE5,0,340,271);
move(-0.13,-1.14,-0.20);  object(0x1CE5,0,0,278);
move(-0.17,-1.12,0.20);  object(0x1CE5,345,200,286);
move(-11.59,11.29,0.30);  object(0x1CD5,270,245,279);
move(1.18,9.25,3.00);  object(0x1CD5,270,260,276);
move(1.08,10.17,0.40);  object(0x1CD5,270,275,276);
move(-2.22,-17.91,-5.10);  object(0x1CD5,270,270,279);
move(0.88,6.25,0.00);  object(0x1CD5,270,270,276);
move(0.93,8.78,1.50);  object(0x1CD5,270,260,275);
move(0.10,1.40,-0.60);  object(0x1CD5,270,260,275);
move(0.56,4.13,1.00);  object(0x1CD5,270,185,275);
move(0.18,1.89,-8.60);  object(0x1CD5,270,150,275);
move(5.18,2.33,-4.80);  object(0x1CD7,270,150,276);
move(-7.00,-18.01,6.80);  object(0x1CD5,270,150,276);
move(5.09,3.80,-7.20);  object(0x1CD5,210,150,276);
move(5.42,0.95,-2.70);  object(0x1CD5,210,150,276);
move(4.67,0.93,-2.40);  object(0x1CD7,30,150,276);
move(1.91,-2.61,4.10);  object(0x1C93,30,150,276);
move(3.80,0.71,-1.90);  object(0x1C93,30,150,276);
move(3.29,0.67,-1.70);  object(0x1C93,30,150,276);
move(-9.41,1.18,-0.20);  object(0x1C93,30,150,274);
move(3.79,0.84,-1.90);  object(0x1C93,30,150,274);
move(3.82,0.84,-1.90);  object(0x1C93,30,150,274);
move(-4.62,-2.09,4.20);  object(0x1C93,30,150,274);
move(0.82,-0.94,1.20);  object(0x1C93,30,150,274);
move(3.95,0.83,-2.10);  object(0x1C93,30,150,274);
move(-0.66,1.05,-1.40);  object(0x1C93,30,150,274);
move(3.85,0.73,-1.90);  object(0x1C93,30,150,274);
move(0.89,-0.95,1.40);  object(0x1C93,30,150,274);
move(3.18,1.07,-2.30);  object(0x1C93,30,150,274);
move(3.73,0.83,-1.80);  object(0x1C93,30,150,274);
move(3.31,0.66,-1.60);  object(0x1C93,30,150,274);
move(-9.52,-2.96,6.00);  object(0x1C93,50,150,272);
move(-1.37,1.85,-2.50);  object(0x1C93,0,150,278);
move(-5.27,-1.58,3.60);  object(0x1C93,20,150,274);
move(-18.70,-33.66,17.40);  object(0x1CD5,335,0,167);
move(2.02,-8.79,2.40);  object(0x1CD5,355,0,167);
move(2.54,-10.23,0.40);  object(0x1CD5,0,0,165);
move(-4.95,19.27,-5.40);  object(0x1CD5,0,0,168);
move(2.17,-9.92,0.00);  object(0x1CD5,0,0,168);
move(2.71,-10.26,2.00);  object(0x1CD5,340,0,162);
move(-1.31,5.54,1.80);  object(0x1CD5,0,0,164);
move(1.52,-5.72,0.70);  object(0x1CD5,85,0,164);
move(0.66,-2.69,-10.20);  object(0x1CD5,65,0,165);
move(1.95,-6.46,-2.80);  object(0x1CD7,65,0,163);
move(-6.87,22.99,4.70);  object(0x1CD5,65,0,79);
move(7.78,1.42,-5.70);  object(0x1CD5,355,0,259);
move(8.53,1.60,-0.70);  object(0x1CD5,355,0,259);
move(5.37,1.01,-0.40);  object(0x1CD6,175,0,259);
move(1.48,-1.94,0.40);  object(0x1C93,155,0,291);
move(0.13,-0.19,3.20);  object(0x1C93,20,335,273);
move(3.13,-0.18,0.50);  object(0x1C93,350,335,273);
move(-2.95,2.53,-0.10);  object(0x1C93,15,355,265);
move(3.12,0.28,0.30);  object(0x1C93,350,0,265);
move(-4.42,1.45,-0.50);  object(0x1C93,10,0,244);
move(3.12,1.33,0.40);  object(0x1C93,355,0,253);
move(-2.85,-1.70,-3.40);  object(0x1C93,345,10,253);
move(1.75,0.53,-0.70);  object(0x1C93,355,10,253);
move(-22.66,0.88,-59.20);  object(0x1CD5,0,0,275);
move(-3.73,0.33,0.00);  object(0x1CD5,0,0,275);
move(6.33,-0.57,0.90);  object(0x1CD5,335,0,275);
move(1.65,18.43,0.00);  object(0x1CD5,335,0,275);
move(-6.80,0.75,-1.10);  object(0x1CD5,0,0,96);
move(6.52,-12.57,74.20);  object(0x01B8,0,0,299);
move(0.00,0.00,0.00);  object(0x01B8,0,0,299);
move(0.00,0.00,0.00);  object(0x01B8,0,0,299);
move(0.00,0.00,0.00);  object(0x01B8,0,0,299);
move(0.00,0.00,0.00);  object(0x01B8,0,0,299);
move(2.29,5.22,0.00);  object(0x01B8,0,0,299);
move(0.00,0.00,0.00);  object(0x01B8,0,0,299);
move(0.00,0.00,0.00);  object(0x01B8,0,0,299);
move(0.00,0.00,0.00);  object(0x01B8,0,0,299);
move(0.00,0.00,0.00);  object(0x01B8,0,0,299);
move(0.00,0.00,0.00);  object(0x01B8,0,0,299);
move(0.69,-2.90,-0.30);  object(0x020B,20,0,278);
move(-4.25,0.71,-4.30);  object(0x1CD5,20,0,280);
teleport(-793.36,558.12,10.95);