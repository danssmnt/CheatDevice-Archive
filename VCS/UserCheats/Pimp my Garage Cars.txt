#cheat Monster Sandking at The Clymenus Suite
//Author:buzbegone
//Helped with the suspension by Vette
//Any problems, PM me
//Basics
setint(0x8C73B30, 245); //Car Id
setchar(0x8C73B30+0x24, 255,255,255, 255); //Color 1
setchar(0x8C73B30+0x28, 0,0,255, 255); //Color2
setshort(0x98a2fb2, 1, 'M','o','n','s','t','e','r',' ','S','a','n','d','k','i','n','g', 0);
//Wheels
setfloat(0x936A678, 1.38, 1.38); //wheel size
setfloat(0x96329e0+0x6c, 0.75); //Traction Multiplier
setfloat(0x96329e0+0xc4, 0.85); //Traction Loss
setfloat(0x96329e0+0x70, 0.5); //Traction Bias
//Engine
setchar(0x96329e0+0x5c, '4', 'P', 3); // Drive type / Engine type / Gears
//Suspension
setfloat(0x96329e0+0x7c, 0.42); //Suspension Upper Limit
setfloat(0x96329e0+0x80, -0.65); //Suspension Lower Limit
setfloat(0x96329e0+0x78, 0.08); //Suspension Damping Level
setfloat(0x96329e0+0x74, 1.19); //Suspension Force Level
setfloat(0x96329e0+0x84, 0.5); //Suspension Bias
setfloat(0x96329e0+0x88, 0); //Anti-Dive Multiplier
//Handling
setfloat(0x96329e0+0x68, 30); //Steering Lock
setfloat(0x96329e0+0xbc, 1500); //Vehilce Mass
setfloat(0x96329e0+0xc0, 1500); //Turn Mass
setfloat(0x96329e0+0xa0, 0); //Centre of Mass - X
setfloat(0x96329e0+0xa4, 0); //Centre of Mass - Y
setfloat(0x96329e0+0xa8, 0); //Centre of Mass - Z
//Teleport
teleport( 268.31, -174.98, 11.50);
off()

#cheat DM ARENA
// made by kmann 
moveto(872.77,  1143.55,  8.02);  object(0x1CB2,  170,  270,  272);
move(14.13,  2.01,  0.00);  object(0x1CB2,  170,  270,  272);
move(14.15,  2.01,  0.00);  object(0x1CB2,  170,  270,  272);
move(0.00,  0.00,  0.00);  object(0x1CB2,  170,  270,  272);
move(14.39,  1.95,  0.00);  object(0x1CB2,  170,  270,  272);
move(13.81,  1.90,  0.00);  object(0x1CB2,  170,  270,  272);
move(14.45,  2.09,  0.00);  object(0x1CB2,  170,  270,  272);
move(13.46,  1.89,  0.00);  object(0x1CB2,  170,  270,  272);
move(11.13,  -7.68,  0.00);  object(0x1CB2,  80,  270,  268);
move(-2.94,  13.70,  0.00);  object(0x1CB2,  80,  270,  268);
move(-2.73,  13.87,  0.00);  object(0x1CB2,  80,  270,  270);
move(6.59,  1.23,  0.00);  object(0x1CB2,  80,  270,  270);
move(2.50,  -13.99,  0.00);  object(0x1CB2,  80,  270,  270);
move(2.46,  -13.69,  0.00);  object(0x1CB2,  80,  270,  270);
move(-5.59,  30.62,  1.20);  object(0x1CA3,  0,  0,  355);
move(-5.84,  -2.52,  0.00);  object(0x1CA3,  0,  0,  355);
move(12.34,  -30.61,  0.00);  object(0x1CA3,  0,  0,  178);
move(-4.64,  -2.21,  0.00);  object(0x1CA3,  0,  0,  178);
move(-1.89,  7.77,  -1.30);  object(0x1CD2,  0,  0,  355);
move(-1.53,  -0.11,  0.00);  object(0x1CD2,  0,  0,  355);
move(5.69,  1.56,  1.10);  object(0x1CD4,  0,  270,  355);
move(-7.06,  16.59,  -0.60);  object(0x1CF5,  0,  80,  80);
move(-2.03,  -0.53,  0.00);  object(0x1CF5,  0,  80,  80);
move(0.00,  0.00,  1.10);  object(0x1CF5,  0,  80,  80);
move(2.03,  0.53,  0.00);  object(0x1CF5,  0,  80,  80);
move(5.05,  -2.47,  -1.20);  object(0x1D00,  0,  0,  162);
move(-2.26,  -0.93,  0.00);  object(0x1D00,  0,  0,  161);
move(-0.00,  -3.46,  -0.30);  object(0x1D11,  0,  0,  169);
move(0.00,  0.00,  0.90);  object(0x1D11,  0,  0,  169);
move(7.71,  1.44,  -0.60);  object(0x1904,  0,  285,  168);
move(3.01,  0.62,  0.80);  object(0x1904,  0,  285,  168);
move(3.02,  0.72,  0.80);  object(0x1904,  0,  285,  168);
move(-184.85,  -39.24,  12.16);  object(0x0204,  0,  0,  358);
move(0.36,  -10.10,  0.00);  object(0x0204,  0,  0,  358);
move(0.39,  -10.90,  0.00);  object(0x0204,  0,  0,  358);
move(5.83,  0.21,  -5.90);  object(0x01D0,  0,  0,  358);
move(-0.08,  2.40,  0.00);  object(0x01D0,  0,  0,  358);
move(0.04,  -1.10,  0.00);  object(0x01D0,  0,  0,  358);
move(3.37,  0.11,  0.00);  object(0x01D0,  0,  0,  358);
move(-0.05,  1.30,  0.00);  object(0x01D0,  0,  0,  358);
move(0.08,  -2.40,  0.00);  object(0x01D0,  0,  0,  358);
move(-0.52,  -0.86,  0.00);  object(0x01D0,  0,  0,  341);
move(-2.45,  -0.09,  0.00);  object(0x01D0,  0,  0,  344);
move(-4.76,  -1.81,  0.60);  object(0x01C5,  0,  0,  254);
move(0.81,  -2.78,  0.00);  object(0x01C5,  0,  0,  254);
move(5.51,  5.14,  0.00);  object(0x01C6,  0,  0,  260);
move(-0.73,  -0.67,  -1.20);  object(0x01B4,  0,  0,  201);
move(0.49,  0.12,  0.00);  object(0x01B4,  0,  0,  201);
move(0.00,  0.00,  0.00);  object(0x01B3,  0,  0,  201);
move(-0.19,  -0.05,  0.00);  object(0x01B4,  0,  0,  201);
move(2.01,  1.94,  0.40);  object(0x016C,  0,  0,  227);
move(-1.82,  -7.69,  1.60);  object(0x1D0F,  335,  0,  177);
move(0.18,  -5.90,  6.90);  object(0x1D0F,  330,  0,  178);

teleport(872.77,  1143.55,  8.02); 

#cheat 4X4--SandKing

//Image: none
//Time: 28/01/2008 13:28:50
//Working: Yes
//Created By Sunshine Customs
//Sunshine Customs Created By emcp
//Addresses Found By Vette
//Basics
setint(0x8C73B30,  172); //Car Id
setchar(0x8C73B30+0x24,  255,  255,  0,  255); //Color 1
setchar(0x8C73B30+0x28,  255,  255,  0,  255); //Color2
setshort(0x98a33b8,  1,  'l',  'a',  'm',  'b',  'o',  0);
//Wheels
setfloat(0x935E6D8,  0.67,  0.67); //wheel size
setfloat(0x962ea40+0x6c,  1.05); //Traction Multiplier
setfloat(0x962ea40+0xc4,  0.85); //Traction Loss
setfloat(0x962ea40+0x70,  0.5); //Traction Bias
//Engine
setchar(0x962ea40+0x5c,  'R',  'P',  6); // Drive type / Engine type / Gears
//Suspension
setfloat(0x962ea40+0x7c,  0.35); //Suspension Upper Limit
setfloat(0x962ea40+0x80,  -0.15); //Suspension Lower Limit
setfloat(0x962ea40+0x78,  0.08); //Suspension Damping Level
setfloat(0x962ea40+0x74,  1); //Suspension Force Level
setfloat(0x962ea40+0x84,  0.5); //Suspension Bias
setfloat(0x962ea40+0x88,  0.3); //Anti-Dive Multiplier
//Handling
setfloat(0x962ea40+0x68,  30); //Steering Lock
setfloat(0x962ea40+0xbc,  2900); //Vehilce Mass
setfloat(0x962ea40+0xc0,  3200); //Turn Mass
setfloat(0x962ea40+0xa0,  0); //Centre of Mass - X
setfloat(0x962ea40+0xa4,  0); //Centre of Mass - Y
setfloat(0x962ea40+0xa8,  0); //Centre of Mass - Z
//Effects
//Neon
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,   255,  0,  0);}
//Teleport
teleport( 268.31,  -174.98,  11.50);
off() 

#cheat lambo at clymens suite
//Created By Sunshine Customs
//Sunshine Customs Created By emcp
//Addresses Found By Vette
//Basics
setint(0x8C73B30,  172); //Car Id
setchar(0x8C73B30+0x24,  255,  255,  0,  255); //Color 1
setchar(0x8C73B30+0x28,  255,  255,  0,  255); //Color2
setshort(0x98a33b8,  1,  'l',  'a',  'm',  'b',  'o',  0);
//Wheels
setfloat(0x935E6D8,  0.67,  0.67); //wheel size
setfloat(0x962ea40+0x6c,  1.05); //Traction Multiplier
setfloat(0x962ea40+0xc4,  0.85); //Traction Loss
setfloat(0x962ea40+0x70,  0.5); //Traction Bias
//Engine
setchar(0x962ea40+0x5c,  'R',  'P',  6); // Drive type / Engine type / Gears
//Suspension
setfloat(0x962ea40+0x7c,  0.35); //Suspension Upper Limit
setfloat(0x962ea40+0x80,  -0.15); //Suspension Lower Limit
setfloat(0x962ea40+0x78,  0.08); //Suspension Damping Level
setfloat(0x962ea40+0x74,  1); //Suspension Force Level
setfloat(0x962ea40+0x84,  0.5); //Suspension Bias
setfloat(0x962ea40+0x88,  0.3); //Anti-Dive Multiplier
//Handling
setfloat(0x962ea40+0x68,  30); //Steering Lock
setfloat(0x962ea40+0xbc,  2900); //Vehilce Mass
setfloat(0x962ea40+0xc0,  3200); //Turn Mass
setfloat(0x962ea40+0xa0,  0); //Centre of Mass - X
setfloat(0x962ea40+0xa4,  0); //Centre of Mass - Y
setfloat(0x962ea40+0xa8,  0); //Centre of Mass - Z
//Effects
//Neon
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,   255,  0,  0);}
//Teleport
teleport( 268.31,  -174.98,  11.50);
off()

#cheat eclipse at clymens suite
//Created By Sunshine Customs
//Sunshine Customs Created By emcp
//Addresses Found By Vette
//Basics
setint(0x8C73B30,  274); //Car Id
setchar(0x8C73B30+0x24,  179,  106,  0,  255); //Color 1
setchar(0x8C73B30+0x28,  0,  0,  0,  255); //Color2
setshort(0x98a3212,  1,  'e',  'c',  'l',  'i',  'p',  's',  'e',  0);
//Wheels
setfloat(0x936F298,  1,  1); //wheel size
setfloat(0x9634500+0x6c,  0.75); //Traction Multiplier
setfloat(0x9634500+0xc4,  0.85); //Traction Loss
setfloat(0x9634500+0x70,  0.5); //Traction Bias
//Engine
setchar(0x9634500+0x5c,  'R',  'P',  6); // Drive type / Engine type / Gears
//Suspension
setfloat(0x9634500+0x7c,  0.35); //Suspension Upper Limit
setfloat(0x9634500+0x80,  -0.15); //Suspension Lower Limit
setfloat(0x9634500+0x78,  0.08); //Suspension Damping Level
setfloat(0x9634500+0x74,  1); //Suspension Force Level
setfloat(0x9634500+0x84,  0.5); //Suspension Bias
setfloat(0x9634500+0x88,  0); //Anti-Dive Multiplier
//Handling
setfloat(0x9634500+0x68,  30); //Steering Lock
setfloat(0x9634500+0xbc,  1500); //Vehilce Mass
setfloat(0x9634500+0xc0,  1500); //Turn Mass
setfloat(0x9634500+0xa0,  0); //Centre of Mass - X
setfloat(0x9634500+0xa4,  0); //Centre of Mass - Y
setfloat(0x9634500+0xa8,  0); //Centre of Mass - Z
//Neon
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,   255,  0,  0);}
//Teleport
teleport( 268.31,  -174.98,  11.50);
off() 

#cheat hummer at clymens suite
//Created By Sunshine Customs
//Sunshine Customs Created By emcp
//Addresses Found By Vette
//Basics
setint(0x8C73B30,  209); //Car Id
setchar(0x8C73B30+0x24,  0,  0,  0,  255); //Color 1
setchar(0x8C73B30+0x28,  255,  0,  0,  255); //Color2
setshort(0x98a325a,  1,  'h',  'u',  'm',  'm',  'e',  'r',  0);
//Wheels
setfloat(0x93647F8,  1.15,  1.15); //wheel size
setfloat(0x96309c0+0x6c,  0.75); //Traction Multiplier
setfloat(0x96309c0+0xc4,  0.85); //Traction Loss
setfloat(0x96309c0+0x70,  0.5); //Traction Bias
//Engine
setchar(0x96309c0+0x5c,  '4',  'D',  6); // Drive type / Engine type / Gears
//Suspension
setfloat(0x96309c0+0x7c,  0.35); //Suspension Upper Limit
setfloat(0x96309c0+0x80,  -0.15); //Suspension Lower Limit
setfloat(0x96309c0+0x78,  0.08); //Suspension Damping Level
setfloat(0x96309c0+0x74,  1); //Suspension Force Level
setfloat(0x96309c0+0x84,  0.5); //Suspension Bias
setfloat(0x96309c0+0x88,  0.2); //Anti-Dive Multiplier
//Handling
setfloat(0x96309c0+0x68,  30); //Steering Lock
setfloat(0x96309c0+0xbc,  2500); //Vehilce Mass
setfloat(0x96309c0+0xc0,  2900); //Turn Mass
setfloat(0x96309c0+0xa0,  0); //Centre of Mass - X
setfloat(0x96309c0+0xa4,  0); //Centre of Mass - Y
setfloat(0x96309c0+0xa8,  0); //Centre of Mass - Z
//Neon
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,   0,  255,  0);}
//Teleport
teleport( 268.31,  -174.98,  11.50);
off() 

#cheat nissan at clymens suite
//Created By Sunshine Customs
//Sunshine Customs Created By emcp
//Addresses Found By Vette
//Basics
setint(0x8C73B30,  171); //Car Id
setchar(0x8C73B30+0x24,  248,  151,  5,  255); //Color 1
setchar(0x8C73B30+0x28,  255,  0,  0,  255); //Color2
setshort(0x98a30e2,  1,  'n',  'i',  's',  's',  'a',  'n',  0);
//Wheels
setfloat(0x935E438,  1,  1); //wheel size
setfloat(0x962eb20+0x6c,  1); //Traction Multiplier
setfloat(0x962eb20+0xc4,  0.85); //Traction Loss
setfloat(0x962eb20+0x70,  0.5); //Traction Bias
//Engine
setchar(0x962eb20+0x5c,  'R',  'P',  3); // Drive type / Engine type / Gears
//Suspension
setfloat(0x962eb20+0x7c,  0.35); //Suspension Upper Limit
setfloat(0x962eb20+0x80,  -0.15); //Suspension Lower Limit
setfloat(0x962eb20+0x78,  0.08); //Suspension Damping Level
setfloat(0x962eb20+0x74,  1); //Suspension Force Level
setfloat(0x962eb20+0x84,  0.5); //Suspension Bias
setfloat(0x962eb20+0x88,  0); //Anti-Dive Multiplier
//Handling
setfloat(0x962eb20+0x68,  30); //Steering Lock
setfloat(0x962eb20+0xbc,  1650); //Vehilce Mass
setfloat(0x962eb20+0xc0,  1900); //Turn Mass
setfloat(0x962eb20+0xa0,  0); //Centre of Mass - X
setfloat(0x962eb20+0xa4,  0); //Centre of Mass - Y
setfloat(0x962eb20+0xa8,  0); //Centre of Mass - Z
//Teleport
teleport( 268.31,  -174.98,  11.50);
off()

#cheat BIG WEELD BLISTA CMPQ
//Made with Wheel Size Changer by psphacker108
setfloat(0x935F3F8,  5.0);

#cheat pcj-600 red and black
//Generated By VCS Cheater
//Orginal Car Color Cheats Found by vettefan88
if(getshort(pcar + 0x56)== 212)
{
setchar(pcar + 0x00000224,  0,  0,  0);
setchar(pcar + 0x00000228,  255,  0,  0); 

#cheat The 122222 sanchez *with the ultimate wheelie*
 //Created By Sunshine Customs
 //Sunshine Customs Created By emcp
 //Addresses Found By Vette
 //Basics
 setint(0x8C73B30,  205); //Car Id
 setchar(0x8C73B30+0x24,  0,  0,  0,  255); //Color 1
 setchar(0x8C73B30+0x28,  0,  0,  0,  255); //Color2
 setshort(0x98a322a,  1,  '1',  '2',  '2',  '2',  '2',  '2',  0); 
 //Wheels
 setfloat(0x9630640+0x6c,  0.75); //Traction Multiplier
 setfloat(0x9630640+0xc4,  2); //Traction Loss
 setfloat(0x9630640+0x70,  0.5); //Traction Bias
 //Engine
 setchar(0x9630640+0x5c,  'F',  'P',  6); // Drive type / Engine type / Gears
 //Suspension
 setfloat(0x9630640+0x7c,  0.35); //Suspension Upper Limit
 setfloat(0x9630640+0x80,  -0.04); //Suspension Lower Limit
 setfloat(0x9630640+0x78,  0.08); //Suspension Damping Level
 setfloat(0x9630640+0x74,  1); //Suspension Force Level
 setfloat(0x9630640+0x84,  0.5); //Suspension Bias
 setfloat(0x9630640+0x88,  0); //Anti-Dive Multiplier
 //Handling
 setfloat(0x9630640+0x68,  41); //Steering Lock
 setfloat(0x9630640+0xbc,  1500); //Vehilce Mass
 setfloat(0x9630640+0xc0,  1500); //Turn Mass
 setfloat(0x9630640+0xa0,  0); //Centre of Mass - X
 setfloat(0x9630640+0xa4,  0); //Centre of Mass - Y
 setfloat(0x9630640+0xa8,  0); //Centre of Mass - Z
 //Teleport
 teleport( 268.31,  -174.98,  11.50);
off()

#cheat custumized Deluxo @ Compound
 //Car custumized by hoockhand
 //Created By Vice Mod Shop
 //Vice Mod Shop Created By emcp
 //Addresses Found By Vette
 //Basics
 setint(0x8C73A70,  187);
 setchar(0x8C73A70+0x24,  0,  0,  0,  255);
 setchar(0x8C73A70+0x28,  255,  140,  0,  255);
 //Wheels
 setfloat(0x9360E38,  1.06,  1.06);
 setfloat(0x962f680+0x6c,  1);
 setfloat(0x962f680+0xc4,  0.7);
 setfloat(0x962f680+0x70,  0.45);
 //Engine
 setchar(0x962f680+0x5c,  'R',  'P',  5);
 //Suspension
 setfloat(0x962f680+0x7c,  0);
 setfloat(0x962f680+0x80,  -1);
 setfloat(0x962f680+0x78,  0.335);
 setfloat(0x962f680+0x74,  0.575);
 setfloat(0x962f680+0x84,  0.54);
 setfloat(0x962f680+0x88,  1);
 //Handling
 setfloat(0x962f680+0x68,  20);
 setfloat(0x962f680+0xbc,  5900);
 setfloat(0x962f680+0xa0,  0);
 setfloat(0x962f680+0xa4,  0);
 setfloat(0x962f680+0xa8,  0);
 //Effects
 //Exhaust
 setchar(0x09569B94,   0,  255,  255);
 setchar(0x09569B90,   0x4);
 //Teleport
 teleport( -1087.31,  356.47,  11.27);
off()

#cheat pimped mesa grande
setint(0x08C739B0,  259);
setchar(0x08C739d4,  0,  0,  0,  0);
setfloat(0x9633200+0x74,  2.0);
setfloat(0x9633200+0x78,  5);
setfloat(0x9633200+0x7c,  0);
setfloat(0x9633200+0x80,  -1.18);
setfloat(0x9633200+0x84,  0.5);
setfloat(0x936cb38,  2.20,  2.20);
setfloat(0x9633200+0xc4,  0.71);
setfloat(0x9633200+0x70,  0.40);
setfloat(0x9633200+0x6c,  0.95);
setfloat(0x9633200+0xa0,  0);
setfloat(0x9633200+0xa4,  0);
setfloat(0x9633200+0x68,  38);
off()

#cheat Monster Quad. *first ever pmg car*
setchar(0x08C739d8,   255,  255,  255,  255);
setfloat(0x9631d60+0xc4,  0.75);
setfloat(0x9631d60+0x78,  5);
setfloat(0x9631d60+0xc0,  6000);
setfloat(0x9631d60+0xa8,  -1.2);
setfloat(0x9631d60+0x7c,  0);
setint(0x08C739B0,   230);
setfloat(0x9631d60+0x74,  0.6);
setfloat(0x9631d60+0x80,  -0.75);
setfloat(0x9631d60+0x88,  1);
setfloat(0x9631d60+0x84,  0.5);
setchar(0x08C739d4,  0,  0,  0,  255);
setfloat(0x9631d60+0xa4,  0);
setfloat(0x9631d60+0x70,  0.50);
setfloat(0x9631d60+0x6c,  0.95);
setfloat(0x9631d60+0xbc,  6000);
setfloat(0x9367f18,  1.35,  1.35);
setfloat(0x9631d60+0xa0,  0);
setfloat(0x9631d60+0x68,  35);

#cheat Voodoo Trial Car
setfloat(0x9632544,  0.0);
if(buttons & CTRL_LTRIGGER)
{
setfloat(0x9632544,  -2.6);
}
if(buttons & CTRL_RTRIGGER)
{
setfloat(0x9632544,  2.0);
}
#off
setfloat(0x9632544,  0.0);

#cheat Vehicles Health Bar Mod V2
//Thanks To psphacker for helping me getting the armor back
//Bar Color found by vettefan88

CarHP = getfloat(pcar+0x027C);
static armor;
static wasin;
static fInt;

if(!fInt)
{
 armor = getfloat(pplayer + 0x4E8);  
 fInt = 1;
}

if (pcar){
wasin = true;

//Show Health In Bar
setfloat(pplayer+0x4E8,   ((CarHP-250)/750)*100);

//change color
for(neon=0;neon<15;neon++){
setchar(0x96E1ED0+4*neon,   40,  240,  40);
}
}
else
{  if(wasin)
{
 wasin = false;

 setfloat(pplayer + 0x4E8,  armor);

 //change color
 for(neon=0;neon<15;neon++){
 setchar(0x96E1ED0+4*neon,   106,  255,  255);
 }
}
armor = getfloat(pplayer + 0x4E8);
} 

#cheat Pop open Everything v2
setshort(0x08e90bd8,  1,  'C',  'i',  'r',  'c',  'l',  'e',  ' ',  'a',  'n',  'd',  ' ',  'r',  'i',  'g',  'h',  't',  ' ',  't',  'o',  ' ',  'o',  'p',  'e',  'n',  ' ',  'r',  'i',  'g',  'h',  't',  ' ',  'd',  'o',  'o',  'r',  ',  ',  ' ',  'c',  'i',  'r',  'c',  'l',  'e',  ' ',  'a',  'n',  'd',  ' ',  'u',  'p',  ' ',  't',  'o',  ' ',  'p',  'o',  'p',  ' ',  't',  'h',  'e',  ' ',  'h',  'o',  'o',  'd',  ' ',  'a',  'n',  'd',  ' ',  's',  'o',  ' ',  'o',  'n',  '.',  '.',  '.',  ' ',  'R',  ' ',  'a',  'n',  'd',  ' ',  'r',  'i',  'g',  'h',  't',  ' ',  't',  'o',  ' ',  'l',  'o',  'c',  'k',  ' ',  'r',  'i',  'g',  'h',  't',  ' ',  'd',  'o',  'o',  'r',  ' ',  'i',  'n',  ' ',  'p',  'o',  's',  'i',  't',  'i',  'o',  'n',  ',  ',  ' ',  'R',  ' ',  'a',  'n',  'd',  ' ',  'u',  'p',  ' ',  't',  'o',  ' ',  'l',  'o',  'c',  'k',  ' ',  'h',  'o',  'o',  'd',  ' ',  'i',  'n',  ' ',  'p',  'o',  's',  'i',  't',  'i',  'o',  'n',  ' ',  'a',  'n',  'd',  ' ',  's',  'o',  ' ',  'o',  'n',  '.',  '.',  '.',  0); 
if (buttons & CTRL_CIRCLE && buttons & CTRL_UP)
setchar(pcar + 0x000003BA,  2);
if (buttons & CTRL_CIRCLE && buttons & CTRL_DOWN)
setchar(pcar + 0x000003BB,  2);
if (buttons & CTRL_CIRCLE && buttons & CTRL_RIGHT)
setchar(pcar + 0x000003BD,  2);
if (buttons & CTRL_CIRCLE && buttons & CTRL_LEFT)
setchar(pcar + 0x000003BC,  2);
if (buttons & CTRL_RTRIGGER && buttons & CTRL_UP)
setchar(pcar + 0x000003BA,  0);
if (buttons & CTRL_RTRIGGER && buttons & CTRL_DOWN)
setchar(pcar + 0x000003BB,  0);
if (buttons & CTRL_RTRIGGER && buttons & CTRL_RIGHT)
setchar(pcar + 0x000003BD,  0);
if (buttons & CTRL_RTRIGGER && buttons & CTRL_LEFT)
setchar(pcar + 0x000003BC,  0);
#off
setchar(pcar + 0x000003BC,  0);
setchar(pcar + 0x000003BD,  0);
setchar(pcar + 0x000003BB,  0);
setchar(pcar + 0x000003BA,  0);

#cheat First Person View in Car v2
setchar(pplayer + 0x000008B4,  61);
setchar(pplayer+0x4C,    0x10,    0x20);
#off 
setchar(pplayer+0x4C,    0x00,    0x00); 
setchar(pplayer + 0x000008B4,  55);

#cheat Gas Modification
//Use Ocean Beach Gas station to refuel!
static start;
static gas;
if(pcar&&!start) {
if(!getchar(pcar+0x3d)) {
gas = (abs((getint(pplayer+0x68)+getint(pplayer))*getint(0x08bb3b40)) % (100-50)) + 50;
setchar(pcar+0x3d,  1);
}
else {
gas = getchar(pcar+0x3c);
}
start = 1;
}
setchar(pcar+0x3c,  gas);
if(!pcar) {
start = 0;
}
static timepassed;
static init;
if(!init)
{
   lasttime = getchar( 0x08bb3b41 );
   init = 1;
}
if( lasttime != getchar( 0x08bb3b41 ) )
{
   timepassed++;
   lasttime = getchar( 0x08bb3b41 );
}
if( timepassed == 6 )
{
  if(gas > 0) {
    gas -= 1;
  }
  timepassed = 0;
}
if(pcar&&gas) {
setshort(0x08e90bd8,  'G',  'a',  's',  ' ',  'l',  'e',  'f',  't',  ':',  ' ');
int = gas;
size = 0;
for( i = 1; i < int; i *= 10 ) size+=2;
for( i = 0; int > 0; i+=2 )
{
   setshort(0x08e90bea+size-i,   '0' + (int % 10));
   int = int(int/10);
}
setshort(0x08e90bea+size-i+0x6,  '%',  ' ',  0);
}
if(pcar&&!gas) {
setfloat(pcar+0x140,  getfloat(pcar+0x140)*0.91,  getfloat(pcar+0x144)*0.91);
setshort(0x08e90bd8,  1,  'Y',  'o',  'u',  ' ',  'a',  'r',  'e',  ' ',  'o',  'u',  't',  ' ',  'o',  'f',  ' ',  'g',  'a',  's',  '!',  0); 
}
if(getfloat(pcar+0x140) == 0 && getfloat(pcar+0x144) == 0 && getfloat(pcar+0x30) > 21.09 && getfloat(pcar+0x30) < 71.80 && getfloat(pcar+0x34) > -1091.87 && getfloat(pcar+0x34) < -1042.57) {
if(gas<100) {
price = (100 - gas) * 0.4;
setint(0x08bde55c,  getint(0x08bde55c) - price,  getint(0x08bde55c) - price);
gas = 100;
}
}

#cheat San Andreas Nos
static On;
static going;
if(buttons & CTRL_CIRCLE &&!On) {
   On = 1;
}
if(On) {
static timepassed;
static init;
if(!init)
{
   lasttime = getchar( 0x08bb3b41 );
   init = 1;
}
if( lasttime != getchar( 0x08bb3b41 ) )
{
   timepassed++;
   lasttime = getchar( 0x08bb3b41 );
}
if( timepassed < 15 )
{
    going = 1;
}
else {
  On = 0;
  timepassed = 0;
  going = 0;
}
}
if(going) {
   setchar(0x09569B90,   0x10);
   setchar(0x09569B94,   0,   127,   255);
   speed = 1.5;                                                                                  
   thrust = speed * 0.00333;       
   if(buttons & CTRL_CROSS) {                             
      setfloat(pcar + 0x0140,   getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);          
      setfloat(pcar + 0x0144,   getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust);
   }
}
else
{
   setchar(0x09569B90,   0x4);
   setchar(0x09569B94,   63,   63,   63);
} 

#cheat Splitz 6 Has Big Tires.
//Made with Wheel Size Changer by psphacker108
setfloat(0x935E198,  1);

#cheat Ride in back of Limo
//thanks to Vettefan88
setfloat(0x9367a24,  -2.1);

#cheat Big Wheels On Infernus
//Made with Wheel Size Changer by psphacker108
setfloat(0x936E818,  0.9);

#cheat DDM's Sentinel XS
if(getshort(pcar + 0x56) == 274)
{
setfloat(0x936F298,  0.8);
setchar(pcar + 0x224,  255,  127,  0);
setchar(pcar + 0x228,  0,  0,  0);
setfloat(pcar+0x450,   0,   -1.2566371,   0);
setfloat(pcar+0x480,   0,   -1.2566371,   0);
setfloat(pcar+0x4b0,   0,   -1.2566371,   0);
setfloat(pcar+0x4e0,   0,   -1.2566371,   0);
if(buttons & CTRL_CIRCLE && buttons & CTRL_CROSS) {

   speed = 0.0;
   setchar(0x09569B90,  0x10);
   setchar(0x09569B94,  0,  127,  255);
   if(getfloat(pcar+0x140)>0)
   {
      speed+=getfloat(pcar+0x140);
   }
   else
   {
      speed-=getfloat(pcar+0x140);
   }

   if(getfloat(pcar+0x144)>0)
   {
      speed+=getfloat(pcar+0x144);
   }
   else
   {
      speed-=getfloat(pcar+0x144);
   }

   if(speed<175/75)
   {
      setfloat(pcar+0x140,   getfloat(pcar+0x140)-getfloat(pcar+0x4)*0.005);
      setfloat(pcar+0x144,   getfloat(pcar+0x144)+getfloat(pcar)*0.005);
   }

}
else
{
   setchar(0x09569B90,  0x4);
   setchar(0x09569B94,  63,  63,  63);
}
}

#cheat Bigger Wheels Sand King
//Made with Wheel Size Changer by psphacker108
setfloat(0x936A678,  1.5);

#cheat Wheel size polaris V8
//Made with Wheel Size Changer by psphacker108
setfloat(0x9360B98,  1.5);

#cheat * UPDATE * The Car Mod Shop V 4
static Exit;
static counter;
static rotation;
static Spinners;
static car;
static Tires;
static Doors;
static Nos;
static menu;
static stateIn;
static Start;
static R;
static G;
static B;
static R2;
static G2;
static B2;
if(getfloat(pcar + 0x30) >=258.71 && getfloat(pcar + 0x30) <= 268.65 && getfloat(pcar + 0x34) >= -146.48 && getfloat(pcar + 0x34) <= -138.07)
{
   stateIn = 1;
   car = pcar;
   R = getchar(pcar + 0x224);
   G = getchar(pcar + 0x225);
   B = getchar(pcar + 0x226);
   R2 = getchar(pcar + 0x228);
   G2 = getchar(pcar + 0x229);
   B2 = getchar(pcar + 0x22A);
}
if(stateIn && getfloat(pcar + 0x140) == 0 && getfloat(pcar + 0x144) == 0)
{
   Start = 1;
   setfloat(pcar + 0x30,  -140.79,  -1420.82,  4.90);
xRightHandVector    = getfloat(pobj + 0x0000);
yRightHandVector    = getfloat(pobj + 0x0004);
zRightHandVector    = getfloat(pobj + 0x0008);
xForwardVector      = getfloat(pobj + 0x0010);
yForwardVector      = getfloat(pobj + 0x0014);
zForwardVector      = getfloat(pobj + 0x0018);
xUpVector           = getfloat(pobj + 0x0020);
yUpVector           = getfloat(pobj + 0x0024);
zUpVector           = getfloat(pobj + 0x0028);
xRotationalMomentum = getfloat(pobj + 0x0070);
yRotationalMomentum = getfloat(pobj + 0x0074);
zRotationalMomentum = getfloat(pobj + 0x0078);
xVelocity           = getfloat(pobj + 0x0140);
yVelocity           = getfloat(pobj + 0x0144);
}

if(Start)
{
   stateIn = 0;
    setfloat(pobj + 0x0000,   xRightHandVector);
    setfloat(pobj + 0x0004,   yRightHandVector);
    setfloat(pobj + 0x0008,   zRightHandVector);
    setfloat(pobj + 0x0010,   xForwardVector);
    setfloat(pobj + 0x0014,   yForwardVector);
    setfloat(pobj + 0x0018,   zForwardVector);
    setfloat(pobj + 0x0020,   xUpVector);
    setfloat(pobj + 0x0024,   yUpVector);
    setfloat(pobj + 0x0028,   zUpVector);
    setfloat(pobj + 0x0070,   xRotationalMomentum);
    setfloat(pobj + 0x0074,   yRotationalMomentum);
    setfloat(pobj + 0x0078,   zRotationalMomentum);
    setfloat(pobj + 0x0140,   0,  0);
   if( menu == 0 )
   {
      int = R;
      setshort( 0x08e90bd8,  1,  'R',  ':',  ' ',  0 );
   }
   if( menu == 1 )
   {
      int = G;
      setshort( 0x08e90bd8,  1,  'G',  ':',  ' ',  0 );
   }
   if( menu == 2 )
   {
      int = B;
      setshort( 0x08e90bd8,  1,  'B',  ':',  ' ',  0 );
   }
   if( menu == 3 )
   {
      int = R2;
      setshort( 0x08e90bd8,  1,  'R',  '2',  ':',  ' ',  0 );
   }
   if( menu == 4 )
   {
      int = G2;
      setshort( 0x08e90bd8,  1,  'G',  '2',  ':',  ' ',  0 );
   }
   if( menu == 5 )
   {
      int = B2;
      setshort( 0x08e90bd8,  1,  'B',  '2',  ':',  ' ',  0 );
   }
   size = 0;
   for(i = 1; i < int; i*=10) size+=2;
   for(i = 0; int > 0; i+=2 ) 
   {
      if( menu < 3)
      {
      setshort(0x08e90bdc+size-i,   '0' + (int % 10));
      int = int(int/=10);
      } 
      else if( menu > 2)
      {
      setshort(0x08e90bde+size-i,   '0' + (int % 10));
      int = int(int/=10);
      } 
   }
   if( menu == 6 && !Nos)
   {
      if(press & CTRL_CROSS)
         Nos = 1;
      setshort( 0x08e90bd8,  1,  'N',  'o',  's',  ' ',  'o',  'f',  'f',  0);
   }
   else if( menu == 6 && Nos)
   {
      if(press & CTRL_CROSS)
         Nos = 0;
      setshort( 0x08e90bd8,  'N',  'o',  's',  ' ',  'o',  'n',   0);
   }
   if( menu == 7 && !Doors)
   {
      if(press & CTRL_CROSS)
         Doors = 1;
      setshort( 0x08e90bd8,  1,  'L',  'a',  'm',  'b',  'o',  ' ',  'D',  'o',  'o',  'r',  's',  ' ',  'O',  'f',  'f',  0);
   }
   else if( menu == 7 && Doors)
   {
      if(press & CTRL_CROSS)
         Doors = 0;
      setshort( 0x08e90bd8,  1,  'L',  'a',  'm',  'b',  'o',  ' ',  'D',  'o',  'o',  'r',  's',  ' ',  'O',  'n',  0);
   }
   if( menu == 8 && !Tires)
   {
      if(press & CTRL_CROSS)
         Tires = 1;
      setshort( 0x08e90bd8,  1,  'U',  'n',  'p',  'o',  'p',  'p',  'a',  'b',  'l',  'e',  ' ',  'T',  'i',  'r',  'e',  's',  ' ',  'O',  'f',  'f',  0);
   }
   else if( menu == 8 && Tires)
   {
      if(press & CTRL_CROSS)
         Tires = 0;
      setshort( 0x08e90bd8,  1,  'U',  'n',  'p',  'o',  'p',  'p',  'a',  'b',  'l',  'e',  ' ',  'T',  'i',  'r',  'e',  's',  ' ',  'O',  'n',  0);
   }
   if( menu == 9 && !Spinners)
   {
      if(press & CTRL_CROSS)
         Spinners = 1;
      setshort( 0x08e90bd8,  1,  'S',  'p',  'i',  'n',  'n',  'e',  'r',  's',  ' ',  'O',  'f',  'f',  0);
   }
   else if( menu == 9 && Spinners)
   {
      if(press & CTRL_CROSS)
         Spinners = 0;
      setshort( 0x08e90bd8,  1,  'S',  'p',  'i',  'n',  'n',  'e',  'r',  's',  ' ',  'O',  'n',  0);
   }
   if(buttons & CTRL_LEFT)
   {
      if(menu == 0)
         R--;
      if(menu == 1)
         G--;
      if(menu == 2)
         B--;
      if(menu == 3)
         R2--;
      if(menu == 4)
         G2--;
      if(menu == 5)
         B2--;
   }
   if(buttons & CTRL_RIGHT)
   {
      if(menu == 0)
         R++;
      if(menu == 1)
         G++;
      if(menu == 2)
         B++;
      if(menu == 3)
         R2++;
      if(menu == 4)
         G2++;
      if(menu == 5)
         B2++;
   }
   if(buttons & CTRL_CIRCLE)
   {
      Start = 0;
    setfloat(pcar + 0x30,  -191.57,  -1392.88,  145.00);
    setfloat(pcar + 0x30,  277.13,  -146.65,  15);
      menu = 0;
    Exit = 1;
   }
   if(press & CTRL_DOWN && menu < 9)
      menu++;
   if(press & CTRL_UP  && menu > 0)
      menu--;
      setchar(pcar + 0x224,  R,  G,  B);
      setchar(pcar + 0x228,  R2,  G2,  B2);
   }
if(Exit)
{
    setfloat(pobj + 0x0000,   xRightHandVector);
    setfloat(pobj + 0x0004,   yRightHandVector);
    setfloat(pobj + 0x0008,   zRightHandVector);
    setfloat(pobj + 0x0010,   xForwardVector);
    setfloat(pobj + 0x0014,   yForwardVector);
    setfloat(pobj + 0x0018,   zForwardVector);
    setfloat(pobj + 0x0020,   xUpVector);
    setfloat(pobj + 0x0024,   yUpVector);
    setfloat(pobj + 0x0028,   zUpVector);
    setfloat(pobj + 0x0070,   xRotationalMomentum);
    setfloat(pobj + 0x0074,   yRotationalMomentum);
    setfloat(pobj + 0x0078,   zRotationalMomentum);
    setfloat(pobj + 0x0140,   0,  0,  0);
Exit = 0;
}
if(Nos && !stateIn && !Start && pcar == car)
{
if(buttons & CTRL_CIRCLE && buttons & CTRL_CROSS) {

   speed = 0.0;
   setchar(0x09569B90,  0x10);
   setchar(0x09569B94,  0,  127,  255);
   if(getfloat(pcar+0x140)>0)
   {
      speed+=getfloat(pcar+0x140);
   }
   else
   {
      speed-=getfloat(pcar+0x140);
   }

   if(getfloat(pcar+0x144)>0)
   {
      speed+=getfloat(pcar+0x144);
   }
   else
   {
      speed-=getfloat(pcar+0x144);
   }

   if(speed<175/75)
   {
      setfloat(pcar+0x140,   getfloat(pcar+0x140)-getfloat(pcar+0x4)*0.005);
      setfloat(pcar+0x144,   getfloat(pcar+0x144)+getfloat(pcar)*0.005);
   }

}
else
{
   setchar(0x09569B90,  0x4);
   setchar(0x09569B94,  63,  63,  63);
}
}

if(Doors && pcar == car && getshort(pcar + 0x56) != 178 && getshort(pcar + 0x56) != 179 && getshort(pcar + 0x56) != 205 && getshort(pcar + 0x56) != 212 && getshort(pcar + 0x56) != 229 && getshort(pcar + 0x56) != 230 && getshort(pcar + 0x56) != 231 && getshort(pcar + 0x56) != 232 && getshort(pcar + 0x56) != 252)
{
setfloat(pcar+0x450,   0,   -1.2566371,   0);
setfloat(pcar+0x480,   0,   -1.2566371,   0);
setfloat(pcar+0x4b0,   0,   -1.2566371,   0);
setfloat(pcar+0x4e0,   0,   -1.2566371,   0);
}
else if(!Doors && pcar == car && getshort(pcar + 0x56) != 178 && getshort(pcar + 0x56) != 179 && getshort(pcar + 0x56) != 205 && getshort(pcar + 0x56) != 212 && getshort(pcar + 0x56) != 229 && getshort(pcar + 0x56) != 230 && getshort(pcar + 0x56) != 231 && getshort(pcar + 0x56) != 232 && getshort(pcar + 0x56) != 252)
{
setfloat(pcar+0x450,   0,   -1.2566371,   0);
setfloat(pcar+0x480,   1.2566371,   0,   0);
setfloat(pcar+0x4b0,   0,   -1.2566371,   0);
setfloat(pcar+0x4e0,   1.2566371,   0,   0);
}
if(Tires && pcar == car)
{
setshort(pcar+0x3b6,   0,   0);//cars
setshort(pcar+0x434,   0);//bikes
}
if(Spinners && pcar == car)
{
if (rotation == 0)
{
rotation = 360;
}
spin = tan(rotation);
setfloat(pcar + 0x644,   spin,   spin,   spin,   spin);
rotation = rotation - 1;
if (rotation == 1)
{rotation = 360;}
}

#cheat Hikiwara Cholo Sabre
if (buttons & CTRL_RIGHT)
{
setchar(0x9569b94,   0,   0x0,   0xFF);
setchar(pcar+0x224,  0,  0x0,  0xff);
setchar(pcar+0x228,  0,  0x0,  0xff);
1 = 0;
2 = 175;
3 = 255;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,  1,  2,  3);}
}
pspawn = 0x08E81290;  
setint(pspawn,     265);  
setfloat(pspawn + 4,     -1041.73,     -761.80,     11.57,     90);
pspawn += 0x30;
setshort(pcar+0x3b6,   0,   0);
setfloat(pcar+0x450,   4,   2,   4);
setfloat(pcar+0x480,   4,   2,   4);
setfloat(pcar+0x4b0,   4,   2,   4);
setfloat(pcar+0x4e0,   4,   2,   4);



if (buttons & CTRL_CROSS && !(buttons & CTRL_CIRCLE)) {

speed = sqrt(getfloat(pcar + 0x140) * getfloat(pcar + 0x140) + getfloat(pcar + 0x144) * getfloat(pcar + 0x144));

if(speed<1.8) {
setfloat(pcar+0x140,   getfloat(pcar+0x140)-getfloat(pcar+0x4)*0.005);
setfloat(pcar+0x144,   getfloat(pcar+0x144)+getfloat(pcar)*0.005);
}
}

if(buttons & CTRL_SQUARE && getshort(pcar+0x1c8)==0.5) setfloat(pcar+0x140,   0,   0);
max speed for NOS accelerate
if(speed<1.8) {
setfloat(pcar+0x140,   getfloat(pcar+0x140)-getfloat(pcar+0x4)*0.005);
setfloat(pcar+0x144,   getfloat(pcar+0x144)+getfloat(pcar)*0.005);
}
}
//Power Brake if vehicle is on ground
if(buttons & CTRL_SQUARE && getshort(pcar+0x1c8)==0.5) setfloat(pcar+0x140,   0,   0);

#cheat NOS Ver 1.3 by tako
if(pcar)
{
setchar(0x9569C62,  0x30); 
setchar(0x9569C98,  0x00); 
setchar(0x9569C9C,  0xFF,  0x60,  0x30);
if(buttons & CTRL_UP)
{
setchar(0x8BB3B5A,  0x80,  0x3E);
setfloat(pcar + 0x0078,  -0.05 * xstick);
if(buttons & CTRL_DOWN && getshort(pcar+0x1c8)==0)
setfloat(pcar+0x140,  0,  0);
else if(buttons & CTRL_CIRCLE) 
{ 
setchar(0x9569B5A,  0xB0); 
setchar(0x9569B90,  0x00); 
setchar(0x9569B78,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00); 
setchar(0x9569B94,  0x00,  0x50,  0xFF); 
setchar(0x9569B85,  0xFF); 
setchar(0x9569B5E,  0x70);
speed = sqrt(getfloat(pcar + 0x140) * getfloat(pcar + 0x140) + getfloat(pcar + 0x144) * getfloat(pcar + 0x144)); 
if(speed<1.8)
{
setfloat(pcar+0x140,  getfloat(pcar+0x140)-getfloat(pcar+0x4)*0.005); 
setfloat(pcar+0x144,  getfloat(pcar+0x144)+getfloat(pcar)*0.005);
}
}
else
{
setchar(0x9569B5A,  0xFF); 
setchar(0x9569B90,  0x04); 
setchar(0x9569B78,  0x0A,  0xD7,  0x23,  0x3C,  0x8F,  0xC2,  0xF5,  0x3C); 
setchar(0x9569B94,  0x62,  0x62,  0x6C); 
setchar(0x9569B85,  0x00); 
setchar(0x9569B5E,  0x60);
}
}
else if(buttons & CTRL_DOWN && getshort(pcar+0x1c8)==0)
{
setchar(0x8BB3B5A,  0x80,  0x3F);
setfloat(pcar+0x140,  0,  0);
}
else if(buttons & CTRL_CIRCLE) 
{
setchar(0x8BB3B5A,  0x80,  0x3F);
setchar(0x9569B5A,  0xB0); 
setchar(0x9569B90,  0x00); 
setchar(0x9569B78,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00); 
setchar(0x9569B94,  0x00,  0x50,  0xFF); 
setchar(0x9569B85,  0xFF); 
setchar(0x9569B5E,  0x70);
speed = sqrt(getfloat(pcar + 0x140) * getfloat(pcar + 0x140) + getfloat(pcar + 0x144) * getfloat(pcar + 0x144)); 
if(speed<1.8)
{
setfloat(pcar+0x140,  getfloat(pcar+0x140)-getfloat(pcar+0x4)*0.005); 
setfloat(pcar+0x144,  getfloat(pcar+0x144)+getfloat(pcar)*0.005);
}
}
else
{
setchar(0x9569B5A,  0xFF); 
setchar(0x9569B90,  0x04); 
setchar(0x9569B78,  0x0A,  0xD7,  0x23,  0x3C,  0x8F,  0xC2,  0xF5,  0x3C); 
setchar(0x9569B94,  0x62,  0x62,  0x6C); 
setchar(0x9569B85,  0x00); 
setchar(0x9569B5E,  0x60);
setchar(0x8BB3B5A,  0x80,  0x3F);
}
}
else
{
setchar(0x8BB3B5A,  0x80,  0x3F);
setchar(0x9569B5A,  0xFF); 
setchar(0x9569B90,  0x04); 
setchar(0x9569B78,  0x0A,  0xD7,  0x23,  0x3C,  0x8F,  0xC2,  0xF5,  0x3C); 
setchar(0x9569B94,  0x62,  0x62,  0x6C); 
setchar(0x9569B85,  0x00); 
setchar(0x9569B5E,  0x60);
}
#off 
setchar(0x9569B5A,  0xFF); 
setchar(0x9569B90,  0x04); 
setchar(0x9569B78,  0x0A,  0xD7,  0x23,  0x3C,  0x8F,  0xC2,  0xF5,  0x3C); 
setchar(0x9569B94,  0x62,  0x62,  0x6C); 
setchar(0x9569B85,  0x00); 
setchar(0x9569B5E,  0x60); 
setchar(0x9569C62,  0xFF); 
setchar(0x9569C98,  0x04); 
setchar(0x9569C9C,  0x80,  0x80,  0x80); 

#cheat Hikiwara tuned Cholo Sabre
pspawn = 0x08E81290;  
setint(pspawn,     265);  
setfloat(pspawn + 4,     -1041.73,     -761.80,     11.57,     90);
pspawn += 0x30;
setchar(0x9569b94,   0x66,   0xFF,   0x00);
setchar(pcar+0x224,  0x0,  0x0,  0x0);
setchar(pcar+0x228,  0x66,  0xFF,  0x00);
setshort(0x098F66E0,  'H',  'i',  'k',  'i',  'w',  'a',  'r',  'a',  ' ',  'S',  'a',  'b',  'r',  'e',  0);
setshort(pcar+0x3b6,   0,   0);
setfloat(pcar+0x450,   4,   2,   4);
setfloat(pcar+0x480,   4,   2,   4);
setfloat(pcar+0x4b0,   4,   2,   4);
setfloat(pcar+0x4e0,   4,   2,   4);

static rotation; 
if (rotation == 0)
{
rotation = 900;
}
spin = tan(rotation);
setfloat(pcar + 0x644,   spin,   spin,   spin,   spin);
rotation = rotation - 1;
if (rotation == 1)
{rotation = 900;}




if (buttons & CTRL_CROSS && !(buttons & CTRL_CIRCLE)) {

speed = sqrt(getfloat(pcar + 0x140) * getfloat(pcar + 0x140) + getfloat(pcar + 0x144) * getfloat(pcar + 0x144));

if(speed<1.8) {
setfloat(pcar+0x140,   getfloat(pcar+0x140)-getfloat(pcar+0x4)*0.005);
setfloat(pcar+0x144,   getfloat(pcar+0x144)+getfloat(pcar)*0.005);
}
}

if(buttons & CTRL_SQUARE && getshort(pcar+0x1c8)==0.5) setfloat(pcar+0x140,   0,   0);

max speed for NOS accelerate
if(speed<1.8) {
setfloat(pcar+0x140,   getfloat(pcar+0x140)-getfloat(pcar+0x4)*0.005);
setfloat(pcar+0x144,   getfloat(pcar+0x144)+getfloat(pcar)*0.005);
}
}
//Power Brake if vehicle is on ground
if(buttons & CTRL_SQUARE && getshort(pcar+0x1c8)==0.5) setfloat(pcar+0x140,   0,   0);

#cheat Car you are driving turns black...[TESTED]
setint(pcar + 0x00000224,  0);
setint(pcar + 0x00000228,  0);

#cheat Ghost Car
//by getdustin
//right trigger activates and left trigger deactivates
//Turning,  acceleration,  and breaking by Durka Durka Mahn
static Drivable;
if(buttons&CTRL_RTRIGGER)
{
setchar(pcar + 0x49,   81);
Drivable = 1;
}
if(buttons&CTRL_LTRIGGER)
{
setchar(pcar + 0x49,   82);
Drivable = 0;
}
if(Drivable)
{
setfloat(pcar+0x78,   -xstick / 40);
if (buttons & CTRL_CROSS) 
{
   boost = 0.5;
   thrust = boost * 0.00333;
   // velocity = velocity + forward vector * thrust
   setfloat(pcar + 0x0140,   getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);
   setfloat(pcar + 0x0144,   getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust); 
   setfloat(pcar + 0x0148,   getfloat(pcar + 0x0148) + getfloat(pcar + 0x0018) * thrust);
}  
if(buttons & CTRL_SQUARE)
{
  setfloat(pcar + 0x140,   getfloat(pcar + 0x140)*0.95,   getfloat(pcar + 0x144)*0.95 );
}
} 

#cheat Gradation of color
//By NRG500

static r;
static rPlus;
static v;
static vPlus;
static b;
static bPlus;

if(!r && !v && !b)
{
   r=255;
   v=0;
   b=0;
}

if(!rPlus  && !vPlus && !bPlus)
{
   rPlus = 0;
   vPlus = 1;
   bPlus = 1;
}


if(vPlus && !rPlus)
{
   v++;
   r--;

   if(v==255)
   {
      vPlus=0;
      rPlus=1;
   }
}
else if(bPlus && !vPlus)
{
   b++;
   v--;

   if(b==255)
   {
      bPlus=0;
      vPlus=1;
   }
}
else if(rPlus && !bPlus)
{
   r++;
   b--;

   if(r==255)
   {
      rPlus=0;
      bPlus=1;
   }
}

setchar(pcar+0x224,  r);
setchar(pcar+0x225,  v);
setchar(pcar+0x226,  b);

#cheat Submarine Vehicles
static UnderWater;
static Height;
if(getfloat(pcar + 0x38) < getfloat(0x96C96B0))
{
UnderWater = 1;
}
else
{
UnderWater = 0;
}

if(UnderWater)
{
setfloat(pcar+0x78,  -xstick / 40);
setfloat(pcar + 0x08,    0);
setfloat(pcar + 0x18,    0);
  if (buttons & CTRL_CROSS)
  {
     boost = 1.5;
     thrust = boost * 0.00333;

     // velocity = velocity + forward vector * thrust
     setfloat(pcar + 0x0140,  getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);
     setfloat(pcar + 0x0144,  getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust);
     setfloat(pcar + 0x0148,  getfloat(pcar + 0x0148) + getfloat(pcar + 0x0018) * thrust);
  }

if(ystick < -0.9)
{
setfloat(pcar + 0x00000148,  +0.1);
Height = getfloat(pcar + 0x38);
}
if(ystick > 0.9)
{
setfloat(pcar + 0x00000148,  -0.1);
Height = getfloat(pcar + 0x38);
}
setfloat(pcar + 0x38,  Height);
}

#cheat Lamborghini Doors
setfloat(pcar+0x450,  0,  -1.2566371,  0);
setfloat(pcar+0x480,  0,  -1.2566371,  0);
setfloat(pcar+0x4b0,  0,  -1.2566371,  0);
setfloat(pcar+0x4e0,  0,  -1.2566371,  0);

#cheat Money Counter is a Speed'O'Meter v. 2
static money;
static wasin;
if(!money) money = getint(0x08bde560);
if (pcar)
{
  wasin = true;
  speed = (sqrt(getfloat(pcar + 0x140) * getfloat(pcar + 0x140) + getfloat(pcar + 0x144) * getfloat(pcar + 0x144)))*100;
  setint(0x08bde55c,  speed,  speed);
  setchar(0x8BAEDB8,  '%',  'd',  0);
  setchar(0x8BAEDC0,  '%',  'd',  0);
}
else
{  if(wasin)
  {
  setchar(0x8BAEDB8,  '%',  '0',  '8',  'd',  '$',  0);
  setchar(0x8BAEDC0,  '$',  '%',  '0',  '8',  'd',  0);
  setint(0x08bde55c,  money,  money);
  wasin = false;
  }
  money = getint(0x08bde560);
}
#off
setint(0x08bde55c,  money,  money);
setchar(0x8BAEDB8,  '%',  '0',  '8',  'd',  '$',  0);
setchar(0x8BAEDC0,  '$',  '%',  '0',  '8',  'd',  0);
