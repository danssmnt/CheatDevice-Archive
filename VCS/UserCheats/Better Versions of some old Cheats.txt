#cheat Fixed Wanted Level Cheat
//Designed so you won't crash if you die/get busted with the cheat on
static level;
static init;
static delay;
static check;
static textdelay;
if(!init){
level=getint(pplayer+0x910);
init=1;
}
checker = getchar(pplayer+0x8B4);
if(checker != 0x39 && checker != 0x3A && checker != 0x41 && !delay){
if(buttons & CTRL_RTRIGGER && press & CTRL_DOWN && level > 0){
 level--;
 textdelay=150;
}
if(buttons & CTRL_RTRIGGER && press & CTRL_UP && level < 6){
 level++;
 textdelay=150;
}
if(textdelay>0){
 textdelay--;
 setshort(0x08e90bd8, 1, 'W', 'a', 'n', 't', 'e', 'd', ' ', 'L', 'e', 'v', 'e', 'l', ':', ' ', '0'+level, 0 );
}
setint(pplayer+0x910, level, level);
setchar(pplayer+0x920, 0x1);
check=1;
} else if(check){
delay=20;
check=0;
}
if(delay>0)
delay--;
#off
delay=0;
check=0;
init=0;

#cheat Freeze Everything
static t;

if( t % 60 == 0 )
{
  for(i=0; 0x098b4a40+i<=0x098ecf90; i+=0xd10)
      if(0x098b4a40 + i != pplayer) setchar(0x098b4a40 + i + 0xef,   0x80);
}
if( t % 60 == 30 )
{
  for(p=0x098edcc0; p <= 0x099019a0; p+=0x820)
      if(p != pcar) setchar(p + 0xef,   0x80);
}
t++;

#cheat Touch Cars to make them Float Away!
static touch;
if(getint(pobj+0x150))
    touch=getint(pobj+0x150);
if(touch)
    if(getshort(touch+0x56)<280)
        sethex(touch+0xEC,  0x20);
if(getchar(pcar+0xEC)==0x20)
    sethex(pcar+0xEC,  0x22);

#cheat Reveal
setchar(0x8badc8a,  0xc0,  0xff);

#cheat windy
//by psphacker108
speed = sqrt(getfloat(pcar + 0x140) * getfloat(pcar + 0x140) + getfloat(pcar + 0x144) * getfloat(pcar + 0x144));

if(speed<0.0) {

setchar(0x8bACDE7,  0x3E);

}

if(speed<1.0) {

setchar(0x8bACDE7,  0x3F);

}

if(speed<2.0) {

setchar(0x8bACDE6,  0x00);
setchar(0x8bACDE7,  0x3F);

}
#off
setchar(0x8bACDE6,  0x00);
setchar(0x8bACDE7,  0x00);

#cheat Mile High Club v1.25.052
moveto(225.47,  -242.32,  186.29);  object(0x1CB2,  0,  270,  30);
move(1.88,  3.23,  0.00);  object(0x1CB2,  0,  270,  30);
move(5.87,  -3.42,  0.00);  object(0x1CB2,  0,  270,  30);
move(-1.87,  -3.21,  0.00);  object(0x1CB2,  0,  270,  30);
move(10.19,  5.17,  0.00);  object(0x1CB2,  0,  270,  75);
move(-16.50,  9.62,  0.00);  object(0x1CB2,  0,  270,  345);
move(1.39,  10.53,  0.00);  object(0x1CB2,  0,  270,  30);
move(23.50,  -13.70,  0.00);  object(0x1CB2,  0,  270,  30);
move(1.49,  10.70,  0.00);  object(0x1CB2,  0,  270,  345);
move(-16.50,  9.62,  0.00);  object(0x1CB2,  0,  270,  75);
move(10.30,  -1.19,  0.00);  object(0x1CB2,  270,  270,  30);
move(-15.96,  -41.89,  0.00);  object(0x1CB2,  270,  270,  30);
move(-12.61,  7.35,  0.00);  object(0x1CB2,  270,  270,  30);
move(-3.41,  -5.85,  0.00);  object(0x1CB2,  270,  270,  30);
move(12.61,  -7.35,  0.00);  object(0x1CB2,  270,  270,  30);
move(-3.40,  -5.83,  0.00);  object(0x1CB2,  270,  270,  30);
move(-12.53,  7.30,  0.00);  object(0x1CB2,  270,  270,  30);
move(-3.42,  -5.87,  0.00);  object(0x1CB2,  270,  270,  30);
move(12.61,  -7.35,  0.00);  object(0x1CB2,  270,  270,  30);
move(12.60,  -7.17,  0.00);  object(0x1CB2,  270,  270,  30);
move(10.12,  17.50,  0.00);  object(0x1CB2,  270,  270,  30);
move(-1.51,  -10.59,  0.00);  object(0x1CB2,  180,  270,  30);
move(-46.47,  14.93,  0.00);  object(0x1CB2,  270,  270,  30);
move(10.27,  17.54,  0.00);  object(0x1CB2,  270,  270,  30);
move(-8.50,  -6.70,  0.00);  object(0x1CB2,  180,  270,  30);
move(13.88,  -27.72,  0.00);  object(0x1CB2,  270,  270,  30);
move(-3.39,  -5.86,  0.00);  object(0x1CB2,  270,  270,  30);
move(-2.76,  9.42,  0.00);  object(0x1CB2,  270,  270,  30);
move(12.63,  -7.32,  0.00);  object(0x1CB2,  270,  270,  30);
move(7.84,  -0.49,  3.40);  object(0x1CB2,  0,  0,  120);
move(6.24,  -3.59,  0.00);  object(0x1CB2,  0,  0,  120);
move(-31.49,  18.07,  0.00);  object(0x1CB2,  0,  0,  120);
move(-6.41,  3.69,  0.00);  object(0x1CB2,  0,  0,  120);
move(13.50,  23.44,  0.00);  object(0x1CB2,  0,  0,  120);
move(6.85,  -3.94,  0.00);  object(0x1CB2,  0,  0,  120);
move(24.39,  -14.16,  0.00);  object(0x1CB2,  0,  0,  120);
move(6.58,  -3.80,  0.00);  object(0x1CB2,  0,  0,  120);
move(2.59,  -9.93,  0.00);  object(0x1CB2,  0,  0,  30);
move(-6.19,  -10.68,  0.00);  object(0x1CB2,  0,  0,  30);
move(-43.94,  39.71,  0.00);  object(0x1CB2,  0,  0,  30);
move(-6.16,  -10.84,  0.00);  object(0x1CB2,  0,  0,  29);
move(14.53,  10.40,  3.30);  object(0x1CB2,  0,  270,  120);
move(-10.00,  -17.65,  0.00);  object(0x1CB2,  0,  270,  120);
move(1.45,  10.87,  0.00);  object(0x1CB2,  0,  270,  30);
move(21.17,  -0.50,  0.00);  object(0x1CB2,  0,  270,  120);
move(12.55,  -7.27,  0.00);  object(0x1CB2,  0,  270,  120);
move(12.29,  -7.12,  0.00);  object(0x1CB2,  0,  270,  120);
move(-10.21,  -17.30,  0.00);  object(0x1CB2,  0,  270,  120);
move(-12.46,  7.22,  0.00);  object(0x1CB2,  0,  270,  120);
move(-12.25,  6.98,  0.00);  object(0x1CB2,  0,  270,  120);
move(1.20,  11.00,  0.00);  object(0x1CB2,  0,  270,  29);
move(32.21,  -18.56,  0.00);  object(0x1CB2,  0,  270,  30);
move(-13.13,  8.20,  0.00);  object(0x1CB2,  0,  270,  30);
move(-5.94,  3.17,  0.00);  object(0x1CB2,  0,  270,  30);
move(-7.31,  4.01,  0.00);  object(0x1CB2,  0,  270,  29);
move(3.47,  -2.02,  0.00);  object(0x1CB2,  0,  270,  30);
move(-16.15,  2.90,  0.00);  object(0x029F,  90,  0,  29);
move(-3.83,  2.16,  0.00);  object(0x029F,  90,  0,  29);
move(1.62,  2.87,  0.00);  object(0x029F,  90,  0,  29);
move(3.86,  -2.19,  0.00);  object(0x029F,  90,  0,  30);
move(1.63,  2.87,  0.00);  object(0x029F,  90,  0,  30);
move(-3.76,  2.11,  0.00);  object(0x029F,  90,  0,  30);
move(1.64,  2.86,  0.00);  object(0x029F,  90,  0,  30);
move(3.73,  -2.14,  0.00);  object(0x029F,  90,  0,  30);
move(1.64,  2.86,  0.00);  object(0x029F,  90,  0,  30);
move(-3.73,  2.14,  0.00);  object(0x029F,  90,  0,  30);
move(28.99,  -31.48,  0.00);  object(0x029F,  90,  0,  30);
move(-3.82,  2.19,  0.00);  object(0x029F,  90,  0,  30);
move(1.64,  2.86,  0.00);  object(0x029F,  90,  0,  30);
move(1.64,  2.86,  0.00);  object(0x029F,  90,  0,  30);
move(1.69,  2.95,  0.00);  object(0x029F,  90,  0,  30);
move(0.40,  -7.95,  0.00);  object(0x029F,  90,  0,  30);
move(1.64,  2.86,  0.00);  object(0x029F,  90,  0,  30);
move(1.69,  2.95,  0.00);  object(0x029F,  90,  0,  30);
move(-4.80,  -8.77,  -6.70);  object(0x029F,  90,  0,  30);
move(-3.82,  2.19,  0.00);  object(0x029F,  90,  0,  30);
move(1.64,  2.86,  0.00);  object(0x029F,  90,  0,  30);
move(1.64,  2.86,  0.00);  object(0x029F,  90,  0,  30);
move(1.69,  2.95,  0.00);  object(0x029F,  90,  0,  30);
move(0.49,  -8.00,  0.00);  object(0x029F,  90,  0,  30);
move(1.64,  2.86,  0.00);  object(0x029F,  90,  0,  30);
move(1.69,  2.95,  0.00);  object(0x029F,  90,  0,  30);
move(-36.92,  9.83,  0.00);  object(0x029F,  90,  0,  30);
move(-3.83,  2.17,  0.00);  object(0x029F,  90,  0,  30);
move(1.63,  2.87,  0.00);  object(0x029F,  90,  0,  30);
move(1.63,  2.87,  0.00);  object(0x029F,  90,  0,  30);
move(1.68,  2.96,  0.00);  object(0x029F,  90,  0,  30);
move(0.52,  -8.00,  0.00);  object(0x029F,  90,  0,  30);
move(1.63,  2.87,  0.00);  object(0x029F,  90,  0,  30);
move(1.68,  2.96,  0.00);  object(0x029F,  90,  0,  30);
move(-0.11,  -5.86,  10.10);  object(0x1CB2,  0,  0,  30);
move(23.72,  -13.51,  0.00);  object(0x1CB2,  0,  0,  30);
move(-2.41,  9.91,  0.00);  object(0x1CB2,  0,  0,  300);
move(-11.33,  6.57,  0.00);  object(0x1CB2,  0,  0,  300);
move(-7.41,  -12.76,  0.00);  object(0x1CB2,  0,  0,  300);
move(11.34,  -6.23,  0.00);  object(0x1CB2,  0,  0,  299);
move(21.29,  7.58,  3.30);  object(0x1CB2,  0,  270,  300);
move(-12.57,  7.29,  0.00);  object(0x1CB2,  0,  270,  300);
move(-12.55,  7.26,  0.00);  object(0x1CB2,  0,  270,  300);
move(-10.97,  6.33,  0.00);  object(0x1CB2,  0,  270,  300);
move(-10.48,  -18.21,  0.00);  object(0x1CB2,  0,  270,  300);
move(12.60,  -7.23,  0.00);  object(0x1CB2,  0,  270,  300);
move(12.70,  -7.18,  0.00);  object(0x1CB2,  0,  270,  300);
move(19.42,  0.48,  0.00);  object(0x1CB2,  0,  270,  210);
move(-8.54,  -6.79,  0.00);  object(0x1CB2,  0,  270,  120);
move(-34.19,  32.11,  0.00);  object(0x1CB2,  0,  270,  210);
move(12.09,  -6.97,  0.00);  object(0x1CB2,  0,  270,  210);
move(18.05,  -10.34,  0.00);  object(0x1CB2,  0,  270,  210);
move(-14.12,  7.90,  0.00);  object(0x1CB2,  0,  270,  210);
move(10.41,  -5.31,  0.00);  object(0x1CB2,  0,  270,  210);
move(-2.65,  6.47,  0.00);  object(0x1CB2,  0,  270,  120);
move(-4.80,  -8.48,  0.00);  object(0x1CB2,  0,  270,  120);
move(2.17,  4.44,  0.00);  object(0x029F,  270,  180,  30);
move(-16.10,  2.59,  0.00);  object(0x029F,  270,  180,  30);
move(1.64,  2.86,  0.00);  object(0x029F,  270,  180,  30);
move(1.64,  2.86,  0.00);  object(0x029F,  270,  180,  30);
move(1.64,  2.86,  0.00);  object(0x029F,  270,  180,  30);
move(0.60,  1.04,  0.00);  object(0x029F,  270,  180,  30);
move(-3.66,  2.35,  0.00);  object(0x029F,  270,  180,  30);
move(-1.67,  -2.85,  0.00);  object(0x029F,  270,  180,  30);
move(-1.67,  -2.85,  0.00);  object(0x029F,  270,  180,  30);
move(-1.67,  -2.85,  0.00);  object(0x029F,  270,  180,  30);
move(-0.69,  -1.17,  0.00);  object(0x029F,  270,  180,  30);
move(30.81,  -17.43,  0.00);  object(0x029F,  270,  180,  30);
move(1.67,  2.85,  0.00);  object(0x029F,  270,  180,  30);
move(1.67,  2.85,  0.00);  object(0x029F,  270,  180,  30);
move(1.67,  2.85,  0.00);  object(0x029F,  270,  180,  30);
move(0.71,  1.21,  0.00);  object(0x029F,  270,  180,  30);
move(3.80,  -2.22,  0.00);  object(0x029F,  270,  180,  30);
move(0.00,  0.00,  0.00);  object(0x029F,  270,  180,  30);
move(-1.67,  -2.85,  0.00);  object(0x029F,  270,  180,  30);
move(-1.67,  -2.85,  0.00);  object(0x029F,  270,  180,  30);
move(-1.67,  -2.85,  0.00);  object(0x029F,  270,  180,  30);
move(-0.76,  -1.29,  0.00);  object(0x029F,  270,  180,  30);
move(3.00,  48.59,  -8.00);  object(0x1CE5,  270,  90,  300);
move(0.00,  0.00,  -1.20);  object(0x1CE5,  270,  90,  300);
move(0.00,  0.00,  -1.10);  object(0x1CE5,  270,  90,  300);
move(2.07,  -1.21,  0.00);  object(0x1CE5,  270,  90,  300);
move(0.00,  0.00,  1.10);  object(0x1CE5,  270,  90,  300);
move(0.00,  0.00,  1.20);  object(0x1CE5,  270,  90,  300);
move(-0.52,  0.30,  0.70);  object(0x1CE5,  210,  0,  210);
move(-0.86,  0.74,  0.00);  object(0x1CE5,  210,  0,  210);
move(-0.89,  0.65,  -3.30);  object(0x1CE5,  160,  315,  210);
move(2.85,  -1.47,  0.00);  object(0x1CE5,  160,  240,  210);
move(0.15,  0.06,  -0.10);  object(0x1CE5,  160,  250,  210);
move(-0.36,  0.33,  7.60);  object(0x1CE5,  160,  250,  210);
move(4.09,  -56.63,  -7.30);  object(0x1CB2,  90,  300,  120);
move(-56.08,  32.46,  0.00);  object(0x1CB2,  90,  300,  120);
move(5.04,  -12.90,  -3.00);  object(0x1CB2,  0,  90,  120);
move(-5.77,  3.63,  0.00);  object(0x1CB2,  0,  90,  120);
move(7.69,  21.01,  6.60);  object(0x1CB2,  0,  90,  210);
move(0.51,  0.86,  0.00);  object(0x1CB2,  0,  90,  210);
move(8.71,  7.04,  0.00);  object(0x1CB2,  0,  90,  300);
move(9.76,  -5.80,  2.80);  object(0x1CB2,  270,  235,  29);
move(11.44,  -6.69,  4.10);  object(0x1CB2,  270,  90,  30);
move(2.42,  -28.00,  -6.40);  object(0x01C2,  0,  0,  271);
move(0.80,  1.12,  0.00);  object(0x01C2,  0,  0,  263);
move(-0.89,  -0.12,  0.00);  object(0x01C2,  0,  0,  271);
move(-0.91,  0.01,  0.00);  object(0x01C2,  0,  0,  280);
move(-0.87,  0.35,  0.00);  object(0x01C2,  0,  0,  289);
move(0.88,  0.79,  0.00);  object(0x01C2,  0,  0,  282);
move(1.28,  0.39,  0.00);  object(0x01C2,  0,  0,  266);
move(0.95,  -0.03,  0.00);  object(0x01C2,  0,  0,  256);
move(0.40,  1.17,  0.00);  object(0x01C2,  0,  0,  247);
move(-1.33,  -0.27,  0.00);  object(0x01C2,  0,  0,  264);
move(-1.30,  -0.06,  0.00);  object(0x01C2,  0,  0,  281);
move(-0.91,  -0.44,  0.00);  object(0x01C2,  0,  0,  291);
move(-1.02,  -0.49,  0.00);  object(0x01C2,  0,  0,  299);
move(-0.89,  0.38,  0.00);  object(0x01C2,  0,  0,  308);
move(-0.85,  0.41,  0.00);  object(0x01C2,  0,  0,  317);
move(-0.95,  0.65,  0.00);  object(0x01C2,  0,  0,  328);
move(1.36,  -0.03,  0.00);  object(0x01C2,  0,  0,  319);
move(0.99,  -0.10,  0.00);  object(0x01C2,  0,  0,  311);
move(1.06,  0.33,  0.00);  object(0x01C2,  0,  0,  302);
move(1.43,  0.42,  0.00);  object(0x01C2,  0,  0,  285);
move(1.56,  0.51,  0.00);  object(0x01C2,  0,  0,  262);
move(1.28,  0.24,  0.00);  object(0x01C2,  0,  0,  244);
move(0.00,  0.00,  0.00);  object(0x01C2,  0,  0,  244);
move(0.00,  0.00,  0.00);  object(0x01C2,  0,  0,  244);
move(0.00,  0.00,  0.00);  object(0x01C2,  0,  0,  244);
move(0.00,  0.00,  0.00);  object(0x01C2,  0,  0,  244);
move(0.00,  0.00,  0.00);  object(0x01C2,  0,  0,  244);
move(0.58,  0.90,  0.00);  object(0x01C2,  0,  0,  230);
move(-1.27,  -0.01,  0.00);  object(0x01C2,  0,  0,  245);
move(-22.24,  7.17,  0.40);  object(0x01D5,  0,  0,  341);
move(0.97,  -1.03,  0.00);  object(0x01D5,  0,  0,  333);
move(-1.09,  2.51,  0.00);  object(0x01D5,  0,  0,  350);
move(0.54,  1.42,  0.00);  object(0x01D5,  0,  0,  359);
move(1.05,  1.21,  0.00);  object(0x01D5,  0,  0,  7);
move(0.54,  -3.25,  0.00);  object(0x01D5,  0,  0,  341);
move(0.15,  1.45,  0.00);  object(0x01D5,  0,  0,  352);
move(-0.53,  -4.17,  0.00);  object(0x01D5,  0,  0,  330);
move(1.13,  1.65,  0.00);  object(0x01D5,  0,  0,  338);
move(-0.48,  4.07,  0.00);  object(0x01D5,  0,  0,  19);
move(1.31,  -5.90,  0.00);  object(0x01D5,  0,  0,  320);
move(0.38,  1.38,  0.00);  object(0x01D5,  0,  0,  327);
move(-0.50,  1.53,  0.00);  object(0x01D5,  0,  0,  345);
move(0.50,  1.80,  0.00);  object(0x01D5,  0,  0,  6);
move(-0.03,  1.64,  0.00);  object(0x01D5,  0,  0,  27);
move(-1.05,  0.46,  0.00);  object(0x01D5,  0,  0,  28);
move(0.78,  1.57,  0.00);  object(0x01D5,  0,  0,  45);
move(1.42,  -9.73,  0.00);  object(0x01D5,  0,  0,  305);
move(-1.10,  0.66,  0.00);  object(0x01D5,  0,  0,  316);
move(0.00,  0.00,  0.00);  object(0x01D5,  0,  0,  316);
move(-8.40,  -12.25,  5.90);  object(0x1CB2,  0,  270,  210);
move(-7.18,  -12.30,  0.00);  object(0x1CB2,  0,  270,  210);
move(-7.04,  -12.28,  0.00);  object(0x1CB2,  0,  270,  210);
move(-7.05,  -12.12,  0.00);  object(0x1CB2,  0,  270,  210);
move(-6.94,  -11.97,  0.00);  object(0x1CB2,  0,  270,  210);
move(-6.97,  -12.07,  0.00);  object(0x1CB2,  0,  270,  210);
move(-7.23,  -12.51,  0.00);  object(0x1CB2,  0,  270,  210);
move(-6.66,  -11.66,  0.00);  object(0x1CB2,  0,  270,  209);
move(-6.48,  -11.69,  0.00);  object(0x1CB2,  0,  270,  209);
move(-6.62,  -11.95,  0.00);  object(0x1CB2,  0,  270,  209);
move(-5.52,  -9.70,  0.00);  object(0x1CB2,  0,  270,  210);
move(-6.47,  -11.21,  0.00);  object(0x1CB2,  0,  270,  210);
move(-6.39,  -11.02,  0.00);  object(0x1CB2,  0,  270,  210);
move(-6.72,  -11.52,  0.00);  object(0x1CB2,  0,  270,  210);
move(-7.11,  -12.54,  0.00);  object(0x1CB2,  0,  270,  209);
move(-7.02,  -12.46,  0.00);  object(0x1CB2,  0,  270,  210);
move(-6.57,  -11.38,  0.00);  object(0x1CB2,  0,  270,  210);
move(-6.68,  -11.67,  0.00);  object(0x1CB2,  0,  270,  210);
move(-6.98,  -12.07,  0.00);  object(0x1CB2,  0,  270,  210);
move(-6.07,  -10.39,  0.00);  object(0x1CB2,  0,  270,  210);
move(-6.53,  -11.41,  0.00);  object(0x1CB2,  0,  270,  210);
move(-4.88,  -8.15,  0.00);  object(0x1CB2,  0,  265,  120);
move(-2.81,  -4.96,  0.70);  object(0x1CB2,  0,  260,  120);
move(-2.44,  -4.19,  1.00);  object(0x1CB2,  0,  255,  120);
move(-2.17,  -3.80,  1.50);  object(0x1CB2,  0,  245,  120);
move(-2.46,  -4.21,  2.80);  object(0x1CB2,  0,  235,  120);
move(-2.13,  -3.73,  3.60);  object(0x1CB2,  0,  225,  120);
move(-1.45,  -2.43,  3.50);  object(0x1CB2,  0,  215,  120);
move(-1.00,  -1.43,  3.10);  object(0x1CB2,  0,  205,  120);
move(-0.59,  -0.99,  3.40);  object(0x1CB2,  0,  195,  120);
teleport(207.59,  -284.89,  187.43); 

#cheat Mansion Expansion Pack *Update*
static obj;
static state;
top = 16.65;
bottom = 12.65;
if(!obj)
{
moveto(-274.79,   -649.25,   12.65);
obj = object(0x1CB2,   0,   0,   90);
moveto(-260.07,   -652.27,   9.26);  object(0x1CB2,   90,   90,   0);
move(-14.60,   0.10,   0.00);  object(0x1CB2,   90,   90,   0);
move(-14.50,   0.10,   0.00);  object(0x1CB2,   90,   90,   0);
move(-0.04,   -6.57,   0.00);  object(0x1CB2,   90,   90,   0);
move(14.50,   -0.10,   0.00);  object(0x1CB2,   90,   90,   0);
move(14.60,   -0.10,   0.00);  object(0x1CB2,   90,   90,   0);
move(-0.04,   -6.80,   0.00);  object(0x1CB2,   90,   90,   0);
move(-14.40,   0.10,   0.00);  object(0x1CB2,   90,   90,   0);
move(-14.60,   0.10,   0.00);  object(0x1CB2,   90,   90,   0);
move(-0.04,   -6.78,   0.00);  object(0x1CB2,   90,   90,   0);
move(14.60,   -0.10,   0.00);  object(0x1CB2,   90,   90,   0);
move(14.40,   -0.10,   0.00);  object(0x1CB2,   90,   90,   0);
move(-0.04,   -6.80,   0.00);  object(0x1CB2,   90,   90,   0);
move(-14.60,   0.10,   0.00);  object(0x1CB2,   90,   90,   0);
move(-14.40,   0.10,   0.00);  object(0x1CB2,   90,   90,   0);
move(-0.03,   -3.34,   -3.40);  object(0x1CB2,   0,   0,   90);
move(14.50,   -0.04,   0.00);  object(0x1CB2,   0,   0,   90);
move(14.60,   -0.04,   0.00);  object(0x1CB2,   0,   0,   90);
move(7.25,   7.24,   0.00);  object(0x1CB2,   0,   0,   0);
move(-0.12,   14.40,   0.00);  object(0x1CB2,   0,   0,   0);
move(-0.12,   14.50,   0.00);  object(0x1CB2,   0,   0,   0);
move(-43.38,   -28.84,   0.00);  object(0x1CB2,   0,   0,   180);
move(-0.11,   14.60,   0.00);  object(0x1CB2,   0,   0,   180);
move(-0.05,   6.90,   0.00);  object(0x1CB2,   0,   0,   180);
move(17.98,   -35.76,   0.80);  object(0x1CB2,   90,   110,   90);
move(6.69,   0.02,   0.00);  object(0x1CB2,   90,   110,   90);
move(1.02,   0.00,   0.00);  object(0x1CB2,   90,   110,   90);
move(18.01,   14.12,   6.00);  object(0x1CB2,   0,   0,   0);
move(-0.15,   14.70,   0.00);  object(0x1CB2,   0,   0,   0);
move(-0.04,   4.10,   0.00);  object(0x1CB2,   0,   0,   0);
move(-43.43,   0.06,   0.00);  object(0x1CB2,   0,   0,   0);
move(0.15,   -14.50,   0.00);  object(0x1CB2,   0,   0,   0);
move(0.04,   -4.20,   0.00);  object(0x1CB2,   0,   0,   0);
move(7.12,   -7.19,   0.00);  object(0x1CB2,   0,   0,   270);
move(28.90,   -0.09,   0.00);  object(0x1CB2,   0,   0,   270);
move(0.10,   33.11,   0.00);  object(0x1CB2,   0,   0,   270);
move(-29.10,   0.09,   0.00);  object(0x1CB2,   0,   0,   270);
move(-0.02,   -3.39,   3.40);  object(0x1CB2,   90,   90,   180);
move(14.50,   0.10,   0.00);  object(0x1CB2,   90,   90,   180);
move(14.60,   0.10,   0.00);  object(0x1CB2,   90,   90,   180);
move(0.04,   -6.80,   0.00);  object(0x1CB2,   90,   90,   180);
move(-14.60,   -0.10,   0.00);  object(0x1CB2,   90,   90,   180);
move(-14.50,   -0.10,   0.00);  object(0x1CB2,   90,   90,   180);
move(0.04,   -6.66,   0.00);  object(0x1CB2,   90,   90,   180);
move(14.50,   0.10,   0.00);  object(0x1CB2,   90,   90,   180);
move(14.60,   0.10,   0.00);  object(0x1CB2,   90,   90,   180);
move(0.04,   -6.73,   0.00);  object(0x1CB2,   90,   90,   180);
move(-14.50,   -0.10,   0.00);  object(0x1CB2,   90,   90,   180);
move(-14.70,   -0.10,   0.00);  object(0x1CB2,   90,   90,   180);
move(0.04,   -6.42,   0.00);  object(0x1CB2,   90,   90,   180);
move(14.60,   0.10,   0.00);  object(0x1CB2,   90,   90,   180);
move(14.50,   0.10,   0.00);  object(0x1CB2,   90,   90,   180);
moveto(-368.81,   -637.35,   12.76);  object(0x1CB2,   0,   0,   0);
move(-0.13,   11.80,   0.00);  object(0x1CB2,   0,   0,   0);
move(-19.54,   -0.02,   0.00);  object(0x1CB2,   0,   0,   0);
move(0.13,   -11.70,   0.00);  object(0x1CB2,   0,   0,   0);
move(7.31,   -7.38,   0.00);  object(0x1CB2,   0,   0,   270);
move(5.00,   0.01,   0.00);  object(0x1CB2,   0,   0,   270);
move(-0.19,   26.40,   0.00);  object(0x1CB2,   0,   0,   90);
move(-5.00,   -0.03,   0.00);  object(0x1CB2,   0,   0,   90);
move(0.03,   -3.34,   3.40);  object(0x1CB2,   90,   90,   180);
move(5.00,   -0.02,   0.00);  object(0x1CB2,   90,   90,   180);
move(-0.02,   -6.67,   0.00);  object(0x1CB2,   90,   90,   180);
move(-5.00,   0.02,   0.00);  object(0x1CB2,   90,   90,   180);
move(-0.02,   -6.82,   0.00);  object(0x1CB2,   90,   90,   180);
move(5.00,   -0.02,   0.00);  object(0x1CB2,   90,   90,   180);
move(-0.02,   -6.11,   0.00);  object(0x1CB2,   90,   90,   180);
move(-5.00,   0.02,   0.00);  object(0x1CB2,   90,   90,   180);
move(18.76,   19.56,   -3.80);  object(0x1CB2,   90,   60,   180);
move(-0.02,   -6.77,   0.00);  object(0x1CB2,   90,   60,   180);
move(-0.02,   -6.74,   0.00);  object(0x1CB2,   90,   60,   180);
move(-0.02,   -6.09,   0.00);  object(0x1CB2,   90,   60,   180);
move(-1.51,   -3.25,   -3.00);  object(0x1CB2,   30,   0,   90);
move(0.07,   26.27,   0.00);  object(0x1CB2,   30,   0,   90);
move(-30.81,   -3.41,   3.10);  object(0x1CB2,   90,   240,   0);
move(0.04,   -6.77,   0.00);  object(0x1CB2,   90,   240,   0);
move(0.04,   -6.76,   0.00);  object(0x1CB2,   90,   240,   0);
move(0.04,   -5.98,   0.00);  object(0x1CB2,   90,   240,   0);
move(1.92,   -3.41,   -2.80);  object(0x1CB2,   330,   0,   90);
move(-0.15,   26.27,   0.00);  object(0x1CB2,   330,   0,   90);
move(7.70,   -2.13,   5.90);  object(0x1CB2,   90,   105,   90);
move(6.79,   -0.04,   0.00);  object(0x1CB2,   90,   105,   90);
move(6.19,   0.06,   0.00);  object(0x1CB2,   90,   105,   90);
move(-0.01,   14.20,   0.60);  object(0x1CB2,   90,   80,   90);
move(-6.79,   -0.07,   0.00);  object(0x1CB2,   90,   80,   90);
move(-6.04,   -0.06,   0.00);  object(0x1CB2,   90,   80,   90);
moveto(-369.36,   -660.92,   6.86);  object(0x1CB2,   90,   90,   0);
move(-14.60,   0.04,   0.00);  object(0x1CB2,   90,   90,   0);
move(-3.90,   0.01,   0.00);  object(0x1CB2,   90,   90,   0);
move(-3.92,   -10.75,   0.00);  object(0x1CB2,   90,   90,   270);
move(0.16,   -14.50,   0.00);  object(0x1CB2,   90,   90,   270);
move(26.19,   14.50,   0.00);  object(0x1CB2,   90,   90,   270);
move(0.16,   -14.50,   0.00);  object(0x1CB2,   90,   90,   270);
move(-29.34,   0.09,   -3.30);  object(0x1CB2,   0,   0,   0);
move(-0.12,   14.50,   0.00);  object(0x1CB2,   0,   0,   0);
move(-0.06,   6.90,   0.00);  object(0x1CB2,   0,   0,   0);
move(26.15,   -6.99,   0.00);  object(0x1CB2,   0,   0,   0);
move(0.12,   -14.50,   0.00);  object(0x1CB2,   0,   0,   0);
move(-7.35,   21.81,   0.00);  object(0x1CB2,   0,   0,   270);
move(-7.30,   -0.05,   0.00);  object(0x1CB2,   0,   0,   270);
move(-5.15,   -7.24,   0.00);  object(0x1CB2,   0,   0,   180);
move(0.11,   -14.60,   0.00);  object(0x1CB2,   0,   0,   180);
move(26.40,   0.19,   0.00);  object(0x1CB2,   0,   0,   180);
move(-0.11,   14.50,   0.00);  object(0x1CB2,   0,   0,   180);
move(-0.15,   6.70,   0.00);  object(0x1CB2,   0,   0,   180);
moveto(-303.67,   -652.58,   9.30);  object(0x1CB2,   90,   90,   0);
move(-14.60,   -0.08,   0.00);  object(0x1CB2,   90,   90,   0);
move(0.04,   -6.80,   0.00);  object(0x1CB2,   90,   90,   0);
move(14.50,   0.08,   0.00);  object(0x1CB2,   90,   90,   0);
move(0.04,   -6.81,   0.00);  object(0x1CB2,   90,   90,   0);
move(-14.50,   -0.08,   0.00);  object(0x1CB2,   90,   90,   0);
move(0.04,   -6.79,   0.00);  object(0x1CB2,   90,   90,   0);
move(14.30,   0.08,   0.00);  object(0x1CB2,   90,   90,   0);
move(0.03,   -6.02,   0.00);  object(0x1CB2,   90,   90,   0);
move(-14.30,   -0.08,   0.00);  object(0x1CB2,   90,   90,   0);
move(0.02,   -3.44,   -3.40);  object(0x1CB2,   0,   0,   90);
move(14.20,   0.08,   0.00);  object(0x1CB2,   0,   0,   90);
move(-21.49,   7.18,   0.00);  object(0x1CB2,   0,   0,   180);
move(-0.03,   14.50,   0.00);  object(0x1CB2,   0,   0,   180);
move(-0.01,   4.80,   0.00);  object(0x1CB2,   0,   0,   180);
move(92.21,   49.83,   3.40);  object(0x1CB2,   90,   90,   90);
move(-16.32,   -69.15,   0.00);  object(0x1CB2,   90,   90,   90);
move(-0.05,   14.50,   0.00);  object(0x1CB2,   90,   90,   90);
move(-0.05,   14.50,   0.00);  object(0x1CB2,   90,   90,   90);
move(-0.05,   14.50,   0.00);  object(0x1CB2,   90,   90,   90);
move(-0.03,   7.80,   0.00);  object(0x1CB2,   90,   90,   90);
move(6.80,   0.02,   0.00);  object(0x1CB2,   90,   90,   90);
move(0.05,   -14.60,   0.00);  object(0x1CB2,   90,   90,   90);
move(-0.07,   21.29,   0.00);  object(0x1CB2,   90,   90,   90);
move(-6.79,   -0.02,   0.00);  object(0x1CB2,   90,   90,   90);
move(6.82,   -35.78,   0.00);  object(0x1CB2,   90,   90,   90);
move(0.05,   -14.60,   0.00);  object(0x1CB2,   90,   90,   90);
move(0.03,   -7.60,   0.00);  object(0x1CB2,   90,   90,   90);
move(6.80,   0.02,   0.00);  object(0x1CB2,   90,   90,   90);
move(-0.05,   14.50,   0.00);  object(0x1CB2,   90,   90,   90);
move(-0.05,   14.50,   0.00);  object(0x1CB2,   90,   90,   90);
move(-0.05,   14.50,   0.00);  object(0x1CB2,   90,   90,   90);
move(-0.05,   14.50,   0.00);  object(0x1CB2,   90,   90,   90);
move(-0.04,   11.10,   0.00);  object(0x1CB2,   90,   90,   90);
move(3.10,   -14.39,   0.00);  object(0x1CB2,   90,   90,   90);
move(0.05,   -14.60,   0.00);  object(0x1CB2,   90,   90,   90);
move(0.05,   -14.50,   0.00);  object(0x1CB2,   90,   90,   90);
move(0.05,   -14.40,   0.00);  object(0x1CB2,   90,   90,   90);
move(0.04,   -11.30,   0.00);  object(0x1CB2,   90,   90,   90);
move(-12.65,   -7.22,   -3.40);  object(0x1CB2,   0,   0,   90);
move(8.80,   0.01,   0.00);  object(0x1CB2,   0,   0,   90);
move(7.21,   7.20,   0.00);  object(0x1CB2,   0,   0,   0);
move(-0.06,   14.50,   0.00);  object(0x1CB2,   0,   0,   0);
move(-0.06,   14.50,   0.00);  object(0x1CB2,   0,   0,   0);
move(-0.06,   14.50,   0.00);  object(0x1CB2,   0,   0,   0);
move(-0.06,   14.60,   0.00);  object(0x1CB2,   0,   0,   0);
move(-0.05,   12.20,   0.00);  object(0x1CB2,   0,   0,   0);
moveto(-254.64,   -652.06,   9.70);  object(0x01C2,   0,   0,   43);
move(-0.88,   0.65,   0.00);  object(0x01C2,   0,   0,   30);
move(-0.10,   -1.67,   0.00);  object(0x01C2,   0,   0,   34);
move(-1.38,   1.54,   0.20);  object(0x01C1,   0,   0,   14);
move(-1.75,   -0.39,   0.00);  object(0x01C1,   0,   0,   353);
move(0.83,   0.19,   1.20);  object(0x01C1,   0,   0,   3);
move(-2.20,   -0.37,   -1.30);  object(0x01BF,   0,   0,   338);
move(-121.71,   0.18,   -2.50);  object(0x01BE,   0,   0,   0);
move(1.00,   -0.01,   0.00);  object(0x01BE,   0,   0,   0);
move(1.00,   -0.01,   0.00);  object(0x01BE,   0,   0,   0);
move(1.00,   -0.01,   0.00);  object(0x01BE,   0,   0,   0);
move(-0.60,   0.00,   0.90);  object(0x01BE,   0,   0,   0);
move(-1.20,   0.01,   0.00);  object(0x01BE,   0,   0,   0);
move(-2.86,   -0.14,   -0.80);  object(0x01BE,   0,   0,   346);
moveto(-280.76,   -682.29,   10.85);  object(0x1904,   0,   0,   270);
move(2.60,   0.01,   0.00);  object(0x1904,   0,   0,   270);
move(2.60,   0.01,   0.00);  object(0x1904,   0,   0,   270);
move(2.60,   0.01,   0.00);  object(0x1904,   0,   0,   270);
move(2.60,   0.01,   0.00);  object(0x1904,   0,   0,   270);
move(2.50,   0.01,   0.00);  object(0x1904,   0,   0,   270);
move(0.00,   0.00,   3.30);  object(0x1904,   0,   0,   270);
move(-2.60,   -0.01,   0.00);  object(0x1904,   0,   0,   270);
move(-2.60,   -0.01,   0.00);  object(0x1904,   0,   0,   270);
move(-2.60,   -0.01,   0.00);  object(0x1904,   0,   0,   270);
move(-2.60,   -0.01,   0.00);  object(0x1904,   0,   0,   270);
move(-2.60,   -0.01,   0.00);  object(0x1904,   0,   0,   270);
move(0.00,   0.00,   0.30);  object(0x1904,   0,   0,   270);
move(2.60,   0.01,   0.00);  object(0x1904,   0,   0,   270);
move(2.60,   0.01,   0.00);  object(0x1904,   0,   0,   270);
move(2.60,   0.01,   0.00);  object(0x1904,   0,   0,   270);
move(2.60,   0.01,   0.00);  object(0x1904,   0,   0,   270);
move(2.60,   0.01,   0.00);  object(0x1904,   0,   0,   270);
move(-23.87,   28.97,   4.90);  object(0x1CB4,   0,   0,   60);
move(-93.49,   1.63,   -12.40);  object(0x1CB3,   0,   0,   93);
move(-0.06,   -0.95,   0.00);  object(0x1CB3,   0,   0,   93);
move(-0.90,   0.05,   0.00);  object(0x1CB3,   0,   0,   93);
move(0.06,   1.04,   0.00);  object(0x1CB3,   0,   0,   93);
move(60.71,   -5.71,   3.70);  object(0x1CA8,   0,   0,   180);
move(0.02,   -15.80,   0.00);  object(0x1CA8,   0,   0,   180);
move(7.91,   -9.30,   0.00);  object(0x1CA8,   0,   0,   90);
move(13.10,   0.02,   0.00);  object(0x1CA8,   0,   0,   90);
move(-20.94,   7.85,   0.00);  object(0x1CA8,   0,   0,   180);
move(27.14,   -5.10,   -1.21);  object(0x1C9D,   0,   0,   227);
moveto(-251.65,   -623.48,   2.28);  object(0x1C92,   0,   0,   34);
move(-14.34,   -57.79,   7.00);  object(0x1CCD,   0,   0,   126);
move(0.93,   -0.10,   0.00);  object(0x1CCD,   0,   0,   127);
move(-55.58,   9.38,   0.10);  object(0x1CD5,   0,   0,   192);
move(-1.93,   8.57,   5.20);  object(0x1CD6,   0,   0,   76);
move(0.74,   -14.27,   0.00);  object(0x1CD6,   0,   0,   11);
move(84.46,   -5.02,   -3.90);  object(0x1CA8,   0,   0,   90);
move(-7.70,   0.06,   0.00);  object(0x1CA8,   0,   0,   90);
move(15.53,   7.79,   0.00);  object(0x1CA8,   0,   0,   180);
move(-0.07,   15.70,   0.00);  object(0x1CA8,   0,   0,   180);
move(-0.07,   15.80,   0.00);  object(0x1CA8,   0,   0,   180);
move(-0.07,   15.70,   0.00);  object(0x1CA8,   0,   0,   180);
move(-0.08,   15.90,   0.00);  object(0x1CA8,   0,   0,   180);
move(-0.02,   4.80,   0.00);  object(0x1CA8,   0,   0,   180);
move(-139.52,   -36.61,   6.00);  object(0x01C2,   0,   0,   241);
move(-18.07,   -0.44,   0.00);  object(0x01C2,   0,   0,   220);
move(122.71,   -3.83,   -6.50);  object(0x01C5,   0,   0,   180);
move(2.66,   0.02,   0.00);  object(0x01C5,   0,   0,   180);
move(-242.22,   19.54,   0.70);  object(0x1CA8,   0,   0,   180);
move(0.03,   -13.00,   0.00);  object(0x1CA8,   0,   0,   180);
move(7.95,   -7.79,   0.00);  object(0x1CA8,   0,   0,   270);
move(15.80,   0.12,   0.00);  object(0x1CA8,   0,   0,   270);
move(7.85,   7.87,   0.00);  object(0x1CA8,   0,   0,   180);
move(-0.04,   27.59,   0.00);  object(0x1CA8,   0,   0,   180);
move(-0.96,   -18.91,   -1.20);  object(0x01D0,   0,   0,   80);
move(-0.50,   10.97,   0.00);  object(0x01D0,   0,   0,   62);
move(1.84,   -10.66,   0.20);  object(0x01B8,   0,   0,   348);
move(0.08,   10.04,   0.00);  object(0x01B8,   0,   0,   313);
move(-16.55,   -23.95,   0.00);  object(0x01B8,   0,   0,   90);
move(-14.34,   12.29,   0.00);  object(0x01B8,   0,   0,   181);
move(15.48,   16.61,   0.00);  object(0x01B8,   0,   0,   275);
move(-21.61,   2.77,   1.00);  object(0x1CA8,   0,   0,   140);
move(-7.86,   13.40,   0.00);  object(0x1CA8,   0,   0,   160);
setfloat(pobj + 0x30,  -261.37,   -627.72,   10.35);
}
else
{
    selectobject(obj);
    if(state == 0)
    {
         if(getfloat(pplayer+0x30) < -267 &&getfloat(pplayer+0x30) > -282 &&getfloat(pplayer+0x34) < 

-636.73&&getfloat(pplayer+0x34) > -655.96) state = 1;
         else state = 2;
    }
    if(state == 1)
    {
         if(getfloat(obj+0x38) >= top) state = 0;
         else setfloat(obj + 0x38,   getfloat(obj+0x38) + 0.04);
    }
    else if(state == 2)
    {
         if(getfloat(obj+0x38) <= bottom) state = 0;
         else setfloat(obj + 0x38,   getfloat(obj+0x38) - 0.04);
    }
    propagateobject();
}
pspawn = 0x08E81290;
setint(pspawn,    263);
setfloat(pspawn + 4,    -478.74,   -631.65,   10.37,    0);
pspawn += 0x30;
setint(pspawn,    278);
setfloat(pspawn + 4,    -397.77,   -687.82,   6.00,    180);
pspawn += 0x30;
setint(pspawn,    264);
setfloat(pspawn + 4,    -384.31,   -690.02,   6.00,    180);
pspawn += 0x30;
setint(pspawn,    247);
setfloat(pspawn + 4,    -372.25,   -686.85,   6.00,    180);
pspawn += 0x30;
setint(pspawn,    248);
setfloat(pspawn + 4,    -359.53,   -689.44,   6.00,    180);
pspawn += 0x30;
setint(pspawn,    233);
setfloat(pspawn + 4,    -274.43,   -694.61,   6.00,    90);
pspawn += 0x30;
setint(pspawn,    198);
setfloat(pspawn + 4,    -392.09,   -653.71,   7.96,    180);
pspawn += 0x30;
setint(pspawn,    230);
setfloat(pspawn + 4,    -435.48,   -617.95,   10.37,    90);
pspawn += 0x30;
setint(pspawn,    275);
setfloat(pspawn + 4,    -278.90,   -592.08,   12.84,    0);
pspawn += 0x30;
setint(pspawn,    170);
setfloat(pspawn + 4,    -266.08,   -630.22,   10.35,    90);
pspawn += 0x30;
setint(pspawn,    212);
setfloat(pspawn + 4,    -257.14,   -617.43,   10.34,    140);
pspawn += 0x30;

#off
obj = state = 0; 
