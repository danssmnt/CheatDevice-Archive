#cheat Airport Runway 22 Ramp
//ID: 20078
//Score: 68
//Author: jocsonwar13
//Category: Location Mods
//Description: A Very Nice Ramp in Airport Runway 22 please see the image
//
//EDITED BY: psphacker108 on 21/06/08 17:33:21
//Image: http://i25.tinypic.com/5b8m0l.jpg
//Time: 21/06/2008 09:06:12
//Working: Yes
moveto(-1574.03, -1330.90, 14.87);  object(0x1CAA, 0, 0, 231);
move(-6.72, -5.53, 4.50);  object(0x1CAA, 350, 0, 231);
move(-6.04, -4.96, 5.90);  object(0x1CAA, 340, 0, 231);
move(-5.01, -4.11, 7.64);  object(0x1CAA, 325, 0, 231);
move(-3.37, -2.80, 9.20);  object(0x1CAA, 310, 0, 231);
move(-1.02, -0.92, 10.14);  object(0x1CAA, 290, 0, 231);
move(1.38, 1.02, 10.05);  object(0x1CAA, 275, 0, 231);
move(3.59, 2.93, 9.10);  object(0x1CAA, 255, 0, 231);
moveto(-1586.26, -1341.21, 62.34);  object(0x1CAA, 10, 0, 51);
move(6.42, 4.46, -1.30);  object(0x1CAA, 55, 0, 51);
move(6.66, 5.48, -5.00);  object(0x1CAA, 50, 0, 51);
move(6.21, 5.22, -4.50);  object(0x1CAA, 50, 0, 50);
move(6.29, 5.34, -4.30);  object(0x1CAA, 50, 0, 50);
move(6.68, 5.72, -4.70);  object(0x1CAA, 50, 0, 50);
move(6.62, 5.39, -4.40);  object(0x1CAA, 50, 0, 50);
move(6.74, 5.62, -4.70);  object(0x1CAA, 50, 0, 50);
moveto(-1533.56, -1297.86, 29.50);  object(0x1CAA, 40, 0, 50);
move(6.44, 5.60, -0.60);  object(0x1CAA, 10, 0, 50);
move(6.22, 5.23, 4.60);  object(0x1CAA, 335, 0, 50);
move(4.44, 4.00, 7.90);  object(0x1CAA, 325, 0, 50);
teleport(-1288.76, -1095.71, 16.67)

#cheat Private Airport Stunt Land
//ID: 20083
//Score: 89
//Author: jocsonwar13
//Category: Location Mods
//Description: a perfect place for stuntman note :when you on this game you will be telepoted directly and please search the place to see some many ramps
//
//if you see the picture thats not the actual size of ramps it's big and more ramps!!
//Image: http://i30.tinypic.com/2uti9g4.jpg
//Time: 21/06/2008 19:30:15
//Working: Yes
moveto(-1809.47, -406.34, 14.96);  object(0x028E, 0, 0, 267);
move(-7.18, -0.40, 4.70);  object(0x028E, 340, 0, 267);
move(-5.34, -0.30, 7.10);  object(0x028E, 320, 0, 267);
move(-2.19, -0.13, 8.40);  object(0x028E, 295, 0, 267);
move(1.66, 0.10, 8.70);  object(0x028E, 270, 0, 267);
move(4.85, 0.28, 7.50);  object(0x028E, 250, 0, 267);
move(7.52, 0.44, 4.60);  object(0x028E, 220, 0, 267);
move(0.34, -0.30, -9.60);  object(0x028E, 20, 0, 89);
move(8.71, 0.26, -0.20);  object(0x028E, 25, 0, 89);
move(8.23, 0.23, 0.40);  object(0x1CA9, 270, 0, 359);
move(8.90, 0.14, 0.00);  object(0x1CA9, 270, 0, 359);
move(8.73, 0.24, 0.00);  object(0x1CA9, 270, 0, 359);
move(6.50, -2.02, 0.00);  object(0x1CA9, 270, 0, 269);
move(0.24, -8.80, 0.00);  object(0x1CA9, 270, 0, 269);
move(0.23, -8.70, 0.00);  object(0x1CA9, 270, 0, 269);
move(0.17, -8.80, 0.00);  object(0x1CA9, 270, 0, 269);
move(0.24, -8.80, 0.00);  object(0x1CA9, 270, 0, 269);
move(0.18, -6.70, 1.00);  object(0x028E, 0, 0, 179);
move(246.05, -77.77, 1.70);  object(0x02A5, 5, 350, 91);
move(7.80, 0.92, 4.00);  object(0x02A5, 345, 345, 90);
move(6.27, 1.81, 5.70);  object(0x02A5, 330, 340, 90);
move(4.40, 3.05, 7.00);  object(0x02A5, 315, 335, 89);
move(2.14, 3.84, 7.20);  object(0x02A5, 300, 330, 89);
move(0.01, 4.80, 7.20);  object(0x02A5, 285, 325, 89);
move(-3.13, 4.74, 6.30);  object(0x02A5, 260, 320, 89);
moveto(-1510.71, -505.20, 90.75);  object(0x02A5, 225, 320, 86);
moveto(-1514.41, -507.37, 82.45);  object(0x1CA9, 270, 0, 92);
move(-4.68, 0.04, 0.00);  object(0x1CA9, 270, 0, 91);
move(-4.68, 0.12, 0.00);  object(0x1CA9, 270, 0, 91);
move(-4.58, 0.10, 0.00);  object(0x1CA9, 270, 0, 91);
move(12.06, 6.53, 0.00);  object(0x1CA9, 270, 0, 1);
move(-8.82, 0.20, 0.00);  object(0x1CA9, 270, 0, 1);
move(8.12, -13.68, 0.00);  object(0x1CA9, 270, 0, 3);
move(-8.97, 0.53, 0.00);  object(0x1CA9, 270, 0, 3);
move(-9.20, 2.10, 0.80);  object(0x02A5, 5, 0, 272);
move(0.68, 8.79, -0.10);  object(0x02A5, 5, 0, 273);
move(-8.36, 0.44, 3.00);  object(0x02A5, 0, 0, 272);
move(-0.43, -8.92, 0.00);  object(0x02A5, 0, 0, 272);
move(26.03, 6.49, -10.20);  object(0x1CBA, 0, 0, 273);
move(-2.50, -19.17, -22.80);  object(0x1CBA, 40, 0, 269);
move(-48.10, 12.60, 32.30);  object(0x1CA9, 90, 0, 269);
move(-0.09, 8.92, 0.00);  object(0x1CA9, 90, 0, 269);
move(4.68, -0.26, 0.00);  object(0x1CA9, 90, 0, 268);
move(-0.54, -9.18, 0.00);  object(0x1CA9, 90, 0, 268);
move(-8.55, 0.61, 0.00);  object(0x1CA9, 90, 0, 269);
move(0.00, 0.00, 0.00);  object(0x1CA9, 90, 0, 269);
move(-0.32, 8.75, 0.00);  object(0x1CA9, 270, 0, 269);
move(-6.00, -4.39, 0.00);  object(0x1CA9, 90, 0, 179);
move(-0.21, 2.52, 2.10);  object(0x1CA9, 0, 0, 359);
move(-0.35, -5.09, 0.00);  object(0x1CA9, 0, 0, 359);
move(-8.42, 2.39, -2.20);  object(0x1CA9, 270, 0, 359);
move(-8.88, -0.18, 0.00);  object(0x1CA9, 270, 0, 359);
move(-8.71, -0.20, 0.00);  object(0x1CA9, 270, 0, 359);
move(-8.91, -0.18, 0.00);  object(0x1CA9, 270, 0, 359);
move(-8.94, -0.42, 1.50);  object(0x028E, 355, 0, 268);
move(-7.40, -0.27, 4.80);  object(0x028E, 345, 0, 268);
move(-6.37, -0.23, 6.40);  object(0x028E, 330, 0, 268);
move(120.05, 18.57, -46.90);  object(0x028E, 345, 0, 89);
move(-0.12, 4.42, 0.00);  object(0x028E, 345, 0, 89);
move(45.55, 129.20, -32.20);  object(0x028E, 350, 0, 28);
move(3.15, 5.96, 5.70);  object(0x028E, 335, 0, 28);
move(-300.60, -101.78, -5.90);  object(0x028E, 350, 0, 229);
move(-39.49, -47.36, 0.10);  object(0x028E, 350, 0, 179);
move(-0.05, -6.84, 5.40);  object(0x028E, 340, 0, 180);
move(23.91, -43.14, 0.20);  object(0x028E, 340, 0, 180);
move(283.16, 5.96, 0.20);  object(0x028E, 340, 0, 91);
move(-6.12, -6.19, 0.00);  object(0x028E, 340, 0, 178);
move(-285.70, 6.11, -0.20);  object(0x028E, 340, 0, 268);
move(281.08, 82.37, 0.00);  object(0x028E, 340, 0, 3);
teleport(-1585.75, -395.19, 14.65)

#cheat Little Haiti Dump Road Ramp
//ID: 20080
//Score: 68
//Author: jocsonwar13
//Category: Location Mods
//Description: Little Haiti Dump Road Ramp..
//its a ramp great for those bike stunters..
//please see the image
//
//EDITED BY: psphacker108 on 21/06/08 17:32:24
//Image: http://i28.tinypic.com/muttdu.jpg
//Time: 21/06/2008 09:53:47
//Working: Yes
moveto(-929.58, -6.50, 5.62);  object(0x1D0F, 355, 0, 0);
move(-5.94, 22.82, 4.20);  object(0x1D0F, 355, 0, 0);
move(0.10, 8.43, 5.10);  object(0x1D0F, 345, 0, 0);
move(0.01, 7.39, 7.20);  object(0x1D0F, 330, 0, 0);
move(-0.09, 4.96, 9.20);  object(0x1D0F, 310, 0, 0);
move(-0.01, 2.27, 9.80);  object(0x1D0F, 300, 0, 0);
move(-0.02, -0.24, 10.30);  object(0x1D0F, 280, 0, 0);
move(-0.01, -3.81, 9.70);  object(0x1D0F, 260, 0, 0);
move(-0.04, -4.84, -4.30);  object(0x1CA4, 270, 0, 0);
move(-0.06, -2.88, 0.00);  object(0x1CA4, 270, 0, 0);
move(0.05, -2.82, 0.00);  object(0x1CA4, 270, 0, 0);
move(0.05, -5.00, -3.20);  object(0x1CA9, 270, 320, 270);
move(0.02, -6.50, -5.40);  object(0x1CA9, 270, 320, 270);
move(0.15, -6.07, -5.10);  object(0x1CA9, 270, 320, 270);
move(-0.01, -6.73, -5.60);  object(0x1CA9, 270, 320, 270);
move(0.10, -6.73, -5.70);  object(0x1CA9, 270, 320, 270);
move(0.02, -6.50, -5.40);  object(0x1CA9, 270, 320, 270);
move(-0.01, -7.98, -3.60);  object(0x1D0F, 20, 0, 180);
move(0.01, -9.55, 3.30);  object(0x1D0F, 345, 0, 180);
moveto(-935.57, 31.09, 47.95);  object(0x1D0F, 25, 0, 88);
move(10.37, 0.37, 2.10);  object(0x1D0F, 355, 0, 88);
move(6.02, -0.66, 2.40);  object(0x1D0F, 20, 0, 177);
move(-2.17, -7.51, 0.40);  object(0x1D0F, 20, 0, 266);
move(-7.55, 0.43, 1.00);  object(0x1D0F, 10, 0, 286);
teleport(-933.37, -230.34, 6.58)

#cheat The Biggest Circle Ramp
//ID: 20079
//Score: 68
//Author: jocsonwar13
//Category: Location Mods
//Description: The Biggest Circle Ramp In roof of a stadium.please see image
//
//EDITED BY: psphacker108 on 21/06/08 17:32:45
//Image: http://i31.tinypic.com/15iljr.gif
//Time: 21/06/2008 09:45:08
//Working: Yes
moveto(-1264.08, 1330.93, 82.59);  object(0x1CA6, 235, 0, 269);
move(0.00, 0.00, -0.70);  object(0x1D17, 235, 0, 269);
move(-5.03, -0.13, 4.30);  object(0x1C8E, 235, 0, 269);
move(-3.50, -0.09, 2.40);  object(0x1C8E, 235, 0, 269);
move(-3.42, -0.08, 2.40);  object(0x1C8E, 235, 0, 269);
move(-3.42, -0.09, 2.40);  object(0x1C8E, 235, 0, 269);
move(-3.43, -0.09, 2.40);  object(0x1C8E, 235, 0, 269);
move(-3.89, -0.10, 1.20);  object(0x1C8E, 270, 0, 269);
move(-4.18, -0.10, 0.00);  object(0x1C8E, 270, 0, 269);
move(-3.90, -0.11, 1.10);  object(0x1C8E, 240, 0, 269);
move(-3.44, -0.09, 2.20);  object(0x1C8E, 235, 0, 269);
move(-3.38, -0.08, 2.60);  object(0x1C8E, 230, 0, 269);
move(-3.07, -0.08, 2.80);  object(0x1C8E, 225, 0, 269);
move(-2.84, -0.07, 3.10);  object(0x1C8E, 220, 0, 269);
move(-2.63, -0.07, 3.40);  object(0x1C8E, 215, 0, 269);
move(-2.32, -0.06, 3.60);  object(0x1C8E, 210, 0, 269);
move(-1.96, 0.01, 3.80);  object(0x1C8E, 205, 0, 269);
move(-1.59, -0.02, 3.80);  object(0x1C8E, 200, 0, 269);
move(-1.27, -0.02, 4.10);  object(0x1C8E, 195, 0, 269);
move(-0.93, -0.01, 4.10);  object(0x1C8E, 190, 0, 269);
move(-0.55, -0.01, 4.20);  object(0x1C8E, 185, 0, 269);
move(-0.20, -0.00, 4.20);  object(0x1C8E, 180, 0, 269);
move(0.18, 0.00, 4.30);  object(0x1C8E, 175, 0, 269);
move(0.55, 0.01, 4.20);  object(0x1C8E, 170, 0, 269);
move(0.91, 0.01, 4.10);  object(0x1C8E, 165, 0, 269);
move(1.29, 0.02, 4.10);  object(0x1C8E, 160, 0, 269);
move(1.61, 0.02, 3.90);  object(0x1C8E, 155, 0, 269);
move(1.92, 0.03, 3.70);  object(0x1C8E, 150, 0, 269);
move(2.30, 0.03, 3.60);  object(0x1C8E, 145, 0, 269);
move(2.60, 0.04, 3.40);  object(0x1C8E, 140, 0, 269);
move(2.93, 0.04, 3.20);  object(0x1C8E, 135, 0, 269);
move(3.14, 0.04, 2.90);  object(0x1C8E, 130, 0, 269);
move(3.31, 0.04, 2.60);  object(0x1C8E, 125, 0, 269);
move(3.30, 0.04, 2.10);  object(0x1C8E, 120, 0, 269);
move(3.84, 0.05, 2.00);  object(0x1C8E, 115, 0, 269);
move(3.77, 0.05, 1.60);  object(0x1C8E, 110, 0, 269);
move(4.13, 0.06, 1.30);  object(0x1C8E, 105, 0, 269);
move(4.05, 0.05, 0.90);  object(0x1C8E, 100, 0, 269);
move(4.09, 0.06, 0.50);  object(0x1C8E, 95, 0, 269);
move(4.26, 0.06, 0.20);  object(0x1C8E, 90, 0, 269);
move(4.16, 0.06, -0.20);  object(0x1C8E, 85, 0, 269);
move(4.06, 0.05, -0.50);  object(0x1C8E, 80, 0, 269);
move(4.18, 0.06, -0.90);  object(0x1C8E, 75, 0, 269);
move(3.87, 0.05, -1.20);  object(0x1C8E, 70, 0, 269);
move(3.90, 0.05, -1.60);  object(0x1C8E, 65, 0, 269);
move(3.38, 0.05, -1.80);  object(0x1C8E, 60, 0, 269);
move(3.45, 0.05, -2.20);  object(0x1C8E, 55, 0, 269);
move(3.43, 0.05, -2.60);  object(0x1C8E, 50, 0, 269);
move(3.19, 0.04, -2.90);  object(0x1C8E, 45, 0, 269);
move(2.74, 0.04, -3.00);  object(0x1C8E, 40, 0, 269);
move(2.52, 0.03, -3.20);  object(0x1C8E, 35, 0, 269);
move(2.17, 0.03, -3.40);  object(0x1C8E, 30, 0, 269);
move(1.97, 0.03, -3.70);  object(0x1C8E, 25, 0, 269);
move(1.60, 0.02, -3.80);  object(0x1C8E, 20, 0, 269);
move(1.32, 0.02, -4.10);  object(0x1C8E, 15, 0, 269);
move(0.95, 0.01, -4.10);  object(0x1C8E, 10, 0, 269);
move(0.57, 0.01, -4.30);  object(0x1C8E, 5, 0, 269);
move(0.21, 0.00, -4.20);  object(0x1C8E, 0, 0, 269);
move(-0.18, -0.00, -4.30);  object(0x1C8E, 355, 0, 269);
move(-0.51, -0.01, -4.10);  object(0x1C8E, 350, 0, 269);
move(-0.91, -0.01, -4.20);  object(0x1C8E, 345, 0, 269);
move(-1.24, -0.02, -4.00);  object(0x1C8E, 340, 0, 269);
move(-1.62, -0.02, -4.00);  object(0x1C8E, 335, 0, 269);
move(-1.98, -0.03, -3.80);  object(0x1C8E, 330, 0, 269);
move(-2.28, -0.03, -3.60);  object(0x1C8E, 325, 0, 269);
move(-2.54, -0.03, -3.40);  object(0x1C8E, 320, 0, 269);
move(-2.85, -0.04, -3.10);  object(0x1C8E, 315, 0, 269);
move(-3.10, -0.04, -2.90);  object(0x1C8E, 310, 0, 269);
move(-3.23, -0.05, -2.50);  object(0x1C8E, 305, 0, 269);
move(-3.50, -0.05, -2.20);  object(0x1C8E, 300, 0, 269);
move(-3.60, -0.05, -1.90);  object(0x1C8E, 295, 0, 269);
move(-3.94, -0.05, -1.60);  object(0x1C8E, 290, 0, 269);
move(-4.08, -0.05, -1.30);  object(0x1C8E, 285, 0, 269);
move(-4.06, -0.10, -0.90);  object(0x1C8E, 280, 0, 269);
move(-4.23, -0.10, -0.60);  object(0x1C8E, 275, 0, 269);
move(-4.29, -0.11, -0.20);  object(0x1C8E, 270, 0, 269);
move(-1.69, -0.04, 1.00);  object(0x1C8E, 240, 0, 269);
teleport(-1266.33, 1331.54, 84.69)

#cheat Red car neons
R = 255;
G = 0;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Green car neons
R = 0;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Blue car neons
R = 0;
G = 0;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat White car neons
R = 255;
G = 255;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Purple car neons
R = 80;
G = 0;
B = 80;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Turquoise car neons
R = 0;
G = 255;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Yellow car neons
R = 255;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Orange car neons
R = 255;
G = 80;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Lime Green car neons
R = 80;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Pink car neons
R = 255;
G = 0;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Hot Pink car neons
R = 255;
G = 0;
B = 80;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Sky Blue car neons
R = 0;
G = 175;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Red bike neons
R = 255;
G = 0;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Green bike neons
R = 0;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Blue bike neons
R = 0;
G = 0;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat White bike neons
R = 255;
G = 255;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();


#cheat Purple bike neons
R = 80;
G = 0;
B = 80;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Turquoise bike neons
R = 0;
G = 255;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Yellow bike neons
R = 255;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Orange bike neons
R = 255;
G = 80;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Lime Green bike neons
R = 80;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Pink bike neons
R = 255;
G = 0;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Hot Pink bike neons
R = 255;
G = 0;
B = 80;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Sky Blue bike neons
R = 0;
G = 175;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Red Helicopter neons
R = 255;
G = 0;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x09730070+4*neon, R, G, B);}
off();

#cheat Green Helicopter neons
R = 0;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x09730070+4*neon, R, G, B);}
off();

#cheat Blue Helicopter neons
R = 0;
G = 0;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x09730070+4*neon, R, G, B);}
off();

#cheat White Helicopter neons
R = 255;
G = 255;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x09730070+4*neon, R, G, B);}
off();

#cheat Purple Helicopter neons
R = 80;
G = 0;
B = 80;
for(neon=0;neon<16;neon++)
{setchar(0x09730070+4*neon, R, G, B);}
off();

#cheat Turquoise Helicopter neons
R = 0;
G = 255;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x09730070+4*neon, R, G, B);}
off();

#cheat Yellow Helicopter neons
R = 255;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x09730070+4*neon, R, G, B);}
off();

#cheat Orange Helicopter neons
R = 255;
G = 80;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x09730070+4*neon, R, G, B);}
off();

#cheat Lime Green Helicopter neons
R = 80;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x09730070+4*neon, R, G, B);}
off();

#cheat Pink Helicopter neons
R = 255;
G = 0;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x09730070+4*neon, R, G, B);}
off();

#cheat Hot Pink Helicopter neons
R = 255;
G = 0;
B = 80;
for(neon=0;neon<16;neon++)
{setchar(0x09730070+4*neon, R, G, B);}
off();

#cheat Sky Blue Helicopter neons
R = 0;
G = 175;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x09730070+4*neon, R, G, B);}
off();

#cheat Red ped neons?!?
R = 255;
G = 0;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x09727690+4*neon, R, G, B);}
off();

#cheat Green ped neons?!?
R = 0;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x09727690+4*neon, R, G, B);}
off();

#cheat Blue ped neons?!?
R = 0;
G = 0;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x09727690+4*neon, R, G, B);}
off();

#cheat White ped neons?!?
R = 255;
G = 255;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x09727690+4*neon, R, G, B);}
off();


#cheat Purple ped neons?!?
R = 80;
G = 0;
B = 80;
for(neon=0;neon<16;neon++)
{setchar(0x09727690+4*neon, R, G, B);}
off();

#cheat Turquoise ped neons?!?
R = 0;
G = 255;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x09727690+4*neon, R, G, B);}
off();

#cheat Yellow ped neons?!?
R = 255;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x09727690+4*neon, R, G, B);}
off();

#cheat Orange ped neons?!?
R = 255;
G = 80;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x09727690+4*neon, R, G, B);}
off();

#cheat Lime Green ped neons?!?
R = 80;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x09727690+4*neon, R, G, B);}
off();

#cheat Pink ped neons?!?
R = 255;
G = 0;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x09727690+4*neon, R, G, B);}
off();

#cheat Hot Pink ped neons?!?
R = 255;
G = 0;
B = 80;
for(neon=0;neon<16;neon++)
{setchar(0x09727690+4*neon, R, G, B);}
off();

#cheat Sky Blue ped neons?!?
R = 0;
G = 175;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x09727690+4*neon, R, G, B);}
off();

#cheat Vehicles Health Bar Mod V2
//Thanks To Waterbottle for helping me getting the armor back
//Bar Color found by vettefan88

CarHP = getfloat(pcar+0x027C);
static armor;
static wasin;
static fInt;

if(!fInt)
{
armor = getfloat(pplayer + 0x4E8);  
fInt = 1;
}

if (pcar){
wasin = true;

//Show Health In Bar
setfloat(pplayer+0x4E8,   ((CarHP-250)/750)*100);

//change color
for(neon=0;neon<15;neon++){
setchar(0x96E1ED0+4*neon,   40,  240,  40);
}
}
else
{  if(wasin)
{
wasin = false;

setfloat(pplayer + 0x4E8,  armor);

//change color
for(neon=0;neon<15;neon++){
setchar(0x96E1ED0+4*neon,   106,  255,  255);
}
}
armor = getfloat(pplayer + 0x4E8);
} 

#cheat Infinate adrenaline
//BY PSPHACKER108
setchar(0x08BB3B5B,   0x8f);

#cheat Turbo Walker
//BY PSPHACKER108
setchar(0x08BB3B5B,  0x4f);

#cheat Infinate adrenaline/ walking code off
//BY PSPHACKER108
setchar(0x08BB3B5B,  0x3f);

#cheat crash fall chute
moveto(450.65,-224.86,360.70);  object(0x1CB2,270,270,357);
move(-11.29,-0.52,0.00);  object(0x1CB2,270,270,357);
move(-2.10,-0.10,0.00);  object(0x1CB2,270,270,357);
move(-9.85,-3.68,0.00);  object(0x1CB2,270,180,269);
move(-0.18,6.50,0.00);  object(0x1CB2,270,180,269);
move(-2.47,-3.27,0.00);  object(0x1CB2,270,180,184);
move(0.00,0.00,-13.70);  object(0x1CB2,270,180,184);
move(0.00,0.00,-1.70);  object(0x1CB2,270,180,184);
move(0.00,0.00,1.70);  object(0x1CB2,270,180,184);
move(-0.37,0.04,-7.80);  object(0x1CB2,270,180,188);
move(0.35,-0.04,0.00);  object(0x1CB2,270,180,184);
move(0.00,0.00,-4.70);  object(0x1CB2,270,180,184);
move(0.00,0.00,-4.50);  object(0x1CB2,270,180,184);
move(0.00,0.00,-13.80);  object(0x1CB2,270,180,184);
move(0.00,0.00,-13.80);  object(0x1CB2,270,180,184);
move(-0.00,0.00,-13.90);  object(0x1CB2,270,180,184);
move(0.00,0.00,-13.80);  object(0x1CB2,270,180,184);
move(0.00,0.00,-12.80);  object(0x1CB2,270,180,184);
move(0.00,0.00,-13.30);  object(0x1CB2,270,180,184);
move(0.00,0.00,-13.60);  object(0x1CB2,270,180,184);
move(0.00,0.00,-14.00);  object(0x1CB2,270,180,184);
move(0.00,0.00,-14.00);  object(0x1CB2,270,180,184);
move(0.00,0.00,-13.00);  object(0x1CB2,270,180,184);
move(0.00,0.00,-12.90);  object(0x1CB2,270,180,184);
move(0.00,0.00,-13.20);  object(0x1CB2,270,180,184);
move(0.00,0.00,-13.60);  object(0x1CB2,270,180,184);
move(-0.11,0.01,-13.80);  object(0x1CB2,270,180,185);
move(0.00,0.00,-13.50);  object(0x1CB2,270,180,185);
move(0.00,0.00,-13.60);  object(0x1CB2,270,180,185);
move(0.00,0.00,-12.90);  object(0x1CB2,270,180,185);
move(0.00,0.00,-12.90);  object(0x1CB2,270,180,185);
move(0.00,0.00,-13.80);  object(0x1CB2,270,180,185);
move(-0.28,-0.03,-26.60);  object(0x1CB2,270,180,185);
move(0.00,0.00,-13.50);  object(0x1CB2,270,180,185);
move(0.00,0.00,-15.10);  object(0x1CB2,270,180,185);
move(0.00,0.00,-9.20);  object(0x1CB2,270,180,185);
move(2.93,3.49,337.81);  object(0x1CB2,270,180,273);
move(0.00,0.00,-2.70);  object(0x1CB2,270,180,273);
move(0.00,0.00,-10.70);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.30);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.90);  object(0x1CB2,270,180,273);
move(0.00,0.00,-14.20);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.90);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.60);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.70);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.00);  object(0x1CB2,270,180,273);
move(0.00,0.00,-12.80);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.20);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.60);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.20);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.90);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.90);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.10);  object(0x1CB2,270,180,273);
move(0.00,0.00,-12.90);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.10);  object(0x1CB2,270,180,273);
move(0.00,0.00,-12.30);  object(0x1CB2,270,180,273);
move(0.00,0.00,-12.50);  object(0x1CB2,270,180,273);
move(0.00,0.00,-12.60);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.20);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.50);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.50);  object(0x1CB2,270,180,273);
move(0.00,0.00,-13.70);  object(0x1CB2,270,180,273);
move(0.00,0.00,-5.40);  object(0x1CB2,270,180,273);
move(0.00,0.00,-12.70);  object(0x1CB2,270,180,273);
move(-2.88,-3.52,13.30);  object(0x1CB2,270,180,5);
moveto(424.00,-234.45,-8.81);  object(0x1CA4,0,0,104);
move(0.40,8.45,68.80);  object(0x1CB2,270,0,4);
move(5.54,0.32,-50.27);  object(0x1CB2,270,0,4);
move(-0.00,-0.02,13.70);  object(0x1CB2,270,0,4);
move(0.00,0.00,13.80);  object(0x1CB2,270,0,4);
move(0.00,0.00,13.40);  object(0x1CB2,270,0,4);
move(0.00,0.00,13.40);  object(0x1CB2,270,0,4);
move(0.00,0.00,13.60);  object(0x1CB2,270,0,4);
move(0.00,0.07,14.40);  object(0x1CB2,270,0,4);
move(0.00,0.00,13.50);  object(0x1CB2,270,0,4);
move(0.00,0.00,12.30);  object(0x1CB2,270,0,4);
move(0.00,0.00,12.80);  object(0x1CB2,270,0,4);
move(0.00,0.00,14.40);  object(0x1CB2,270,0,4);
move(0.00,0.00,13.30);  object(0x1CB2,270,0,4);
move(0.00,0.00,13.80);  object(0x1CB2,270,0,4);
move(0.00,0.00,12.70);  object(0x1CB2,270,0,4);
move(0.00,0.00,11.10);  object(0x1CB2,270,0,4);
move(0.00,0.00,13.30);  object(0x1CB2,270,0,4);
move(0.00,0.00,11.20);  object(0x1CB2,270,0,4);
move(0.00,0.00,13.80);  object(0x1CB2,270,0,4);
move(0.01,0.00,14.30);  object(0x1CB2,270,0,4);
move(0.00,0.00,13.70);  object(0x1CB2,270,0,4);
move(0.00,0.00,13.80);  object(0x1CB2,270,0,4);
move(0.00,0.00,12.20);  object(0x1CB2,270,0,4);
move(0.00,0.00,10.60);  object(0x1CB2,270,0,4);
move(0.00,0.00,10.10);  object(0x1CB2,270,0,4);
move(0.00,0.00,8.90);  object(0x1CB2,270,0,4);
move(0.00,0.00,12.30);  object(0x1CB2,270,0,4);
move(-5.34,-0.44,-14.50);  object(0x1CB2,270,0,4);
moveto(436.38,-227.83,343.64);  object(0x1CB2,0,0,359);
move(-6.31,2.14,-1.50);  object(0x1CB2,270,0,6);
move(0.00,0.00,11.30);  object(0x1CB2,270,0,6);
move(-0.40,0.04,-6.50);  object(0x1CEA,270,0,6);
move(-4.08,0.39,0.00);  object(0x1CEA,270,0,6);
move(1.89,-0.18,0.00);  object(0x1CEA,270,0,6);
move(-0.28,-2.92,0.00);  object(0x1CEA,270,0,6);
move(-1.69,0.16,0.00);  object(0x1CEA,270,0,6);
move(3.88,-0.38,0.00);  object(0x1CEA,270,0,6);
move(0.16,1.61,0.00);  object(0x1CEA,270,0,6);
move(-2.29,0.22,0.00);  object(0x1CEA,270,0,6);
move(-1.69,0.16,0.00);  object(0x1CEA,270,0,6);
move(-0.05,3.68,-6.60);  object(0x1CEB,270,0,6);
move(1.49,-0.14,0.00);  object(0x1CEB,270,0,6);
move(2.09,-0.20,0.00);  object(0x1CEB,270,0,6);
move(-0.13,-1.38,0.00);  object(0x1CEB,270,0,6);
move(-2.09,0.20,0.00);  object(0x1CEB,270,0,6);
move(-1.39,0.13,0.00);  object(0x1CEB,270,0,6);
move(2.39,-0.23,0.00);  object(0x1CEB,270,0,6);
move(0.12,1.24,0.00);  object(0x1CEB,270,0,6);
move(-0.24,-2.53,0.00);  object(0x1CEB,270,0,6);
move(1.03,-0.10,0.00);  object(0x1CEB,270,0,4);
move(-2.10,0.13,0.00);  object(0x1CEB,270,0,4);
move(-1.20,0.07,0.00);  object(0x1CEB,270,0,4);
move(0.12,2.44,-13.70);  object(0x01C2,95,0,359);
move(1.10,0.02,0.00);  object(0x01C2,95,0,359);
move(1.10,0.02,0.00);  object(0x01C2,95,0,359);
move(1.30,0.02,0.00);  object(0x01C2,95,0,359);
move(0.02,-1.31,0.00);  object(0x01C2,95,0,359);
move(-1.30,-0.02,0.00);  object(0x01C2,95,0,359);
move(-1.00,-0.01,0.00);  object(0x01C2,95,0,359);
move(-1.00,-0.01,0.00);  object(0x01C2,95,0,359);
move(0.01,-0.90,0.00);  object(0x01C2,95,0,359);
move(1.00,0.01,0.00);  object(0x01C2,95,0,359);
move(1.00,0.01,0.00);  object(0x01C2,95,0,359);
move(1.20,0.02,0.00);  object(0x01C2,95,0,359);
move(0.01,-0.80,0.00);  object(0x01C2,95,0,359);
move(-1.30,-0.02,0.00);  object(0x01c2,95,0,359);
move(-1.00,-0.01,0.00);  object(0x01C2,95,0,359);
move(-0.90,-0.01,0.00);  object(0x01C2,95,0,359);
moveto(429.10,-223.18,317.24);  object(0x029F,165,0,8);
move(-1.88,0.26,0.00);  object(0x029F,165,0,8);
move(-1.49,0.20,0.00);  object(0x029F,165,0,8);
move(0.09,-2.44,0.00);  object(0x029F,165,0,4);
move(2.59,-0.20,0.00);  object(0x029F,165,0,4);
move(-1.56,-1.88,0.00);  object(0x029F,165,0,1);
move(-1.00,2.61,-19.60);  object(0x029F,0,0,2);
move(1.50,-0.06,0.00);  object(0x029F,0,0,2);
move(1.90,-0.08,0.00);  object(0x029F,0,0,2);
move(-0.26,-2.38,0.00);  object(0x029F,0,0,355);
move(-1.79,-0.16,0.00);  object(0x029F,0,0,355);
move(-1.39,-0.12,0.00);  object(0x029F,0,0,355);
moveto(429.11,-223.26,282.92);  object(0x1CE0,180,0,4);
move(-1.80,0.13,0.00);  object(0x1CE0,180,0,4);
move(-1.72,0.04,0.00);  object(0x1CE0,180,0,7);
move(-0.08,-1.83,0.00);  object(0x1CE0,180,0,4);
move(1.70,-0.11,0.00);  object(0x1CE0,180,0,4);
move(1.90,-0.12,0.00);  object(0x1CE0,180,0,4);
move(-0.12,-1.86,0.00);  object(0x1CE0,180,0,4);
move(-1.90,0.12,0.00);  object(0x1CE0,180,0,4);
move(-1.60,0.10,0.00);  object(0x1CE0,180,0,4);
moveto(425.93,-224.39,274.10);  object(0x029F,0,0,0);
move(2.80,0.02,0.00);  object(0x029F,0,0,0);
move(0.01,-1.69,0.00);  object(0x029F,0,0,0);
move(-2.60,-0.02,0.00);  object(0x029F,0,0,0);
move(0.02,-1.93,0.00);  object(0x029F,0,0,0);
move(2.40,0.02,0.00);  object(0x029F,0,0,0);
move(-0.04,4.59,-7.70);  object(0x029F,0,0,0);
move(-1.20,-0.01,0.00);  object(0x029F,0,0,0);
move(-1.40,-0.01,0.00);  object(0x029F,0,0,0);
move(0.01,-1.19,0.00);  object(0x029F,0,0,0);
move(1.40,0.01,0.00);  object(0x029F,0,0,0);
move(1.10,0.01,0.00);  object(0x029F,0,0,0);
move(0.01,-0.90,0.00);  object(0x029F,0,0,0);
move(-1.00,-0.01,0.00);  object(0x029F,0,0,0);
move(-1.40,-0.01,0.00);  object(0x029F,0,0,0);
move(0.01,-0.97,0.00);  object(0x029F,0,0,0);
move(0.01,-0.91,0.00);  object(0x029F,0,0,0);
move(1.00,0.01,0.00);  object(0x029F,0,0,0);
move(-0.01,1.13,0.00);  object(0x029F,0,0,0);
move(1.30,0.01,0.00);  object(0x029F,0,0,0);
move(0.01,-1.00,0.00);  object(0x029F,0,0,0);
move(-3.03,4.42,-8.30);  object(0x029F,0,0,0);
move(1.00,0.01,0.00);  object(0x029F,0,0,0);
move(0.70,0.01,0.00);  object(0x029F,0,0,0);
move(0.90,0.01,0.00);  object(0x029F,0,0,0);
move(0.90,0.01,0.00);  object(0x029F,0,0,0);
move(0.01,-0.93,0.00);  object(0x029F,0,0,0);
move(-1.00,-0.01,0.00);  object(0x029F,0,0,0);
move(-1.60,-0.01,0.00);  object(0x029F,0,0,0);
move(-0.80,-0.01,0.00);  object(0x029F,0,0,0);
move(0.01,-1.35,0.00);  object(0x029F,0,0,0);
move(0.70,0.01,0.00);  object(0x029F,0,0,0);
move(0.90,0.01,0.00);  object(0x029F,0,0,0);
move(-0.01,1.20,0.00);  object(0x029F,0,0,0);
move(0.81,-1.38,0.00);  object(0x029F,0,0,0);
move(0.70,0.01,0.00);  object(0x029F,0,0,0);
move(0.01,-0.93,0.00);  object(0x029F,0,0,0);
move(-0.80,-0.01,0.00);  object(0x029F,0,0,0);
move(-0.60,-0.00,0.00);  object(0x029F,0,0,0);
move(-0.90,-0.01,0.00);  object(0x029F,0,0,0);
move(-0.70,-0.01,0.00);  object(0x029F,0,0,0);
move(0.01,-1.27,0.00);  object(0x029F,0,0,0);
move(0.50,0.00,0.00);  object(0x029F,0,0,0);
move(0.80,0.01,0.00);  object(0x029F,0,0,0);
move(0.70,0.01,0.00);  object(0x029F,0,0,0);
move(0.80,0.01,0.00);  object(0x029F,0,0,0);
move(0.01,-1.06,0.00);  object(0x029F,0,0,0);
move(-1.00,-0.01,0.00);  object(0x029F,0,0,0);
move(-0.40,-0.00,0.00);  object(0x029F,0,0,0);
move(-0.80,-0.01,0.00);  object(0x029F,0,0,0);
move(-0.60,-0.00,0.00);  object(0x029F,0,0,0);
moveto(427.57,-223.98,240.64);  object(0x029F,270,0,3);
move(-1.30,0.06,0.00);  object(0x029F,270,0,3);
move(2.80,-0.13,0.00);  object(0x029F,270,0,3);
move(-0.13,-2.82,0.00);  object(0x029F,270,0,3);
move(-3.10,0.14,0.00);  object(0x029F,270,0,3);
move(1.40,-0.06,0.00);  object(0x029F,270,0,3);
move(-0.50,0.02,0.00);  object(0x029F,270,0,3);
move(0.04,0.90,0.00);  object(0x029F,270,0,3);
move(0.80,-0.04,0.00);  object(0x029F,270,0,3);
move(0.98,1.84,-18.10);  object(0x029F,270,0,3);
move(-2.60,0.12,0.00);  object(0x029F,270,0,3);
move(1.60,-0.07,0.00);  object(0x029F,270,0,3);
move(-1.40,0.06,0.00);  object(0x029F,270,0,3);
move(-0.14,-3.00,0.00);  object(0x029F,270,0,3);
move(2.30,-0.10,0.00);  object(0x029F,270,0,3);
move(-1.30,0.06,0.00);  object(0x029F,270,0,3);
move(1.20,-0.04,0.00);  object(0x029F,270,0,4);
move(0.60,-0.04,0.00);  object(0x029F,270,0,4);
move(-1.50,0.11,0.00);  object(0x029F,270,0,4);
moveto(427.20,-226.09,211.33);  object(0x1CB6,185,0,6);
move(0.00,0.00,-6.40);  object(0x1CB6,185,0,6);
move(0.00,0.00,-6.60);  object(0x1CB6,185,0,6);
move(0.00,0.00,-6.80);  object(0x1CB6,185,0,6);
move(0.00,0.00,-6.90);  object(0x1CB6,185,0,6);
move(0.00,0.00,-6.60);  object(0x1CB6,185,0,6);
move(-1.29,0.14,-4.80);  object(0x1CB6,185,0,6);
move(2.29,-0.26,0.00);  object(0x1CB6,185,0,6);
move(-0.99,0.11,0.00);  object(0x1CB6,185,0,6);
move(0.00,0.00,-7.80);  object(0x1CB6,185,0,6);
move(0.00,0.00,-7.10);  object(0x1CB6,185,0,6);
move(0.00,0.00,-8.20);  object(0x1CB9,185,0,6);
move(0.00,0.00,-6.30);  object(0x1CB9,185,0,6);
move(0.00,0.00,-5.20);  object(0x1CB9,185,0,6);
move(0.00,0.00,-4.70);  object(0x1CB9,185,0,6);
move(0.00,0.00,-4.50);  object(0x1CB9,185,0,6);
move(0.00,0.00,-4.60);  object(0x1CB9,185,0,6);
move(0.00,0.00,-3.70);  object(0x1CCF,185,0,6);
move(0.00,0.00,-3.90);  object(0x1CCF,185,0,6);
move(0.00,0.00,-3.20);  object(0x1CCF,185,0,6);
move(0.00,0.00,-3.00);  object(0x1CCF,185,0,6);
move(0.00,0.00,-2.20);  object(0x1CCF,185,0,6);
move(0.00,0.00,-2.60);  object(0x1CCF,185,0,6);
move(0.00,0.00,-3.20);  object(0x029F,110,0,6);
move(0.00,0.00,-4.50);  object(0x029F,110,0,6);
move(0.00,0.00,-5.20);  object(0x029F,110,0,6);
move(0.00,0.00,-4.70);  object(0x029F,110,0,6);
move(0.00,0.00,-4.20);  object(0x029F,110,0,6);
move(0.00,0.00,-5.10);  object(0x029F,110,0,6);
move(0.00,0.00,-5.40);  object(0x029F,110,0,6);
move(0.00,0.00,-5.90);  object(0x029F,110,0,6);
move(0.00,0.00,-4.30);  object(0x029F,110,0,6);
move(0.00,0.00,6.70);  object(0x029F,110,0,6);
move(0.00,0.00,-11.30);  object(0x029F,110,0,6);
move(0.00,0.00,-3.70);  object(0x029F,110,0,6);
move(0.00,0.00,-3.50);  object(0x029F,110,0,6);
move(0.00,0.00,-3.70);  object(0x01C2,10,0,6);
move(0.00,0.00,-1.60);  object(0x01C2,10,0,6);
move(0.00,0.00,-2.10);  object(0x01C2,10,0,6);
move(0.00,0.00,-1.40);  object(0x01C2,10,0,6);
move(0.00,0.00,-1.00);  object(0x01C2,10,0,6);
move(0.00,0.00,3.50);  object(0x01C2,10,0,6);
move(0.00,0.00,1.50);  object(0x01C2,10,0,6);
move(0.00,0.00,-6.60);  object(0x01C2,10,0,6);
move(0.00,0.00,-2.30);  object(0x01C1,10,0,6);
move(0.00,0.00,-3.70);  object(0x01C1,10,0,6);
move(0.00,0.00,-2.10);  object(0x01C1,10,0,6);
move(0.00,0.00,3.70);  object(0x01C1,10,0,6);
move(0.00,0.00,-2.40);  object(0x01C1,10,0,6);
move(0.00,0.00,-2.70);  object(0x01C1,10,0,6);
move(0.00,0.00,-3.40);  object(0x01C1,10,0,6);
move(0.00,0.00,-3.60);  object(0x01C1,10,0,6);
move(0.00,0.00,-4.40);  object(0x01C1,10,0,6);
move(0.00,0.00,-4.70);  object(0x01C1,10,0,6);
move(-0.03,0.69,-4.80);  object(0x01C1,10,0,5);
move(4.15,-6.92,-4.50);  object(0x01C1,10,0,113);
moveto(427.18,-229.22,350.28);  object(0x1CB2,270,0,87);
move(-0.41,6.89,0.00);  object(0x1CB2,270,0,87);
move(0.41,-6.79,-14.20);  object(0x1CB2,270,0,87);
move(0.00,0.00,-8.80);  object(0x1CB2,270,0,87);
move(0.00,0.00,-11.30);  object(0x1CB2,270,0,87);
move(0.00,0.00,-8.30);  object(0x1CB2,270,0,87);
move(0.00,0.00,-7.20);  object(0x1CB2,270,0,87);
move(0.00,0.00,-13.70);  object(0x1CB2,270,0,87);
move(0.00,0.00,-13.60);  object(0x1CB2,270,0,87);
move(0.00,0.00,-13.00);  object(0x1CB2,270,0,87);
move(0.00,0.00,-14.40);  object(0x1CB2,270,0,87);
move(0.00,0.00,-13.20);  object(0x1CB2,270,0,87);
move(0.00,0.00,-12.10);  object(0x1CB2,270,0,87);
move(0.00,0.00,-14.40);  object(0x1CB2,270,0,87);
move(0.00,0.00,-12.60);  object(0x1CB2,270,0,87);
move(0.00,0.00,-13.90);  object(0x1CB2,270,0,87);
move(0.00,0.00,-13.80);  object(0x1CB2,270,0,87);
move(0.00,0.00,-13.10);  object(0x1CB2,270,0,87);
move(0.00,0.00,-13.90);  object(0x1CB2,270,0,87);
move(0.00,0.00,-13.50);  object(0x1CB2,270,0,87);
move(0.00,0.00,-13.60);  object(0x1CB2,270,0,87);
move(0.00,0.00,-13.60);  object(0x1CB2,270,0,87);
move(0.00,0.00,-14.20);  object(0x1CB2,270,0,87);
move(0.00,0.00,-14.10);  object(0x1CB2,270,0,87);
move(0.00,0.00,-14.00);  object(0x1CB2,270,0,87);
move(0.00,0.00,-13.90);  object(0x1CB2,270,0,87);
move(0.00,0.00,-13.60);  object(0x1CB2,270,0,87);
move(0.00,0.00,-8.70);  object(0x1CB2,270,0,87);
move(0.58,0.34,-14.30);  object(0x1CB2,270,270,87);
teleport(430.43, -225.97, 365.84)

#cheat cars you don't see everyday
pspawn = 0x08E81290;
setint(pspawn, 262);
setfloat(pspawn + 0x4, 244.63, -183.85, 29.08, 90);
pspawn += 0x30;
setint(pspawn, 172);
setfloat(pspawn + 0x4, 225.27, -230.23, 11.41, 60);
pspawn += 0x30;
setint(pspawn, 175);
setfloat(pspawn + 0x4, 346.95, -281.08, 10.88, 180);
pspawn += 0x30;
setint(pspawn, 187);
setfloat(pspawn + 0x4, 454.94, 13.13, 10.67, 90);
pspawn += 0x30;
setint(pspawn, 212);
setfloat(pspawn + 0x4, 370.25, 705.49, 11.32, 0);
pspawn += 0x30;
setint(pspawn, 268);
setfloat(pspawn + 0x4, 520.97, 502.66, 10.99, 0);
pspawn += 0x30;

#cheat Hydraulics
setshort(0x08e90bd8, 1, 'P', 'r', 'e', 's', 's', ' ', 'r', 'i', 'g', 'h', 't', ' ', 't', 'o', ' ', 't', 'i', 'l', 't', ' ', 't', 'h', 'e', ' ', 'c', 'a', 'r', ' ', 'r', 'i', 'g', 'h', 't', ',', ' ', 'l', 'e', 'f', 't', ' ', 't', 'o', ' ', 't', 'i', 'l', 't', ' ', 'i', 't', ' ', 'l', 'e', 'f', 't', ',', ' ', 'u', 'p', ' ', 't', 'o', ' ', 't', 'i', 'l', 't', ' ', 'i', 't', ' ', 'f', 'o', 'r', 'w', 'a', 'r', 'd', 's', ',', ' ', 'd', 'o', 'w', 'n', ' ', 't', 'o', ' ', 't', 'i', 'l', 't', ' ', 'i', 't', ' ', 'b', 'a', 'c', 'k', 'w', 'a', 'r', 'd', 's', ',', ' ', 'H', 'o', 'l', 'd', ' ', 'R', ' ', 'a', 'n', 'd', ' ', 't', 'a', 'p', ' ', 'c', 'i', 'r', 'c', 'l', 'e', ' ', 't', 'o', ' ', 'b', 'o', 'u', 'n', 'c', 'e', '.', ' ', 'C', 'i', 'r', 'c', 'l', 'e', ' ', 'r', 'e', 's', 'e', 't', 's', ' ', 'c', 'a', 'r', '.', 0);
if(buttons & CTRL_LEFT)
{
setchar(pcar + 0x000003B8, 0);
setchar(pcar + 0x000003B9, 0);
setchar(pcar + 0x000003B7, 2);
setchar(pcar + 0x000003B6, 2);
}
if(buttons & CTRL_RIGHT)
{
setchar(pcar + 0x000003B8, 2);
setchar(pcar + 0x000003B9, 2);
setchar(pcar + 0x000003B7, 0);
setchar(pcar + 0x000003B6, 0);
}
if(buttons & CTRL_UP)
{
setchar(pcar + 0x000003B8, 2);
setchar(pcar + 0x000003B6, 2);
setchar(pcar + 0x000003B7, 0);
setchar(pcar + 0x000003B9, 0);
}
if(buttons & CTRL_DOWN)
{
setchar(pcar + 0x000003B7, 2);
setchar(pcar + 0x000003B9, 2);
setchar(pcar + 0x000003B6, 0);
setchar(pcar + 0x000003B8, 0);
}
if (press & CTRL_RTRIGGER)
{
setchar(pcar + 0x000003B7, 2);
setchar(pcar + 0x000003B9, 2);
setchar(pcar + 0x000003B8, 2);
setchar(pcar + 0x000003B6, 2);
}
if(buttons & CTRL_CIRCLE)
{
setchar(pcar + 0x000003B6, 0);
setchar(pcar + 0x000003B7, 0);
setchar(pcar + 0x000003B9, 0);
setchar(pcar + 0x000003B8, 0);
}
#off
setchar(pcar + 0x000003B6, 0);
setchar(pcar + 0x000003B7, 0);
setchar(pcar + 0x000003B9, 0);
setchar(pcar + 0x000003B8, 0);

#cheat Pop Everything
if(press & CTRL_UP)
setchar(pcar + 0x000003BA, 2);
if(press & CTRL_DOWN)
setchar(pcar + 0x000003BB, 2);
if(press & CTRL_RIGHT)
setchar(pcar + 0x000003BD, 2);
if(press & CTRL_LEFT)
setchar(pcar + 0x000003BC, 2);
#off
setchar(pcar + 0x000003BC, 0);
setchar(pcar + 0x000003BD, 0);
setchar(pcar + 0x000003BB, 0);
setchar(pcar + 0x000003BA, 0);

#cheat Drifting Minigame
static score;
static getMoney;
static money;
static points;
if(!getMoney) {
money = getint(0x08bde55c);
getMoney = 1;
}
if(getchar(pcar+0x764) == 0x02 || getchar(pcar+0x768) == 0x02 || getchar(pcar+0x76C) == 0x02 ||

getchar(pcar+0x770) == 0x02) {
score += points;
points += 0.1;
}
else {
points = 5;
}
if(getint(pcar+0x150) && score > 100) {
score -= 100;
points = 5;
}
setint(0x08bde55c,  score);
if(points > 15) {
setchar(0x9569c90,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x80,  0x3f,  0x00,  0x00,

0x00,  0x00,  0xff,  0x20,  0x00);
setshort(0x08e90bd8, 1, 'Y', 'o', 'u', ' ', 'a', 'r', 'e', ' ', 'o', 'n', ' ', 'F', 'I', 'R', 'E', '!', 0);
}
else {
setchar(0x9569c90,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x80,  0x3f,  0x04,  0x00,  

0x00,  0x00,  0x80,  0x80,  0x80);
}
#off
setint(0x08bde55c,  money);
score = getMoney = money = 0;

#cheat Gas Modification
//Use Ocean Beach Gas station to refuel!
static start;
static gas;
if(pcar&&!start) {
if(!getchar(pcar+0x3d)) {
gas = (abs((getint(pplayer+0x68)+getint(pplayer))*getint(0x08bb3b40)) % (100-50)) + 50;
setchar(pcar+0x3d,  1);
}
else {
gas = getchar(pcar+0x3c);
}
start = 1;
}
setchar(pcar+0x3c,  gas);
if(!pcar) {
start = 0;
}
static timepassed;
static init;
if(!init)
{
  lasttime = getchar( 0x08bb3b41 );
  init = 1;
}
if( lasttime != getchar( 0x08bb3b41 ) )
{
  timepassed++;
  lasttime = getchar( 0x08bb3b41 );
}
if( timepassed == 6 )
{
 if(gas > 0) {
   gas -= 1;
 }
 timepassed = 0;
}
if(pcar&&gas) {
setshort(0x08e90bd8,  'G',  'a',  's',  ' ',  'l',  'e',  'f',  't',  ':',  ' ');
int = gas;
size = 0;
for( i = 1; i < int; i *= 10 ) size+=2;
for( i = 0; int > 0; i+=2 )
{
  setshort(0x08e90bea+size-i,   '0' + (int % 10));
  int = int(int/10);
}
setshort(0x08e90bea+size-i+0x6,  '%',  ' ',  0);
}
if(pcar&&!gas) {
setfloat(pcar+0x140,  getfloat(pcar+0x140)*0.91,  getfloat(pcar+0x144)*0.91);
setshort(0x08e90bd8,  1,  'Y',  'o',  'u',  ' ',  'a',  'r',  'e',  ' ',  'o',  'u',  't',  ' ',  'o',  'f',  ' ',  'g',  'a',  's',  '!',  0);  
}
if(getfloat(pcar+0x140) == 0 && getfloat(pcar+0x144) == 0 && getfloat(pcar+0x30) > 21.09 && getfloat(pcar+0x30) < 71.80 && getfloat(pcar+0x34) > -1091.87 && getfloat(pcar+0x34) < -1042.57) {
if(gas<100) {
price = (100 - gas) * 0.4;
setint(0x08bde55c,  getint(0x08bde55c) - price,  getint(0x08bde55c) - price);
gas = 100;
}
}

#cheat First Person View in Car v2
setchar(pplayer + 0x000008B4, 61);
setchar(pplayer+0x4C,   0x10,   0x20);
#off
setchar(pplayer+0x4C,   0x00,   0x00);
setchar(pplayer + 0x000008B4, 55);

#cheat Automatically Busted
setchar(pplayer + 0x000008B4, 65);

#cheat Voodoo Hydraulics
setfloat(0x9632540, 0);
setfloat(0x9632544, 0);
if (getshort(pcar+0x56)==239)
{
if (getfloat(pcar+0xD0)==1000)
{hyd = .1;}
if (getfloat(pcar+0xD0) == 500)
{hyd = -.1;}
if (buttons & CTRL_LEFT)
{setfloat(0x9632540, -.5);}
if (buttons & CTRL_RIGHT)
{setfloat(0x9632540, .5);}
if (buttons & CTRL_UP)
{setfloat(0x9632544, 1.5);}
if (buttons & CTRL_DOWN)
{setfloat(0x9632544, -1.5);}
if (press & CTRL_CIRCLE && getchar(pcar+0x136))
{setfloat(pcar + 0x00000148, hyd);}
if (press & CTRL_NOTE)
{
if (hyd == .1)
{setfloat(pcar+0xD0, 500);
setfloat(pcar+0x688, .6, .6, .6, .6);
setfloat(pcar+0x698, 1.05, 1.05, 1.05, 1.05);}

if (hyd == -.1)
{setfloat(pcar+0xD0, 1000);
setfloat(pcar+0x688, .46, .46, .46, .46);
setfloat(pcar+0x698, .81, .81, .81, .81);}
}
}

#cheat 2D wintergreen
setchar(pcar + 0x00000003, 62);
setchar(0x098F56A3, 127);

#cheat First Person View in Car
setchar(pplayer + 0x000008B4, 61);
#off
setchar(pplayer + 0x000008B4, 55);

#cheat Teleport into Mendez House Interior
teleport(16.78,  1150.80,  -193.79);

#cheat White Nite Stick Color
setchar(0x9AF2C50,  0xff,  0xff,  0xff);
setchar(0x9AF2C54,  0xff,  0xff,  0xff);
setchar(0x9AF2C58,  0xff,  0xff,  0xff);
setchar(0x9AF2C5C,  0xff,  0xff,  0xff);
setchar(0x9AF2C60,  0xff,  0xff,  0xff);
setchar(0x9AF2C64,  0xff,  0xff,  0xff);
setchar(0x9AF2C68,  0xff,  0xff,  0xff);
setchar(0x9AF2C6C,  0xff,  0xff,  0xff);
setchar(0x9AF2C70,  0xff,  0xff,  0xff);
setchar(0x9AF2C74,  0xff,  0xff,  0xff);
setchar(0x9AF2C78,  0xff,  0xff,  0xff);
setchar(0x9AF2C7C,  0xff,  0xff,  0xff);
setchar(0x9AF2C80,  0xff,  0xff,  0xff);
setchar(0x9AF2C84,  0xff,  0xff,  0xff);
setchar(0x9AF2C88,  0xff,  0xff,  0xff);
setchar(0x9AF2C8C,  0xff,  0xff,  0xff);

#cheat Nite Stick Color Blue
setchar(0x9AF2C50,   0x00,   0x00,   0xff);  
setchar(0x9AF2C54,   0x00,   0x00,   0xff);  
setchar(0x9AF2C58,   0x00,   0x00,   0xff);  
setchar(0x9AF2C5C,   0x00,   0x00,   0xff);  
setchar(0x9AF2C60,   0x00,   0x00,   0xff);  
setchar(0x9AF2C64,   0x00,   0x00,   0xff);  
setchar(0x9AF2C68,   0x00,   0x00,   0xff);  
setchar(0x9AF2C6C,   0x00,   0x00,   0xff);  
setchar(0x9AF2C70,   0x00,   0x00,   0xff);  
setchar(0x9AF2C74,   0x00,   0x00,   0xff);  
setchar(0x9AF2C78,   0x00,   0x00,   0xff);  
setchar(0x9AF2C7C,   0x00,   0x00,   0xff);  
setchar(0x9AF2C80,   0x00,   0x00,   0xff);  
setchar(0x9AF2C84,   0x00,   0x00,   0xff);  
setchar(0x9AF2C88,   0x00,   0x00,   0xff);  
setchar(0x9AF2C8C,   0x00,   0x00,   0xff);

#cheat Nite Stick Color Red
setchar(0x9AF2C50,  0xff,  0x00,  0x00);
setchar(0x9AF2C54,  0xff,  0x00,  0x00);
setchar(0x9AF2C58,  0xff,  0x00,  0x00);
setchar(0x9AF2C5C,  0xff,  0x00,  0x00);
setchar(0x9AF2C60,  0xff,  0x00,  0x00);
setchar(0x9AF2C64,  0xff,  0x00,  0x00);
setchar(0x9AF2C68,  0xff,  0x00,  0x00);
setchar(0x9AF2C6C,  0xff,  0x00,  0x00);
setchar(0x9AF2C70,  0xff,  0x00,  0x00);
setchar(0x9AF2C74,  0xff,  0x00,  0x00);
setchar(0x9AF2C78,  0xff,  0x00,  0x00);
setchar(0x9AF2C7C,  0xff,  0x00,  0x00);
setchar(0x9AF2C80,  0xff,  0x00,  0x00);
setchar(0x9AF2C84,  0xff,  0x00,  0x00);
setchar(0x9AF2C88,  0xff,  0x00,  0x00);
setchar(0x9AF2C8C,  0xff,  0x00,  0x00);

#cheat Car Radio to VCPR
setchar(pcar + 0x000002B7, 3);

#cheat Car Radio to V Rock
setchar(pcar + 0x000002B7, 5);

#cheat Car Radio to Flash
setchar(pcar + 0x000002B7, 0);

#cheat Car Radio to V Rock
setchar(pcar + 0x000002B7, 1);

#cheat Car Radio to Paradise
setchar(pcar + 0x000002B7, 2);

#cheat Car Radio to VCFl
setchar(pcar + 0x000002B7, 4);

#cheat Car Radio to Wave 103
setchar(pcar + 0x000002B7, 5);

#cheat Car Radio to Fresh 105
setchar(pcar + 0x000002B7, 6);

#cheat Car Radio to Espantoso
setchar(pcar + 0x000002B7, 7);

#cheat Car Radio to Emotion
setchar(pcar + 0x000002B7, 8);

#cheat The Bomb Shelter
moveto(-1010.88,  -806.61,  13.39);  object(0x1CA4,  0,  0,  33);
move(-3.24,  0.76,  0.00);  object(0x1CA4,  0,  0,  354);
move(-3.69,  -0.67,  0.00);  object(0x1CA4,  0,  0,  346);
move(-3.92,  -0.14,  0.00);  object(0x1CA4,  0,  0,  10);
move(-3.81,  -0.57,  0.00);  object(0x1CA4,  0,  0,  331);
move(-2.67,  -3.22,  0.00);  object(0x1CA4,  0,  0,  288);
move(-0.18,  -2.99,  0.00);  object(0x1CA4,  0,  0,  259);
move(2.39,  -3.62,  0.00);  object(0x1CA4,  0,  0,  215);
move(3.61,  -1.32,  0.00);  object(0x1CA4,  0,  0,  177);
move(13.25,  8.45,  0.00);  object(0x1CA4,  0,  0,  89);
move(0.07,  -3.90,  0.00);  object(0x1CA4,  0,  0,  89);
move(-1.20,  -2.96,  0.00);  object(0x1CA4,  0,  0,  142);
move(-2.42,  -1.75,  0.00);  object(0x1CA4,  0,  0,  149);
move(-3.50,  -1.04,  -0.10);  object(0x1CA4,  0,  0,  175);
move(-2.37,  0.40,  0.00);  object(0x1CA4,  0,  0,  206);
move(7.92,  10.08,  -1.10);  object(0x1CA5,  0,  0,  36);
move(0.24,  0.32,  0.00);  object(0x1CA5,  0,  0,  36);
move(0.24,  0.32,  0.00);  object(0x1CA5,  0,  0,  36);
move(-0.32,  0.23,  0.00);  object(0x1CA5,  0,  0,  36);
move(-0.18,  -0.24,  0.00);  object(0x1CA5,  0,  0,  36);
move(-0.24,  -0.32,  0.00);  object(0x1CA5,  0,  0,  36);
move(-0.45,  1.02,  0.50);  object(0x1CB0,  0,  0,  33);
move(-0.25,  0.16,  0.00);  object(0x1CB0,  0,  0,  33);
move(-0.25,  0.16,  0.00);  object(0x1CB0,  0,  0,  33);
move(-0.25,  0.16,  0.00);  object(0x1CB0,  0,  0,  33);
move(-0.25,  0.16,  0.00);  object(0x1CB0,  0,  0,  33);
move(-0.27,  -0.42,  0.00);  object(0x1CB0,  0,  0,  33);
move(0.25,  -0.16,  0.00);  object(0x1CB0,  0,  0,  33);
move(0.25,  -0.16,  0.00);  object(0x1CB0,  0,  0,  33);
move(0.25,  -0.16,  0.00);  object(0x1CB0,  0,  0,  33);
move(0.25,  -0.16,  0.00);  object(0x1CB0,  0,  0,  33);
move(0.00,  0.00,  0.10);  object(0x1CB0,  0,  0,  33);
move(-0.25,  0.16,  0.00);  object(0x1CB0,  0,  0,  33);
move(-0.25,  0.16,  0.00);  object(0x1CB0,  0,  0,  33);
move(-0.17,  0.11,  0.00);  object(0x1CB0,  0,  0,  33);
move(-0.34,  0.22,  0.00);  object(0x1CB0,  0,  0,  33);
move(0.17,  -0.11,  0.00);  object(0x1CB0,  0,  0,  33);
move(-1.18,  0.79,  -0.60);  object(0x1CB3,  0,  0,  273);
move(-0.80,  -0.03,  0.00);  object(0x1CB3,  0,  0,  273);
move(-0.70,  -0.03,  0.00);  object(0x1CB3,  0,  0,  273);
move(0.02,  -0.56,  0.00);  object(0x1CB3,  0,  0,  273);
move(0.70,  0.03,  0.00);  object(0x1CB3,  0,  0,  273);
move(0.80,  0.03,  0.00);  object(0x1CB3,  0,  0,  273);
move(4.10,  -4.32,  -0.20);  object(0x1CD2,  0,  0,  87);
move(-0.23,  3.99,  0.00);  object(0x1CD2,  0,  0,  29);
move(-6.87,  1.14,  0.00);  object(0x1CD4,  0,  0,  346);
move(-1.74,  -0.45,  0.00);  object(0x1CD4,  0,  0,  346);
move(0.70,  0.08,  1.20);  object(0x1CE6,  0,  0,  346);
move(-1.14,  -11.47,  0.00);  object(0x1CE6,  0,  0,  196);
move(2.76,  11.35,  -0.60);  object(0x1CEB,  0,  0,  180);
move(0.00,  0.00,  0.60);  object(0x1CEB,  0,  0,  180);
move(0.00,  0.00,  0.60);  object(0x1CEB,  0,  0,  180);
move(9.91,  -8.51,  1.40);  object(0x1CF4,  0,  0,  291);
move(-4.81,  3.14,  -3.20);  object(0x1CF5,  0,  0,  86);
move(-3.32,  -1.69,  -0.00);  object(0x1CF7,  0,  0,  175);
move(-1.02,  -0.07,  0.00);  object(0x1CF7,  0,  0,  175);
move(-10.82,  0.43,  -0.10);  object(0x1CF8,  0,  0,  345);
move(-0.58,  4.08,  0.20);  object(0x1CF9,  0,  0,  310);
move(4.91,  1.65,  0.30);  object(0x1CFB,  0,  0,  8);
move(-1.10,  -0.03,  0.00);  object(0x1CFB,  0,  0,  8);
move(-0.94,  -0.12,  0.00);  object(0x1CFB,  0,  0,  358);
move(2.41,  -8.81,  -0.30);  object(0x1CFC,  0,  0,  183);
move(4.72,  -0.95,  0.20);  object(0x1D00,  0,  0,  186);
move(-7.34,  4.85,  -0.50);  object(0x1D01,  0,  0,  270);
move(0.05,  -0.30,  0.00);  object(0x1D01,  0,  0,  270);
move(0.09,  -0.49,  0.00);  object(0x1D01,  0,  0,  270);
move(0.10,  -0.59,  0.00);  object(0x1D01,  0,  0,  270);
move(-0.33,  1.87,  0.00);  object(0x1D01,  0,  0,  270);
move(5.05,  3.41,  0.80);  object(0x1D03,  0,  0,  170);
move(-0.29,  -0.08,  0.00);  object(0x1D03,  0,  0,  170);
move(1.71,  -2.41,  -0.40);  object(0x1D04,  0,  0,  257);
move(2.34,  -5.75,  0.10);  object(0x1D14,  0,  0,  325);
move(-0.42,  -0.30,  0.00);  object(0x1D14,  0,  0,  333);
move(-0.41,  -0.21,  0.00);  object(0x1D14,  0,  0,  341);
move(-0.10,  0.22,  0.00);  object(0x1D14,  0,  0,  341);
move(0.48,  0.27,  0.00);  object(0x1D14,  0,  0,  331);
move(5.05,  5.11,  0.60);  object(0x1D14,  0,  0,  282);
move(-0.25,  0.03,  0.00);  object(0x1D14,  0,  0,  282);
move(-0.30,  0.04,  0.00);  object(0x1D14,  0,  0,  282);
move(-0.26,  -0.47,  0.00);  object(0x1D14,  0,  0,  282);
move(0.02,  0.47,  0.00);  object(0x1D14,  0,  0,  274);
move(-0.91,  -0.87,  -0.70);  object(0x1D14,  0,  0,  289);
move(0.07,  0.58,  0.00);  object(0x1D14,  0,  0,  274);
move(-0.19,  0.85,  0.00);  object(0x1D14,  0,  0,  251);
move(-0.40,  -0.39,  0.00);  object(0x1D14,  0,  0,  186);
move(0.06,  -0.67,  0.00);  object(0x1D14,  0,  0,  205);
move(0.00,  0.30,  0.00);  object(0x1D14,  0,  0,  196);
move(-0.05,  0.80,  0.00);  object(0x1D14,  0,  0,  196);
move(-0.05,  -1.53,  0.00);  object(0x1D14,  0,  0,  203);
move(0.21,  0.19,  0.00);  object(0x1D14,  0,  0,  203);
move(1.50,  4.93,  0.00);  object(0x1D14,  0,  0,  138);
move(-0.24,  0.39,  0.00);  object(0x1D14,  0,  0,  138);
move(-0.27,  0.14,  0.00);  object(0x1D14,  0,  0,  138);
move(-0.27,  0.14,  0.00);  object(0x1D14,  0,  0,  138);
move(-0.18,  0.09,  0.00);  object(0x1D14,  0,  0,  138);
move(-0.27,  0.14,  0.00);  object(0x1D14,  0,  0,  138);
move(-0.27,  0.14,  0.00);  object(0x1D14,  0,  0,  138);
move(1.33,  -0.70,  0.00);  object(0x1D14,  0,  0,  138);
move(-0.86,  -0.49,  0.40);  object(0x1D14,  0,  30,  123);
move(0.19,  -0.05,  0.00);  object(0x1D14,  0,  30,  123);
move(0.19,  -0.05,  0.00);  object(0x1D14,  0,  30,  123);
move(-0.88,  0.20,  0.00);  object(0x1D14,  0,  30,  123);
move(-0.29,  0.07,  0.00);  object(0x1D14,  0,  30,  123);
move(0.68,  -0.16,  0.00);  object(0x1D14,  0,  30,  123);
move(0.00,  0.00,  0.00);  object(0x1D14,  0,  30,  123);
move(-1.47,  -0.61,  1.10);  object(0x1D1A,  0,  0,  121);
move(9.34,  -10.77,  2.60);  object(0x1CB4,  0,  0,  237);
off#

#cheat teleport to Bomb Shelter
teleport(-1019.04,  -812.44,  13.27)

#cheat krazy long dragster line
moveto(-367.81,-560.05,38.95);  object(0x1CB2,0,270,180);
move(0.01,-14.20,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.89,0.00);  object(0x1CB2,0,270,180);
move(-0.02,-13.31,0.00);  object(0x1CB2,0,270,180);
move(-0.00,-13.58,0.00);  object(0x1CB2,0,270,180);
move(-0.00,-14.30,0.00);  object(0x1CB2,0,270,180);
move(-0.00,-14.34,0.00);  object(0x1CB2,0,270,180);
move(-0.00,-14.16,0.00);  object(0x1CB2,0,270,180);
move(-0.00,-14.12,0.00);  object(0x1CB2,0,270,180);
move(-0.00,-14.59,0.00);  object(0x1CB2,0,270,180);
move(-0.00,-14.30,0.00);  object(0x1CB2,0,270,180);
move(-0.00,-14.45,0.00);  object(0x1CB2,0,270,180);
move(-0.00,-14.03,0.00);  object(0x1CB2,0,270,180);
move(-0.00,-13.83,0.00);  object(0x1CB2,0,270,180);
move(-0.00,-13.95,0.00);  object(0x1CB2,0,270,180);
move(-0.00,-13.90,0.00);  object(0x1CB2,0,270,180);
move(-0.00,-14.03,0.00);  object(0x1CB2,0,270,180);
move(0.01,-12.44,0.00);  object(0x1CB2,0,270,180);
move(0.02,-14.60,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.26,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.57,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.48,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.25,0.00);  object(0x1CB2,0,270,180);
move(0.04,-31.86,0.00);  object(0x1CB2,0,270,180);
move(0.02,-14.50,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.47,0.00);  object(0x1CB2,0,270,180);
move(0.03,-26.04,0.00);  object(0x1CB2,0,270,180);
move(0.02,-14.16,0.00);  object(0x1CB2,0,270,180);
move(0.02,-14.02,0.00);  object(0x1CB2,0,270,180);
move(0.02,-14.08,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.80,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.47,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.78,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.22,0.00);  object(0x1CB2,0,270,180);
move(0.02,-12.51,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.76,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.84,0.00);  object(0x1CB2,0,270,180);
move(0.02,-12.63,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.84,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.17,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.86,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.73,0.00);  object(0x1CB2,0,270,180);
move(0.02,-14.03,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.21,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.15,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.87,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.67,0.00);  object(0x1CB2,0,270,180);
move(0.02,-14.28,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.52,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.38,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.43,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.43,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.83,0.00);  object(0x1CB2,0,270,180);
move(0.02,-13.85,0.00);  object(0x1CB2,0,270,180);
move(0.01,-14.36,0.00);  object(0x1CB2,0,270,180);
move(0.01,-14.04,0.00);  object(0x1CB2,0,270,180);
move(-0.09,-14.34,0.00);  object(0x1CB2,0,270,181);
move(-0.25,-13.58,0.00);  object(0x1CB2,0,270,181);
move(-0.26,-14.37,0.00);  object(0x1CB2,0,270,181);
move(-0.25,-14.07,0.00);  object(0x1CB2,0,270,181);
move(-0.25,-14.11,0.00);  object(0x1CB2,0,270,181);
move(-0.25,-13.87,0.00);  object(0x1CB2,0,270,181);
move(-0.21,-19.64,0.00);  object(0x1CB2,0,270,181);
move(0.09,9.36,-0.00);  object(0x1CB2,0,270,180);
move(-0.30,-23.37,0.00);  object(0x1CB2,0,270,181);
move(-0.24,-12.02,0.00);  object(0x1CB2,0,270,181);
move(-0.24,-12.04,0.00);  object(0x1CB2,0,270,181);
move(-0.16,-8.01,0.00);  object(0x1CB2,0,270,181);
move(-0.26,-13.16,0.00);  object(0x1CB2,0,270,181);
move(-0.27,-13.81,0.00);  object(0x1CB2,0,270,181);
move(-0.26,-12.78,0.00);  object(0x1CB2,0,270,181);
move(-0.20,-13.24,0.00);  object(0x1CB2,0,270,181);
move(-0.20,-13.55,0.00);  object(0x1CB2,0,270,181);
move(-0.19,-12.79,0.00);  object(0x1CB2,0,270,181);
move(-0.20,-13.60,0.00);  object(0x1CB2,0,270,181);
move(-0.19,-12.99,0.00);  object(0x1CB2,0,270,181);
move(-0.44,-29.43,0.00);  object(0x1CB2,0,270,181);
move(0.12,8.34,0.00);  object(0x1CB2,0,270,181);
move(0.09,6.01,0.00);  object(0x1CB2,0,270,181);
move(-0.33,-21.72,0.00);  object(0x1CB2,0,270,181);
move(-0.14,-11.12,0.00);  object(0x1CB2,0,270,181);
move(0.07,5.52,0.00);  object(0x1CB2,0,270,181);
move(-0.20,-16.40,0.00);  object(0x1CB2,0,270,181);
move(-0.14,-11.42,0.00);  object(0x1CB2,0,270,181);
move(-0.13,-10.64,0.00);  object(0x1CB2,0,270,181);
move(-0.13,-10.15,0.00);  object(0x1CB2,0,270,181);
move(-0.14,-11.05,0.00);  object(0x1CB2,0,270,181);
move(-0.13,-10.80,0.00);  object(0x1CB2,0,270,181);
move(-0.14,-11.10,0.00);  object(0x1CB2,0,270,181);
move(-0.18,-14.49,0.00);  object(0x1CB2,0,270,181);
move(-0.17,-13.54,0.00);  object(0x1CB2,0,270,181);
move(-0.12,-9.74,0.00);  object(0x1CB2,0,270,181);
move(-0.13,-10.69,0.00);  object(0x1CB2,0,270,181);
move(-0.16,-12.80,0.00);  object(0x1CB2,0,270,181);
move(-0.17,-13.59,0.00);  object(0x1CB2,0,270,181);
move(-0.08,-6.53,0.00);  object(0x1CB2,0,270,181);
move(-0.10,-7.77,0.00);  object(0x1CB2,0,270,181);
move(-0.13,-10.81,0.00);  object(0x1CB2,0,270,181);
move(-0.16,-12.77,0.00);  object(0x1CB2,0,270,181);
move(-0.16,-12.76,0.00);  object(0x1CB2,0,270,181);
move(-0.17,-13.84,0.00);  object(0x1CB2,0,270,181);
move(-0.04,-3.57,0.00);  object(0x1CB2,0,270,181);
move(-0.12,-9.61,0.00);  object(0x1CB2,0,270,181);
move(-0.16,-13.45,0.00);  object(0x1CB2,0,270,181);
move(-0.15,-12.49,0.00);  object(0x1CB2,0,270,181);
move(-0.15,-12.51,0.00);  object(0x1CB2,0,270,181);
move(-0.16,-12.97,0.00);  object(0x1CB2,0,270,181);
move(-0.27,-13.60,0.00);  object(0x1CB2,0,270,181);
move(4.39,335.34,0.00);  object(0x1CB2,0,270,181);
move(3.59,669.94,0.00);  object(0x1CB2,0,270,180);
move(0.02,55.43,0.00);  object(0x1CB2,0,270,180);
move(0.03,5.80,0.00);  object(0x1CB2,0,270,180);
move(-0.40,330.72,0.00);  object(0x1CB2,0,270,179);
move(-0.22,12.49,0.00);  object(0x1CB2,0,270,179);
move(-0.22,12.37,0.00);  object(0x1CB2,0,270,179);
move(-0.22,12.67,0.00);  object(0x1CB2,0,270,179);
move(-0.23,13.00,0.00);  object(0x1CB2,0,270,179);
move(-0.25,14.29,0.00);  object(0x1CB2,0,270,179);
move(-0.26,14.61,0.00);  object(0x1CB2,0,270,179);
move(-0.20,11.35,0.00);  object(0x1CB2,0,270,179);
move(-0.20,10.42,0.00);  object(0x1CB2,0,270,179);
move(-0.29,13.35,0.00);  object(0x1CB2,0,270,179);
move(-0.45,12.51,0.00);  object(0x1CB2,0,270,176);
move(-0.74,12.84,0.00);  object(0x1CB2,0,270,178);
move(-0.59,14.00,0.00);  object(0x1CB2,0,270,178);
move(-0.50,11.77,0.00);  object(0x1CB2,0,270,178);
move(-0.48,11.33,0.00);  object(0x1CB2,0,270,178);
move(-0.49,11.49,0.00);  object(0x1CB2,0,270,177);
move(-0.53,11.51,0.00);  object(0x1CB2,0,270,177);
move(-0.37,8.04,0.00);  object(0x1CB2,0,270,177);
move(-0.61,13.20,0.00);  object(0x1CB2,0,270,177);
move(-0.58,12.42,0.00);  object(0x1CB2,0,270,177);
move(-0.64,13.74,0.00);  object(0x1CB2,0,270,177);
move(-0.64,13.65,0.00);  object(0x1CB2,0,270,177);
move(-0.50,10.77,0.00);  object(0x1CB2,0,270,177);
move(-0.62,13.42,0.00);  object(0x1CB2,0,270,177);
move(-0.63,13.56,0.00);  object(0x1CB2,0,270,177);
move(-0.67,14.17,0.00);  object(0x1CB2,0,270,177);
move(-0.69,14.20,0.00);  object(0x1CB2,0,270,177);
move(-0.69,13.73,0.00);  object(0x1CB2,0,270,177);
move(-0.69,13.68,0.00);  object(0x1CB2,0,270,177);
move(-0.68,13.50,0.00);  object(0x1CB2,0,270,177);
move(-0.65,13.04,0.00);  object(0x1CB2,0,270,177);
move(-0.68,12.78,0.00);  object(0x1CB2,0,270,177);
move(-0.75,13.46,0.00);  object(0x1CB2,0,270,177);
move(-0.79,14.27,0.00);  object(0x1CB2,0,270,177);
move(-0.73,13.14,0.00);  object(0x1CB2,0,270,177);
move(-0.77,13.86,0.00);  object(0x1CB2,0,270,177);
move(-0.67,12.07,0.00);  object(0x1CB2,0,270,177);
move(-0.73,13.19,0.00);  object(0x1CB2,0,270,177);
move(-0.75,13.51,0.00);  object(0x1CB2,0,270,177);
move(-0.72,12.92,0.00);  object(0x1CB2,0,270,177);
move(-0.77,13.72,0.00);  object(0x1CB2,0,270,177);
move(-0.79,13.89,0.00);  object(0x1CB2,0,270,177);
move(-0.79,13.92,0.00);  object(0x1CB2,0,270,177);
move(-0.81,14.26,0.00);  object(0x1CB2,0,270,177);
move(-0.75,13.21,0.00);  object(0x1CB2,0,270,177);
move(-0.79,13.90,0.00);  object(0x1CB2,0,270,177);
move(-0.75,13.25,0.00);  object(0x1CB2,0,270,177);
move(-0.84,13.54,0.00);  object(0x1CB2,0,270,176);
move(-0.85,13.49,0.00);  object(0x1CB2,0,270,176);
move(-0.82,13.01,0.00);  object(0x1CB2,0,270,176);
move(-0.84,13.21,0.00);  object(0x1CB2,0,270,176);
move(-0.83,13.18,0.00);  object(0x1CB2,0,270,176);
move(-0.81,12.72,0.00);  object(0x1CB2,0,270,176);
move(-0.51,7.98,0.00);  object(0x1CB2,0,270,176);
move(0.21,-3.36,0.00);  object(0x1CB2,0,270,176);
move(-1.04,16.38,0.00);  object(0x1CB2,0,270,176);
move(-0.82,12.90,0.00);  object(0x1CB2,0,270,176);
move(-0.82,13.25,0.00);  object(0x1CB2,0,270,176);
move(-0.80,13.01,0.00);  object(0x1CB2,0,270,176);
move(-0.81,12.93,0.00);  object(0x1CB2,0,270,176);
move(-0.93,13.71,0.00);  object(0x1CB2,0,270,176);
move(-0.89,13.09,0.00);  object(0x1CB2,0,270,176);
move(-1.01,13.69,0.00);  object(0x1CB2,0,270,175);
move(-0.92,11.24,0.00);  object(0x1CB2,0,270,175);
move(-1.17,14.36,0.00);  object(0x1CB2,0,270,175);
move(-1.08,13.16,0.00);  object(0x1CB2,0,270,175);
move(-1.15,14.07,0.00);  object(0x1CB2,0,270,175);
move(-1.05,12.86,0.00);  object(0x1CB2,0,270,175);
move(-1.07,12.99,0.00);  object(0x1CB2,0,270,175);
move(-1.04,12.62,0.00);  object(0x1CB2,0,270,175);
move(-1.08,13.08,0.00);  object(0x1CB2,0,270,175);
move(-1.07,13.36,0.00);  object(0x1CB2,0,270,175);
move(-1.14,14.24,0.00);  object(0x1CB2,0,270,175);
move(-1.13,14.11,0.00);  object(0x1CB2,0,270,175);
move(-1.14,14.20,0.00);  object(0x1CB2,0,270,175);
move(-1.12,13.86,0.00);  object(0x1CB2,0,270,175);
move(-1.17,14.07,0.00);  object(0x1CB2,0,270,175);
move(-1.12,13.17,0.00);  object(0x1CB2,0,270,175);
move(-1.06,12.02,0.00);  object(0x1CB2,0,270,175);
move(-1.27,14.11,0.00);  object(0x1CB2,0,270,175);
move(-1.24,13.79,0.00);  object(0x1CB2,0,270,175);
move(-1.11,12.32,0.00);  object(0x1CB2,0,270,175);
move(-1.03,11.46,0.00);  object(0x1CB2,0,270,175);
move(-1.20,13.25,0.00);  object(0x1CB2,0,270,175);
move(-1.27,14.02,0.00);  object(0x1CB2,0,270,175);
move(-1.11,12.25,0.00);  object(0x1CB2,0,270,175);
move(-0.90,9.95,0.00);  object(0x1CB2,0,270,175);
move(-0.94,10.46,0.00);  object(0x1CB2,0,270,175);
move(-0.71,7.89,0.00);  object(0x1CB2,0,270,175);
move(-0.88,9.72,0.00);  object(0x1CB2,0,270,175);
move(-0.85,9.44,0.00);  object(0x1CB2,0,270,175);
move(-1.04,13.57,0.00);  object(0x1CB2,0,270,176);
move(-0.68,10.02,0.00);  object(0x1CB2,0,270,176);
move(-0.72,10.55,0.00);  object(0x1CB2,0,270,176);
move(-0.79,11.67,0.00);  object(0x1CB2,0,270,176);
move(-0.28,4.14,0.00);  object(0x1CB2,0,270,176);
move(-0.70,10.34,0.00);  object(0x1CB2,0,270,176);
move(-0.54,7.92,0.00);  object(0x1CB2,0,270,176);
move(-0.40,5.89,0.00);  object(0x1CB2,0,270,176);
move(-0.57,8.39,0.00);  object(0x1CB2,0,270,176);
move(-0.66,9.64,0.00);  object(0x1CB2,0,270,176);
move(-0.31,4.49,0.00);  object(0x1CB2,0,270,176);
move(-1.39,13.87,-2.37);  object(0x1CB2,85,250,87);
move(-2.07,13.51,-5.00);  object(0x1CB2,85,250,87);
move(-1.91,13.14,-4.80);  object(0x1CB2,85,250,87);
move(-1.92,13.35,-4.90);  object(0x1CB2,85,250,87);
move(-1.84,12.85,-4.70);  object(0x1CB2,85,250,87);
move(-1.86,12.63,-4.60);  object(0x1CB2,85,250,87);
move(9.70,-65.56,24.03);  object(0x1CB2,85,250,87);
move(-8.44,78.10,-27.64);  object(0x1CB2,0,180,350);
move(-2.06,5.70,1.80);  object(0x01D5,0,0,355);
move(0.62,-2.84,0.00);  object(0x01D5,0,0,355);
move(0.42,-2.84,0.00);  object(0x01D5,0,0,355);
move(20.49,-223.71,28.22);  object(0x1CB2,180,270,173);
teleport(-461.20,791.57, 11.28)

#cheat pinata man
static pinata;
if(!pinata)
{
 moveto(getfloat(pplayer+0x30)+5, getfloat(pplayer+0x34)+5, getfloat(pplayer+0x38)+1);
 pinata = object(0x1C91, 0, 0, 0);
}

dx = getfloat( pplayer+0x30 ) - getfloat( pinata+0x30 );
dy = getfloat( pplayer+0x34 ) - getfloat( pinata+0x34 );

atan2(rot,dy,dx) * -180 / 3.14159 + 90;

selectobject( pinata );
setfloat(pinata+0x38, getfloat(pplayer+0x38)+1);
setfloat(pinata+0x30, getfloat(pinata+0x30) + sin( rot ) * 0.05, getfloat( pinata+0x34 ) + cos( rot ) * 0.05 );

setfloat(pinata, cos( rot ), -sin( rot ));
setfloat(pinata+0x10, sin( rot ), cos( rot ));
propagateobject();

#cheat longest ramp
moveto(479.38,-558.07,13.32);  object(0x1CB2,90,240,104);
move(-2.77,-11.53,6.80);  object(0x1CB2,90,240,104);
move(-2.83,-11.73,6.90);  object(0x1CB2,90,240,104);
move(-2.67,-12.24,7.20);  object(0x1CB2,90,240,101);
move(-2.39,-12.48,7.20);  object(0x1CB2,90,240,101);
move(-2.53,-12.60,7.20);  object(0x1CB2,90,240,101);
move(-2.24,-11.95,7.00);  object(0x1CB2,90,240,101);
move(-2.19,-11.78,6.60);  object(0x1CB2,90,240,101);
move(-1.87,-9.52,5.60);  object(0x1CB2,90,240,101);
move(-2.35,-11.59,6.60);  object(0x1CB2,90,240,101);
move(-2.44,-11.91,6.60);  object(0x1CB2,90,240,101);
move(-2.31,-11.82,6.90);  object(0x1CB2,90,240,101);
move(-2.12,-11.53,6.70);  object(0x1CB2,90,240,101);
move(-2.35,-11.95,6.80);  object(0x1CB2,90,240,101);
move(-2.43,-12.23,7.20);  object(0x1CB2,90,240,101);
move(-2.03,-10.47,6.20);  object(0x1CB2,90,240,101);
move(-2.30,-11.77,6.90);  object(0x1CB2,90,240,101);
move(-2.28,-11.72,6.90);  object(0x1CB2,90,240,101);
move(-2.29,-11.74,6.70);  object(0x1CB2,90,240,101);
move(-2.43,-12.26,7.10);  object(0x1CB2,90,240,101);
move(-2.20,-11.39,6.60);  object(0x1CB2,90,240,100);
move(-2.09,-11.77,6.80);  object(0x1CB2,90,240,100);
move(-2.15,-12.35,7.20);  object(0x1CB2,90,240,100);
move(-2.18,-12.32,7.20);  object(0x1CB2,90,240,100);
move(-2.13,-11.94,6.90);  object(0x1CB2,90,240,100);
move(-1.95,-11.04,6.20);  object(0x1CB2,90,240,100);
move(-1.92,-10.90,6.30);  object(0x1CB2,90,240,100);
move(-2.15,-12.19,7.20);  object(0x1CB2,90,240,100);
move(-2.17,-12.25,7.10);  object(0x1CB2,90,240,100);
move(-2.20,-12.37,7.30);  object(0x1CB2,90,240,100);
move(-2.00,-11.62,6.80);  object(0x1CB2,90,240,100);
move(-2.13,-12.11,7.10);  object(0x1CB2,90,240,100);
move(-2.09,-11.90,6.90);  object(0x1CB2,90,240,100);
move(-2.11,-11.98,6.90);  object(0x1CB2,90,240,100);
move(-2.37,-12.20,7.10);  object(0x1CB2,90,240,102);
move(-2.64,-12.15,7.10);  object(0x1CB2,90,240,102);
move(-2.61,-11.71,6.80);  object(0x1CB2,90,240,102);
move(-2.35,-11.89,7.00);  object(0x1CB2,90,240,100);
move(-2.06,-12.29,7.10);  object(0x1CB2,90,240,99);
move(-1.81,-11.37,6.61);  object(0x1CB2,90,240,99);
move(-2.01,-12.45,7.10);  object(0x1CB2,90,240,99);
move(-1.89,-11.96,7.00);  object(0x1CB2,90,240,99);
move(-1.88,-12.36,7.30);  object(0x1CB2,90,240,99);
move(-1.90,-12.01,7.00);  object(0x1CB2,90,240,99);
move(-1.81,-11.63,6.90);  object(0x1CB2,90,240,99);
move(-1.93,-11.72,6.70);  object(0x1CB2,90,240,99);
move(-1.70,-11.32,6.60);  object(0x1CB2,90,240,98);
move(-1.61,-11.19,6.50);  object(0x1CB2,90,240,98);
move(-1.65,-11.38,6.50);  object(0x1CB2,90,240,98);
move(-1.50,-11.17,6.50);  object(0x1CB2,90,240,98);
move(-1.73,-12.11,7.10);  object(0x1CB2,90,240,98);
move(-1.60,-11.57,6.80);  object(0x1CB2,90,240,98);
move(-1.77,-12.30,6.90);  object(0x1CB2,90,240,98);
move(-1.65,-12.25,7.10);  object(0x1CB2,90,240,97);
move(-1.48,-12.27,7.20);  object(0x1CB2,90,240,97);
move(-1.25,-10.15,6.00);  object(0x1CB2,90,240,97);
move(-1.42,-11.46,6.60);  object(0x1CB2,90,240,97);
move(-1.41,-11.91,6.80);  object(0x1CB2,90,240,97);
move(-1.43,-12.00,6.90);  object(0x1CB2,90,240,97);
move(-1.36,-12.39,7.00);  object(0x1CB2,90,240,96);
move(-1.32,-12.49,7.22);  object(0x1CB2,90,240,96);
move(-1.30,-12.29,7.00);  object(0x1CB2,90,240,96);
move(-1.37,-12.63,7.20);  object(0x1CB2,90,240,96);
move(-1.22,-12.10,7.00);  object(0x1CB2,90,240,96);
move(-1.21,-12.38,7.20);  object(0x1CB2,90,240,96);
move(-1.37,-12.59,7.30);  object(0x1CB2,90,240,96);
move(-1.29,-12.13,7.10);  object(0x1CB2,90,240,96);
move(-1.27,-12.37,7.20);  object(0x1CB2,90,240,96);
move(-1.27,-12.52,7.10);  object(0x1CB2,90,240,96);
move(-1.30,-12.14,6.80);  object(0x1CB2,90,240,96);
move(-1.28,-12.04,6.90);  object(0x1CB2,90,240,96);
move(-1.21,-11.65,6.80);  object(0x1CB2,90,240,96);
move(-1.08,-12.60,7.20);  object(0x1CB2,90,240,94);
move(-0.86,-12.44,7.20);  object(0x1CB2,90,240,94);
move(-0.76,-11.22,6.40);  object(0x1CB2,90,240,94);
move(-0.94,-12.29,7.10);  object(0x1CB2,90,240,94);
move(-0.81,-12.13,7.00);  object(0x1CB2,90,240,94);
move(-0.79,-11.43,6.60);  object(0x1CB2,90,240,94);
move(-0.93,-11.45,6.50);  object(0x1CB2,90,240,95);
move(-1.16,-11.76,6.80);  object(0x1CB2,90,240,96);
move(-1.19,-12.00,7.10);  object(0x1CB2,90,240,96);
move(-1.17,-10.84,6.30);  object(0x1CB2,90,240,96);
move(-1.21,-11.55,6.80);  object(0x1CB2,90,240,96);
move(-1.25,-11.77,6.90);  object(0x1CB2,90,240,96);
move(-1.30,-12.05,6.90);  object(0x1CB2,90,240,96);
move(-1.23,-12.22,7.20);  object(0x1CB2,90,240,96);
move(-1.13,-11.17,6.50);  object(0x1CB2,90,240,96);
move(-1.29,-11.97,6.90);  object(0x1CB2,90,240,96);
move(-1.21,-11.56,6.80);  object(0x1CB2,90,240,96);
move(-1.23,-11.70,6.80);  object(0x1CB2,90,240,96);
move(-1.13,-10.63,6.20);  object(0x1CB2,90,240,96);
move(-1.26,-11.23,6.50);  object(0x1CB2,90,240,96);
move(-1.19,-11.42,6.50);  object(0x1CB2,90,240,96);
move(-1.13,-11.14,6.40);  object(0x1CB2,90,240,96);
move(-1.20,-10.97,6.20);  object(0x1CB2,90,240,96);
move(-1.23,-11.11,6.30);  object(0x1CB2,90,240,96);
move(-1.09,-10.94,6.40);  object(0x1CB2,90,240,96);
move(-1.26,-11.82,6.70);  object(0x1CB2,90,240,96);
move(-1.20,-11.48,6.70);  object(0x1CB2,90,240,96);
move(-1.29,-11.97,6.90);  object(0x1CB2,90,240,96);
move(-1.31,-12.10,7.00);  object(0x1CB2,90,240,96);
move(-1.23,-11.63,6.70);  object(0x1CB2,90,240,96);
move(-1.55,-13.36,4.20);  object(0x1CB2,90,265,97);
move(-6.48,0.78,0.00);  object(0x1CB2,90,265,97);
move(-6.48,0.76,0.00);  object(0x1CB2,90,265,97);
move(1.62,13.00,3.00);  object(0x1CB2,90,240,278);
move(1.69,11.93,7.00);  object(0x1CB2,90,240,278);
move(1.66,11.91,6.90);  object(0x1CB2,90,240,278);
move(1.75,12.22,7.10);  object(0x1CB2,90,240,278);
move(1.76,12.26,7.10);  object(0x1CB2,90,240,278);
move(1.48,10.63,6.30);  object(0x1CB2,90,240,278);
move(1.79,12.41,7.10);  object(0x1CB2,90,240,278);
move(1.60,11.70,6.80);  object(0x1CB2,90,240,277);
move(1.42,11.09,6.40);  object(0x1CB2,90,240,277);
move(1.35,11.21,6.50);  object(0x1CB2,90,240,277);
move(1.59,11.62,6.51);  object(0x1CB2,90,240,278);
move(1.73,12.12,7.10);  object(0x1CB2,90,240,278);
move(1.74,12.15,6.40);  object(0x1CB2,90,245,278);
move(1.78,12.35,5.80);  object(0x1CB2,90,245,278);
move(1.70,11.92,5.50);  object(0x1CB2,90,245,278);
move(1.71,12.28,5.50);  object(0x1CB2,90,245,278);
move(1.83,12.41,6.40);  object(0x1CB2,90,240,277);
move(1.44,11.56,6.50);  object(0x1CB2,90,240,277);
move(1.73,12.51,7.10);  object(0x1CB2,90,240,279);
move(1.63,9.32,5.77);  object(0x1CB2,90,240,280);
teleport(485.33,-535.53,10.95)

#cheat anger management place
moveto(213.29,-243.31,10.93);  object(0x01C2,0,0,231);
move(-0.44,0.54,0.00);  object(0x01C2,0,0,231);
move(-0.44,0.54,0.00);  object(0x01C2,0,0,231);
move(-0.38,0.47,0.00);  object(0x01C2,0,0,231);
move(-0.44,0.54,0.00);  object(0x01C2,0,0,231);
move(0.00,0.00,1.00);  object(0x01C2,0,0,231);
move(0.44,-0.54,0.00);  object(0x01C2,0,0,231);
move(0.38,-0.47,0.00);  object(0x01C2,0,0,231);
move(0.44,-0.54,0.00);  object(0x01C2,0,0,231);
move(0.38,-0.47,0.00);  object(0x01C2,0,0,231);
move(0.00,0.00,1.10);  object(0x01C2,0,0,231);
move(-0.31,0.39,0.00);  object(0x01C2,0,0,231);
move(-0.44,0.54,0.00);  object(0x01C2,0,0,231);
move(-0.44,0.54,0.00);  object(0x01C2,0,0,231);
move(-0.44,0.54,0.00);  object(0x01C2,0,0,231);
move(-0.50,0.62,-2.20);  object(0x01C2,0,0,231);
move(0.00,0.00,1.10);  object(0x01C2,0,0,231);
move(0.00,0.00,1.10);  object(0x01C2,0,0,231);
move(-1.94,13.69,-1.34);  object(0x029F,0,0,302);
move(2.25,3.66,0.00);  object(0x029F,0,0,302);
move(2.20,3.58,0.00);  object(0x029F,0,0,302);
move(-6.65,-10.82,0.00);  object(0x029F,0,0,302);
move(-2.20,-3.58,0.00);  object(0x029F,0,0,302);
move(-2.25,-3.66,0.00);  object(0x029F,0,0,302);
move(-2.15,-3.49,0.00);  object(0x029F,0,0,302);
move(-2.20,-3.58,0.00);  object(0x029F,0,0,302);
move(-2.20,-3.58,0.00);  object(0x029F,0,0,302);
move(-2.25,-3.66,0.00);  object(0x029F,0,0,302);
move(-2.20,-3.58,0.00);  object(0x029F,0,0,302);
move(-2.25,-3.66,0.00);  object(0x029F,0,0,302);
move(-0.94,-1.53,0.00);  object(0x029F,0,0,302);
move(0.00,0.00,0.00);  object(0x029F,0,0,302);
move(0.99,1.62,0.00);  object(0x029F,0,0,302);
move(1.20,1.96,0.00);  object(0x029F,0,0,302);
move(0.99,1.62,0.00);  object(0x029F,0,0,302);
move(0.94,1.53,0.00);  object(0x029F,0,0,302);
move(1.26,2.04,0.00);  object(0x029F,0,0,302);
move(1.10,1.79,0.00);  object(0x029F,0,0,302);
move(1.15,1.87,0.00);  object(0x029F,0,0,302);
move(1.15,1.87,0.00);  object(0x029F,0,0,302);
move(0.89,1.45,0.00);  object(0x029F,0,0,302);
move(0.99,1.62,0.00);  object(0x029F,0,0,302);
move(1.26,2.04,0.00);  object(0x029F,0,0,302);
move(0.99,1.62,0.00);  object(0x029F,0,0,302);
move(1.47,2.39,0.00);  object(0x029F,0,0,302);
move(0.73,1.19,0.00);  object(0x029F,0,0,302);
move(1.10,1.79,0.00);  object(0x029F,0,0,302);
move(1.15,1.87,0.00);  object(0x029F,0,0,302);
move(1.31,2.13,0.00);  object(0x029F,0,0,302);
move(0.84,1.36,0.00);  object(0x029F,0,0,302);
move(0.84,1.36,0.00);  object(0x029F,0,0,302);
move(1.20,1.96,0.00);  object(0x029F,0,0,302);
move(1.36,2.22,0.00);  object(0x029F,0,0,302);
move(2.36,3.83,0.00);  object(0x029F,0,0,302);
move(-0.10,-0.17,0.00);  object(0x029F,0,0,302);
move(-0.05,-0.09,0.00);  object(0x029F,0,0,302);
move(-1.47,-2.39,0.00);  object(0x029F,0,0,302);
move(-1.47,-2.39,0.00);  object(0x029F,0,0,302);
move(1.05,1.70,0.00);  object(0x029F,0,0,302);
move(-2.04,-3.32,0.00);  object(0x029F,0,0,302);
move(-1.67,-2.73,0.00);  object(0x029F,0,0,302);
move(-1.57,-2.56,0.00);  object(0x029F,0,0,302);
move(-1.31,-2.13,0.00);  object(0x029F,0,0,302);
move(-1.26,-2.04,0.00);  object(0x029F,0,0,302);
move(-1.36,-2.22,0.00);  object(0x029F,0,0,302);
move(-1.10,-1.79,0.00);  object(0x029F,0,0,302);
move(-1.36,-2.22,0.00);  object(0x029F,0,0,302);
move(-1.36,-2.22,0.00);  object(0x029F,0,0,302);
move(-1.26,-2.04,0.00);  object(0x029F,0,0,302);
move(-1.20,-1.96,0.00);  object(0x029F,0,0,302);
move(-1.57,-2.56,0.00);  object(0x029F,0,0,302);
move(-1.52,-2.47,0.00);  object(0x029F,0,0,302);
move(-1.57,-2.56,0.00);  object(0x029F,0,0,302);
move(-0.94,-1.53,0.00);  object(0x029F,0,0,302);
move(-2.09,-3.41,0.00);  object(0x029F,0,0,302);
move(0.00,0.00,0.00);  object(0x029F,0,0,302);
move(0.00,0.00,0.00);  object(0x029F,0,0,302);
move(0.77,-2.78,0.00);  object(0x029F,0,0,207);
move(3.11,-1.60,0.00);  object(0x029F,0,0,207);
move(3.29,-1.69,0.00);  object(0x029F,0,0,207);
move(3.47,-1.79,0.00);  object(0x029F,0,0,207);
move(3.25,-1.67,-0.10);  object(0x029F,0,0,202);
move(3.84,-1.66,0.00);  object(0x029F,0,0,202);
move(3.69,-1.57,0.10);  object(0x029F,0,0,202);
move(3.87,-1.32,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(-4.16,1.48,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(0.01,-0.01,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(-3.75,1.63,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(-3.69,1.57,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(-3.75,2.06,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(-0.54,0.57,0.00);  object(0x029F,0,0,202);
move(-3.31,1.16,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(-3.46,1.41,0.00);  object(0x029F,0,0,199);
move(0.00,0.00,0.00);  object(0x029F,0,0,199);
move(0.00,0.00,0.00);  object(0x029F,0,0,199);
move(-1.88,1.46,0.00);  object(0x029F,0,0,209);
move(0.00,0.00,0.00);  object(0x029F,0,0,209);
move(0.00,0.00,0.00);  object(0x029F,0,0,209);
move(0.00,0.00,0.00);  object(0x029F,0,0,209);
move(28.11,42.27,-0.81);  object(0x0264,0,0,206);
move(-0.31,0.06,0.00);  object(0x0264,0,0,206);
move(0.64,-0.13,0.00);  object(0x0264,0,0,206);
move(0.05,-0.01,0.00);  object(0x0264,0,0,206);
move(0.44,-0.09,0.00);  object(0x0264,0,0,206);
move(0.49,-0.10,0.00);  object(0x0264,0,0,206);
move(0.51,-0.10,0.00);  object(0x0264,0,0,206);
move(0.38,-0.08,0.00);  object(0x0264,0,0,206);
move(0.39,-0.08,0.00);  object(0x0264,0,0,206);
move(1.06,2.96,2.20);  object(0x0264,0,0,76);
move(-0.39,0.58,0.00);  object(0x0264,0,0,76);
move(-0.50,0.75,0.00);  object(0x0264,0,0,76);
move(0.00,0.00,0.00);  object(0x0264,0,0,76);
move(0.00,0.00,0.00);  object(0x0264,0,0,76);
move(0.00,0.00,0.00);  object(0x0264,0,0,76);
move(0.00,0.00,0.00);  object(0x0264,0,0,76);
teleport(234.70, -235.05, 11.41)

#cheat glasss...
moveto(110.21,-692.16,12.95);  object(0x029F,0,0,263);
move(-1.78,-0.21,0.00);  object(0x029F,0,0,263);
move(-1.93,-0.23,0.00);  object(0x029F,0,0,263);
move(-1.50,-0.17,0.00);  object(0x029F,0,0,263);
move(-2.03,-0.23,0.00);  object(0x029F,0,0,263);
move(8.46,0.98,0.00);  object(0x029F,0,0,263);
move(1.52,0.18,0.00);  object(0x029F,0,0,263);
move(1.44,0.17,0.00);  object(0x029F,0,0,263);
move(1.22,0.14,0.00);  object(0x029F,0,0,263);
move(0.79,0.09,0.00);  object(0x029F,0,0,263);
move(1.54,0.18,0.00);  object(0x029F,0,0,263);
move(2.17,0.25,0.00);  object(0x029F,0,0,263);
move(1.84,0.21,0.00);  object(0x029F,0,0,263);
move(1.74,0.20,0.00);  object(0x029F,0,0,263);
move(1.81,0.21,0.00);  object(0x029F,0,0,263);
move(2.09,0.24,0.00);  object(0x029F,0,0,263);
move(1.79,0.21,0.00);  object(0x029F,0,0,263);
move(1.46,0.17,0.00);  object(0x029F,0,0,263);
move(1.33,0.15,0.00);  object(0x029F,0,0,263);
move(1.56,0.18,0.00);  object(0x029F,0,0,263);
move(1.60,0.18,0.00);  object(0x029F,0,0,263);
move(1.42,0.16,0.00);  object(0x029F,0,0,263);
move(1.52,0.18,0.00);  object(0x029F,0,0,263);
move(1.79,0.21,0.00);  object(0x029F,0,0,263);
move(1.92,0.22,0.00);  object(0x029F,0,0,263);
move(2.11,0.24,0.00);  object(0x029F,0,0,263);
move(1.69,0.19,0.00);  object(0x029F,0,0,263);
move(1.46,0.17,0.00);  object(0x029F,0,0,263);
move(1.20,0.14,0.00);  object(0x029F,0,0,263);
move(1.04,0.12,0.00);  object(0x029F,0,0,263);
move(1.00,0.12,0.00);  object(0x029F,0,0,263);
move(1.20,0.14,0.00);  object(0x029F,0,0,263);
move(1.52,0.18,0.00);  object(0x029F,0,0,263);
move(1.49,0.17,0.00);  object(0x029F,0,0,263);
move(1.35,0.16,0.00);  object(0x029F,0,0,263);
move(-0.68,5.86,0.00);  object(0x029F,0,0,263);
move(-1.37,-0.16,0.00);  object(0x029F,0,0,263);
move(-1.15,-0.13,0.00);  object(0x029F,0,0,263);
move(-1.40,-0.16,0.00);  object(0x029F,0,0,263);
move(-1.37,-0.16,0.00);  object(0x029F,0,0,263);
move(-0.93,-0.11,0.00);  object(0x029F,0,0,263);
move(-1.26,-0.15,0.00);  object(0x029F,0,0,263);
move(-1.02,-0.12,0.00);  object(0x029F,0,0,263);
move(-0.94,-0.11,0.00);  object(0x029F,0,0,263);
move(-1.11,-0.13,0.00);  object(0x029F,0,0,263);
move(-1.33,-0.15,0.00);  object(0x029F,0,0,263);
move(-1.56,-0.18,0.00);  object(0x029F,0,0,263);
move(-2.08,-0.24,0.00);  object(0x029F,0,0,263);
move(-1.15,-0.13,0.00);  object(0x029F,0,0,263);
move(-1.26,-0.13,0.00);  object(0x029F,0,0,264);
move(-1.91,-0.22,0.00);  object(0x029F,0,0,264);
move(-1.56,-0.18,0.00);  object(0x029F,0,0,264);
move(-2.37,-0.27,0.00);  object(0x029F,0,0,264);
move(-1.75,-0.20,0.00);  object(0x029F,0,0,264);
move(-2.08,-0.23,0.00);  object(0x029F,0,0,264);
move(-3.06,-0.35,0.00);  object(0x029F,0,0,264);
move(-1.80,-0.20,0.00);  object(0x029F,0,0,264);
move(-1.98,-0.22,0.00);  object(0x029F,0,0,264);
move(-1.42,-0.16,0.00);  object(0x029F,0,0,264);
move(-1.79,-0.20,0.00);  object(0x029F,0,0,264);
move(-1.54,-0.17,0.00);  object(0x029F,0,0,264);
move(-1.01,-0.11,0.00);  object(0x029F,0,0,264);
move(-0.83,-0.09,0.00);  object(0x029F,0,0,264);
move(-1.27,-0.14,0.00);  object(0x029F,0,0,264);
move(-1.19,-0.13,0.00);  object(0x029F,0,0,264);
move(-1.43,-0.16,0.00);  object(0x029F,0,0,264);
move(-1.20,-0.14,0.00);  object(0x029F,0,0,264);
move(-2.40,-0.14,0.00);  object(0x029F,0,0,265);
move(-0.90,-0.08,0.00);  object(0x029F,0,0,265);
move(1.32,0.11,0.00);  object(0x029F,0,0,265);
move(-3.18,-0.27,0.00);  object(0x029F,0,0,265);
move(-2.09,-0.17,0.00);  object(0x029F,0,0,265);
move(54.55,-5.02,-0.54);  object(0x029F,0,0,262);
move(-1.11,-0.16,0.00);  object(0x029F,0,0,262);
move(-1.76,-0.25,0.00);  object(0x029F,0,0,262);
move(-1.48,-0.21,0.00);  object(0x029F,0,0,262);
move(-1.48,-0.21,0.00);  object(0x029F,0,0,262);
move(-1.51,-0.22,0.00);  object(0x029F,0,0,262);
move(-1.83,-0.26,0.00);  object(0x029F,0,0,262);
move(-0.94,-0.14,0.00);  object(0x029F,0,0,262);
move(-1.25,-0.18,0.00);  object(0x029F,0,0,262);
move(-1.59,-0.23,0.00);  object(0x029F,0,0,262);
move(-2.39,-0.34,0.00);  object(0x029F,0,0,262);
move(-1.50,-0.22,0.00);  object(0x029F,0,0,262);
move(-2.46,-0.35,0.00);  object(0x029F,0,0,262);
move(0.15,0.02,0.00);  object(0x029F,0,0,262);
move(-1.03,-0.15,0.00);  object(0x029F,0,0,262);
move(-1.78,-0.26,0.00);  object(0x029F,0,0,262);
move(-1.79,-0.26,0.00);  object(0x029F,0,0,262);
move(-2.83,-0.41,0.00);  object(0x029F,0,0,262);
move(-0.80,-0.11,0.00);  object(0x029F,0,0,262);
move(-1.21,-0.17,0.00);  object(0x029F,0,0,262);
move(-1.60,-0.23,0.00);  object(0x029F,0,0,262);
move(-0.93,-0.13,0.00);  object(0x029F,0,0,262);
move(-1.54,-0.22,0.00);  object(0x029F,0,0,262);
move(7.43,1.06,0.00);  object(0x029F,0,0,262);
move(-10.31,-1.50,-0.05);  object(0x029F,0,0,261);
move(0.24,0.04,0.00);  object(0x029F,0,0,261);
move(-0.81,-0.13,0.00);  object(0x029F,0,0,261);
move(-1.76,-0.29,0.00);  object(0x029F,0,0,261);
move(-1.34,-0.22,0.00);  object(0x029F,0,0,261);
move(-0.89,-0.14,0.00);  object(0x029F,0,0,261);
move(-1.22,-0.20,0.00);  object(0x029F,0,0,261);
move(-0.76,-0.12,0.00);  object(0x029F,0,0,261);
move(-1.83,-0.30,0.00);  object(0x029F,0,0,261);
move(-1.70,-0.28,0.00);  object(0x029F,0,0,261);
move(-1.20,-0.20,0.00);  object(0x029F,0,0,261);
move(-1.70,-0.28,0.00);  object(0x029F,0,0,261);
move(-2.10,-0.34,0.00);  object(0x029F,0,0,261);
move(-2.19,-0.36,0.00);  object(0x029F,0,0,261);
move(9.34,8.01,0.00);  object(0x029F,0,0,261);
move(16.18,7.71,0.00);  object(0x029F,0,0,266);
move(-0.89,-0.15,0.00);  object(0x029F,0,0,266);
move(-1.51,-0.25,0.00);  object(0x029F,0,0,266);
move(-0.96,-0.16,0.00);  object(0x029F,0,0,266);
move(-1.75,-0.29,0.00);  object(0x029F,0,0,266);
move(-1.38,-0.23,0.00);  object(0x029F,0,0,266);
move(-1.47,-0.24,0.00);  object(0x029F,0,0,266);
move(-2.79,-0.46,0.00);  object(0x029F,0,0,266);
move(-1.19,-0.19,0.00);  object(0x029F,0,0,266);
move(-2.50,-0.41,0.00);  object(0x029F,0,0,266);
move(-1.30,-0.21,0.00);  object(0x029F,0,0,266);
move(-0.89,-0.15,0.00);  object(0x029F,0,0,266);
move(-1.76,-0.29,0.00);  object(0x029F,0,0,266);
move(-1.76,-0.29,0.00);  object(0x029F,0,0,266);
move(-2.06,-0.34,0.00);  object(0x029F,0,0,266);
move(-1.49,-0.24,0.00);  object(0x029F,0,0,266);
move(-1.78,-0.29,0.00);  object(0x029F,0,0,266);
move(-2.56,-0.42,0.00);  object(0x029F,0,0,266);
move(18.02,2.95,0.00);  object(0x029F,0,0,266);
move(-0.59,-0.10,0.00);  object(0x029F,0,0,266);
move(-4.55,-5.61,-0.40);  object(0x029F,0,0,266);
move(42.35,-5.43,0.00);  object(0x029F,0,0,271);
move(-0.94,-0.07,0.00);  object(0x029F,0,0,271);
move(-1.84,-0.14,0.00);  object(0x029F,0,0,271);
move(-2.16,-0.17,0.00);  object(0x029F,0,0,271);
move(-0.94,-0.07,0.00);  object(0x029F,0,0,271);
move(-1.53,-0.12,0.00);  object(0x029F,0,0,271);
move(-1.63,-0.13,0.00);  object(0x029F,0,0,271);
move(-0.88,-2.17,0.00);  object(0x029F,0,0,271);
move(-1.17,-0.09,0.00);  object(0x029F,0,0,271);
move(-1.55,-0.12,0.00);  object(0x029F,0,0,271);
move(-1.44,-0.11,0.00);  object(0x029F,0,0,271);
move(-0.90,-0.07,0.00);  object(0x029F,0,0,271);
move(-2.25,-0.18,0.00);  object(0x029F,0,0,271);
move(-1.54,-0.12,0.00);  object(0x029F,0,0,271);
move(-1.96,-0.15,0.00);  object(0x029F,0,0,271);
move(-1.87,-0.15,0.00);  object(0x029F,0,0,271);
move(-2.19,-0.17,0.00);  object(0x029F,0,0,271);
move(-2.57,-0.20,0.00);  object(0x029F,0,0,271);
move(-1.50,-0.12,0.00);  object(0x029F,0,0,271);
move(-0.90,-0.07,0.00);  object(0x029F,0,0,271);
move(-3.45,-0.27,0.00);  object(0x029F,0,0,271);
move(-2.87,-0.22,0.00);  object(0x029F,0,0,271);
move(-1.70,-0.13,0.00);  object(0x029F,0,0,271);
move(-2.99,-0.23,0.00);  object(0x029F,0,0,271);
move(-3.19,-0.25,0.00);  object(0x029F,0,0,271);
move(-3.08,-0.24,0.00);  object(0x029F,0,0,271);
move(-2.06,-0.16,0.00);  object(0x029F,0,0,271);
move(-1.10,-0.09,0.00);  object(0x029F,0,0,271);
move(-2.09,-0.16,0.00);  object(0x029F,0,0,271);
move(0.32,0.03,0.00);  object(0x029F,0,0,271);
move(0.35,3.27,0.00);  object(0x029F,0,0,266);
move(1.79,0.29,0.00);  object(0x029F,0,0,266);
move(1.78,0.29,0.00);  object(0x029F,0,0,266);
move(3.94,0.64,0.00);  object(0x029F,0,0,266);
move(1.22,0.20,0.00);  object(0x029F,0,0,266);
move(2.63,0.43,0.00);  object(0x029F,0,0,266);
move(1.48,0.24,0.00);  object(0x029F,0,0,266);
move(2.94,0.48,0.00);  object(0x029F,0,0,266);
move(1.78,0.29,0.00);  object(0x029F,0,0,266);
move(1.24,0.20,0.00);  object(0x029F,0,0,266);
move(1.48,0.24,0.00);  object(0x029F,0,0,266);
move(1.48,0.24,0.00);  object(0x029F,0,0,266);
move(1.50,0.25,0.00);  object(0x029F,0,0,266);
move(2.77,0.45,0.00);  object(0x029F,0,0,266);
move(1.51,0.25,0.00);  object(0x029F,0,0,266);
move(2.20,0.36,0.00);  object(0x029F,0,0,266);
move(2.53,0.41,0.00);  object(0x029F,0,0,266);
move(0.00,0.00,0.00);  object(0x029F,0,0,266);
move(3.88,0.63,0.00);  object(0x029F,0,0,266);
move(4.44,0.73,0.00);  object(0x029F,0,0,266);
move(3.85,0.63,0.00);  object(0x029F,0,0,266);
move(3.55,0.58,0.00);  object(0x029F,0,0,266);
move(3.55,0.58,0.00);  object(0x029F,0,0,266);
move(-0.97,-0.16,0.00);  object(0x029F,0,0,266);
move(-0.76,4.64,0.00);  object(0x029F,0,0,266);
move(-2.03,-0.33,0.00);  object(0x029F,0,0,266);
move(-1.64,-0.27,0.00);  object(0x029F,0,0,266);
move(-1.52,-0.25,0.00);  object(0x029F,0,0,266);
move(-1.83,-0.30,0.00);  object(0x029F,0,0,266);
move(-2.37,-0.39,0.00);  object(0x029F,0,0,266);
move(-2.69,-0.44,0.00);  object(0x029F,0,0,266);
move(-1.90,-0.31,0.00);  object(0x029F,0,0,266);
move(11.45,-0.46,0.00);  object(0x029F,0,0,266);
move(-2.13,-0.35,0.00);  object(0x029F,0,0,266);
move(-1.14,-0.19,0.00);  object(0x029F,0,0,266);
move(-2.07,-0.34,0.00);  object(0x029F,0,0,266);
move(-1.60,-0.26,0.00);  object(0x029F,0,0,266);
move(-1.55,-0.25,0.00);  object(0x029F,0,0,266);
move(-2.07,-0.34,0.00);  object(0x029F,0,0,266);
move(-2.15,-0.35,0.00);  object(0x029F,0,0,266);
move(-1.49,-0.24,0.00);  object(0x029F,0,0,266);
move(-3.14,-0.51,0.00);  object(0x029F,0,0,266);
move(-2.08,-0.34,0.00);  object(0x029F,0,0,266);
move(-2.12,-0.35,0.00);  object(0x029F,0,0,266);
move(-1.82,-0.30,0.00);  object(0x029F,0,0,266);
move(-2.16,-0.35,0.00);  object(0x029F,0,0,266);
move(-2.96,-0.48,0.00);  object(0x029F,0,0,266);
move(-2.37,-0.39,0.00);  object(0x029F,0,0,266);
move(-3.26,-0.53,0.00);  object(0x029F,0,0,266);
move(-1.92,-0.31,0.00);  object(0x029F,0,0,266);
move(-2.44,-0.40,0.00);  object(0x029F,0,0,266);
move(-1.78,-0.29,0.00);  object(0x029F,0,0,266);
move(-2.07,-0.34,0.00);  object(0x029F,0,0,266);
move(-1.50,-0.25,0.00);  object(0x029F,0,0,266);
move(-1.50,-0.25,0.00);  object(0x029F,0,0,266);
move(-1.48,-0.24,0.00);  object(0x029F,0,0,266);
move(-0.89,-0.15,0.00);  object(0x029F,0,0,266);
move(4.51,0.74,0.00);  object(0x029F,0,0,266);
move(3.08,0.50,0.00);  object(0x029F,0,0,266);
move(2.66,0.44,0.00);  object(0x029F,0,0,266);
move(1.78,0.29,0.00);  object(0x029F,0,0,266);
move(1.78,0.29,0.00);  object(0x029F,0,0,266);
move(2.37,0.39,0.00);  object(0x029F,0,0,266);
move(2.07,0.34,0.00);  object(0x029F,0,0,266);
move(2.96,0.48,0.00);  object(0x029F,0,0,266);
move(-25.56,2.21,0.00);  object(0x029F,0,0,266);
move(3.97,0.65,0.00);  object(0x029F,0,0,266);
move(3.85,0.63,0.00);  object(0x029F,0,0,266);
move(4.15,0.68,0.00);  object(0x029F,0,0,266);
move(3.26,0.53,0.00);  object(0x029F,0,0,266);
move(0.89,0.15,0.00);  object(0x029F,0,0,266);
move(1.48,0.24,0.00);  object(0x029F,0,0,266);
move(1.78,0.29,0.00);  object(0x029F,0,0,266);
move(3.26,0.53,0.00);  object(0x029F,0,0,266);
move(1.48,0.24,0.00);  object(0x029F,0,0,266);
move(2.07,0.34,0.00);  object(0x029F,0,0,266);
move(3.55,0.58,0.00);  object(0x029F,0,0,266);
move(3.85,0.63,0.00);  object(0x029F,0,0,266);
move(2.96,0.48,0.00);  object(0x029F,0,0,266);
move(2.96,0.48,0.00);  object(0x029F,0,0,266);
move(2.07,0.34,0.00);  object(0x029F,0,0,266);
move(1.12,-0.22,0.00);  object(0x029F,0,0,266);
move(2.66,0.44,0.00);  object(0x029F,0,0,266);
move(3.26,0.53,0.00);  object(0x029F,0,0,266);
move(1.48,0.24,0.00);  object(0x029F,0,0,266);
move(0.82,0.13,0.00);  object(0x029F,0,0,266);
move(0.96,0.16,0.00);  object(0x029F,0,0,266);
move(1.48,0.24,0.00);  object(0x029F,0,0,266);
move(-1.68,-0.27,0.00);  object(0x029F,0,0,266);
move(-3.37,-0.55,0.00);  object(0x029F,0,0,266);
move(-1.23,-0.20,0.00);  object(0x029F,0,0,266);
move(-2.97,-0.49,0.00);  object(0x029F,0,0,266);
move(-3.26,-0.53,0.00);  object(0x029F,0,0,266);
move(-3.01,-0.49,0.00);  object(0x029F,0,0,266);
teleport(160,07, -677.04, 11.85)

#cheat Pez Despenser
static car1;
static car2;
static car3;
static car4;
static car5;
static getRidoftheCars;
touchCheck = getint(pobj + 0x150);
if(touchCheck && getshort(touchCheck + 0x56) < 279 && getshort(touchCheck + 0x56) > 150) {
if(!car5) {
car5 = touchCheck;
}
if(!car4&&car5&&touchCheck != car5) {
car4 = touchCheck;
}
if(!car3&&car5&&car4&&touchCheck != car4&&touchCheck != car5) {
car3 = touchCheck;
}
if(!car2&&car5&&car4&&car3&&touchCheck != car5&&touchCheck != car4&&touchCheck !=

car3) {
car2 = touchCheck;
}
if(!car1&&car5&&car4&&car3&&car2&&touchCheck != car5&&touchCheck !=

car4&&touchCheck != car3&&touchCheck != car2) {
car1 = touchCheck;
}
}
if(car4 && !car5) {
car5 = car4;
car4 = 0;
}
if(car3 && !car4 && car5) {
car4 = car3;
car3 = 0;
}
if(car3 && !car4 && !car5) {
car5 = car3;
car3 = 0;
}
if(car3 && !car4) {
car4 = car3;
car3 = 0;
}
if(car2 && !car3 && car4 && car5) {
car3 = car2;
car2 = 0;
}
if(car2 && !car3 && !car4 && car5) {
car4 = car2;
car2 = 0;
}
if(car2 && !car3 && !car4 && !car5) {
car5 = car2;
car2 = 0;
}
if(car2 && !car3 && car4 && car5) {
car3 = car2;
car2 = 0;
}
if(car1 && !car2 && car3 && car4 && car5) {
car2 = car1;
car1 = 0;
}
if(car1 && !car2 && !car3 && car4 && car5) {
car3 = car1;
car1 = 0;
}
if(car1 && !car2 && !car3 && !car4 && car5) {
car4 = car1;
car1 = 0;
}
if(car1 && !car2 && !car3 && !car4 && !car5) {
car5 = car1;
car1 = 0;
}
if(car1) {
setfloat(car1 + 0x30,  getfloat(pobj+0x30),  getfloat(pobj+0x34),  getfloat(pobj+0x38) + 2.5);
setfloat(car1 + 0x00,   getfloat(pobj),   getfloat(pobj+4),   getfloat(pobj+8));
setfloat(car1+0x10,   getfloat(pobj+0x10),   getfloat(pobj+0x14),   getfloat( pobj+0x18));
setfloat(car1+0x20,   getfloat(pobj+0x20),   getfloat(pobj+0x24),   getfloat( pobj+0x28));
setfloat(car1+0x140,   0,   0,   0);
setfloat(car1+0x70,   0,   0,   0);
}
if(car2) {
setfloat(car2 + 0x30,  getfloat(pobj+0x30),  getfloat(pobj+0x34),  getfloat(pobj+0x38) + 5);
setfloat(car2 + 0x00,   getfloat(pobj),   getfloat(pobj+4),   getfloat(pobj+8));
setfloat(car2+0x10,   getfloat(pobj+0x10),   getfloat(pobj+0x14),   getfloat( pobj+0x18));
setfloat(car2+0x20,   getfloat(pobj+0x20),   getfloat(pobj+0x24),   getfloat( pobj+0x28));
setfloat(car2+0x140,   0,   0,   0);
setfloat(car2+0x70,   0,   0,   0);
}
if(car3) {
setfloat(car3 + 0x30,  getfloat(pobj+0x30),  getfloat(pobj+0x34),  getfloat(pobj+0x38) + 7.5);
setfloat(car3 + 0x00,   getfloat(pobj),   getfloat(pobj+4),   getfloat(pobj+8));
setfloat(car3+0x10,   getfloat(pobj+0x10),   getfloat(pobj+0x14),   getfloat( pobj+0x18));
setfloat(car3+0x20,   getfloat(pobj+0x20),   getfloat(pobj+0x24),   getfloat( pobj+0x28));
setfloat(car3+0x140,   0,   0,   0);
setfloat(car3+0x70,   0,   0,   0);
}
if(car4) {
setfloat(car4 + 0x30,  getfloat(pobj+0x30),  getfloat(pobj+0x34),  getfloat(pobj+0x38) + 10);
setfloat(car4 + 0x00,   getfloat(pobj),   getfloat(pobj+4),   getfloat(pobj+8));
setfloat(car4+0x10,   getfloat(pobj+0x10),   getfloat(pobj+0x14),   getfloat( pobj+0x18));
setfloat(car4+0x20,   getfloat(pobj+0x20),   getfloat(pobj+0x24),   getfloat( pobj+0x28));
setfloat(car4+0x140,   0,   0,   0);
setfloat(car4+0x70,   0,   0,   0);
}
if(car5) {
setfloat(car5 + 0x30,  getfloat(pobj+0x30),  getfloat(pobj+0x34),  getfloat(pobj+0x38) + 12.5);
setfloat(car5 + 0x00,   getfloat(pobj),   getfloat(pobj+4),   getfloat(pobj+8));
setfloat(car5+0x10,   getfloat(pobj+0x10),   getfloat(pobj+0x14),   getfloat( pobj+0x18));
setfloat(car5+0x20,   getfloat(pobj+0x20),   getfloat(pobj+0x24),   getfloat( pobj+0x28));
setfloat(car5+0x140,   0,   0,   0);
setfloat(car5+0x70,   0,   0,   0);
}
if(press & CTRL_CIRCLE) {
if(car5) {
setfloat(car5+0x140,   getfloat(car5+0x140)+getfloat(car5+0x10)+0.1);
setfloat(car5+0x144,   getfloat(car5+0x144)+getfloat(car5+0x14)+0.1);
car5 = 0;
}
}
if(buttons & CTRL_RTRIGGER && press & CTRL_CIRCLE) {
if(car1) {
setfloat(car1+0x140,   getfloat(car1+0x140)+getfloat(car1+0x10)+0.1);
setfloat(car1+0x144,   getfloat(car1+0x144)+getfloat(car1+0x14)+0.1);
car1 = 0;
}
if(car2) {
setfloat(car2+0x140,   getfloat(car2+0x140)+getfloat(car2+0x10)+0.1);
setfloat(car2+0x144,   getfloat(car2+0x144)+getfloat(car2+0x14)+0.1);
car2 = 0;
}
if(car3) {
setfloat(car3+0x140,   getfloat(car3+0x140)+getfloat(car3+0x10)+0.1);
setfloat(car3+0x144,   getfloat(car3+0x144)+getfloat(car3+0x14)+0.1);
car3 = 0;
}
if(car4) {
setfloat(car4+0x140,   getfloat(car4+0x140)+getfloat(car4+0x10)+0.1);
setfloat(car4+0x144,   getfloat(car4+0x144)+getfloat(car4+0x14)+0.1);
car4 = 0;
}
if(car5) {
setfloat(car5+0x140,   getfloat(car5+0x140)+getfloat(car5+0x10)+0.1);
setfloat(car5+0x144,   getfloat(car5+0x144)+getfloat(car5+0x14)+0.1);
car5 = 0;
}
}
#off
car1 = car2 = car3 = car4 = car5 = 0;

#cheat safehouse garage dividers
moveto(261.23,-139.87,12.58);  object(0x1CB2,0,0,291);
move(0.43,1.80,-0.70);  object(0x1CB2,0,0,295);
move(-2.23,-4.76,0.49);  object(0x1CB2,0,0,295);
move(-1097.21,-1054.40,-0.36);  object(0x1CB2,0,0,250);
move(-269.97,1557.99,-0.35);  object(0x1CB2,0,0,267);

#cheat chunder whel replaced to GTA
moveto(337.71,-241.45,24.24);  object(0x1CB2,0,0,180);
move(0.03,-3.71,0.00);  object(0x1CB2,0,0,180);
move(8.97,3.73,0.00);  object(0x1CB2,0,0,180);
move(0.04,-4.07,0.00);  object(0x1CB2,0,0,180);
move(-9.74,9.50,0.41);  object(0x1C9F,270,35,88);
move(0.33,-1.05,-3.00);  object(0x1C9F,270,335,88);
move(-0.31,-3.03,2.60);  object(0x1C9F,270,230,88);
move(-0.13,1.46,0.50);  object(0x1C9F,270,90,97);
move(0.61,-4.46,-1.60);  object(0x1C9F,270,0,97);
move(0.00,0.00,-1.40);  object(0x1C9F,270,0,97);
move(0.00,0.00,4.50);  object(0x1C9F,270,270,97);
move(-0.25,-3.16,0.00);  object(0x1C9F,270,270,97);
move(0.35,-2.58,0.40);  object(0x1C9F,270,210,97);
move(-0.18,1.19,-1.90);  object(0x1C9F,270,210,97);
move(0.22,-1.59,1.80);  object(0x1C9F,270,155,97);
move(0.13,-0.99,-2.20);  object(0x1C9F,270,155,97);
move(-0.38,2.77,-0.60);  object(0x1C9F,270,85,97);
move(9.60,8.29,0.60);  object(0x1C9F,270,25,269);
move(0.02,-1.10,-2.30);  object(0x1C9F,270,25,269);
move(-0.08,4.50,2.00);  object(0x1C9F,270,335,269);
move(-0.02,1.10,-2.40);  object(0x1C9F,270,335,269);
move(0.03,-1.40,2.80);  object(0x1C9F,270,265,269);
move(0.07,-3.70,2.30);  object(0x1C9F,270,265,269);
move(0.05,-2.90,0.00);  object(0x1C9F,270,265,269);
move(0.00,0.00,-0.30);  object(0x1C9F,270,180,269);
move(0.00,0.00,-1.60);  object(0x1C9F,270,180,269);
move(0.14,-7.60,2.10);  object(0x1C9F,270,215,269);
move(0.03,-1.70,-2.70);  object(0x1C9F,270,140,269);
move(-0.10,5.20,-0.60);  object(0x1C9F,270,240,269);
move(0.06,-3.40,0.50);  object(0x1C9F,270,90,269);
teleport(328.90, -243.34, 11.20)

#cheat Ammunation Blips Straight ( Red )
setchar(0x96EBB80, 0xff, 0x00, 0x00);
setchar(0x96EBB84, 0xff, 0x00, 0x00);
setchar(0x96EBB88, 0xff, 0x00, 0x00);
setchar(0x96EBB8C, 0xff, 0x00, 0x00);


#cheat Ammunation Blips Straight ( Blue )
setchar(0x96EBB80, 0x00, 0x00, 0xff);
setchar(0x96EBB84, 0x00, 0x00, 0xff);
setchar(0x96EBB88, 0x00, 0x00, 0xff);
setchar(0x96EBB8C, 0x00, 0x00, 0xff);

#cheat Ammunation Blip out Line Color ( Blue )
setchar(0x96EBB74, 0x00, 0x00, 0xff);
setchar(0x96EBB78, 0x00, 0x00, 0xff);
setchar(0x96EBB7C, 0x00, 0x00, 0xff);

#cheat Bomb Shop Color ( Inside ) Blue
setchar(0x96EBD30, 0x00, 0x00, 0xff);

#cheat Bomb Shop Color ( inside 2 ) Blue
setchar(0x96EBD34, 0x00, 0x00, 0xff);

#cheat Bomb Shop Out line Colors Red
setchar(0x96EBD24, 0xff, 0x00, 0x00);
setchar(0x96EBD28, 0xff, 0x00, 0x00);

#cheat pay n` Spray Out Lines Blue
setchar(0x96EB5C4, 0x00, 0x00, 0xff);

#cheat Pay n` Spray main Inside Color ( Red )
setchar(0x96EB5C8, 0xff, 0x00, 0x00);

#cheat road to heaven
moveto(474.87,-368.88,11.42);  object(0x1CAA,0,0,102);
move(5.43,-4.32,2.40);  object(0x1CAA,0,0,128);
move(2.88,-5.28,2.20);  object(0x1CAA,0,0,128);
move(6.35,-0.63,2.10);  object(0x1CAA,0,0,128);
move(3.10,-7.09,2.50);  object(0x1CAA,0,0,128);
move(9.50,-0.93,3.20);  object(0x1CAA,0,0,128);
move(3.92,-7.86,3.20);  object(0x1CAA,0,0,128);
move(5.25,2.00,0.90);  object(0x1CAA,0,0,128);
move(2.32,-10.29,3.20);  object(0x1CAA,0,0,128);
move(1.91,-5.92,2.40);  object(0x1CAA,0,0,163);
move(-1.96,-5.97,2.60);  object(0x1CAA,0,0,203);
move(1.20,-4.73,2.00);  object(0x1CAA,0,0,158);
move(5.31,-4.76,2.50);  object(0x1CAA,0,0,118);
move(-49.43,58.16,-30.80);  object(0x1CAA,0,0,54);
move(52.17,-63.13,32.97);  object(0x1CAA,0,0,171);
move(6.39,-2.87,2.10);  object(0x1CAA,0,0,128);
move(7.54,0.25,2.70);  object(0x1CAA,0,0,65);
move(3.71,7.47,2.37);  object(0x1CAA,0,0,22);
move(-2.03,5.89,2.40);  object(0x1CAA,0,0,328);
move(2.43,8.75,2.30);  object(0x1CAA,0,0,331);
move(-7.81,1.65,2.40);  object(0x1CAA,0,0,292);
move(-2.42,6.09,1.90);  object(0x1CAA,0,0,292);
move(-7.91,-1.11,2.90);  object(0x1CAA,0,0,292);
move(-6.33,-1.73,2.10);  object(0x1CAA,0,0,292);
move(-9.09,-3.42,3.70);  object(0x1CAA,0,0,292);
move(-8.48,-0.56,2.70);  object(0x1CAA,0,0,292);
move(16.44,1.52,-5.66);  object(0x1CAA,0,0,284);
move(-18.31,7.26,7.70);  object(0x1CAA,0,0,293);
move(-3.65,5.76,2.40);  object(0x1CAA,0,0,293);
move(-9.22,-3.75,2.60);  object(0x1CAA,0,0,293);
move(-7.79,-3.15,2.50);  object(0x1CAA,0,0,293);
move(-6.42,-1.65,2.10);  object(0x1CAA,0,0,293);
move(-4.05,5.29,2.30);  object(0x1CAA,0,0,293);
move(-1.42,7.61,2.10);  object(0x1CAA,0,0,348);
move(-4.09,6.17,2.80);  object(0x1CAA,0,0,317);
move(-0.15,4.93,1.90);  object(0x1CAA,0,0,359);
move(-4.48,4.46,2.10);  object(0x1CAA,0,0,306);
move(-2.40,6.20,2.10);  object(0x1CAA,0,0,339);
move(-7.77,1.86,1.20);  object(0x1CAA,0,0,339);
move(-7.43,4.19,2.10);  object(0x1CAA,0,0,339);
move(-1.14,6.66,1.60);  object(0x1CAA,0,0,350);
move(-8.56,4.97,2.00);  object(0x1CAA,0,0,350);
move(6.63,8.07,1.60);  object(0x1CAA,0,0,350);
move(6.22,8.72,1.20);  object(0x1CAA,0,0,350);
move(6.56,6.70,2.10);  object(0x1CAA,0,0,350);
move(2.97,8.72,2.90);  object(0x1CAA,0,0,350);
move(-8.51,5.85,2.70);  object(0x1CAA,0,0,350);
move(7.35,7.47,2.40);  object(0x1CAA,0,0,350);
move(-8.99,5.67,2.80);  object(0x1CAA,0,0,350);
move(-1.14,6.65,3.00);  object(0x1CAA,0,0,350);
move(-1.44,7.84,-0.20);  object(0x1CAA,0,0,170);
move(-1.21,7.05,-3.20);  object(0x1CAA,0,0,170);
move(-1.34,7.81,-3.50);  object(0x1CAA,0,0,170);
move(-1.27,7.41,-3.50);  object(0x1CAA,0,0,170);
move(-1.82,10.64,-3.90);  object(0x1CAA,0,0,170);
move(0.30,-1.74,0.20);  object(0x1CAA,0,0,170);
move(-1.80,10.52,-3.80);  object(0x1CAA,0,0,170);
move(-1.33,8.45,-3.60);  object(0x1CAA,0,0,172);
move(-1.51,7.87,-3.40);  object(0x1CAA,0,0,168);
teleport(461.30,-367.80, 10.18)

#cheat bike balance beam
moveto(-728.61,415.27,192.27);  object(0x1CA4,0,0,305);
move(-0.16,0.11,0.00);  object(0x1CA4,0,0,305);
move(2.46,3.56,0.00);  object(0x1CA4,0,0,300);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,300);
move(2.29,3.84,0.00);  object(0x1CA4,0,0,300);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,300);
move(2.01,3.42,-0.20);  object(0x1CA4,0,0,300);
move(0.08,-0.06,0.00);  object(0x1CA4,0,0,300);
move(-4.51,-7.52,0.07);  object(0x1CA4,0,0,301);
move(2.41,3.76,0.10);  object(0x1CA4,0,0,301);
move(2.28,3.92,-0.10);  object(0x1CA4,0,0,301);
move(-0.16,0.12,0.00);  object(0x1CA4,0,0,301);
move(-1.43,-2.27,0.00);  object(0x1CA4,0,0,301);
move(-1.65,-2.91,0.00);  object(0x1CA4,0,0,301);
move(-1.78,-3.08,0.00);  object(0x1CA4,0,0,301);
move(6.96,11.59,0.00);  object(0x1CA4,0,0,301);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,301);
move(0.16,-0.12,0.00);  object(0x1CA4,0,0,301);
move(2.17,3.78,0.00);  object(0x1CA4,0,0,301);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,301);
move(0.16,-0.12,0.00);  object(0x1CA4,0,0,301);
move(2.10,3.87,0.00);  object(0x1CA4,0,0,302);
move(0.16,-0.12,0.00);  object(0x1CA4,0,0,302);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,302);
move(2.39,3.79,0.00);  object(0x1CA4,0,0,302);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,302);
move(0.16,-0.12,0.00);  object(0x1CA4,0,0,302);
move(2.27,3.79,0.00);  object(0x1CA4,0,0,302);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,302);
move(0.16,-0.12,0.00);  object(0x1CA4,0,0,302);
move(2.27,3.63,0.00);  object(0x1CA4,0,0,302);
move(-0.16,0.12,0.00);  object(0x1CA4,0,0,302);
move(0.08,-0.06,0.00);  object(0x1CA4,0,0,302);
move(2.11,3.25,0.00);  object(0x1CA4,0,0,302);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,302);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,302);
move(2.32,3.37,0.00);  object(0x1CA4,0,0,302);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,302);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,302);
move(2.23,3.41,0.00);  object(0x1CA4,0,0,302);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,302);
move(0.16,-0.12,0.00);  object(0x1CA4,0,0,302);
move(2.26,3.79,0.00);  object(0x1CA4,0,0,302);
move(-0.09,0.05,0.00);  object(0x1CA4,0,0,302);
move(0.16,-0.12,0.00);  object(0x1CA4,0,0,302);
move(2.24,3.47,0.03);  object(0x1CA4,0,0,304);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,304);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,304);
move(2.55,3.46,0.00);  object(0x1CA4,0,0,304);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,304);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,304);
move(2.65,3.58,0.00);  object(0x1CA4,0,0,304);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,304);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,304);
move(2.61,3.53,0.00);  object(0x1CA4,0,0,304);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,304);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,304);
move(2.48,3.37,0.10);  object(0x1CA4,0,0,304);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,304);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,304);
move(2.53,3.44,0.00);  object(0x1CA4,0,0,304);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,304);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,304);
move(2.42,3.19,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(2.64,3.45,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(0.15,-0.13,0.00);  object(0x1CA4,0,0,306);
move(2.54,3.48,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(2.62,3.28,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(2.74,3.41,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(2.64,3.29,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(2.66,3.47,0.00);  object(0x1CA4,0,0,306);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,306);
move(-0.15,0.13,0.00);  object(0x1CA4,0,0,306);
move(2.72,3.39,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(2.47,3.10,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(2.39,3.28,0.00);  object(0x1CA4,0,0,307);
move(0.15,-0.13,0.00);  object(0x1CA4,0,0,307);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,307);
move(2.64,3.27,0.00);  object(0x1CA4,0,0,307);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,307);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,307);
move(2.75,3.39,0.00);  object(0x1CA4,0,0,307);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,307);
move(-0.15,0.13,0.00);  object(0x1CA4,0,0,307);
move(2.72,3.51,0.00);  object(0x1CA4,0,0,307);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,307);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,307);
move(2.67,3.61,0.00);  object(0x1CA4,0,0,307);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,307);
move(0.15,-0.13,0.00);  object(0x1CA4,0,0,307);
move(2.50,3.57,0.00);  object(0x1CA4,0,0,307);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,307);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,307);
move(2.60,3.68,0.00);  object(0x1CA4,0,0,307);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,307);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,307);
move(2.64,3.57,0.00);  object(0x1CA4,0,0,307);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,307);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,307);
move(2.81,3.32,0.00);  object(0x1CA4,0,0,307);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,307);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,307);
move(2.83,3.48,0.00);  object(0x1CA4,0,0,307);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,307);
move(0.15,-0.13,0.00);  object(0x1CA4,0,0,307);
move(2.53,3.75,0.00);  object(0x1CA4,0,0,307);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,307);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,307);
move(2.32,3.36,0.00);  object(0x1CA4,0,0,307);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,307);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,307);
move(2.60,3.53,0.00);  object(0x1CA4,0,0,307);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,307);
move(0.15,-0.13,0.00);  object(0x1CA4,0,0,307);
move(2.50,3.41,0.00);  object(0x1CA4,0,0,307);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,307);
move(0.15,-0.13,0.00);  object(0x1CA4,0,0,307);
move(2.47,3.37,0.00);  object(0x1CA4,0,0,307);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,307);
move(0.15,-0.13,0.00);  object(0x1CA4,0,0,307);
move(2.50,3.57,0.00);  object(0x1CA4,0,0,307);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,307);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,307);
move(2.76,3.24,1.30);  object(0x1CA4,85,0,306);
move(-1.68,1.09,0.00);  object(0x1CA4,85,0,306);
move(3.65,-2.67,-0.40);  object(0x1CA4,85,0,306);
teleport(-734.23, 405.61, 194.90)

#cheat easter egg 1
teleport(-915.48,  -842.81,  12.18);
#cheat easter egg 2
teleport(-728.71,  -1417.24,  12.60);
#cheat easter egg 3
teleport(-979.90,  267.10,  8.81);
#cheat easter egg 4
teleport(415.27,  203.02,  11.95);
#cheat easter egg 5
teleport(79.12,  1092.96,  32.60);
#cheat easter egg 6
teleport(-1552.07,  1258.80,  8.73);
#cheat easter egg 7
teleport(-707.99,  1301.08,  11.76);
#cheat easter egg 8
teleport(-0.68,  -1233.04,  23.47);
#cheat easter egg 9
teleport(358.45,  1103.05,  -193.60);
#cheat easter egg 10
teleport(302.95,  -453.77,  5.74); 

#cheat tallest building (floored)
moveto(-382.57,  1293.13,  372.04);  object(0x1CA4,  90,  0,  126);
move(1.73,  -1.24,  -0.02);  object(0x1CA4,  90,  0,  126);
move(2.12,  -1.52,  0.05);  object(0x1CA4,  90,  0,  126);
move(-2.26,  -3.17,  -0.01);  object(0x1CA4,  90,  0,  126);
move(-1.77,  0.90,  -0.07);  object(0x1CA4,  90,  0,  126);
move(-2.28,  1.64,  0.06);  object(0x1CA4,  90,  0,  126);
move(2.46,  -1.77,  0.02);  object(0x1CA4,  90,  0,  326);
move(13.08,  -19.38,  0.00);  object(0x1CA4,  90,  0,  326);
move(6.84,  8.11,  0.00);  object(0x1CA4,  90,  0,  43);
move(2.30,  -1.65,  0.00);  object(0x1CA4,  90,  0,  208);
move(-1.31,  -2.42,  0.00);  object(0x1CA4,  90,  0,  208);
move(0.18,  6.87,  0.00);  object(0x1CA4,  90,  0,  2);
move(-1.68,  2.19,  0.00);  object(0x1CA4,  90,  0,  322);
move(-2.27,  2.91,  0.00);  object(0x1CA4,  90,  0,  322);
move(-2.03,  2.60,  0.00);  object(0x1CA4,  90,  0,  322);
move(-3.87,  4.98,  0.00);  object(0x1CA4,  90,  0,  322);
move(-4.91,  -0.06,  0.00);  object(0x1CA4,  90,  0,  270);
move(-11.99,  -4.44,  0.00);  object(0x1CA4,  90,  0,  243);
move(-6.20,  -6.61,  0.00);  object(0x1CA4,  90,  0,  178);
move(-3.70,  -0.14,  0.00);  object(0x1CA4,  90,  0,  178);
move(-0.50,  2.71,  0.00);  object(0x1CA4,  90,  0,  269);
move(0.97,  3.10,  0.00);  object(0x1CA4,  90,  0,  304);
move(1.99,  2.29,  0.00);  object(0x1CA4,  90,  0,  310);
move(0.95,  1.16,  0.00);  object(0x1CA4,  90,  0,  310);
move(2.04,  2.47,  0.00);  object(0x1CA4,  90,  0,  310);
move(2.48,  3.01,  0.00);  object(0x1CA4,  90,  0,  310);
move(2.73,  3.32,  0.00);  object(0x1CA4,  90,  0,  310);
move(2.29,  2.78,  0.00);  object(0x1CA4,  90,  0,  310);
move(1.97,  2.39,  0.00);  object(0x1CA4,  90,  0,  310);
move(2.61,  3.16,  0.00);  object(0x1CA4,  90,  0,  310);
move(1.78,  2.16,  0.00);  object(0x1CA4,  90,  0,  310);
move(1.97,  2.39,  0.00);  object(0x1CA4,  90,  0,  310);
move(0.77,  1.95,  0.00);  object(0x1CA4,  90,  0,  310);
move(2.84,  -1.75,  0.00);  object(0x1CA4,  90,  0,  232);
move(2.03,  -3.11,  0.00);  object(0x1CA4,  90,  0,  232);
move(1.87,  -2.73,  0.00);  object(0x1CA4,  90,  0,  232);
move(2.02,  -2.99,  0.00);  object(0x1CA4,  90,  0,  232);
move(1.50,  -2.13,  0.00);  object(0x1CA4,  90,  0,  232);
move(2.78,  -2.96,  0.00);  object(0x1CA4,  90,  0,  220);
move(1.91,  -1.77,  0.00);  object(0x1CA4,  90,  0,  220);
move(2.78,  -2.72,  0.00);  object(0x1CA4,  90,  0,  224);
move(2.83,  -2.57,  0.00);  object(0x1CA4,  90,  0,  222);
move(0.45,  -0.40,  0.00);  object(0x1CA4,  90,  0,  222);
move(3.28,  -2.21,  0.00);  object(0x1CA4,  90,  0,  213);
move(2.94,  -1.90,  0.00);  object(0x1CA4,  90,  0,  213);
move(3.29,  -2.08,  0.00);  object(0x1CA4,  90,  0,  208);
move(3.27,  -1.72,  0.00);  object(0x1CA4,  90,  0,  208);
move(3.01,  -1.58,  0.00);  object(0x1CA4,  90,  0,  208);
move(1.59,  -0.84,  0.00);  object(0x1CA4,  90,  0,  208);
move(-0.20,  -1.86,  0.00);  object(0x1CA4,  90,  0,  144);
move(-3.15,  -2.29,  0.00);  object(0x1CA4,  90,  0,  144);
move(-2.87,  -1.83,  0.00);  object(0x1CA4,  90,  0,  144);
move(-2.77,  -1.64,  0.00);  object(0x1CA4,  90,  0,  144);
move(-2.02,  -1.47,  0.00);  object(0x1CA4,  90,  0,  144);
move(-2.75,  -2.00,  0.00);  object(0x1CA4,  90,  0,  144);
move(-2.60,  -1.52,  0.00);  object(0x1CA4,  90,  0,  144);
move(-2.02,  -1.47,  0.00);  object(0x1CA4,  90,  0,  144);
move(-2.07,  -1.41,  0.00);  object(0x1CA4,  90,  0,  144);
move(-1.86,  -1.35,  0.00);  object(0x1CA4,  90,  0,  144);
move(-2.30,  -1.09,  0.00);  object(0x1CA4,  90,  0,  144);
move(-2.10,  -1.53,  0.00);  object(0x1CA4,  90,  0,  144);
move(-2.02,  -1.47,  0.00);  object(0x1CA4,  90,  0,  144);
move(-3.21,  -1.11,  0.00);  object(0x1CA4,  90,  0,  176);
move(-3.50,  -0.13,  0.00);  object(0x1CA4,  90,  0,  176);
move(-0.44,  2.64,  0.00);  object(0x1CA4,  90,  0,  266);
move(-0.21,  2.69,  0.00);  object(0x1CA4,  90,  0,  266);
move(0.39,  3.94,  0.00);  object(0x1CA4,  90,  0,  266);
move(-0.09,  3.60,  0.00);  object(0x1CA4,  90,  0,  266);
move(-0.08,  4.11,  0.00);  object(0x1CA4,  90,  0,  266);
move(-0.15,  1.89,  0.00);  object(0x1CA4,  90,  0,  266);
move(-0.45,  3.52,  0.00);  object(0x1CA4,  90,  0,  259);
move(-1.84,  0.47,  0.00);  object(0x1CA4,  90,  0,  180);
move(-2.30,  0.01,  0.00);  object(0x1CA4,  90,  0,  180);
move(-3.00,  0.01,  0.00);  object(0x1CA4,  90,  0,  180);
move(-2.70,  0.01,  0.00);  object(0x1CA4,  90,  0,  180);
move(-2.50,  0.01,  0.00);  object(0x1CA4,  90,  0,  180);
move(-3.90,  0.02,  0.00);  object(0x1CA4,  90,  0,  180);
move(0.01,  1.58,  0.00);  object(0x1CA4,  90,  0,  180);
move(0.01,  2.04,  0.00);  object(0x1CA4,  90,  0,  180);
move(-2.80,  0.01,  0.00);  object(0x1CA4,  90,  0,  180);
move(-0.01,  -1.25,  0.00);  object(0x1CA4,  90,  0,  180);
move(-2.30,  0.01,  0.00);  object(0x1CA4,  90,  0,  180);
move(0.02,  3.97,  0.00);  object(0x1CA4,  90,  0,  180);
move(-0.01,  -1.69,  0.00);  object(0x1CA4,  90,  0,  180);
move(3.61,  3.09,  0.00);  object(0x1CA4,  90,  0,  180);
move(-0.40,  -0.06,  0.00);  object(0x1CA4,  90,  0,  181);
move(-0.06,  -2.41,  0.00);  object(0x1CA4,  90,  0,  181);
move(1.60,  -0.04,  0.00);  object(0x1CA4,  90,  0,  181);
move(0.13,  5.40,  0.00);  object(0x1CA4,  90,  0,  181);
move(-0.63,  -1.19,  0.00);  object(0x1CA4,  90,  0,  181);
move(3.50,  -0.09,  0.00);  object(0x1CA4,  90,  0,  181);
move(-0.17,  -6.91,  0.00);  object(0x1CA4,  90,  0,  181);
move(0.04,  1.62,  0.00);  object(0x1CA4,  90,  0,  181);
move(0.07,  2.98,  0.00);  object(0x1CA4,  90,  0,  181);
move(0.13,  5.15,  0.00);  object(0x1CA4,  90,  0,  181);
move(-1.10,  0.03,  0.00);  object(0x1CA4,  90,  0,  181);
move(0.04,  1.71,  0.00);  object(0x1CA4,  90,  0,  181);
move(4.10,  -0.10,  0.00);  object(0x1CA4,  90,  0,  181);
move(-0.05,  -2.23,  0.00);  object(0x1CA4,  90,  0,  181);
move(-0.17,  -6.74,  0.00);  object(0x1CA4,  90,  0,  181);
move(1.05,  -2.13,  0.00);  object(0x1CA4,  90,  0,  181);
move(1.91,  0.55,  0.00);  object(0x1CA4,  90,  0,  181);
move(1.68,  -0.94,  0.00);  object(0x1CA4,  90,  0,  181);
move(1.70,  -0.04,  0.00);  object(0x1CA4,  90,  0,  181);
move(0.06,  2.59,  0.00);  object(0x1CA4,  90,  0,  181);
move(0.04,  1.50,  0.00);  object(0x1CA4,  90,  0,  181);
move(2.66,  2.25,  0.00);  object(0x1CA4,  90,  0,  181);
move(3.60,  -0.09,  0.00);  object(0x1CA4,  90,  0,  181);
move(-0.06,  -2.57,  0.00);  object(0x1CA4,  90,  0,  181);
move(-2.50,  0.06,  0.00);  object(0x1CA4,  90,  0,  181);
move(-0.07,  -2.89,  0.00);  object(0x1CA4,  90,  0,  181);
move(0.18,  7.82,  0.00);  object(0x1CA4,  90,  0,  181);
move(0.05,  2.20,  0.00);  object(0x1CA4,  90,  0,  181);
move(-3.20,  0.06,  0.00);  object(0x1CA4,  90,  0,  181);
move(-3.87,  1.64,  0.00);  object(0x1CA4,  90,  0,  181);
move(0.04,  2.12,  0.00);  object(0x1CA4,  90,  0,  181);
move(0.05,  2.50,  0.00);  object(0x1CA4,  90,  0,  181);
move(-2.80,  0.05,  0.00);  object(0x1CA4,  90,  0,  181);
move(-0.05,  -2.47,  0.00);  object(0x1CA4,  90,  0,  181);
move(-1.63,  -1.43,  0.00);  object(0x1CA4,  90,  0,  181);
move(7.70,  -0.15,  0.00);  object(0x1CA4,  90,  0,  181);
move(3.30,  -0.06,  0.00);  object(0x1CA4,  90,  0,  181);
move(3.10,  -0.06,  0.00);  object(0x1CA4,  90,  0,  181);
move(3.10,  -0.06,  0.00);  object(0x1CA4,  90,  0,  181);
move(2.80,  -0.05,  0.00);  object(0x1CA4,  90,  0,  181);
move(-0.05,  -2.59,  0.00);  object(0x1CA4,  90,  0,  181);
move(-0.06,  -3.11,  0.00);  object(0x1CA4,  90,  0,  181);
move(0.02,  0.90,  0.00);  object(0x1CA4,  90,  0,  181);
move(-3.10,  0.06,  0.00);  object(0x1CA4,  90,  0,  181);
move(0.04,  2.34,  0.00);  object(0x1CA4,  90,  0,  181);
move(-1.90,  0.04,  0.00);  object(0x1CA4,  90,  0,  181);
move(-0.09,  -4.92,  0.00);  object(0x1CA4,  90,  0,  181);
move(2.80,  -0.05,  0.00);  object(0x1CA4,  90,  0,  181);
move(-0.17,  -8.96,  0.00);  object(0x1CA4,  90,  0,  181);
move(11.80,  1.53,  0.00);  object(0x1CA4,  90,  0,  173);
move(-0.71,  5.49,  0.00);  object(0x1CA4,  90,  0,  173);
move(-4.91,  3.46,  0.00);  object(0x1CA4,  90,  0,  181);
move(0.08,  4.24,  0.00);  object(0x1CA4,  90,  0,  181);
move(-0.04,  -2.25,  0.00);  object(0x1CA4,  90,  0,  181);
move(3.59,  -0.76,  0.00);  object(0x1CA4,  90,  0,  181);
move(-0.04,  -2.13,  0.00);  object(0x1CA4,  90,  0,  181);
move(-0.10,  -5.10,  0.00);  object(0x1CA4,  90,  0,  181);
move(3.60,  -0.07,  0.00);  object(0x1CA4,  90,  0,  181);
move(0.05,  2.40,  0.00);  object(0x1CA4,  90,  0,  181);
move(-0.57,  1.81,  0.00);  object(0x1CA4,  90,  0,  181);
move(3.70,  -5.48,  0.00);  object(0x1CA4,  90,  0,  326);
move(-0.77,  2.33,  0.00);  object(0x1CA4,  90,  0,  344);
move(-0.07,  -4.10,  0.00);  object(0x1CA4,  90,  0,  344);
move(-18.25,  -5.26,  0.00);  object(0x1CA4,  90,  0,  344);
move(-0.96,  3.31,  0.00);  object(0x1CA4,  90,  0,  344);
move(0.47,  -1.64,  0.00);  object(0x1CA4,  90,  0,  344);
move(-1.26,  4.37,  0.00);  object(0x1CA4,  90,  0,  344);
move(1.45,  1.83,  0.00);  object(0x1CA4,  90,  0,  344);
move(-4.01,  13.91,  0.00);  object(0x1CA4,  90,  0,  344);
move(-0.67,  2.31,  0.00);  object(0x1CA4,  90,  0,  344);
move(-0.63,  1.70,  0.00);  object(0x1CA4,  90,  0,  339);
move(-1.61,  -1.96,  0.00);  object(0x1CA4,  90,  0,  246);
move(-1.65,  3.64,  0.00);  object(0x1CA4,  90,  0,  246);
move(-2.04,  -0.92,  0.00);  object(0x1CA4,  90,  0,  246);
move(10.24,  4.65,  0.00);  object(0x1CA4,  90,  0,  246);
move(-2.15,  -0.98,  0.00);  object(0x1CA4,  90,  0,  246);
move(-2.26,  -1.02,  0.00);  object(0x1CA4,  90,  0,  246);
move(-1.99,  -0.90,  0.00);  object(0x1CA4,  90,  0,  246);
move(0.26,  2.10,  0.00);  object(0x1CA4,  90,  0,  246);
move(2.14,  2.07,  0.00);  object(0x1CA4,  90,  0,  246);
move(1.08,  1.26,  0.00);  object(0x1CA4,  90,  0,  246);
move(3.18,  -7.01,  0.00);  object(0x1CA4,  90,  0,  246);
move(-1.37,  -0.62,  0.00);  object(0x1CA4,  90,  0,  246);
move(1.04,  -3.15,  0.00);  object(0x1CA4,  90,  0,  246);
move(1.66,  0.75,  0.00);  object(0x1CA4,  90,  0,  246);
move(0.70,  -1.55,  0.00);  object(0x1CA4,  90,  0,  246);
move(2.19,  0.99,  0.00);  object(0x1CA4,  90,  0,  246);
move(0.70,  -1.55,  0.00);  object(0x1CA4,  90,  0,  246);
move(-2.64,  5.83,  0.00);  object(0x1CA4,  90,  0,  246);
move(0.74,  -1.64,  0.00);  object(0x1CA4,  90,  0,  246);
move(7.68,  -14.41,  0.00);  object(0x1CA4,  90,  0,  246);
move(-1.82,  -0.82,  0.00);  object(0x1CA4,  90,  0,  246);
move(-1.44,  0.99,  0.00);  object(0x1CA4,  90,  0,  246);
move(-1.75,  -0.79,  0.00);  object(0x1CA4,  90,  0,  246);
move(-2.73,  -1.24,  0.00);  object(0x1CA4,  90,  0,  246);
move(-0.40,  -3.26,  0.00);  object(0x1CA4,  90,  0,  246);
move(2.29,  -0.17,  0.00);  object(0x1CA4,  90,  0,  246);
move(2.58,  1.17,  0.00);  object(0x1CA4,  90,  0,  246);
move(2.99,  -0.51,  0.00);  object(0x1CA4,  90,  0,  246);
move(2.93,  -1.31,  0.00);  object(0x1CA4,  90,  0,  246);
move(1.40,  -3.10,  0.00);  object(0x1CA4,  90,  0,  246);
move(-2.62,  -1.19,  0.00);  object(0x1CA4,  90,  0,  246);
move(-5.37,  1.68,  0.00);  object(0x1CA4,  90,  0,  329);
move(-2.49,  -1.48,  0.00);  object(0x1CA4,  90,  0,  329);
move(1.13,  -1.89,  0.00);  object(0x1CA4,  90,  0,  329);
move(1.27,  -0.96,  0.00);  object(0x1CA4,  90,  0,  329);
move(-3.61,  -0.39,  0.00);  object(0x1CA4,  90,  0,  329);
move(-2.44,  -0.40,  0.00);  object(0x1CA4,  90,  0,  329);
move(1.38,  -2.32,  0.00);  object(0x1CA4,  90,  0,  329);
move(2.79,  0.40,  0.00);  object(0x1CA4,  90,  0,  329);
move(1.46,  0.87,  0.00);  object(0x1CA4,  90,  0,  329);
move(0.93,  -1.56,  0.00);  object(0x1CA4,  90,  0,  329);
move(1.26,  -2.11,  0.00);  object(0x1CA4,  90,  0,  329);
move(0.92,  -1.55,  0.00);  object(0x1CA4,  90,  0,  329);
move(1.39,  -2.32,  0.00);  object(0x1CA4,  90,  0,  329);
move(-3.15,  -1.35,  0.00);  object(0x1CA4,  90,  0,  329);
move(-1.23,  2.06,  0.00);  object(0x1CA4,  90,  0,  329);
move(-1.57,  2.64,  0.00);  object(0x1CA4,  90,  0,  329);
move(0.32,  -0.53,  0.00);  object(0x1CA4,  90,  0,  329);
move(-2.66,  -1.59,  0.00);  object(0x1CA4,  90,  0,  329);
move(-2.32,  3.89,  0.00);  object(0x1CA4,  90,  0,  329);
move(1.15,  -1.93,  0.00);  object(0x1CA4,  90,  0,  329);
move(-1.57,  -2.05,  0.00);  object(0x1CA4,  90,  0,  329);
move(1.41,  -2.36,  0.00);  object(0x1CA4,  90,  0,  329);
move(-1.03,  -0.61,  0.00);  object(0x1CA4,  90,  0,  329);
move(0.72,  -2.38,  0.00);  object(0x1CA4,  90,  0,  329);
move(2.49,  1.48,  0.00);  object(0x1CA4,  90,  0,  329);
move(-0.89,  1.50,  0.00);  object(0x1CA4,  90,  0,  329);
move(1.75,  -2.35,  0.00);  object(0x1CA4,  90,  0,  329);
move(-1.89,  -1.13,  0.00);  object(0x1CA4,  90,  0,  329);
move(11.77,  7.01,  0.00);  object(0x1CA4,  90,  0,  329);
move(2.92,  1.74,  0.00);  object(0x1CA4,  90,  0,  329);
move(2.15,  1.28,  0.00);  object(0x1CA4,  90,  0,  329);
move(2.83,  1.69,  0.00);  object(0x1CA4,  90,  0,  329);
move(2.70,  2.31,  0.00);  object(0x1CA4,  90,  0,  329);
move(2.41,  1.43,  0.00);  object(0x1CA4,  90,  0,  329);
move(3.43,  2.05,  0.00);  object(0x1CA4,  90,  0,  329);
move(-1.21,  2.03,  0.00);  object(0x1CA4,  90,  0,  329);
move(-2.83,  -1.69,  0.00);  object(0x1CA4,  90,  0,  329);
move(-3.01,  -1.79,  0.00);  object(0x1CA4,  90,  0,  329);
move(-1.53,  1.97,  0.00);  object(0x1CA4,  90,  0,  329);
move(-0.93,  1.56,  0.00);  object(0x1CA4,  90,  0,  329);
move(2.75,  1.64,  0.00);  object(0x1CA4,  90,  0,  329);
move(-1.41,  2.36,  0.00);  object(0x1CA4,  90,  0,  329);
move(2.15,  -3.61,  0.00);  object(0x1CA4,  90,  0,  329);
move(1.37,  0.82,  0.00);  object(0x1CA4,  90,  0,  329);
move(-6.96,  -4.14,  0.00);  object(0x1CA4,  90,  0,  329);
move(-1.21,  2.04,  0.00);  object(0x1CA4,  90,  0,  329);
move(2.61,  -4.37,  0.00);  object(0x1CA4,  90,  0,  329);
move(0.32,  -0.54,  0.00);  object(0x1CA4,  90,  0,  329);
move(-3.18,  -1.89,  0.00);  object(0x1CA4,  90,  0,  329);
move(-1.53,  2.57,  0.00);  object(0x1CA4,  90,  0,  329);
move(0.40,  -0.68,  0.00);  object(0x1CA4,  90,  0,  329);
move(-2.66,  -1.59,  0.00);  object(0x1CA4,  90,  0,  329);
move(-1.85,  -3.15,  0.00);  object(0x1CA4,  90,  0,  329);
move(2.32,  1.38,  0.00);  object(0x1CA4,  90,  0,  329);
teleport(-364.26,  1283.05,  374.50);

#cheat Teleport to Move boat World
teleport(-785.42, -824.36, 11.07);

#cheat vice statue
moveto(-235.88,-1475.55,5.72);  object(0x1CB2,90,90,194);
move(1.27,5.10,0.00);  object(0x1CB2,90,90,194);
move(0.77,-2.55,2.10);  object(0x1C93,90,0,192);
move(-2.25,0.48,0.00);  object(0x1C93,90,0,192);
move(-0.45,-2.10,0.00);  object(0x1C93,90,0,192);
move(2.25,-0.48,0.00);  object(0x1C93,90,0,192);
move(0.87,4.04,0.00);  object(0x1C93,90,0,192);
move(-2.25,0.48,0.00);  object(0x1C93,90,0,192);
move(0.00,0.00,4.50);  object(0x1C93,90,0,192);
move(2.25,-0.48,0.00);  object(0x1C93,90,0,192);
move(-0.45,-2.09,0.00);  object(0x1C93,90,0,192);
move(-2.25,0.48,0.00);  object(0x1C93,90,0,192);
move(-0.30,-1.80,0.00);  object(0x1C93,90,0,14);
move(2.13,-0.54,0.00);  object(0x1C93,90,0,14);
move(0.00,0.00,4.40);  object(0x1C93,90,0,14);
move(-2.13,0.54,0.00);  object(0x1C93,90,0,14);
move(0.52,2.05,0.00);  object(0x1C93,90,0,14);
move(2.13,-0.54,0.00);  object(0x1C93,90,0,14);
move(0.23,1.66,0.00);  object(0x1C93,90,0,193);
move(-1.53,0.41,0.00);  object(0x1C93,90,0,188);
move(-0.44,0.33,0.10);  object(0x1C93,90,0,193);
move(0.00,0.00,4.50);  object(0x1C93,90,0,193);
move(1.80,-0.66,-0.10);  object(0x1C93,90,0,193);
move(-0.52,-2.22,0.00);  object(0x1C93,90,0,193);
move(-1.85,0.43,0.00);  object(0x1C93,90,0,193);
move(-0.32,-1.08,0.00);  object(0x1C93,90,0,16);
move(2.11,-0.62,0.00);  object(0x1C93,90,0,16);
move(0.00,0.00,4.10);  object(0x1C93,90,0,16);
move(-1.92,0.56,0.00);  object(0x1C93,90,0,16);
move(0.14,1.19,0.00);  object(0x1C93,90,0,16);
move(2.02,-0.59,0.00);  object(0x1C93,90,0,16);
move(0.64,2.24,0.00);  object(0x1C93,90,0,192);
move(-1.96,0.40,0.00);  object(0x1C93,90,0,192);
move(-2.16,0.02,-18.90);  object(0x1C93,0,0,195);
move(-0.04,-0.06,2.04);  object(0x1C93,0,0,197);
move(4.01,2.09,-2.15);  object(0x1C93,0,0,102);
move(0.00,0.00,2.10);  object(0x1C93,0,0,102);
move(-1.83,0.37,0.09);  object(0x1C93,0,0,102);
move(0.00,0.00,-1.70);  object(0x1C93,0,0,102);
move(3.73,-3.82,0.14);  object(0x1C93,0,0,15);
move(0.00,0.00,1.50);  object(0x1C93,0,0,15);
move(0.48,1.86,-0.00);  object(0x1C93,0,0,15);
move(0.01,-0.28,-1.51);  object(0x1C93,0,0,196);
move(-4.72,-6.28,0.20);  object(0x1C93,0,0,279);
move(0.00,0.00,1.70);  object(0x1C93,0,0,279);
move(3.19,0.13,0.00);  object(0x1C93,0,0,12);
move(-5.88,1.19,0.00);  object(0x1C93,0,0,12);
move(0.00,0.00,-1.80);  object(0x1C93,0,0,12);
move(6.00,-1.51,0.12);  object(0x1C93,0,0,14);
move(-2.32,4.07,22.20);  object(0x1C91,0,0,108);

#cheat Light Control
if(buttons & CTRL_RIGHT)
setchar(0x9460815, 0x00);
{
setchar(0x946081a, 0x35);
}
if(buttons & CTRL_LEFT)
setchar(0x9460815, 0xb0);
{
setchar(0x946081a, 0x55);
}
if(buttons & CTRL_DOWN)
{
setchar(0x9460817, 0xD4);
}
if(buttons & CTRL_UP)
{
setchar(0x9460817, 0xC4);
}

#cheat Mendez Radar Lime Green
setchar(0x096CF9E7, 0x00, 0x00, 0xff, 0x00);

#cheat Mendez Radar Red
setchar(0x096CF9E7, 0x00, 0xff, 0x00, 0x00);

#cheat Renis radar Light blue
setchar(0x096CDB47, 0x00, 0x00, 0xff);

#cheat Renis radar DARK blue
setchar(0x096CDB47, 0x00, 0x00, 0x00);

#cheat Renis radar Black
setchar(0x096CDB47, 0x00, 0x00, 0x00, 0x00);

#cheat Blue  Laser Exhaust
setchar(0x9569B90,  0x70,  0x00,  0x00,  0x00,  0x0f,  0x5f,  0xff,  0x00);
setchar(0x9569Ba7,  0x50); 

#cheat Mega Green  Laser Exhaust
setchar(0x9569B90,  0x78,  0x00,  0x00,  0x00,  0x00,  0xff,  0x00);
setchar(0x9569BA7,  0xc5); 

#cheat Fire Creator Example
setchar(0x08be3a20, 1);
setfloat(0x08be3a30, 314.57, -168.91, 26.13);
setchar(0x08be3a60, 1);
setfloat(0x08be3a70, 356.07, -169.03, 26.13);
setchar(0x08be3aa0, 1);
setfloat(0x08be3ab0, 355.48, -149.23, 26.13);
setchar(0x08be3ae0, 1);
setfloat(0x08be3af0, 315.20, -149.39, 26.13);
setchar(0x08be3b20, 1);
setfloat(0x08be3b30, 340.20, -148.65, 24.80);
setchar(0x08be3b60, 1);
setfloat(0x08be3b70, 327.93, -148.20, 24.80);
setchar(0x08be3ba0, 1);
setfloat(0x08be3bb0, 315.46, -158.34, 23.20);
setchar(0x08be3be0, 1);
setfloat(0x08be3bf0, 355.07, -159.45, 23.20);
setchar(0x08be3c20, 1);
setfloat(0x08be3c30, 345.86, -167.74, 24.80);
setchar(0x08be3c60, 1);
setfloat(0x08be3c70, 326.90, -168.22, 24.80);

#cheat Mission Select!
//BY: Vettefan88
//mission list by DUFF
//Hold R and press left and right to toggle between missions
static start;
if (!start)
{
mission = 20;
start = 1;
}
if (buttons & CTRL_RTRIGGER)
{
if (pressmed & CTRL_LEFT)
mission = mission-1;
if (pressmed & CTRL_RIGHT)
mission = mission+1;
if (mission <= 07)
{setshort(0x08e90bd8, 1, 'C', 'R', 'A', 'S', 'H', 0);}
if (mission == 08)
{setshort(0x08e90bd8, 1, '1', 's', 't', ' ', 'M', 'i', 's', 's', 'i', 'o', 'n', 0);}
if (mission == 09)
{setshort(0x08e90bd8, 1, 'T', 'e', 'l', 'e', 'p', 'o', 'r', 't', ' ', 'T', 'o', ' ', 'B', 'e', 'a', 'c', 'h', 'c', 'o', 'm', 'b', 'e', 'r', ' ', 'H', 'o', 't', 'e', 'l', ',', ' ', 'S', 't', 'u', 'c', 'k', ' ', 'I', 'n', ' ', 'C', 'a', 'r', 0);}
if (mission == 10)
{setshort(0x08e90bd8, 1, 'C', 'R', 'A', 'S', 'H', 0);}
if (mission == 11)
{setshort(0x08e90bd8, 1, 'E', 'm', 'p', 'i', 'r', 'e', ' ', 'B', 'u', 'i', 'l', 'd', 'i', 'n', 'g', ' ', 'A', 't', 't', 'a', 'c', 'k', 0);}
if (mission == 12)
{setshort(0x08e90bd8, 1, 'I', 'n', ' ', 'T', 'h', 'e', ' ', 'A', 'i', 'r', ' ', 'T', 'o', 'n', 'i', 'g', 'h', 't', ' ', '(', 'P', 'h', 'i', 'l', ' ', 'C', 'o', 'l', 'l', 'i', 'n', 's', ' ', 'C', 'o', 'n', 'c', 'e', 'r', 't', ')', 0);}
if (mission == 13)
{setshort(0x08e90bd8, 1, 'V', 'i', 'd', 'e', 'o', ' ', 'M', 'e', 'm', 'o', 'r', 'i', 'e', 's', 0);}
if (mission == 14)
{setshort(0x08e90bd8, 1, 'S', 'h', 'o', 'o', 't', 'i', 'n', 'g', ' ', 'R', 'a', 'n', 'g', 'e', 0);}
if (mission == 15)
{setshort(0x08e90bd8, 1, 'P', 'a', 'r', 'a', 'm', 'e', 'd', 'i', 'c', ' ', '(', 'A', 'm', 'b', 'u', 'l', 'a', 'n', 'c', 'e', ')', 0);}
if (mission == 16)
{setshort(0x08e90bd8, 1, 'V', 'i', 'g', 'i', 'l', 'a', 'n', 't', 'e', 0);}
if (mission == 17)
{setshort(0x08e90bd8, 1, 'F', 'i', 'r', 'e', 'f', 'i', 'g', 'h', 't', 'e', 'r', 0);}
if (mission == 18)
{setshort(0x08e90bd8, 1, 'P', 'a', 'r', 'a', 'm', 'e', 'd', 'i', 'c', ' ', '(', 'A', 'i', 'r', ' ', 'A', 'm', 'b', 'u', 'l', 'a', 'n', 'c', 'e', ')', 0);}
if (mission == 19)
{setshort(0x08e90bd8, 1, 'S', 'w', 'i', 'n', 'g', 'e', 'r', 's', ' ', 'C', 'l', 'u', 'b', ' ', 'G', 'o', 'l', 'f', 0);}
if (mission == 20)
{setshort(0x08e90bd8, 1, 'T', 'a', 'x', 'i', ' ', 'D', 'r', 'i', 'v', 'e', 'r', 0);}
if (mission == 21)
{setshort(0x08e90bd8, 1, 'E', 'm', 'p', 'i', 'r', 'e', ' ', 'B', 'u', 'i', 'l', 'd', 'i', 'n', 'g', ' ', 'M', 'i', 's', 's', 'i', 'o', 'n', ' ', 'P', 'r', 'o', 't', 'e', 'c', 't', 'i', 'o', 'n', ' ', 'R', 'a', 'c', 'k', 'e', 't', 0);}
if (mission == 22)
{setshort(0x08e90bd8, 1, 'E', 'm', 'p', 'i', 'r', 'e', ' ', 'B', 'u', 'i', 'l', 'd', 'i', 'n', 'g', ' ', 'M', 'i', 's', 's', 'i', 'o', 'n', ' ', 'L', 'o', 'a', 'n', ' ', 'S', 'h', 'a', 'r', 'k', 0);}
if (mission == 23)
{setshort(0x08e90bd8, 1, 'E', 'm', 'p', 'i', 'r', 'e', ' ', 'B', 'u', 'i', 'l', 'd', 'i', 'n', 'g', ' ', 'M', 'i', 's', 's', 'i', 'o', 'n', ' ', 'P', 'r', 'o', 's', 't', 'i', 't', 'u', 't', 'i', 'o', 'n', 0);}
if (mission == 24)
{setshort(0x08e90bd8, 1, 'E', 'm', 'p', 'i', 'r', 'e', ' ', 'B', 'u', 'i', 'l', 'd', 'i', 'n', 'g', ' ', 'M', 'i', 's', 's', 'i', 'o', 'n', ' ', 'D', 'r', 'u', 'g', 's', 0);}
if (mission == 25)
{setshort(0x08e90bd8, 1, 'E', 'm', 'p', 'i', 'r', 'e', ' ', 'B', 'u', 'i', 'l', 'd', 'i', 'n', 'g', ' ', 'M', 'i', 's', 's', 'i', 'o', 'n', ' ', 'S', 'm', 'u', 'g', 'g', 'l', 'i', 'n', 'g', 0);}
if (mission == 26)
{setshort(0x08e90bd8, 1, 'E', 'm', 'p', 'i', 'r', 'e', ' ', 'B', 'u', 'i', 'l', 'd', 'i', 'n', 'g', ' ', 'M', 'i', 's', 's', 'i', 'o', 'n', ' ', 'R', 'o', 'b', 'b', 'e', 'r', 'y', 0);}
if (mission == 27)
{setshort(0x08e90bd8, 1, 'C', 'R', 'A', 'S', 'H', 0);}
if (mission == 28)
{setshort(0x08e90bd8, 1, 'C', 'r', 'a', 's', 'h', ' ', 'C', 'o', 'a', 'c', 'h', ' ', 'M', 'i', 's', 's', 'i', 'o', 'n', 0);}
if (mission == 29)
{setshort(0x08e90bd8, 1, 'Q', 'u', 'a', 'd', ' ', 'B', 'i', 'k', 'e', ' ', 'T', 'i', 'm', 'e', ' ', 'T', 'r', 'i', 'a', 'l', 's', 0);}
if (mission == 30)
{setshort(0x08e90bd8, 1, 'B', 'M', 'X', ' ', 'T', 'i', 'm', 'e', ' ', 'T', 'r', 'i', 'a', 'l', 's', 0);}
if (mission == 31)
{setshort(0x08e90bd8, 1, 'S', 'a', 'n', 'c', 'h', 'e', 'z', ' ', 'T', 'i', 'm', 'e', ' ', 'T', 'r', 'i', 'a', 'l', 's', 0);}
if (mission == 32)
{setshort(0x08e90bd8, 1, 'B', 'M', 'X', ' ', 'M', 'a', 'l', 'l', 0);}
if (mission == 33)
{setshort(0x08e90bd8, 1, 'C', 'R', 'A', 'S', 'H', 0);}
if (mission == 34)
{setshort(0x08e90bd8, 1, 'H', 'e', 'l', 'i', ' ', 'T', 'o', 'u', 'r', 's', 0);}
if (mission == 35)
{setshort(0x08e90bd8, 1, 'F', 'i', 'r', 'e', ' ', 'H', 'e', 'l', 'i', 0);}
if (mission == 36)
{setshort(0x08e90bd8, 1, 'T', 'u', 'r', 'i', 's', 'm', 'o', ' ', '(', '1', 's', 't', ' ', 'I', 's', 'l', 'a', 'n', 'd', ')', 0);}
if (mission == 37)
{setshort(0x08e90bd8, 1, 'H', 'u', 'n', 't', 'e', 'r', ' ', 'T', 'a', 'r', 'g', 'e', 't', 0);}
if (mission == 38)
{setshort(0x08e90bd8, 1, 'A', 'i', 'r', ' ', 'R', 'a', 'c', 'e', 0);}
if (mission == 39)
{setshort(0x08e90bd8, 1, 'M', 'u', 'l', 't', 'i', ' ', 'V', 'e', 'h', 'i', 'c', 'l', 'e', ' ', 'R', 'a', 'c', 'e', 0);}
if (mission == 40)
{setshort(0x08e90bd8, 1, 'C', 'R', 'A', 'S', 'H', 0);}
if (mission == 41)
{setshort(0x08e90bd8, 1, 'C', 'R', 'A', 'S', 'H', 0);}
if (mission == 08)
{setshort(0x08e90bd8, 1, 'S', 'o', 'l', 'd', 'i', 'e', 'r', 0);}
if (mission == 42)
{setshort(0x08e90bd8, 1, 'C', 'l', 'e', 'a', 'n', 'i', 'n', 'g', ' ', 'H', 'o', 'u', 's', 'e', 0);}
if (mission == 43)
{setshort(0x08e90bd8, 1, 'C', 'o', 'n', 'd', 'u', 'c', 't', ' ', 'U', 'n', 'b', 'e', 'c', 'o', 'm', 'i', 'n', 'g', 0);}
if (mission == 44)
{setshort(0x08e90bd8, 1, 'C', 'h', 'o', 'l', 'o', ' ', 'V', 'i', 'c', 't', 'o', 'r', 'y', 0);}
if (mission == 45)
{setshort(0x08e90bd8, 1, 'B', 'o', 'o', 'm', 's', 'h', 'i', 'n', 'e', ' ', 'B', 'l', 'o', 'w', 'o', 'u', 't', 0);}
if (mission == 46)
{setshort(0x08e90bd8, 1, 'T', 'r', 'u', 'c', 'k', ' ', 'S', 't', 'o', 'p', 0);}
if (mission == 47)
{setshort(0x08e90bd8, 1, 'M', 'a', 'r', 'k', 'e', 'd', ' ', 'M', 'a', 'n', 0);}
if (mission == 48)
{setshort(0x08e90bd8, 1, 'S', 'h', 'a', 'k', 'e', 'd', 'o', 'w', 'n', 0);}
if (mission == 49)
{setshort(0x08e90bd8, 1, 'F', 'e', 'a', 'r', ' ', 'T', 'h', 'e', ' ', 'R', 'e', 'p', 'o', 0);}
if (mission == 50)
{setshort(0x08e90bd8, 1, 'W', 'a', 'k', 'i', 'n', 'g', ' ', 'U', 'p', ' ', 'T', 'h', 'e', ' ', 'N', 'e', 'i', 'g', 'h', 'b', 'o', 'u', 'r', 's', 0);}
if (mission == 51)
{setshort(0x08e90bd8, 1, 'O', ',', ' ', 'B', 'r', 'o', 't', 'h', 'e', 'l', ',', ' ', 'W', 'h', 'e', 'r', 'e', ' ', 'A', 'r', 't', ' ', 'T', 'h', 'o', 'u', '?', 0);}
if (mission == 52)
{setshort(0x08e90bd8, 1, 'G', 'o', 't', ' ', 'P', 'r', 'o', 't', 'e', 'c', 't', 'i', 'o', 'n', '?', 0);}
if (mission == 53)
{setshort(0x08e90bd8, 1, 'W', 'h', 'e', 'n', ' ', 'F', 'u', 'n', 'd', 'a', 'y', ' ', 'C', 'o', 'm', 'e', 's', 0);}
if (mission == 54)
{setshort(0x08e90bd8, 1, 'T', 'a', 'k', 'i', 'n', ' ', 'O', 'u', 't', ' ', 'T', 'h', 'e ', 'W', 'h', 'i', 't', 'e', ' ', 'T', 'r', 'a', 's', 'h', 0);}
if (mission == 55)
{setshort(0x08e90bd8, 1, 'D', '.', 'I', '.', 'V', '.', 'O', '.', 'R', '.', 'C', '.', 'E', '.', 0);}
if (mission == 56)
{setshort(0x08e90bd8, 1, 'T', 'o', ' ', 'V', 'i', 'c', 't', 'o', 'r', ',', ' ', 'T', 'h', 'e', ' ', 'S', 'p', 'o', 'i', 'l', 's', 0);}
if (mission == 57)
{setshort(0x08e90bd8, 1, 'H', 'o', 's', 'e', ' ', 'T', 'h', 'e', ' ', 'H', 'o', 'e', 's', 0);}
if (mission == 58)
{setshort(0x08e90bd8, 1, 'R', 'o', 'b', 'b', 'i', 'n', 'g', ' ', 'T', 'h', 'e', ' ', 'C', 'r', 'a', 'd', 'l', 'e', 0);}
if (mission == 59)
{setshort(0x08e90bd8, 1, 'J', 'i', 'v', 'e', ' ', 'D', 'r', 'i', 'v', 'e', 0);}
if (mission == 60)
{setshort(0x08e90bd8, 1, 'T', 'h', 'e', ' ', 'A', 'u', 'd', 'i', 't', 'i', 'o', 'n', 0);}
if (mission == 61)
{setshort(0x08e90bd8, 1, 'C', 'a', 'u', 'g', 'h', 't', ' ', 'I', 'n', ' ', 'T', 'h', 'e', ' ', 'A', 'c', 't', 0);}
if (mission == 62)
{setshort(0x08e90bd8, 1, 'S', 'n', 'i', 't', 'c', 'h', ' ', 'H', 'i', 't', 'c', 'h', 0);}
if (mission == 63)
{setshort(0x08e90bd8, 1, 'F', 'r', 'o', 'm', ' ', 'Z', 'e', 'r', 'o', ' ', 'T', 'o', 'H', 'e', 'r', 'o', 0);}
if (mission == 64)
{setshort(0x08e90bd8, 1, 'N', 'i', 'c', 'e', ' ', 'P', 'a', 'c', 'k', 'a', 'g', 'e', 0);}
if (mission == 65)
{setshort(0x08e90bd8, 1, 'B', 'a', 'l', 'l', 's', 0);}
if (mission == 66)
{setshort(0x08e90bd8, 1, 'P', 'a', 'p', 'i', ' ', 'D', 'o', 'n', 't', ' ', 'S', 'c', 'r', 'e', 'e', 'c', 'h', 0);}
if (mission == 67)
{setshort(0x08e90bd8, 1, 'H', 'a', 'v', 'a', 'n', 'a', ' ', 'G', 'o', 'o', 'd', ' ', 'T', 'i', 'm', 'e', 0);}
if (mission == 68)
{setshort(0x08e90bd8, 1, 'M', 'o', 'n', 'e', 'y', ' ', 'F', 'o', 'r', ' ', 'N', 'o', 't', 'h', 'i', 'n', 'g', 0);}
if (mission == 69)
{setshort(0x08e90bd8, 1, 'L', 'e', 'a', 'p', ' ', 'A', 'n', 'd', ' ', 'B', 'o', 'u', 'n', 'd', 0);}
if (mission == 70)
{setshort(0x08e90bd8, 1, 'T', 'h', 'e', ' ', 'B', 'u', 'm', ' ', 'D', 'e', 'a', 'l', 0);}
if (mission == 71)
{setshort(0x08e90bd8, 1, 'T', 'h', 'e', ' ', 'M', 'u', 'g', 's', 'h', 'o', 't ', 'L', 'o', 'n', 'g', 's', 'h', 'o', 't', 0);}
if (mission == 72)
{setshort(0x08e90bd8, 1, 'H', 'o', 's', 't', 'i', 'l', 'e', ' ', 'T', 'a', 'k', 'e', 'o', 'v', 'e', 'r', 0);}
if (mission == 73)
{setshort(0x08e90bd8, 1, 'U', 'n', 'f', 'r', 'i', 'e', 'n', 'd', 'l', 'y', ' ', 'C', 'o', 'm', 'p', 'e', 't', 'i', 't', 'i', 'o', 'n', 0);}
if (mission == 74)
{setshort(0x08e90bd8, 1, 'H', 'i', 'g', 'h', ' ', 'W', 'i', 'r', 'e', 0);}
if (mission == 75)
{setshort(0x08e90bd8, 1, 'B', 'u', 'r', 'n', 'i', 'n', 'g', ' ', 'B', 'r', 'i', 'd', 'g', 'e', 's', 0);}
if (mission == 76)
{setshort(0x08e90bd8, 1, 'A', 'c', 'c', 'i', 'd', 'e', 'n', 't', 's', ' ', 'W', 'I', 'l', 'l', ' ', 'H', 'a', 'p', 'p', 'e', 'n', 0);}
if (mission == 77)
{setshort(0x08e90bd8, 1, 'T', 'h', 'e', ' ', 'C', 'o', 'l', 'o', 'n', 'e', 'l', 's', ' ', 'C', 'o', 'k', 'e', 0);}
if (mission == 78)
{setshort(0x08e90bd8, 1, 'K', 'i', 'l', 'l', ' ', 'P', 'h', 'i', 'l', 0);}
if (mission == 79)
{setshort(0x08e90bd8, 1, 'S', 'a', 'y', ' ', 'C', 'h', 'e', 'e', 's', 'e', 0);}
if (mission == 80)
{setshort(0x08e90bd8, 1, 'K', 'i', 'l', 'l', ' ', 'P', 'h', 'i', 'l', ':', ' ', 'P', 'a', 'r', 't', ' ', '2', 0);}
if (mission == 81)
{setshort(0x08e90bd8, 1, 'S', 'o', ' ', 'L', 'o', 'n', 'g', ' ', 'S', 'c', 'h', 'l', 'o', 'n', 'g', 0);}
if (mission == 82)
{setshort(0x08e90bd8, 1, 'C', 'R', 'A', 'S', 'H', 0);}
if (mission == 83)
{setshort(0x08e90bd8, 1, 'B', 'l', 'i', 't', 'z', 'k', 'r', 'i', 'e', 'g', 0);}
if (mission == 84)
{setshort(0x08e90bd8, 1, 'T', 'u', 'r', 'n', ' ', 'O', 'n', ',', ' ', 'T', 'u', 'n', 'e', ' ', 'I', 'n', ',', ' ', 'B', 'u', 'g', ' ', 'O', 'u', 't', 0);}
if (mission == 85)
{setshort(0x08e90bd8, 1, 'T', 'a', 'k', 'i', 'n', 'g', ' ', 'T', 'h', 'e', ' ', 'F', 'a', 'l', 'l', 0);}
if (mission == 86)
{setshort(0x08e90bd8, 1, 'W', 'h', 'i', 't', 'e', ' ', 'L', 'i', 'e', 's', 0);}
if (mission == 87)
{setshort(0x08e90bd8, 1, 'W', 'h', 'e', 'r', 'e', ' ', 'I', 't', ' ', 'H', 'u', 'r', 't', 's', ' ', 'M', 'o', 's', 't', 0);}
if (mission == 88)
{setshort(0x08e90bd8, 1, 'B', 'l', 'i', 't', 'z', 'k', 'r', 'i', 'e', 'g', ' ', 'S', 't', 'r', 'i', 'k', 'e', 's', ' ', 'A', 'g', 'a', 'i', 'n', 0);}
if (mission == 89)
{setshort(0x08e90bd8, 1, 'L', 'o', 's', 't', ' ', 'A', 'n', 'd', ' ', 'F', 'o', 'u', 'n', 'd', 0);}
if (mission == 90)
{setshort(0x08e90bd8, 1, 'L', 'i', 'g', 'h', 't', ' ', 'M', 'y', ' ', 'P', 'y', 'r', 'e', 0);}
if (mission == 91)
{setshort(0x08e90bd8, 1, 'H', 'o', 'm', 'e', 's', ' ', 'O', 'n', ' ', 'T', 'h', 'e', ' ', 'R', 'a', 'n', 'g', 'e', 0);}
if (mission == 92)
{setshort(0x08e90bd8, 1, 'P', 'u', 'r', 'p', 'l', 'e', ' ', 'H', 'a', 'z', 'e', 0);}
if (mission == 93)
{setshort(0x08e90bd8, 1, 'F', 'a', 'r', 'e', 'w', 'e', 'l', 'l', ' ', 'T', 'o', ' ', 'A', 'r', 'm', 's', 0);}
if (mission == 94)
{setshort(0x08e90bd8, 1, 'S', 't', 'e', 'a', 'l', ' ', 'T', 'h', 'e', ' ', 'D', 'e', 'a', 'l', 0);}
if (mission == 95)
{setshort(0x08e90bd8, 1, 'T', 'h', 'e', ' ', 'E', 'x', 'c', 'h', 'a', 'n', 'g', 'e', 0);}
if (mission == 96)
{setshort(0x08e90bd8, 1, 'D', 'o', 'm', 'o', ' ', 'A', 'r', 'i', 'g', 'a', 't', 'o', ' ', 'D', 'o', 'm', 'e', 's', 't', 'o', 'b', 'o', 't', 'o', 0);}
if (mission == 97)
{setshort(0x08e90bd8, 1, 'O', 'v', 'e', 'r', ' ', 'T', 'h', 'e', ' ', 'T', 'o', 'p', 0);}
if (mission == 98)
{setshort(0x08e90bd8, 1, 'T', 'h', 'e', ' ', 'L', 'a', 's', 't', ' ', 'S', 't', 'a', 'n', 'd', 0);}
if (mission >= 99)
{setshort(0x08e90bd8, 1, '1', 's', 't', ' ', 'M', 'i', 's', 's', 'i', 'o', 'n', 0);}
}
setchar(0x9F932D8, mission);

#cheat Vcn cop
//made with VCS Car Spawner by DDM
pspawn = 0x08E81290;
setint(pspawn, 260);
setfloat(pspawn + 4, -469.57, 1123.63, 64.75);
pspawn + 4,  227.56,  -129.41,  5.9,  160);

#cheat The Convenient Portals
//made with Portal Maker by DDM
static Made;
X1 = 269.45;
Y1 = -166.28;
Z1 = 11.84;
X2 = -796.30;
Y2 = -1181.56;
Z2 = 11.10;
if(!Made)
{
for( rot = 0; rot < 270; rot += 10.8 )
{
moveto(X1 + cos(rot) * 3,  Y1 + sin(rot) * 3,  Z1); object(0x1B3,  0,  0,  -rot + 90);
}
for( rot2 = 0; rot2 < 270; rot2 += 10.8 )
{
moveto(X2 + cos(rot2) * 3,  Y2 + sin(rot2) * 3,  Z2); object(0x1B3,  0,  0,  -rot2 + 90);
}
Made = 1;
}
checkx1 = X1 - getfloat(pobj+0x30);
checky1 = Y1 - getfloat(pobj+0x34);
checkx2 = X2 - getfloat(pobj+0x30);
checky2 = Y2 - getfloat(pobj+0x34);
if(sqrt(checkx1*checkx1+checky1*checky1) < 2 )
{
setfloat(pobj+0x30,  X2 + 5,  Y2 + 5,  Z2);
}
if(sqrt(checkx2*checkx2+checky2*checky2) < 2 )
{
setfloat(pobj+0x30,  X1 + 5,  Y1 + 5,  Z1);
}

#cheat Hot Rod O for boost at hotel place
//By: Dudek13l or Dudek12l
setint(0x8C73B30, 267 ); //Car Id
setchar(0x8C73B30+0x24, 1, 0, 0, 255); //Color 1
setchar(0x8C73B30+0x28, 1, 0, 0, 255); //Color 2
setshort(0x98a3450, 1, 'H','o','t',' ','R','o','d', 0);
setfloat(0x936E038, 1.2, 1.2); //wheel size
setfloat(0x9633d20+0x6c, 0.85); //Traction multiplier
setfloat(0x9633d20+0xc4, 0.75); //Traction loss
setfloat(0x9633d20+0x70, 0.5); //Traction bias
setchar(0x9633d20+0x5c, 'R', 'D', 6); // Drive type / Engine type / Gears
setfloat(0x9633d20+0x7c, 0.47); //Suspension Upper limit
setfloat(0x9633d20+0x80, -0.3); //Suspension lower limit
setfloat(0x9633d20+0x78, 3); //Suspension Damping level
setfloat(0x9633d20+0x74, 2); //Suspension force level
setfloat(0x9633d20+0x84, 0.6); //Suspension Bias
setfloat(0x9633d20+0x88, 0.3); //Anti-dive Multiplier
setfloat(0x9633d20+0x68, 30); //Steering Lock
setfloat(0x9633d20+0xbc, 1500); //Vehilce Mass
setfloat(0x9633d20+0xc0, 1500); //Turn Mass
setfloat(0x9633d20+0xa0, 0); //Centre of Mass - X
setfloat(0x9633d20+0xa4, -0.4); //Centre of Mass - Y
setfloat(0x9633d20+0xa8, -1.0); //Centre of Mass - Z
setchar(0x09569B94, 255, 80, 0); // Exhuast
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, 0, 0, 0255);}
//Fire Burn Out Smoke
setchar(0x9569c90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0xff, 0x20, 0x00);
// Nos to vcs 2
static On;
static going;
if(buttons & CTRL_CIRCLE &&!On) {
On = 1;
}
if(On) {
static timepassed;
static init;
if(!init)
{
lasttime = getchar( 0x08bb3b41 );
init = 1;
}
if( lasttime != getchar( 0x08bb3b41 ) )
{
timepassed++;
lasttime = getchar( 0x08bb3b41 );
}
if( timepassed < 30 )
{
going = 1;
}
else {
On = 0;
timepassed = 0;
going = 0;
}
}
if(going) {
setchar(0x09569B90, 0x10);
setchar(0x09569B94, 255, 80, 0);
speed = 0.7;
thrust = speed * 0.00344;
if(buttons & CTRL_CROSS) {
setfloat(pcar + 0x0140, getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);
setfloat(pcar + 0x0144, getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust);
}
}
else
{
setchar(0x09569B90, 0x4);
setchar(0x09569B94, 255, 80, 0);
}

#cheat Racer!
static gotten;
dx = x - getfloat(opp+0x30);
dy = y - getfloat(opp+0x34);
setfloat(opp + 0x30,   getfloat(opp + 0x30) + dx * 0.03);
setfloat(opp + 0x34,   getfloat(opp + 0x34) + dy * 0.03);  
setfloat(opp + 0x38, 11.30);
if(!gotten&&getint(pobj+0x150))
{
x = -638.01;
y = -486.57;
opp = getint(pobj + 0x150);
setfloat(opp + 0x30, -286.36, -479.83, 11.30);
gotten = 1;
}
if(x == -638.01&&y == -486.57&&getfloat(opp+0x30)==x&&getfloat(opp+0x34)==y)
{
x = -637.88;
y = -431.38;
}
if(x == -637.88&&y == -431.38&&getfloat(opp+0x30)==x&&getfloat(opp+0x34)==y)
{
x = -625.43;
y = -402.98;
}
if(x == -625.43&&y == -402.98&&getfloat(opp+0x30)==x&&getfloat(opp+0x34)==y)
{
x = -576.10;
y = -369.26;
}
if(x == -576.10&&y == -369.26&&getfloat(opp+0x30)==x&&getfloat(opp+0x34)==y)
{
x = -431.85;
y = -353.90;
}
if(x == -431.85&&y == -353.90&&getfloat(opp+0x30)==x&&getfloat(opp+0x34)==y)
{
x = -333.02;
y = -357.48;
}
if(x == -333.02&&y == -357.48&&getfloat(opp+0x30)==x&&getfloat(opp+0x34)==y)
{
x = -290.63;
y = -374.91;
}
if(x == -290.63&&y == -374.91&&getfloat(opp+0x30)==x&&getfloat(opp+0x34)==y)
{
x = -286.36;
y = -479.83;
}

#cheat Race Opponent!
static speed;
static lap;
static currentx;
static currenty;
checkpoint1x = -638.01;
checkpoint1y = -486.57;
checkpoint2x = -637.88;
checkpoint2y = -431.38;
checkpoint3x = -625.43;
checkpoint3y = -402.98;
checkpoint4x = -576.10;
checkpoint4y = -369.26;
checkpoint5x = -431.85;
checkpoint5y = -353.90;
checkpoint6x = -333.02;
checkpoint6y = -357.48;
checkpoint7x = -290.63;
checkpoint7y = -374.91;
if(!currentx&&getint(pobj+0x150))
{
currentx = checkpoint1x;
currenty = checkpoint1y;
opp = getint(pobj + 0x150);
dx = currentx - getfloat(opp+0x30);
dy = currenty - getfloat(opp+0x34);
setfloat(opp + 0x30, -286.36, -479.83, 11.30);
speed = 0.0009;
}
setfloat(opp + 0x30,   getfloat(opp + 0x30) + dx * speed);
setfloat(opp + 0x34,   getfloat(opp + 0x34) + dy * speed);  
setfloat(opp + 0x38, 11.30);
setfloat(opp + 0x140, 0, 0, 0);
checkx = currentx - getfloat(opp+0x30);
checky = currenty - getfloat(opp+0x34);
if(sqrt(checkx*checkx+checky*checky) < 5 )
{
 if(currentx == checkpoint1x && !lap)
 {
   currentx = checkpoint2x;
   currenty = checkpoint2y;
   lap = 1;
   speed = 0.005;
 }
 else if(currentx == checkpoint2x)
 {
   currentx = checkpoint3x;
   currenty = checkpoint3y;
   speed = 0.009;
 }
 else if(currentx == checkpoint3x)
 {
   currentx = checkpoint4x;
   currenty = checkpoint4y;
   speed = 0.005;
 }
 else if(currentx == checkpoint4x)
 {
   currentx = checkpoint5x;
   currenty = checkpoint5y;
   speed = 0.005;
 }
 else if(currentx == checkpoint5x)
 {
   currentx = checkpoint6x;
   currenty = checkpoint6y;
   speed = 0.005;
 }
 else if(currentx == checkpoint6x)
 {
   currentx = checkpoint7x;
   currenty = checkpoint7y;
   speed = 0.005;
 }
 else if(currentx == checkpoint7x)
 {
   currentx = checkpoint1x;
   currenty = checkpoint1y;
   speed = 0.0009;
 }
 dx = currentx - getfloat(opp+0x30);
 dy = currenty - getfloat(opp+0x34);
}
#off
currentx = currenty = gotten = opp = 0;

#cheat Red Radar Disc
R = 255;
G = 0;
B = 0;
for(radar=0;radar<16;radar++)
{setchar(0x96cbfb0+4*radar, R, G, B);}
off();

#cheat Green Radar Disc
R = 0;
G = 255;
B = 0;
for(radar=0;radar<16;radar++)
{setchar(0x96cbfb0+4*radar, R, G, B);}
off();

#cheat Blue Radar Disc
R = 0;
G = 0;
B = 255;
for(radar=0;radar<16;radar++)
{setchar(0x96cbfb0+4*radar, R, G, B);}
off();

#cheat White Radar Disc
R = 255;
G = 255;
B = 255;
for(radar=0;radar<16;radar++)
{setchar(0x96cbfb0+4*radar, R, G, B);}
off();


#cheat Purple Radar Disc
R = 80;
G = 0;
B = 80;
for(radar=0;radar<16;radar++)
{setchar(0x96cbfb0+4*radar, R, G, B);}
off();

#cheat Turquoise Radar Disc
R = 0;
G = 255;
B = 255;
for(radar=0;radar<16;radar++)
{setchar(0x96cbfb0+4*radar, R, G, B);}
off();

#cheat Yellow Radar Disc
R = 255;
G = 255;
B = 0;
for(radar=0;radar<16;radar++)
{setchar(0x96cbfb0+4*radar, R, G, B);}
off();

#cheat Orange Radar Disc
R = 255;
G = 80;
B = 0;
for(radar=0;radar<16;radar++)
{setchar(0x96cbfb0+4*radar, R, G, B);}
off();

#cheat Lime Green Radar Disc
R = 80;
G = 255;
B = 0;
for(radar=0;radar<16;radar++)
{setchar(0x96cbfb0+4*radar, R, G, B);}
off();

#cheat Pink Radar Disc
R = 255;
G = 0;
B = 255;
for(radar=0;radar<16;radar++)
{setchar(0x96cbfb0+4*radar, R, G, B);}
off();

#cheat Hot Pink Radar Disc
R = 255;
G = 0;
B = 80;
for(radar=0;radar<16;radar++)
{setchar(0x96cbfb0+4*radar, R, G, B);}
off();

#cheat Sky Blue Radar Disc
R = 0;
G = 175;
B = 255;
for(radar=0;radar<16;radar++)
{setchar(0x96cbfb0+4*radar, R, G, B);}
off();

#cheat Black Blue Radar Disc
R = 0;
G = 0;
B = 0;
for(radar=0;radar<16;radar++)
{setchar(0x96cbfb0+4*radar, R, G, B);}
off();

#cheat Red Health/Armor Outlines
R = 255;
G = 0;
B = 0;
for(outline=0;outline<16;outline++)
{setchar(0x96e1c20+4*outline, R, G, B);}
off();

#cheat Green Health/Armor Outlines
R = 0;
G = 255;
B = 0;
for(outline=0;outline<16;outline++)
{setchar(0x96e1c20+4*outline, R, G, B);}
off();

#cheat Blue Health/Armor Outlines
R = 0;
G = 0;
B = 255;
for(outline=0;outline<16;outline++)
{setchar(0x96e1c20+4*outline, R, G, B);}
off();

#cheat White Health/Armor Outlines
R = 255;
G = 255;
B = 255;
for(outline=0;outline<16;outline++)
{setchar(0x96e1c20+4*outline, R, G, B);}
off();


#cheat Purple Health/Armor Outlines
R = 80;
G = 0;
B = 80;
for(outline=0;outline<16;outline++)
{setchar(0x96e1c20+4*outline, R, G, B);}
off();

#cheat Turquoise Health/Armor Outlines
R = 0;
G = 255;
B = 255;
for(outline=0;outline<16;outline++)
{setchar(0x96e1c20+4*outline, R, G, B);}
off();

#cheat Yellow Health/Armor Outlines
R = 255;
G = 255;
B = 0;
for(outline=0;outline<16;outline++)
{setchar(0x96e1c20+4*outline, R, G, B);}
off();

#cheat Orange Health/Armor Outlines
R = 255;
G = 80;
B = 0;
for(outline=0;outline<16;outline++)
{setchar(0x96e1c20+4*outline, R, G, B);}
off();

#cheat Lime Green Health/Armor Outlines
R = 80;
G = 255;
B = 0;
for(outline=0;outline<16;outline++)
{setchar(0x96e1c20+4*outline, R, G, B);}
off();

#cheat Pink Health/Armor Outlines
R = 255;
G = 0;
B = 255;
for(outline=0;outline<16;outline++)
{setchar(0x96e1c20+4*outline, R, G, B);}
off();

#cheat Hot Pink Health/Armor Outlines
R = 255;
G = 0;
B = 80;
for(outline=0;outline<16;outline++)
{setchar(0x96e1c20+4*outline, R, G, B);}
off();

#cheat Sky Blue Health/Armor Outlines
R = 0;
G = 175;
B = 255;
for(outline=0;outline<16;outline++)
{setchar(0x96e1c20+4*outline, R, G, B);}
off();

#cheat Black Health/Armor Outlines
R = 0;
G = 0;
B = 0;
for(outline=0;outline<16;outline++)
{setchar(0x96e1c20+4*outline, R, G, B);}
off();

#cheat real time clock
setint(0x8bb3b3c, 60000);
#off
setint(0x8bb3b3c, 1000);

#cheat set clock
if (buttons & CTRL_RTRIGGER)
{
if (pressmed & CTRL_UP)
setchar(0x8bb3b40, getchar(0x8bb3b40)+1);
if (pressmed & CTRL_DOWN)
setchar(0x8bb3b40, getchar(0x8bb3b40)-1);
if (pressmed & CTRL_LEFT)
setchar(0x8bb3b41, getchar(0x8bb3b41)-1);
if (pressmed & CTRL_RIGHT)
setchar(0x8bb3b41, getchar(0x8bb3b41)+1);
}

#cheat Pop out police VCS
setchar(pcar + 0x267, 0x75);
off()

#cheat Pop out police OFF
setchar(pcar + 0x267, 0x44);
off()

#cheat Hikiwara Tuning Supercharged Sabre
pspawn = 0x08E81290;  
setint(pspawn,    265);  
setfloat(pspawn + 4,    -1041.73,    -761.80,    11.57,    90);
pspawn += 0x30;
setchar(0x9569b94,  0x66,  0xFF,  0x00);
setchar(pcar+0x224, 0x0, 0x0, 0x0);
setchar(pcar+0x228, 0x66, 0xFF, 0x00);
setshort(pcar+0x3b6,  0,  0);
setfloat(pcar+0x450,  4,  2,  4);
setfloat(pcar+0x480,  4,  2,  4);
setfloat(pcar+0x4b0,  4,  2,  4);
setfloat(pcar+0x4e0,  4,  2,  4);
// Spinners by (dont know)
static rotation;
if (rotation == 0)
{
rotation = 1040;
}
spin = tan(rotation);
setfloat(pcar + 0x644,  spin,  spin,  spin,  spin,  spin);
rotation = rotation - 1;
if (rotation == 1)
{rotation = 1040;}
// Nos By Edison Carter and Waterbottle
// Not much of a moddification to this Brilliant code, but its a longterm affect,
// Hold circle  To drive at normal speed
// Slow down's square with gradual, good for a thrash or a race
if (buttons & CTRL_CROSS && !(buttons & CTRL_CIRCLE)) {
//calculate speed
speed = sqrt(getfloat(pcar + 0x140) * getfloat(pcar + 0x140) + getfloat(pcar + 0x144) * getfloat(pcar + 0x144));

//if speed is lower than max speed for NOS accelerate
if(speed<1.8) {
setfloat(pcar+0x140,  getfloat(pcar+0x140)-getfloat(pcar+0x4)*0.005);
setfloat(pcar+0x144,  getfloat(pcar+0x144)+getfloat(pcar)*0.005);
}
}
//Power Brake if vehicle is on ground
if(buttons & CTRL_SQUARE && getshort(pcar+0x1c8)==0.5) setfloat(pcar+0x140,  0,  0);

#cheat The Mysterious Banshee
static state;
DifficultLevel = 50;
 if(state)
     setshort(pcar+0x232,  0x0101);
 else
 {
     setint(0x08C739B0,  175);
     setfloat(0x08C739B4,  -837.81, -1196.18, 11);
     setfloat(0x08C739C0,  3.1415);
     if(getfloat(pcar+0x30) > -840 && getfloat(pcar+0x30) < -830 && getfloat(pcar+0x34) < -1185 && getfloat(pcar+0x34) > -1200 && getshort(pcar+0x56) == 175)
     {
     state = 1;
     time = getchar(0x08bb3b40)*getchar(0x08bb3b40) + getchar(0x08bb3b41);
     }
 }
 if(state == 1)
 {
 setshort(0x08e90bd8,  1,  'O',  'h',  ',',  ' ' ,  'N',  'o',  ' ',  't',  'h',  'e',  'r',  'e',  's',  ' ',  'a',  ' ',  'b',  'o',  'm',  'b',  ' ',  'i',  'n',  ' ',  'h',  'e',  'r',  'e',  '!', 0);
 newtime = getchar(0x08bb3b40)*getchar(0x08bb3b40) + getchar(0x08bb3b41);
 if(newtime - 2 > time)
        {
        state = 2;
        time = getchar(0x08bb3b40)*getchar(0x08bb3b40) + getchar(0x08bb3b41);
        }
 }
 if(state == 2)
 {
 setshort(0x08e90bd8,  1,  'K',  'e',  'e', 'p',  ' ' ,  't',  'h',  'e',  ' ',  's',  'p',  'e',  'e',  'd',  ' ',  'u',  'p',  ' ',  'o',  'r',  ' ',  'd',  'i',  'e',  '!', 0);
 newtime = getchar(0x08bb3b40)*getchar(0x08bb3b40) + getchar(0x08bb3b41);
        if(newtime - 2 > time)
        {
        state = 3;
        health = 150;
        time = getchar(0x08bb3b40)*getchar(0x08bb3b40) + getchar(0x08bb3b41);
        }
 }
 if(state == 3)
 {
 setshort(0x08e90bd8,  1,  'T',  'h',  'e', ' ', '~', 'b', '~',  'a' ,  'r',  'm',  'o',  'r',  ' ',  'b',  'a',  'r', '~', 'w', '~',  ' ',  's',  'h',  'o',  'w',  ' ',  'h',  'o',  'w',  ' ',  'f',  'a',  'r',  ' ',  't',  'h',  'e',  ' ',  'b',  'o',  'm',  'b', ' ',  'i',  's',  ' ',  'f',  'r',  'o',  'm',  ' ',  'e',  'x',  'p',  'l',  'o',  'd',  'i',  'n',  'g',  '.',  ' ',  'D',  'r',  'i',  'v',  'e',  ' ',  'f',  'a',  's',  't',  ' ',  't',  'o',  ' ',  'k',  'e',  'e',  'p',  ' ',  'i',  't',  ' ',  'u',  'p',  '.', 0);
 speed = sqrt(getfloat(pcar+0x140)*getfloat(pcar+0x140)+getfloat(pcar+0x144)*getfloat(pcar+0x144)) * 100;
 newtime = getchar(0x08bb3b40)*getchar(0x08bb3b40) + getchar(0x08bb3b41);
      if(newtime - 3 > time)
{
state = 4;
time = getchar(0x08bb3b40)*getchar(0x08bb3b40) + getchar(0x08bb3b41);
}
if(speed < DifficultLevel)
    health -= 0.5;
else if(health < 150)
    health += 0.5;

 setfloat(pplayer+0x4e8, health);

      if(health <= 0)
{
setfloat(pcar+0x27c, 0);
state = 0;
}
 }
 if(state == 4)
 {
 newtime = getchar(0x08bb3b40)*getchar(0x08bb3b40) + getchar(0x08bb3b41);
      if(newtime - 4 < time)
            setshort(0x08e90bd8,  1,  '~',  'r',  '~', '8', '-', 'B', 'a',  'l' ,  'l', '~',  'w',  '~',  ' ',  'c',  'a',  'n',  ' ',  't',  'a', 'k', 'e', ' ',  'c',  'a',  'r',  'e',  ' ',  'o',  'f',  ' ',  't',  'h',  'e',  ' ',  'b',  'o',  'm',  'b',  ',',  ' ',  'g',  'o',  ' ',  't', 'o',  ' ',  'h',  'i',  'm',  ',', ' ',  'N',  'O',  'W',  '!', 0);
      else time = 0;
 speed = sqrt(getfloat(pcar+0x140)*getfloat(pcar+0x140)+getfloat(pcar+0x144)*getfloat(pcar+0x144)) * 100;
 if(speed < DifficultLevel + 10)
          health -= 0.5;
      else if(health < 150)
          health += 0.5;

 setfloat(pplayer+0x4e8, health);

      if(health <= 0)
      {
      setfloat(pcar+0x27c, 0);
      state = 0;
      }
 if(getfloat(pcar+0x30) < -900 && getfloat(pcar+0x30) > -910 && getfloat(pcar+0x34) > 1115 && getfloat(pcar+0x34) < 1125)
      {
      state = 5;
      time = getchar(0x08bb3b40)*getchar(0x08bb3b40) + getchar(0x08bb3b41);
      }
 }
 if(state == 5)
 {
 newtime = getchar(0x08bb3b40)*getchar(0x08bb3b40) + getchar(0x08bb3b41);
      if(newtime - 2 > time)
     state = 6;
 }
 if(state == 6)
 {
 setshort(0x08e90bd8,  1,  'C',  'o',  'n', 'g', 'r', 'a', 't',  's' ,  ',', ' ',  'y',  'o',  'u',  ' ',  'w',  'o',  'n',  '.',  ' ',  'P', 'r', 'e', 's', 's',  ' ' ,  'U', 'P', ' ',  't',  'o',  ' ',  'e',  'n',  'd',  '.', 0);
if(buttons & CTRL_UP)
{
state = 0;
setshort(pcar+0x232,  0);
}
 }
#off
state = 0;
setshort(pcar+0x232,  0); 

#cheat Force Touch 2
push = 2.0;
ptouch = getint(pobj+0x150);
if (ptouch && getshort(ptouch + 0x0056) < 750)
{
   setfloat(ptouch + 0x0140, getfloat(pobj + 0x0140) + getfloat(pobj + 0x0010) * push);
   setfloat(ptouch + 0x0144, getfloat(pobj + 0x0144) + getfloat(pobj + 0x0014) * push);
   setfloat(ptouch + 0x0148, getfloat(pobj + 0x0148) + getfloat(pobj + 0x0018) * push);
   if (getshort(ptouch + 0x0056) < 170)
   {
       setshort(ptouch + 0x01c8, 0x1020);
       setfloat(ptouch + 0x0148, push * 0.1);
   }
}

#cheat Power Drive!
static boost;
thrust = boost * 0.00333;
static Up;
Power = 1;
setfloat(pcar+0x78, -xstick / 40);
if(ystick < -0.9)
{
Power = 0;
}
else
{
Power = 1;
}
if(ystick > 0.9)
{
boost = 2.0;
}
else
{
boost = 1.0;
}
if (buttons & CTRL_CROSS)
{
if(buttons & CTRL_CIRCLE)
{
Up = 0.3;
}
else
{
Up = 0.1;
}
setfloat(pcar + 0x0140, getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);
setfloat(pcar + 0x0144, getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust);
setfloat(pcar + 0x0148, getfloat(pcar + 0x0148) + getfloat(pcar + 0x0018) * thrust);
if(Power)
{
setfloat(pcar + 0x00000148, +Up);
}
setfloat(pcar + 0x08,   0);
setfloat(pcar + 0x18,   0);
}
if(buttons & CTRL_SQUARE)
{
setfloat(pcar + 0x140, getfloat(pcar + 0x140)*0.95, getfloat(pcar + 0x144)*0.95);
}
if(getfloat(pcar + 0x148) < 0)
{
setfloat(pcar + 0x08,   0);
setfloat(pcar + 0x18,   0);
}

#cheat Car Stunts (Hold O and use analog)
if(xstick < -0.9&&buttons & CTRL_CIRCLE)
{
setfloat(pcar + 0x78,  +0.1);
}

if(xstick > 0.9&&buttons & CTRL_CIRCLE)
{
setfloat(pcar + 0x78,  getfloat(pcar + 0x78)-0.02);
}

#cheat stunt man
static score;
static jumping;
static time;
if(getchar(pplayer+0x1c9) & 0x10)
{
    jumping = true;
    if(xstick)
    {
    setfloat(pplayer+0x78, -xstick / 2);
    score += sqrt(xstick*xstick) * 40;
    }
    if(ystick)
    {
    setfloat(pplayer+0x70, ystick * getfloat(pplayer) / 2);
    setfloat(pplayer+0x74, ystick * getfloat(pplayer+4) / 2);
    score += sqrt(ystick*ystick) * 50;      
    }
} else if(jumping) {
jumping = 0;    
setfloat(pplayer+0x70, 0, 0, 0);  
time = getshort(0x08bb3b40);
setint(0x08bde55c, getint(0x08bde55c)+score);
}
else if(time != 0 && time > getshort(0x08bb3b40) - 5 && score) {
       int = int(score);
       setshort(0x08e90bd8, 1, 'W', 'o', 'w' , ',', ' ', 'y', 'o', 'u', ' ', 'g', 'o', 't', ' ');
       size = 0;
       for(i = 1; i < int; i*=10) size+=2;
       for(i = 0; int > 0; i+=2 ) {
       setshort(0x08e90bf2+size-i, '0' + (int % 10));
       int = int(int/=10);
       }
       setshort(0x08e90bf2+i, ' ', 'p', 'o', 'i', 'n', 't', 's', '!', ' ', ':', ')', 0);
       }
else time = score = sturn = 0;

#cheat Hunter At ArmyBase
//By: Gunner54
vspawn = 0x08E81290;
setint(vspawn, 275);
setfloat(vspawn + 4, -1684.62, -124.43, 14.62); // x, y, z, angle
vspawn += 0x30;

#cheat Submarine + HoverCar
//Credits: Waterbottle
static height;
if(!height)
 height = getfloat(pcar+0x38);
static Zdeg;
 if(!Zdeg)
 Zdeg = getfloat(pplayer+0x8d0);
 
 static st;
 static speed;
 setfloat(pcar+0x1c8, 0x1020);
 setfloat(pcar+0x38, height);
 setfloat(pcar+0x148, 0);
 Zdeg += xstick * 1.5;
 if(ystick)
 {
 Xdeg = getfloat(pcar) * -10 * ystick;
 Ydeg = getfloat(pcar+4) * -10 * ystick;
 }
 else Ydeg = Xdeg = 0;

 if(buttons & CTRL_CROSS)
 {
 if(speed < 0)
         speed += 0.02;
 if(speed < 0.75)
         speed += 0.01;
 }
 else
 if(buttons & CTRL_SQUARE)
 {
 if(speed > 0)
         speed -= 0.015;
 if(speed > -0.4)
         speed -= 0.008;
 }
 else speed *= 0.95;

 if(buttons & CTRL_UP) height+=0.1;
 if(buttons & CTRL_DOWN && !(getchar(pcar+0x4a) & 0x10) ) height-=0.1;
 
 setfloat(pcar+0x00, cos(Ydeg) * cos(Zdeg));
 setfloat(pcar+0x04, sin(Xdeg) * sin(Ydeg) * cos(Zdeg) - cos(Xdeg) * sin(Zdeg));
 setfloat(pcar+0x08, cos(Xdeg) * sin(Ydeg) * cos(Zdeg) + sin(Xdeg) * sin(Zdeg));

 setfloat(pcar+0x10, cos(Ydeg) * sin(Zdeg));
 setfloat(pcar+0x14, sin(Xdeg) * sin(Ydeg) * cos(Zdeg) + cos(Xdeg) * cos(Zdeg));
 setfloat(pcar+0x18, cos(Xdeg) * sin(Ydeg) * sin(Zdeg) - sin(Xdeg) * cos(Zdeg));

 setfloat(pcar+0x20, -sin(Ydeg));
 setfloat(pcar+0x24, sin(Xdeg) * cos(Ydeg));
 setfloat(pcar+0x28, cos(Xdeg) * cos(Ydeg));
 
 setfloat(pcar+0x140, -getfloat(pcar+4)*speed);
 setfloat(pcar+0x144, getfloat(pcar)*speed);
 if(!(getchar(pcar+0x4a) & 0x10) || ystick > 0) height += ystick * speed / 7;

if(!pcar) Xdeg = Ydeg = Zdeg = height = 0;
#off
Xdeg = Ydeg = Zdeg = height = 0;
{
if(getfloat(pcar+0x38)<getfloat(0x96C96B0)+0.8) {
 static speed;
 //set the car ontop of the water
 setfloat(pcar+0x38,  getfloat(0x96C96B0)+0.8);
 setfloat(pcar+0x8,  0);
 setfloat(pcar+0x18,  0);
 setfloat(pcar+0x20,  0,  0,  0);
 setfloat(pcar+0x148,  0);
 //hand brake
 if(buttons & CTRL_RTRIGGER)
 {
 speed*=0.9;
 handb = 2.5;
 } else handb = 1;
 //rotate the vehicle
 if(speed>0.1)
         setfloat(pcar+0x78,  -0.015 * xstick * handb);
 //accelerte
 if(buttons & CTRL_CROSS && speed<0.7)
         speed += 0.02;
 else if(speed>0)
         speed -= 0.01;
 //add speed to car
 setfloat(pcar+0x140,  -getfloat(pcar+4)*speed);
 setfloat(pcar+0x144,  getfloat(pcar)*speed);
}

#cheat Never Been Busted
//By: Gunner54
setchar(0x08BB40AC, 0);

#cheat Never Been Wasted
//By: Gunner54
setchar(0x08BB40A8, 0);

#cheat Teleport to Target (X)
aimx = getfloat(0x08ba1d50);
aimy = getfloat(0x08ba1d54);
aimz = getfloat(0x08ba1d58);
if(buttons & CTRL_RTRIGGER&&press & CTRL_CROSS)
{
setfloat(pplayer + 0x30, aimx);
setfloat(pplayer + 0x34, aimy);
setfloat(pplayer + 0x38, aimz);
}

#cheat Modded Admiral
static fOnce;
if (!fOnce)
{
   fOnce = true;
   memcpy(0x935E3E0, 0x935E680, 0x2a0);
}

#cheat Modded Sentinel XS
static fOnce;
if (!fOnce)
{
   fOnce = true;
   memcpy(0x936F240, 0x935E680, 0x2a0);
}

#cheat Remote Control Vehicle
static Text;
if (!Text)
{
setshort(0x8E90BD8, 1, 'O', '+', 'U', 'P','=', 'L', 'e', 'a', 'v', 'e', ' ', 'c', 'a', 'r', ' ', '-', ' ', 'O', '+', 'D', 'o', 'w', 'n', '=', 'R', 'e', 't', 'u', 'r', 'n', ' ', '-', ' ', 'O', '+', 'R', '=', 'H', 'U', 'D', '/', 'R', 'a', 'd', 'a', 'r', ' ', '-', ' ', 'O', '+', 'L', 'e', 'f', 't', '/', 'R', 'i', 'g', 'h', 't', '=', 'C', 'a', 'm', 0);
}
setchar(pplayer+0x4C, 0x10, 0x20);
if (press & CTRL_CIRCLE&&press & CTRL_UP)
{
Text = true;
setchar(pplayer+0x8B4, 0x36);
setchar(pplayer+0x8B4, 0x38);
}
if (press & CTRL_CIRCLE&&press & CTRL_DOWN)
setchar(pplayer+0x8B4, 0x37);
if (press & CTRL_CIRCLE&&press & CTRL_RTRIGGER)
{
setchar(0x9A63413, 0x02);
setchar(0x9A63418, 0x00);
}
if (press & CTRL_CIRCLE&&press & CTRL_LEFT)
setchar(pplayer+0x8B4, 0x07);
if (press & CTRL_CIRCLE&&press & CTRL_RIGHT)
setchar(pplayer+0x8B4, 0x12);
#off
{
setchar(pplayer+0x4C, 0x00, 0x00);
setchar(0x9A63413, 0x00);
setchar(0x9A63418, 0x01);
}

#cheat RCB use FIRST
//enters last used vehicle as passenger (your bike)
//must be a few feet away from bike(turn on/off QUICKLY)
//if you get stuck just jump
setchar(pplayer+0x8B4, 0x18);

#cheat Remote control bike
//R+UP control bike, R+DOWN get back on bike
//When on bike pressing triangle will give you control of yourself and the bike
//Getting on/off AGAIN will control just vic
if (press & CTRL_RTRIGGER&&press & CTRL_UP)
setchar(pplayer+0x8B4, 0x36);
if (press & CTRL_RTRIGGER&&press & CTRL_DOWN)
setchar(pplayer+0x8B4, 0x37);

#cheat RCB Camera
//PLEASE NOTE-
//vic will stand up straight once LEFT is pressed
//LEFT camera follows bike
//RIGHT camera is stationary
static fInit;
if (!fInit)
{
fInit = true;
setchar(pplayer+0x8B4, 0x02);
}
if (press & CTRL_LEFT)
setchar(pplayer+0x8B4, 0x07);
if (press & CTRL_RIGHT)
setchar(pplayer+0x8B4, 0x12);

#cheat Fast Clock
setchar(0x08bb2db4, 1);
#off
setchar(0x08bb2db4, 0);

#cheat Peds Have Weapons
setchar(0x08baef2c, 1);
#off
setchar(0x08baef2c, 0);

#cheat Invisible Traffic
setchar(0x08bb2450, 1);
#off
setchar(0x08bb2450, 0);

#cheat Perfect Traction, Down=Car Hop
setchar(0x08bb2452, 1);
#off
setchar(0x08bb2452, 0);

#cheat Black Traffic
setchar(0x08bb10d4, 1);
#off
setchar(0x08bb10d4, 0);

#cheat White Traffic
setchar(0x08bb10d5, 1);
#off
setchar(0x08bb10d5, 0);

#cheat Aggressive Drivers
setchar(0x08bb32c8, 1);
#off
setchar(0x08bb32c8, 0);

#cheat All Green Lights
setchar(0x08bafd80, 1);
#off
setchar(0x08bafd80, 0);

#cheat Bobble Head World
setchar(0x08bacdf7, 1);
#off
setchar(0x08bacdf7, 0);

#cheat Guys Follow You
setchar(0x08bacdf5, 1);
#off
setchar(0x08bacdf5, 0);

#cheat Dark Vic
//must be turned off
setchar(pplayer + 0x4A, 32);

#cheat Normal Vic
//must be turned off
setchar(pplayer + 0x4A, 0);

#cheat Heavy Vic
//by vettefan
//makes vic really heavy, and capable of smashing through traffic.
setfloat(pplayer + 0xD0, 7000000, 10000000);
setfloat(pplayer + 0x128, 0, 0);
#off
setfloat(pplayer + 0xD0, 70, 100);

#cheat indestructable cars
//by vettefan
//cars will not attain any physical damage, or engine damage
setfloat(pcar + 0x0000027C, 1000000000);
setfloat(pcar + 0x0000010C, 0);

#cheat turquoise exhaust
//by vettefan
//not as bright and vibrant of a change as in LCS but it's still noticable
setchar(0x9569b94, 0x00, 0xff, 0xff);

#cheat Lamborghini Doors
//By Waterbottle
//Ported from vettefan88's version for LCS
setfloat(pcar+0x450, 0, -1.2566371, 0);
setfloat(pcar+0x480, 0, -1.2566371, 0);
setfloat(pcar+0x4b0, 0, -1.2566371, 0);
setfloat(pcar+0x4e0, 0, -1.2566371, 0);

#cheat 0$
setint(0x08bde55c, 0, 0);

#cheat Bobcat in garage
//By TSF442
//Leave on until garage door opens
//all cars are red unless there is a car with another color first
setint(0x08C739B0, 180);
#off
setint(0x08C739B0, 0);

#cheat Polaris V8 in garage
//By TSF442
//Leave on until garage door opens
//all cars are red unless there is a car with another color first
setint(0x08C739B0, 186);
#off
setint(0x08C739B0, 0);

#cheat Jetski in garage
//By TSF442
//Leave on until garage door opens
//all cars are red unless there is a car with another color first
setint(0x08C739B0, 233);
#off
setint(0x08C739B0, 0);

#cheat Police Wagon
setchar(0x09ab96e2, 208);
setchar(0x09ab96e3, 63);
setchar(0x09ab96e6, 255);
setchar(0x09ab96e7, 64);
setchar(0x09ab96ea, 128);
setchar(0x09ab96eb, 63);
setchar(0x09ab96f6, 4);
setchar(0x09ab96f7, 63);
setchar(0x09ab96fa, 254);
setchar(0x09ab96fb, 62);
setchar(0x09ab99fe, 5);
setchar(0x09ab9a2e, 4);
setchar(0x09abe776, 64);
setchar(0x09abe777, 65);
setchar(0x09abe88e, 3);
setchar(0x09abe8be, 3);
setchar(0x09abf746, 64);
setchar(0x09abf747, 65);
setchar(0x09abf85e, 3);
setchar(0x09ac2bce, 4);
setchar(0x09ac2bfe, 4);
setchar(0x09abd5ae, 4); 

