#cheat invsplayer
setchar(0x098b4a40 + i +0x1cb, 0x3f);

#cheat ronster Caddy
//By: Dudek13l or Dudek12l
setint(0x8C73B30, 184); //Car Id
setchar(0x8C73B30+0x24, 0, 80, 255, 255); //Color 1
setchar(0x8C73B30+0x28, 0, 80, 255, 255); //Color 2
setfloat(0x9360658, 1.6, 1.6); //wheel size
setfloat(0x962f3e0+0x6c, 0.75); //Traction multiplier
setfloat(0x962f3e0+0xc4, 0.85); //Traction loss
setfloat(0x962f3e0+0x70, 0.5); //Traction bias
setchar(0x962f3e0+0x5c, '8', '20', 7); // Drive type / Engine type / Gears
setfloat(0x962f3e0+0x7c, 0.47); //Suspension Upper limit
setfloat(0x962f3e0+0x80, -1); //Suspension lower limit
setfloat(0x962f3e0+0x78, 0.4); //Suspension Damping level
setfloat(0x962f3e0+0x74, 4); //Suspension force level
setfloat(0x962f3e0+0x84, 0.5); //Suspension Bias
setfloat(0x962f3e0+0x88, 0.3); //Anti-dive Multiplier
setfloat(0x962f3e0+0x68, 30); //Steering Lock
setfloat(0x962f3e0+0xbc, 200000); //Vehilce Mass
setfloat(0x962f3e0+0xc0, 200000); //Turn Mass
setfloat(0x962f3e0+0xa0, 0); //Centre of Mass - X
setfloat(0x962f3e0+0xa4, 0); //Centre of Mass - Y
setfloat(0x962f3e0+0xa8, -2); //Centre of Mass - Z
setchar(0x09569B94, 0, 80, 255); // Exhuast
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,  0, 80, 255);}
teleport( 268.31, -174.98, 11.50);
off()

#cheat No Reloading
// By Waterbottle
setint(pplayer+0x5d4,  9);
setint(pplayer+0x5f0,  99);
setint(pplayer+0x60c,  999);
setint(pplayer+0x5b8,  9999);
setint(pplayer+0x628,  99999);
setint(pplayer+0x644,  999999);
setint(pplayer+0x660,  9999999);

#cheat biggiei
setfloat(0x9360B98, 25);

#cheat cop
setchar(pcar + 0x267, 0x75);

#cheat playercop
setchar(pplayer + 0x267, 0x75);

#cheat copped
unknown = getchar(pcar + 0x267);
ID = getshort(unknown + 0x56);
if(ID == 14){
setchar(unknown, 0x75);}

#cheat OFF
setchar(pcar + 0x267, 0x44);

#cheat GET GLASSED
for( rot = 0; rot < 360; rot += 3.6 )
{
    moveto(getfloat(pplayer+0x30) + cos(rot) * 10, getfloat(pplayer+0x34)   + sin(rot) * 10,  

getfloat(pplayer+0x38));  object(0x01A8,  0,  0,  -rot + 90); 
}
off();

#cheat SWAAAAAAAAAAAAAAAAAAP!!
for( rot = 0; rot < 360; rot += 3.6 )
{
    moveto(getfloat(pplayer+0x30) + cos(rot) * 10, getfloat(pplayer+0x34)   + sin(rot) * 10,  

getfloat(pplayer+0x38));  object(0x1D1F,  0,  0,  -rot + 90); 
}
off();

#cheat ringSSSSSS
for( rot = 0; rot < 360; rot += 3.6 )
{
    moveto(getfloat(pplayer+0x30) + cos(rot) * 10, getfloat(pplayer+0x34)   + sin(rot) * 10,  

getfloat(pplayer+0x38));  object(0x1CD5,  0,  0,  -rot + 90); 
}
off();

#cheat BUSDROME
if(getshort(pcar + 0x56) == 237){
if (getfloat(pcar+0xd0)<50000)
setfloat(pcar+0xd0, getfloat(pcar+0xd0)*50000, getfloat(pcar+0xd4)*50000);
setchar(pcar+0x224, 0x00, 0x28, 0x08, 0xFF, 0x00, 0x28, 0x08, 0xff);
hit = getint(pcar + 0x150);
if (hit && getshort(hit + 0x56) >= 170 && getshort(hit + 0x56) <= 280){
explosion=0x08BBBD50;
setchar(explosion, 0xA);
setfloat(explosion+0x10, getfloat(hit+0x30), getfloat(hit+0x34), getfloat(hit+0x38));
setint(explosion+0x28, pobj);
setfloat(explosion+0x20, 5);
setfloat(explosion+0x1c, 1);
setchar(explosion+0x30, 0x30, 0xe4, 0x31, 0x4A, 0xf0);
setchar(explosion+0x35, 0x1);
setchar(explosion+0x3D, 0x1);
setshort(explosion+0x42, 0x4316);}
if( pcar && press & CTRL_SQUARE){
explosion=0x08BBBD50;  
setchar(explosion, 0xa);  
setfloat(explosion+0x10, getfloat(pcar + 0x30) + getfloat(pcar + 0x10) *  40.0, getfloat(pcar + 0x34) + getfloat(pcar + 0x14) *  40.0, getfloat(pcar + 0x38));  
setint(explosion+0x28, pobj);  
setfloat(explosion+0x20, 50);  
setfloat(explosion+0x1c, 1);  
setchar(explosion+0x30, 0x30, 0xe4, 0x31, 0x4A, 0xf0);  
setchar(explosion+0x35, 0x1);  
setchar(explosion+0x3D, 0x1);  
setshort(explosion+0x42, 0x4316);}
setfloat(0x9369178, 2);
setshort(pcar+0x3b6,  0,  0);
carobject = getint(pcar+0x150);
if(getint(pcar+0x150)>0x098b4a40&&getint(pcar+0x150)<0x098ecf90){
setfloat(carobject + 0x4e4,   0);}
if(press & CTRL_DOWN)
{
setfloat(pcar + 0x00000148,  +0.8);
boost = 1.5;
thrust = boost * 0.01;
setfloat(pcar + 0x0140,  getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);
setfloat(pcar + 0x0144,  getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust);
}
setfloat(pcar + 0x27c, 10000);
setfloat(0x9632120+0xbc, 600000); //Vehilce Mass
setfloat(0x9632120+0xc0, 600000); //Turn Mass
setchar(0x9632120+0x5c, 'R', '5', 12); // Drive type / Engine type / Gears
if (buttons & CTRL_CIRCLE && !(buttons & CTRL_LTRIGGER)) {
//calculate speed
speed = sqrt(getfloat(pcar + 0x140) * getfloat(pcar + 0x140) + getfloat(pcar + 0x144) * getfloat(pcar + 0x144));
//if speed is lower than max speed for NOS accelerate
if(speed<1.8) {
setfloat(pcar+0x140,  getfloat(pcar+0x140)-getfloat(pcar+0x4)*0.005);
setfloat(pcar+0x144,  getfloat(pcar+0x144)+getfloat(pcar)*0.005);}}
static UnderWater;
static Height;
if(getfloat(pcar + 0x38) < getfloat(0x96C96B0))
{
UnderWater = 1;
}
else
{
UnderWater = 0;
}

if(UnderWater)
{
setfloat(pcar+0x78, -xstick / 40);
setfloat(pcar + 0x08,   0);
setfloat(pcar + 0x18,   0);
  if (buttons & CTRL_CROSS)
  {
     boost = 1.5;
     thrust = boost * 0.00333;

     // velocity = velocity + forward vector * thrust
     setfloat(pcar + 0x0140, getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);
     setfloat(pcar + 0x0144, getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust);
     setfloat(pcar + 0x0148, getfloat(pcar + 0x0148) + getfloat(pcar + 0x0018) * thrust);
  }

if(ystick < -0.9)
{
setfloat(pcar + 0x00000148, +0.1);
Height = getfloat(pcar + 0x38);
}
if(ystick > 0.9)
{
setfloat(pcar + 0x00000148, -0.1);
Height = getfloat(pcar + 0x38);
}
setfloat(pcar + 0x38, Height);
}
}
#off
setfloat(pcar+0xd0, getfloat(pcar+0xd0)/50000, getfloat(pcar+0xd4)/50000);

#cheat ???
setchar(0x98B5084, 0x01); // ???

#cheat crash chutex2
moveto(450.65, -224.86, 360.70);  object(0x1CB2, 270, 270, 357);
move(-11.29, -0.52, 0.00);  object(0x1CB2, 270, 270, 357);
move(-2.10, -0.10, 0.00);  object(0x1CB2, 270, 270, 357);
move(-9.85, -3.68, 0.00);  object(0x1CB2, 270, 180, 269);
move(-0.18, 6.50, 0.00);  object(0x1CB2, 270, 180, 269);
move(-2.47, -3.27, 0.00);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.70);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -1.70);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, 1.70);  object(0x1CB2, 270, 180, 184);
move(-0.37, 0.04, -7.80);  object(0x1CB2, 270, 180, 188);
move(0.35, -0.04, 0.00);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -4.70);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -4.50);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.80);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.80);  object(0x1CB2, 270, 180, 184);
move(-0.00, 0.00, -13.90);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.80);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -12.80);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.30);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -14.00);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -14.00);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.00);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -12.90);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.20);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 180, 184);
move(-0.11, 0.01, -13.80);  object(0x1CB2, 270, 180, 185);
move(0.00, 0.00, -13.50);  object(0x1CB2, 270, 180, 185);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 180, 185);
move(0.00, 0.00, -12.90);  object(0x1CB2, 270, 180, 185);
move(0.00, 0.00, -12.90);  object(0x1CB2, 270, 180, 185);
move(0.00, 0.00, -13.80);  object(0x1CB2, 270, 180, 185);
move(-0.28, -0.03, -26.60);  object(0x1CB2, 270, 180, 185);
move(0.00, 0.00, -13.50);  object(0x1CB2, 270, 180, 185);
move(0.00, 0.00, -15.10);  object(0x1CB2, 270, 180, 185);
move(0.00, 0.00, -9.20);  object(0x1CB2, 270, 180, 185);
move(2.93, 3.49, 337.81);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -2.70);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -10.70);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.30);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.90);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -14.20);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.90);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.70);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.00);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -12.80);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.20);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.20);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.90);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.90);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.10);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -12.90);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.10);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -12.30);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -12.50);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -12.60);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.20);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.50);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.50);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.70);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -5.40);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -12.70);  object(0x1CB2, 270, 180, 273);
move(-2.88, -3.52, 13.30);  object(0x1CB2, 270, 180, 5);
moveto(424.00, -234.45, -8.81);  object(0x1CA4, 0, 0, 104);
move(0.40, 8.45, 68.80);  object(0x1CB2, 270, 0, 4);
move(5.54, 0.32, -50.27);  object(0x1CB2, 270, 0, 4);
move(-0.00, -0.02, 13.70);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.80);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.40);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.40);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.60);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.07, 14.40);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.50);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 12.30);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 12.80);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 14.40);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.30);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.80);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 12.70);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 11.10);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.30);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 11.20);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.80);  object(0x1CB2, 270, 0, 4);
move(0.01, 0.00, 14.30);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.70);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.80);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 12.20);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 10.60);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 10.10);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 8.90);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 12.30);  object(0x1CB2, 270, 0, 4);
move(-5.34, -0.44, -14.50);  object(0x1CB2, 270, 0, 4);
moveto(436.38, -227.83, 343.64);  object(0x1CB2, 0, 0, 359);
move(-6.31, 2.14, -1.50);  object(0x1CB2, 270, 0, 6);
move(0.00, 0.00, 11.30);  object(0x1CB2, 270, 0, 6);
move(-0.40, 0.04, -6.50);  object(0x1CEA, 270, 0, 6);
move(-4.08, 0.39, 0.00);  object(0x1CEA, 270, 0, 6);
move(1.89, -0.18, 0.00);  object(0x1CEA, 270, 0, 6);
move(-0.28, -2.92, 0.00);  object(0x1CEA, 270, 0, 6);
move(-1.69, 0.16, 0.00);  object(0x1CEA, 270, 0, 6);
move(3.88, -0.38, 0.00);  object(0x1CEA, 270, 0, 6);
move(0.16, 1.61, 0.00);  object(0x1CEA, 270, 0, 6);
move(-2.29, 0.22, 0.00);  object(0x1CEA, 270, 0, 6);
move(-1.69, 0.16, 0.00);  object(0x1CEA, 270, 0, 6);
move(-0.05, 3.68, -6.60);  object(0x1CEB, 270, 0, 6);
move(1.49, -0.14, 0.00);  object(0x1CEB, 270, 0, 6);
move(2.09, -0.20, 0.00);  object(0x1CEB, 270, 0, 6);
move(-0.13, -1.38, 0.00);  object(0x1CEB, 270, 0, 6);
move(-2.09, 0.20, 0.00);  object(0x1CEB, 270, 0, 6);
move(-1.39, 0.13, 0.00);  object(0x1CEB, 270, 0, 6);
move(2.39, -0.23, 0.00);  object(0x1CEB, 270, 0, 6);
move(0.12, 1.24, 0.00);  object(0x1CEB, 270, 0, 6);
move(-0.24, -2.53, 0.00);  object(0x1CEB, 270, 0, 6);
move(1.03, -0.10, 0.00);  object(0x1CEB, 270, 0, 4);
move(-2.10, 0.13, 0.00);  object(0x1CEB, 270, 0, 4);
move(-1.20, 0.07, 0.00);  object(0x1CEB, 270, 0, 4);
move(0.12, 2.44, -13.70);  object(0x01C2, 95, 0, 359);
move(1.10, 0.02, 0.00);  object(0x01C2, 95, 0, 359);
move(1.10, 0.02, 0.00);  object(0x01C2, 95, 0, 359);
move(1.30, 0.02, 0.00);  object(0x01C2, 95, 0, 359);
move(0.02, -1.31, 0.00);  object(0x01C2, 95, 0, 359);
move(-1.30, -0.02, 0.00);  object(0x01C2, 95, 0, 359);
move(-1.00, -0.01, 0.00);  object(0x01C2, 95, 0, 359);
move(-1.00, -0.01, 0.00);  object(0x01C2, 95, 0, 359);
move(0.01, -0.90, 0.00);  object(0x01C2, 95, 0, 359);
move(1.00, 0.01, 0.00);  object(0x01C2, 95, 0, 359);
move(1.00, 0.01, 0.00);  object(0x01C2, 95, 0, 359);
move(1.20, 0.02, 0.00);  object(0x01C2, 95, 0, 359);
move(0.01, -0.80, 0.00);  object(0x01C2, 95, 0, 359);
move(-1.30, -0.02, 0.00);  object(0x01c2, 95, 0, 359);
move(-1.00, -0.01, 0.00);  object(0x01C2, 95, 0, 359);
move(-0.90, -0.01, 0.00);  object(0x01C2, 95, 0, 359);
moveto(429.10, -223.18, 317.24);  object(0x029F, 165, 0, 8);
move(-1.88, 0.26, 0.00);  object(0x029F, 165, 0, 8);
move(-1.49, 0.20, 0.00);  object(0x029F, 165, 0, 8);
move(0.09, -2.44, 0.00);  object(0x029F, 165, 0, 4);
move(2.59, -0.20, 0.00);  object(0x029F, 165, 0, 4);
move(-1.56, -1.88, 0.00);  object(0x029F, 165, 0, 1);
move(-1.00, 2.61, -19.60);  object(0x029F, 0, 0, 2);
move(1.50, -0.06, 0.00);  object(0x029F, 0, 0, 2);
move(1.90, -0.08, 0.00);  object(0x029F, 0, 0, 2);
move(-0.26, -2.38, 0.00);  object(0x029F, 0, 0, 355);
move(-1.79, -0.16, 0.00);  object(0x029F, 0, 0, 355);
move(-1.39, -0.12, 0.00);  object(0x029F, 0, 0, 355);
moveto(429.11, -223.26, 282.92);  object(0x1CE0, 180, 0, 4);
move(-1.80, 0.13, 0.00);  object(0x1CE0, 180, 0, 4);
move(-1.72, 0.04, 0.00);  object(0x1CE0, 180, 0, 7);
move(-0.08, -1.83, 0.00);  object(0x1CE0, 180, 0, 4);
move(1.70, -0.11, 0.00);  object(0x1CE0, 180, 0, 4);
move(1.90, -0.12, 0.00);  object(0x1CE0, 180, 0, 4);
move(-0.12, -1.86, 0.00);  object(0x1CE0, 180, 0, 4);
move(-1.90, 0.12, 0.00);  object(0x1CE0, 180, 0, 4);
move(-1.60, 0.10, 0.00);  object(0x1CE0, 180, 0, 4);
moveto(425.93, -224.39, 274.10);  object(0x029F, 0, 0, 0);
move(2.80, 0.02, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -1.69, 0.00);  object(0x029F, 0, 0, 0);
move(-2.60, -0.02, 0.00);  object(0x029F, 0, 0, 0);
move(0.02, -1.93, 0.00);  object(0x029F, 0, 0, 0);
move(2.40, 0.02, 0.00);  object(0x029F, 0, 0, 0);
move(-0.04, 4.59, -7.70);  object(0x029F, 0, 0, 0);
move(-1.20, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-1.40, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -1.19, 0.00);  object(0x029F, 0, 0, 0);
move(1.40, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(1.10, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -0.90, 0.00);  object(0x029F, 0, 0, 0);
move(-1.00, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-1.40, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -0.97, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -0.91, 0.00);  object(0x029F, 0, 0, 0);
move(1.00, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-0.01, 1.13, 0.00);  object(0x029F, 0, 0, 0);
move(1.30, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -1.00, 0.00);  object(0x029F, 0, 0, 0);
move(-3.03, 4.42, -8.30);  object(0x029F, 0, 0, 0);
move(1.00, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.70, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.90, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.90, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -0.93, 0.00);  object(0x029F, 0, 0, 0);
move(-1.00, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-1.60, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-0.80, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -1.35, 0.00);  object(0x029F, 0, 0, 0);
move(0.70, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.90, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-0.01, 1.20, 0.00);  object(0x029F, 0, 0, 0);
move(0.81, -1.38, 0.00);  object(0x029F, 0, 0, 0);
move(0.70, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -0.93, 0.00);  object(0x029F, 0, 0, 0);
move(-0.80, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-0.60, -0.00, 0.00);  object(0x029F, 0, 0, 0);
move(-0.90, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-0.70, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -1.27, 0.00);  object(0x029F, 0, 0, 0);
move(0.50, 0.00, 0.00);  object(0x029F, 0, 0, 0);
move(0.80, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.70, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.80, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -1.06, 0.00);  object(0x029F, 0, 0, 0);
move(-1.00, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-0.40, -0.00, 0.00);  object(0x029F, 0, 0, 0);
move(-0.80, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-0.60, -0.00, 0.00);  object(0x029F, 0, 0, 0);
moveto(427.57, -223.98, 240.64);  object(0x029F, 270, 0, 3);
move(-1.30, 0.06, 0.00);  object(0x029F, 270, 0, 3);
move(2.80, -0.13, 0.00);  object(0x029F, 270, 0, 3);
move(-0.13, -2.82, 0.00);  object(0x029F, 270, 0, 3);
move(-3.10, 0.14, 0.00);  object(0x029F, 270, 0, 3);
move(1.40, -0.06, 0.00);  object(0x029F, 270, 0, 3);
move(-0.50, 0.02, 0.00);  object(0x029F, 270, 0, 3);
move(0.04, 0.90, 0.00);  object(0x029F, 270, 0, 3);
move(0.80, -0.04, 0.00);  object(0x029F, 270, 0, 3);
move(0.98, 1.84, -18.10);  object(0x029F, 270, 0, 3);
move(-2.60, 0.12, 0.00);  object(0x029F, 270, 0, 3);
move(1.60, -0.07, 0.00);  object(0x029F, 270, 0, 3);
move(-1.40, 0.06, 0.00);  object(0x029F, 270, 0, 3);
move(-0.14, -3.00, 0.00);  object(0x029F, 270, 0, 3);
move(2.30, -0.10, 0.00);  object(0x029F, 270, 0, 3);
move(-1.30, 0.06, 0.00);  object(0x029F, 270, 0, 3);
move(1.20, -0.04, 0.00);  object(0x029F, 270, 0, 4);
move(0.60, -0.04, 0.00);  object(0x029F, 270, 0, 4);
move(-1.50, 0.11, 0.00);  object(0x029F, 270, 0, 4);
moveto(427.20, -226.09, 211.33);  object(0x1CB6, 185, 0, 6);
move(0.00, 0.00, -6.40);  object(0x1CB6, 185, 0, 6);
move(0.00, 0.00, -6.60);  object(0x1CB6, 185, 0, 6);
move(0.00, 0.00, -6.80);  object(0x1CB6, 185, 0, 6);
move(0.00, 0.00, -6.90);  object(0x1CB6, 185, 0, 6);
move(0.00, 0.00, -6.60);  object(0x1CB6, 185, 0, 6);
move(-1.29, 0.14, -4.80);  object(0x1CB6, 185, 0, 6);
move(2.29, -0.26, 0.00);  object(0x1CB6, 185, 0, 6);
move(-0.99, 0.11, 0.00);  object(0x1CB6, 185, 0, 6);
move(0.00, 0.00, -7.80);  object(0x1CB6, 185, 0, 6);
move(0.00, 0.00, -7.10);  object(0x1CB6, 185, 0, 6);
move(0.00, 0.00, -8.20);  object(0x1CB9, 185, 0, 6);
move(0.00, 0.00, -6.30);  object(0x1CB9, 185, 0, 6);
move(0.00, 0.00, -5.20);  object(0x1CB9, 185, 0, 6);
move(0.00, 0.00, -4.70);  object(0x1CB9, 185, 0, 6);
move(0.00, 0.00, -4.50);  object(0x1CB9, 185, 0, 6);
move(0.00, 0.00, -4.60);  object(0x1CB9, 185, 0, 6);
move(0.00, 0.00, -3.70);  object(0x1CCF, 185, 0, 6);
move(0.00, 0.00, -3.90);  object(0x1CCF, 185, 0, 6);
move(0.00, 0.00, -3.20);  object(0x1CCF, 185, 0, 6);
move(0.00, 0.00, -3.00);  object(0x1CCF, 185, 0, 6);
move(0.00, 0.00, -2.20);  object(0x1CCF, 185, 0, 6);
move(0.00, 0.00, -2.60);  object(0x1CCF, 185, 0, 6);
move(0.00, 0.00, -3.20);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -4.50);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -5.20);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -4.70);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -4.20);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -5.10);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -5.40);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -5.90);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -4.30);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, 6.70);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -11.30);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -3.70);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -3.50);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -3.70);  object(0x01C2, 10, 0, 6);
move(0.00, 0.00, -1.60);  object(0x01C2, 10, 0, 6);
move(0.00, 0.00, -2.10);  object(0x01C2, 10, 0, 6);
move(0.00, 0.00, -1.40);  object(0x01C2, 10, 0, 6);
move(0.00, 0.00, -1.00);  object(0x01C2, 10, 0, 6);
move(0.00, 0.00, 3.50);  object(0x01C2, 10, 0, 6);
move(0.00, 0.00, 1.50);  object(0x01C2, 10, 0, 6);
move(0.00, 0.00, -6.60);  object(0x01C2, 10, 0, 6);
move(0.00, 0.00, -2.30);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, -3.70);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, -2.10);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, 3.70);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, -2.40);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, -2.70);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, -3.40);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, -3.60);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, -4.40);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, -4.70);  object(0x01C1, 10, 0, 6);
move(-0.03, 0.69, -4.80);  object(0x01C1, 10, 0, 5);
move(4.15, -6.92, -4.50);  object(0x01C1, 10, 0, 113);
moveto(427.18, -229.22, 350.28);  object(0x1CB2, 270, 0, 87);
move(-0.41, 6.89, 0.00);  object(0x1CB2, 270, 0, 87);
move(0.41, -6.79, -14.20);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -8.80);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -11.30);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -8.30);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -7.20);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.70);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.00);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -14.40);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.20);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -12.10);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -14.40);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -12.60);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.90);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.80);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.10);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.90);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.50);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -14.20);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -14.10);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -14.00);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.90);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -8.70);  object(0x1CB2, 270, 0, 87);
move(0.58, 0.34, -14.30);  object(0x1CB2, 270, 270, 87);
moveto(450.65, -224.86, 360.70);  object(0x1CB2, 270, 270, 357);
move(-11.29, -0.52, 0.00);  object(0x1CB2, 270, 270, 357);
move(-2.10, -0.10, 0.00);  object(0x1CB2, 270, 270, 357);
move(-9.85, -3.68, 0.00);  object(0x1CB2, 270, 180, 269);
move(-0.18, 6.50, 0.00);  object(0x1CB2, 270, 180, 269);
move(-2.47, -3.27, 0.00);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.70);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -1.70);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, 1.70);  object(0x1CB2, 270, 180, 184);
move(-0.37, 0.04, -7.80);  object(0x1CB2, 270, 180, 188);
move(0.35, -0.04, 0.00);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -4.70);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -4.50);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.80);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.80);  object(0x1CB2, 270, 180, 184);
move(-0.00, 0.00, -13.90);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.80);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -12.80);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.30);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -14.00);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -14.00);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.00);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -12.90);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.20);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 180, 184);
move(-0.11, 0.01, -13.80);  object(0x1CB2, 270, 180, 185);
move(0.00, 0.00, -13.50);  object(0x1CB2, 270, 180, 185);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 180, 185);
move(0.00, 0.00, -12.90);  object(0x1CB2, 270, 180, 185);
move(0.00, 0.00, -12.90);  object(0x1CB2, 270, 180, 185);
move(0.00, 0.00, -13.80);  object(0x1CB2, 270, 180, 185);
move(-0.28, -0.03, -26.60);  object(0x1CB2, 270, 180, 185);
move(0.00, 0.00, -13.50);  object(0x1CB2, 270, 180, 185);
move(0.00, 0.00, -15.10);  object(0x1CB2, 270, 180, 185);
move(0.00, 0.00, -9.20);  object(0x1CB2, 270, 180, 185);
move(2.93, 3.49, 337.81);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -2.70);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -10.70);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.30);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.90);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -14.20);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.90);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.70);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.00);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -12.80);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.20);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.20);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.90);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.90);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.10);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -12.90);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.10);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -12.30);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -12.50);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -12.60);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.20);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.50);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.50);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.70);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -5.40);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -12.70);  object(0x1CB2, 270, 180, 273);
move(-2.88, -3.52, 13.30);  object(0x1CB2, 270, 180, 5);
moveto(424.00, -234.45, -8.81);  object(0x1CA4, 0, 0, 104);
move(0.40, 8.45, 68.80);  object(0x1CB2, 270, 0, 4);
move(5.54, 0.32, -50.27);  object(0x1CB2, 270, 0, 4);
move(-0.00, -0.02, 13.70);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.80);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.40);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.40);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.60);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.07, 14.40);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.50);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 12.30);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 12.80);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 14.40);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.30);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.80);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 12.70);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 11.10);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.30);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 11.20);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.80);  object(0x1CB2, 270, 0, 4);
move(0.01, 0.00, 14.30);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.70);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.80);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 12.20);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 10.60);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 10.10);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 8.90);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 12.30);  object(0x1CB2, 270, 0, 4);
move(-5.34, -0.44, -14.50);  object(0x1CB2, 270, 0, 4);
moveto(436.38, -227.83, 343.64);  object(0x1CB2, 0, 0, 359);
move(-6.31, 2.14, -1.50);  object(0x1CB2, 270, 0, 6);
move(0.00, 0.00, 11.30);  object(0x1CB2, 270, 0, 6);
move(-0.40, 0.04, -6.50);  object(0x1CEA, 270, 0, 6);
move(-4.08, 0.39, 0.00);  object(0x1CEA, 270, 0, 6);
move(1.89, -0.18, 0.00);  object(0x1CEA, 270, 0, 6);
move(-0.28, -2.92, 0.00);  object(0x1CEA, 270, 0, 6);
move(-1.69, 0.16, 0.00);  object(0x1CEA, 270, 0, 6);
move(3.88, -0.38, 0.00);  object(0x1CEA, 270, 0, 6);
move(0.16, 1.61, 0.00);  object(0x1CEA, 270, 0, 6);
move(-2.29, 0.22, 0.00);  object(0x1CEA, 270, 0, 6);
move(-1.69, 0.16, 0.00);  object(0x1CEA, 270, 0, 6);
move(-0.05, 3.68, -6.60);  object(0x1CEB, 270, 0, 6);
move(1.49, -0.14, 0.00);  object(0x1CEB, 270, 0, 6);
move(2.09, -0.20, 0.00);  object(0x1CEB, 270, 0, 6);
move(-0.13, -1.38, 0.00);  object(0x1CEB, 270, 0, 6);
move(-2.09, 0.20, 0.00);  object(0x1CEB, 270, 0, 6);
move(-1.39, 0.13, 0.00);  object(0x1CEB, 270, 0, 6);
move(2.39, -0.23, 0.00);  object(0x1CEB, 270, 0, 6);
move(0.12, 1.24, 0.00);  object(0x1CEB, 270, 0, 6);
move(-0.24, -2.53, 0.00);  object(0x1CEB, 270, 0, 6);
move(1.03, -0.10, 0.00);  object(0x1CEB, 270, 0, 4);
move(-2.10, 0.13, 0.00);  object(0x1CEB, 270, 0, 4);
move(-1.20, 0.07, 0.00);  object(0x1CEB, 270, 0, 4);
move(0.12, 2.44, -13.70);  object(0x01C2, 95, 0, 359);
move(1.10, 0.02, 0.00);  object(0x01C2, 95, 0, 359);
move(1.10, 0.02, 0.00);  object(0x01C2, 95, 0, 359);
move(1.30, 0.02, 0.00);  object(0x01C2, 95, 0, 359);
move(0.02, -1.31, 0.00);  object(0x01C2, 95, 0, 359);
move(-1.30, -0.02, 0.00);  object(0x01C2, 95, 0, 359);
move(-1.00, -0.01, 0.00);  object(0x01C2, 95, 0, 359);
move(-1.00, -0.01, 0.00);  object(0x01C2, 95, 0, 359);
move(0.01, -0.90, 0.00);  object(0x01C2, 95, 0, 359);
move(1.00, 0.01, 0.00);  object(0x01C2, 95, 0, 359);
move(1.00, 0.01, 0.00);  object(0x01C2, 95, 0, 359);
move(1.20, 0.02, 0.00);  object(0x01C2, 95, 0, 359);
move(0.01, -0.80, 0.00);  object(0x01C2, 95, 0, 359);
move(-1.30, -0.02, 0.00);  object(0x01c2, 95, 0, 359);
move(-1.00, -0.01, 0.00);  object(0x01C2, 95, 0, 359);
move(-0.90, -0.01, 0.00);  object(0x01C2, 95, 0, 359);
moveto(429.10, -223.18, 317.24);  object(0x029F, 165, 0, 8);
move(-1.88, 0.26, 0.00);  object(0x029F, 165, 0, 8);
move(-1.49, 0.20, 0.00);  object(0x029F, 165, 0, 8);
move(0.09, -2.44, 0.00);  object(0x029F, 165, 0, 4);
move(2.59, -0.20, 0.00);  object(0x029F, 165, 0, 4);
move(-1.56, -1.88, 0.00);  object(0x029F, 165, 0, 1);
move(-1.00, 2.61, -19.60);  object(0x029F, 0, 0, 2);
move(1.50, -0.06, 0.00);  object(0x029F, 0, 0, 2);
move(1.90, -0.08, 0.00);  object(0x029F, 0, 0, 2);
move(-0.26, -2.38, 0.00);  object(0x029F, 0, 0, 355);
move(-1.79, -0.16, 0.00);  object(0x029F, 0, 0, 355);
move(-1.39, -0.12, 0.00);  object(0x029F, 0, 0, 355);
moveto(429.11, -223.26, 282.92);  object(0x1CE0, 180, 0, 4);
move(-1.80, 0.13, 0.00);  object(0x1CE0, 180, 0, 4);
move(-1.72, 0.04, 0.00);  object(0x1CE0, 180, 0, 7);
move(-0.08, -1.83, 0.00);  object(0x1CE0, 180, 0, 4);
move(1.70, -0.11, 0.00);  object(0x1CE0, 180, 0, 4);
move(1.90, -0.12, 0.00);  object(0x1CE0, 180, 0, 4);
move(-0.12, -1.86, 0.00);  object(0x1CE0, 180, 0, 4);
move(-1.90, 0.12, 0.00);  object(0x1CE0, 180, 0, 4);
move(-1.60, 0.10, 0.00);  object(0x1CE0, 180, 0, 4);
moveto(425.93, -224.39, 274.10);  object(0x029F, 0, 0, 0);
move(2.80, 0.02, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -1.69, 0.00);  object(0x029F, 0, 0, 0);
move(-2.60, -0.02, 0.00);  object(0x029F, 0, 0, 0);
move(0.02, -1.93, 0.00);  object(0x029F, 0, 0, 0);
move(2.40, 0.02, 0.00);  object(0x029F, 0, 0, 0);
move(-0.04, 4.59, -7.70);  object(0x029F, 0, 0, 0);
move(-1.20, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-1.40, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -1.19, 0.00);  object(0x029F, 0, 0, 0);
move(1.40, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(1.10, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -0.90, 0.00);  object(0x029F, 0, 0, 0);
move(-1.00, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-1.40, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -0.97, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -0.91, 0.00);  object(0x029F, 0, 0, 0);
move(1.00, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-0.01, 1.13, 0.00);  object(0x029F, 0, 0, 0);
move(1.30, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -1.00, 0.00);  object(0x029F, 0, 0, 0);
move(-3.03, 4.42, -8.30);  object(0x029F, 0, 0, 0);
move(1.00, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.70, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.90, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.90, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -0.93, 0.00);  object(0x029F, 0, 0, 0);
move(-1.00, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-1.60, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-0.80, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -1.35, 0.00);  object(0x029F, 0, 0, 0);
move(0.70, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.90, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-0.01, 1.20, 0.00);  object(0x029F, 0, 0, 0);
move(0.81, -1.38, 0.00);  object(0x029F, 0, 0, 0);
move(0.70, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -0.93, 0.00);  object(0x029F, 0, 0, 0);
move(-0.80, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-0.60, -0.00, 0.00);  object(0x029F, 0, 0, 0);
move(-0.90, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-0.70, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -1.27, 0.00);  object(0x029F, 0, 0, 0);
move(0.50, 0.00, 0.00);  object(0x029F, 0, 0, 0);
move(0.80, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.70, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.80, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -1.06, 0.00);  object(0x029F, 0, 0, 0);
move(-1.00, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-0.40, -0.00, 0.00);  object(0x029F, 0, 0, 0);
move(-0.80, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-0.60, -0.00, 0.00);  object(0x029F, 0, 0, 0);
moveto(427.57, -223.98, 240.64);  object(0x029F, 270, 0, 3);
move(-1.30, 0.06, 0.00);  object(0x029F, 270, 0, 3);
move(2.80, -0.13, 0.00);  object(0x029F, 270, 0, 3);
move(-0.13, -2.82, 0.00);  object(0x029F, 270, 0, 3);
move(-3.10, 0.14, 0.00);  object(0x029F, 270, 0, 3);
move(1.40, -0.06, 0.00);  object(0x029F, 270, 0, 3);
move(-0.50, 0.02, 0.00);  object(0x029F, 270, 0, 3);
move(0.04, 0.90, 0.00);  object(0x029F, 270, 0, 3);
move(0.80, -0.04, 0.00);  object(0x029F, 270, 0, 3);
move(0.98, 1.84, -18.10);  object(0x029F, 270, 0, 3);
move(-2.60, 0.12, 0.00);  object(0x029F, 270, 0, 3);
move(1.60, -0.07, 0.00);  object(0x029F, 270, 0, 3);
move(-1.40, 0.06, 0.00);  object(0x029F, 270, 0, 3);
move(-0.14, -3.00, 0.00);  object(0x029F, 270, 0, 3);
move(2.30, -0.10, 0.00);  object(0x029F, 270, 0, 3);
move(-1.30, 0.06, 0.00);  object(0x029F, 270, 0, 3);
move(1.20, -0.04, 0.00);  object(0x029F, 270, 0, 4);
move(0.60, -0.04, 0.00);  object(0x029F, 270, 0, 4);
move(-1.50, 0.11, 0.00);  object(0x029F, 270, 0, 4);
moveto(427.20, -226.09, 211.33);  object(0x1CB6, 185, 0, 6);
move(0.00, 0.00, -6.40);  object(0x1CB6, 185, 0, 6);
move(0.00, 0.00, -6.60);  object(0x1CB6, 185, 0, 6);
move(0.00, 0.00, -6.80);  object(0x1CB6, 185, 0, 6);
move(0.00, 0.00, -6.90);  object(0x1CB6, 185, 0, 6);
move(0.00, 0.00, -6.60);  object(0x1CB6, 185, 0, 6);
move(-1.29, 0.14, -4.80);  object(0x1CB6, 185, 0, 6);
move(2.29, -0.26, 0.00);  object(0x1CB6, 185, 0, 6);
move(-0.99, 0.11, 0.00);  object(0x1CB6, 185, 0, 6);
move(0.00, 0.00, -7.80);  object(0x1CB6, 185, 0, 6);
move(0.00, 0.00, -7.10);  object(0x1CB6, 185, 0, 6);
move(0.00, 0.00, -8.20);  object(0x1CB9, 185, 0, 6);
move(0.00, 0.00, -6.30);  object(0x1CB9, 185, 0, 6);
move(0.00, 0.00, -5.20);  object(0x1CB9, 185, 0, 6);
move(0.00, 0.00, -4.70);  object(0x1CB9, 185, 0, 6);
move(0.00, 0.00, -4.50);  object(0x1CB9, 185, 0, 6);
move(0.00, 0.00, -4.60);  object(0x1CB9, 185, 0, 6);
move(0.00, 0.00, -3.70);  object(0x1CCF, 185, 0, 6);
move(0.00, 0.00, -3.90);  object(0x1CCF, 185, 0, 6);
move(0.00, 0.00, -3.20);  object(0x1CCF, 185, 0, 6);
move(0.00, 0.00, -3.00);  object(0x1CCF, 185, 0, 6);
move(0.00, 0.00, -2.20);  object(0x1CCF, 185, 0, 6);
move(0.00, 0.00, -2.60);  object(0x1CCF, 185, 0, 6);
move(0.00, 0.00, -3.20);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -4.50);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -5.20);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -4.70);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -4.20);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -5.10);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -5.40);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -5.90);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -4.30);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, 6.70);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -11.30);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -3.70);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -3.50);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -3.70);  object(0x01C2, 10, 0, 6);
move(0.00, 0.00, -1.60);  object(0x01C2, 10, 0, 6);
move(0.00, 0.00, -2.10);  object(0x01C2, 10, 0, 6);
move(0.00, 0.00, -1.40);  object(0x01C2, 10, 0, 6);
move(0.00, 0.00, -1.00);  object(0x01C2, 10, 0, 6);
move(0.00, 0.00, 3.50);  object(0x01C2, 10, 0, 6);
move(0.00, 0.00, 1.50);  object(0x01C2, 10, 0, 6);
move(0.00, 0.00, -6.60);  object(0x01C2, 10, 0, 6);
move(0.00, 0.00, -2.30);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, -3.70);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, -2.10);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, 3.70);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, -2.40);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, -2.70);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, -3.40);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, -3.60);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, -4.40);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, -4.70);  object(0x01C1, 10, 0, 6);
move(-0.03, 0.69, -4.80);  object(0x01C1, 10, 0, 5);
move(4.15, -6.92, -4.50);  object(0x01C1, 10, 0, 113);
moveto(427.18, -229.22, 350.28);  object(0x1CB2, 270, 0, 87);
move(-0.41, 6.89, 0.00);  object(0x1CB2, 270, 0, 87);
move(0.41, -6.79, -14.20);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -8.80);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -11.30);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -8.30);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -7.20);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.70);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.00);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -14.40);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.20);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -12.10);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -14.40);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -12.60);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.90);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.80);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.10);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.90);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.50);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -14.20);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -14.10);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -14.00);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.90);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -8.70);  object(0x1CB2, 270, 0, 87);
move(0.58, 0.34, -14.30);  object(0x1CB2, 270, 270, 87);
teleport(430.43, -225.97, 365.84)

#cheat Overpass Sky
// By Edison Carter
moveto(478,-161.29,2008.7);
move(2.31,4.43,-0.40); object(0x1CA4,90,10,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,10,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,10,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,10,90);
move(0,4.43,0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,10,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,10,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,10,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,10,90);
move(0,4.43,0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,10,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,10,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,10,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,10,90);
move(0,4.43,0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,10,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,10,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,10,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,10,90);
move(0,4.43,0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,10,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,10,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,10,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,10,90);
move(0,4.43,0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,10,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,10,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,10,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,10,90);
move(0,4.43,0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,10,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,10,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,10,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,10,90);
move(0,4.43,0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,10,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,10,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,10,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,10,90);
move(0,4.43,0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,10,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,10,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,10,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,10,90);
move(0,4.43,0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,10,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,10,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,10,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,10,90);
move(0,4.43,0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,10,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,10,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,10,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,10,90);
move(0,4.43,0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,10,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,10,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,10,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,10,90);
move(0,4.43,0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,10,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,10,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,10,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,10,90);
move(0,4.43,0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,10,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,10,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,10,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,10,90);
move(0,4.43,0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,10,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,10,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,10,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,10,90);
move(0,4.43,0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,10,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,10,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,10,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,10,90);
move(0,4.43,0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,10,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,10,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,10,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,10,90);
move(0,4.43,0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,10,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,10,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,10,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,10,90);
move(0,4.43,0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,10,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,10,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,10,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,10,90);
move(0,4.43,0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,10,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,10,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,10,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,10,90);
move(0,4.43,0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,10,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,10,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,10,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,10,90);
move(0,4.43,0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,10,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,10,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,10,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,10,90);
move(0,4.43,0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,10,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,10,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,10,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,10,90);
move(0,4.43,0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,10,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,10,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,10,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,10,90);
move(0,4.43,0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,10,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,10,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,10,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,10,90);
move(0,4.43,(0.77+0.38)/2);
move(2.31,0.00,-0.40); object(0x1CA4,90,5,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,5,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,5,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,5,90);
move(0,4.43,0.38);
move(2.31,0.00,-0.40); object(0x1CA4,90,5,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,5,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,5,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,5,90);
move(0,4.43,0.38);
move(2.31,0.00,-0.40); object(0x1CA4,90,5,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,5,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,5,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,5,90);
move(0,4.43,0.38);
move(2.31,0.00,-0.40); object(0x1CA4,90,5,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,5,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,5,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,5,90);
move(0,4.43,0.38/2);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,90);
move(0,4.43,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,90);
move(0,4.43,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,90);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,90);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,90);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,90);
move(-0.72*0.25,4.43,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,85);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,85);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,85);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,85);
move(-0.72*0.75,4.4,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,80);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,80);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,80);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,80);
move(-0.72*1.25,4.3,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,75);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,75);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,75);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,75);
move(-0.72*1.75,4.2,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,70);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,70);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,70);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,70);
move(-0.72*2.25,4.1,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,65);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,65);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,65);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,65);
move(-0.72*2.75,4.0,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,0);
move(2.31,0.00,-0.40); object(0x1CA4,90,0,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,0,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,0,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,0,60);
move(-2.10,3.9,-0.38/2);
move(2.31,0.00,-0.40); object(0x1CA4,90,-5,60);
move(2.91,0.0,0.00);   object(0x1CA4,90,-5,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,-5,60);
move(-8.19,0.0,0.00);  object(0x1CA4,110,-5,60);
move(-2.10,3.9,-0.38);
move(2.31,0.00,-0.40); object(0x1CA4,90,-5,60);
move(2.91,0.0,0.03);   object(0x1CA4,90,-5,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,-5,60);
move(-8.19,0.0,-0.03);  object(0x1CA4,110,-5,60);
move(-2.10,3.9,-0.38);
move(2.31,0.00,-0.40); object(0x1CA4,90,-5,60);
move(2.91,0.0,0.07);   object(0x1CA4,90,-5,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,-5,60);
move(-8.19,0.0,-0.07);  object(0x1CA4,110,-5,60);
move(-2.10,3.9,(-0.77-0.38)/2);
move(2.31,0.00,-0.40); object(0x1CA4,90,-10,60);
move(2.91,0.0,0.10);   object(0x1CA4,90,-10,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,-10,60);
move(-8.19,0.0,-0.1);  object(0x1CA4,110,-10,60);
move(-2.10,3.9,-0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,-10,60);
move(2.91,0.0,0.14);   object(0x1CA4,90,-10,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,-10,60);
move(-8.19,0.0,-0.14);  object(0x1CA4,110,-10,60);
move(-2.10,3.9,-0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,-10,60);
move(2.91,0.0,0.14);   object(0x1CA4,90,-10,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,-10,60);
move(-8.19,0.0,-0.14);  object(0x1CA4,110,-10,60);
move(-2.10,3.9,-0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,-10,60);
move(2.91,0.0,0.14);   object(0x1CA4,90,-10,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,-10,60);
move(-8.19,0.0,-0.14);  object(0x1CA4,110,-10,60);
move(-2.10,3.9,-0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,-10,60);
move(2.91,0.0,0.14);   object(0x1CA4,90,-10,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,-10,60);
move(-8.19,0.0,-0.14);  object(0x1CA4,110,-10,60);
move(-2.10,3.9,-0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,-10,60);
move(2.91,0.0,0.14);   object(0x1CA4,90,-10,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,-10,60);
move(-8.19,0.0,-0.14);  object(0x1CA4,110,-10,60);
move(-2.10,3.9,-0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,-10,60);
move(2.91,0.0,0.14);   object(0x1CA4,90,-10,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,-10,60);
move(-8.19,0.0,-0.14);  object(0x1CA4,110,-10,60);
move(-2.10,3.9,-0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,-10,60);
move(2.91,0.0,0.14);   object(0x1CA4,90,-10,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,-10,60);
move(-8.19,0.0,-0.14);  object(0x1CA4,110,-10,60);
move(-2.10,3.9,-0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,-10,60);
move(2.91,0.0,0.14);   object(0x1CA4,90,-10,60);
move(2.91,0.0,0.40);   object(0x1CA4,70,-10,60);
move(-8.19,0.0,-0.14);  object(0x1CA4,110,-10,60);
move(-0.72*2.75,4.0,-0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,-10,65);
move(2.91,0.0,0.10);   object(0x1CA4,90,-10,65);
move(2.91,0.0,0.40);   object(0x1CA4,70,-10,65);
move(-8.19,0.0,-0.1);  object(0x1CA4,110,-10,65);
move(-0.72*2.25,4.1,-0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,-10,70);
move(2.91,0.0,0.07);   object(0x1CA4,90,-10,70);
move(2.91,0.0,0.40);   object(0x1CA4,70,-10,70);
move(-8.19,0.0,-0.07);  object(0x1CA4,110,-10,70);
move(-0.72*1.75,4.2,-0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,-10,75);
move(2.91,0.0,0.03);   object(0x1CA4,90,-10,75);
move(2.91,0.0,0.40);   object(0x1CA4,70,-10,75);
move(-8.19,0.0,-0.03);  object(0x1CA4,110,-10,75);
move(-0.72*1.25,4.3,-0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,-10,80);
move(2.91,0.0,0.00);   object(0x1CA4,90,-10,80);
move(2.91,0.0,0.40);   object(0x1CA4,70,-10,80);
move(-8.19,0.0,0.00);  object(0x1CA4,110,-10,80);
move(-0.72*0.75,4.4,-0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,-10,85);
move(2.91,0.0,0.00);   object(0x1CA4,90,-10,85);
move(2.91,0.0,0.40);   object(0x1CA4,70,-10,85);
move(-8.19,0.0,0.00);  object(0x1CA4,110,-10,85);
move(-0.36,4.43,-0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,-10,85);
move(2.91,0.0,0.00);   object(0x1CA4,90,-10,85);
move(2.91,0.0,0.40);   object(0x1CA4,70,-10,85);
move(-8.19,0.0,0.00);  object(0x1CA4,110,-10,85);
move(-0.36,4.43,-0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,-10,85);
move(2.91,0.0,0.00);   object(0x1CA4,90,-10,85);
move(2.91,0.0,0.40);   object(0x1CA4,70,-10,85);
move(-8.19,0.0,0.00);  object(0x1CA4,110,-10,85);
move(-0.36,4.43,-0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,-10,85);
move(2.91,0.0,0.00);   object(0x1CA4,90,-10,85);
move(2.91,0.0,0.40);   object(0x1CA4,70,-10,85);
move(-8.19,0.0,0.00);  object(0x1CA4,110,-10,85);
move(-0.36,4.43,-0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,-10,85);
move(2.91,0.0,0.00);   object(0x1CA4,90,-10,85);
move(2.91,0.0,0.40);   object(0x1CA4,70,-10,85);
move(-8.19,0.0,0.00);  object(0x1CA4,110,-10,85);
move(-0.36,4.43,-0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,-10,85);
move(2.91,0.0,0.00);   object(0x1CA4,90,-10,85);
move(2.91,0.0,0.40);   object(0x1CA4,70,-10,85);
move(-8.19,0.0,0.00);  object(0x1CA4,110,-10,85);
move(-0.36,4.43,-0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,-10,85);
move(2.91,0.0,0.00);   object(0x1CA4,90,-10,85);
move(2.91,0.0,0.40);   object(0x1CA4,70,-10,85);
move(-8.19,0.0,0.00);  object(0x1CA4,110,-10,85);
move(-0.36,4.43,-0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,-10,85);
move(2.91,0.0,0.00);   object(0x1CA4,90,-10,85);
move(2.91,0.0,0.40);   object(0x1CA4,70,-10,85);
move(-8.19,0.0,0.00);  object(0x1CA4,110,-10,85);
move(-0.36,4.43,-0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,-10,85);
move(2.91,0.0,0.00);   object(0x1CA4,90,-10,85);
move(2.91,0.0,0.40);   object(0x1CA4,70,-10,85);
move(-8.19,0.0,0.00);  object(0x1CA4,110,-10,85);
move(-0.36,4.43,-0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,-10,85);
move(2.91,0.0,0.00);   object(0x1CA4,90,-10,85);
move(2.91,0.0,0.40);   object(0x1CA4,70,-10,85);
move(-8.19,0.0,0.00);  object(0x1CA4,110,-10,85);
move(-0.36,4.43,-0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,-10,85);
move(2.91,0.0,0.00);   object(0x1CA4,90,-10,85);
move(2.91,0.0,0.40);   object(0x1CA4,70,-10,85);
move(-8.19,0.0,0.00);  object(0x1CA4,110,-10,85);
move(-0.36,4.43,-0.77);
move(2.31,0.00,-0.40); object(0x1CA4,90,-10,85);
move(2.91,0.0,0.00);   object(0x1CA4,90,-10,85);
move(2.91,0.0,0.40);   object(0x1CA4,70,-10,85);
move(-8.19,0.0,0.00);  object(0x1CA4,110,-10,85);
teleport(481.39, -168.65, 2010.01);

#cheat Stuck!
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==0);
#cheat 5mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==5);
#cheat 10mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==10);
#cheat 20mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==20);
#cheat 35mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==35);
#cheat 50mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==50);
#cheat 75mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==75);
#cheat 100mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==100);
#cheat 120mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==120);
#cheat 150mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==150);
#cheat 175mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==175);
#cheat 200mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==200);
#cheat 250mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==250);
#cheat 300mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==300);
#cheat 350mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==350);
#cheat 400mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==400);
#cheat 450mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==450);
#cheat 500mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==500);
#cheat 550mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==550);
#cheat 600mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==600);
#cheat 650mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==650);
#cheat 700mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==700);
#cheat 750mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==750);
#cheat 800mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==800);
#cheat 850mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==850);
#cheat 900mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==900);
#cheat 950mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==950);
#cheat 1000mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==1000);
#cheat 1500mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==1500);
#cheat 2000mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==2000);
#cheat 3000mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==3000);
#cheat 4000mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==4000);
#cheat 5000mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==5000);
#cheat 7500mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==7500);
#cheat 10000mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==10000);
#cheat 20000mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==20000);
#cheat 50000mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==50000);
#cheat 100000mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==100000);
#cheat 1000000mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==1000000); // ???
#cheat 10000000mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==10000000); // ???
#cheat 100000000mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==100000000); // ???
#cheat 1000000000mh
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)==1000000000); // ???

#cheat $
setint(0x08bde55c, getint(0x08bde55c)+0.1);

#cheat BIG RACEING CAR!
setfloat(0x936E818, 4);