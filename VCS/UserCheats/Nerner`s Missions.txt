#cheat The Corpse of Johnny Wotniz
//Made by Nerner
//With thanks to DDM and Upaluppa
static state;
setint(pplayer+0x680, 0x00ffffff);
setchar(pplayer+0x674, 0x26);
camera=getchar(pplayer+0x789);
if(buttons&CTRL_RTRIGGER&&camera == 0x9&&presslow & CTRL_CIRCLE ){
state = 1;}
if(state == 1){
setchar(0x08E93604, 0x1);
setshort(0x08E92FFC, 'T','a','k','e',' ','t','h','e',' ','e','v','i','d','e','n','c','e',' ','t','o',' ','t','h','e',' ','P','r','i','n','t','w','o','r','k','s', '!');
setshort(0x08E931FC, 'T','a','k','e',' ','t','h','e',' ','e','v','i','d','e','n','c','e',' ','t','o',' ','t','h','e',' ','P','r','i','n','t','w','o','r','k','s', '!');
setshort(0x08E933FC, 'T','a','k','e',' ','t','h','e',' ','e','v','i','d','e','n','c','e',' ','t','o',' ','t','h','e',' ','P','r','i','n','t','w','o','r','k','s', '!');} 
setchar(0x08E93604, 0x1);
static Marker;
X1 = -1055.54;
Y1 = -272.94;
Z1 = 11.40;
setshort(0x08e90bd8, 1, 'F', 'I', 'N ', 'D', ' ', ' H', 'I', 'S', ' ', 'C', 'O',
'R', 'P', 'S', 'E', ' ', '!',0);
if(!Marker){ for(rot = 0;rot<270;rot += 6.0){
moveto(X1+cos(rot)*2,Y1+sin(rot)*2,Z1);object(0x1ce5,0,0,-rot+90);}
Marker = 1;}
checkx1 = X1-getfloat(pobj+0x30);
checky1 = Y1-getfloat(pobj+0x34);
if(sqrt(checkx1*checkx1+checky1*checky1)<2){
setshort(0x08e90DD8, 1, ' ', 'M', 'I', 'S', 'S', 'I', 'O', 'N', ' ', 'P', 'A',
'S', 'S', 'E', 'D', '!', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '+', '$', '1', '0', '0', '0', '0 ', '0', '!',0);
setint(0x08bde55c, getint(0x08bde55c)+100000);
playerx = getfloat(pplayer + 0x030);
playery = getfloat(pplayer + 0x034);
playerz = getfloat(pplayer + 0x038);
teleport( -1087.31, 356.47, 11.27);}
static pina;
static pinasp;
static inRoom;
static rpZ;
static rotpiece;
static gstate;
if(!rotpiece){
moveto(-609.36, -1406.18, 14.23);
pina = object(0x1C91, 0, 0, 0);
pinasp = 1;
moveto(-716.86, -1091.65, 9.42);
rotpiece = object(0x1CD5, 0, 0, 90);
moveto(-750.51, -1091.65, 9.42); object(0x1CD5, 0, 0, 90);
move(11.03, 0.09, 0.00); object(0x1CD5, 0, 0, 90);
move(11.10, 0.09, 0.00); object(0x1CD5, 0, 0, 90);
move(22.59, 0.19, 0.00); object(0x1CD5, 0, 0, 90);
move(11.23, 0.10, 0.00); object(0x1CD5, 0, 0, 90);
move(11.18, 0.10, 0.00); object(0x1CD5, 0, 0, 90);
move(8.93, -4.72, 0.00); object(0x1CB2, 0, 270, 0);
move(0.12, -14.40, 0.00); object(0x1CB2, 0, 270, 0);
move(0.12, -14.40, 0.00); object(0x1CB2, 0, 270, 0);
move(6.76, 0.00, 0.00); object(0x1CB2, 0, 270, 0);
move(-0.18, 14.60, 0.00); object(0x1CB2, 0, 270, 0);
move(-0.17, 14.20, 0.00); object(0x1CB2, 0, 270, 0);
move(-9.96, -5.12, 1.80); object(0x1CB2, 0, 0, 0);
move(0.18, -14.50, 0.00); object(0x1CB2, 0, 0, 0);
move(0.11, -9.30, 0.00); object(0x1CB2, 0, 0, 0);
move(12.76, 28.95, 0.00); object(0x1CB2, 0, 0, 0);
move(0.03, -14.40, 0.00); object(0x1CB2, 0, 0, 0);
move(0.03, -14.50, 0.00); object(0x1CB2, 0, 0, 0);
move(-7.18, 36.08, 0.00); object(0x1CB2, 0, 0, 270);
move(0.59, -43.34, -5.00); object(0x1CB2, 0, 0, 270);
move(-6.24, -7.27, -0.10); object(0x1CB2, 0, 0, 180);
move(0.16, -14.50, 0.00); object(0x1CB2, 0, 0, 180);
move(7.18, -7.26, 0.00); object(0x1CB2, 0, 0, 90);
move(14.40, 0.11, 0.00); object(0x1CB2, 0, 0, 90);
move(-8.65, 21.71, 0.00); object(0x1CB2, 0, 0, 180);
move(7.28, -7.17, 0.00); object(0x1CB2, 0, 0, 90);
move(-5.51, -7.36, 0.00); object(0x1CB2, 0, 85, 0);
move(6.75, 0.05, 0.40); object(0x1CB2, 0, 85, 0);
move(6.78, 0.05, 0.20); object(0x1CB2, 0, 90, 0);
move(6.76, 0.05, 0.00); object(0x1CB2, 0, 90, 0);
move(6.70, 0.05, 0.00); object(0x1CB2, 0, 90, 0);
move(-7.00, 7.34, 2.40); object(0x1CB2, 0, 0, 270);
move(3.00, -0.00, 0.00); object(0x1CB2, 0, 0, 270);
move(-0.02, -14.62, 0.00); object(0x1CB2, 0, 0, 270);
move(-1.50, 0.00, 0.00); object(0x1CB2, 0, 0, 270);
move(16.22, 3.34, -2.40); object(0x1CB2, 0, 90, 270);
move(0.04, 6.79, 0.00); object(0x1CB2, 0, 90, 270);
move(0.01, 1.08, 0.00); object(0x1CB2, 0, 90, 270);
move(-0.07, -11.36, 2.50); object(0x1CB2, 0, 0, 270);
move(0.00, 0.00, 6.50); object(0x1CB2, 0, 0, 270);
move(0.00, 0.00, 6.60); object(0x1CB2, 0, 0, 270);
move(0.00, 0.00, 6.70); object(0x1CB2, 0, 0, 270);
move(-7.29, 7.24, -13.30); object(0x1CB2, 0, 0, 180);
move(0.00, 0.00, 6.60); object(0x1CB2, 0, 0, 180);
move(0.00, 0.00, 6.70); object(0x1CB2, 0, 0, 180);
move(14.58, 0.03, -19.60); object(0x1CB2, 0, 0, 180);
move(0.00, 0.00, 6.80); object(0x1CB2, 0, 0, 180);
move(0.00, 0.00, 6.20); object(0x1CB2, 0, 0, 180);
move(-7.25, 7.46, -13.30); object(0x1CB2, 0, 0, 90);
move(0.00, 0.00, 6.60); object(0x1CB2, 0, 0, 90);
move(0.00, 0.00, 6.70); object(0x1CB2, 0, 0, 90);
move(0.00, 0.00, 6.50); object(0x1CB2, 0, 0, 90);
move(0.02, -3.34, 3.40); object(0x1CB2, 0, 90, 90);
move(0.04, -6.81, 0.00); object(0x1CB2, 0, 90, 90);
move(0.01, -1.18, 0.00); object(0x1CB2, 0, 90, 90);
move(10.61, 3.83, -6.70); object(0x1CB2, 0, 90, 180);
moveto(-607.49, -1153.60, 25.66); object(0x1CB2, 0, 90, 0);
move(3.35, 0.03, 3.40); object(0x1CB2, 0, 0, 0);
move(-7.13, 7.28, 0.00); object(0x1CB2, 0, 0, 270);
move(0.98, -18.06, -3.40); object(0x1CB2, 0, 90, 270);
move(0.03, -6.64, 0.00); object(0x1CB2, 0, 90, 270);
move(14.50, 0.07, 0.00); object(0x1CB2, 0, 90, 270);
move(0.03, -6.73, 0.00); object(0x1CB2, 0, 90, 270);
move(0.03, -6.69, 0.00); object(0x1CB2, 0, 90, 270);
move(-14.60, -0.07, 0.00); object(0x1CB2, 0, 90, 270);
move(0.03, -6.77, 0.00); object(0x1CB2, 0, 90, 270);
move(-0.07, -6.74, 0.00); object(0x1CB2, 0, 90, 270);
move(0.03, -6.82, 0.00); object(0x1CB2, 0, 90, 270);
move(-7.35, 36.64, 3.20); object(0x1CB2, 0, 0, 0);
move(0.01, -14.60, 0.00); object(0x1CB2, 0, 0, 0);
move(0.01, -14.60, 0.00); object(0x1CB2, 0, 0, 0);
move(0.00, -3.60, 0.00); object(0x1CB2, 0, 0, 0);
move(29.44, 0.02, 0.00); object(0x1CB2, 0, 0, 0);
move(-0.01, 14.50, 0.00); object(0x1CB2, 0, 0, 0);
move(-0.01, 14.50, 0.00); object(0x1CB2, 0, 0, 0);
move(-8.65, 10.93, 0.00); object(0x1CB2, 0, 0, 270);
move(1.50, -0.01, 0.00); object(0x1CB2, 0, 0, 270);
move(7.16, -7.11, 0.00); object(0x1CB2, 0, 0, 0);
move(-21.99, -43.35, -3.10); object(0x1CB2, 0, 90, 270);
move(14.69, 3.28, 3.00); object(0x1CB2, 0, 0, 270);
move(-14.60, -10.04, -3.00); object(0x1CB2, 0, 90, 270);
moveto(-617.59, -1214.22, 28.86); object(0x1CB2, 0, 0, 180);
move(14.77, -1.17, 0.00); object(0x1CB2, 0, 0, 180);
move(-7.39, -3.90, -3.20); object(0x1CB2, 0, 90, 270);
move(-7.38, 3.90, 3.20); object(0x1CB2, 0, 0, 180);
move(0.18, -14.60, 0.00); object(0x1CB2, 0, 0, 180);
move(14.65, 0.18, 0.00); object(0x1CB2, 0, 0, 180);
move(-7.27, 7.17, -6.50); object(0x1CB2, 0, 0, 90);
move(0.00, 0.00, -6.70); object(0x1CB2, 0, 0, 90);
move(-0.01, -3.33, -3.40); object(0x1CB2, 0, 270, 90);
move(-0.02, -6.77, 0.00); object(0x1CB2, 0, 270, 90);
move(-0.02, -6.81, 0.00); object(0x1CB2, 0, 270, 90);
move(0.01, 2.59, 16.50); object(0x1CB2, 0, 0, 90);
move(0.00, 0.00, -6.80); object(0x1CB2, 0, 0, 90);
move(7.28, 7.16, 0.10); object(0x1CB2, 0, 0, 0);
move(0.00, 0.00, -6.80); object(0x1CB2, 0, 0, 0);
move(-14.37, -0.13, 0.00); object(0x1CB2, 0, 0, 180);
move(-0.00, 0.10, 6.80); object(0x1CB2, 0, 0, 180);
move(7.02, -16.50, -9.80); object(0x1CB2, 0, 90, 90);
move(-0.01, -6.91, 0.00); object(0x1CB2, 0, 90, 90);
move(-0.01, -6.80, 0.00); object(0x1CB2, 0, 90, 90);
move(-0.01, -6.84, 0.00); object(0x1CB2, 0, 90, 90);
move(0.05, 26.68, 6.30); object(0x1CB2, 0, 90, 90);
move(-0.01, -6.69, 0.00); object(0x1CB2, 0, 90, 90);
move(-0.01, -6.81, 0.00); object(0x1CB2, 0, 90, 90);
move(-0.01, -6.82, 0.00); object(0x1CB2, 0, 90, 90);
move(-0.01, -6.31, 0.00); object(0x1CB2, 0, 90, 90);
move(-7.06, 22.25, -3.10); object(0x1CB2, 0, 0, 180);
move(0.12, -14.60, 0.00); object(0x1CB2, 0, 0, 180);
move(0.03, -3.70, 0.00); object(0x1CB2, 0, 0, 180);
move(13.80, -0.37, 0.00); object(0x1CB2, 0, 0, 0);
move(-0.15, 14.60, 0.00); object(0x1CB2, 0, 0, 0);
move(0.14, 4.30, 0.00); object(0x1CB2, 0, 0, 0);
moveto(-610.07, -1273.53, 12.20); object(0x1CB2, 0, 90, 90);
move(-0.12, -6.73, 0.05); object(0x1CB2, 0, 90, 90);
move(-14.57, 13.33, 0.00); object(0x1CB2, 0, 90, 90);
move(0.04, -6.80, 0.00); object(0x1CB2, 0, 90, 90);
move(0.04, -6.47, 0.00); object(0x1CB2, 0, 90, 90);
move(29.09, 0.18, 0.00); object(0x1CB2, 0, 90, 90);
move(-0.04, 6.75, 0.00); object(0x1CB2, 0, 90, 90);
move(-0.04, 6.34, 0.00); object(0x1CB2, 0, 90, 90);
move(0.11, -19.90, 0.00); object(0x1CB2, 0, 90, 90);
move(-14.60, -0.09, 0.00); object(0x1CB2, 0, 90, 90);
move(-14.50, -0.09, 0.00); object(0x1CB2, 0, 90, 90);
move(-0.10, 16.86, 2.80); object(0x1CB2, 0, 0, 90);
move(29.19, 0.18, 0.00); object(0x1CB2, 0, 0, 90);
move(7.13, -7.34, 0.00); object(0x1CB2, 0, 0, 180);
move(0.05, -5.70, 0.00); object(0x1CB2, 0, 0, 180);
move(-43.62, -0.39, 0.00); object(0x1CB2, 0, 0, 180);
move(-0.05, 5.90, 0.00); object(0x1CB2, 0, 0, 180);
move(7.39, -12.76, -6.10); object(0x1CB2, 0, 0, 90);
move(14.50, -0.02, 0.00); object(0x1CB2, 0, 0, 90);
move(14.50, -0.02, 0.00); object(0x1CB2, 0, 0, 90);
move(7.34, -7.28, 0.00); object(0x1CB2, 0, 0, 180);
move(0.04, -14.40, 0.00); object(0x1CB2, 0, 0, 180);
move(0.04, -14.60, 0.00); object(0x1CB2, 0, 0, 180);
move(-29.00, 29.51, 0.00); object(0x1CB2, 0, 0, 180);
move(0.04, -14.70, 0.00); object(0x1CB2, 0, 0, 180);
move(0.04, -14.50, 0.00); object(0x1CB2, 0, 0, 180);
move(-7.46, 36.00, 6.10); object(0x1CB2, 0, 0, 90);
move(7.33, -7.29, 0.00); object(0x1CB2, 0, 0, 180);
move(0.15, -14.60, 0.00); object(0x1CB2, 0, 0, 180);
move(0.15, -14.10, 0.00); object(0x1CB2, 0, 0, 180);
move(28.78, -0.31, 0.00); object(0x1CB2, 0, 0, 180);
move(-28.76, -0.29, 0.00); object(0x1CB2, 0, 0, 180);
move(0.00, 0.00, -6.20); object(0x1CB2, 0, 0, 180);
move(28.65, 14.78, 6.20); object(0x1CB2, 0, 0, 180);
move(-0.14, 14.50, 0.00); object(0x1CB2, 0, 0, 180);
move(-21.17, -37.31, -6.20); object(0x1CB2, 0, 0, 276);
move(-0.12, 0.77, 0.00); object(0x1CB2, 0, 0, 270);
move(14.20, 0.09, 0.00); object(0x1CB2, 0, 0, 270);
move(-0.08, -3.43, 3.30); object(0x1CB2, 0, 90, 270);
move(-14.00, -0.09, 0.00); object(0x1CB2, 0, 90, 270);
move(4.29, 44.99, 0.10); object(0x1C8B, 90, 0, 0);
move(0.02, -2.20, 0.00); object(0x1C8B, 90, 0, 0);
move(0.02, -2.40, 0.00); object(0x1C8B, 90, 0, 0);
move(0.02, -2.30, 0.00); object(0x1C8B, 90, 0, 0);
move(0.02, -2.30, 0.00); object(0x1C8B, 90, 0, 0);
move(0.02, -2.40, 0.00); object(0x1C8B, 90, 0, 0);
move(0.02, -2.40, 0.00); object(0x1C8B, 90, 0, 0);
move(0.02, -2.30, 0.00); object(0x1C8B, 90, 0, 0);
move(0.02, -2.40, 0.00); object(0x1C8B, 90, 0, 0);
move(0.02, -2.30, 0.00); object(0x1C8B, 90, 0, 0);
move(0.02, -2.40, 0.00); object(0x1C8B, 90, 0, 0);
move(0.02, -2.40, 0.00); object(0x1C8B, 90, 0, 0);
move(0.02, -2.30, 0.00); object(0x1C8B, 90, 0, 0);
move(0.02, -2.20, 0.00); object(0x1C8B, 90, 0, 0);
move(0.02, -2.40, 0.00); object(0x1C8B, 90, 0, 0);
move(0.02, -2.40, 0.00); object(0x1C8B, 90, 0, 0);
move(0.02, -2.30, 0.00); object(0x1C8B, 90, 0, 0);
move(0.02, -2.40, 0.00); object(0x1C8B, 90, 0, 0);
move(0.02, -2.20, 0.00); object(0x1C8B, 90, 0, 0);
moveto(-674.29, -1095.96, 14.56); object(0x1CB2, 0, 90, 0);
move(0.11, -14.30, 0.00); object(0x1CB2, 0, 90, 0);
move(0.12, -14.50, 0.00); object(0x1CB2, 0, 90, 0);
move(6.06, 0.05, 0.00); object(0x1CB2, 0, 90, 0);
move(-0.12, 14.70, 0.00); object(0x1CB2, 0, 90, 0);
move(-0.06, 14.10, 0.00); object(0x1CB2, 0, 90, 0);
move(20.99, -57.61, -2.10); object(0x1CB2, 0, 90, 180);
move(6.82, 0.06, 0.00); object(0x1CB2, 0, 90, 180);
move(4.54, 0.03, 0.00); object(0x1CB2, 0, 90, 180);
move(24.39, 3.90, 19.80); object(0x1CB2, 0, 90, 270);
move(0.05, -6.68, 0.00); object(0x1CB2, 0, 90, 270);
move(0.01, -1.34, 0.00); object(0x1CB2, 0, 90, 270);
move(1.26, -76.13, 0.00); object(0x1CB2, 0, 90, 270);
move(-0.05, 6.80, 0.00); object(0x1CB2, 0, 90, 270);
move(-0.05, 6.81, 0.00); object(0x1CB2, 0, 90, 270);
move(-0.07, 10.00, 0.00); object(0x1CB2, 0, 90, 270);
move(-0.05, 6.75, 0.00); object(0x1CB2, 0, 90, 270);
move(14.71, -1.33, 0.00); object(0x1CB2, 0, 90, 270);
move(-0.05, 6.67, 0.00); object(0x1CB2, 0, 90, 270);
move(-0.05, 6.81, 0.00); object(0x1CB2, 0, 90, 270);
move(-0.05, 6.79, 0.00); object(0x1CB2, 0, 90, 270);
move(-0.05, 6.72, 0.00); object(0x1CB2, 0, 90, 270);
move(-0.05, 6.75, 0.00); object(0x1CB2, 0, 90, 270);
move(-0.05, 6.60, 0.00); object(0x1CB2, 0, 90, 270);
move(-14.50, -0.11, 0.00); object(0x1CB2, 0, 90, 270);
move(0.05, -6.42, 0.00); object(0x1CB2, 0, 90, 270);
move(0.06, -6.78, 0.00); object(0x1CB2, 0, 90, 270);
move(0.06, -6.77, 0.00); object(0x1CB2, 0, 90, 270);
move(0.06, -6.83, 0.00); object(0x1CB2, 0, 90, 270);
move(0.02, -6.75, 0.00); object(0x1CB2, 0, 90, 270);
move(-14.50, -89.34, -13.90); object(0x1CB2, 0, 90, 270);
move(-0.02, 6.82, 0.00); object(0x1CB2, 0, 90, 270);
move(-0.01, 6.81, 0.00); object(0x1CB2, 0, 90, 270);
move(14.50, 0.04, 0.00); object(0x1CB2, 0, 90, 270);
move(14.40, 0.04, 0.00); object(0x1CB2, 0, 90, 270);
move(0.02, -6.77, 0.00); object(0x1CB2, 0, 90, 270);
move(-14.40, -0.04, 0.00); object(0x1CB2, 0, 90, 270);
move(0.02, -6.79, 0.00); object(0x1CB2, 0, 90, 270);
move(14.50, 0.04, 0.00); object(0x1CB2, 0, 90, 270);
moveto(-595.63, -1293.83, 18.19); object(0x1CB2, 0, 90, 90);
move(-14.60, -0.04, 0.00); object(0x1CB2, 0, 90, 90);
move(0.02, -6.69, 0.00); object(0x1CB2, 0, 90, 90);
move(14.60, 0.04, 0.00); object(0x1CB2, 0, 90, 90);
move(0.02, -6.72, 0.00); object(0x1CB2, 0, 90, 90);
move(-14.60, -0.04, 0.00); object(0x1CB2, 0, 90, 90);
move(0.02, -6.69, 0.00); object(0x1CB2, 0, 90, 90);
move(14.60, 0.04, 0.00); object(0x1CB2, 0, 90, 90);
move(0.02, -6.78, 0.00); object(0x1CB2, 0, 90, 90);
move(-14.50, -0.04, 0.00); object(0x1CB2, 0, 90, 90);
move(0.02, -6.78, 0.00); object(0x1CB2, 0, 90, 90);
move(14.40, 0.04, 0.00); object(0x1CB2, 0, 90, 90);
move(0.01, -3.00, 0.00); object(0x1CB2, 0, 90, 90);
move(-14.50, -0.04, 0.00); object(0x1CB2, 0, 90, 90);
moveto(-595.71, -1344.22, 12.09); object(0x1CB2, 0, 90, 90);
move(-14.00, -0.02, 0.00); object(0x1CB2, 0, 90, 90);
move(0.01, -6.77, 0.00); object(0x1CB2, 0, 90, 90);
move(14.29, 3.40, 3.40); object(0x1CB2, 0, 0, 90);
move(7.26, 6.60, -0.40); object(0x1CB2, 0, 0, 0);
move(-28.93, -0.13, 0.00); object(0x1CB2, 0, 0, 0);
move(7.00, 3.74, 3.30); object(0x1CB2, 0, 90, 90);
move(14.30, -0.02, 0.00); object(0x1CB2, 0, 90, 90);
move(0.29, -6.76, 0.00); object(0x1CB2, 0, 90, 90);
move(0.57, 6.88, 0.00); object(0x1CB2, 0, 90, 90);
move(-15.16, -6.96, 0.00); object(0x1CB2, 0, 90, 90);
moveto(-609.69, -1357.80, 12.09); object(0x1CB2, 0, 90, 90);
move(0.04, -6.81, 0.00); object(0x1CB2, 0, 90, 90);
move(0.04, -6.78, 0.00); object(0x1CB2, 0, 90, 90);
move(0.04, -6.78, 0.00); object(0x1CB2, 0, 90, 90);
move(0.04, -6.75, 0.00); object(0x1CB2, 0, 90, 90);
move(0.04, -6.74, 0.00); object(0x1CB2, 0, 90, 90);
move(0.04, -6.71, 0.00); object(0x1CB2, 0, 90, 90);
move(0.04, -6.70, 0.00); object(0x1CB2, 0, 90, 90);
moveto(-602.53, -1354.95, 15.53); object(0x1CB2, 0, 0, 0);
move(0.15, -18.10, 0.00); object(0x1CB2, 0, 0, 0);
move(0.12, -14.50, 0.00); object(0x1CB2, 0, 0, 0);
move(0.12, -13.70, 0.00); object(0x1CB2, 0, 0, 0);
move(-14.43, -0.12, 0.00); object(0x1CB2, 0, 0, 0);
move(-0.12, 14.60, 0.00); object(0x1CB2, 0, 0, 0);
move(-0.13, 14.70, 0.00); object(0x1CB2, 0, 0, 0);
move(-0.22, 16.30, -0.10); object(0x1CB2, 0, 0, 0);
move(0.02, -2.20, 0.00); object(0x1CB2, 0, 0, 0);
move(7.30, 6.96, 2.80); object(0x1CB2, 0, 90, 90);
move(0.00, -6.78, 0.00); object(0x1CB2, 0, 90, 90);
move(0.00, -6.73, 0.00); object(0x1CB2, 0, 90, 90);
move(0.00, -6.55, 0.00); object(0x1CB2, 0, 90, 90);
move(0.00, -6.79, 0.00); object(0x1CB2, 0, 90, 90);
move(0.00, -6.72, 0.00); object(0x1CB2, 0, 90, 90);
move(0.00, -6.69, 0.00); object(0x1CB2, 0, 90, 90);
move(0.00, -6.74, 0.00); object(0x1CB2, 0, 90, 90);
move(0.00, -6.46, 0.00); object(0x1CB2, 0, 90, 90);
move(0.30, -0.78, 0.00); object(0x1CB2, 0, 90, 90);
moveto(-602.50, -1366.96, 15.53); object(0x1CB2, 0, 0, 0);
move(-53.33, 206.19, -6.40); object(0x1CB2, 0, 0, 90);
move(-14.30, -0.10, 0.00); object(0x1CB2, 0, 0, 90);
move(-7.18, 7.24, 0.00); object(0x1CB2, 0, 0, 180);
move(-0.14, 14.50, 0.00); object(0x1CB2, 0, 0, 180);
move(12.95, 0.33, 0.00); object(0x1CB2, 0, 0, 180);
move(0.00, -0.40, 0.00); object(0x1CB2, 0, 0, 180);
move(7.34, -7.09, 0.00); object(0x1CB2, 0, 0, 90);
move(-11.91, -7.41, -4.60); object(0x1CB2, 0, 290, 180);
move(4.56, 14.50, 6.71); object(0x1CB2, 0, 0, 0);
move(-12.91, -0.10, 0.00); object(0x1CB2, 0, 0, 0);
move(0.11, -14.30, 0.00); object(0x1CB2, 0, 0, 0);
move(7.30, -7.26, 0.00); object(0x1CB2, 0, 0, 270);
move(12.20, 0.00, 0.00); object(0x1CB2, 0, 0, 270);
move(0.60, 14.30, 0.00); object(0x1CB2, 0, 0, 270);
move(-16.83, 7.18, 3.30); object(0x1CB2, 0, 90, 0);
move(0.10, -14.20, 0.00); object(0x1CB2, 0, 90, 0);
move(6.18, 0.04, 0.00); object(0x1CB2, 0, 90, 0);
move(-0.10, 14.20, 0.00); object(0x1CB2, 0, 90, 0);
move(6.79, -14.15, 0.00); object(0x1CB2, 0, 90, 0);
move(7.34, 0.05, -1.00); object(0x1CB2, 0, 110, 0);
move(-6.21, -0.06, 1.00); object(0x1CB2, 0, 90, 0);
moveto(-609.40, -1411.78, 12.12); object(0x1CB2, 0, 90, 90);
move(14.60, -0.04, 0.00); object(0x1CB2, 0, 90, 90);
move(-29.19, 0.07, 0.00); object(0x1CB2, 0, 90, 90);
move(-0.02, -6.75, 0.00); object(0x1CB2, 0, 90, 90);
move(14.60, -0.04, 0.00); object(0x1CB2, 0, 90, 90);
move(14.60, -0.04, 0.00); object(0x1CB2, 0, 90, 90);
move(-0.02, -6.79, 0.00); object(0x1CB2, 0, 90, 90);
move(-14.50, 0.04, 0.00); object(0x1CB2, 0, 90, 90);
move(-14.70, 0.04, 0.00); object(0x1CB2, 0, 90, 90);
move(-0.02, -6.79, 0.00); object(0x1CB2, 0, 90, 90);
move(14.60, -0.04, 0.00); object(0x1CB2, 0, 90, 90);
move(14.60, -0.04, 0.00); object(0x1CB2, 0, 90, 90);
move(-0.02, -6.72, 0.00); object(0x1CB2, 0, 90, 90);
move(-14.50, 0.04, 0.00); object(0x1CB2, 0, 90, 90);
move(-14.70, 0.04, 0.00); object(0x1CB2, 0, 90, 90);
move(-0.01, -3.40, 3.40); object(0x1CB2, 0, 0, 90);
move(14.50, -0.04, 0.00); object(0x1CB2, 0, 0, 90);
move(14.60, -0.04, 0.00); object(0x1CB2, 0, 0, 90);
move(0.21, 33.84, 0.00); object(0x1CB2, 0, 0, 270);
move(-29.30, 0.12, 0.00); object(0x1CB2, 0, 0, 270);
move(-7.20, -26.48, 0.00); object(0x1CB2, 0, 0, 180);
move(-0.16, 14.60, 0.00); object(0x1CB2, 0, 0, 180);
move(-0.05, 4.60, 0.00); object(0x1CB2, 0, 0, 180);
move(43.96, -0.12, 0.00); object(0x1CB2, 0, 0, 180);
move(-0.04, -19.20, 0.00); object(0x1CB2, 0, 0, 180);
move(-0.10, 9.20, 0.00); object(0x1CB2, 0, 0, 180);
move(0.21, 10.00, 6.70); object(0x1CB2, 0, 0, 180);
move(-0.05, -14.50, 0.00); object(0x1CB2, 0, 0, 180);
move(0.05, -4.70, 0.00); object(0x1CB2, 0, 0, 180);
move(-7.40, 26.53, 0.00); object(0x1CB2, 0, 0, 90);
move(-29.20, 0.24, 0.00); object(0x1CB2, 0, 0, 90);
move(14.70, -0.13, 0.00); object(0x1CB2, 0, 0, 90);
move(0.00, 0.00, -0.70); object(0x1CB2, 0, 0, 90);
move(-22.12, -7.28, 0.70); object(0x1CB2, 0, 0, 0);
move(0.11, -14.60, 0.00); object(0x1CB2, 0, 0, 0);
move(0.04, -4.80, 0.00); object(0x1CB2, 0, 0, 0);
move(7.43, -7.15, 0.00); object(0x1CB2, 0, 0, 270);
move(14.60, 0.07, 0.00); object(0x1CB2, 0, 0, 270);
move(14.60, 0.07, 0.00); object(0x1CB2, 0, 0, 270);
move(-24.78, 15.34, -8.90); object(0x1CA4, 0, 0, 0);
move(1.81, -2.56, 0.00); object(0x1CA4, 0, 0, 270);
move(-4.30, -0.02, 0.00); object(0x1CA4, 0, 0, 270);
move(2.49, -1.80, 0.00); object(0x1CA4, 0, 0, 359);
move(21.29, 0.26, 0.00); object(0x1CA4, 0, 0, 359);
move(1.80, 1.78, 0.00); object(0x1CA4, 0, 0, 270);
move(-4.30, -0.03, 0.00); object(0x1CA4, 0, 0, 270);
move(2.58, 1.79, 0.00); object(0x1CA4, 0, 0, 180);
move(-2.25, 0.25, 1.90); object(0x1C98, 0, 270, 180);
move(4.10, 0.03, 0.00); object(0x1C98, 0, 270, 180);
move(-21.29, -0.13, 0.00); object(0x1C98, 0, 270, 180);
move(-4.00, -0.02, 0.00); object(0x1C98, 0, 270, 180);
move(12.85, -12.78, -3.40); object(0x1C90, 0, 0, 180);
moveto(-594.70, -1438.84, 25.56); object(0x1CB2, 0, 90, 90);
move(-14.50, 0.07, 0.00); object(0x1CB2, 0, 90, 90);
move(-14.70, 0.07, 0.00); object(0x1CB2, 0, 90, 90);
move(0.03, 6.76, 0.00); object(0x1CB2, 0, 90, 90);
move(14.50, -0.07, 0.00); object(0x1CB2, 0, 90, 90);
move(14.60, -0.11, 0.00); object(0x1CB2, 0, 90, 90);
move(0.03, 6.65, 0.00); object(0x1CB2, 0, 90, 90);
move(0.03, 6.78, 0.00); object(0x1CB2, 0, 90, 90);
move(0.03, 6.82, 0.00); object(0x1CB2, 0, 90, 90);
move(-14.60, 0.07, 0.00); object(0x1CB2, 0, 90, 90);
move(-0.03, -6.86, 0.00); object(0x1CB2, 0, 90, 90);
move(-0.03, -6.70, 0.00); object(0x1CB2, 0, 90, 90);
move(-14.60, 0.07, 0.00); object(0x1CB2, 0, 90, 90);
move(0.03, 6.74, 0.00); object(0x1CB2, 0, 90, 90);
move(0.03, 6.71, 0.00); object(0x1CB2, 0, 90, 90);
move(12.19, -21.75, -12.30); object(0x1CB7, 0, 0, 251);
move(0.00, -3.19, -0.50); object(0x1CA4, 0, 0, 270);
move(5.29, 0.01, 0.00); object(0x1CA4, 0, 0, 270);
move(-2.75, -1.82, 0.00); object(0x1CA4, 0, 0, 0);
move(0.90, -0.00, 0.00); object(0x1CA4, 0, 0, 0);
move(0.21, 4.34, 0.00); object(0x1CA4, 0, 0, 0);
move(-0.62, -2.72, -0.50); object(0x1CB1, 0, 0, 270);
move(0.00, 0.00, 0.00); object(0x1CA5, 0, 0, 270);
setfloat(pplayer + 0x30, -761.31, -1117.41, 11.07);}
if(getfloat(pplayer + 0x30) < -677.56 && getfloat(pplayer + 0x30) > -750.74 && getfloat(pplayer + 0x34) < -1080.25 && getfloat(pplayer + 0x34) > -1103.97){
selectobject(rotpiece);
setfloat(rotpiece, cos(rpZ), -sin(rpZ));
setfloat(rotpiece+0x10, sin(rpZ), cos(rpZ));
propagateobject();
rpZ++;}
wl = 0x96C96B0;
check = getfloat(wl);
if(getfloat(pplayer + 0x30) < -617.56 && getfloat(pplayer + 0x30) > -631.94 && getfloat(pplayer + 0x34) < -1146.64 && getfloat(pplayer + 0x34) > -1160.22 && check <= 27){
setfloat(wl, getfloat(wl) +0.4);}
else if(getfloat(pplayer + 0x30) < -603.06 && getfloat(pplayer + 0x30) > -617.24 && getfloat(pplayer + 0x34) < -1237.47 && getfloat(pplayer + 0x34) > -1270.44 && check <= 17){
setfloat(wl, getfloat(wl) +0.4);}
else if(check >= 6){
setfloat(wl, getfloat(wl) -0.4);}
if(getfloat(pplayer + 0x30) < -588.78 && getfloat(pplayer + 0x30) > -616.79 && getfloat(pplayer + 0x34) < -1290.73 && getfloat(pplayer + 0x34) > -1333.6 && getfloat(pplayer + 0x38) < 7){
setshort(pplayer+0x4e6, 0x0);}
if(getfloat(pplayer + 0x30) < -602.78 && getfloat(pplayer + 0x30) > -616.44 && getfloat(pplayer + 0x34) < -1347.97 && getfloat(pplayer + 0x34) > -1407.59 && getfloat(pplayer + 0x38) > 13){
inRoom = 1;}
else inRoom = 0;
if(inRoom){
selectobject(pina);
dx = getfloat(pplayer+0x30) - getfloat(pina+0x30);
dy = getfloat(pplayer+0x34) - getfloat(pina+0x34);
setfloat(pina + 0x30, getfloat(pina + 0x30) + dx * 0.03 * pinasp);
setfloat(pina + 0x34, getfloat(pina + 0x34) + dy * 0.03 * pinasp); 
pinasp *= 0.995;
dx = getfloat(pina+0x30) - getfloat(pplayer+0x30);
dy = getfloat(pina+0x34) - getfloat(pplayer+0x34);
if(sqrt(dx*dx) < 2 && sqrt(dy*dy) < 2){
setfloat(pplayer+0x4e4, 0);}
propagateobject();}
if(getfloat(pplayer + 0x30) < -607.93 && getfloat(pplayer + 0x30) > -609.21 && getfloat(pplayer + 0x34) < -1436.35 && getfloat(pplayer + 0x34) > -1438 && getfloat(pplayer + 0x38) > 13){
setfloat(pplayer + 0x30, -761.31, -1117.41, 11.07);
setint(pplayer+0x5d8, 0x00ffffff);
setint(pplayer+0x5f4, 0x00ffffff);
setint(pplayer+0x610, 0x00ffffff);
setint(pplayer+0x5bc, 0x00ffffff);
setint(pplayer+0x62c, 0x00ffffff);
setint(pplayer+0x648, 0x00ffffff);
setint(pplayer+0x664, 0x00ffffff);
setint(0x08bde560, getint(0x08bde560) + 0x10000000);}
setchar(0x08be3a20, 1);
setfloat(0x08be3a30, -598.05, -1428.88, 14);
setchar(0x08be3a60, 1);
setfloat(0x08be3a70, -619.45, -1429.17, 14);
