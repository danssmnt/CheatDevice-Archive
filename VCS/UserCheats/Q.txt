#cheat Set Mission Attempts to 500 and something million
//ID: 19774
//Score: 10
//Author: Xsjado
//Category: Player Stats
//Description: changes your mission attempts in the stat menu to 500 and something million
//
//EDITED BY: psphacker108 on 14/06/07 16:03:42
//Image: none
//Time: 13/06/2007 10:59:28
//Working: Yes
setshort(0x08BB3D1E, 8010);
#off
setshort(0x08BB3D1E, 0);

#cheat safehouse dividers
//ID: 19777
//Score: 14
//Author: creepers
//Category: Location Mods
//Description: keeps your cars and motorcycles organized :D
//
//EDITED BY: psphacker108 on 14/06/07 16:17:02
//Image: none
//Time: 14/06/2007 12:04:58
//Working: Yes
moveto(261.23, -139.87, 12.58);  object(0x1CB2, 0, 0, 291);
move(0.43, 1.80, -0.70);  object(0x1CB2, 0, 0, 295);
move(-2.23, -4.76, 0.49);  object(0x1CB2, 0, 0, 295);
move(-1097.21, -1054.40, -0.36);  object(0x1CB2, 0, 0, 250);
move(-269.97, 1557.99, -0.35);  object(0x1CB2, 0, 0, 267);

#cheat Splitz 6  Has Big Tires.
//ID: 19789
//Score: 16
//Author: GTA M4573R
//Category: Vehicle
//Description: Splitz 6  Has Big Tires. Very awesome.
//
//Made with Wheel Size Changer by psphacker108
//
//
//
//EDITED BY: psphacker108 on 14/06/07 20:11:19
//Image: none
//Time: 14/06/2007 20:04:17
//Working: Yes
//Made with Wheel Size Changer by psphacker108
setfloat(0x935E198, 1);

#cheat Pop the Boot!
//ID: 19837
//Score: 10
//Author: Xsjado
//Category: Vehicle
//Description: Pops the boot on your car
//
//EDITED BY: psphacker108 on 27/06/07 17:14:27
//Image: none
//Time: 26/06/2007 12:14:34
//Working: Yes
setchar(pcar + 0x000003BB, 2);

#cheat The Bomb Shelter
//ID: 19790
//Score: 18
//Author: psphacker108
//Category: Pointless
//Description: This Makes a Bomb Shelter, Storage area with Cash every wheres and packages you've got it made. 
//Image: http://i66.photobucket.com/albums/h257/pspman108/screen2-27.jpg
//Time: 14/06/2007 20:13:00
//Working: Yes
moveto(-1010.88, -806.61, 13.39);  object(0x1CA4, 0, 0, 33);
move(-3.24, 0.76, 0.00);  object(0x1CA4, 0, 0, 354);
move(-3.69, -0.67, 0.00);  object(0x1CA4, 0, 0, 346);
move(-3.92, -0.14, 0.00);  object(0x1CA4, 0, 0, 10);
move(-3.81, -0.57, 0.00);  object(0x1CA4, 0, 0, 331);
move(-2.67, -3.22, 0.00);  object(0x1CA4, 0, 0, 288);
move(-0.18, -2.99, 0.00);  object(0x1CA4, 0, 0, 259);
move(2.39, -3.62, 0.00);  object(0x1CA4, 0, 0, 215);
move(3.61, -1.32, 0.00);  object(0x1CA4, 0, 0, 177);
move(13.25, 8.45, 0.00);  object(0x1CA4, 0, 0, 89);
move(0.07, -3.90, 0.00);  object(0x1CA4, 0, 0, 89);
move(-1.20, -2.96, 0.00);  object(0x1CA4, 0, 0, 142);
move(-2.42, -1.75, 0.00);  object(0x1CA4, 0, 0, 149);
move(-3.50, -1.04, -0.10);  object(0x1CA4, 0, 0, 175);
move(-2.37, 0.40, 0.00);  object(0x1CA4, 0, 0, 206);
move(7.92, 10.08, -1.10);  object(0x1CA5, 0, 0, 36);
move(0.24, 0.32, 0.00);  object(0x1CA5, 0, 0, 36);
move(0.24, 0.32, 0.00);  object(0x1CA5, 0, 0, 36);
move(-0.32, 0.23, 0.00);  object(0x1CA5, 0, 0, 36);
move(-0.18, -0.24, 0.00);  object(0x1CA5, 0, 0, 36);
move(-0.24, -0.32, 0.00);  object(0x1CA5, 0, 0, 36);
move(-0.45, 1.02, 0.50);  object(0x1CB0, 0, 0, 33);
move(-0.25, 0.16, 0.00);  object(0x1CB0, 0, 0, 33);
move(-0.25, 0.16, 0.00);  object(0x1CB0, 0, 0, 33);
move(-0.25, 0.16, 0.00);  object(0x1CB0, 0, 0, 33);
move(-0.25, 0.16, 0.00);  object(0x1CB0, 0, 0, 33);
move(-0.27, -0.42, 0.00);  object(0x1CB0, 0, 0, 33);
move(0.25, -0.16, 0.00);  object(0x1CB0, 0, 0, 33);
move(0.25, -0.16, 0.00);  object(0x1CB0, 0, 0, 33);
move(0.25, -0.16, 0.00);  object(0x1CB0, 0, 0, 33);
move(0.25, -0.16, 0.00);  object(0x1CB0, 0, 0, 33);
move(0.00, 0.00, 0.10);  object(0x1CB0, 0, 0, 33);
move(-0.25, 0.16, 0.00);  object(0x1CB0, 0, 0, 33);
move(-0.25, 0.16, 0.00);  object(0x1CB0, 0, 0, 33);
move(-0.17, 0.11, 0.00);  object(0x1CB0, 0, 0, 33);
move(-0.34, 0.22, 0.00);  object(0x1CB0, 0, 0, 33);
move(0.17, -0.11, 0.00);  object(0x1CB0, 0, 0, 33);
move(-1.18, 0.79, -0.60);  object(0x1CB3, 0, 0, 273);
move(-0.80, -0.03, 0.00);  object(0x1CB3, 0, 0, 273);
move(-0.70, -0.03, 0.00);  object(0x1CB3, 0, 0, 273);
move(0.02, -0.56, 0.00);  object(0x1CB3, 0, 0, 273);
move(0.70, 0.03, 0.00);  object(0x1CB3, 0, 0, 273);
move(0.80, 0.03, 0.00);  object(0x1CB3, 0, 0, 273);
move(4.10, -4.32, -0.20);  object(0x1CD2, 0, 0, 87);
move(-0.23, 3.99, 0.00);  object(0x1CD2, 0, 0, 29);
move(-6.87, 1.14, 0.00);  object(0x1CD4, 0, 0, 346);
move(-1.74, -0.45, 0.00);  object(0x1CD4, 0, 0, 346);
move(0.70, 0.08, 1.20);  object(0x1CE6, 0, 0, 346);
move(-1.14, -11.47, 0.00);  object(0x1CE6, 0, 0, 196);
move(2.76, 11.35, -0.60);  object(0x1CEB, 0, 0, 180);
move(0.00, 0.00, 0.60);  object(0x1CEB, 0, 0, 180);
move(0.00, 0.00, 0.60);  object(0x1CEB, 0, 0, 180);
move(9.91, -8.51, 1.40);  object(0x1CF4, 0, 0, 291);
move(-4.81, 3.14, -3.20);  object(0x1CF5, 0, 0, 86);
move(-3.32, -1.69, -0.00);  object(0x1CF7, 0, 0, 175);
move(-1.02, -0.07, 0.00);  object(0x1CF7, 0, 0, 175);
move(-10.82, 0.43, -0.10);  object(0x1CF8, 0, 0, 345);
move(-0.58, 4.08, 0.20);  object(0x1CF9, 0, 0, 310);
move(4.91, 1.65, 0.30);  object(0x1CFB, 0, 0, 8);
move(-1.10, -0.03, 0.00);  object(0x1CFB, 0, 0, 8);
move(-0.94, -0.12, 0.00);  object(0x1CFB, 0, 0, 358);
move(2.41, -8.81, -0.30);  object(0x1CFC, 0, 0, 183);
move(4.72, -0.95, 0.20);  object(0x1D00, 0, 0, 186);
move(-7.34, 4.85, -0.50);  object(0x1D01, 0, 0, 270);
move(0.05, -0.30, 0.00);  object(0x1D01, 0, 0, 270);
move(0.09, -0.49, 0.00);  object(0x1D01, 0, 0, 270);
move(0.10, -0.59, 0.00);  object(0x1D01, 0, 0, 270);
move(-0.33, 1.87, 0.00);  object(0x1D01, 0, 0, 270);
move(5.05, 3.41, 0.80);  object(0x1D03, 0, 0, 170);
move(-0.29, -0.08, 0.00);  object(0x1D03, 0, 0, 170);
move(1.71, -2.41, -0.40);  object(0x1D04, 0, 0, 257);
move(2.34, -5.75, 0.10);  object(0x1D14, 0, 0, 325);
move(-0.42, -0.30, 0.00);  object(0x1D14, 0, 0, 333);
move(-0.41, -0.21, 0.00);  object(0x1D14, 0, 0, 341);
move(-0.10, 0.22, 0.00);  object(0x1D14, 0, 0, 341);
move(0.48, 0.27, 0.00);  object(0x1D14, 0, 0, 331);
move(5.05, 5.11, 0.60);  object(0x1D14, 0, 0, 282);
move(-0.25, 0.03, 0.00);  object(0x1D14, 0, 0, 282);
move(-0.30, 0.04, 0.00);  object(0x1D14, 0, 0, 282);
move(-0.26, -0.47, 0.00);  object(0x1D14, 0, 0, 282);
move(0.02, 0.47, 0.00);  object(0x1D14, 0, 0, 274);
move(-0.91, -0.87, -0.70);  object(0x1D14, 0, 0, 289);
move(0.07, 0.58, 0.00);  object(0x1D14, 0, 0, 274);
move(-0.19, 0.85, 0.00);  object(0x1D14, 0, 0, 251);
move(-0.40, -0.39, 0.00);  object(0x1D14, 0, 0, 186);
move(0.06, -0.67, 0.00);  object(0x1D14, 0, 0, 205);
move(0.00, 0.30, 0.00);  object(0x1D14, 0, 0, 196);
move(-0.05, 0.80, 0.00);  object(0x1D14, 0, 0, 196);
move(-0.05, -1.53, 0.00);  object(0x1D14, 0, 0, 203);
move(0.21, 0.19, 0.00);  object(0x1D14, 0, 0, 203);
move(1.50, 4.93, 0.00);  object(0x1D14, 0, 0, 138);
move(-0.24, 0.39, 0.00);  object(0x1D14, 0, 0, 138);
move(-0.27, 0.14, 0.00);  object(0x1D14, 0, 0, 138);
move(-0.27, 0.14, 0.00);  object(0x1D14, 0, 0, 138);
move(-0.18, 0.09, 0.00);  object(0x1D14, 0, 0, 138);
move(-0.27, 0.14, 0.00);  object(0x1D14, 0, 0, 138);
move(-0.27, 0.14, 0.00);  object(0x1D14, 0, 0, 138);
move(1.33, -0.70, 0.00);  object(0x1D14, 0, 0, 138);
move(-0.86, -0.49, 0.40);  object(0x1D14, 0, 30, 123);
move(0.19, -0.05, 0.00);  object(0x1D14, 0, 30, 123);
move(0.19, -0.05, 0.00);  object(0x1D14, 0, 30, 123);
move(-0.88, 0.20, 0.00);  object(0x1D14, 0, 30, 123);
move(-0.29, 0.07, 0.00);  object(0x1D14, 0, 30, 123);
move(0.68, -0.16, 0.00);  object(0x1D14, 0, 30, 123);
move(0.00, 0.00, 0.00);  object(0x1D14, 0, 30, 123);
move(-1.47, -0.61, 1.10);  object(0x1D1A, 0, 0, 121);
move(9.34, -10.77, 2.60);  object(0x1CB4, 0, 0, 237);
teleport(-1019.04, -812.44, 13.27)

#cheat super secret party pad
//ID: 19794
//Score: 17
//Author: creepers
//Category: Location Mods
//Description: before that let me test ur common sense.
//how can you go to the entrance?
//
//2nd,choose where you go,one of it leads to a landing spot,the other is death.
//if you completed it, you done it
//just go to the small road to the party
//
//if you want to get out,go to the ramp and fall :P
//
//EDITED BY: psphacker108 on 17/06/07 20:00:14
//Image: http://i189.photobucket.com/albums/z209/damp47/screen2-1.jpg
//Time: 17/06/2007 01:51:13
//Working: Yes
moveto(184.82, -286.67, 8.30);  object(0x1CB2, 180, 265, 296);
move(-12.61, 6.45, -1.20);  object(0x1CB2, 90, 260, 29);
move(-11.89, 6.55, -2.40);  object(0x1CB2, 90, 260, 29);
move(-11.28, 6.19, -2.25);  object(0x1CB2, 90, 260, 28);
move(-12.68, 6.47, -4.75);  object(0x1CB2, 90, 185, 209);
move(1.50, -3.87, 0.00);  object(0x1CB2, 90, 185, 119);
move(3.26, 5.40, 0.00);  object(0x1CB2, 90, 185, 119);
move(-3.46, -5.68, -4.84);  object(0x1CB2, 90, 185, 116);
move(-0.74, 3.70, -3.10);  object(0x1CB2, 90, 185, 215);
move(3.78, 1.35, 3.00);  object(0x1CB2, 90, 185, 297);
move(5.51, 0.07, -106.42);  object(0x1CB2, 90, 95, 97);
move(6.29, -0.34, 0.00);  object(0x1CB2, 90, 95, 97);
move(6.08, -0.78, 0.00);  object(0x1CB2, 90, 95, 97);
move(1.59, 10.91, 0.00);  object(0x1CB2, 90, 95, 97);
move(-6.68, 0.74, 0.00);  object(0x1CB2, 90, 95, 97);
move(-5.87, 1.12, 0.00);  object(0x1CB2, 90, 95, 97);
move(0.00, 0.00, 1.10);  object(0x1CB2, 90, 95, 97);
move(6.40, -0.17, 0.00);  object(0x1CB2, 90, 95, 97);
move(6.00, -0.16, 0.00);  object(0x1CB2, 90, 95, 97);
move(6.28, -0.84, 0.00);  object(0x1CB2, 90, 95, 97);
move(-1.15, -12.93, -1.00);  object(0x1CB2, 90, 95, 97);
move(3.04, 5.75, 2.73);  object(0x1CB2, 0, 350, 9);
move(-0.46, -5.78, 0.00);  object(0x1CB2, 0, 350, 9);
move(0.98, 12.46, 0.00);  object(0x1CB2, 0, 350, 9);
move(-5.66, 7.60, 0.00);  object(0x1CB2, 0, 350, 274);
move(-10.41, 0.34, 0.00);  object(0x1CB2, 0, 350, 274);
move(-7.60, -5.95, 0.00);  object(0x1CB2, 0, 350, 186);
move(-0.11, -6.20, 0.00);  object(0x1CB2, 0, 350, 186);
move(-0.10, -5.90, 0.00);  object(0x1CB2, 0, 350, 186);
move(2.46, -6.32, -0.30);  object(0x1CB2, 0, 350, 97);
move(20.84, -1.85, 1.00);  object(0x1CB2, 0, 350, 93);
move(-10.88, -5.12, -3.99);  object(0x1CB2, 0, 270, 186);
move(-1.32, -12.08, 0.00);  object(0x1CB2, 0, 270, 186);
move(-0.99, -12.56, 0.00);  object(0x1CB2, 0, 270, 183);
move(-0.62, -12.43, 0.00);  object(0x1CB2, 0, 270, 183);
move(-0.60, -12.73, 0.00);  object(0x1CB2, 0, 270, 183);
move(-0.57, -12.13, 0.00);  object(0x1CB2, 0, 270, 183);
move(-3.36, -0.13, 2.40);  object(0x1CB2, 0, 185, 183);
move(0.80, 12.54, 0.00);  object(0x1CB2, 0, 185, 183);
move(0.71, 12.63, 0.00);  object(0x1CB2, 0, 185, 183);
move(0.58, 12.93, 0.00);  object(0x1CB2, 0, 185, 183);
move(0.39, 12.73, 0.00);  object(0x1CB2, 0, 185, 181);
move(1.23, 9.96, 0.00);  object(0x1CB2, 0, 185, 192);
move(6.14, -0.87, 0.00);  object(0x1CB2, 0, 185, 189);
move(-0.96, -12.63, 0.00);  object(0x1CB2, 0, 185, 184);
move(-1.03, -14.42, 0.00);  object(0x1CB2, 0, 185, 184);
move(-0.91, -13.61, 0.00);  object(0x1CB2, 0, 185, 184);
move(-0.59, -13.58, 0.00);  object(0x1CB2, 0, 185, 183);
move(-0.38, -5.61, 0.00);  object(0x1CB2, 0, 185, 183);
move(-3.30, -13.30, -2.90);  object(0x1CB2, 0, 90, 183);
move(-6.39, 0.32, 0.20);  object(0x1CB2, 0, 90, 183);
move(-5.62, 0.24, 0.00);  object(0x1CB2, 0, 90, 183);
move(-6.18, 0.32, 0.00);  object(0x1CB2, 0, 90, 183);
move(-0.77, -13.93, 0.00);  object(0x1CB2, 0, 90, 183);
move(6.20, -0.32, 0.00);  object(0x1CB2, 0, 90, 183);
move(5.95, -0.23, 0.00);  object(0x1CB2, 0, 90, 183);
move(5.93, -0.43, 0.00);  object(0x1CB2, 0, 90, 183);
move(6.17, -0.33, 0.00);  object(0x1CB2, 0, 90, 183);
move(0.65, 14.02, 0.00);  object(0x1CB2, 0, 90, 183);
move(6.39, -0.31, 0.00);  object(0x1CB2, 0, 90, 183);
move(6.57, -0.31, 0.00);  object(0x1CB2, 0, 90, 183);
move(-0.72, -14.23, 0.00);  object(0x1CB2, 0, 90, 183);
move(-6.17, 0.42, 0.00);  object(0x1CB2, 0, 90, 183);
move(-17.32, 104.39, 113.04);  object(0x1CB2, 270, 355, 218);
move(5.00, -3.28, 0.00);  object(0x1CB2, 270, 355, 218);
move(0.04, 3.89, 0.00);  object(0x1CB2, 270, 355, 306);
move(0.00, 0.00, -5.40);  object(0x1CB2, 270, 355, 306);
move(-4.92, -110.73, -104.79);  object(0x1CB2, 180, 355, 94);
move(-10.32, 0.65, 0.00);  object(0x1CB2, 180, 355, 94);
move(-6.15, 6.66, 0.00);  object(0x1CB2, 180, 355, 184);
move(0.73, 13.71, 0.00);  object(0x1CB2, 180, 355, 184);
move(7.55, 6.82, 0.00);  object(0x1CB2, 180, 355, 276);
move(2.90, -0.06, 0.00);  object(0x1CB2, 180, 355, 276);
move(20.17, -1.18, 0.00);  object(0x1CB2, 180, 355, 272);
move(5.73, -0.32, 0.00);  object(0x1CB2, 180, 355, 272);
move(6.39, -7.18, 0.00);  object(0x1CB2, 180, 355, 3);
move(-0.70, -13.93, 0.00);  object(0x1CB2, 180, 355, 3);
move(-7.70, -6.23, 0.00);  object(0x1CB2, 180, 355, 96);
move(-9.43, 0.32, 0.00);  object(0x1CB2, 180, 355, 93);
move(12.73, 2.73, 1.00);  object(0x1CB2, 85, 235, 9);
move(13.01, -0.85, 3.50);  object(0x1CB2, 85, 95, 359);
move(-7.85, 24.52, -7.20);  object(0x1C9F, 85, 175, 319);
move(0.00, 0.00, 2.70);  object(0x1C9F, 85, 175, 319);
move(-41.95, 2.44, -2.50);  object(0x1C9F, 85, 175, 218);
move(0.00, 0.00, 2.50);  object(0x1C9F, 85, 175, 218);
move(-2.05, -26.78, -2.60);  object(0x1C9F, 85, 175, 134);
move(0.00, 0.00, 2.20);  object(0x1C9F, 85, 175, 134);
move(21.27, 11.81, 3.70);  object(0x1C91, 170, 175, 187);
move(-10.22, -12.24, -6.00);  object(0x0262, 170, 180, 183);
move(0.00, 0.00, 0.10);  object(0x0262, 170, 180, 183);
move(0.00, 0.00, 0.10);  object(0x0262, 170, 180, 183);
move(0.00, 0.00, 0.10);  object(0x0262, 170, 180, 183);
move(0.00, 0.00, 0.10);  object(0x0262, 170, 180, 183);
move(0.00, 0.00, 0.10);  object(0x0262, 170, 180, 183);
move(0.00, 0.00, 0.10);  object(0x0262, 170, 180, 183);
move(0.00, 0.00, 0.10);  object(0x0262, 170, 180, 183);
move(0.00, 0.00, 0.10);  object(0x0262, 170, 180, 183);
move(0.00, 0.00, 0.10);  object(0x0262, 170, 180, 183);
move(0.00, 0.00, 0.00);  object(0x0262, 170, 180, 183);
move(0.00, 0.00, 0.00);  object(0x0262, 170, 180, 183);
move(0.00, 0.00, 0.10);  object(0x0262, 170, 180, 183);
move(0.00, 0.00, 0.10);  object(0x0262, 170, 180, 183);
move(0.00, 0.00, 0.10);  object(0x0262, 170, 180, 183);
move(0.00, 0.00, 0.10);  object(0x0262, 170, 180, 183);
move(0.00, 0.00, 0.00);  object(0x0262, 170, 180, 183);
move(0.00, 0.00, 0.10);  object(0x0262, 170, 180, 183);
move(0.00, 0.00, 0.10);  object(0x0262, 170, 180, 183);
move(0.00, 0.00, 0.10);  object(0x0262, 170, 180, 183);
move(0.00, 0.00, 0.10);  object(0x0262, 170, 180, 183);
move(0.00, 0.00, 0.10);  object(0x0262, 170, 180, 183);
move(0.00, 0.00, 0.10);  object(0x0262, 170, 180, 183);
move(0.00, 0.00, 0.10);  object(0x0262, 170, 180, 183);
move(0.00, 0.00, 0.10);  object(0x0262, 170, 180, 183);
move(0.00, 0.00, 0.00);  object(0x0262, 170, 180, 183);
move(0.00, 0.00, 0.10);  object(0x0262, 170, 180, 183);
move(-9.57, 18.91, -1.90);  object(0x01CD, 185, 180, 294);
move(41.66, 4.27, -0.30);  object(0x1C9E, 185, 180, 79);
move(0.22, -0.56, -0.10);  object(0x1C9E, 185, 180, 79);
move(-0.68, -0.25, 0.00);  object(0x1C9E, 185, 180, 79);
move(0.03, 0.76, 0.00);  object(0x1C9E, 185, 180, 79);
move(0.53, -1.40, 0.00);  object(0x1C9E, 185, 180, 79);
move(-0.60, -0.12, 0.00);  object(0x1C9E, 185, 180, 79);
move(0.35, -0.94, 0.00);  object(0x1C9E, 185, 180, 79);
move(-0.54, 0.01, 0.00);  object(0x1C9E, 185, 180, 79);
move(-34.68, 2.39, 5.50);  object(0x1CCA, 185, 180, 286);
move(-0.22, -2.29, 0.00);  object(0x1CCA, 185, 180, 286);
move(-0.26, -2.69, 0.00);  object(0x1CCA, 185, 180, 286);
move(-0.29, -2.99, 0.00);  object(0x1CCA, 185, 180, 286);
move(-0.30, -3.09, 0.00);  object(0x1CCA, 185, 180, 286);
move(-0.28, -2.89, 0.00);  object(0x1CCA, 185, 180, 286);
move(-0.27, -2.79, 0.00);  object(0x1CCA, 185, 180, 286);
move(-0.36, -3.68, 0.00);  object(0x1CCA, 185, 180, 286);
move(4.43, -0.44, 0.00);  object(0x1CCA, 185, 180, 285);
move(3.20, -0.31, 0.00);  object(0x1CCA, 185, 180, 285);
move(3.46, -0.33, 0.00);  object(0x1CCA, 185, 180, 285);
move(3.70, -0.36, 0.00);  object(0x1CCA, 185, 180, 285);
move(3.38, -0.31, 0.00);  object(0x1CCA, 185, 180, 285);
move(2.48, -0.23, 0.00);  object(0x1CCA, 185, 180, 285);
move(3.16, -0.29, 0.00);  object(0x1CCA, 185, 180, 285);
move(6.77, 5.40, 0.00);  object(0x1CCA, 185, 180, 285);
move(0.37, 3.98, 0.00);  object(0x1CCA, 185, 180, 285);
move(0.37, 3.98, 0.00);  object(0x1CCA, 185, 180, 285);
move(0.34, 3.68, 0.00);  object(0x1CCA, 185, 180, 285);
move(0.27, 2.89, 0.00);  object(0x1CCA, 185, 180, 285);
move(-5.45, 0.51, 0.00);  object(0x1CCA, 185, 180, 285);
move(-5.08, -4.55, 0.00);  object(0x1CCA, 185, 180, 285);
move(1.57, -2.56, 0.00);  object(0x1CCA, 185, 180, 285);
move(-0.31, -3.39, 0.00);  object(0x1CCA, 185, 180, 285);
move(-9.05, -2.29, 0.00);  object(0x1CCA, 185, 180, 285);
move(-2.20, 7.40, 0.00);  object(0x1CCA, 185, 180, 289);
move(6.30, 4.04, 0.00);  object(0x1CCA, 185, 180, 289);
move(-10.07, 1.52, 0.00);  object(0x1CCA, 185, 180, 289);
move(-1.90, -9.11, 0.00);  object(0x1CCA, 185, 180, 208);
move(20.54, 4.25, 0.00);  object(0x1CCA, 185, 180, 82);
moveto(173.17, -349.70, -114.48);  object(0x1CFC, 0, 0, 96);
move(-0.36, -3.38, 0.00);  object(0x1CFD, 0, 0, 96);
move(-0.18, -2.49, 0.00);  object(0x1D05, 0, 0, 96);
move(0.00, 0.00, 0.40);  object(0x1CF2, 0, 0, 96);
move(-14.45, 1.85, -0.12);  object(0x1CF9, 0, 0, 18);
move(-8.89, -0.39, 0.00);  object(0x1CF9, 0, 0, 318);
move(5.16, -14.93, 0.10);  object(0x1CEB, 0, 0, 8);
move(-0.80, -0.04, 0.00);  object(0x1CEB, 0, 0, 5);
move(-0.61, 0.06, 0.00);  object(0x1CEB, 0, 0, 5);
move(-0.61, 0.04, 0.00);  object(0x1CEB, 0, 0, 5);
move(-0.81, 0.24, 0.00);  object(0x1CEB, 0, 0, 3);
move(-0.00, 0.00, 0.60);  object(0x1CEA, 0, 0, 3);
move(14.03, 17.72, 0.00);  object(0x1CF0, 0, 0, 336);
move(-7.64, -5.13, 0.00);  object(0x1CF0, 0, 0, 336);
move(4.13, -6.14, 0.00);  object(0x1CF0, 0, 0, 336);
move(-18.43, 13.61, 0.00);  object(0x1CF0, 0, 0, 336);
move(-5.54, 3.41, 0.00);  object(0x1CF0, 0, 0, 336);
move(-0.21, -7.57, 0.00);  object(0x1CF0, 0, 0, 336);
move(4.73, -12.30, 0.00);  object(0x1CF0, 0, 0, 337);
move(15.08, 21.56, -1.00);  object(0x1CF6, 0, 0, 2);
move(4.07, -0.23, 0.00);  object(0x1CF6, 0, 0, 2);
move(-2.31, -0.12, 0.10);  object(0x1CF0, 0, 0, 2);
move(4.03, 0.04, 0.00);  object(0x1CF0, 0, 0, 2);
move(-12.76, -24.82, 0.00);  object(0x1CFF, 0, 0, 182);
move(0.00, 0.00, 0.40);  object(0x1CFF, 0, 0, 182);
move(0.00, 0.00, 0.40);  object(0x1CFF, 0, 0, 182);
move(-0.00, -0.00, 0.40);  object(0x1CFF, 0, 0, 182);
move(0.00, 0.00, 0.40);  object(0x1CFF, 0, 0, 182);
move(0.00, 0.00, 0.40);  object(0x1CFF, 0, 0, 182);
move(0.03, -0.06, 0.40);  object(0x1CFF, 0, 0, 179);
move(4.71, -0.35, 0.00);  object(0x1CFF, 0, 0, 179);
move(0.00, 0.00, -0.40);  object(0x1CFF, 0, 0, 179);
move(0.00, 0.00, -0.40);  object(0x1CFF, 0, 0, 174);
move(0.00, 0.00, -0.40);  object(0x1CFF, 0, 0, 174);
move(0.00, 0.00, -0.40);  object(0x1CFF, 0, 0, 174);
move(0.00, 0.00, -0.40);  object(0x1CFF, 0, 0, 174);
move(0.00, 0.00, -0.30);  object(0x1CFF, 0, 0, 174);
move(-1.06, 0.01, 0.70);  object(0x1CEB, 0, 0, 1);
move(-0.73, -0.04, 0.00);  object(0x1CEB, 0, 0, 1);
move(-0.79, 0.14, 0.10);  object(0x1CEB, 0, 0, 1);
move(-0.67, 0.09, 0.00);  object(0x1CEB, 0, 0, 1);
move(0.00, 0.00, 0.60);  object(0x1CEB, 0, 0, 1);
move(0.76, -0.06, 0.00);  object(0x1CEB, 0, 0, 1);
move(0.81, -0.09, 0.00);  object(0x1CEB, 0, 0, 4);
move(0.74, -0.00, 0.00);  object(0x1CEB, 0, 0, 0);
move(0.00, 0.00, 0.60);  object(0x1CEB, 0, 0, 0);
move(-0.76, 0.18, 0.00);  object(0x1CEB, 0, 0, 6);
move(-0.68, -0.16, 0.00);  object(0x1CEB, 0, 0, 3);
move(-0.92, 0.06, 0.00);  object(0x1CEB, 0, 0, 4);
move(-0.54, 0.16, -0.50);  object(0x1CEB, 0, 0, 3);
move(0.02, -0.02, 0.70);  object(0x1CEB, 0, 0, 355);
teleport(189.88, -291.66, 9.61)

#cheat max out bullets that hit stat
//ID: 19776
//Score: 13
//Author: creepers
//Category: Player Stats
//Description: lol,first cheat
//
//EDITED BY: psphacker108 on 15/06/07 04:42:19
//Image: none
//Time: 14/06/2007 12:02:20
//Working: Yes
setint(0x08BB41D0, 2147483647);

#cheat krazy long dragster line
//ID: 19795
//Score: 17
//Author: creepers
//Category: Location Mods
//Description: super long,great for testing top speeds of every car/motorcycle.
//gas station included
//
//EDITED BY: psphacker108 on 17/06/07 20:00:23
//Image: http://img169.imageshack.us/img169/9568/screen3yc7.png
//Time: 17/06/2007 02:06:16
//Working: Yes
moveto(-367.81, -560.05, 38.95);  object(0x1CB2, 0, 270, 180);
move(0.01, -14.20, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -13.89, 0.00);  object(0x1CB2, 0, 270, 180);
move(-0.02, -13.31, 0.00);  object(0x1CB2, 0, 270, 180);
move(-0.00, -13.58, 0.00);  object(0x1CB2, 0, 270, 180);
move(-0.00, -14.30, 0.00);  object(0x1CB2, 0, 270, 180);
move(-0.00, -14.34, 0.00);  object(0x1CB2, 0, 270, 180);
move(-0.00, -14.16, 0.00);  object(0x1CB2, 0, 270, 180);
move(-0.00, -14.12, 0.00);  object(0x1CB2, 0, 270, 180);
move(-0.00, -14.59, 0.00);  object(0x1CB2, 0, 270, 180);
move(-0.00, -14.30, 0.00);  object(0x1CB2, 0, 270, 180);
move(-0.00, -14.45, 0.00);  object(0x1CB2, 0, 270, 180);
move(-0.00, -14.03, 0.00);  object(0x1CB2, 0, 270, 180);
move(-0.00, -13.83, 0.00);  object(0x1CB2, 0, 270, 180);
move(-0.00, -13.95, 0.00);  object(0x1CB2, 0, 270, 180);
move(-0.00, -13.90, 0.00);  object(0x1CB2, 0, 270, 180);
move(-0.00, -14.03, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.01, -12.44, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -14.60, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -13.26, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -13.57, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -13.48, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -13.25, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.04, -31.86, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -14.50, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -13.47, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.03, -26.04, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -14.16, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -14.02, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -14.08, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -13.80, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -13.47, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -13.78, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -13.22, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -12.51, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -13.76, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -13.84, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -12.63, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -13.84, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -13.17, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -13.86, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -13.73, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -14.03, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -13.21, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -13.15, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -13.87, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -13.67, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -14.28, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -13.52, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -13.38, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -13.43, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -13.43, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -13.83, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, -13.85, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.01, -14.36, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.01, -14.04, 0.00);  object(0x1CB2, 0, 270, 180);
move(-0.09, -14.34, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.25, -13.58, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.26, -14.37, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.25, -14.07, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.25, -14.11, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.25, -13.87, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.21, -19.64, 0.00);  object(0x1CB2, 0, 270, 181);
move(0.09, 9.36, -0.00);  object(0x1CB2, 0, 270, 180);
move(-0.30, -23.37, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.24, -12.02, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.24, -12.04, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.16, -8.01, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.26, -13.16, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.27, -13.81, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.26, -12.78, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.20, -13.24, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.20, -13.55, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.19, -12.79, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.20, -13.60, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.19, -12.99, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.44, -29.43, 0.00);  object(0x1CB2, 0, 270, 181);
move(0.12, 8.34, 0.00);  object(0x1CB2, 0, 270, 181);
move(0.09, 6.01, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.33, -21.72, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.14, -11.12, 0.00);  object(0x1CB2, 0, 270, 181);
move(0.07, 5.52, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.20, -16.40, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.14, -11.42, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.13, -10.64, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.13, -10.15, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.14, -11.05, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.13, -10.80, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.14, -11.10, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.18, -14.49, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.17, -13.54, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.12, -9.74, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.13, -10.69, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.16, -12.80, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.17, -13.59, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.08, -6.53, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.10, -7.77, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.13, -10.81, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.16, -12.77, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.16, -12.76, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.17, -13.84, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.04, -3.57, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.12, -9.61, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.16, -13.45, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.15, -12.49, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.15, -12.51, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.16, -12.97, 0.00);  object(0x1CB2, 0, 270, 181);
move(-0.27, -13.60, 0.00);  object(0x1CB2, 0, 270, 181);
move(4.39, 335.34, 0.00);  object(0x1CB2, 0, 270, 181);
move(3.59, 669.94, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.02, 55.43, 0.00);  object(0x1CB2, 0, 270, 180);
move(0.03, 5.80, 0.00);  object(0x1CB2, 0, 270, 180);
move(-0.40, 330.72, 0.00);  object(0x1CB2, 0, 270, 179);
move(-0.22, 12.49, 0.00);  object(0x1CB2, 0, 270, 179);
move(-0.22, 12.37, 0.00);  object(0x1CB2, 0, 270, 179);
move(-0.22, 12.67, 0.00);  object(0x1CB2, 0, 270, 179);
move(-0.23, 13.00, 0.00);  object(0x1CB2, 0, 270, 179);
move(-0.25, 14.29, 0.00);  object(0x1CB2, 0, 270, 179);
move(-0.26, 14.61, 0.00);  object(0x1CB2, 0, 270, 179);
move(-0.20, 11.35, 0.00);  object(0x1CB2, 0, 270, 179);
move(-0.20, 10.42, 0.00);  object(0x1CB2, 0, 270, 179);
move(-0.29, 13.35, 0.00);  object(0x1CB2, 0, 270, 179);
move(-0.45, 12.51, 0.00);  object(0x1CB2, 0, 270, 176);
move(-0.74, 12.84, 0.00);  object(0x1CB2, 0, 270, 178);
move(-0.59, 14.00, 0.00);  object(0x1CB2, 0, 270, 178);
move(-0.50, 11.77, 0.00);  object(0x1CB2, 0, 270, 178);
move(-0.48, 11.33, 0.00);  object(0x1CB2, 0, 270, 178);
move(-0.49, 11.49, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.53, 11.51, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.37, 8.04, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.61, 13.20, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.58, 12.42, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.64, 13.74, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.64, 13.65, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.50, 10.77, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.62, 13.42, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.63, 13.56, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.67, 14.17, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.69, 14.20, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.69, 13.73, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.69, 13.68, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.68, 13.50, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.65, 13.04, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.68, 12.78, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.75, 13.46, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.79, 14.27, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.73, 13.14, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.77, 13.86, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.67, 12.07, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.73, 13.19, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.75, 13.51, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.72, 12.92, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.77, 13.72, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.79, 13.89, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.79, 13.92, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.81, 14.26, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.75, 13.21, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.79, 13.90, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.75, 13.25, 0.00);  object(0x1CB2, 0, 270, 177);
move(-0.84, 13.54, 0.00);  object(0x1CB2, 0, 270, 176);
move(-0.85, 13.49, 0.00);  object(0x1CB2, 0, 270, 176);
move(-0.82, 13.01, 0.00);  object(0x1CB2, 0, 270, 176);
move(-0.84, 13.21, 0.00);  object(0x1CB2, 0, 270, 176);
move(-0.83, 13.18, 0.00);  object(0x1CB2, 0, 270, 176);
move(-0.81, 12.72, 0.00);  object(0x1CB2, 0, 270, 176);
move(-0.51, 7.98, 0.00);  object(0x1CB2, 0, 270, 176);
move(0.21, -3.36, 0.00);  object(0x1CB2, 0, 270, 176);
move(-1.04, 16.38, 0.00);  object(0x1CB2, 0, 270, 176);
move(-0.82, 12.90, 0.00);  object(0x1CB2, 0, 270, 176);
move(-0.82, 13.25, 0.00);  object(0x1CB2, 0, 270, 176);
move(-0.80, 13.01, 0.00);  object(0x1CB2, 0, 270, 176);
move(-0.81, 12.93, 0.00);  object(0x1CB2, 0, 270, 176);
move(-0.93, 13.71, 0.00);  object(0x1CB2, 0, 270, 176);
move(-0.89, 13.09, 0.00);  object(0x1CB2, 0, 270, 176);
move(-1.01, 13.69, 0.00);  object(0x1CB2, 0, 270, 175);
move(-0.92, 11.24, 0.00);  object(0x1CB2, 0, 270, 175);
move(-1.17, 14.36, 0.00);  object(0x1CB2, 0, 270, 175);
move(-1.08, 13.16, 0.00);  object(0x1CB2, 0, 270, 175);
move(-1.15, 14.07, 0.00);  object(0x1CB2, 0, 270, 175);
move(-1.05, 12.86, 0.00);  object(0x1CB2, 0, 270, 175);
move(-1.07, 12.99, 0.00);  object(0x1CB2, 0, 270, 175);
move(-1.04, 12.62, 0.00);  object(0x1CB2, 0, 270, 175);
move(-1.08, 13.08, 0.00);  object(0x1CB2, 0, 270, 175);
move(-1.07, 13.36, 0.00);  object(0x1CB2, 0, 270, 175);
move(-1.14, 14.24, 0.00);  object(0x1CB2, 0, 270, 175);
move(-1.13, 14.11, 0.00);  object(0x1CB2, 0, 270, 175);
move(-1.14, 14.20, 0.00);  object(0x1CB2, 0, 270, 175);
move(-1.12, 13.86, 0.00);  object(0x1CB2, 0, 270, 175);
move(-1.17, 14.07, 0.00);  object(0x1CB2, 0, 270, 175);
move(-1.12, 13.17, 0.00);  object(0x1CB2, 0, 270, 175);
move(-1.06, 12.02, 0.00);  object(0x1CB2, 0, 270, 175);
move(-1.27, 14.11, 0.00);  object(0x1CB2, 0, 270, 175);
move(-1.24, 13.79, 0.00);  object(0x1CB2, 0, 270, 175);
move(-1.11, 12.32, 0.00);  object(0x1CB2, 0, 270, 175);
move(-1.03, 11.46, 0.00);  object(0x1CB2, 0, 270, 175);
move(-1.20, 13.25, 0.00);  object(0x1CB2, 0, 270, 175);
move(-1.27, 14.02, 0.00);  object(0x1CB2, 0, 270, 175);
move(-1.11, 12.25, 0.00);  object(0x1CB2, 0, 270, 175);
move(-0.90, 9.95, 0.00);  object(0x1CB2, 0, 270, 175);
move(-0.94, 10.46, 0.00);  object(0x1CB2, 0, 270, 175);
move(-0.71, 7.89, 0.00);  object(0x1CB2, 0, 270, 175);
move(-0.88, 9.72, 0.00);  object(0x1CB2, 0, 270, 175);
move(-0.85, 9.44, 0.00);  object(0x1CB2, 0, 270, 175);
move(-1.04, 13.57, 0.00);  object(0x1CB2, 0, 270, 176);
move(-0.68, 10.02, 0.00);  object(0x1CB2, 0, 270, 176);
move(-0.72, 10.55, 0.00);  object(0x1CB2, 0, 270, 176);
move(-0.79, 11.67, 0.00);  object(0x1CB2, 0, 270, 176);
move(-0.28, 4.14, 0.00);  object(0x1CB2, 0, 270, 176);
move(-0.70, 10.34, 0.00);  object(0x1CB2, 0, 270, 176);
move(-0.54, 7.92, 0.00);  object(0x1CB2, 0, 270, 176);
move(-0.40, 5.89, 0.00);  object(0x1CB2, 0, 270, 176);
move(-0.57, 8.39, 0.00);  object(0x1CB2, 0, 270, 176);
move(-0.66, 9.64, 0.00);  object(0x1CB2, 0, 270, 176);
move(-0.31, 4.49, 0.00);  object(0x1CB2, 0, 270, 176);
move(-1.39, 13.87, -2.37);  object(0x1CB2, 85, 250, 87);
move(-2.07, 13.51, -5.00);  object(0x1CB2, 85, 250, 87);
move(-1.91, 13.14, -4.80);  object(0x1CB2, 85, 250, 87);
move(-1.92, 13.35, -4.90);  object(0x1CB2, 85, 250, 87);
move(-1.84, 12.85, -4.70);  object(0x1CB2, 85, 250, 87);
move(-1.86, 12.63, -4.60);  object(0x1CB2, 85, 250, 87);
move(9.70, -65.56, 24.03);  object(0x1CB2, 85, 250, 87);
move(-8.44, 78.10, -27.64);  object(0x1CB2, 0, 180, 350);
move(-2.06, 5.70, 1.80);  object(0x01D5, 0, 0, 355);
move(0.62, -2.84, 0.00);  object(0x01D5, 0, 0, 355);
move(0.42, -2.84, 0.00);  object(0x01D5, 0, 0, 355);
move(20.49, -223.71, 28.22);  object(0x1CB2, 180, 270, 173);
teleport(-461.20, 791.57, 11.28)

#cheat Remove Jump action and Always fighting postion
//ID: 19796
//Score: 14
//Author: .:Wolvern:.
//Category: Player
//Description: When ever you stop moving your hands will be raised into fighting postion!
//
//Not my Cheat dont know the name of the person on GTAForums all credit his!
//
//To switch off turn cheat off itself and
//use Reset Cheat and Press O!
//Image: http://wolvern.xynox.co.uk/images/screen2.bmp
//Time: 18/06/2007 14:10:53
//Working: Yes
sethex(0x098B52F4,   11);

#cheat Phone to Head Position
//ID: 19797
//Score: 15
//Author: .:Wolvern:.
//Category: Player
//Description: Keep Phone to your head!
//
//Not my Cheat dont know the name of the person on GTAForums all credit his! 
//
//To switch off turn cheat off itself and 
//use Reset Cheat and Press O!
//Image: http://wolvern.xynox.co.uk/images/screen3.bmp
//Time: 18/06/2007 14:12:38
//Working: Yes
sethex(0x098B52F4,   24);

#cheat Position Reset
//ID: 19799
//Score: 13
//Author: .:Wolvern:.
//Category: Player
//Description: V2 Turn on and then off
//
//It that dosen't work Press O
//
//EDITED BY: psphacker108 on 01/07/07 14:58:27
//Image: none
//Time: 18/06/2007 14:23:07
//Working: Yes
sethex(0x098B52F4,   00);

#cheat Hands Up Position
//ID: 19798
//Score: 18
//Author: .:Wolvern:.
//Category: Player
//Description: Keep Your Hands Rasied!
//Good for Videos like if you had cops after you and aiming gun! lol
//
//Not my Cheat dont know the name of the person on GTAForums all credit his! 
//
//To switch off turn cheat off itself and 
//use Reset Cheat and Press O!
//Image: http://wolvern.xynox.co.uk/images/screen4.bmp
//Time: 18/06/2007 14:14:40
//Working: Yes
sethex(0x098B52F4,   40);

#cheat Nite Stick Color Red
//ID: 19800
//Score: 15
//Author: psphacker108
//Category: Weapons
//Description: Nite Stick Color Red. Any nite stick your pick up from cops will be Red. even when it's in Vics hand it's always Red.
//Image: none
//Time: 19/06/2007 07:07:49
//Working: Yes
setchar(0x9AF2C50, 0xff, 0x00, 0x00);
setchar(0x9AF2C54, 0xff, 0x00, 0x00);
setchar(0x9AF2C58, 0xff, 0x00, 0x00);
setchar(0x9AF2C5C, 0xff, 0x00, 0x00);
setchar(0x9AF2C60, 0xff, 0x00, 0x00);
setchar(0x9AF2C64, 0xff, 0x00, 0x00);
setchar(0x9AF2C68, 0xff, 0x00, 0x00);
setchar(0x9AF2C6C, 0xff, 0x00, 0x00);
setchar(0x9AF2C70, 0xff, 0x00, 0x00);
setchar(0x9AF2C74, 0xff, 0x00, 0x00);
setchar(0x9AF2C78, 0xff, 0x00, 0x00);
setchar(0x9AF2C7C, 0xff, 0x00, 0x00);
setchar(0x9AF2C80, 0xff, 0x00, 0x00);
setchar(0x9AF2C84, 0xff, 0x00, 0x00);
setchar(0x9AF2C88, 0xff, 0x00, 0x00);
setchar(0x9AF2C8C, 0xff, 0x00, 0x00);

#cheat Nite Stick Color Blue
//ID: 19801
//Score: 13
//Author: psphacker108
//Category: Weapons
//Description: Nite Stick Color Blue Any nite stick your pick up from cops will be Blue. even when it's in Vics hand it's always Blue.
//Image: http://i66.photobucket.com/albums/h257/pspman108/N_blue.jpg
//Time: 19/06/2007 07:08:07
//Working: Yes
setchar(0x9AF2C50,  0x00,  0x00,  0xff); 
setchar(0x9AF2C54,  0x00,  0x00,  0xff); 
setchar(0x9AF2C58,  0x00,  0x00,  0xff); 
setchar(0x9AF2C5C,  0x00,  0x00,  0xff); 
setchar(0x9AF2C60,  0x00,  0x00,  0xff); 
setchar(0x9AF2C64,  0x00,  0x00,  0xff); 
setchar(0x9AF2C68,  0x00,  0x00,  0xff); 
setchar(0x9AF2C6C,  0x00,  0x00,  0xff); 
setchar(0x9AF2C70,  0x00,  0x00,  0xff); 
setchar(0x9AF2C74,  0x00,  0x00,  0xff); 
setchar(0x9AF2C78,  0x00,  0x00,  0xff); 
setchar(0x9AF2C7C,  0x00,  0x00,  0xff); 
setchar(0x9AF2C80,  0x00,  0x00,  0xff); 
setchar(0x9AF2C84,  0x00,  0x00,  0xff); 
setchar(0x9AF2C88,  0x00,  0x00,  0xff); 
setchar(0x9AF2C8C,  0x00,  0x00,  0xff);

#cheat First Person View in Car
//ID: 19834
//Score: 19
//Author: Xsjado
//Category: Vehicle
//Description: Puts the view point IN Vics head! parts of the face like eyes and nose can block camera and view is better in different cars. if the camera moves out of the car press L to reset it. doesnt work with motobikes
//
//EDITED BY: psphacker108 on 28/06/07 02:33:58
//Image: none
//Time: 24/06/2007 12:04:06
//Working: Yes
setchar(pplayer + 0x000008B4, 61);
#off
setchar(pplayer + 0x000008B4, 55);

#cheat All Civil Asset Forfeiture Impound Vehicles Seized
//ID: 19832
//Score: 12
//Author: .:Wolvern:.
//Category: Player Stats
//Description: All Civil Asset Forfeiture Impound Vehicles Seized
//Image: none
//Time: 23/06/2007 11:24:00
//Working: Yes
sethex(0x08bb3d34,  20);

#cheat Number of Sights Viewed 16777215
//ID: 19831
//Score: 10
//Author: .:Wolvern:.
//Category: Player Stats
//Description: Changes Number of Sights Viewed 16777215
//Image: none
//Time: 23/06/2007 11:22:19
//Working: Yes
sethex(0x08bb3d84,  ff);
sethex(0x08bb3d85,  ff);
sethex(0x08bb3d86,  ff);

#cheat Vice City Sights Highest Level to 16777215
//ID: 19830
//Score: 10
//Author: .:Wolvern:.
//Category: Player Stats
//Description: Changes Vice City Sights Highest Level to 16777215
//Image: none
//Time: 23/06/2007 11:21:24
//Working: Yes
sethex(0x08bb3d80,  ff);
sethex(0x08bb3d81,  ff);
sethex(0x08bb3d82,  ff);

#cheat Beach Patrol Highest Level to 16777215
//ID: 19829
//Score: 10
//Author: .:Wolvern:.
//Category: Player Stats
//Description: Changes Beach Patrol Highest Level to 16777215
//Image: none
//Time: 23/06/2007 11:20:24
//Working: Yes
sethex(0x08bb3d8c,  ff);
sethex(0x08bb3d8d,  ff);
sethex(0x08bb3d8e,  ff);

#cheat Highest Fire Copter Level to 16777215
//ID: 19828
//Score: 11
//Author: .:Wolvern:.
//Category: Player Stats
//Description: Changes Highest Fire Copter Level to 16777215
//
//Image: none
//Time: 23/06/2007 11:19:15
//Working: Yes
sethex(0x08bb3d88,  ff);
sethex(0x08bb3d89,  ff);
sethex(0x08bb3d8a,  ff);

#cheat Changes Number of Ballons to 255
//ID: 19827
//Score: 11
//Author: .:Wolvern:.
//Category: Player Stats
//Description: and 255 Ballons out of 255
//Image: none
//Time: 23/06/2007 11:16:41
//Working: Yes
sethex(0x08bb3d3c,  ff);
sethex(0x08bb3d3e,  ff);

#cheat Greatest insane Jump to Perfect Quadruple Insane S
//ID: 19826
//Score: 10
//Author: .:Wolvern:.
//Category: Player Stats
//Description: Changes Greatest insane Jump to Perfect Quadruple Insane Stunt
//Image: none
//Time: 23/06/2007 11:15:44
//Working: Yes
sethex(0x08bb3d08,  0c);
sethex(0x08bb3d00,  ff);
sethex(0x08bb3d01,  ff);
sethex(0x08bb3d02,  ff);
sethex(0x08bb3d03,  10);

#cheat All Unique Jumps Found
//ID: 19825
//Score: 11
//Author: .:Wolvern:.
//Category: Player Stats
//Description: All Unique Jumps Found
//
//30 of 30
//Image: none
//Time: 23/06/2007 11:14:08
//Working: Yes
sethex(0x08bb3doc,  1e);

#cheat Number of Outfit Changes changes to 2147483
//ID: 19824
//Score: 12
//Author: .:Wolvern:.
//Category: Player Stats
//Description: Number of Outfit Changes to 2147483
//
//at the bottom of the stats list!
//
//EDITED BY: psphacker108 on 24/06/07 21:40:31
//Image: none
//Time: 23/06/2007 11:13:27
//Working: Yes
sethex(0x08bb3d2c,  ff);
sethex(0x08bb3d2d,  ff);
sethex(0x08bb3d2e,  ff);
sethex(0x08bb3d2f,  ff);

#cheat road to heaven (all extensions)
//ID: 19823
//Score: 13
//Author: creepers
//Category: Location Mods
//Description: tired of putting all extensions?
//this one is the full version.
//if i add more of these extensions,it will get updated
//
//list of extensions added:
//extension (1)
//extension (2)
//
//EDITED BY: psphacker108 on 28/06/07 02:34:21
//Image: none
//Time: 23/06/2007 06:38:02
//Working: Yes
moveto(474.87,  -368.88,  11.42);  object(0x1CAA,  0,  0,  102);
move(5.43,  -4.32,  2.40);  object(0x1CAA,  0,  0,  128);
move(2.88,  -5.28,  2.20);  object(0x1CAA,  0,  0,  128);
move(6.35,  -0.63,  2.10);  object(0x1CAA,  0,  0,  128);
move(3.10,  -7.09,  2.50);  object(0x1CAA,  0,  0,  128);
move(9.50,  -0.93,  3.20);  object(0x1CAA,  0,  0,  128);
move(3.92,  -7.86,  3.20);  object(0x1CAA,  0,  0,  128);
move(5.25,  2.00,  0.90);  object(0x1CAA,  0,  0,  128);
move(2.32,  -10.29,  3.20);  object(0x1CAA,  0,  0,  128);
move(1.91,  -5.92,  2.40);  object(0x1CAA,  0,  0,  163);
move(-1.96,  -5.97,  2.60);  object(0x1CAA,  0,  0,  203);
move(1.20,  -4.73,  2.00);  object(0x1CAA,  0,  0,  158);
move(5.31,  -4.76,  2.50);  object(0x1CAA,  0,  0,  118);
move(-49.43,  58.16,  -30.80);  object(0x1CAA,  0,  0,  54);
move(52.17,  -63.13,  32.97);  object(0x1CAA,  0,  0,  171);
move(6.39,  -2.87,  2.10);  object(0x1CAA,  0,  0,  128);
move(7.54,  0.25,  2.70);  object(0x1CAA,  0,  0,  65);
move(3.71,  7.47,  2.37);  object(0x1CAA,  0,  0,  22);
move(-2.03,  5.89,  2.40);  object(0x1CAA,  0,  0,  328);
move(2.43,  8.75,  2.30);  object(0x1CAA,  0,  0,  331);
move(-7.81,  1.65,  2.40);  object(0x1CAA,  0,  0,  292);
move(-2.42,  6.09,  1.90);  object(0x1CAA,  0,  0,  292);
move(-7.91,  -1.11,  2.90);  object(0x1CAA,  0,  0,  292);
move(-6.33,  -1.73,  2.10);  object(0x1CAA,  0,  0,  292);
move(-9.09,  -3.42,  3.70);  object(0x1CAA,  0,  0,  292);
move(-8.48,  -0.56,  2.70);  object(0x1CAA,  0,  0,  292);
move(16.44,  1.52,  -5.66);  object(0x1CAA,  0,  0,  284);
move(-18.31,  7.26,  7.70);  object(0x1CAA,  0,  0,  293);
move(-3.65,  5.76,  2.40);  object(0x1CAA,  0,  0,  293);
move(-9.22,  -3.75,  2.60);  object(0x1CAA,  0,  0,  293);
move(-7.79,  -3.15,  2.50);  object(0x1CAA,  0,  0,  293);
move(-6.42,  -1.65,  2.10);  object(0x1CAA,  0,  0,  293);
move(-4.05,  5.29,  2.30);  object(0x1CAA,  0,  0,  293);
move(-1.42,  7.61,  2.10);  object(0x1CAA,  0,  0,  348);
move(-4.09,  6.17,  2.80);  object(0x1CAA,  0,  0,  317);
move(-0.15,  4.93,  1.90);  object(0x1CAA,  0,  0,  359);
move(-4.48,  4.46,  2.10);  object(0x1CAA,  0,  0,  306);
move(-2.40,  6.20,  2.10);  object(0x1CAA,  0,  0,  339);
move(-7.77,  1.86,  1.20);  object(0x1CAA,  0,  0,  339);
move(-7.43,  4.19,  2.10);  object(0x1CAA,  0,  0,  339);
move(-1.14,  6.66,  1.60);  object(0x1CAA,  0,  0,  350);
move(-8.56,  4.97,  2.00);  object(0x1CAA,  0,  0,  350);
move(6.63,  8.07,  1.60);  object(0x1CAA,  0,  0,  350);
move(6.22,  8.72,  1.20);  object(0x1CAA,  0,  0,  350);
move(6.56,  6.70,  2.10);  object(0x1CAA,  0,  0,  350);
move(2.97,  8.72,  2.90);  object(0x1CAA,  0,  0,  350);
move(-8.51,  5.85,  2.70);  object(0x1CAA,  0,  0,  350);
move(7.35,  7.47,  2.40);  object(0x1CAA,  0,  0,  350);
move(-8.99,  5.67,  2.80);  object(0x1CAA,  0,  0,  350);
move(-1.14,  6.65,  3.00);  object(0x1CAA,  0,  0,  350);
move(-1.44,  7.84,  -0.20);  object(0x1CAA,  0,  0,  170);
move(-1.21,  7.05,  -3.20);  object(0x1CAA,  0,  0,  170);
move(-1.34,  7.81,  -3.50);  object(0x1CAA,  0,  0,  170);
move(-1.27,  7.41,  -3.50);  object(0x1CAA,  0,  0,  170);
move(-1.82,  10.64,  -3.90);  object(0x1CAA,  0,  0,  170);
move(0.30,  -1.74,  0.20);  object(0x1CAA,  0,  0,  170);
move(-1.80,  10.52,  -3.80);  object(0x1CAA,  0,  0,  170);
move(-1.33,  8.45,  -3.60);  object(0x1CAA,  0,  0,  172);
move(-1.51,  7.87,  -3.40);  object(0x1CAA,  0,  0,  168);
moveto(426.32,  -218.64,  92.50);  object(0x1CAA,  0,  0,  167);
move(-1.88,  9.02,  -3.70);  object(0x1CAA,  0,  0,  167);
move(-1.77,  6.97,  -2.90);  object(0x1CAA,  0,  0,  166);
move(-2.03,  8.62,  -3.70);  object(0x1CAA,  0,  0,  168);
move(-1.66,  7.86,  -3.40);  object(0x1CAA,  0,  0,  168);
move(-1.93,  8.72,  -3.60);  object(0x1CAA,  0,  0,  168);
move(-1.63,  8.29,  -3.50);  object(0x1CAA,  0,  0,  168);
move(-1.65,  9.03,  -3.70);  object(0x1CAA,  0,  0,  170);
move(-1.35,  9.17,  -3.70);  object(0x1CAA,  0,  0,  170);
move(-1.77,  8.53,  -3.50);  object(0x1CAA,  0,  0,  168);
move(-1.56,  8.58,  -3.70);  object(0x1CAA,  0,  0,  168);
move(-1.87,  8.67,  -3.80);  object(0x1CAA,  0,  0,  168);
move(-1.93,  8.30,  -3.60);  object(0x1CAA,  0,  0,  168);
move(-2.02,  9.05,  -3.70);  object(0x1CAA,  0,  0,  167);
move(-2.12,  8.67,  -3.60);  object(0x1CAA,  0,  0,  167);
move(-2.04,  8.86,  -3.70);  object(0x1CAA,  0,  0,  168);
move(-2.19,  9.06,  -3.90);  object(0x1CAA,  0,  0,  168);
move(-2.13,  8.66,  -3.80);  object(0x1CAA,  0,  0,  168);
move(-1.91,  8.73,  -3.80);  object(0x1CAA,  0,  0,  168);
move(-2.55,  7.79,  -2.40);  object(0x1CAA,  15,  0,  168);
move(-0.99,  3.98,  -0.50);  object(0x1CAA,  25,  0,  168);
move(-2.20,  7.07,  1.20);  object(0x1CAA,  40,  0,  168);
move(-1.45,  7.72,  2.70);  object(0x1CAA,  45,  0,  168);
move(-1.50,  7.81,  4.70);  object(0x1CAA,  60,  0,  168);
moveto(377.02, -22.64, 37.35);  object(0x1CAA, 0, 0, 348);
move(10.93, 2.31, 0.00);  object(0x1CAA, 0, 0, 348);
move(-1.82, 8.68, 3.40);  object(0x1CAA, 0, 0, 348);
move(-10.96, -2.30, 0.00);  object(0x1CAA, 0, 0, 348);
move(-1.56, 7.43, 3.00);  object(0x1CAA, 0, 0, 348);
move(10.96, 2.30, 0.00);  object(0x1CAA, 0, 0, 348);
move(2.08, 8.51, 3.10);  object(0x1CAA, 0, 0, 348);
move(-18.38, -3.93, 0.00);  object(0x1CAA, 0, 0, 348);
move(-5.29, 6.60, 2.90);  object(0x1CAA, 0, 0, 348);
move(25.82, 5.50, 0.00);  object(0x1CAA, 0, 0, 348);
move(2.21, 8.81, 3.20);  object(0x1CAA, 0, 0, 348);
move(-33.45, -7.13, 0.00);  object(0x1CAA, 0, 0, 348);
move(-5.86, 7.65, 3.50);  object(0x1CAA, 0, 0, 348);
move(41.19, 8.72, 0.00);  object(0x1CAA, 0, 0, 348);
move(-5.58, 7.85, 3.50);  object(0x1CAA, 0, 0, 348);
move(-33.75, -7.15, 0.00);  object(0x1CAA, 0, 0, 348);
move(2.12, 8.35, 2.90);  object(0x1CAA, 0, 0, 348);
move(26.42, 5.59, 0.00);  object(0x1CAA, 0, 0, 348);
move(-5.57, 7.49, 3.30);  object(0x1CAA, 0, 0, 348);
move(-18.86, -4.13, 0.00);  object(0x1CAA, 0, 0, 348);
move(2.08, 8.52, 3.10);  object(0x1CAA, 0, 0, 348);
move(11.15, 2.36, 0.00);  object(0x1CAA, 0, 0, 348);
move(-1.78, 8.21, 3.40);  object(0x1CAA, 0, 0, 348);
move(-11.34, -2.44, 0.00);  object(0x1CAA, 0, 0, 348);
move(-1.69, 7.44, 3.00);  object(0x1CAA, 0, 0, 347);
move(11.29, 2.65, 0.00);  object(0x1CAA, 0, 0, 347);
move(-7.01, 5.77, 2.70);  object(0x1CAA, 0, 0, 347);
move(-2.03, 8.09, 3.30);  object(0x1CAA, 0, 0, 346);
move(-2.03, 8.47, 3.20);  object(0x1CAA, 5, 0, 347);
move(-2.19, 8.04, 1.50);  object(0x1CAA, 15, 0, 343);
move(-2.35, 8.06, 0.10);  object(0x1CAA, 25, 0, 346);
move(-2.13, 8.33, -1.00);  object(0x1CAA, 30, 0, 346);
move(-2.13, 8.34, -2.20);  object(0x1CAA, 35, 0, 346);
move(-2.10, 7.91, -3.30);  object(0x1CAA, 45, 0, 345);
move(-1.68, 6.09, -3.00);  object(0x1CAA, 45, 0, 345);
move(-1.99, 7.93, -2.30);  object(0x1CAA, 30, 0, 347);
move(-2.06, 9.04, -1.50);  object(0x1CAA, 30, 0, 347);
move(2.82, 6.02, 0.80);  object(0x1CAA, 0, 0, 29);
move(-6.71, -0.33, 0.00);  object(0x1CAA, 0, 0, 332);
move(-3.64, 6.29, 2.80);  object(0x1CAA, 0, 0, 332);
move(14.13, 0.30, 0.10);  object(0x1CAA, 0, 0, 32);
move(0.51, 7.66, 2.70);  object(0x1CAA, 0, 0, 34);
move(-14.38, 0.24, 0.10);  object(0x1CAA, 0, 0, 335);
move(2.33, 7.13, 2.00);  object(0x1CAA, 0, 0, 335);
move(11.16, 0.54, 0.00);  object(0x1CAA, 0, 0, 36);
move(1.26, 5.45, 1.10);  object(0x1CAA, 0, 0, 2);
move(-11.39, 0.49, 0.00);  object(0x1CAA, 0, 0, 2);
move(-11.19, 0.48, 0.00);  object(0x1CAA, 0, 0, 2);
move(33.77, -1.46, 0.00);  object(0x1CAA, 0, 0, 2);
move(-2.02, 6.51, 2.70);  object(0x1CAA, 0, 0, 2);
move(-11.39, 0.49, 0.00);  object(0x1CAA, 0, 0, 2);
move(-11.49, 0.50, 0.00);  object(0x1CAA, 0, 0, 2);
move(4.29, 6.73, 2.80);  object(0x1CAA, 0, 0, 2);
move(11.39, -0.49, 0.00);  object(0x1CAA, 0, 0, 2);
move(-5.54, 6.07, 2.40);  object(0x1CAA, 0, 0, 2);
move(0.27, 6.37, 2.70);  object(0x1CAA, 0, 0, 2);
move(6.31, 3.24, 2.10);  object(0x1CAA, 0, 0, 38);
move(7.99, -3.37, 1.90);  object(0x1CAA, 0, 0, 81);
move(3.96, -5.71, 1.40);  object(0x1CAA, 0, 0, 117);
move(2.80, -7.03, 2.30);  object(0x1CAA, 0, 0, 142);
move(-0.57, -5.46, 1.50);  object(0x1CAA, 0, 0, 163);
move(-1.87, -6.81, 2.20);  object(0x1CAA, 0, 0, 197);
move(-6.01, -4.00, 2.00);  object(0x1CAA, 0, 0, 214);
move(-7.42, -1.38, 2.40);  object(0x1CAA, 0, 0, 247);
move(-7.26, -3.14, 2.90);  object(0x1CAA, 0, 0, 247);
move(-6.42, -2.78, 2.90);  object(0x1CAA, 0, 0, 247);
move(-6.93, -2.69, 2.80);  object(0x1CAA, 0, 0, 247);
move(-5.89, -4.82, 2.80);  object(0x1CAA, 0, 0, 223);
move(-2.27, -4.62, 1.40);  object(0x1CAA, 0, 0, 206);
move(-1.70, -8.11, 2.70);  object(0x1CAA, 0, 0, 186);
move(0.60, -6.58, 2.10);  object(0x1CAA, 0, 0, 170);
move(1.91, -6.75, 2.40);  object(0x1CAA, 0, 0, 160);
move(2.92, -4.50, 1.90);  object(0x1CAA, 0, 0, 152);
move(4.99, -5.91, 2.50);  object(0x1CAA, 0, 0, 143);
move(4.87, -4.83, 2.80);  object(0x1CAA, 0, 0, 135);
move(4.19, -4.18, 2.50);  object(0x1CAA, 0, 0, 135);
move(5.02, -5.00, 2.80);  object(0x1CAA, 0, 0, 135);
move(4.04, -4.03, 2.40);  object(0x1CAA, 0, 0, 135);
move(4.67, -4.66, 2.80);  object(0x1CAA, 0, 0, 135);
move(4.53, -4.80, 2.70);  object(0x1CAA, 0, 0, 137);
move(-3.87, -5.19, 0.50);  object(0x1CAA, 0, 0, 188);
move(-0.79, -6.38, 2.60);  object(0x1CAA, 0, 0, 188);
move(0.14, -4.35, 1.60);  object(0x1CAA, 0, 0, 179);
move(0.06, -6.51, 2.70);  object(0x1CAA, 0, 0, 179);
move(0.07, -6.99, 2.80);  object(0x1CAA, 0, 0, 179);
move(2.42, -3.95, 1.40);  object(0x1CAA, 0, 0, 156);
move(2.86, -6.32, 2.80);  object(0x1CAA, 0, 0, 156);
move(2.54, -5.60, 2.60);  object(0x1CAA, 0, 0, 156);
move(3.14, -5.84, 2.10);  object(0x1CAA, 0, 0, 139);
move(5.21, -3.71, 2.20);  object(0x1CAA, 0, 0, 122);
move(6.35, -3.92, 2.90);  object(0x1CAA, 0, 0, 122);
move(6.99, -4.30, 3.30);  object(0x1CAA, 0, 0, 122);
move(7.64, -2.98, 2.90);  object(0x1CAA, 0, 0, 105);
move(7.01, -1.83, 2.80);  object(0x1CAA, 0, 0, 105);
move(5.82, -1.52, 2.40);  object(0x1CAA, 0, 0, 105);
move(8.08, -2.11, 3.30);  object(0x1CAA, 0, 0, 105);
move(4.14, -5.60, 2.00);  object(0x1CAA, 0, 0, 104);
move(6.58, -6.03, 3.10);  object(0x1CAA, 0, 0, 104);
move(5.96, -6.08, 2.70);  object(0x1CAA, 0, 0, 104);
move(7.89, 2.51, 2.60);  object(0x1CAA, 0, 0, 104);
move(4.83, -5.48, 2.50);  object(0x1CAA, 0, 0, 104);
move(6.32, -5.65, 3.10);  object(0x1CAA, 0, 0, 104);
move(4.93, -5.09, 2.40);  object(0x1CAA, 0, 0, 104);
move(7.65, 2.06, 2.80);  object(0x1CAA, 0, 0, 104);
move(4.96, -6.96, 2.60);  object(0x1CAA, 0, 0, 104);
move(4.89, -5.38, 2.50);  object(0x1CAA, 0, 0, 122);
teleport(461.30,  -367.80,  10.18)

#cheat another extension of road to heaven (2)
//ID: 19822
//Score: 8
//Author: creepers
//Category: Location Mods
//Description: yes,god gave us the chance to go again.
//goes really high
//
//EDITED BY: psphacker108 on 28/06/07 02:34:45
//Image: none
//Time: 23/06/2007 05:43:32
//Working: Yes
moveto(377.02, -22.64, 37.35);  object(0x1CAA, 0, 0, 348);
move(10.93, 2.31, 0.00);  object(0x1CAA, 0, 0, 348);
move(-1.82, 8.68, 3.40);  object(0x1CAA, 0, 0, 348);
move(-10.96, -2.30, 0.00);  object(0x1CAA, 0, 0, 348);
move(-1.56, 7.43, 3.00);  object(0x1CAA, 0, 0, 348);
move(10.96, 2.30, 0.00);  object(0x1CAA, 0, 0, 348);
move(2.08, 8.51, 3.10);  object(0x1CAA, 0, 0, 348);
move(-18.38, -3.93, 0.00);  object(0x1CAA, 0, 0, 348);
move(-5.29, 6.60, 2.90);  object(0x1CAA, 0, 0, 348);
move(25.82, 5.50, 0.00);  object(0x1CAA, 0, 0, 348);
move(2.21, 8.81, 3.20);  object(0x1CAA, 0, 0, 348);
move(-33.45, -7.13, 0.00);  object(0x1CAA, 0, 0, 348);
move(-5.86, 7.65, 3.50);  object(0x1CAA, 0, 0, 348);
move(41.19, 8.72, 0.00);  object(0x1CAA, 0, 0, 348);
move(-5.58, 7.85, 3.50);  object(0x1CAA, 0, 0, 348);
move(-33.75, -7.15, 0.00);  object(0x1CAA, 0, 0, 348);
move(2.12, 8.35, 2.90);  object(0x1CAA, 0, 0, 348);
move(26.42, 5.59, 0.00);  object(0x1CAA, 0, 0, 348);
move(-5.57, 7.49, 3.30);  object(0x1CAA, 0, 0, 348);
move(-18.86, -4.13, 0.00);  object(0x1CAA, 0, 0, 348);
move(2.08, 8.52, 3.10);  object(0x1CAA, 0, 0, 348);
move(11.15, 2.36, 0.00);  object(0x1CAA, 0, 0, 348);
move(-1.78, 8.21, 3.40);  object(0x1CAA, 0, 0, 348);
move(-11.34, -2.44, 0.00);  object(0x1CAA, 0, 0, 348);
move(-1.69, 7.44, 3.00);  object(0x1CAA, 0, 0, 347);
move(11.29, 2.65, 0.00);  object(0x1CAA, 0, 0, 347);
move(-7.01, 5.77, 2.70);  object(0x1CAA, 0, 0, 347);
move(-2.03, 8.09, 3.30);  object(0x1CAA, 0, 0, 346);
move(-2.03, 8.47, 3.20);  object(0x1CAA, 5, 0, 347);
move(-2.19, 8.04, 1.50);  object(0x1CAA, 15, 0, 343);
move(-2.35, 8.06, 0.10);  object(0x1CAA, 25, 0, 346);
move(-2.13, 8.33, -1.00);  object(0x1CAA, 30, 0, 346);
move(-2.13, 8.34, -2.20);  object(0x1CAA, 35, 0, 346);
move(-2.10, 7.91, -3.30);  object(0x1CAA, 45, 0, 345);
move(-1.68, 6.09, -3.00);  object(0x1CAA, 45, 0, 345);
move(-1.99, 7.93, -2.30);  object(0x1CAA, 30, 0, 347);
move(-2.06, 9.04, -1.50);  object(0x1CAA, 30, 0, 347);
move(2.82, 6.02, 0.80);  object(0x1CAA, 0, 0, 29);
move(-6.71, -0.33, 0.00);  object(0x1CAA, 0, 0, 332);
move(-3.64, 6.29, 2.80);  object(0x1CAA, 0, 0, 332);
move(14.13, 0.30, 0.10);  object(0x1CAA, 0, 0, 32);
move(0.51, 7.66, 2.70);  object(0x1CAA, 0, 0, 34);
move(-14.38, 0.24, 0.10);  object(0x1CAA, 0, 0, 335);
move(2.33, 7.13, 2.00);  object(0x1CAA, 0, 0, 335);
move(11.16, 0.54, 0.00);  object(0x1CAA, 0, 0, 36);
move(1.26, 5.45, 1.10);  object(0x1CAA, 0, 0, 2);
move(-11.39, 0.49, 0.00);  object(0x1CAA, 0, 0, 2);
move(-11.19, 0.48, 0.00);  object(0x1CAA, 0, 0, 2);
move(33.77, -1.46, 0.00);  object(0x1CAA, 0, 0, 2);
move(-2.02, 6.51, 2.70);  object(0x1CAA, 0, 0, 2);
move(-11.39, 0.49, 0.00);  object(0x1CAA, 0, 0, 2);
move(-11.49, 0.50, 0.00);  object(0x1CAA, 0, 0, 2);
move(4.29, 6.73, 2.80);  object(0x1CAA, 0, 0, 2);
move(11.39, -0.49, 0.00);  object(0x1CAA, 0, 0, 2);
move(-5.54, 6.07, 2.40);  object(0x1CAA, 0, 0, 2);
move(0.27, 6.37, 2.70);  object(0x1CAA, 0, 0, 2);
move(6.31, 3.24, 2.10);  object(0x1CAA, 0, 0, 38);
move(7.99, -3.37, 1.90);  object(0x1CAA, 0, 0, 81);
move(3.96, -5.71, 1.40);  object(0x1CAA, 0, 0, 117);
move(2.80, -7.03, 2.30);  object(0x1CAA, 0, 0, 142);
move(-0.57, -5.46, 1.50);  object(0x1CAA, 0, 0, 163);
move(-1.87, -6.81, 2.20);  object(0x1CAA, 0, 0, 197);
move(-6.01, -4.00, 2.00);  object(0x1CAA, 0, 0, 214);
move(-7.42, -1.38, 2.40);  object(0x1CAA, 0, 0, 247);
move(-7.26, -3.14, 2.90);  object(0x1CAA, 0, 0, 247);
move(-6.42, -2.78, 2.90);  object(0x1CAA, 0, 0, 247);
move(-6.93, -2.69, 2.80);  object(0x1CAA, 0, 0, 247);
move(-5.89, -4.82, 2.80);  object(0x1CAA, 0, 0, 223);
move(-2.27, -4.62, 1.40);  object(0x1CAA, 0, 0, 206);
move(-1.70, -8.11, 2.70);  object(0x1CAA, 0, 0, 186);
move(0.60, -6.58, 2.10);  object(0x1CAA, 0, 0, 170);
move(1.91, -6.75, 2.40);  object(0x1CAA, 0, 0, 160);
move(2.92, -4.50, 1.90);  object(0x1CAA, 0, 0, 152);
move(4.99, -5.91, 2.50);  object(0x1CAA, 0, 0, 143);
move(4.87, -4.83, 2.80);  object(0x1CAA, 0, 0, 135);
move(4.19, -4.18, 2.50);  object(0x1CAA, 0, 0, 135);
move(5.02, -5.00, 2.80);  object(0x1CAA, 0, 0, 135);
move(4.04, -4.03, 2.40);  object(0x1CAA, 0, 0, 135);
move(4.67, -4.66, 2.80);  object(0x1CAA, 0, 0, 135);
move(4.53, -4.80, 2.70);  object(0x1CAA, 0, 0, 137);
move(-3.87, -5.19, 0.50);  object(0x1CAA, 0, 0, 188);
move(-0.79, -6.38, 2.60);  object(0x1CAA, 0, 0, 188);
move(0.14, -4.35, 1.60);  object(0x1CAA, 0, 0, 179);
move(0.06, -6.51, 2.70);  object(0x1CAA, 0, 0, 179);
move(0.07, -6.99, 2.80);  object(0x1CAA, 0, 0, 179);
move(2.42, -3.95, 1.40);  object(0x1CAA, 0, 0, 156);
move(2.86, -6.32, 2.80);  object(0x1CAA, 0, 0, 156);
move(2.54, -5.60, 2.60);  object(0x1CAA, 0, 0, 156);
move(3.14, -5.84, 2.10);  object(0x1CAA, 0, 0, 139);
move(5.21, -3.71, 2.20);  object(0x1CAA, 0, 0, 122);
move(6.35, -3.92, 2.90);  object(0x1CAA, 0, 0, 122);
move(6.99, -4.30, 3.30);  object(0x1CAA, 0, 0, 122);
move(7.64, -2.98, 2.90);  object(0x1CAA, 0, 0, 105);
move(7.01, -1.83, 2.80);  object(0x1CAA, 0, 0, 105);
move(5.82, -1.52, 2.40);  object(0x1CAA, 0, 0, 105);
move(8.08, -2.11, 3.30);  object(0x1CAA, 0, 0, 105);
move(4.14, -5.60, 2.00);  object(0x1CAA, 0, 0, 104);
move(6.58, -6.03, 3.10);  object(0x1CAA, 0, 0, 104);
move(5.96, -6.08, 2.70);  object(0x1CAA, 0, 0, 104);
move(7.89, 2.51, 2.60);  object(0x1CAA, 0, 0, 104);
move(4.83, -5.48, 2.50);  object(0x1CAA, 0, 0, 104);
move(6.32, -5.65, 3.10);  object(0x1CAA, 0, 0, 104);
move(4.93, -5.09, 2.40);  object(0x1CAA, 0, 0, 104);
move(7.65, 2.06, 2.80);  object(0x1CAA, 0, 0, 104);
move(4.96, -6.96, 2.60);  object(0x1CAA, 0, 0, 104);
move(4.89, -5.38, 2.50);  object(0x1CAA, 0, 0, 122);

#cheat Teleport To walk way above Phil Collins
//ID: 19817
//Score: 9
//Author: .:Wolvern:.
//Category: Teleport
//Description: Teleport to the walk way above Phil Collins Stage! Where you had to Stop Men Cutting it down!
//
//EDITED BY: psphacker108 on 24/06/07 17:04:04
//Image: http://www.wolvern.xynox.co.uk/images/screen1.bmp
//Time: 22/06/2007 12:22:04
//Working: Yes
teleport(-1569.31, 1335.04, -220.22)

#cheat Hydrant Sprays a Wall of Water
//ID: 19814
//Score: 18
//Author: .:Wolvern:.
//Category: Environment
//Description: Fire Hydrant Makes a Wall of Water
//
//Credit/Thanks to psphacker108
//for the Hydrant code
//
//EDITED BY: psphacker108 on 21/06/07 05:05:15
//Image: none
//Time: 20/06/2007 13:24:24
//Working: Yes
sethex(0x956a733,  0x40);

#cheat Glass Nite
//ID: 19813
//Score: 19
//Author: psphacker108
//Category: Weapons
//Description: This makes all night sticks Glass like. Check the picture . (Picture had to be almost in motion that's why it looks funny)
//Image: http://i66.photobucket.com/albums/h257/pspman108/screen2-29.jpg
//Time: 20/06/2007 00:23:36
//Working: Yes
setchar(0x9AF2C50,   0x00,   0x00,   0x00, 0x3f);  
setchar(0x9AF2C54,   0x00,   0x00,   0x00, 0x3f);  
setchar(0x9AF2C58,   0x00,   0x00,   0x00, 0x3f);  
setchar(0x9AF2C5C,   0x00,   0x00,   0x00, 0x3f);  
setchar(0x9AF2C60,   0x00,   0x00,   0x00, 0x3f);  
setchar(0x9AF2C64,   0x00,   0x00,   0x00, 0x3f);  
setchar(0x9AF2C68,   0x00,   0x00,   0x00, 0x3f);  
setchar(0x9AF2C6C,   0x00,   0x00,   0x00, 0x3f);  
setchar(0x9AF2C70,   0x00,   0x00,   0x00, 0x3f);  
setchar(0x9AF2C74,   0x00,   0x00,   0x00, 0x3f);  
setchar(0x9AF2C78,   0x00,   0x00,   0x00, 0x3f);  
setchar(0x9AF2C7C,   0x00,   0x00,   0x00, 0x3f);  
setchar(0x9AF2C80,   0x00,   0x00,   0x00, 0x3f);  
setchar(0x9AF2C84,   0x00,   0x00,   0x00, 0x3f);  
setchar(0x9AF2C88,   0x00,   0x00,   0x00, 0x3f);  
setchar(0x9AF2C8C,   0x00,   0x00,   0x00, 0x3f);

#cheat White Nite
//ID: 19812
//Score: 13
//Author: psphacker108
//Category: Weapons
//Description: Nite Stick Color White, Any nite stick your pick up from cops will be White. even when it's in Vics hand it's always White.
//Image: http://i66.photobucket.com/albums/h257/pspman108/N_white.jpg
//Time: 19/06/2007 16:33:01
//Working: Yes
setchar(0x9AF2C50,  0xff,  0xff,  0xff); 
setchar(0x9AF2C54,  0xff,  0xff,  0xff); 
setchar(0x9AF2C58,  0xff,  0xff,  0xff); 
setchar(0x9AF2C5C,  0xff,  0xff,  0xff); 
setchar(0x9AF2C60,  0xff,  0xff,  0xff); 
setchar(0x9AF2C64,  0xff,  0xff,  0xff); 
setchar(0x9AF2C68,  0xff,  0xff,  0xff); 
setchar(0x9AF2C6C,  0xff,  0xff,  0xff); 
setchar(0x9AF2C70,  0xff,  0xff,  0xff); 
setchar(0x9AF2C74,  0xff,  0xff,  0xff); 
setchar(0x9AF2C78,  0xff,  0xff,  0xff); 
setchar(0x9AF2C7C,  0xff,  0xff,  0xff); 
setchar(0x9AF2C80,  0xff,  0xff,  0xff); 
setchar(0x9AF2C84,  0xff,  0xff,  0xff); 
setchar(0x9AF2C88,  0xff,  0xff,  0xff); 
setchar(0x9AF2C8C,  0xff,  0xff,  0xff);

#cheat RaNdOm HoRn!
//ID: 19811
//Score: 12
//Author: Xsjado
//Category: Pointless
//Description: Whenever your in a car your horn will go off randomly! can get very annoying
//
//EDITED BY: psphacker108 on 21/06/07 05:05:24
//Image: none
//Time: 19/06/2007 12:26:40
//Working: Yes
setchar(pcar + 0x000002BC, 1);

#cheat Change Radio to Emotion
//ID: 19810
//Score: 10
//Author: Xsjado
//Category: Audio
//Description: Any car you get into will automatically be on Emotion
//
//EDITED BY: psphacker108 on 21/06/07 05:05:32
//Image: none
//Time: 19/06/2007 11:31:29
//Working: Yes
setchar(pcar + 0x000002B7, 8);

#cheat Change Radio to Espantoso
//ID: 19809
//Score: 10
//Author: Xsjado
//Category: Audio
//Description: Any car you get into will automatically be on Espantoso
//
//EDITED BY: psphacker108 on 21/06/07 05:05:43
//Image: none
//Time: 19/06/2007 11:29:49
//Working: Yes
setchar(pcar + 0x000002B7, 7);

#cheat Change Radio to Fresh 105
//ID: 19808
//Score: 10
//Author: Xsjado
//Category: Audio
//Description: Any car you get into will automatically be on Fresh 105
//
//EDITED BY: psphacker108 on 26/06/07 21:20:35
//Image: none
//Time: 19/06/2007 11:29:00
//Working: Yes
setchar(pcar + 0x000002B7, 6);

#cheat Change Radio to Wave 103
//ID: 19807
//Score: 10
//Author: Xsjado
//Category: Audio
//Description: Any car you get into will automatically be on Wave 103
//
//EDITED BY: psphacker108 on 26/06/07 21:20:47
//Image: none
//Time: 19/06/2007 11:26:50
//Working: Yes
setchar(pcar + 0x000002B7, 5);

#cheat Change Radio to VCFL
//ID: 19806
//Score: 10
//Author: Xsjado
//Category: Audio
//Description: Any car you get into will automatically be on VCFL.
//
//EDITED BY: psphacker108 on 21/06/07 05:05:00
//Image: none
//Time: 19/06/2007 11:24:22
//Working: Yes
setchar(pcar + 0x000002B7,  4);

#cheat Change Radio to Paradise
//ID: 19805
//Score: 10
//Author: Xsjado
//Category: Audio
//Description: Any car you get into will automatically be on Paradise
//
//EDITED BY: psphacker108 on 26/06/07 21:21:15
//Image: none
//Time: 19/06/2007 11:21:56
//Working: Yes
setchar(pcar + 0x000002B7, 2);

#cheat Change Radio to V Rock
//ID: 19804
//Score: 10
//Author: Xsjado
//Category: Audio
//Description: Every car you get into will automatically be on V Rock
//
//EDITED BY: psphacker108 on 26/06/07 21:20:58
//Image: none
//Time: 19/06/2007 11:19:59
//Working: Yes
setchar(pcar + 0x000002B7, 1);

#cheat Change Radio to Flash
//ID: 19803
//Score: 11
//Author: Xsjado
//Category: Audio
//Description: Every car you get into will automatically be on Flash
//
//EDITED BY: psphacker108 on 26/06/07 21:20:23
//Image: none
//Time: 19/06/2007 11:16:58
//Working: Yes
setchar(pcar + 0x000002B7, 0);

#cheat The Hood
//ID: 19839
//Score: 13
//Author: psphacker108
//Category: Vehicle
//Description: The Hood
//Controls:
//Pess UP to Pop your Hood
//Press down to turn off
//
//Video Shows locking and unlocking position
//USE DOWN TO LOCK YOUR HOOD AT A CERTIN POSITION. UP TO RELEASE.
//Thanks to Xsjado for Location :)
//Image: http://i66.photobucket.com/albums/h257/pspman108/video2-14.gif
//Time: 27/06/2007 17:19:47
//Working: Yes
if(buttons & CTRL_UP)
setchar(pcar + 0x000003BA,  2);
{
if(buttons & CTRL_DOWN)
setchar(pcar + 0x000003BA,  0);
}

#cheat Pop open Everything
//ID: 19841
//Score: 12
//Author: Xsjado
//Category: Vehicle
//Description: Press up to pop the bonet
//press down to pop the boot
//press left to open the left door
//press right to open the right door
//
//thanks to psphacker108 for bonet address :)
//
//EDITED BY: psphacker108 on 30/06/07 14:44:24
//Image: none
//Time: 28/06/2007 10:37:26
//Working: Yes
if(press & CTRL_UP)
setchar(pcar + 0x000003BA, 2);
if(press & CTRL_DOWN)
setchar(pcar + 0x000003BB, 2);
if(press & CTRL_RIGHT)
setchar(pcar + 0x000003BD, 2);
if(press & CTRL_LEFT)
setchar(pcar + 0x000003BC, 2);
#off
setchar(pcar + 0x000003BC, 0);
setchar(pcar + 0x000003BD, 0);
setchar(pcar + 0x000003BB, 0);
setchar(pcar + 0x000003BA, 0);

#cheat Gas Modification
//ID: 19847
//Score: 14
//Author: psphacker108
//Category: Vehicle
//Description: By psphacker108, waterbottle, and DDM
//This code allows you to simulate the effects of gas in-game. Each car has a random amount of gasoline in its tank and you must refill your tank after a while at the Ocean Beach gas station. Fail to refill and you will find yourself pushing the car!
//Image: http://i66.photobucket.com/albums/h257/pspman108/video3-8.gif
//Time: 29/06/2007 02:20:31
//Working: Yes
//Use Ocean Beach Gas station to refuel!
static start;
static gas;
if(pcar&&!start) {
	if(!getchar(pcar+0x3d)) {
		gas = (abs((getint(pplayer+0x68)+getint(pplayer))*getint(0x08bb3b40)) % (100-50)) + 50;
		setchar(pcar+0x3d, 1);
	}
	else {
		gas = getchar(pcar+0x3c);
	}
	start = 1;
}
setchar(pcar+0x3c, gas);
if(!pcar) {
	start = 0;
}
static timepassed;
static init;
if(!init)
{
   lasttime = getchar( 0x08bb3b41 );
   init = 1;
}
if( lasttime != getchar( 0x08bb3b41 ) )
{
   timepassed++;
   lasttime = getchar( 0x08bb3b41 );
}
if( timepassed == 6 )
{
  if(gas > 0) {
    gas -= 1;
  }
  timepassed = 0;
}
if(pcar&&gas) {
setshort(0x08e90bd8, 'G', 'a', 's', ' ', 'l', 'e', 'f', 't', ':', ' ');
int = gas;
size = 0;
for( i = 1; i < int; i *= 10 ) size+=2;
for( i = 0; int > 0; i+=2 )
{
   setshort(0x08e90bea+size-i,  '0' + (int % 10));
   int = int(int/10);
}
setshort(0x08e90bea+size-i+0x6, '%', ' ', 0);
}
if(pcar&&!gas) {
	setfloat(pcar+0x140, getfloat(pcar+0x140)*0.91, getfloat(pcar+0x144)*0.91);
	setshort(0x08e90bd8, 1, 'Y', 'o', 'u', ' ', 'a', 'r', 'e', ' ', 'o', 'u', 't', ' ', 'o', 'f', ' ', 'g', 'a', 's', '!', 0); 
}
if(getfloat(pcar+0x140) == 0 && getfloat(pcar+0x144) == 0 && getfloat(pcar+0x30) > 21.09 && getfloat(pcar+0x30) < 71.80 && getfloat(pcar+0x34) > -1091.87 && getfloat(pcar+0x34) < -1042.57) {
	if(gas<100) {
		price = (100 - gas) * 0.4;
		setint(0x08bde55c, getint(0x08bde55c) - price, getint(0x08bde55c) - price);
		gas = 100;
	}
}

#cheat San Andreas Nos
//ID: 19846
//Score: 10
//Author: Durka Durka Mahn
//Category: Vehicle
//Description: That's right! A taste of San Andreas on your PSP. This code will allow you to use nos for about 15 seconds, with the blue exhaust included! Simply hit O to activate, and hit X to accelerate once activated.
//Image: none
//Time: 29/06/2007 01:58:21
//Working: Yes
static On;
static going;
if(buttons & CTRL_CIRCLE &&!On) {
   On = 1;
}
if(On) {
static timepassed;
static init;
if(!init)
{
   lasttime = getchar( 0x08bb3b41 );
   init = 1;
}
if( lasttime != getchar( 0x08bb3b41 ) )
{
   timepassed++;
   lasttime = getchar( 0x08bb3b41 );
}
if( timepassed < 15 )
{
    going = 1;
}
else {
  On = 0;
  timepassed = 0;
  going = 0;
}
}
if(going) {
   setchar(0x09569B90,  0x10);
   setchar(0x09569B94,  0,  127,  255);
   speed = 1.5;                                                                                  
   thrust = speed * 0.00333;       
   if(buttons & CTRL_CROSS) {                             
      setfloat(pcar + 0x0140,  getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);          
      setfloat(pcar + 0x0144,  getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust);
   }
}
else
{
   setchar(0x09569B90,  0x4);
   setchar(0x09569B94,  63,  63,  63);
} 

#cheat Show Vehicles Health In Armor Bar V1
//ID: 19858
//Score: 3
//Author: emcp
//Category: Vehicle
//Description: this cheat will show you vehicles health in the armor bar (only tested on cars)
//
//
//NOTE THERE IS A SMALL AMOUNT OF ARMOR LEFT BEHIND ILL FIX THIS LATER ASWELL AS GET BACK YOUR ORIGINAL ARMOUR TO TIRED
//
//Image: none
//Time: 02/07/2007 01:03:30
//Working: Unknown
setfloat(pplayer + 0x4E8,  getfloat(pcar+0x027c)/10);


#cheat hunter on 2nd city safe house v1.0
//ID: 19856
//Score: 4
//Author: hoockhand
//Category: Vehicle
//Description: what it seas in name there is a teleport
//                      byhoockhand 
//sorry for no imag frogot to take vid or screenshot
//Image: none
//Time: 01/07/2007 18:05:35
//Working: Unknown
//made by duhdho
pspawn = 0x08E81290;
setint(pspawn, 275);
setfloat(pspawn + 0x4, 252.69, -168.67, 34.71, 180); 
teleport(258.71,  -172.27,  34.71);

#cheat sea sparrow on 2nd city house
//ID: 19855
//Score: 4
//Author: hoockhand
//Category: Vehicle
//Description: what it seas in name i added a teleport too
//
//off topic i found out if you spawn a chopper whit the cheat device know how it dont work if you use hover cars to get it in plac you park cars then get out of it hele and grase so it closes it will work after you get back in it works
//Image: none
//Time: 01/07/2007 18:01:07
//Working: Unknown
//made by hoockhand
pspawn = 0x08E81290;
setint(pspawn, 263);
setfloat(pspawn + 0x4, 244.95, -184.14, 29.08, 0); 
teleport(251.57,  -180.47,  29.18);


#cheat crash chute
//ID: 19854
//Score: 4
//Author: creepers
//Category: Location Mods
//Description: are you ready for crashing?
//then try this!!!!
//just put your car on the chute and let the smashing begin!!!
//vid is 7 mb,ill wait for photobucket to finish it
//EDIT:video uploaded
//Image: http://i189.photobucket.com/albums/z209/damp47/video1-5.gif
//Time: 01/07/2007 03:58:02
//Working: Unknown
moveto(450.65, -224.86, 360.70);  object(0x1CB2, 270, 270, 357);
move(-11.29, -0.52, 0.00);  object(0x1CB2, 270, 270, 357);
move(-2.10, -0.10, 0.00);  object(0x1CB2, 270, 270, 357);
move(-9.85, -3.68, 0.00);  object(0x1CB2, 270, 180, 269);
move(-0.18, 6.50, 0.00);  object(0x1CB2, 270, 180, 269);
move(-2.47, -3.27, 0.00);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.70);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -1.70);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, 1.70);  object(0x1CB2, 270, 180, 184);
move(-0.37, 0.04, -7.80);  object(0x1CB2, 270, 180, 188);
move(0.35, -0.04, 0.00);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -4.70);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -4.50);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.80);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.80);  object(0x1CB2, 270, 180, 184);
move(-0.00, 0.00, -13.90);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.80);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -12.80);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.30);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -14.00);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -14.00);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.00);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -12.90);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.20);  object(0x1CB2, 270, 180, 184);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 180, 184);
move(-0.11, 0.01, -13.80);  object(0x1CB2, 270, 180, 185);
move(0.00, 0.00, -13.50);  object(0x1CB2, 270, 180, 185);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 180, 185);
move(0.00, 0.00, -12.90);  object(0x1CB2, 270, 180, 185);
move(0.00, 0.00, -12.90);  object(0x1CB2, 270, 180, 185);
move(0.00, 0.00, -13.80);  object(0x1CB2, 270, 180, 185);
move(-0.28, -0.03, -26.60);  object(0x1CB2, 270, 180, 185);
move(0.00, 0.00, -13.50);  object(0x1CB2, 270, 180, 185);
move(0.00, 0.00, -15.10);  object(0x1CB2, 270, 180, 185);
move(0.00, 0.00, -9.20);  object(0x1CB2, 270, 180, 185);
move(2.93, 3.49, 337.81);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -2.70);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -10.70);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.30);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.90);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -14.20);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.90);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.70);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.00);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -12.80);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.20);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.20);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.90);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.90);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.10);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -12.90);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.10);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -12.30);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -12.50);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -12.60);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.20);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.50);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.50);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -13.70);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -5.40);  object(0x1CB2, 270, 180, 273);
move(0.00, 0.00, -12.70);  object(0x1CB2, 270, 180, 273);
move(-2.88, -3.52, 13.30);  object(0x1CB2, 270, 180, 5);
moveto(424.00, -234.45, -8.81);  object(0x1CA4, 0, 0, 104);
move(0.40, 8.45, 68.80);  object(0x1CB2, 270, 0, 4);
move(5.54, 0.32, -50.27);  object(0x1CB2, 270, 0, 4);
move(-0.00, -0.02, 13.70);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.80);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.40);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.40);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.60);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.07, 14.40);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.50);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 12.30);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 12.80);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 14.40);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.30);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.80);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 12.70);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 11.10);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.30);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 11.20);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.80);  object(0x1CB2, 270, 0, 4);
move(0.01, 0.00, 14.30);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.70);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 13.80);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 12.20);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 10.60);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 10.10);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 8.90);  object(0x1CB2, 270, 0, 4);
move(0.00, 0.00, 12.30);  object(0x1CB2, 270, 0, 4);
move(-5.34, -0.44, -14.50);  object(0x1CB2, 270, 0, 4);
moveto(436.38, -227.83, 343.64);  object(0x1CB2, 0, 0, 359);
move(-6.31, 2.14, -1.50);  object(0x1CB2, 270, 0, 6);
move(0.00, 0.00, 11.30);  object(0x1CB2, 270, 0, 6);
move(-0.40, 0.04, -6.50);  object(0x1CEA, 270, 0, 6);
move(-4.08, 0.39, 0.00);  object(0x1CEA, 270, 0, 6);
move(1.89, -0.18, 0.00);  object(0x1CEA, 270, 0, 6);
move(-0.28, -2.92, 0.00);  object(0x1CEA, 270, 0, 6);
move(-1.69, 0.16, 0.00);  object(0x1CEA, 270, 0, 6);
move(3.88, -0.38, 0.00);  object(0x1CEA, 270, 0, 6);
move(0.16, 1.61, 0.00);  object(0x1CEA, 270, 0, 6);
move(-2.29, 0.22, 0.00);  object(0x1CEA, 270, 0, 6);
move(-1.69, 0.16, 0.00);  object(0x1CEA, 270, 0, 6);
move(-0.05, 3.68, -6.60);  object(0x1CEB, 270, 0, 6);
move(1.49, -0.14, 0.00);  object(0x1CEB, 270, 0, 6);
move(2.09, -0.20, 0.00);  object(0x1CEB, 270, 0, 6);
move(-0.13, -1.38, 0.00);  object(0x1CEB, 270, 0, 6);
move(-2.09, 0.20, 0.00);  object(0x1CEB, 270, 0, 6);
move(-1.39, 0.13, 0.00);  object(0x1CEB, 270, 0, 6);
move(2.39, -0.23, 0.00);  object(0x1CEB, 270, 0, 6);
move(0.12, 1.24, 0.00);  object(0x1CEB, 270, 0, 6);
move(-0.24, -2.53, 0.00);  object(0x1CEB, 270, 0, 6);
move(1.03, -0.10, 0.00);  object(0x1CEB, 270, 0, 4);
move(-2.10, 0.13, 0.00);  object(0x1CEB, 270, 0, 4);
move(-1.20, 0.07, 0.00);  object(0x1CEB, 270, 0, 4);
move(0.12, 2.44, -13.70);  object(0x01C2, 95, 0, 359);
move(1.10, 0.02, 0.00);  object(0x01C2, 95, 0, 359);
move(1.10, 0.02, 0.00);  object(0x01C2, 95, 0, 359);
move(1.30, 0.02, 0.00);  object(0x01C2, 95, 0, 359);
move(0.02, -1.31, 0.00);  object(0x01C2, 95, 0, 359);
move(-1.30, -0.02, 0.00);  object(0x01C2, 95, 0, 359);
move(-1.00, -0.01, 0.00);  object(0x01C2, 95, 0, 359);
move(-1.00, -0.01, 0.00);  object(0x01C2, 95, 0, 359);
move(0.01, -0.90, 0.00);  object(0x01C2, 95, 0, 359);
move(1.00, 0.01, 0.00);  object(0x01C2, 95, 0, 359);
move(1.00, 0.01, 0.00);  object(0x01C2, 95, 0, 359);
move(1.20, 0.02, 0.00);  object(0x01C2, 95, 0, 359);
move(0.01, -0.80, 0.00);  object(0x01C2, 95, 0, 359);
move(-1.30, -0.02, 0.00);  object(0x01c2, 95, 0, 359);
move(-1.00, -0.01, 0.00);  object(0x01C2, 95, 0, 359);
move(-0.90, -0.01, 0.00);  object(0x01C2, 95, 0, 359);
moveto(429.10, -223.18, 317.24);  object(0x029F, 165, 0, 8);
move(-1.88, 0.26, 0.00);  object(0x029F, 165, 0, 8);
move(-1.49, 0.20, 0.00);  object(0x029F, 165, 0, 8);
move(0.09, -2.44, 0.00);  object(0x029F, 165, 0, 4);
move(2.59, -0.20, 0.00);  object(0x029F, 165, 0, 4);
move(-1.56, -1.88, 0.00);  object(0x029F, 165, 0, 1);
move(-1.00, 2.61, -19.60);  object(0x029F, 0, 0, 2);
move(1.50, -0.06, 0.00);  object(0x029F, 0, 0, 2);
move(1.90, -0.08, 0.00);  object(0x029F, 0, 0, 2);
move(-0.26, -2.38, 0.00);  object(0x029F, 0, 0, 355);
move(-1.79, -0.16, 0.00);  object(0x029F, 0, 0, 355);
move(-1.39, -0.12, 0.00);  object(0x029F, 0, 0, 355);
moveto(429.11, -223.26, 282.92);  object(0x1CE0, 180, 0, 4);
move(-1.80, 0.13, 0.00);  object(0x1CE0, 180, 0, 4);
move(-1.72, 0.04, 0.00);  object(0x1CE0, 180, 0, 7);
move(-0.08, -1.83, 0.00);  object(0x1CE0, 180, 0, 4);
move(1.70, -0.11, 0.00);  object(0x1CE0, 180, 0, 4);
move(1.90, -0.12, 0.00);  object(0x1CE0, 180, 0, 4);
move(-0.12, -1.86, 0.00);  object(0x1CE0, 180, 0, 4);
move(-1.90, 0.12, 0.00);  object(0x1CE0, 180, 0, 4);
move(-1.60, 0.10, 0.00);  object(0x1CE0, 180, 0, 4);
moveto(425.93, -224.39, 274.10);  object(0x029F, 0, 0, 0);
move(2.80, 0.02, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -1.69, 0.00);  object(0x029F, 0, 0, 0);
move(-2.60, -0.02, 0.00);  object(0x029F, 0, 0, 0);
move(0.02, -1.93, 0.00);  object(0x029F, 0, 0, 0);
move(2.40, 0.02, 0.00);  object(0x029F, 0, 0, 0);
move(-0.04, 4.59, -7.70);  object(0x029F, 0, 0, 0);
move(-1.20, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-1.40, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -1.19, 0.00);  object(0x029F, 0, 0, 0);
move(1.40, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(1.10, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -0.90, 0.00);  object(0x029F, 0, 0, 0);
move(-1.00, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-1.40, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -0.97, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -0.91, 0.00);  object(0x029F, 0, 0, 0);
move(1.00, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-0.01, 1.13, 0.00);  object(0x029F, 0, 0, 0);
move(1.30, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -1.00, 0.00);  object(0x029F, 0, 0, 0);
move(-3.03, 4.42, -8.30);  object(0x029F, 0, 0, 0);
move(1.00, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.70, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.90, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.90, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -0.93, 0.00);  object(0x029F, 0, 0, 0);
move(-1.00, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-1.60, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-0.80, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -1.35, 0.00);  object(0x029F, 0, 0, 0);
move(0.70, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.90, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-0.01, 1.20, 0.00);  object(0x029F, 0, 0, 0);
move(0.81, -1.38, 0.00);  object(0x029F, 0, 0, 0);
move(0.70, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -0.93, 0.00);  object(0x029F, 0, 0, 0);
move(-0.80, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-0.60, -0.00, 0.00);  object(0x029F, 0, 0, 0);
move(-0.90, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-0.70, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -1.27, 0.00);  object(0x029F, 0, 0, 0);
move(0.50, 0.00, 0.00);  object(0x029F, 0, 0, 0);
move(0.80, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.70, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.80, 0.01, 0.00);  object(0x029F, 0, 0, 0);
move(0.01, -1.06, 0.00);  object(0x029F, 0, 0, 0);
move(-1.00, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-0.40, -0.00, 0.00);  object(0x029F, 0, 0, 0);
move(-0.80, -0.01, 0.00);  object(0x029F, 0, 0, 0);
move(-0.60, -0.00, 0.00);  object(0x029F, 0, 0, 0);
moveto(427.57, -223.98, 240.64);  object(0x029F, 270, 0, 3);
move(-1.30, 0.06, 0.00);  object(0x029F, 270, 0, 3);
move(2.80, -0.13, 0.00);  object(0x029F, 270, 0, 3);
move(-0.13, -2.82, 0.00);  object(0x029F, 270, 0, 3);
move(-3.10, 0.14, 0.00);  object(0x029F, 270, 0, 3);
move(1.40, -0.06, 0.00);  object(0x029F, 270, 0, 3);
move(-0.50, 0.02, 0.00);  object(0x029F, 270, 0, 3);
move(0.04, 0.90, 0.00);  object(0x029F, 270, 0, 3);
move(0.80, -0.04, 0.00);  object(0x029F, 270, 0, 3);
move(0.98, 1.84, -18.10);  object(0x029F, 270, 0, 3);
move(-2.60, 0.12, 0.00);  object(0x029F, 270, 0, 3);
move(1.60, -0.07, 0.00);  object(0x029F, 270, 0, 3);
move(-1.40, 0.06, 0.00);  object(0x029F, 270, 0, 3);
move(-0.14, -3.00, 0.00);  object(0x029F, 270, 0, 3);
move(2.30, -0.10, 0.00);  object(0x029F, 270, 0, 3);
move(-1.30, 0.06, 0.00);  object(0x029F, 270, 0, 3);
move(1.20, -0.04, 0.00);  object(0x029F, 270, 0, 4);
move(0.60, -0.04, 0.00);  object(0x029F, 270, 0, 4);
move(-1.50, 0.11, 0.00);  object(0x029F, 270, 0, 4);
moveto(427.20, -226.09, 211.33);  object(0x1CB6, 185, 0, 6);
move(0.00, 0.00, -6.40);  object(0x1CB6, 185, 0, 6);
move(0.00, 0.00, -6.60);  object(0x1CB6, 185, 0, 6);
move(0.00, 0.00, -6.80);  object(0x1CB6, 185, 0, 6);
move(0.00, 0.00, -6.90);  object(0x1CB6, 185, 0, 6);
move(0.00, 0.00, -6.60);  object(0x1CB6, 185, 0, 6);
move(-1.29, 0.14, -4.80);  object(0x1CB6, 185, 0, 6);
move(2.29, -0.26, 0.00);  object(0x1CB6, 185, 0, 6);
move(-0.99, 0.11, 0.00);  object(0x1CB6, 185, 0, 6);
move(0.00, 0.00, -7.80);  object(0x1CB6, 185, 0, 6);
move(0.00, 0.00, -7.10);  object(0x1CB6, 185, 0, 6);
move(0.00, 0.00, -8.20);  object(0x1CB9, 185, 0, 6);
move(0.00, 0.00, -6.30);  object(0x1CB9, 185, 0, 6);
move(0.00, 0.00, -5.20);  object(0x1CB9, 185, 0, 6);
move(0.00, 0.00, -4.70);  object(0x1CB9, 185, 0, 6);
move(0.00, 0.00, -4.50);  object(0x1CB9, 185, 0, 6);
move(0.00, 0.00, -4.60);  object(0x1CB9, 185, 0, 6);
move(0.00, 0.00, -3.70);  object(0x1CCF, 185, 0, 6);
move(0.00, 0.00, -3.90);  object(0x1CCF, 185, 0, 6);
move(0.00, 0.00, -3.20);  object(0x1CCF, 185, 0, 6);
move(0.00, 0.00, -3.00);  object(0x1CCF, 185, 0, 6);
move(0.00, 0.00, -2.20);  object(0x1CCF, 185, 0, 6);
move(0.00, 0.00, -2.60);  object(0x1CCF, 185, 0, 6);
move(0.00, 0.00, -3.20);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -4.50);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -5.20);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -4.70);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -4.20);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -5.10);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -5.40);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -5.90);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -4.30);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, 6.70);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -11.30);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -3.70);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -3.50);  object(0x029F, 110, 0, 6);
move(0.00, 0.00, -3.70);  object(0x01C2, 10, 0, 6);
move(0.00, 0.00, -1.60);  object(0x01C2, 10, 0, 6);
move(0.00, 0.00, -2.10);  object(0x01C2, 10, 0, 6);
move(0.00, 0.00, -1.40);  object(0x01C2, 10, 0, 6);
move(0.00, 0.00, -1.00);  object(0x01C2, 10, 0, 6);
move(0.00, 0.00, 3.50);  object(0x01C2, 10, 0, 6);
move(0.00, 0.00, 1.50);  object(0x01C2, 10, 0, 6);
move(0.00, 0.00, -6.60);  object(0x01C2, 10, 0, 6);
move(0.00, 0.00, -2.30);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, -3.70);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, -2.10);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, 3.70);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, -2.40);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, -2.70);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, -3.40);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, -3.60);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, -4.40);  object(0x01C1, 10, 0, 6);
move(0.00, 0.00, -4.70);  object(0x01C1, 10, 0, 6);
move(-0.03, 0.69, -4.80);  object(0x01C1, 10, 0, 5);
move(4.15, -6.92, -4.50);  object(0x01C1, 10, 0, 113);
moveto(427.18, -229.22, 350.28);  object(0x1CB2, 270, 0, 87);
move(-0.41, 6.89, 0.00);  object(0x1CB2, 270, 0, 87);
move(0.41, -6.79, -14.20);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -8.80);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -11.30);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -8.30);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -7.20);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.70);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.00);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -14.40);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.20);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -12.10);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -14.40);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -12.60);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.90);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.80);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.10);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.90);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.50);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -14.20);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -14.10);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -14.00);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.90);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -13.60);  object(0x1CB2, 270, 0, 87);
move(0.00, 0.00, -8.70);  object(0x1CB2, 270, 0, 87);
move(0.58, 0.34, -14.30);  object(0x1CB2, 270, 270, 87);
teleport(430.43, -225.97, 365.84)

#cheat Pop open Everything v2
//ID: 19852
//Score: 11
//Author: Xsjado
//Category: Vehicle
//Description: press circle and up to pop the hood
//press circle and down to pop the boot
//press circle and right to open the right door 
//press circle and left to open left door
//press R and up to lock hood in position
//press R and down to lock boot in position
//press R and right to lock right door position
//press R and left to lock left door position
//Image: none
//Time: 29/06/2007 16:32:01
//Working: Unknown
setshort(0x08e90bd8, 1, 'C', 'i', 'r', 'c', 'l', 'e', ' ', 'a', 'n', 'd', ' ', 'r', 'i', 'g', 'h', 't', ' ', 't', 'o', ' ', 'o', 'p', 'e', 'n', ' ', 'r', 'i', 'g', 'h', 't', ' ', 'd', 'o', 'o', 'r', ', ', ' ', 'c', 'i', 'r', 'c', 'l', 'e', ' ', 'a', 'n', 'd', ' ', 'u', 'p', ' ', 't', 'o', ' ', 'p', 'o', 'p', ' ', 't', 'h', 'e', ' ', 'h', 'o', 'o', 'd', ' ', 'a', 'n', 'd', ' ', 's', 'o', ' ', 'o', 'n', '.', '.', '.', ' ', 'R', ' ', 'a', 'n', 'd', ' ', 'r', 'i', 'g', 'h', 't', ' ', 't', 'o', ' ', 'l', 'o', 'c', 'k', ' ', 'r', 'i', 'g', 'h', 't', ' ', 'd', 'o', 'o', 'r', ' ', 'i', 'n', ' ', 'p', 'o', 's', 'i', 't', 'i', 'o', 'n', ', ', ' ', 'R', ' ', 'a', 'n', 'd', ' ', 'u', 'p', ' ', 't', 'o', ' ', 'l', 'o', 'c', 'k', ' ', 'h', 'o', 'o', 'd', ' ', 'i', 'n', ' ', 'p', 'o', 's', 'i', 't', 'i', 'o', 'n', ' ', 'a', 'n', 'd', ' ', 's', 'o', ' ', 'o', 'n', '.', '.', '.', 0); 
if (buttons & CTRL_CIRCLE && buttons & CTRL_UP)
setchar(pcar + 0x000003BA, 2);
if (buttons & CTRL_CIRCLE && buttons & CTRL_DOWN)
setchar(pcar + 0x000003BB, 2);
if (buttons & CTRL_CIRCLE && buttons & CTRL_RIGHT)
setchar(pcar + 0x000003BD, 2);
if (buttons & CTRL_CIRCLE && buttons & CTRL_LEFT)
setchar(pcar + 0x000003BC, 2);
if (buttons & CTRL_RTRIGGER && buttons & CTRL_UP)
setchar(pcar + 0x000003BA, 0);
if (buttons & CTRL_RTRIGGER && buttons & CTRL_DOWN)
setchar(pcar + 0x000003BB, 0);
if (buttons & CTRL_RTRIGGER && buttons & CTRL_RIGHT)
setchar(pcar + 0x000003BD, 0);
if (buttons & CTRL_RTRIGGER && buttons & CTRL_LEFT)
setchar(pcar + 0x000003BC, 0);
#off
setchar(pcar + 0x000003BC, 0);
setchar(pcar + 0x000003BD, 0);
setchar(pcar + 0x000003BB, 0);
setchar(pcar + 0x000003BA, 0);

#cheat First Person View in Car v2
//ID: 19850
//Score: 7
//Author: Xsjado
//Category: Vehicle
//Description: it works well for the moment but still needs a bit of work on it. none of the car cheats like rocket boost and other stuff dont work for the moment. i noticed there was a fair few people that wanted this, enjoy 
//notes: doesnt work with motobikes, also turn on when you have entered the car or you will freeze 
//
//thanks to M_Roc for an address i needed
//Image: none
//Time: 29/06/2007 15:51:08
//Working: Unknown
setchar(pplayer + 0x000008B4, 61);
setchar(pplayer+0x4C,   0x10,   0x20);
#off 
setchar(pplayer+0x4C,   0x00,   0x00); 
setchar(pplayer + 0x000008B4, 55);

#cheat Monster Bus
//ID: 19848
//Score: 3
//Author: firemace
//Category: Vehicle
//Description: Gives the Coach bus HUGE wheels! Line up a ton of cars and run them over like a monster truck!
//
//EDITED BY: psphacker108 on 30/06/07 01:45:33
//Image: none
//Time: 29/06/2007 15:43:12
//Working: Yes
setfloat(0x9369178, 1.2);

#cheat Teleport Last Entered Car to You (Down)
//ID: 19523
//Score: 7
//Author: Durka Durka Mahn
//Category: Vehicle
//Description: Whilst on, the last entered car you were in will be teleported to you when you hit down. Please note that the cheat must be on before you get out of the last entered vehicle
//Image: none
//Time: 11/04/2007 00:45:32
//Working: Yes
if(pcar) {
old = pcar; }
if(press & CTRL_DOWN&&!pcar) {
setfloat(old + 0x30,    getfloat(pplayer + 0x30) + getfloat(pplayer + 0x10) *  5.0); 
setfloat(old + 0x34,    getfloat(pplayer + 0x34) + getfloat(pplayer + 0x14) *  5.0); 
setfloat(old + 0x38,    getfloat(pplayer + 0x38) + 1.0); 
}


#cheat Red car neons
R = 255;
G = 0;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Green car neons
R = 0;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Blue car neons
R = 0;
G = 0;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat White car neons
R = 255;
G = 255;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Purple car neons
R = 80;
G = 0;
B = 80;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Turquoise car neons
R = 0;
G = 255;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Yellow car neons
R = 255;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Orange car neons
R = 255;
G = 80;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Lime Green car neons
R = 80;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Pink car neons
R = 255;
G = 0;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Hot Pink car neons
R = 255;
G = 0;
B = 80;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Sky Blue car neons
R = 0;
G = 175;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Red bike neons
R = 255;
G = 0;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Green bike neons
R = 0;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Blue bike neons
R = 0;
G = 0;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat White bike neons
R = 255;
G = 255;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();


#cheat Purple bike neons
R = 80;
G = 0;
B = 80;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Turquoise bike neons
R = 0;
G = 255;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Yellow bike neons
R = 255;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Orange bike neons
R = 255;
G = 80;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Lime Green bike neons
R = 80;
G = 255;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Pink bike neons
R = 255;
G = 0;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Hot Pink bike neons
R = 255;
G = 0;
B = 80;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Sky Blue bike neons
R = 0;
G = 175;
B = 255;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat car neons
R = 174;
G = 225;
B = 157;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Red car neons
//by vettefan
static done;
R = 255;
G = 0;
B = 0;
if(!done)
{
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
done = 1;
}
#off
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, 0, 0, 0);}
done = 0;

#cheat Black car neons
R = 0;
G = 0;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Black bike neons
R = 0;
G = 0;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Light/Dark Blue car neons
R = 115;
G = 206;
B = 197;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Light/Dark bike neons
R = 115;
G = 206;
B = 197;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Vice City Pink car neons
R = 232;
G = 89;
B = 218;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Vice City Pink bike neons
R = 232;
G = 89;
B = 218;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Dark Blue car neons
R = 3;
G = 15;
B = 165;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}
off();

#cheat Dark Blue bike neons
R = 3;
G = 15;
B = 165;
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, R, G, B);}
off();

#cheat Weather Modifier
static fInit;
if (!fInit)
{
fInit = true;
weather = 0;
}
if (press & CTRL_DOWN && (getchar(0x8bb3df8) != 0))
{weather = weather - 1;}
if (press & CTRL_UP && (getchar(0x8bb3df8) != 255))
{weather = weather + 1;}
setchar(0x8bb3e00,  weather);
setchar(0x8bb3df8,  weather);
setchar(0x8bb458c,  weather);

#cheat Parachute
static Active;
if(getchar(pplayer+0x1c9)==0x10) {//In air?
if(!Active) setshort(0x08e90bd8,   1,  'P',  'r',  'e',  's',  's',  ' ',  'O',  ' ',  't',  'o',  ' ',  'u',  's',  'e',  ' ',  'p',  'a',  'r',  'a',  'c',  'h',  'u',  't',  'e',  '!',  0);
if(Active) setshort(0x08e90bd8,   1,  'P',  'r',  'e',  's',  's',  ' ',  '/',  '\\',  ' ',  't',  'o',  ' ',  'r',  'e',  'l',  'e ',  'a',  's',  'e',  ' ',  'c',  'h',  'u',  't',  'e',  '!',  0);
if(buttons & CTRL_CIRCLE) Active = true;
if(buttons & CTRL_TRIANGLE) Active = false;
if(Active) setfloat(pplayer+0x148,  getfloat(pplayer+0x148)*0.9);  
//Give Some Control
if(Active) {
if(ystick < -0.5) {
     setfloat(pplayer+0x140,  getfloat(pplayer+0x10)*0.2);
     setfloat(pplayer+0x144,  getfloat(pplayer+0x14)*0.2);
     } else setfloat(pplayer+0x140,  getfloat(pplayer+0x140)*0.99,  getfloat(pplayer+0x144)*0.99);
setfloat(pplayer + 0x0078,  -0.01 * xstick);
}
} else Active = false;

#cheat Stunt Man (updated)
static score;
static jumping;
static time;
if(getchar(pplayer+0x1c9) & 0x10)
{
   jumping = true;
   if(xstick)
   {
   setfloat(pplayer+0x78,  -xstick / 2);
   score += sqrt(xstick*xstick) * 40;
   }
   if(ystick)
   {
   setfloat(pplayer+0x70,  ystick * getfloat(pplayer) / 2);
   setfloat(pplayer+0x74,  ystick * getfloat(pplayer+4) / 2);
   score += sqrt(ystick*ystick) * 50;      
   }
} else if(jumping) {
       
jumping = 0;    
setfloat(pplayer+0x70,  0,  0,  0);  
time = 40;
setint(0x08bde55c,  getint(0x08bde55c)+score);
rand = (getint(pplayer) + getint(0x08bb3b40)) % 3;

}
else if(time > 0 && score) {
      time--;
      int = int(score);
      if(rand == 0) setshort(0x08e90bd8,  1,  ' ',  'W',  'o',  'w' ,  ',  ',  ' ',  'y',  'o',  'u',  ' ',  'g',  'o',  't',  ' ');
      else if(rand == 1) setshort(0x08e90bd8,  1,  ' ',  ' ',  'S',  'i',  'c' ,  'k',  ' ',  's',  't',  'u',  'n',  't',  '!',  ' ');  
      else setshort(0x08e90bd8,  1,  'N',  'i',  'c' ,  'e',  ' ',  'f',  'l',  'i',  'p',  ' ',  'm',  'a',  'n',  ' ');
      size = 0;
      for(i = 1; i < int; i*=10) size+=2;
      for(i = 0; int > 0; i+=2 ) {
      setshort(0x08e90bf4+size-i,  '0' + (int % 10));
      int = int(int/=10);
      }
      if(rand == 0) setshort(0x08e90bf4+i,  ' ',  'p',  'o',  'i',  'n',  't',  's',  '!',  ' ',  ':',  ')',  0);
      else if(rand == 1) setshort(0x08e90bf4+i,  ' ',  '$',  ' ',  'f',  'o',  'r',  ' ',  'y',  'o',  'u',  '!',  0);
      else setshort(0x08e90bf4+i,  ' ',  'p',  'o',  'i',  'n',  't',  's',  '.',  0);
      }
else time = score = 0;

#cheat Nitrous Oxide v.2
if(buttons & CTRL_CIRCLE && !(buttons & CTRL_LTRIGGER)) {
//calculate speed
speed = sqrt(getfloat(pcar + 0x140) * getfloat(pcar + 0x140) + getfloat(pcar + 0x144) * getfloat(pcar + 0x144));

//if speed is lower than max speed for NOS accelerate
if(speed<1.8) {
setfloat(pcar+0x140,  getfloat(pcar+0x140)-getfloat(pcar+0x4)*0.005);
setfloat(pcar+0x144,  getfloat(pcar+0x144)+getfloat(pcar)*0.005);
}
}

//Power Brake if vehicle is on ground
if(buttons & CTRL_SQUARE && getshort(pcar+0x1c8)==0) setfloat(pcar+0x140,  0,  0);

#cheat monster Caddy
//By: Dudek13l or Dudek12l
setint(0x8C73B30, 184); //Car Id
setchar(0x8C73B30+0x24, 0, 80, 255, 255); //Color 1
setchar(0x8C73B30+0x28, 0, 80, 255, 255); //Color 2
setfloat(0x9360658, 1.5, 1.5); //wheel size
setfloat(0x962f3e0+0x6c, 0.75); //Traction multiplier
setfloat(0x962f3e0+0xc4, 0.85); //Traction loss
setfloat(0x962f3e0+0x70, 0.5); //Traction bias
setchar(0x962f3e0+0x5c, 'R', 'P', 6); // Drive type / Engine type / Gears
setfloat(0x962f3e0+0x7c, 0.47); //Suspension Upper limit
setfloat(0x962f3e0+0x80, -1); //Suspension lower limit
setfloat(0x962f3e0+0x78, 0.4); //Suspension Damping level
setfloat(0x962f3e0+0x74, 4); //Suspension force level
setfloat(0x962f3e0+0x84, 0.5); //Suspension Bias
setfloat(0x962f3e0+0x88, 0.3); //Anti-dive Multiplier
setfloat(0x962f3e0+0x68, 30); //Steering Lock
setfloat(0x962f3e0+0xbc, 1500); //Vehilce Mass
setfloat(0x962f3e0+0xc0, 1500); //Turn Mass
setfloat(0x962f3e0+0xa0, 0); //Centre of Mass - X
setfloat(0x962f3e0+0xa4, 0); //Centre of Mass - Y
setfloat(0x962f3e0+0xa8, -1.5); //Centre of Mass - Z
setchar(0x09569B94, 0, 80, 255); // Exhuast
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,  0, 80, 255);}
teleport( 268.31, -174.98, 11.50);
off()

#cheat ???? Pcj 600
//By: Dudek13l or Dudek12l
//im not sure about this one
setint(0x8C73B30, 212); //Car Id
setchar(0x8C73B30+0x24, 255, 255, 255, 255); //Color 1
setchar(0x8C73B30+0x28, 0, 80, 255, 255); //Color 2
setfloat(0x9630c60+0x6c, 0.75); //Traction multiplier
setfloat(0x9630c60+0xc4, 0.85); //Traction loss
setfloat(0x9630c60+0x70, 0.5); //Traction bias
setchar(0x9630c60+0x5c, 'R', 'P', 6); // Drive type / Engine type / Gears
setfloat(0x9630c60+0x7c, 0.47); //Suspension Upper limit
setfloat(0x9630c60+0x80, -1); //Suspension lower limit
setfloat(0x9630c60+0x78, 0.4); //Suspension Damping level
setfloat(0x9630c60+0x74, 4); //Suspension force level
setfloat(0x9630c60+0x84, 0.5); //Suspension Bias
setfloat(0x9630c60+0x88, 0.3); //Anti-dive Multiplier
setfloat(0x9630c60+0x68, 30); //Steering Lock
setfloat(0x9630c60+0xbc, 1500); //Vehilce Mass
setfloat(0x9630c60+0xc0, 1500); //Turn Mass
setfloat(0x9630c60+0xa0, 0); //Centre of Mass - X
setfloat(0x9630c60+0xa4, 0); //Centre of Mass - Y
setfloat(0x9630c60+0xa8, -1.5); //Centre of Mass - Z
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon, 150, 150, 150);}
setchar(0x9569c90,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x80,  0x3f,  0x00,  0x00,  0x00,  0x00,  0xff,  0x20,  0x00);
setchar(0x09569B94, 255, 80, 0);
teleport( 268.31, -174.98, 11.50);
off()

#cheat Hot Rod O for boost at hotel place
//By: Dudek13l or Dudek12l
setint(0x8C73B30, 267 ); //Car Id
setchar(0x8C73B30+0x24, 0, 0, 90, 255); //Color 1
setchar(0x8C73B30+0x28, 90, 0, 0, 255); //Color 2
setshort(0x98a3450, 1, 'H','o','t',' ','R','o','d', 0);
setfloat(0x936E038, 1.2, 1.2); //wheel size
setfloat(0x9633d20+0x6c, 0.85); //Traction multiplier
setfloat(0x9633d20+0xc4, 0.75); //Traction loss
setfloat(0x9633d20+0x70, 0.5); //Traction bias
setchar(0x9633d20+0x5c, 'R', 'D', 6); // Drive type / Engine type / Gears
setfloat(0x9633d20+0x7c, 0.47); //Suspension Upper limit
setfloat(0x9633d20+0x80, -0.3); //Suspension lower limit
setfloat(0x9633d20+0x78, 3); //Suspension Damping level
setfloat(0x9633d20+0x74, 2); //Suspension force level
setfloat(0x9633d20+0x84, 0.6); //Suspension Bias
setfloat(0x9633d20+0x88, 0.3); //Anti-dive Multiplier
setfloat(0x9633d20+0x68, 30); //Steering Lock
setfloat(0x9633d20+0xbc, 1500); //Vehilce Mass
setfloat(0x9633d20+0xc0, 1500); //Turn Mass
setfloat(0x9633d20+0xa0, 0); //Centre of Mass - X
setfloat(0x9633d20+0xa4, -0.4); //Centre of Mass - Y
setfloat(0x9633d20+0xa8, -1.0); //Centre of Mass - Z
setchar(0x09569B94, 255, 80, 0); // Exhuast
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,  0, 0, 0255);}
//Fire Burn Out Smoke
setchar(0x9569c90,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x80,  0x3f,  0x00,  0x00,  0x00,  0x00,  0xff,  0x20,  0x00);
// Nos to vcs 2
static On;
static going;
if(buttons & CTRL_CIRCLE &&!On) {
 On = 1;
}
if(On) {
static timepassed;
static init;
if(!init)
{
 lasttime = getchar( 0x08bb3b41 );
 init = 1;
}
if( lasttime != getchar( 0x08bb3b41 ) )
{
 timepassed++;
 lasttime = getchar( 0x08bb3b41 );
}
if( timepassed < 30 )
{
  going = 1;
}
else {
On = 0;
timepassed = 0;
going = 0;
}
}
if(going) {
 setchar(0x09569B90,   0x10);
 setchar(0x09569B94,   255,   80,   0);
 speed = 0.7;                                                                                  
 thrust = speed * 0.00344;      
 if(buttons & CTRL_CROSS) {                            
    setfloat(pcar + 0x0140,   getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);          
    setfloat(pcar + 0x0144,   getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust);
 }
}
else
{
 setchar(0x09569B90,   0x4);
 setchar(0x09569B94,  255,   80,   0);
}


#cheat Racing Cheetah O for boost
//By: Dudek13l or Dudek12l
//For cars
setint(0x8C73B30, 172); //Car Id
setchar(0x8C73B30+0x24, 150, 0, 150, 255); //Color 1
setchar(0x8C73B30+0x28, 0, 0, 0, 255); //Color 2
setfloat(0x935E6D8, 1.3, 1.3); //wheel size
setfloat(0x962ea40+0x6c, 0.85); //Traction multiplier
setfloat(0x962ea40+0xc4, 0.75); //Traction loss
setfloat(0x962ea40+0x70, 0.5); //Traction bias
setchar(0x962ea40+0x5c, 'R', 'P', 6); // Drive type / Engine type / Gears
setfloat(0x962ea40+0x7c, 0.35); //Suspension Upper limit
setfloat(0x962ea40+0x80, -3); //Suspension lower limit
setfloat(0x962ea40+0x78, 3); //Suspension Damping level
setfloat(0x962ea40+0x74, 2); //Suspension force level
setfloat(0x962ea40+0x84, 0.6); //Suspension Bias
setfloat(0x962ea40+0x88, 0.3); //Anti-dive Multiplier
setfloat(0x962ea40+0x68, 30); //Steering Lock
setfloat(0x962ea40+0xbc, 1500); //Vehilce Mass
setfloat(0x962ea40+0xc0, 1500); //Turn Mass
setfloat(0x962ea40+0xa0, 0); //Centre of Mass - X
setfloat(0x962ea40+0xa4, 0); //Centre of Mass - Y
setfloat(0x962ea40+0xa8, 1.0); //Centre of Mass - Z
setchar(0x09569B94, 255, 80, 0); // Exhuast
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,  255, 0, 0);}
//Fire Burn Out Smoke
setchar(0x9569c90,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x80,  0x3f,  0x00,  0x00,  0x00,  0x00,  0xff,  0x20,  0x00);
// Nos to vcs 2
static On;
static going;
if(buttons & CTRL_CIRCLE &&!On) {
 On = 1;
}
if(On) {
static timepassed;
static init;
if(!init)
{
 lasttime = getchar( 0x08bb3b41 );
 init = 1;
}
if( lasttime != getchar( 0x08bb3b41 ) )
{
 timepassed++;
 lasttime = getchar( 0x08bb3b41 );
}
if( timepassed < 30 )
{
  going = 1;
}
else {
On = 0;
timepassed = 0;
going = 0;
}
}
if(going) {
 setchar(0x09569B90,   0x10);
 setchar(0x09569B94,   255,   80,   0);
 speed = 0.7;                                                                                  
 thrust = speed * 0.00344;      
 if(buttons & CTRL_CROSS) {                            
    setfloat(pcar + 0x0140,   getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);          
    setfloat(pcar + 0x0144,   getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust);
 }
}
else
{
 setchar(0x09569B90,   0x4);
 setchar(0x09569B94,  255,   80,   0);
}


#cheat hummer
//By: Dudek13l or Dudek12l
setint(0x8C73B30, 267 ); //Car Id
setchar(0x8C73B30+0x24, 0, 0, 90, 255); //Color 1
setchar(0x8C73B30+0x28, 90, 0, 0, 255); //Color 2
setfloat(0x93647F8, 1.5, 1.5); //wheel size
setfloat(0x96309c0+0x6c, 0.85); //Traction multiplier
setfloat(0x96309c0+0xc4, 0.75); //Traction loss
setfloat(0x96309c0+0x70, 0.5); //Traction bias
setchar(0x96309c0+0x5c, 'R', 'D', 6); // Drive type / Engine type / Gears
setfloat(0x96309c0+0x7c, 0.47); //Suspension Upper limit
setfloat(0x96309c0+0x80, -0.4); //Suspension lower limit
setfloat(0x96309c0+0x78, 3); //Suspension Damping level
setfloat(0x96309c0+0x74, 4); //Suspension force level
setfloat(0x96309c0+0x84, 0.6); //Suspension Bias
setfloat(0x96309c0+0x88, 0.3); //Anti-dive Multiplier
setfloat(0x96309c0+0x68, 30); //Steering Lock
setfloat(0x96309c0+0xbc, 1500); //Vehilce Mass
setfloat(0x96309c0+0xc0, 1500); //Turn Mass
setfloat(0x96309c0+0xa0, 0); //Centre of Mass - X
setfloat(0x96309c0+0xa4, -0.4); //Centre of Mass - Y
setfloat(0x96309c0+0xa8, -1.5); //Centre of Mass - Z
setchar(0x09569B94, 255, 80, 0); // Exhuast
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,  0, 0, 0255);}
teleport( 268.31, -174.98, 11.50);
off()

#cheat cool Bulldozer
//By: Dudek13l or Dudek12l
setint(0x8C73B30, 181); //Car Id
setchar(0x8C73B30+0x24, 0, 80, 80, 255); //Color 1
setchar(0x8C73B30+0x28, 80, 0, 80, 255); //Color 2
setfloat(0x935FE78, 1.3, 1.3); //wheel size
setfloat(0x962ef80+0x6c, 0.85); //Traction multiplier
setfloat(0x962ef80+0xc4, 0.75); //Traction loss
setfloat(0x962ef80+0x70, 0.5); //Traction bias
setchar(0x962ef80+0x5c, 'R', 'E', 6); // Drive type / Engine type / Gears
setfloat(0x962ef80+0x7c, 0.47); //Suspension Upper limit
setfloat(0x962ef80+0x80, -0.4); //Suspension lower limit
setfloat(0x962ef80+0x78, 3); //Suspension Damping level
setfloat(0x962ef80+0x74, 4); //Suspension force level
setfloat(0x962ef80+0x84, 0.6); //Suspension Bias
setfloat(0x962ef80+0x88, 0.3); //Anti-dive Multiplier
setfloat(0x962ef80+0x68, 30); //Steering Lock
setfloat(0x962ef80+0xbc, 1500); //Vehilce Mass
setfloat(0x962ef80+0xc0, 1500); //Turn Mass
setfloat(0x962ef80+0xa0, 0); //Centre of Mass - X
setfloat(0x962ef80+0xa4, 0); //Centre of Mass - Y
setfloat(0x962ef80+0xa8, -1.5); //Centre of Mass - Z
setchar(0x09569B94, 255, 80, 0); // Exhuast
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,  0, 80, 80);}
teleport( 268.31, -174.98, 11.50);
off()


#cheat PCJ 600 press right, left ,up
//By: Dudek13l or Dudek12l
setint(0x8C73B30, 212); //Car Id
setchar(0x8C73B30+0x24, 255, 255, 255, 255); //Color 1
setchar(0x8C73B30+0x28, 0, 0, 0, 255); //Color 2
setfloat(0x9630c60+0x6c, 0.85); //Traction multiplier
setfloat(0x9630c60+0xc4, 0.75); //Traction loss
setfloat(0x9630c60+0x70, 0.5); //Traction bias
setchar(0x9630c60+0x5c, 'R', 'P', 6); // Drive type / Engine type / Gears
setfloat(0x9630c60+0x7c, 0.35); //Suspension Upper limit
setfloat(0x9630c60+0x80, -0.15); //Suspension lower limit
setfloat(0x9630c60+0x78, 0.4); //Suspension Damping level
setfloat(0x9630c60+0x74, 4); //Suspension force level
setfloat(0x9630c60+0x84, 0.5); //Suspension Bias
setfloat(0x9630c60+0x88, 0.3); //Anti-dive Multiplier
setfloat(0x9630c60+0x68, 30); //Steering Lock
setfloat(0x9630c60+0xbc, 3000); //Vehilce Mass
setfloat(0x9630c60+0xc0, 1500); //Turn Mass
setfloat(0x9630c60+0xa0, 0); //Centre of Mass - X
setfloat(0x9630c60+0xa4, -.2); //Centre of Mass - Y
setfloat(0x9630c60+0xa8, 0); //Centre of Mass - Z
setchar(0x09569B94, 255, 80, 0); // Exhuast
for(neon=0;neon<16;neon++)
{setchar(0x097272d0+4*neon,  255, 0, 0);}
//Change Car colors right, left, up
//Right=blue
//Left=Green
//Up=Red
if (buttons & CTRL_RIGHT)
{
//blue
setchar(pcar+0x224, 0, 0, 255);
setchar(pcar+0x228, 0, 0, 0);
}
if (buttons & CTRL_LEFT)
{
//green
setchar(pcar+0x224, 0, 255, 0);
setchar(pcar+0x228, 0, 0, 0);
}
if (buttons & CTRL_UP)
{
//red
setchar(pcar+0x224, 255, 0, 0);
setchar(pcar+0x228, 0, 0, 0);
}


#cheat awesome Bf injection
//By: Dudek13l or Dudek12l
//For cars
setint(0x8C73B30, 255); //Car Id
setchar(0x8C73B30+0x24, 255, 0, 0, 255); //Color 1
setchar(0x8C73B30+0x28, 0, 0, 0, 255); //Color 2
setfloat(0x936C0B8, 1.7, 1.7); //wheel size
setfloat(0x96333c0+0x6c, 0.85); //Traction multiplier
setfloat(0x96333c0+0xc4, 0.75); //Traction loss
setfloat(0x96333c0+0x70, 0.5); //Traction bias
setchar(0x96333c0+0x5c, 'R', 'P', 6); // Drive type / Engine type / Gears
setfloat(0x96333c0+0x7c, 0.47); //Suspension Upper limit
setfloat(0x96333c0+0x80, -1); //Suspension lower limit
setfloat(0x96333c0+0x78, 0.4); //Suspension Damping level
setfloat(0x96333c0+0x74, 4); //Suspension force level
setfloat(0x96333c0+0x84, 0.5); //Suspension Bias
setfloat(0x96333c0+0x88, 0.3); //Anti-dive Multiplier
setfloat(0x96333c0+0x68, 30); //Steering Lock
setfloat(0x96333c0+0xbc, 1500); //Vehilce Mass
setfloat(0x96333c0+0xc0, 1500); //Turn Mass
setfloat(0x96333c0+0xa0, 0); //Centre of Mass - X
setfloat(0x96333c0+0xa4, 0); //Centre of Mass - Y
setfloat(0x96333c0+0xa8, 0); //Centre of Mass - Z
setchar(0x09569B94, 255, 80, 0); // Exhuast
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,  255, 0, 0);}

#cheat Ganster sabre
//Dudek13l or Dudek12l
//For cars
setint(0x8C73B30, 265); //Car Id
setchar(0x8C73B30+0x24, 255, 0, 0, 255); //Color 1
setchar(0x8C73B30+0x28, 255, 80, 0, 255); //Color 2
setfloat(0x936DAF8, 1.7, 1.7); //wheel size
setfloat(0x9633880+0x6c, 0.85); //Traction multiplier
setfloat(0x9633880+0xc4, 0.75); //Traction loss
setfloat(0x9633880+0x70, 0.5); //Traction bias
setchar(0x9633880+0x5c, 'R', 'P', 6); // Drive type / Engine type / Gears
setfloat(0x9633880+0x7c, 0.47); //Suspension Upper limit
setfloat(0x9633880+0x80, -1); //Suspension lower limit
setfloat(0x9633880+0x78, 0.4); //Suspension Damping level
setfloat(0x9633880+0x74, 4); //Suspension force level
setfloat(0x9633880+0x84, 0.5); //Suspension Bias
setfloat(0x9633880+0x88, 0.3); //Anti-dive Multiplier
setfloat(0x9633880+0x68, 30); //Steering Lock
setfloat(0x9633880+0xbc, 1500); //Vehilce Mass
setfloat(0x9633880+0xc0, 1500); //Turn Mass
setfloat(0x9633880+0xa0, 0); //Centre of Mass - X
setfloat(0x9633880+0xa4, 0); //Centre of Mass - Y
setfloat(0x9633880+0xa8, -1); //Centre of Mass - Z
setchar(0x09569B94, 255, 80, 0); // Exhuast
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,  255, 0, 0);}
teleport( 268.31, -174.98, 11.50);
off()

#cheat monsta
//By: Dudek13l or Dudek12l
//For cars
setint(0x8C73B30, 276); //Car Id
setchar(0x8C73B30+0x24, 0, 0, 255, 255); //Color 1
setchar(0x8C73B30+0x28, 0, 0, 0, 255); //Color 2
setshort(0x98a33c8, 1, 'M,'o','n','s','t','a', 0);
setfloat(0x936F7D8, 1.7, 1.7); //wheel size
setfloat(0x9634800+0x6c, 0.85); //Traction multiplier
setfloat(0x9634800+0xc4, 0.75); //Traction loss
setfloat(0x9634800+0x70, 0.5); //Traction bias
setchar(0x9634800+0x5c, 'R', 'P', 6); // Drive type / Engine type / Gears
setfloat(0x9634800+0x7c, 0.47; //Suspension Upper limit
setfloat(0x9634800+0x80, -1); //Suspension lower limit
setfloat(0x9634800+0x78, 0.4); //Suspension Damping level
setfloat(0x9634800+0x74, 4); //Suspension force level
setfloat(0x9634800+0x84, 0.6); //Suspension Bias
setfloat(0x9634800+0x88, 0.3); //Anti-dive Multiplier
setfloat(0x9634800+0x68, 30); //Steering Lock
setfloat(0x9634800+0xbc, 1500); //Vehilce Mass
setfloat(0x9634800+0xc0, 1500); //Turn Mass
setfloat(0x9634800+0xa0, 0); //Centre of Mass - X
setfloat(0x9634800+0xa4, 0); //Centre of Mass - Y
setfloat(0x9634800+0xa8, 1.0); //Centre of Mass - Z
setchar(0x09569B94, 255, 80, 0); // Exhuast
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,  255, 0, 0);}
//Fire Burn Out Smoke
setchar(0x9569c90,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x80,  0x3f,  0x00,  0x00,  0x00,  0x00,  0xff,  0x20,  0x00);
// Nos to vcs 2
static On;
static going;
if(buttons & CTRL_CIRCLE &&!On) {
 On = 1;
}
if(On) {
static timepassed;
static init;
if(!init)
{
 lasttime = getchar( 0x08bb3b41 );
 init = 1;
}
if( lasttime != getchar( 0x08bb3b41 ) )
{
 timepassed++;
 lasttime = getchar( 0x08bb3b41 );
}
if( timepassed < 30 )
{
  going = 1;
}
else {
On = 0;
timepassed = 0;
going = 0;
}
}
if(going) {
 setchar(0x09569B90,   0x10);
 setchar(0x09569B94,   255,   80,   0);
 speed = 0.7;                                                                                  
 thrust = speed * 0.00344;      
 if(buttons & CTRL_CROSS) {                            
    setfloat(pcar + 0x0140,   getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);          
    setfloat(pcar + 0x0144,   getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust);
 }
}
else
{
 setchar(0x09569B90,   0x4);
 setchar(0x09569B94,  255,   80,   0);
}


#cheat TEST
//By: Dudek13l or Dudek12l
//For cars
setint(0x8C73B30, 276); //Car Id
setchar(0x8C73B30+0x24, 255, 0, 255, 255); //Color 1
setchar(0x8C73B30+0x28, 0, 0, 0, 255); //Color 2
setshort(0x98a33c8, 1, 'T,'E','S','T', 0);
setfloat(0x936F7D8, 1.7, 1.7); //wheel size
setfloat(0x9634800+0x6c, 0.85); //Traction multiplier
setfloat(0x9634800+0xc4, 0.75); //Traction loss
setfloat(0x9634800+0x70, 0.5); //Traction bias
setchar(0x9634800+0x5c, 'R', 'P', 6); // Drive type / Engine type / Gears
setfloat(0x9634800+0x7c, 0.47; //Suspension Upper limit
setfloat(0x9634800+0x80, -1); //Suspension lower limit
setfloat(0x9634800+0x78, 0.4); //Suspension Damping level
setfloat(0x9634800+0x74, 4); //Suspension force level
setfloat(0x9634800+0x84, 0.6); //Suspension Bias
setfloat(0x9634800+0x88, 0.3); //Anti-dive Multiplier
setfloat(0x9634800+0x68, 30); //Steering Lock
setfloat(0x9634800+0xbc, 1500); //Vehilce Mass
setfloat(0x9634800+0xc0, 1500); //Turn Mass
setfloat(0x9634800+0xa0, 0); //Centre of Mass - X
setfloat(0x9634800+0xa4, 0); //Centre of Mass - Y
setfloat(0x9634800+0xa8, 1.0); //Centre of Mass - Z
setchar(0x09569B94, 255, 80, 0); // Exhuast
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,  255, 0, 0);}
//Fire Burn Out Smoke
setchar(0x9569c90,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x80,  0x3f,  0x00,  0x00,  0x00,  0x00,  0xff,  0x20,  0x00);
// Nos to vcs 2
static On;
static going;
if(buttons & CTRL_CIRCLE &&!On) {
 On = 1;
}
if(On) {
static timepassed;
static init;
if(!init)
{
 lasttime = getchar( 0x08bb3b41 );
 init = 1;
}
if( lasttime != getchar( 0x08bb3b41 ) )
{
 timepassed++;
 lasttime = getchar( 0x08bb3b41 );
}
if( timepassed < 30 )
{
  going = 1;
}
else {
On = 0;
timepassed = 0;
going = 0;
}
}
if(going) {
 setchar(0x09569B90,   0x20);
 setchar(0x09569B94,   255,   80,   0);
 speed = 1.0;                                                                                  
 thrust = speed * 0.00344;      
 if(buttons & CTRL_CROSS) {                            
    setfloat(pcar + 0x0140,   getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);          
    setfloat(pcar + 0x0144,   getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust);
 }
}
else
{
 setchar(0x09569B90,   0x10);
 setchar(0x09569B94,  255,   80,   0);
} 

#cheat Monster Sandking at The Clymenus Suite
//Author:buzbegone
//Helped with the suspension by Vette
//Any problems, PM me
//Basics
setint(0x8C73B30, 245); //Car Id
setchar(0x8C73B30+0x24, 255,255,255, 255); //Color 1
setchar(0x8C73B30+0x28, 0,0,255, 255); //Color2
setshort(0x98a2fb2, 1, 'M','o','n','s','t','e','r',' ','S','a','n','d','k','i','n','g', 0);
//Wheels
setfloat(0x936A678, 1.38, 1.38); //wheel size
setfloat(0x96329e0+0x6c, 0.75); //Traction Multiplier
setfloat(0x96329e0+0xc4, 0.85); //Traction Loss
setfloat(0x96329e0+0x70, 0.5); //Traction Bias
//Engine
setchar(0x96329e0+0x5c, '4', 'P', 3); // Drive type / Engine type / Gears
//Suspension
setfloat(0x96329e0+0x7c, 0.42); //Suspension Upper Limit
setfloat(0x96329e0+0x80, -0.65); //Suspension Lower Limit
setfloat(0x96329e0+0x78, 0.08); //Suspension Damping Level
setfloat(0x96329e0+0x74, 1.19); //Suspension Force Level
setfloat(0x96329e0+0x84, 0.5); //Suspension Bias
setfloat(0x96329e0+0x88, 0); //Anti-Dive Multiplier
//Handling
setfloat(0x96329e0+0x68, 30); //Steering Lock
setfloat(0x96329e0+0xbc, 1500); //Vehilce Mass
setfloat(0x96329e0+0xc0, 1500); //Turn Mass
setfloat(0x96329e0+0xa0, 0); //Centre of Mass - X
setfloat(0x96329e0+0xa4, 0); //Centre of Mass - Y
setfloat(0x96329e0+0xa8, 0); //Centre of Mass - Z
//Teleport
teleport( 268.31, -174.98, 11.50);
off()

#cheat DM ARENA
// made by kmann 
moveto(872.77,  1143.55,  8.02);  object(0x1CB2,  170,  270,  272);
move(14.13,  2.01,  0.00);  object(0x1CB2,  170,  270,  272);
move(14.15,  2.01,  0.00);  object(0x1CB2,  170,  270,  272);
move(0.00,  0.00,  0.00);  object(0x1CB2,  170,  270,  272);
move(14.39,  1.95,  0.00);  object(0x1CB2,  170,  270,  272);
move(13.81,  1.90,  0.00);  object(0x1CB2,  170,  270,  272);
move(14.45,  2.09,  0.00);  object(0x1CB2,  170,  270,  272);
move(13.46,  1.89,  0.00);  object(0x1CB2,  170,  270,  272);
move(11.13,  -7.68,  0.00);  object(0x1CB2,  80,  270,  268);
move(-2.94,  13.70,  0.00);  object(0x1CB2,  80,  270,  268);
move(-2.73,  13.87,  0.00);  object(0x1CB2,  80,  270,  270);
move(6.59,  1.23,  0.00);  object(0x1CB2,  80,  270,  270);
move(2.50,  -13.99,  0.00);  object(0x1CB2,  80,  270,  270);
move(2.46,  -13.69,  0.00);  object(0x1CB2,  80,  270,  270);
move(-5.59,  30.62,  1.20);  object(0x1CA3,  0,  0,  355);
move(-5.84,  -2.52,  0.00);  object(0x1CA3,  0,  0,  355);
move(12.34,  -30.61,  0.00);  object(0x1CA3,  0,  0,  178);
move(-4.64,  -2.21,  0.00);  object(0x1CA3,  0,  0,  178);
move(-1.89,  7.77,  -1.30);  object(0x1CD2,  0,  0,  355);
move(-1.53,  -0.11,  0.00);  object(0x1CD2,  0,  0,  355);
move(5.69,  1.56,  1.10);  object(0x1CD4,  0,  270,  355);
move(-7.06,  16.59,  -0.60);  object(0x1CF5,  0,  80,  80);
move(-2.03,  -0.53,  0.00);  object(0x1CF5,  0,  80,  80);
move(0.00,  0.00,  1.10);  object(0x1CF5,  0,  80,  80);
move(2.03,  0.53,  0.00);  object(0x1CF5,  0,  80,  80);
move(5.05,  -2.47,  -1.20);  object(0x1D00,  0,  0,  162);
move(-2.26,  -0.93,  0.00);  object(0x1D00,  0,  0,  161);
move(-0.00,  -3.46,  -0.30);  object(0x1D11,  0,  0,  169);
move(0.00,  0.00,  0.90);  object(0x1D11,  0,  0,  169);
move(7.71,  1.44,  -0.60);  object(0x1904,  0,  285,  168);
move(3.01,  0.62,  0.80);  object(0x1904,  0,  285,  168);
move(3.02,  0.72,  0.80);  object(0x1904,  0,  285,  168);
move(-184.85,  -39.24,  12.16);  object(0x0204,  0,  0,  358);
move(0.36,  -10.10,  0.00);  object(0x0204,  0,  0,  358);
move(0.39,  -10.90,  0.00);  object(0x0204,  0,  0,  358);
move(5.83,  0.21,  -5.90);  object(0x01D0,  0,  0,  358);
move(-0.08,  2.40,  0.00);  object(0x01D0,  0,  0,  358);
move(0.04,  -1.10,  0.00);  object(0x01D0,  0,  0,  358);
move(3.37,  0.11,  0.00);  object(0x01D0,  0,  0,  358);
move(-0.05,  1.30,  0.00);  object(0x01D0,  0,  0,  358);
move(0.08,  -2.40,  0.00);  object(0x01D0,  0,  0,  358);
move(-0.52,  -0.86,  0.00);  object(0x01D0,  0,  0,  341);
move(-2.45,  -0.09,  0.00);  object(0x01D0,  0,  0,  344);
move(-4.76,  -1.81,  0.60);  object(0x01C5,  0,  0,  254);
move(0.81,  -2.78,  0.00);  object(0x01C5,  0,  0,  254);
move(5.51,  5.14,  0.00);  object(0x01C6,  0,  0,  260);
move(-0.73,  -0.67,  -1.20);  object(0x01B4,  0,  0,  201);
move(0.49,  0.12,  0.00);  object(0x01B4,  0,  0,  201);
move(0.00,  0.00,  0.00);  object(0x01B3,  0,  0,  201);
move(-0.19,  -0.05,  0.00);  object(0x01B4,  0,  0,  201);
move(2.01,  1.94,  0.40);  object(0x016C,  0,  0,  227);
move(-1.82,  -7.69,  1.60);  object(0x1D0F,  335,  0,  177);
move(0.18,  -5.90,  6.90);  object(0x1D0F,  330,  0,  178);

teleport(872.77,  1143.55,  8.02); 

#cheat 4X4--SandKing

//Image: none
//Time: 28/01/2008 13:28:50
//Working: Yes
//Created By Sunshine Customs
//Sunshine Customs Created By emcp
//Addresses Found By Vette
//Basics
setint(0x8C73B30,  172); //Car Id
setchar(0x8C73B30+0x24,  255,  255,  0,  255); //Color 1
setchar(0x8C73B30+0x28,  255,  255,  0,  255); //Color2
setshort(0x98a33b8,  1,  'l',  'a',  'm',  'b',  'o',  0);
//Wheels
setfloat(0x935E6D8,  0.67,  0.67); //wheel size
setfloat(0x962ea40+0x6c,  1.05); //Traction Multiplier
setfloat(0x962ea40+0xc4,  0.85); //Traction Loss
setfloat(0x962ea40+0x70,  0.5); //Traction Bias
//Engine
setchar(0x962ea40+0x5c,  'R',  'P',  6); // Drive type / Engine type / Gears
//Suspension
setfloat(0x962ea40+0x7c,  0.35); //Suspension Upper Limit
setfloat(0x962ea40+0x80,  -0.15); //Suspension Lower Limit
setfloat(0x962ea40+0x78,  0.08); //Suspension Damping Level
setfloat(0x962ea40+0x74,  1); //Suspension Force Level
setfloat(0x962ea40+0x84,  0.5); //Suspension Bias
setfloat(0x962ea40+0x88,  0.3); //Anti-Dive Multiplier
//Handling
setfloat(0x962ea40+0x68,  30); //Steering Lock
setfloat(0x962ea40+0xbc,  2900); //Vehilce Mass
setfloat(0x962ea40+0xc0,  3200); //Turn Mass
setfloat(0x962ea40+0xa0,  0); //Centre of Mass - X
setfloat(0x962ea40+0xa4,  0); //Centre of Mass - Y
setfloat(0x962ea40+0xa8,  0); //Centre of Mass - Z
//Effects
//Neon
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,   255,  0,  0);}
//Teleport
teleport( 268.31,  -174.98,  11.50);
off() 

#cheat lambo at clymens suite
//Created By Sunshine Customs
//Sunshine Customs Created By emcp
//Addresses Found By Vette
//Basics
setint(0x8C73B30,  172); //Car Id
setchar(0x8C73B30+0x24,  255,  255,  0,  255); //Color 1
setchar(0x8C73B30+0x28,  255,  255,  0,  255); //Color2
setshort(0x98a33b8,  1,  'l',  'a',  'm',  'b',  'o',  0);
//Wheels
setfloat(0x935E6D8,  0.67,  0.67); //wheel size
setfloat(0x962ea40+0x6c,  1.05); //Traction Multiplier
setfloat(0x962ea40+0xc4,  0.85); //Traction Loss
setfloat(0x962ea40+0x70,  0.5); //Traction Bias
//Engine
setchar(0x962ea40+0x5c,  'R',  'P',  6); // Drive type / Engine type / Gears
//Suspension
setfloat(0x962ea40+0x7c,  0.35); //Suspension Upper Limit
setfloat(0x962ea40+0x80,  -0.15); //Suspension Lower Limit
setfloat(0x962ea40+0x78,  0.08); //Suspension Damping Level
setfloat(0x962ea40+0x74,  1); //Suspension Force Level
setfloat(0x962ea40+0x84,  0.5); //Suspension Bias
setfloat(0x962ea40+0x88,  0.3); //Anti-Dive Multiplier
//Handling
setfloat(0x962ea40+0x68,  30); //Steering Lock
setfloat(0x962ea40+0xbc,  2900); //Vehilce Mass
setfloat(0x962ea40+0xc0,  3200); //Turn Mass
setfloat(0x962ea40+0xa0,  0); //Centre of Mass - X
setfloat(0x962ea40+0xa4,  0); //Centre of Mass - Y
setfloat(0x962ea40+0xa8,  0); //Centre of Mass - Z
//Effects
//Neon
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,   255,  0,  0);}
//Teleport
teleport( 268.31,  -174.98,  11.50);
off()

#cheat eclipse at clymens suite
//Created By Sunshine Customs
//Sunshine Customs Created By emcp
//Addresses Found By Vette
//Basics
setint(0x8C73B30,  274); //Car Id
setchar(0x8C73B30+0x24,  179,  106,  0,  255); //Color 1
setchar(0x8C73B30+0x28,  0,  0,  0,  255); //Color2
setshort(0x98a3212,  1,  'e',  'c',  'l',  'i',  'p',  's',  'e',  0);
//Wheels
setfloat(0x936F298,  1,  1); //wheel size
setfloat(0x9634500+0x6c,  0.75); //Traction Multiplier
setfloat(0x9634500+0xc4,  0.85); //Traction Loss
setfloat(0x9634500+0x70,  0.5); //Traction Bias
//Engine
setchar(0x9634500+0x5c,  'R',  'P',  6); // Drive type / Engine type / Gears
//Suspension
setfloat(0x9634500+0x7c,  0.35); //Suspension Upper Limit
setfloat(0x9634500+0x80,  -0.15); //Suspension Lower Limit
setfloat(0x9634500+0x78,  0.08); //Suspension Damping Level
setfloat(0x9634500+0x74,  1); //Suspension Force Level
setfloat(0x9634500+0x84,  0.5); //Suspension Bias
setfloat(0x9634500+0x88,  0); //Anti-Dive Multiplier
//Handling
setfloat(0x9634500+0x68,  30); //Steering Lock
setfloat(0x9634500+0xbc,  1500); //Vehilce Mass
setfloat(0x9634500+0xc0,  1500); //Turn Mass
setfloat(0x9634500+0xa0,  0); //Centre of Mass - X
setfloat(0x9634500+0xa4,  0); //Centre of Mass - Y
setfloat(0x9634500+0xa8,  0); //Centre of Mass - Z
//Neon
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,   255,  0,  0);}
//Teleport
teleport( 268.31,  -174.98,  11.50);
off() 

#cheat hummer at clymens suite
//Created By Sunshine Customs
//Sunshine Customs Created By emcp
//Addresses Found By Vette
//Basics
setint(0x8C73B30,  209); //Car Id
setchar(0x8C73B30+0x24,  0,  0,  0,  255); //Color 1
setchar(0x8C73B30+0x28,  255,  0,  0,  255); //Color2
setshort(0x98a325a,  1,  'h',  'u',  'm',  'm',  'e',  'r',  0);
//Wheels
setfloat(0x93647F8,  1.15,  1.15); //wheel size
setfloat(0x96309c0+0x6c,  0.75); //Traction Multiplier
setfloat(0x96309c0+0xc4,  0.85); //Traction Loss
setfloat(0x96309c0+0x70,  0.5); //Traction Bias
//Engine
setchar(0x96309c0+0x5c,  '4',  'D',  6); // Drive type / Engine type / Gears
//Suspension
setfloat(0x96309c0+0x7c,  0.35); //Suspension Upper Limit
setfloat(0x96309c0+0x80,  -0.15); //Suspension Lower Limit
setfloat(0x96309c0+0x78,  0.08); //Suspension Damping Level
setfloat(0x96309c0+0x74,  1); //Suspension Force Level
setfloat(0x96309c0+0x84,  0.5); //Suspension Bias
setfloat(0x96309c0+0x88,  0.2); //Anti-Dive Multiplier
//Handling
setfloat(0x96309c0+0x68,  30); //Steering Lock
setfloat(0x96309c0+0xbc,  2500); //Vehilce Mass
setfloat(0x96309c0+0xc0,  2900); //Turn Mass
setfloat(0x96309c0+0xa0,  0); //Centre of Mass - X
setfloat(0x96309c0+0xa4,  0); //Centre of Mass - Y
setfloat(0x96309c0+0xa8,  0); //Centre of Mass - Z
//Neon
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,   0,  255,  0);}
//Teleport
teleport( 268.31,  -174.98,  11.50);
off() 

#cheat nissan at clymens suite
//Created By Sunshine Customs
//Sunshine Customs Created By emcp
//Addresses Found By Vette
//Basics
setint(0x8C73B30,  171); //Car Id
setchar(0x8C73B30+0x24,  248,  151,  5,  255); //Color 1
setchar(0x8C73B30+0x28,  255,  0,  0,  255); //Color2
setshort(0x98a30e2,  1,  'n',  'i',  's',  's',  'a',  'n',  0);
//Wheels
setfloat(0x935E438,  1,  1); //wheel size
setfloat(0x962eb20+0x6c,  1); //Traction Multiplier
setfloat(0x962eb20+0xc4,  0.85); //Traction Loss
setfloat(0x962eb20+0x70,  0.5); //Traction Bias
//Engine
setchar(0x962eb20+0x5c,  'R',  'P',  3); // Drive type / Engine type / Gears
//Suspension
setfloat(0x962eb20+0x7c,  0.35); //Suspension Upper Limit
setfloat(0x962eb20+0x80,  -0.15); //Suspension Lower Limit
setfloat(0x962eb20+0x78,  0.08); //Suspension Damping Level
setfloat(0x962eb20+0x74,  1); //Suspension Force Level
setfloat(0x962eb20+0x84,  0.5); //Suspension Bias
setfloat(0x962eb20+0x88,  0); //Anti-Dive Multiplier
//Handling
setfloat(0x962eb20+0x68,  30); //Steering Lock
setfloat(0x962eb20+0xbc,  1650); //Vehilce Mass
setfloat(0x962eb20+0xc0,  1900); //Turn Mass
setfloat(0x962eb20+0xa0,  0); //Centre of Mass - X
setfloat(0x962eb20+0xa4,  0); //Centre of Mass - Y
setfloat(0x962eb20+0xa8,  0); //Centre of Mass - Z
//Teleport
teleport( 268.31,  -174.98,  11.50);
off()

#cheat BIG WEELD BLISTA CMPQ
//Made with Wheel Size Changer by psphacker108
setfloat(0x935F3F8,  5.0);

#cheat pcj-600 red and black
//Generated By VCS Cheater
//Orginal Car Color Cheats Found by vettefan88
if(getshort(pcar + 0x56)== 212)
{
setchar(pcar + 0x00000224,  0,  0,  0);
setchar(pcar + 0x00000228,  255,  0,  0); 

#cheat The 122222 sanchez *with the ultimate wheelie*
 //Created By Sunshine Customs
 //Sunshine Customs Created By emcp
 //Addresses Found By Vette
 //Basics
 setint(0x8C73B30,  205); //Car Id
 setchar(0x8C73B30+0x24,  0,  0,  0,  255); //Color 1
 setchar(0x8C73B30+0x28,  0,  0,  0,  255); //Color2
 setshort(0x98a322a,  1,  '1',  '2',  '2',  '2',  '2',  '2',  0); 
 //Wheels
 setfloat(0x9630640+0x6c,  0.75); //Traction Multiplier
 setfloat(0x9630640+0xc4,  2); //Traction Loss
 setfloat(0x9630640+0x70,  0.5); //Traction Bias
 //Engine
 setchar(0x9630640+0x5c,  'F',  'P',  6); // Drive type / Engine type / Gears
 //Suspension
 setfloat(0x9630640+0x7c,  0.35); //Suspension Upper Limit
 setfloat(0x9630640+0x80,  -0.04); //Suspension Lower Limit
 setfloat(0x9630640+0x78,  0.08); //Suspension Damping Level
 setfloat(0x9630640+0x74,  1); //Suspension Force Level
 setfloat(0x9630640+0x84,  0.5); //Suspension Bias
 setfloat(0x9630640+0x88,  0); //Anti-Dive Multiplier
 //Handling
 setfloat(0x9630640+0x68,  41); //Steering Lock
 setfloat(0x9630640+0xbc,  1500); //Vehilce Mass
 setfloat(0x9630640+0xc0,  1500); //Turn Mass
 setfloat(0x9630640+0xa0,  0); //Centre of Mass - X
 setfloat(0x9630640+0xa4,  0); //Centre of Mass - Y
 setfloat(0x9630640+0xa8,  0); //Centre of Mass - Z
 //Teleport
 teleport( 268.31,  -174.98,  11.50);
off()

#cheat custumized Deluxo @ Compound
 //Car custumized by hoockhand
 //Created By Vice Mod Shop
 //Vice Mod Shop Created By emcp
 //Addresses Found By Vette
 //Basics
 setint(0x8C73A70,  187);
 setchar(0x8C73A70+0x24,  0,  0,  0,  255);
 setchar(0x8C73A70+0x28,  255,  140,  0,  255);
 //Wheels
 setfloat(0x9360E38,  1.06,  1.06);
 setfloat(0x962f680+0x6c,  1);
 setfloat(0x962f680+0xc4,  0.7);
 setfloat(0x962f680+0x70,  0.45);
 //Engine
 setchar(0x962f680+0x5c,  'R',  'P',  5);
 //Suspension
 setfloat(0x962f680+0x7c,  0);
 setfloat(0x962f680+0x80,  -1);
 setfloat(0x962f680+0x78,  0.335);
 setfloat(0x962f680+0x74,  0.575);
 setfloat(0x962f680+0x84,  0.54);
 setfloat(0x962f680+0x88,  1);
 //Handling
 setfloat(0x962f680+0x68,  20);
 setfloat(0x962f680+0xbc,  5900);
 setfloat(0x962f680+0xa0,  0);
 setfloat(0x962f680+0xa4,  0);
 setfloat(0x962f680+0xa8,  0);
 //Effects
 //Exhaust
 setchar(0x09569B94,   0,  255,  255);
 setchar(0x09569B90,   0x4);
 //Teleport
 teleport( -1087.31,  356.47,  11.27);
off()

#cheat pimped mesa grande
setint(0x08C739B0,  259);
setchar(0x08C739d4,  0,  0,  0,  0);
setfloat(0x9633200+0x74,  2.0);
setfloat(0x9633200+0x78,  5);
setfloat(0x9633200+0x7c,  0);
setfloat(0x9633200+0x80,  -1.18);
setfloat(0x9633200+0x84,  0.5);
setfloat(0x936cb38,  2.20,  2.20);
setfloat(0x9633200+0xc4,  0.71);
setfloat(0x9633200+0x70,  0.40);
setfloat(0x9633200+0x6c,  0.95);
setfloat(0x9633200+0xa0,  0);
setfloat(0x9633200+0xa4,  0);
setfloat(0x9633200+0x68,  38);
off()

#cheat Monster Quad. *first ever pmg car*
setchar(0x08C739d8,   255,  255,  255,  255);
setfloat(0x9631d60+0xc4,  0.75);
setfloat(0x9631d60+0x78,  5);
setfloat(0x9631d60+0xc0,  6000);
setfloat(0x9631d60+0xa8,  -1.2);
setfloat(0x9631d60+0x7c,  0);
setint(0x08C739B0,   230);
setfloat(0x9631d60+0x74,  0.6);
setfloat(0x9631d60+0x80,  -0.75);
setfloat(0x9631d60+0x88,  1);
setfloat(0x9631d60+0x84,  0.5);
setchar(0x08C739d4,  0,  0,  0,  255);
setfloat(0x9631d60+0xa4,  0);
setfloat(0x9631d60+0x70,  0.50);
setfloat(0x9631d60+0x6c,  0.95);
setfloat(0x9631d60+0xbc,  6000);
setfloat(0x9367f18,  1.35,  1.35);
setfloat(0x9631d60+0xa0,  0);
setfloat(0x9631d60+0x68,  35);

#cheat Voodoo Trial Car
setfloat(0x9632544,  0.0);
if(buttons & CTRL_LTRIGGER)
{
setfloat(0x9632544,  -2.6);
}
if(buttons & CTRL_RTRIGGER)
{
setfloat(0x9632544,  2.0);
}
#off
setfloat(0x9632544,  0.0);

#cheat Vehicles Health Bar Mod V2
//Thanks To psphacker for helping me getting the armor back
//Bar Color found by vettefan88

CarHP = getfloat(pcar+0x027C);
static armor;
static wasin;
static fInt;

if(!fInt)
{
 armor = getfloat(pplayer + 0x4E8);  
 fInt = 1;
}

if (pcar){
wasin = true;

//Show Health In Bar
setfloat(pplayer+0x4E8,   ((CarHP-250)/750)*100);

//change color
for(neon=0;neon<15;neon++){
setchar(0x96E1ED0+4*neon,   40,  240,  40);
}
}
else
{  if(wasin)
{
 wasin = false;

 setfloat(pplayer + 0x4E8,  armor);

 //change color
 for(neon=0;neon<15;neon++){
 setchar(0x96E1ED0+4*neon,   106,  255,  255);
 }
}
armor = getfloat(pplayer + 0x4E8);
} 

#cheat Pop open Everything v2
setshort(0x08e90bd8,  1,  'C',  'i',  'r',  'c',  'l',  'e',  ' ',  'a',  'n',  'd',  ' ',  'r',  'i',  'g',  'h',  't',  ' ',  't',  'o',  ' ',  'o',  'p',  'e',  'n',  ' ',  'r',  'i',  'g',  'h',  't',  ' ',  'd',  'o',  'o',  'r',  ',  ',  ' ',  'c',  'i',  'r',  'c',  'l',  'e',  ' ',  'a',  'n',  'd',  ' ',  'u',  'p',  ' ',  't',  'o',  ' ',  'p',  'o',  'p',  ' ',  't',  'h',  'e',  ' ',  'h',  'o',  'o',  'd',  ' ',  'a',  'n',  'd',  ' ',  's',  'o',  ' ',  'o',  'n',  '.',  '.',  '.',  ' ',  'R',  ' ',  'a',  'n',  'd',  ' ',  'r',  'i',  'g',  'h',  't',  ' ',  't',  'o',  ' ',  'l',  'o',  'c',  'k',  ' ',  'r',  'i',  'g',  'h',  't',  ' ',  'd',  'o',  'o',  'r',  ' ',  'i',  'n',  ' ',  'p',  'o',  's',  'i',  't',  'i',  'o',  'n',  ',  ',  ' ',  'R',  ' ',  'a',  'n',  'd',  ' ',  'u',  'p',  ' ',  't',  'o',  ' ',  'l',  'o',  'c',  'k',  ' ',  'h',  'o',  'o',  'd',  ' ',  'i',  'n',  ' ',  'p',  'o',  's',  'i',  't',  'i',  'o',  'n',  ' ',  'a',  'n',  'd',  ' ',  's',  'o',  ' ',  'o',  'n',  '.',  '.',  '.',  0); 
if (buttons & CTRL_CIRCLE && buttons & CTRL_UP)
setchar(pcar + 0x000003BA,  2);
if (buttons & CTRL_CIRCLE && buttons & CTRL_DOWN)
setchar(pcar + 0x000003BB,  2);
if (buttons & CTRL_CIRCLE && buttons & CTRL_RIGHT)
setchar(pcar + 0x000003BD,  2);
if (buttons & CTRL_CIRCLE && buttons & CTRL_LEFT)
setchar(pcar + 0x000003BC,  2);
if (buttons & CTRL_RTRIGGER && buttons & CTRL_UP)
setchar(pcar + 0x000003BA,  0);
if (buttons & CTRL_RTRIGGER && buttons & CTRL_DOWN)
setchar(pcar + 0x000003BB,  0);
if (buttons & CTRL_RTRIGGER && buttons & CTRL_RIGHT)
setchar(pcar + 0x000003BD,  0);
if (buttons & CTRL_RTRIGGER && buttons & CTRL_LEFT)
setchar(pcar + 0x000003BC,  0);
#off
setchar(pcar + 0x000003BC,  0);
setchar(pcar + 0x000003BD,  0);
setchar(pcar + 0x000003BB,  0);
setchar(pcar + 0x000003BA,  0);

#cheat First Person View in Car v2
setchar(pplayer + 0x000008B4,  61);
setchar(pplayer+0x4C,    0x10,    0x20);
#off 
setchar(pplayer+0x4C,    0x00,    0x00); 
setchar(pplayer + 0x000008B4,  55);

#cheat Gas Modification
//Use Ocean Beach Gas station to refuel!
static start;
static gas;
if(pcar&&!start) {
if(!getchar(pcar+0x3d)) {
gas = (abs((getint(pplayer+0x68)+getint(pplayer))*getint(0x08bb3b40)) % (100-50)) + 50;
setchar(pcar+0x3d,  1);
}
else {
gas = getchar(pcar+0x3c);
}
start = 1;
}
setchar(pcar+0x3c,  gas);
if(!pcar) {
start = 0;
}
static timepassed;
static init;
if(!init)
{
   lasttime = getchar( 0x08bb3b41 );
   init = 1;
}
if( lasttime != getchar( 0x08bb3b41 ) )
{
   timepassed++;
   lasttime = getchar( 0x08bb3b41 );
}
if( timepassed == 6 )
{
  if(gas > 0) {
    gas -= 1;
  }
  timepassed = 0;
}
if(pcar&&gas) {
setshort(0x08e90bd8,  'G',  'a',  's',  ' ',  'l',  'e',  'f',  't',  ':',  ' ');
int = gas;
size = 0;
for( i = 1; i < int; i *= 10 ) size+=2;
for( i = 0; int > 0; i+=2 )
{
   setshort(0x08e90bea+size-i,   '0' + (int % 10));
   int = int(int/10);
}
setshort(0x08e90bea+size-i+0x6,  '%',  ' ',  0);
}
if(pcar&&!gas) {
setfloat(pcar+0x140,  getfloat(pcar+0x140)*0.91,  getfloat(pcar+0x144)*0.91);
setshort(0x08e90bd8,  1,  'Y',  'o',  'u',  ' ',  'a',  'r',  'e',  ' ',  'o',  'u',  't',  ' ',  'o',  'f',  ' ',  'g',  'a',  's',  '!',  0); 
}
if(getfloat(pcar+0x140) == 0 && getfloat(pcar+0x144) == 0 && getfloat(pcar+0x30) > 21.09 && getfloat(pcar+0x30) < 71.80 && getfloat(pcar+0x34) > -1091.87 && getfloat(pcar+0x34) < -1042.57) {
if(gas<100) {
price = (100 - gas) * 0.4;
setint(0x08bde55c,  getint(0x08bde55c) - price,  getint(0x08bde55c) - price);
gas = 100;
}
}

#cheat San Andreas Nos
static On;
static going;
if(buttons & CTRL_CIRCLE &&!On) {
   On = 1;
}
if(On) {
static timepassed;
static init;
if(!init)
{
   lasttime = getchar( 0x08bb3b41 );
   init = 1;
}
if( lasttime != getchar( 0x08bb3b41 ) )
{
   timepassed++;
   lasttime = getchar( 0x08bb3b41 );
}
if( timepassed < 15 )
{
    going = 1;
}
else {
  On = 0;
  timepassed = 0;
  going = 0;
}
}
if(going) {
   setchar(0x09569B90,   0x10);
   setchar(0x09569B94,   0,   127,   255);
   speed = 1.5;                                                                                  
   thrust = speed * 0.00333;       
   if(buttons & CTRL_CROSS) {                             
      setfloat(pcar + 0x0140,   getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);          
      setfloat(pcar + 0x0144,   getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust);
   }
}
else
{
   setchar(0x09569B90,   0x4);
   setchar(0x09569B94,   63,   63,   63);
} 

#cheat Splitz 6 Has Big Tires.
//Made with Wheel Size Changer by psphacker108
setfloat(0x935E198,  1);

#cheat Ride in back of Limo
//thanks to Vettefan88
setfloat(0x9367a24,  -2.1);

#cheat Big Wheels On Infernus
//Made with Wheel Size Changer by psphacker108
setfloat(0x936E818,  0.9);

#cheat DDM's Sentinel XS
if(getshort(pcar + 0x56) == 274)
{
setfloat(0x936F298,  0.8);
setchar(pcar + 0x224,  255,  127,  0);
setchar(pcar + 0x228,  0,  0,  0);
setfloat(pcar+0x450,   0,   -1.2566371,   0);
setfloat(pcar+0x480,   0,   -1.2566371,   0);
setfloat(pcar+0x4b0,   0,   -1.2566371,   0);
setfloat(pcar+0x4e0,   0,   -1.2566371,   0);
if(buttons & CTRL_CIRCLE && buttons & CTRL_CROSS) {

   speed = 0.0;
   setchar(0x09569B90,  0x10);
   setchar(0x09569B94,  0,  127,  255);
   if(getfloat(pcar+0x140)>0)
   {
      speed+=getfloat(pcar+0x140);
   }
   else
   {
      speed-=getfloat(pcar+0x140);
   }

   if(getfloat(pcar+0x144)>0)
   {
      speed+=getfloat(pcar+0x144);
   }
   else
   {
      speed-=getfloat(pcar+0x144);
   }

   if(speed<175/75)
   {
      setfloat(pcar+0x140,   getfloat(pcar+0x140)-getfloat(pcar+0x4)*0.005);
      setfloat(pcar+0x144,   getfloat(pcar+0x144)+getfloat(pcar)*0.005);
   }

}
else
{
   setchar(0x09569B90,  0x4);
   setchar(0x09569B94,  63,  63,  63);
}
}

#cheat Bigger Wheels Sand King
//Made with Wheel Size Changer by psphacker108
setfloat(0x936A678,  1.5);

#cheat Wheel size polaris V8
//Made with Wheel Size Changer by psphacker108
setfloat(0x9360B98,  1.5);

#cheat * UPDATE * The Car Mod Shop V 4
static Exit;
static counter;
static rotation;
static Spinners;
static car;
static Tires;
static Doors;
static Nos;
static menu;
static stateIn;
static Start;
static R;
static G;
static B;
static R2;
static G2;
static B2;
if(getfloat(pcar + 0x30) >=258.71 && getfloat(pcar + 0x30) <= 268.65 && getfloat(pcar + 0x34) >= -146.48 && getfloat(pcar + 0x34) <= -138.07)
{
   stateIn = 1;
   car = pcar;
   R = getchar(pcar + 0x224);
   G = getchar(pcar + 0x225);
   B = getchar(pcar + 0x226);
   R2 = getchar(pcar + 0x228);
   G2 = getchar(pcar + 0x229);
   B2 = getchar(pcar + 0x22A);
}
if(stateIn && getfloat(pcar + 0x140) == 0 && getfloat(pcar + 0x144) == 0)
{
   Start = 1;
   setfloat(pcar + 0x30,  -140.79,  -1420.82,  4.90);
xRightHandVector    = getfloat(pobj + 0x0000);
yRightHandVector    = getfloat(pobj + 0x0004);
zRightHandVector    = getfloat(pobj + 0x0008);
xForwardVector      = getfloat(pobj + 0x0010);
yForwardVector      = getfloat(pobj + 0x0014);
zForwardVector      = getfloat(pobj + 0x0018);
xUpVector           = getfloat(pobj + 0x0020);
yUpVector           = getfloat(pobj + 0x0024);
zUpVector           = getfloat(pobj + 0x0028);
xRotationalMomentum = getfloat(pobj + 0x0070);
yRotationalMomentum = getfloat(pobj + 0x0074);
zRotationalMomentum = getfloat(pobj + 0x0078);
xVelocity           = getfloat(pobj + 0x0140);
yVelocity           = getfloat(pobj + 0x0144);
}

if(Start)
{
   stateIn = 0;
    setfloat(pobj + 0x0000,   xRightHandVector);
    setfloat(pobj + 0x0004,   yRightHandVector);
    setfloat(pobj + 0x0008,   zRightHandVector);
    setfloat(pobj + 0x0010,   xForwardVector);
    setfloat(pobj + 0x0014,   yForwardVector);
    setfloat(pobj + 0x0018,   zForwardVector);
    setfloat(pobj + 0x0020,   xUpVector);
    setfloat(pobj + 0x0024,   yUpVector);
    setfloat(pobj + 0x0028,   zUpVector);
    setfloat(pobj + 0x0070,   xRotationalMomentum);
    setfloat(pobj + 0x0074,   yRotationalMomentum);
    setfloat(pobj + 0x0078,   zRotationalMomentum);
    setfloat(pobj + 0x0140,   0,  0);
   if( menu == 0 )
   {
      int = R;
      setshort( 0x08e90bd8,  1,  'R',  ':',  ' ',  0 );
   }
   if( menu == 1 )
   {
      int = G;
      setshort( 0x08e90bd8,  1,  'G',  ':',  ' ',  0 );
   }
   if( menu == 2 )
   {
      int = B;
      setshort( 0x08e90bd8,  1,  'B',  ':',  ' ',  0 );
   }
   if( menu == 3 )
   {
      int = R2;
      setshort( 0x08e90bd8,  1,  'R',  '2',  ':',  ' ',  0 );
   }
   if( menu == 4 )
   {
      int = G2;
      setshort( 0x08e90bd8,  1,  'G',  '2',  ':',  ' ',  0 );
   }
   if( menu == 5 )
   {
      int = B2;
      setshort( 0x08e90bd8,  1,  'B',  '2',  ':',  ' ',  0 );
   }
   size = 0;
   for(i = 1; i < int; i*=10) size+=2;
   for(i = 0; int > 0; i+=2 ) 
   {
      if( menu < 3)
      {
      setshort(0x08e90bdc+size-i,   '0' + (int % 10));
      int = int(int/=10);
      } 
      else if( menu > 2)
      {
      setshort(0x08e90bde+size-i,   '0' + (int % 10));
      int = int(int/=10);
      } 
   }
   if( menu == 6 && !Nos)
   {
      if(press & CTRL_CROSS)
         Nos = 1;
      setshort( 0x08e90bd8,  1,  'N',  'o',  's',  ' ',  'o',  'f',  'f',  0);
   }
   else if( menu == 6 && Nos)
   {
      if(press & CTRL_CROSS)
         Nos = 0;
      setshort( 0x08e90bd8,  'N',  'o',  's',  ' ',  'o',  'n',   0);
   }
   if( menu == 7 && !Doors)
   {
      if(press & CTRL_CROSS)
         Doors = 1;
      setshort( 0x08e90bd8,  1,  'L',  'a',  'm',  'b',  'o',  ' ',  'D',  'o',  'o',  'r',  's',  ' ',  'O',  'f',  'f',  0);
   }
   else if( menu == 7 && Doors)
   {
      if(press & CTRL_CROSS)
         Doors = 0;
      setshort( 0x08e90bd8,  1,  'L',  'a',  'm',  'b',  'o',  ' ',  'D',  'o',  'o',  'r',  's',  ' ',  'O',  'n',  0);
   }
   if( menu == 8 && !Tires)
   {
      if(press & CTRL_CROSS)
         Tires = 1;
      setshort( 0x08e90bd8,  1,  'U',  'n',  'p',  'o',  'p',  'p',  'a',  'b',  'l',  'e',  ' ',  'T',  'i',  'r',  'e',  's',  ' ',  'O',  'f',  'f',  0);
   }
   else if( menu == 8 && Tires)
   {
      if(press & CTRL_CROSS)
         Tires = 0;
      setshort( 0x08e90bd8,  1,  'U',  'n',  'p',  'o',  'p',  'p',  'a',  'b',  'l',  'e',  ' ',  'T',  'i',  'r',  'e',  's',  ' ',  'O',  'n',  0);
   }
   if( menu == 9 && !Spinners)
   {
      if(press & CTRL_CROSS)
         Spinners = 1;
      setshort( 0x08e90bd8,  1,  'S',  'p',  'i',  'n',  'n',  'e',  'r',  's',  ' ',  'O',  'f',  'f',  0);
   }
   else if( menu == 9 && Spinners)
   {
      if(press & CTRL_CROSS)
         Spinners = 0;
      setshort( 0x08e90bd8,  1,  'S',  'p',  'i',  'n',  'n',  'e',  'r',  's',  ' ',  'O',  'n',  0);
   }
   if(buttons & CTRL_LEFT)
   {
      if(menu == 0)
         R--;
      if(menu == 1)
         G--;
      if(menu == 2)
         B--;
      if(menu == 3)
         R2--;
      if(menu == 4)
         G2--;
      if(menu == 5)
         B2--;
   }
   if(buttons & CTRL_RIGHT)
   {
      if(menu == 0)
         R++;
      if(menu == 1)
         G++;
      if(menu == 2)
         B++;
      if(menu == 3)
         R2++;
      if(menu == 4)
         G2++;
      if(menu == 5)
         B2++;
   }
   if(buttons & CTRL_CIRCLE)
   {
      Start = 0;
    setfloat(pcar + 0x30,  -191.57,  -1392.88,  145.00);
    setfloat(pcar + 0x30,  277.13,  -146.65,  15);
      menu = 0;
    Exit = 1;
   }
   if(press & CTRL_DOWN && menu < 9)
      menu++;
   if(press & CTRL_UP  && menu > 0)
      menu--;
      setchar(pcar + 0x224,  R,  G,  B);
      setchar(pcar + 0x228,  R2,  G2,  B2);
   }
if(Exit)
{
    setfloat(pobj + 0x0000,   xRightHandVector);
    setfloat(pobj + 0x0004,   yRightHandVector);
    setfloat(pobj + 0x0008,   zRightHandVector);
    setfloat(pobj + 0x0010,   xForwardVector);
    setfloat(pobj + 0x0014,   yForwardVector);
    setfloat(pobj + 0x0018,   zForwardVector);
    setfloat(pobj + 0x0020,   xUpVector);
    setfloat(pobj + 0x0024,   yUpVector);
    setfloat(pobj + 0x0028,   zUpVector);
    setfloat(pobj + 0x0070,   xRotationalMomentum);
    setfloat(pobj + 0x0074,   yRotationalMomentum);
    setfloat(pobj + 0x0078,   zRotationalMomentum);
    setfloat(pobj + 0x0140,   0,  0,  0);
Exit = 0;
}
if(Nos && !stateIn && !Start && pcar == car)
{
if(buttons & CTRL_CIRCLE && buttons & CTRL_CROSS) {

   speed = 0.0;
   setchar(0x09569B90,  0x10);
   setchar(0x09569B94,  0,  127,  255);
   if(getfloat(pcar+0x140)>0)
   {
      speed+=getfloat(pcar+0x140);
   }
   else
   {
      speed-=getfloat(pcar+0x140);
   }

   if(getfloat(pcar+0x144)>0)
   {
      speed+=getfloat(pcar+0x144);
   }
   else
   {
      speed-=getfloat(pcar+0x144);
   }

   if(speed<175/75)
   {
      setfloat(pcar+0x140,   getfloat(pcar+0x140)-getfloat(pcar+0x4)*0.005);
      setfloat(pcar+0x144,   getfloat(pcar+0x144)+getfloat(pcar)*0.005);
   }

}
else
{
   setchar(0x09569B90,  0x4);
   setchar(0x09569B94,  63,  63,  63);
}
}

if(Doors && pcar == car && getshort(pcar + 0x56) != 178 && getshort(pcar + 0x56) != 179 && getshort(pcar + 0x56) != 205 && getshort(pcar + 0x56) != 212 && getshort(pcar + 0x56) != 229 && getshort(pcar + 0x56) != 230 && getshort(pcar + 0x56) != 231 && getshort(pcar + 0x56) != 232 && getshort(pcar + 0x56) != 252)
{
setfloat(pcar+0x450,   0,   -1.2566371,   0);
setfloat(pcar+0x480,   0,   -1.2566371,   0);
setfloat(pcar+0x4b0,   0,   -1.2566371,   0);
setfloat(pcar+0x4e0,   0,   -1.2566371,   0);
}
else if(!Doors && pcar == car && getshort(pcar + 0x56) != 178 && getshort(pcar + 0x56) != 179 && getshort(pcar + 0x56) != 205 && getshort(pcar + 0x56) != 212 && getshort(pcar + 0x56) != 229 && getshort(pcar + 0x56) != 230 && getshort(pcar + 0x56) != 231 && getshort(pcar + 0x56) != 232 && getshort(pcar + 0x56) != 252)
{
setfloat(pcar+0x450,   0,   -1.2566371,   0);
setfloat(pcar+0x480,   1.2566371,   0,   0);
setfloat(pcar+0x4b0,   0,   -1.2566371,   0);
setfloat(pcar+0x4e0,   1.2566371,   0,   0);
}
if(Tires && pcar == car)
{
setshort(pcar+0x3b6,   0,   0);//cars
setshort(pcar+0x434,   0);//bikes
}
if(Spinners && pcar == car)
{
if (rotation == 0)
{
rotation = 360;
}
spin = tan(rotation);
setfloat(pcar + 0x644,   spin,   spin,   spin,   spin);
rotation = rotation - 1;
if (rotation == 1)
{rotation = 360;}
}

#cheat Hikiwara Cholo Sabre
if (buttons & CTRL_RIGHT)
{
setchar(0x9569b94,   0,   0x0,   0xFF);
setchar(pcar+0x224,  0,  0x0,  0xff);
setchar(pcar+0x228,  0,  0x0,  0xff);
1 = 0;
2 = 175;
3 = 255;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,  1,  2,  3);}
}
pspawn = 0x08E81290;  
setint(pspawn,     265);  
setfloat(pspawn + 4,     -1041.73,     -761.80,     11.57,     90);
pspawn += 0x30;
setshort(pcar+0x3b6,   0,   0);
setfloat(pcar+0x450,   4,   2,   4);
setfloat(pcar+0x480,   4,   2,   4);
setfloat(pcar+0x4b0,   4,   2,   4);
setfloat(pcar+0x4e0,   4,   2,   4);



if (buttons & CTRL_CROSS && !(buttons & CTRL_CIRCLE)) {

speed = sqrt(getfloat(pcar + 0x140) * getfloat(pcar + 0x140) + getfloat(pcar + 0x144) * getfloat(pcar + 0x144));

if(speed<1.8) {
setfloat(pcar+0x140,   getfloat(pcar+0x140)-getfloat(pcar+0x4)*0.005);
setfloat(pcar+0x144,   getfloat(pcar+0x144)+getfloat(pcar)*0.005);
}
}

if(buttons & CTRL_SQUARE && getshort(pcar+0x1c8)==0.5) setfloat(pcar+0x140,   0,   0);
max speed for NOS accelerate
if(speed<1.8) {
setfloat(pcar+0x140,   getfloat(pcar+0x140)-getfloat(pcar+0x4)*0.005);
setfloat(pcar+0x144,   getfloat(pcar+0x144)+getfloat(pcar)*0.005);
}
}
//Power Brake if vehicle is on ground
if(buttons & CTRL_SQUARE && getshort(pcar+0x1c8)==0.5) setfloat(pcar+0x140,   0,   0);

#cheat NOS Ver 1.3 by tako
if(pcar)
{
setchar(0x9569C62,  0x30); 
setchar(0x9569C98,  0x00); 
setchar(0x9569C9C,  0xFF,  0x60,  0x30);
if(buttons & CTRL_UP)
{
setchar(0x8BB3B5A,  0x80,  0x3E);
setfloat(pcar + 0x0078,  -0.05 * xstick);
if(buttons & CTRL_DOWN && getshort(pcar+0x1c8)==0)
setfloat(pcar+0x140,  0,  0);
else if(buttons & CTRL_CIRCLE) 
{ 
setchar(0x9569B5A,  0xB0); 
setchar(0x9569B90,  0x00); 
setchar(0x9569B78,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00); 
setchar(0x9569B94,  0x00,  0x50,  0xFF); 
setchar(0x9569B85,  0xFF); 
setchar(0x9569B5E,  0x70);
speed = sqrt(getfloat(pcar + 0x140) * getfloat(pcar + 0x140) + getfloat(pcar + 0x144) * getfloat(pcar + 0x144)); 
if(speed<1.8)
{
setfloat(pcar+0x140,  getfloat(pcar+0x140)-getfloat(pcar+0x4)*0.005); 
setfloat(pcar+0x144,  getfloat(pcar+0x144)+getfloat(pcar)*0.005);
}
}
else
{
setchar(0x9569B5A,  0xFF); 
setchar(0x9569B90,  0x04); 
setchar(0x9569B78,  0x0A,  0xD7,  0x23,  0x3C,  0x8F,  0xC2,  0xF5,  0x3C); 
setchar(0x9569B94,  0x62,  0x62,  0x6C); 
setchar(0x9569B85,  0x00); 
setchar(0x9569B5E,  0x60);
}
}
else if(buttons & CTRL_DOWN && getshort(pcar+0x1c8)==0)
{
setchar(0x8BB3B5A,  0x80,  0x3F);
setfloat(pcar+0x140,  0,  0);
}
else if(buttons & CTRL_CIRCLE) 
{
setchar(0x8BB3B5A,  0x80,  0x3F);
setchar(0x9569B5A,  0xB0); 
setchar(0x9569B90,  0x00); 
setchar(0x9569B78,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00); 
setchar(0x9569B94,  0x00,  0x50,  0xFF); 
setchar(0x9569B85,  0xFF); 
setchar(0x9569B5E,  0x70);
speed = sqrt(getfloat(pcar + 0x140) * getfloat(pcar + 0x140) + getfloat(pcar + 0x144) * getfloat(pcar + 0x144)); 
if(speed<1.8)
{
setfloat(pcar+0x140,  getfloat(pcar+0x140)-getfloat(pcar+0x4)*0.005); 
setfloat(pcar+0x144,  getfloat(pcar+0x144)+getfloat(pcar)*0.005);
}
}
else
{
setchar(0x9569B5A,  0xFF); 
setchar(0x9569B90,  0x04); 
setchar(0x9569B78,  0x0A,  0xD7,  0x23,  0x3C,  0x8F,  0xC2,  0xF5,  0x3C); 
setchar(0x9569B94,  0x62,  0x62,  0x6C); 
setchar(0x9569B85,  0x00); 
setchar(0x9569B5E,  0x60);
setchar(0x8BB3B5A,  0x80,  0x3F);
}
}
else
{
setchar(0x8BB3B5A,  0x80,  0x3F);
setchar(0x9569B5A,  0xFF); 
setchar(0x9569B90,  0x04); 
setchar(0x9569B78,  0x0A,  0xD7,  0x23,  0x3C,  0x8F,  0xC2,  0xF5,  0x3C); 
setchar(0x9569B94,  0x62,  0x62,  0x6C); 
setchar(0x9569B85,  0x00); 
setchar(0x9569B5E,  0x60);
}
#off 
setchar(0x9569B5A,  0xFF); 
setchar(0x9569B90,  0x04); 
setchar(0x9569B78,  0x0A,  0xD7,  0x23,  0x3C,  0x8F,  0xC2,  0xF5,  0x3C); 
setchar(0x9569B94,  0x62,  0x62,  0x6C); 
setchar(0x9569B85,  0x00); 
setchar(0x9569B5E,  0x60); 
setchar(0x9569C62,  0xFF); 
setchar(0x9569C98,  0x04); 
setchar(0x9569C9C,  0x80,  0x80,  0x80); 

#cheat Hikiwara tuned Cholo Sabre
pspawn = 0x08E81290;  
setint(pspawn,     265);  
setfloat(pspawn + 4,     -1041.73,     -761.80,     11.57,     90);
pspawn += 0x30;
setchar(0x9569b94,   0x66,   0xFF,   0x00);
setchar(pcar+0x224,  0x0,  0x0,  0x0);
setchar(pcar+0x228,  0x66,  0xFF,  0x00);
setshort(0x098F66E0,  'H',  'i',  'k',  'i',  'w',  'a',  'r',  'a',  ' ',  'S',  'a',  'b',  'r',  'e',  0);
setshort(pcar+0x3b6,   0,   0);
setfloat(pcar+0x450,   4,   2,   4);
setfloat(pcar+0x480,   4,   2,   4);
setfloat(pcar+0x4b0,   4,   2,   4);
setfloat(pcar+0x4e0,   4,   2,   4);

static rotation; 
if (rotation == 0)
{
rotation = 900;
}
spin = tan(rotation);
setfloat(pcar + 0x644,   spin,   spin,   spin,   spin);
rotation = rotation - 1;
if (rotation == 1)
{rotation = 900;}




if (buttons & CTRL_CROSS && !(buttons & CTRL_CIRCLE)) {

speed = sqrt(getfloat(pcar + 0x140) * getfloat(pcar + 0x140) + getfloat(pcar + 0x144) * getfloat(pcar + 0x144));

if(speed<1.8) {
setfloat(pcar+0x140,   getfloat(pcar+0x140)-getfloat(pcar+0x4)*0.005);
setfloat(pcar+0x144,   getfloat(pcar+0x144)+getfloat(pcar)*0.005);
}
}

if(buttons & CTRL_SQUARE && getshort(pcar+0x1c8)==0.5) setfloat(pcar+0x140,   0,   0);

max speed for NOS accelerate
if(speed<1.8) {
setfloat(pcar+0x140,   getfloat(pcar+0x140)-getfloat(pcar+0x4)*0.005);
setfloat(pcar+0x144,   getfloat(pcar+0x144)+getfloat(pcar)*0.005);
}
}
//Power Brake if vehicle is on ground
if(buttons & CTRL_SQUARE && getshort(pcar+0x1c8)==0.5) setfloat(pcar+0x140,   0,   0);

#cheat Car you are driving turns black...[TESTED]
setint(pcar + 0x00000224,  0);
setint(pcar + 0x00000228,  0);

#cheat Ghost Car
//by getdustin
//right trigger activates and left trigger deactivates
//Turning,  acceleration,  and breaking by Durka Durka Mahn
static Drivable;
if(buttons&CTRL_RTRIGGER)
{
setchar(pcar + 0x49,   81);
Drivable = 1;
}
if(buttons&CTRL_LTRIGGER)
{
setchar(pcar + 0x49,   82);
Drivable = 0;
}
if(Drivable)
{
setfloat(pcar+0x78,   -xstick / 40);
if (buttons & CTRL_CROSS) 
{
   boost = 0.5;
   thrust = boost * 0.00333;
   // velocity = velocity + forward vector * thrust
   setfloat(pcar + 0x0140,   getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);
   setfloat(pcar + 0x0144,   getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust); 
   setfloat(pcar + 0x0148,   getfloat(pcar + 0x0148) + getfloat(pcar + 0x0018) * thrust);
}  
if(buttons & CTRL_SQUARE)
{
  setfloat(pcar + 0x140,   getfloat(pcar + 0x140)*0.95,   getfloat(pcar + 0x144)*0.95 );
}
} 

#cheat Gradation of color
//By NRG500

static r;
static rPlus;
static v;
static vPlus;
static b;
static bPlus;

if(!r && !v && !b)
{
   r=255;
   v=0;
   b=0;
}

if(!rPlus  && !vPlus && !bPlus)
{
   rPlus = 0;
   vPlus = 1;
   bPlus = 1;
}


if(vPlus && !rPlus)
{
   v++;
   r--;

   if(v==255)
   {
      vPlus=0;
      rPlus=1;
   }
}
else if(bPlus && !vPlus)
{
   b++;
   v--;

   if(b==255)
   {
      bPlus=0;
      vPlus=1;
   }
}
else if(rPlus && !bPlus)
{
   r++;
   b--;

   if(r==255)
   {
      rPlus=0;
      bPlus=1;
   }
}

setchar(pcar+0x224,  r);
setchar(pcar+0x225,  v);
setchar(pcar+0x226,  b);

#cheat Submarine Vehicles
static UnderWater;
static Height;
if(getfloat(pcar + 0x38) < getfloat(0x96C96B0))
{
UnderWater = 1;
}
else
{
UnderWater = 0;
}

if(UnderWater)
{
setfloat(pcar+0x78,  -xstick / 40);
setfloat(pcar + 0x08,    0);
setfloat(pcar + 0x18,    0);
  if (buttons & CTRL_CROSS)
  {
     boost = 1.5;
     thrust = boost * 0.00333;

     // velocity = velocity + forward vector * thrust
     setfloat(pcar + 0x0140,  getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);
     setfloat(pcar + 0x0144,  getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust);
     setfloat(pcar + 0x0148,  getfloat(pcar + 0x0148) + getfloat(pcar + 0x0018) * thrust);
  }

if(ystick < -0.9)
{
setfloat(pcar + 0x00000148,  +0.1);
Height = getfloat(pcar + 0x38);
}
if(ystick > 0.9)
{
setfloat(pcar + 0x00000148,  -0.1);
Height = getfloat(pcar + 0x38);
}
setfloat(pcar + 0x38,  Height);
}

#cheat Lamborghini Doors
setfloat(pcar+0x450,  0,  -1.2566371,  0);
setfloat(pcar+0x480,  0,  -1.2566371,  0);
setfloat(pcar+0x4b0,  0,  -1.2566371,  0);
setfloat(pcar+0x4e0,  0,  -1.2566371,  0);

#cheat Money Counter is a Speed'O'Meter v. 2
static money;
static wasin;
if(!money) money = getint(0x08bde560);
if (pcar)
{
  wasin = true;
  speed = (sqrt(getfloat(pcar + 0x140) * getfloat(pcar + 0x140) + getfloat(pcar + 0x144) * getfloat(pcar + 0x144)))*100;
  setint(0x08bde55c,  speed,  speed);
  setchar(0x8BAEDB8,  '%',  'd',  0);
  setchar(0x8BAEDC0,  '%',  'd',  0);
}
else
{  if(wasin)
  {
  setchar(0x8BAEDB8,  '%',  '0',  '8',  'd',  '$',  0);
  setchar(0x8BAEDC0,  '$',  '%',  '0',  '8',  'd',  0);
  setint(0x08bde55c,  money,  money);
  wasin = false;
  }
  money = getint(0x08bde560);
}
#off
setint(0x08bde55c,  money,  money);
setchar(0x8BAEDB8,  '%',  '0',  '8',  'd',  '$',  0);
setchar(0x8BAEDC0,  '$',  '%',  '0',  '8',  'd',  0);
