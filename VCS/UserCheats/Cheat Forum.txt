#cheat Big Bumping Bouy
address = getint(0x9415ef8);
setfloat(address, cos(0)*cos(0));
setfloat(address+4, sin(0)*sin(0)*cos(0)-cos(0)*sin(0));
setfloat(address+8, cos(0)*sin(0)*cos(0)+sin(0)*sin(0));
setfloat(address+0x10, cos(0)*sin(0));
setfloat(address+0x14, sin(0)*sin(0)*cos(0)+cos(0)*cos(0));
setfloat(address+0x18, cos(0)*sin(0)*sin(0)-sin(0)*cos(0));
setfloat(address+0x20, -sin(0));
setfloat(address+0x24, sin(0)*cos(0));
setfloat(address+0x28, cos(0)*cos(0));
setfloat(address+0x30, -1077.40, 312.63, 11.26);
setshort(address+0x56, 0x214);

#cheat teleport to house on pole
teleport(873.01,186.58,13.80);

#cheat house on pole
moveto(907.29,-181.50,20.00); object(0x1CA4,90,0,78);
move(-2.53,-0.52,0.00); object(0x1CA4,90,0,78);
move(3.23,-3.85,0.00); object(0x1CA4,90,0,86);
move(-2.20,0.03,-0.10); object(0x1CA4,90,0,82);
move(4.88,0.50,0.00); object(0x1CA4,90,0,270);
move(-0.81,4.09,-0.10); object(0x1CA4,90,0,266);
move(1.25,0.10,0.00); object(0x1CA4,90,0,267);
move(1.35,-4.32,0.00); object(0x1CA4,90,0,270);
move(1.78,0.10,0.00); object(0x1CA4,90,0,271);
move(-0.41,3.60,0.00); object(0x1CA4,90,0,271);
move(1.17,0.64,0.00); object(0x1CA4,90,0,259);
move(-9.94,1.79,2.20); object(0x1CA4,85,270,270);
move(5.21,0.62,0.00); object(0x1CA4,85,270,270);
move(-3.59,1.03,-0.20); object(0x1CA4,85,270,82);
move(-3.67,-3.37,0.00); object(0x1CA4,85,270,22);
move(4.50,1.93,0.00); object(0x1CA4,85,270,103);
move(4.15,-0.22,0.00); object(0x1CA4,85,270,137);
move(2.13,-1.83,0.00); object(0x1CA4,85,270,165);
move(0.66,-2.30,0.00); object(0x1CA4,85,270,184);
move(-0.64,-2.57,0.00); object(0x1CA4,85,270,214);
move(-1.54,-2.04,0.00); object(0x1CA4,85,270,263);
move(-2.57,0.63,0.00); object(0x1CA4,85,270,271);
move(-2.70,-0.01,0.00); object(0x1CA4,85,270,274);
move(-0.71,7.72,0.00); object(0x1CA4,85,270,41);
move(-2.79,-2.90,0.00); object(0x1CA4,85,270,350);
move(-12.20,-5.05,-7.30); object(0x1CA4,90,210,170);
move(3.38,0.59,1.90); object(0x1CA4,90,210,170);
move(3.70,0.70,2.10); object(0x1CA4,90,210,170);
move(5.05,1.13,1.20); object(0x1CA4,90,190,166);
move(2.67,0.83,0.50); object(0x1CA4,90,190,171);
move(7.72,1.68,3.90); object(0x1CA4,90,180,179);
move(-0.71,-3.02,0.00); object(0x1CA4,90,180,213);
move(-2.50,-1.98,0.00); object(0x1CA4,90,180,250);
move(-3.13,-0.08,0.00); object(0x1CA4,90,180,287);
move(-3.54,5.18,0.00); object(0x1CA4,90,180,4);
move(0.91,2.51,0.00); object(0x1CA4,90,180,35);
move(2.75,1.92,0.00); object(0x1CA4,90,180,75);
move(3.05,-1.90,0.00); object(0x1CA4,90,180,121);
move(-2.80,-4.59,0.00); object(0x1CA4,90,180,118);
move(3.36,-0.22,0.00); object(0x1CA4,90,180,190);
move(-0.13,2.32,0.00); object(0x1CA4,90,180,163);
move(0.30,2.39,0.00); object(0x1CA4,90,180,145);
move(-3.21,-1.33,0.00); object(0x1CA4,90,180,119);
move(-1.57,0.56,0.00); object(0x1CA4,90,180,100);
move(-1.03,-2.27,0.00); object(0x1CA4,90,180,130);
move(1.55,-2.34,0.00); object(0x1CA4,90,180,163);
move(6.01,2.66,-3.80); object(0x1CB3,0,355,339);
move(0.15,-0.97,0.00); object(0x1CB3,0,355,3);
move(-4.09,-0.37,0.00); object(0x1CB5,0,355,79);
move(3.39,-3.43,1.50); object(0x1C91,0,355,17);
move(-6.49,7.27,0.70); object(0x0155,0,0,301);
move(2.58,-6.67,0.00); object(0x0151,0,0,174);
move(-0.91,-0.56,0.00); object(0x0150,0,0,193);
move(-0.85,0.06,0.00); object(0x014D,0,0,220);
move(2.82,-0.03,-0.30); object(0x01CB,0,0,169);
move(-4.69,6.39,-1.30); object(0x01CD,0,0,323);
move(6.00,-0.11,0.90); object(0x01FB,0,0,248);
move(-0.77,0.91,0.00); object(0x0201,0,0,261);
move(-7.14,-2.20,0.20); object(0x0264,0,0,248);

#cheat jump in the air to do a headspin otherwise just randomly spin around!
setchar(pplayer + 0x000001CA, 60);

#cheat infinite time outside of vehicle in taxi missions!
setchar(0x08BF9970, 45);

#cheat Spawn Teargas Pickup at the Compound
setchar(0x8C6A171, 0x00); 
setchar(0x8C6A172, 0x87);
setchar(0x8C6A175, 0x9D);
setchar(0x8C6A176, 0xAE);
setchar(0x8C6A17A, 0x34);
setchar(0x8C6A17B, 0x41);
setchar(0x8C6A19C, 0x0A);
setchar(0x8C6A1A4, 0x57);
setchar(0x8C6A1A6, 0x02);
setchar(0x8C6A1A8, 0x02);
setchar(0x8C6A1A9, 0x00);
setshort(0x991C280+0x56,0x157);
off()
#cheat Buyable Rocket Launcher at the Compound
setchar(0x8C69FB1, 0xAE); 
setchar(0x8C69FB2, 0x85);
setchar(0x8C69FB5, 0x0F);
setchar(0x8C69FB6, 0x9F);
setchar(0x8C69FBA, 0x35);
setchar(0x8C69FBB, 0x41);
setchar(0x8C69FDC, 0x08);
setchar(0x8C69FE4, 0x67);
setchar(0x8C69FE6, 0x02);
setchar(0x8C69FE8, 0x01);
setchar(0x8C69FE9, 0x01);
off()

#cheat Doesn't work
setchar(0x8C6A171, 37);
setchar(0x8C6A172, -1094);
setchar(0x8C6A175, 42);
setchar(0x8C6A176, 311);
setchar(0x8C6A17A, 18);
setchar(0x8C6A17B, 11);

#cheat Pickup Spawn above Vic
setfloat(0x08C6A17, getfloat(pplayer+0x30), getfloat(pplayer+0x34), getfloat(pplayer+0x38));
setint(0x08C6A19C, 100); // Amount of ammo for the pickup (Set to FF for non weapon pickups)
setchar(0x08C6A1A4, 0x57); // Object ID
setchar(0x08C6A1A6, 0x02); // Don't know what it's for (Goes up each time you collect it)
setchar(0x08C6A1A8, 0x02); // Pickup Type (01 = Buyable; 02 = One Time; 03 = Respawning)
setchar(0x08C6A1A9, 0x00); // 00 = Pickup spawns; 01 = Pickup won't spawn

#cheat Counter
static count;
if(count%600==0){
setshort(0x08e90DD8, 1, '!', 0);
setchar(0x08E937B5, 0x01);}
count++;

#cheat turquoise exhaust
//by vettefan
//not as bright and vibrant of a change as in LCS but it's still noticable
setchar(0x9569b94, 0x00, 0xff, 0xff);

#cheat Locked Car Doors
//Ported from theY4Kman's version for LCS.
setshort(pcar+0x232, 0x0101);
#off
setshort(pcar+0x232, 0);

#cheat bounce
BounceAmount = 0.8;
rot = getfloat(0x09fc73f0);
setfloat(pplayer + 0x4E4, 150.0);//health
if(getshort(pplayer+0x1C8)!=0x1020) { 
setfloat(pplayer+0x148,BounceAmount); 
setshort(pplayer+0x1c8, 0x1020);

#cheat Spin Car
setchar(pcar + 0x5C3, 0xFF);

#cheat bounce ped
BounceHeight = 0.4;
static add;
pped = getint(0x08BA1D70);
if(pped) 
add = pped;
if(add) {
pedfly = getshort(add+0x1c8);
if(pedfly!=0x1020) {
setshort(add+0x1c8, 0x1020);
setfloat(add+0x148, BounceHeight);}}

#cheat cheat 44=drown
setchar(0x98B52F4, 44);

#cheat cheat 43=???
setchar(0x98B52F4, 43);

#cheat cheat 40=arm
setchar(0x98B52F4, 40);

#cheat cheat 32=coca
setchar(0x98B52F4, 32);

#cheat cheat 2C=FTLL
setchar(0x98B52F4, 2C);

#cheat cheat 16=aim
setchar(0x98B52F4, 16);

#cheat cheat 11=F/aim?
setchar(0x98B52F4, 11);

#cheat cheat 10=shoot
setchar(0x98B52F4, 10);

#cheat Change Money v2
20000 >= val >= 1000val == 1000money = getint(0x08bde55c);{
if ((pressslow & CTRL_LTRIGGER)&&(pressslow & CTRL_RIGHT));
val + 1000}
{
if ((pressslow & CTRL_LTRIGGER)&&(pressslow & CTRL_LEFT));
val - 1000}
{
if ((pressslow & CTRL_LTRIGGER)&&(pressslow & CTRL_CROSS));
val*2}
{
if ((pressslow & CTRL_LTRIGGER)&&(pressslow & CTRL_UP));
(money + val);}
{
if ((pressslow & CTRL_LTRIGGER)&&(pressslow & CTRL_DOWN));
(money - val);}

#cheat Car goes flipping everytime you press /\
if(press & CTRL_UP)
{
setfloat(pcar + 0x0000010B, +1B);
}

#cheat Fast Clock
setchar(0x08bb2db4, 1);
#off
setchar(0x08bb2db4, 0);
#cheat Peds Have Weapons
setchar(0x08baef2c, 1);
#off
setchar(0x08baef2c, 0);
#cheat Invisible Traffic
setchar(0x08bb2450, 1);
#off
setchar(0x08bb2450, 0);
#cheat Perfect Traction, Down=Car Hop
setchar(0x08bb2452, 1);
#off
setchar(0x08bb2452, 0);
#cheat Black Traffic
setchar(0x08bb10d4, 1);
#off
setchar(0x08bb10d4, 0);
#cheat White Traffic
setchar(0x08bb10d5, 1);
#off
setchar(0x08bb10d5, 0);
#cheat Aggressive Drivers
setchar(0x08bb32c8, 1);
#off
setchar(0x08bb32c8, 0);
#cheat All Green Lights
setchar(0x08bafd80, 1);
#off
setchar(0x08bafd80, 0);
#cheat Bobble Head World
setchar(0x08bacdf7, 1);
#off
setchar(0x08bacdf7, 0);
#cheat Guys Follow You
setchar(0x08bacdf5, 1);
#off
setchar(0x08bacdf5, 0);

#cheat The Force UDS
//Thanks to waterbottle for ped pointer.
//Thanks to Edison Carter for these Cheats.
pped = getint(0x08BA1D70);
if (pped != 0){
//Force Pull
if(buttons & CTRL_DOWN){ 
dx = getfloat(pped + 0x0030) - getfloat(pplayer + 0x0030); 
dy = getfloat(pped + 0x0034) - getfloat(pplayer + 0x0034); 
dz = getfloat(pped + 0x0038) - getfloat(pplayer + 0x0038); 
setshort(pped + 0x01c8, 0x1020); 
setfloat(pped + 0x0140, -dx * 0.05); 
setfloat(pped + 0x0144, -dy * 0.05); 
setfloat(pped + 0x0148, -dz * 0.05);}
// Force Push
if (buttons & CTRL_UP){ 
dx = getfloat(pped + 0x0030) - getfloat(pplayer + 0x0030); 
dy = getfloat(pped + 0x0034) - getfloat(pplayer + 0x0034); 
setshort(pped + 0x01c8, 0x1020); 
setfloat(pped + 0x0140, dx * 0.2); 
setfloat(pped + 0x0144, dy * 0.2); 
setfloat(pped + 0x0148, (fabs(dx) + fabs(dy)) * 0.05);}
//Force Choke
if(buttons & CTRL_SQUARE) 
setfloat(pped + 0x4e4, 0);}

#cheat Cheat Enable 8 - (not a regular cheat)
setchar(0x08bb2456, 1);
#off
setchar(0x08bb2456, 0);

#cheat 200% bonuses
//by vettefan
//unlocks the ability to watch the cutscenes at your safehouse.
setfloat(0x08BB3CF0, 500);

#cheat 100% bonuses
//by vettefan
//unlocks the ability to watch the cutscenes at your safehouse.
setfloat(0x08BB3CF0, 250);

#cheat 50% bonuses
//by vettefan
//unlocks the ability to watch the cutscenes at your safehouse.
setfloat(0x08BB3CF0, 125);

#cheat 25% bonuses
//by vettefan
//unlocks the ability to watch the cutscenes at your safehouse.
setfloat(0x08BB3CF0, 62.5);

#cheat 12.5% bonuses
//by vettefan
//unlocks the ability to watch the cutscenes at your safehouse.
setfloat(0x08BB3CF0, 31.25);

#cheat water everywhere
// water everywhere
if (getchar(0x954A000) != 0){   
for (p = 0x9549D80; p < 0x954E580; p++)       
setchar(p, 0x00);}

#cheat Replace Reni Radar Blip with 'V'
//by vettefan
//it should replace the 'R' representing Reni on the radar with a 'V' representing vettefan
setchar(0x96cda40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00);
setchar(0x96cda50, 0x10, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11);
setchar(0x96cda60, 0x10, 0x11, 0x01, 0x00, 0x00, 0x00, 0x11, 0x11);
setchar(0x96cda70, 0x10, 0x11, 0x01, 0x00, 0x00, 0x10, 0x11, 0x01);
setchar(0x96cda80, 0x00, 0x11, 0x11, 0x00, 0x00, 0x11, 0x11, 0x00);
setchar(0x96cda90, 0x00, 0x11, 0x11, 0x00, 0x00, 0x11, 0x11, 0x00);
setchar(0x96cdaa0, 0x00, 0x11, 0x11, 0x00, 0x10, 0x11, 0x01, 0x00);
setchar(0x96cdab0, 0x00, 0x10, 0x11, 0x01, 0x10, 0x11, 0x01, 0x00);
setchar(0x96cdac0, 0x00, 0x10, 0x11, 0x01, 0x11, 0x11, 0x00, 0x00);
setchar(0x96cdad0, 0x00, 0x00, 0x11, 0x01, 0x11, 0x11, 0x00, 0x00);
setchar(0x96cdae0, 0x00, 0x00, 0x11, 0x01, 0x11, 0x01, 0x00, 0x00);
setchar(0x96cdaf0, 0x00, 0x00, 0x11, 0x11, 0x11, 0x01, 0x00, 0x00);
setchar(0x96cdb00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x00, 0x00, 0x00);
setchar(0x96cdb10, 0x00, 0x00, 0x10, 0x11, 0x01, 0x00, 0x00, 0x00);
setchar(0x96cdb20, 0x00, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x00);
setchar(0x96cdb30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00);
setchar(0x96cdb40, 0x00, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0xff);
off();

#cheat begining
setchar(pplayer+0x4C, 0x10, 0x20);
setshort(0x08e90bd8, 1, 'R', '+', 'U', '=', 'L', 'e', 'a', 'v', 'e', ' ', 'R', '+', 'D', '=', 'R', 'e', 't', 'u', 'r', 'n', ' ', 'L', 'e', 'f', 't', '/', 'R', 'i', 'g', 'h', 't', '=', 'T', 'o', 'g', 'g', 'l', 'e', ' ', 'c', 'a', 'm', 0);
if (press & CTRL_RTRIGGER&&press & CTRL_UP)
setchar(pplayer+0x8B4, 0x36);
setshort(0x08e90bd8, 0, 0);

#cheat begining 2
setchar(pplayer+0x4C, 0x10, 0x20);
setshort(0x08e90bd8, 1, 'R', '+', 'U', '=', 'L', 'e', 'a', 'v', 'e', ' ', 'R', '+', 'D', '=', 'R', 'e', 't', 'u', 'r', 'n', ' ', 'L', 'e', 'f', 't', '/', 'R', 'i', 'g', 'h', 't', '=', 'T', 'o', 'g', 'g', 'l', 'e', ' ', 'c', 'a', 'm', 0);
if (press & CTRL_RTRIGGER&&press & CTRL_UP){
setchar(pplayer+0x8B4, 0x36);
setshort(0x08e90bd8, 0, 0);}

#cheat begining 3
text = 1;
setchar(pplayer+0x4C, 0x10, 0x20);
if(text == 1){
setshort(0x08e90bd8, 1, 'R', '+', 'U', '=', 'L', 'e', 'a','v', 'e', ' ', 'R', '+', 'D', '=', 'R', 'e', 't', 'u', 'r','n', ' ', 'L', 'e', 'f', 't', '/', 'R', 'i', 'g', 'h', 't', '=','T', 'o', 'g', 'g', 'l', 'e', ' ', 'c', 'a', 'm', 0);}
if (press & CTRL_RTRIGGER&&press & CTRL_UP){
setchar(pplayer+0x8B4, 0x36);
setshort(0x08e90bd8, 0, 0);
text == 0}

#cheat unknown cheat
moveto(-814.43,-1269.05,34.06);  object(0x1C87,0,0,11);
move(9.90,-12.38,3.10);  object(0x1C87,0,0,11);
move(15.70,56.94,-1.50);  object(0x1C87,0,0,353);
move(0.00,0.00,0.00);  object(0x1C87,0,0,353);
move(-0.82,7.00,0.00);  object(0x1C87,0,0,353);
move(-0.84,7.15,0.00);  object(0x1C87,0,0,353);
move(-0.80,6.85,0.00);  object(0x1C87,0,0,353);
move(-3.28,3.54,0.00);  object(0x1C87,0,0,321);
move(-2.40,-2.43,0.00);  object(0x1C87,0,0,282);
move(19.09,-6.37,-1.40);  object(0x1C87,0,0,177);
move(0.00,0.00,0.00);  object(0x1C87,0,0,177);

#cheat Text dissapears
text = 1;
setchar(pplayer+0x4C, 0x10, 0x20);
if(text == 1){
setshort(0x08e90bd8, 1, 'R', '+', 'U', '=', 'L', 'e', 'a','v', 'e', ' ', 'R', '+', 'D', '=', 'R', 'e', 't', 'u', 'r','n', ' ', 'L', 'e', 'f', 't', '/', 'R', 'i', 'g', 'h', 't', '=','T', 'o', 'g', 'g', 'l', 'e', ' ', 'c', 'a', 'm', 0);}
if (press & CTRL_RTRIGGER&&press & CTRL_UP){
setchar(pplayer+0x8B4, 0x36);
setshort(0x08e90bd8, 0, 0);
text == 0}

#cheat TEST2
static fInit;
if (!fInit){
fInit = true;
setshort(0x08E90BD8, 1, 'R', '+', 'U', '=', 'L', 'e', 'a', 'v', 'e', ' ', 'v', 'e', 'h', 'i', 'c', 'l', 'e', ' ', '-', ' ', 'R', '+', 'D', '=', 'R', 'e', 't', 'u', 'r', 'n', ' ', '-', ' ', 'L', 'e', 'f', 't', '/', 'R', 'i', 'g', 'h', 't', '=', 'T', 'o', 'g', 'g', 'l', 'e', ' ', 'c', 'a', 'm', 0);}
setchar(pplayer+0x4C, 0x10, 0x20);
if (press & CTRL_RTRIGGER&&press & CTRL_UP){
setchar(pplayer+0x8B4, 0x36);
setshort(0x08E90BD8, 0, 0);}
if (press & CTRL_RTRIGGER&&press & CTRL_DOWN)
setchar(pplayer+0x8B4, 0x37);
if (press & CTRL_LEFT)
setchar(pplayer+0x8B4, 0x07);
if (press & CTRL_RIGHT)
setchar(pplayer+0x8B4, 0x12);
#off
setchar(pplayer+0x4C, 0x00, 0x00);

#cheat Spawn Car in 1st Garage
setint(0x08C739B0, 171);
#cheat Spawn Car in 2nd Garage
setint(0x8C73A70, 171);
#cheat Spawn Car in 3rd Garage
setint(0x8C73B30, 171);

#cheat address test
code not found 501
setchar(0x09436ED0,code);

#cheat Jive Drive
setchar(0x0943DCB0, 1);

#cheat address spawn
setchar(0x0945EDA0, 0);

#cheat Money: No Dollar Sign
setchar(0x8BAEDB8, '%', '0', '9', 'd', 0);
setchar(0x8BAEDC0, '%', '0', '9', 'd', 0);
#off
setchar(0x8BAEDB8, '%', '0', '8', 'd', '$', 0);
setchar(0x8BAEDC0, '$', '%', '0', '8', 'd', 0);
#cheat Money: Just The Number
setchar(0x8BAEDB8, '%', 'd', 0);
setchar(0x8BAEDC0, '%', 'd', 0);
#off
setchar(0x8BAEDB8, '%', '0', '8', 'd', '$', 0);
setchar(0x8BAEDC0, '$', '%', '0', '8', 'd', 0);

#cheat Money Counter is a Speed'O'Meter (Extra)=2023 year
if (pcar){   
speed = (sqrt(getfloat(pcar + 0x140) * getfloat(pcar + 0x140) + getfloat(pcar + 0x144) * getfloat(pcar + 0x144)))*6600;   
setint(0x08bde55c, speed, speed);   
setchar(0x8BAEDB8, '%', 'd', 0);   
setchar(0x8BAEDC0, '%', 'd', 0);}
else{   
setint(0x08bde55c, 999999, 999999);   
setchar(0x8BAEDB8, 0);   
setchar(0x8BAEDC0, 0);}
#off
setint(0x08bde55c, 999999, 999999);
setchar(0x8BAEDB8, '%', '0', '8', 'd', '$', 0);
setchar(0x8BAEDC0, '$', '%', '0', '8', 'd', 0);

#cheat always display message
setshort(0x08e90bd8, 1);

#cheat Car Stunts (Hold O and use analog) Faster (2023)
if(xstick < -0.9&&buttons & CTRL_CIRCLE){
setfloat(pcar + 0x78,  +10);}
if(xstick > 0.9&&buttons & CTRL_CIRCLE){
setfloat(pcar + 0x78,  getfloat(pcar + 0x78)-2);}

#cheat Stunt Car Mode (older 1993)
if (getchar(pcar+0x75c)==0){
setchar(0x8bc7f14, 3);
setfloat(0x8bc7f24, 0);
setchar(0x8bc7f41, 0);
setfloat(pcar+0x70, -ystick/10);
setfloat(pcar+0x74, -xstick/10);
if (buttons & CTRL_LTRIGGER)
setfloat(pcar+0x78, 0.1);
if (buttons & CTRL_RTRIGGER)
setfloat(pcar+0x78, -0.1);}

#cheat Stretch at The Clymenus Suite
//nerner tribute (lol)
//Created By Sunshine Customs
// modded by 30p5jla/fairycake94
setint(0x8C73B30, 228); //Car Id
setchar(0x8C73B30+0x24, 1,1,1, 255); //Color 1
setchar(0x8C73B30+0x28, 1,1,1, 255); //Color2
setshort(0x98a334e, 1, 'N','e','r','n','e','r',' ','M','o','b','i','l','e', 0);
//Wheels
setfloat(0x93679D8, 0.85, 0.75); //wheel size
setfloat(0x96319e0+0x6c, 0.8); //Traction Multiplier
setfloat(0x96319e0+0xc4, 0.6); //Traction Loss
setfloat(0x96319e0+0x70, 0.5); //Traction Bias
//Engine
setchar(0x96319e0+0x5c, '4', 'P', 6); // Drive type / Engine type / Gears
//Suspension
setfloat(0x96319e0+0x7c, 0.35); //Suspension Upper Limit
setfloat(0x96319e0+0x80, -0.2); //Suspension Lower Limit
setfloat(0x96319e0+0x78, 0.07); //Suspension Damping Level
setfloat(0x96319e0+0x74, 1.1); //Suspension Force Level
setfloat(0x96319e0+0x84, 0.5); //Suspension Bias
setfloat(0x96319e0+0x88, 0); //Anti-Dive Multiplier
//Handling
setfloat(0x96319e0+0x68, 30); //Steering Lock
setfloat(0x96319e0+0xbc, 2200); //Vehilce Mass
setfloat(0x96319e0+0xc0, 10000); //Turn Mass
setfloat(0x96319e0+0xa0, 0); //Centre of Mass - X
setfloat(0x96319e0+0xa4, 0); //Centre of Mass - Y
setfloat(0x96319e0+0xa8, -0.15); //Centre of Mass - Z
//Neon
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, 0, 255, 0);}
//Teleport
teleport( 268.31, -174.98, 11.50);
off();

#cheat Spawn Supercar
//Basics
setint(0x8C73B30, 171); //Car Id
setchar(0x8C73B30+0x24, 255,20, 100); //Color 1
setchar(0x8C73B30+0x28, 90,5,30, 255); //Color2
setshort(0x98a30e2, 1, 'S','u','p','e','r','c','a','r',0);
//Wheels
setfloat(0x935E438, 1.4, 1.4); //wheel size
setfloat(0x962eb20+0x6c, 1.2); //Traction Multiplier
setfloat(0x962eb20+0xc4, 1); //Traction Loss
setfloat(0x962eb20+0x70, 0.8); //Traction Bias
//Engine
setchar(0x962eb20+0x5c, '9', '560', 26); // Drive type / Engine type / Gears
//Suspension
setfloat(0x962eb20+0x7c, 0.3); //Suspension Upper Limit
setfloat(0x962eb20+0x80, -0.3); //Suspension Lower Limit
setfloat(0x962eb20+0x78, 0.3); //Suspension Damping Level
setfloat(0x962eb20+0x74, 1.4); //Suspension Force Level
setfloat(0x962eb20+0x84, 0.7); //Suspension Bias
setfloat(0x962eb20+0x88, 0.7); //Anti-Dive Multiplier
//Handling
setfloat(0x962eb20+0x68, 35); //Steering Lock
setfloat(0x962eb20+0xbc, 70000); //Vehilce Mass
setfloat(0x962eb20+0xc0, 80000); //Turn Mass
setfloat(0x962eb20+0xa0, 0); //Centre of Mass - X
setfloat(0x962eb20+0xa4, 0); //Centre of Mass - Y
setfloat(0x962eb20+0xa8, 0); //Centre of Mass - Z
//Neon
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon,  255, 255, 255);}
//Teleport
teleport( 268.31, -174.98, 11.50);
off();

#cheat Supercar
if(pcar)
setshort(0x08BF81FE, 'S', 'u', 'p', 'e', 'r', 'c', 'a', 'r', 0);
setshort(0x08BA09CC, 1, 'C', 'o', 'n', 't', 'r', 'o', 'l', 'c', 'a', 'r', ':', ' ', 'D', '=', 'J', 'u', 'm', 'p', ' ', '~', 'O', '~', '=', 'N', 'o', 's', ' ', 'U', '=', 'l', 'o', 'c', 'k', 'D', ' ', '~', 'O', '~', '&', 'S', '=', 'F', 'a', 's', 't', ' ', 'R', '=', 'S', 't', 'u', 'n', 't', ' ', 'a', ' ', 'l', 'o', 't', ' ', 'F', 'u', 'n', '!', 0);
ID = getshort(pcar+0x56);
if(ID == 171){
setchar(0x08bb2452, 1);
if(press & CTRL_DOWN){
setfloat(pcar + 0x00000148,  +0.8);
boost = 1.5;
thrust = boost * 0.01;
setfloat(pcar + 0x0140,  getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);
setfloat(pcar + 0x0144,  getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust);}
setfloat(pcar+0x450, 0, -1.2566371, 0);
setfloat(pcar+0x480, 0, -1.2566371, 0);
setfloat(pcar+0x4b0, 0, -1.2566371, 0);
setfloat(pcar+0x4e0, 0, -1.2566371, 0);
setshort(pcar+0x3b6, 0, 0);
if(buttons & CTRL_CIRCLE) {
speed = 0.0;
if(getfloat(pcar+0x140)>0){
speed+=getfloat(pcar+0x140);}
else{
speed-=getfloat(pcar+0x140);}
if(getfloat(pcar+0x144)>0){
speed+=getfloat(pcar+0x144);}
else{
speed-=getfloat(pcar+0x144);}
if(speed<175/75){
setfloat(pcar+0x140, getfloat(pcar+0x140)-getfloat(pcar+0x4)*0.005);
setfloat(pcar+0x144, getfloat(pcar+0x144)+getfloat(pcar)*0.005);}}
if(press & CTRL_UP){
setshort(pcar+0x232, getshort(pcar+0x232) ^ 0x0101);}
if((press & CTRL_CIRCLE && press & CTRL_SQUARE)){
setfloat(pcar+0x140, getfloat(pcar+0x140)+getfloat(pcar+0x10)+0.1);
setfloat(pcar+0x144, getfloat(pcar+0x144)+getfloat(pcar+0x14)+0.1);}
if(buttons&CTRL_RTRIGGER){
setfloat(pcar+0x70, ystick * getfloat(pcar) / 8);
setfloat(pcar+0x74, ystick * getfloat(pcar+4) / 8);
setfloat(pcar+0x78, -xstick / 8);}
static rotation; 
if (rotation == 0)
{
rotation = 360;
}
spin = tan(rotation);
setfloat(pcar + 0x644, spin, spin, spin, spin);
rotation = rotation - 1;
if (rotation == 1)
{rotation = 360;}
static Drivable;
if(buttons&CTRL_RIGHT)
{
setchar(pcar + 0x49,  81);
Drivable = 1;
}
if(buttons&CTRL_LEFT)
{
setchar(pcar + 0x49,  82);
Drivable = 0;
}
static UnderWater;
static Height;
if(getfloat(pcar + 0x38) < getfloat(0x96C96B0))
{
UnderWater = 1;
}
else
{
UnderWater = 0;
}

if(UnderWater)
{
setfloat(pcar+0x78, -xstick / 40);
setfloat(pcar + 0x08,   0);
setfloat(pcar + 0x18,   0);
  if (buttons & CTRL_CROSS)
  {
     boost = 1.5;
     thrust = boost * 0.00333;

     // velocity = velocity + forward vector * thrust
     setfloat(pcar + 0x0140, getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);
     setfloat(pcar + 0x0144, getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust);
     setfloat(pcar + 0x0148, getfloat(pcar + 0x0148) + getfloat(pcar + 0x0018) * thrust);
  }

if(ystick < -0.9)
{
setfloat(pcar + 0x00000148, +0.1);
Height = getfloat(pcar + 0x38);
}
if(ystick > 0.9)
{
setfloat(pcar + 0x00000148, -0.1);
Height = getfloat(pcar + 0x38);
}
setfloat(pcar + 0x38, Height);
}
#off
setshort(pcar+0x232, 0);

#cheat unknown cheat
if (press & CTRL_NOTE){
setchar(0x9A63413, 0x02);//radar
setchar(0x9A63418, 0x00);//hud
}

#cheat Ring of Peds
count = 0;
for(add = 0x08E78C90; 
(ped = getint(add)); add+=0x4)   
if(ped != 0x098b4a40 && !getint(ped+0x480))       
count++;count2 = 0;
for(add = 0x08E78C90; (ped = getint(add)) && count2 < count; add+=0x4)   
if(ped != 0x098b4a40 && !getint(ped+0x480)){       
setfloat(ped + 0x30, getfloat(pobj+0x30) + 2*count*cos(360/count*count2),                            
getfloat(pobj+0x34) + 2*count*sin(360/count*count2)                            
getfloat(pobj+0x38));       
setfloat(ped + 0x140, 0, 0, 0);       
setfloat(ped + 0x70, 0, 0, 0);	       
count2++;}

#cheat Car Jumping Counter
static old;
static score; 
new = getint(pplayer+0xf0); 
if(new >= 0x098edcc0 && new <= 0x099019a0){   
if(new != old){   
old = new;   
score++;}}
else
score = old = 0;
setshort(0x08e90bd8, 1);      
int = score;      
size = 0;      
for(i = 1; i <= int; i*=10) size+=2;      
if(int == 0) 
setshort(0x08e90bda, '0');      
for(i = 0; int > 0; i+=2 ){      
setshort(0x08e90bd8+size-i, '0' + (int % 10));      
int = int(int/=10);}      
setshort(0x08e90bda+size, 0);

#cheat works
setfloat(pcar+0x78,  -xstick / 40); 
if (buttons & CTRL_CROSS){    
boost = 1.5;    
thrust = boost * 0.00333;    
// velocity = velocity + forward vector * thrust    
setfloat(pcar + 0x0140,  getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);    
setfloat(pcar + 0x0144,  getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust);    
setfloat(pcar + 0x0148,  getfloat(pcar + 0x0148) + getfloat(pcar + 0x0018) * thrust);} 

#cheat Ass
if(buttons & CTRL_SQUARE){
setfloat(pcar + 0x140,  getfloat(pcar + 0x140)*0.95,  getfloat(pcar + 0x144)*0.95);} 

#cheat Firecaster
static pped;
pped = getint(0x08BA1D70);
if (pped && !getchar(pplayer+0xCB8) && buttons & CTRL_CIRCLE){
setchar(0x08be3a20, 1);
setfloat(0x08be3a30, getfloat(pped+0x30), getfloat(pped+0x34), getfloat(pped+0x38));
setfloat(pped+0x4e4, 0);}

#cheat sideways tires
setfloat(pcar+0x6a8, 3);

#cheat Hood Surfer
if(getint(pcar + 0x150)){
surfee = getint(pcar + 0x150);
if(getshort(surfee + 0x56) > 150&&getshort(surfee + 0x56) < 279){
setfloat(pcar + 0x30, getfloat(surfee + 0x30));
setfloat(pcar + 0x34, getfloat(surfee + 0x34));
setfloat(pcar + 0x38, getfloat(surfee + 0x38) + 2.5);
setfloat(pcar + 0x00, getfloat(surfee), getfloat(surfee+4), getfloat(surfee+8));
setfloat(pcar+0x10, getfloat(surfee+0x10), getfloat(surfee+0x14), getfloat( surfee+0x18));
setfloat(pcar+0x20, getfloat(surfee+0x20), getfloat(surfee+0x24), getfloat( surfee+0x28));}}

#cheat Grapple Gun PLUS (2021)
static grapplespeed;
aimx = getfloat(pplayer + 0x30) - getfloat(0x08ba1d50);
aimy = getfloat(pplayer + 0x34) - getfloat(0x08ba1d54);
aimz = getfloat(pplayer + 0x38) - getfloat(0x08ba1d58); 
if(buttons & CTRL_RTRIGGER&&buttons & CTRL_CROSS){   
setshort(pplayer + 0x01c8,   0x1020);   
setfloat(pplayer + 0x0140,   -aimx * grapplespeed);   
setfloat(pplayer + 0x0144,   -aimy * grapplespeed);   
setfloat(pplayer + 0x0148,   -aimz * grapplespeed);}
if(buttons & CTRL_LTRIGGER){
grapplespeed = 0.1;}
else{
grapplespeed = 0.05;}

#cheat Change Any Object Vic gets Near into a Ramp!
add = getint(0x0994f460);
setshort(add + 0x56, 0x28e);

#cheat Object Spawn Test
obj = 0x0991B180;
setfloat(obj + 0x30, 273.15, -178.45, 11.22);
setshort(obj + 0x56, 0x2a5);

#cheat setshort(0x08B8EB08, 255);
setshort(0x08B8EB08, 255);
#cheat setchar(0x08B8EB04, 255);
setchar(0x08B8EB04, 255);
#cheat setchar(0x08B8EB0C, 255);
setchar(0x08B8EB0C, 255);
#cheat setchar(0x08B8EB00, 255);
setchar(0x08B8EB00, 255);
#cheat setchar(0x08B8EB10, 255);
setchar(0x08B8EB10, 255);
#cheat setchar(0x08B8EB14, 255);
setchar(0x08B8EB14, 255);
#cheat setchar(0x08B8EB18, 255);
setchar(0x08B8EB18, 255);
#cheat setchar(0x08B8EB1C, 255);
setchar(0x08B8EB1C, 255);
#cheat setchar(0x08B8EAFC, 255);
setchar(0x08B8EAFC, 255);
#cheat setfloat(0x08C62FC8, 30);
setfloat(0x08C62FC8, 30);
#cheat setfloat(0x08C62FC0, 30);
setfloat(0x08C62FC0, 30);
#cheat setfloat(0x08C62FC4, 30);
setfloat(0x08C62FC4, 30);
#cheat setfloat(0x08C62FCC, 30);
setfloat(0x08C62FCC, 30);
#cheat setfloat(0x08C62FC8, 10);
setfloat(0x08C62FC8, 10);
#cheat setfloat(0x08C62F90, 30);
setfloat(0x08C62F90, 30);
#cheat setfloat(0x08C62F94, 30);
setfloat(0x08C62F94, 30);
#cheat setfloat(0x08C62FA0, 30);
setfloat(0x08C62FA0, 30);
#cheat setfloat(0x08C62FA4, 30);
setfloat(0x08C62FA4, 30);
#cheat setfloat(0x08C62F78, 30);
setfloat(0x08C62F78, 30);
#cheat setfloat(0x08C62F6C, 30);
setfloat(0x08C62F6C, 30);
#cheat setfloat(0x08C62FFC, 30);
setfloat(0x08C62FFC, 30);
#cheat setfloat(0x08C63008, 30);
setfloat(0x08C63008, 30);
#cheat setfloat(0x08C62EA8, 30);
setfloat(0x08C62EA8, 30);
#cheat setfloat(0x08C62EF0, 30);
setfloat(0x08C62EF0, 30);

#cheat GUNFIRE----------
setint(pplayer + 0x000008B4,   2000);  
#cheat GUNFIRE---------
setint(pplayer + 0x000008B4,   1000);  
#cheat GUNFIRE--------
setint(pplayer + 0x000008B4,   500);  
#cheat GUNFIRE-------
setint(pplayer + 0x000008B4,   200);  
#cheat GUNFIRE------
setint(pplayer + 0x000008B4,   100);  
#cheat GUNFIRE-----
setint(pplayer + 0x000008B4,   50);  
#cheat GUNFIRE----
setint(pplayer + 0x000008B4,   20);  
#cheat GUNFIRE---
setint(pplayer + 0x000008B4,   10);  
#cheat GUNFIRE--
setint(pplayer + 0x000008B4,   5);  
#cheat GUNFIRE-
setint(pplayer + 0x000008B4,   2);  
#cheat GUNFIRE
setint(pplayer + 0x000008B4,   1);  
#cheat GUNFIRE+
setint(pplayer + 0x000008B4,   0.5);  
#cheat GUNFIRE++
setint(pplayer + 0x000008B4,   0.2);  
#cheat GUNFIRE+++
setint(pplayer + 0x000008B4,   0.1);  
#cheat GUNFIRE++++
setint(pplayer + 0x000008B4,   0.05);  
#cheat GUNFIRE+++++
setint(pplayer + 0x000008B4,   0.02);  
#cheat GUNFIRE++++++
setint(pplayer + 0x000008B4,   0.01);  
#cheat GUNFIRE+++++++
setint(pplayer + 0x000008B4,   0.005);  
#cheat GUNFIRE++++++++
setint(pplayer + 0x000008B4,   0.002);  
#cheat GUNFIRE+++++++++
setint(pplayer + 0x000008B4,   0.001);  
#cheat GUNFIRE++++++++++
setint(pplayer + 0x000008B4,   0.0005); 

#cheat Minigun has 999 shots per clip
setint(0x096001C4, 0x3e7);

#cheat "Megaman"
setshort(0x09600210, 0x1DB);
setchar(0x096001F0, 0x15);

#cheat ummer
setshort(0x098A3258, 'h','u','m','m','e','r');
#cheat idiot
setshort(0x098A31D0, 'i', 'd', 'i', 'o', 't');

#cheat button test
if (getint(0x08bde6b8) == 843854162){
setint(0x08bde55c,  9999999,  9999999);}

#cheat Hello World! On Screen
//Made with DDM's Text Editor
setshort(0x08e90bd8, 1, 'H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd', '!', 0);

#cheat Blue Laser Exhaust
setchar(0x9569B90,  0x70,  0x00,  0x00,  0x00,  0x0f,  0x5f,  0xff,  0x00); 
setchar(0x9569Ba7,  0x50); 
#cheat Mega Green  Laser Exhaust
setchar(0x9569B90,  0x78,  0x00,  0x00,  0x00,  0x00,  0xff,  0x00); 
setchar(0x9569BA7,  0xc5); 

#cheat Hit Down to go to biplane
if(press & CTRL_DOWN){
teleport(-1266.37, -1076.81, 14.87)}

#cheat compound car show and pickups.
//construction
moveto(-1086.74,326.43,8.37);  object(0x1CD5,0,0,88);
move(0.14,-5.10,-1.10);  object(0x1CD5,0,0,88);
move(-0.39,10.09,-1.00);  object(0x1CD5,0,0,88);
move(-6.05,-0.24,-0.50);  object(0x1CD5,90,0,88);
move(12.06,0.46,0.00);  object(0x1CD5,90,0,272);
move(-6.50,-5.29,2.10);  object(0x1CD5,90,0,88);
move(-4.90,-0.17,0.00);  object(0x1CD5,90,0,88);
move(0.17,-4.80,-1.10);  object(0x1CD5,90,0,88);
move(5.84,0.21,0.10);  object(0x1CD5,90,0,88);
move(10.43,4.98,3.80);  object(0x1CD5,150,0,270);
move(-0.19,-5.00,-1.00);  object(0x1CD5,150,0,270);
move(-0.10,10.10,-1.00);  object(0x1CD5,150,0,270);
pspawn = 0x08E81290;
setint(pspawn,   273);    
setfloat(pspawn + 4,   -1087.87, 326.36, 14.57, 90);
//ninja spawn here
//butterfly
setint(0x8C73B30, 273); 
//Car Id
setchar(0x8C73B30+0x24, 1,1,1, 255); 
//Color 1
setchar(0x8C73B30+0x28, 255,0,0, 255); 
//Color2
setshort(0x98a2fd6, 1, 'B','u','t','t','e','r',' ','F','l','y', 0); 
//Engine
setchar(0x9634420+0x5c, '4', 'P', 8); 
// Drive type / Engine type / Gears
//Neon
for(neon=0;neon<16;neon++){
setchar(0x0972EFF0+4*neon,  255, 0, 0);}
//Ninja
setint(0x8C73B30, 212); 
//Car Id
setchar(0x8C73B30+0x24, 255,255,255, 255); 
//Color 1
setchar(0x8C73B30+0x28, 85,150,255, 255); 
//Color2
setshort(0x98a3286, 1, 'N','I','N','J','A', 0); 
//Engine
setchar(0x9630c60+0x5c, 'R', 'P', 6); 
// Drive type / Engine type / Gears
//Neon
for(neon=0;neon<16;neon++){
setchar(0x097272d0+4*neon,  85, 150, 255);}
//teleport
teleport(-1061.72, 327.18, 11.27);

#cheat PED ANIHALATER
//Gathered by Steman
//credits for ALL cheats too Waterbottle, Edison Carter, ADePSP, Vettefan88 and DDM
pped = getint(0x08BA1D70);
if(buttons & CTRL_CIRCLE) {
//Force Blast, by edison
static pdone;
if (pped != 0 && pped != pdone)
{
dx = getfloat(pped + 0x0030) - getfloat(pplayer + 0x0030);
dy = getfloat(pped + 0x0034) - getfloat(pplayer + 0x0034);
setshort(pped + 0x01c8, 0x1020);
setfloat(pped + 0x0140, dx * 0.2);
setfloat(pped + 0x0144, dy * 0.2);
setfloat(pped + 0x0148, (fabs(dx) + fabs(dy)) * 0.05);
pdone = pped;
}
if (pped == 0)
{
pdone = 0;
}
}
//Telekinisis
pped = getint(0x08BA1D70);
static address;
static rotsp;
if(pped && pped<0x9900000) address=pped;
if(address && pped>0x9900000) {
x = getfloat(0x08ba1d50) - getfloat(address + 0x30);
y = getfloat(0x08ba1d54) - getfloat(address + 0x34);
z = getfloat(0x08ba1d58) - getfloat(address + 0x38);
setshort(address+0x1c8, 0x1020);
setfloat(address + 0x140, x*0.1);
setfloat(address + 0x144, y*0.1);
setfloat(address + 0x148, z*0.1);
if(buttons & CTRL_CROSS)
rotsp+=0.005;
else
rotsp = 0;
setfloat(address+0x78, rotsp);
}
//PyroKinisis {
pped = getint(0x08BA1D70);
if(buttons & CTRL_SQUARE)
if(pped)
{
setchar(0x08be3a20, 1);
setfloat(0x08be3a30, getfloat(pped+0x30), getfloat(pped+0x34), getfloat(pped+0x38));
setfloat(pped+0x4e4, getfloat(pped+0x4e4)-1.5);
}
if(buttons & CTRL_CROSS) {
//Tractor Beam, by edison
if (pped != 0)
{
dx = getfloat(pped + 0x0030) - getfloat(pplayer + 0x0030);
dy = getfloat(pped + 0x0034) - getfloat(pplayer + 0x0034);
dz = getfloat(pped + 0x0038) - getfloat(pplayer + 0x0038);
setshort(pped + 0x01c8, 0x1020);
setfloat(pped + 0x0140, -dx * 0.05);
setfloat(pped + 0x0144, -dy * 0.05);
setfloat(pped + 0x0148, -dz * 0.05);
}
}
//Aim of Death
if(buttons & CTRL_TRIANGLE) {
pped = getint(0x08BA1D70);
if (pped != 0)
setfloat(pped + 0x4e4, 0);
}
//Force Wave
if ((buttons & CTRL_LTRIGGER) && (buttons & CTRL_CIRCLE))
{
for (p = 0x098b4a40; p <= 0x098e9b50; p += 0xd10)
{
if (p == pplayer)
continue;
dx = getfloat(p + 0x0030) - getfloat(pplayer + 0x0030);
dy = getfloat(p + 0x0034) - getfloat(pplayer + 0x0034);
setshort(p + 0x01c8, 0x1020);
setfloat(p + 0x0140, dx * 0.2);
setfloat(p + 0x0144, dy * 0.2);
setfloat(p + 0x0148, (fabs(dx) + fabs(dy)) * 0.05);
}
}
//Obliterate All Peds
if((buttons & CTRL_LTRIGGER) && (press & CTRL_TRIANGLE)) {
player = getint(0x08bc8170);//address of pplayer
for(i=0; 0x098b4a40+i<=0x098ecf90; i+=0xd10) {
if(0x098b4a40 + i != player) setfloat(0x098b4a40 + i + 0x4e4, 0);
}
}

#cheat Mendez Radar Lime Green
setchar(0x096CF9E7, 0x00, 0x00, 0xff, 0x00);
#cheat Mendez Radar Red 
setchar(0x096CF9E7, 0x00, 0xff, 0x00, 0x00);
#cheat Renis radar Light blue
setchar(0x096CDB47, 0x00, 0x00, 0xff);
#cheat Renis radar DARK blue
setchar(0x096CDB47, 0x00, 0x00, 0x00);
#cheat Renis radar Black
setchar(0x096CDB47, 0x00, 0x00, 0x00, 0x00);

#cheat Light Control
if(buttons & CTRL_RIGHT)
setchar(0x9460815, 0x00);{
setchar(0x946081a, 0x35);}
if(buttons & CTRL_LEFT)
setchar(0x9460815, 0xb0);{
setchar(0x946081a, 0x55);}
if(buttons & CTRL_DOWN){
setchar(0x9460817, 0xD4);}
if(buttons & CTRL_UP){
setchar(0x9460817, 0xC4);}

#cheat ???
setfloat(0x9634800+0x80, -0.001); 

#cheat change the weight of the Polaris V8
static start;
if (!start)
weight = 0;
start = 1;
if (buttons & CTRL_LTRIGGER && pressmed & CTRL_LEFT){
weight = weight-1;}
if (buttons & CTRL_LTRIGGER && pressmed & CTRL_RIGHT){
weight = weight+1;}
setfloat(0x9634340+0xbc, weight);

#cheat Clone Mod
//Enter a savehouse to create a clone
setshort(0x09F88C80, 26);
for(i=0; 0x98b4a40+i<=0x98ecf90; i+=0xd10){
ID = getshort(0x098b4a40+i+0x56);
if(0x098b4a40+i!= pplayer&&ID == 0){
playerz = getfloat(pplayer+0x38);
if(playerz>=11.80){
setchar(0x098b4a40+i+0x8B4, 0x39);
teleport(-1077.40, 312.63, 11.26);}}}

#cheat Teleport Vic+Clone to the Compound
for(i=0; 0x98b4a40+i<=0x98ecf90; i+=0xd10){
ID = getshort(0x098b4a40+i+0x56);
if(ID == 0){
if(0x98b4a40+i &&!getint(0x98b4a40+i+0x480)){
setfloat(0x98b4a40+i+0x30, -1077.40, 312.63, 11.26);}}}
off();

#cheat vice statue
moveto(-235.88,-1475.55,5.72);  object(0x1CB2,90,90,194);
move(1.27,5.10,0.00);  object(0x1CB2,90,90,194);
move(0.77,-2.55,2.10);  object(0x1C93,90,0,192);
move(-2.25,0.48,0.00);  object(0x1C93,90,0,192);
move(-0.45,-2.10,0.00);  object(0x1C93,90,0,192);
move(2.25,-0.48,0.00);  object(0x1C93,90,0,192);
move(0.87,4.04,0.00);  object(0x1C93,90,0,192);
move(-2.25,0.48,0.00);  object(0x1C93,90,0,192);
move(0.00,0.00,4.50);  object(0x1C93,90,0,192);
move(2.25,-0.48,0.00);  object(0x1C93,90,0,192);
move(-0.45,-2.09,0.00);  object(0x1C93,90,0,192);
move(-2.25,0.48,0.00);  object(0x1C93,90,0,192);
move(-0.30,-1.80,0.00);  object(0x1C93,90,0,14);
move(2.13,-0.54,0.00);  object(0x1C93,90,0,14);
move(0.00,0.00,4.40);  object(0x1C93,90,0,14);
move(-2.13,0.54,0.00);  object(0x1C93,90,0,14);
move(0.52,2.05,0.00);  object(0x1C93,90,0,14);
move(2.13,-0.54,0.00);  object(0x1C93,90,0,14);
move(0.23,1.66,0.00);  object(0x1C93,90,0,193);
move(-1.53,0.41,0.00);  object(0x1C93,90,0,188);
move(-0.44,0.33,0.10);  object(0x1C93,90,0,193);
move(0.00,0.00,4.50);  object(0x1C93,90,0,193);
move(1.80,-0.66,-0.10);  object(0x1C93,90,0,193);
move(-0.52,-2.22,0.00);  object(0x1C93,90,0,193);
move(-1.85,0.43,0.00);  object(0x1C93,90,0,193);
move(-0.32,-1.08,0.00);  object(0x1C93,90,0,16);
move(2.11,-0.62,0.00);  object(0x1C93,90,0,16);
move(0.00,0.00,4.10);  object(0x1C93,90,0,16);
move(-1.92,0.56,0.00);  object(0x1C93,90,0,16);
move(0.14,1.19,0.00);  object(0x1C93,90,0,16);
move(2.02,-0.59,0.00);  object(0x1C93,90,0,16);
move(0.64,2.24,0.00);  object(0x1C93,90,0,192);
move(-1.96,0.40,0.00);  object(0x1C93,90,0,192);
move(-2.16,0.02,-18.90);  object(0x1C93,0,0,195);
move(-0.04,-0.06,2.04);  object(0x1C93,0,0,197);
move(4.01,2.09,-2.15);  object(0x1C93,0,0,102);
move(0.00,0.00,2.10);  object(0x1C93,0,0,102);
move(-1.83,0.37,0.09);  object(0x1C93,0,0,102);
move(0.00,0.00,-1.70);  object(0x1C93,0,0,102);
move(3.73,-3.82,0.14);  object(0x1C93,0,0,15);
move(0.00,0.00,1.50);  object(0x1C93,0,0,15);
move(0.48,1.86,-0.00);  object(0x1C93,0,0,15);
move(0.01,-0.28,-1.51);  object(0x1C93,0,0,196);
move(-4.72,-6.28,0.20);  object(0x1C93,0,0,279);
move(0.00,0.00,1.70);  object(0x1C93,0,0,279);
move(3.19,0.13,0.00);  object(0x1C93,0,0,12);
move(-5.88,1.19,0.00);  object(0x1C93,0,0,12);
move(0.00,0.00,-1.80);  object(0x1C93,0,0,12);
move(6.00,-1.51,0.12);  object(0x1C93,0,0,14);
move(-2.32,4.07,22.20);  object(0x1C91,0,0,108);

#cheat Finished Lava!
//by nerner with elements of a cheat by psphacker108
//and a painful burning effect by Upaluppa ^^
//cheers for releasing the watermod by the way
setchar(0x08b8eb90, 0x00, 0x00, 0x00, 0x00);
setchar(0x08b8eb8e, 0xff, 0x00, 0x00, 0x00, 0xff);
setchar(0x08b8eb88, 0x00, 0x00, 0xff, 0xff);
if(getchar(pplayer + 0x38) <= 6 && getchar(pplayer + 0x38) >= -50){
setchar(0x08BE3A20, 1);
setfloat(0x08BE3A30, getfloat(pobj + 0x30), getfloat(pobj + 0x34), getfloat(pobj + 0x38));
setfloat(pplayer + 0x4E4, 0);
setfloat(pplayer + 0x4E4, 0);}
if(pcar && getchar(pcar + 0x38) <= 6 && getchar(pcar + 0x38) >= -50){
setfloat(pcar + 0x27C, 0x0);
sethex(pcar + 0x4A, 79);
setchar(0x08BE3A20, 1);
setfloat(0x08BE3A30, getfloat(pobj + 0x30), getfloat(pobj + 0x34), getfloat(pobj + 0x38));
setfloat(pplayer + 0x4E4, 0);}

#cheat Up/Down to turn rotors on/off
if(press & CTRL_DOWN){
setfloat(pcar + 0x668, 0);}
if(press & CTRL_UP){
setfloat(pcar + 0x668, 1.0);}

#cheat Helicopters are more fun to fly!
val = (buttons & CTRL_CROSS) ? 1.0:0.0;
setfloat(pcar + 0x668, val);

#cheat Planes are more fun to fly!
val = (buttons & CTRL_CROSS) ? 1.0:0.0;
setfloat(pcar + 0x3B4, val);

#cheat unknown cheat
if(buttons & CTRL_CROSS)    
val = 1.0;
else    
val = 0.0;

#cheat dutchguy's own's the city!
setfloat(0x08BA09A0, -1087.00,327.28,11.27); 
// Coordinatessetchar(0x08BA09C3, 0x3F); 
// Widthsetchar(0x08BA09C6, 0x40); 
// Heightsetchar(0x08BA09CA, 0x80); 
// Colorsetshort(0x08BA09CC, 'D', 'u', 't', 'c', 'h', 'g', 'u', 'y', '.', 'o', 'w', 'n', 's', 't', 'h', 'e', 'c', 'i', 't', 'y'); 
// Text
setchar(0x08BA09F5, 1);

#cheat dutchguy's own's the city!
setfloat(0x08BA09A0, -1087.00,327.28,11.27); 
// Coordinates
setchar(0x08BA09C3, 0x3F); 
// Width
setchar(0x08BA09C6, 0x40); 
// Height
setchar(0x08BA09CA, 0x80); 
// Color
setshort(0x08BA09CC, 'D', 'u', 't', 'c', 'h', 'g', 'u', 'y', '.', 'o', 'w', 'n', 's', 't', 'h', 'e', 'c', 'i', 't', 'y'); 
// Text
setchar(0x08BA09F5, 1);

#cheat Remove random Shop Textures
setchar(0x0871C840, 0x00);
#off
setchar(0x0871C840, 0x01);

#cheat bike balance beam
moveto(-728.61,415.27,192.27);  object(0x1CA4,0,0,305);
move(-0.16,0.11,0.00);  object(0x1CA4,0,0,305);
move(2.46,3.56,0.00);  object(0x1CA4,0,0,300);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,300);
move(2.29,3.84,0.00);  object(0x1CA4,0,0,300);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,300);
move(2.01,3.42,-0.20);  object(0x1CA4,0,0,300);
move(0.08,-0.06,0.00);  object(0x1CA4,0,0,300);
move(-4.51,-7.52,0.07);  object(0x1CA4,0,0,301);
move(2.41,3.76,0.10);  object(0x1CA4,0,0,301);
move(2.28,3.92,-0.10);  object(0x1CA4,0,0,301);
move(-0.16,0.12,0.00);  object(0x1CA4,0,0,301);
move(-1.43,-2.27,0.00);  object(0x1CA4,0,0,301);
move(-1.65,-2.91,0.00);  object(0x1CA4,0,0,301);
move(-1.78,-3.08,0.00);  object(0x1CA4,0,0,301);
move(6.96,11.59,0.00);  object(0x1CA4,0,0,301);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,301);
move(0.16,-0.12,0.00);  object(0x1CA4,0,0,301);
move(2.17,3.78,0.00);  object(0x1CA4,0,0,301);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,301);
move(0.16,-0.12,0.00);  object(0x1CA4,0,0,301);
move(2.10,3.87,0.00);  object(0x1CA4,0,0,302);
move(0.16,-0.12,0.00);  object(0x1CA4,0,0,302);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,302);
move(2.39,3.79,0.00);  object(0x1CA4,0,0,302);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,302);
move(0.16,-0.12,0.00);  object(0x1CA4,0,0,302);
move(2.27,3.79,0.00);  object(0x1CA4,0,0,302);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,302);
move(0.16,-0.12,0.00);  object(0x1CA4,0,0,302);
move(2.27,3.63,0.00);  object(0x1CA4,0,0,302);
move(-0.16,0.12,0.00);  object(0x1CA4,0,0,302);
move(0.08,-0.06,0.00);  object(0x1CA4,0,0,302);
move(2.11,3.25,0.00);  object(0x1CA4,0,0,302);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,302);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,302);
move(2.32,3.37,0.00);  object(0x1CA4,0,0,302);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,302);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,302);
move(2.23,3.41,0.00);  object(0x1CA4,0,0,302);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,302);
move(0.16,-0.12,0.00);  object(0x1CA4,0,0,302);
move(2.26,3.79,0.00);  object(0x1CA4,0,0,302);
move(-0.09,0.05,0.00);  object(0x1CA4,0,0,302);
move(0.16,-0.12,0.00);  object(0x1CA4,0,0,302);
move(2.24,3.47,0.03);  object(0x1CA4,0,0,304);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,304);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,304);
move(2.55,3.46,0.00);  object(0x1CA4,0,0,304);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,304);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,304);
move(2.65,3.58,0.00);  object(0x1CA4,0,0,304);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,304);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,304);
move(2.61,3.53,0.00);  object(0x1CA4,0,0,304);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,304);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,304);
move(2.48,3.37,0.10);  object(0x1CA4,0,0,304);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,304);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,304);
move(2.53,3.44,0.00);  object(0x1CA4,0,0,304);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,304);
move(-0.08,0.06,0.00);  object(0x1CA4,0,0,304);
move(2.42,3.19,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(2.64,3.45,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(0.15,-0.13,0.00);  object(0x1CA4,0,0,306);
move(2.54,3.48,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(2.62,3.28,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(2.74,3.41,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(2.64,3.29,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(2.66,3.47,0.00);  object(0x1CA4,0,0,306);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,306);
move(-0.15,0.13,0.00);  object(0x1CA4,0,0,306);
move(2.72,3.39,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(2.47,3.10,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,306);
move(2.39,3.28,0.00);  object(0x1CA4,0,0,307);
move(0.15,-0.13,0.00);  object(0x1CA4,0,0,307);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,307);
move(2.64,3.27,0.00);  object(0x1CA4,0,0,307);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,307);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,307);
move(2.75,3.39,0.00);  object(0x1CA4,0,0,307);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,307);
move(-0.15,0.13,0.00);  object(0x1CA4,0,0,307);
move(2.72,3.51,0.00);  object(0x1CA4,0,0,307);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,307);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,307);
move(2.67,3.61,0.00);  object(0x1CA4,0,0,307);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,307);
move(0.15,-0.13,0.00);  object(0x1CA4,0,0,307);
move(2.50,3.57,0.00);  object(0x1CA4,0,0,307);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,307);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,307);
move(2.60,3.68,0.00);  object(0x1CA4,0,0,307);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,307);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,307);
move(2.64,3.57,0.00);  object(0x1CA4,0,0,307);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,307);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,307);
move(2.81,3.32,0.00);  object(0x1CA4,0,0,307);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,307);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,307);
move(2.83,3.48,0.00);  object(0x1CA4,0,0,307);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,307);
move(0.15,-0.13,0.00);  object(0x1CA4,0,0,307);
move(2.53,3.75,0.00);  object(0x1CA4,0,0,307);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,307);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,307);
move(2.32,3.36,0.00);  object(0x1CA4,0,0,307);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,307);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,307);
move(2.60,3.53,0.00);  object(0x1CA4,0,0,307);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,307);
move(0.15,-0.13,0.00);  object(0x1CA4,0,0,307);
move(2.50,3.41,0.00);  object(0x1CA4,0,0,307);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,307);
move(0.15,-0.13,0.00);  object(0x1CA4,0,0,307);
move(2.47,3.37,0.00);  object(0x1CA4,0,0,307);
move(-0.07,0.07,0.00);  object(0x1CA4,0,0,307);
move(0.15,-0.13,0.00);  object(0x1CA4,0,0,307);
move(2.50,3.57,0.00);  object(0x1CA4,0,0,307);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,307);
move(0.07,-0.07,0.00);  object(0x1CA4,0,0,307);
move(2.76,3.24,1.30);  object(0x1CA4,85,0,306);
move(-1.68,1.09,0.00);  object(0x1CA4,85,0,306);
move(3.65,-2.67,-0.40);  object(0x1CA4,85,0,306);
teleport(-734.23, 405.61, 194.90);

#cheat road to heaven
moveto(474.87,-368.88,11.42);  object(0x1CAA,0,0,102);
move(5.43,-4.32,2.40);  object(0x1CAA,0,0,128);
move(2.88,-5.28,2.20);  object(0x1CAA,0,0,128);
move(6.35,-0.63,2.10);  object(0x1CAA,0,0,128);
move(3.10,-7.09,2.50);  object(0x1CAA,0,0,128);
move(9.50,-0.93,3.20);  object(0x1CAA,0,0,128);
move(3.92,-7.86,3.20);  object(0x1CAA,0,0,128);
move(5.25,2.00,0.90);  object(0x1CAA,0,0,128);
move(2.32,-10.29,3.20);  object(0x1CAA,0,0,128);
move(1.91,-5.92,2.40);  object(0x1CAA,0,0,163);
move(-1.96,-5.97,2.60);  object(0x1CAA,0,0,203);
move(1.20,-4.73,2.00);  object(0x1CAA,0,0,158);
move(5.31,-4.76,2.50);  object(0x1CAA,0,0,118);
move(-49.43,58.16,-30.80);  object(0x1CAA,0,0,54);
move(52.17,-63.13,32.97);  object(0x1CAA,0,0,171);
move(6.39,-2.87,2.10);  object(0x1CAA,0,0,128);
move(7.54,0.25,2.70);  object(0x1CAA,0,0,65);
move(3.71,7.47,2.37);  object(0x1CAA,0,0,22);
move(-2.03,5.89,2.40);  object(0x1CAA,0,0,328);
move(2.43,8.75,2.30);  object(0x1CAA,0,0,331);
move(-7.81,1.65,2.40);  object(0x1CAA,0,0,292);
move(-2.42,6.09,1.90);  object(0x1CAA,0,0,292);
move(-7.91,-1.11,2.90);  object(0x1CAA,0,0,292);
move(-6.33,-1.73,2.10);  object(0x1CAA,0,0,292);
move(-9.09,-3.42,3.70);  object(0x1CAA,0,0,292);
move(-8.48,-0.56,2.70);  object(0x1CAA,0,0,292);
move(16.44,1.52,-5.66);  object(0x1CAA,0,0,284);
move(-18.31,7.26,7.70);  object(0x1CAA,0,0,293);
move(-3.65,5.76,2.40);  object(0x1CAA,0,0,293);
move(-9.22,-3.75,2.60);  object(0x1CAA,0,0,293);
move(-7.79,-3.15,2.50);  object(0x1CAA,0,0,293);
move(-6.42,-1.65,2.10);  object(0x1CAA,0,0,293);
move(-4.05,5.29,2.30);  object(0x1CAA,0,0,293);
move(-1.42,7.61,2.10);  object(0x1CAA,0,0,348);
move(-4.09,6.17,2.80);  object(0x1CAA,0,0,317);
move(-0.15,4.93,1.90);  object(0x1CAA,0,0,359);
move(-4.48,4.46,2.10);  object(0x1CAA,0,0,306);
move(-2.40,6.20,2.10);  object(0x1CAA,0,0,339);
move(-7.77,1.86,1.20);  object(0x1CAA,0,0,339);
move(-7.43,4.19,2.10);  object(0x1CAA,0,0,339);
move(-1.14,6.66,1.60);  object(0x1CAA,0,0,350);
move(-8.56,4.97,2.00);  object(0x1CAA,0,0,350);
move(6.63,8.07,1.60);  object(0x1CAA,0,0,350);
move(6.22,8.72,1.20);  object(0x1CAA,0,0,350);
move(6.56,6.70,2.10);  object(0x1CAA,0,0,350);
move(2.97,8.72,2.90);  object(0x1CAA,0,0,350);
move(-8.51,5.85,2.70);  object(0x1CAA,0,0,350);
move(7.35,7.47,2.40);  object(0x1CAA,0,0,350);
move(-8.99,5.67,2.80);  object(0x1CAA,0,0,350);
move(-1.14,6.65,3.00);  object(0x1CAA,0,0,350);
move(-1.44,7.84,-0.20);  object(0x1CAA,0,0,170);
move(-1.21,7.05,-3.20);  object(0x1CAA,0,0,170);
move(-1.34,7.81,-3.50);  object(0x1CAA,0,0,170);
move(-1.27,7.41,-3.50);  object(0x1CAA,0,0,170);
move(-1.82,10.64,-3.90);  object(0x1CAA,0,0,170);
move(0.30,-1.74,0.20);  object(0x1CAA,0,0,170);
move(-1.80,10.52,-3.80);  object(0x1CAA,0,0,170);
move(-1.33,8.45,-3.60);  object(0x1CAA,0,0,172);
move(-1.51,7.87,-3.40);  object(0x1CAA,0,0,168);
teleport(461.30,-367.80, 10.18);

#cheat extension of road to heaven
moveto(426.32,-218.64,92.50);  object(0x1CAA,0,0,167);
move(-1.88,9.02,-3.70);  object(0x1CAA,0,0,167);
move(-1.77,6.97,-2.90);  object(0x1CAA,0,0,166);
move(-2.03,8.62,-3.70);  object(0x1CAA,0,0,168);
move(-1.66,7.86,-3.40);  object(0x1CAA,0,0,168);
move(-1.93,8.72,-3.60);  object(0x1CAA,0,0,168);
move(-1.63,8.29,-3.50);  object(0x1CAA,0,0,168);
move(-1.65,9.03,-3.70);  object(0x1CAA,0,0,170);
move(-1.35,9.17,-3.70);  object(0x1CAA,0,0,170);
move(-1.77,8.53,-3.50);  object(0x1CAA,0,0,168);
move(-1.56,8.58,-3.70);  object(0x1CAA,0,0,168);
move(-1.87,8.67,-3.80);  object(0x1CAA,0,0,168);
move(-1.93,8.30,-3.60);  object(0x1CAA,0,0,168);
move(-2.02,9.05,-3.70);  object(0x1CAA,0,0,167);
move(-2.12,8.67,-3.60);  object(0x1CAA,0,0,167);
move(-2.04,8.86,-3.70);  object(0x1CAA,0,0,168);
move(-2.19,9.06,-3.90);  object(0x1CAA,0,0,168);
move(-2.13,8.66,-3.80);  object(0x1CAA,0,0,168);
move(-1.91,8.73,-3.80);  object(0x1CAA,0,0,168);
move(-2.55,7.79,-2.40);  object(0x1CAA,15,0,168);
move(-0.99,3.98,-0.50);  object(0x1CAA,25,0,168);
move(-2.20,7.07,1.20);  object(0x1CAA,40,0,168);
move(-1.45,7.72,2.70);  object(0x1CAA,45,0,168);
move(-1.50,7.81,4.70);  object(0x1CAA,60,0,168);

#cheat pinata men invasion!!!
moveto(504.07,1283.25,17.94);  object(0x1C91,0,0,281);
move(1.72,-26.09,0.40);  object(0x1C91,0,0,328);
move(27.81,-34.57,-1.00);  object(0x1C91,0,0,325);
move(-18.94,-67.78,0.60);  object(0x1C91,0,0,3);
move(-24.02,-18.18,-0.70);  object(0x1C91,0,0,3);
move(-3.19,-54.27,1.50);  object(0x1C91,0,0,37);
move(26.77,-33.88,0.20);  object(0x1C91,0,0,334);
move(-16.16,-34.18,0.00);  object(0x1C91,0,0,331);
move(30.10,-25.45,0.00);  object(0x1C91,0,0,345);
move(16.56,-93.88,-2.10);  object(0x1C91,0,0,12);
move(27.61,-55.70,-2.70);  object(0x1C91,0,0,359);
move(-27.75,-49.93,-2.20);  object(0x1C91,0,0,22);
move(11.84,-56.83,0.00);  object(0x1C91,0,0,21);
move(-28.10,-57.95,0.00);  object(0x1C91,0,0,21);
move(18.26,-107.02,0.00);  object(0x1C91,0,0,354);
move(-22.38,-2.29,0.00);  object(0x1C91,0,0,354);
move(19.91,-105.23,0.00);  object(0x1C91,0,0,354);
move(-31.26,-56.72,0.00);  object(0x1C91,0,0,27);
move(4.42,-75.85,0.00);  object(0x1C91,0,0,18);
move(-28.92,-106.88,0.00);  object(0x1C91,0,0,1);
move(20.04,-130.84,0.20);  object(0x1C91,0,0,1);
move(-28.77,-85.89,0.00);  object(0x1C91,0,0,36);
move(44.88,-78.16,-0.30);  object(0x1C91,0,0,335);
move(-17.73,-21.08,0.00);  object(0x1C91,0,0,34);
move(-20.03,-21.73,-0.30);  object(0x1C91,0,0,23);
move(-13.46,-32.15,-0.30);  object(0x1C91,0,0,23);
move(11.62,-70.43,1.80);  object(0x1C91,0,0,341);
move(-40.07,-132.72,-1.90);  object(0x1C91,0,0,32);
move(-3.60,-21.89,0.00);  object(0x1C91,0,0,92);
move(-1.02,-84.81,-0.30);  object(0x1C91,0,0,321);
move(-16.72,-33.26,0.50);  object(0x1C91,0,0,88);
move(-27.85,-66.85,0.00);  object(0x1C91,0,0,89);
move(-25.48,-86.03,0.00);  object(0x1C91,0,0,310);
move(-45.47,-79.16,-0.30);  object(0x1C91,0,0,70);
move(-36.89,-103.69,0.00);  object(0x1C91,0,0,330);
move(-65.68,-111.93,0.10);  object(0x1C91,0,0,44);
move(-21.69,-99.82,0.00);  object(0x1C91,0,0,59);
move(-11.70,-105.76,0.00);  object(0x1C91,0,0,13);
move(-13.70,-26.36,0.00);  object(0x1C91,0,0,39);
move(-12.42,-191.05,0.00);  object(0x1C91,0,0,14);
move(-39.89,-94.81,0.00);  object(0x1C91,0,0,24);
move(-27.77,-54.22,0.00);  object(0x1C91,0,0,43);
move(0.90,-63.23,0.00);  object(0x1C91,0,0,10);
move(0.27,-23.50,0.00);  object(0x1C91,0,0,2);
move(61.73,27.19,0.70);  object(0x1C91,0,0,333);
move(30.89,46.34,0.00);  object(0x1C91,0,0,313);
move(26.51,56.61,0.00);  object(0x1C91,0,0,313);
move(8.30,20.83,0.00);  object(0x1C91,0,0,305);
move(4.51,25.85,0.00);  object(0x1C91,0,0,280);
move(6.75,27.25,0.00);  object(0x1C91,0,0,280);
move(-17.63,13.51,-0.10);  object(0x1C91,0,0,68);
move(17.57,53.56,0.00);  object(0x1C91,0,0,68);
move(8.88,32.64,0.00);  object(0x1C91,0,0,68);
move(5.44,62.61,0.00);  object(0x1C91,0,0,51);
move(-0.15,18.35,0.00);  object(0x1C91,0,0,50);
move(7.46,31.18,0.00);  object(0x1C91,0,0,50);
move(21.02,119.81,0.26);  object(0x1C91,0,0,115);
move(53.73,193.51,0.31);  object(0x1C91,0,0,157);
move(96.51,163.10,-0.50);  object(0x1C91,0,0,293);
move(47.75,156.24,0.21);  object(0x1C91,0,0,53);
move(36.13,125.60,0.08);  object(0x1C91,0,0,237);
move(-44.96,1691.57,6.49);  object(0x1C91,0,0,22);
move(-53.30,25.00,0.00);  object(0x1C91,0,0,115);
move(-101.86,-0.11,0.00);  object(0x1C91,0,0,115);
move(-98.34,-51.03,0.00);  object(0x1C91,0,0,50);
move(23.40,-9.96,0.00);  object(0x1C91,0,0,325);
move(35.12,-32.33,0.60);  object(0x1C91,0,0,321);
move(8.15,-62.03,3.60);  object(0x1C91,0,0,1);
move(15.91,-110.92,-8.80);  object(0x1C91,0,0,12);
move(32.68,-138.80,-0.60);  object(0x1C91,0,0,344);
move(-43.33,-74.18,-1.50);  object(0x1C91,0,0,69);
move(-67.27,-103.28,0.00);  object(0x1C91,0,0,36);
move(-51.45,-40.09,0.00);  object(0x1C91,0,0,46);
move(100.17,-6.26,0.00);  object(0x1C91,0,0,280);
move(76.39,17.18,0.00);  object(0x1C91,0,0,265);
move(71.84,-4.25,0.00);  object(0x1C91,0,0,280);
move(19.25,-20.65,0.00);  object(0x1C91,0,0,321);
move(-58.97,-45.61,0.00);  object(0x1C91,0,0,20);
move(24.78,-53.09,0.00);  object(0x1C91,0,0,324);
move(-27.57,-54.97,0.40);  object(0x1C91,0,0,7);
move(-50.16,-94.24,0.00);  object(0x1C91,0,0,40);
move(16.75,-60.97,0.00);  object(0x1C91,0,0,350);
move(-21.86,-21.68,0.00);  object(0x1C91,0,0,48);
move(-67.41,-84.86,0.70);  object(0x1C91,0,0,41);
move(81.16,-68.55,-0.30);  object(0x1C91,0,0,327);
move(55.78,-58.94,0.00);  object(0x1C91,0,0,312);
move(20.75,-82.49,2.90);  object(0x1C91,0,0,17);
move(-54.31,-25.12,-2.80);  object(0x1C91,0,0,72);
move(-39.08,-3.98,0.00);  object(0x1C91,0,0,118);
move(-3.09,-77.22,-0.40);  object(0x1C91,0,0,29);
move(-13.36,-65.55,0.70);  object(0x1C91,0,0,15);
move(-12.14,-27.39,-0.50);  object(0x1C91,0,0,0);
move(-26.66,-32.49,-0.40);  object(0x1C91,0,0,48);
move(-23.51,-69.74,0.50);  object(0x1C91,0,0,19);
move(-42.62,-92.30,-1.10);  object(0x1C91,0,0,42);
move(-49.22,-69.42,0.50);  object(0x1C91,0,0,94);
move(86.29,-26.72,0.70);  object(0x1C91,0,0,303);
move(-18.76,-44.68,0.00);  object(0x1C91,0,0,36);
move(-28.49,-119.17,7.00);  object(0x1C91,0,0,6);
move(-33.90,-101.93,-8.30);  object(0x1C91,0,0,21);
move(-6.59,-51.30,0.00);  object(0x1C91,0,0,0);
move(-65.43,-66.36,0.00);  object(0x1C91,0,0,79);
move(-105.83,-33.89,-0.20);  object(0x1C91,0,0,68);
move(-77.14,-54.31,0.00);  object(0x1C91,0,0,35);
move(23.15,-61.45,0.50);  object(0x1C91,0,0,355);
move(28.42,-89.65,0.00);  object(0x1C91,0,0,335);
move(6.07,-69.11,0.00);  object(0x1C91,0,0,0);
move(4.48,-77.85,0.00);  object(0x1C91,0,0,3);
move(14.42,-69.03,0.00);  object(0x1C91,0,0,335);
move(8.91,-57.97,0.00);  object(0x1C91,0,0,358);
move(-28.91,-70.07,0.00);  object(0x1C91,0,0,23);
move(15.81,-74.76,0.00);  object(0x1C91,0,0,352);
move(-24.63,-77.11,0.00);  object(0x1C91,0,0,29);
teleport(504.07,1283.25,17.94);

#cheat nothing but weird
setfloat(pcar + 0x00000000, -50);
#cheat nothing
setfloat(pcar + 0x00000008, -5.4);

#cheat anger management place
moveto(213.29,-243.31,10.93);  object(0x01C2,0,0,231);
move(-0.44,0.54,0.00);  object(0x01C2,0,0,231);
move(-0.44,0.54,0.00);  object(0x01C2,0,0,231);
move(-0.38,0.47,0.00);  object(0x01C2,0,0,231);
move(-0.44,0.54,0.00);  object(0x01C2,0,0,231);
move(0.00,0.00,1.00);  object(0x01C2,0,0,231);
move(0.44,-0.54,0.00);  object(0x01C2,0,0,231);
move(0.38,-0.47,0.00);  object(0x01C2,0,0,231);
move(0.44,-0.54,0.00);  object(0x01C2,0,0,231);
move(0.38,-0.47,0.00);  object(0x01C2,0,0,231);
move(0.00,0.00,1.10);  object(0x01C2,0,0,231);
move(-0.31,0.39,0.00);  object(0x01C2,0,0,231);
move(-0.44,0.54,0.00);  object(0x01C2,0,0,231);
move(-0.44,0.54,0.00);  object(0x01C2,0,0,231);
move(-0.44,0.54,0.00);  object(0x01C2,0,0,231);
move(-0.50,0.62,-2.20);  object(0x01C2,0,0,231);
move(0.00,0.00,1.10);  object(0x01C2,0,0,231);
move(0.00,0.00,1.10);  object(0x01C2,0,0,231);
move(-1.94,13.69,-1.34);  object(0x029F,0,0,302);
move(2.25,3.66,0.00);  object(0x029F,0,0,302);
move(2.20,3.58,0.00);  object(0x029F,0,0,302);
move(-6.65,-10.82,0.00);  object(0x029F,0,0,302);
move(-2.20,-3.58,0.00);  object(0x029F,0,0,302);
move(-2.25,-3.66,0.00);  object(0x029F,0,0,302);
move(-2.15,-3.49,0.00);  object(0x029F,0,0,302);
move(-2.20,-3.58,0.00);  object(0x029F,0,0,302);
move(-2.20,-3.58,0.00);  object(0x029F,0,0,302);
move(-2.25,-3.66,0.00);  object(0x029F,0,0,302);
move(-2.20,-3.58,0.00);  object(0x029F,0,0,302);
move(-2.25,-3.66,0.00);  object(0x029F,0,0,302);
move(-0.94,-1.53,0.00);  object(0x029F,0,0,302);
move(0.00,0.00,0.00);  object(0x029F,0,0,302);
move(0.99,1.62,0.00);  object(0x029F,0,0,302);
move(1.20,1.96,0.00);  object(0x029F,0,0,302);
move(0.99,1.62,0.00);  object(0x029F,0,0,302);
move(0.94,1.53,0.00);  object(0x029F,0,0,302);
move(1.26,2.04,0.00);  object(0x029F,0,0,302)
;move(1.10,1.79,0.00);  object(0x029F,0,0,302);
move(1.15,1.87,0.00);  object(0x029F,0,0,302);
move(1.15,1.87,0.00);  object(0x029F,0,0,302);
move(0.89,1.45,0.00);  object(0x029F,0,0,302);
move(0.99,1.62,0.00);  object(0x029F,0,0,302);
move(1.26,2.04,0.00);  object(0x029F,0,0,302);
move(0.99,1.62,0.00);  object(0x029F,0,0,302);
move(1.47,2.39,0.00);  object(0x029F,0,0,302);
move(0.73,1.19,0.00);  object(0x029F,0,0,302);
move(1.10,1.79,0.00);  object(0x029F,0,0,302);
move(1.15,1.87,0.00);  object(0x029F,0,0,302);
move(1.31,2.13,0.00);  object(0x029F,0,0,302);
move(0.84,1.36,0.00);  object(0x029F,0,0,302);
move(0.84,1.36,0.00);  object(0x029F,0,0,302);
move(1.20,1.96,0.00);  object(0x029F,0,0,302);
move(1.36,2.22,0.00);  object(0x029F,0,0,302);
move(2.36,3.83,0.00);  object(0x029F,0,0,302);
move(-0.10,-0.17,0.00);  object(0x029F,0,0,302);
move(-0.05,-0.09,0.00);  object(0x029F,0,0,302);
move(-1.47,-2.39,0.00);  object(0x029F,0,0,302);
move(-1.47,-2.39,0.00);  object(0x029F,0,0,302);
move(1.05,1.70,0.00);  object(0x029F,0,0,302);
move(-2.04,-3.32,0.00);  object(0x029F,0,0,302);
move(-1.67,-2.73,0.00);  object(0x029F,0,0,302);
move(-1.57,-2.56,0.00);  object(0x029F,0,0,302);
move(-1.31,-2.13,0.00);  object(0x029F,0,0,302);
move(-1.26,-2.04,0.00);  object(0x029F,0,0,302);
move(-1.36,-2.22,0.00);  object(0x029F,0,0,302);
move(-1.10,-1.79,0.00);  object(0x029F,0,0,302);
move(-1.36,-2.22,0.00);  object(0x029F,0,0,302);
move(-1.36,-2.22,0.00);  object(0x029F,0,0,302);
move(-1.26,-2.04,0.00);  object(0x029F,0,0,302);
move(-1.20,-1.96,0.00);  object(0x029F,0,0,302);
move(-1.57,-2.56,0.00);  object(0x029F,0,0,302);
move(-1.52,-2.47,0.00);  object(0x029F,0,0,302);
move(-1.57,-2.56,0.00);  object(0x029F,0,0,302);
move(-0.94,-1.53,0.00);  object(0x029F,0,0,302);
move(-2.09,-3.41,0.00);  object(0x029F,0,0,302);
move(0.00,0.00,0.00);  object(0x029F,0,0,302);
move(0.00,0.00,0.00);  object(0x029F,0,0,302);
move(0.77,-2.78,0.00);  object(0x029F,0,0,207);
move(3.11,-1.60,0.00);  object(0x029F,0,0,207);
move(3.29,-1.69,0.00);  object(0x029F,0,0,207);
move(3.47,-1.79,0.00);  object(0x029F,0,0,207);
move(3.25,-1.67,-0.10);  object(0x029F,0,0,202);
move(3.84,-1.66,0.00);  object(0x029F,0,0,202);
move(3.69,-1.57,0.10);  object(0x029F,0,0,202);
move(3.87,-1.32,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(-4.16,1.48,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(0.01,-0.01,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(-3.75,1.63,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(-3.69,1.57,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(-3.75,2.06,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(-0.54,0.57,0.00);  object(0x029F,0,0,202);
move(-3.31,1.16,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(0.00,0.00,0.00);  object(0x029F,0,0,202);
move(-3.46,1.41,0.00);  object(0x029F,0,0,199);
move(0.00,0.00,0.00);  object(0x029F,0,0,199);
move(0.00,0.00,0.00);  object(0x029F,0,0,199);
move(-1.88,1.46,0.00);  object(0x029F,0,0,209);
move(0.00,0.00,0.00);  object(0x029F,0,0,209);
move(0.00,0.00,0.00);  object(0x029F,0,0,209);
move(0.00,0.00,0.00);  object(0x029F,0,0,209);
move(28.11,42.27,-0.81);  object(0x0264,0,0,206);
move(-0.31,0.06,0.00);  object(0x0264,0,0,206);
move(0.64,-0.13,0.00);  object(0x0264,0,0,206);
move(0.05,-0.01,0.00);  object(0x0264,0,0,206);
move(0.44,-0.09,0.00);  object(0x0264,0,0,206);
move(0.49,-0.10,0.00);  object(0x0264,0,0,206);
move(0.51,-0.10,0.00);  object(0x0264,0,0,206);
move(0.38,-0.08,0.00);  object(0x0264,0,0,206);
move(0.39,-0.08,0.00);  object(0x0264,0,0,206);
move(1.06,2.96,2.20);  object(0x0264,0,0,76);
move(-0.39,0.58,0.00);  object(0x0264,0,0,76);
move(-0.50,0.75,0.00);  object(0x0264,0,0,76);
move(0.00,0.00,0.00);  object(0x0264,0,0,76);
move(0.00,0.00,0.00);  object(0x0264,0,0,76);
move(0.00,0.00,0.00);  object(0x0264,0,0,76);
move(0.00,0.00,0.00);  object(0x0264,0,0,76);
teleport(234.70, -235.05, 11.41);

#cheat safehouse garage dividers
moveto(261.23,-139.87,12.58);  object(0x1CB2,0,0,291);
move(0.43,1.80,-0.70);  object(0x1CB2,0,0,295);
move(-2.23,-4.76,0.49);  object(0x1CB2,0,0,295);
move(-1097.21,-1054.40,-0.36);  object(0x1CB2,0,0,250);
move(-269.97,1557.99,-0.35);  object(0x1CB2,0,0,267);

#cheat Ammunation Blips Straight ( Red )
setchar(0x96EBB80, 0xff, 0x00, 0x00);
setchar(0x96EBB84, 0xff, 0x00, 0x00);
setchar(0x96EBB88, 0xff, 0x00, 0x00);
setchar(0x96EBB8C, 0xff, 0x00, 0x00);
#cheat Ammunation Blips Straight ( Blue )
setchar(0x96EBB80, 0x00, 0x00, 0xff);
setchar(0x96EBB84, 0x00, 0x00, 0xff);
setchar(0x96EBB88, 0x00, 0x00, 0xff);
setchar(0x96EBB8C, 0x00, 0x00, 0xff);
#cheat Ammunation Blip out Line Color ( Blue )
setchar(0x96EBB74, 0x00, 0x00, 0xff);
setchar(0x96EBB78, 0x00, 0x00, 0xff);
setchar(0x96EBB7C, 0x00, 0x00, 0xff);

#cheat Bomb Shop Color ( Inside ) Blue
setchar(0x96EBD30, 0x00, 0x00, 0xff);
#cheat Bomb Shop Color ( inside 2 ) Blue
setchar(0x96EBD34, 0x00, 0x00, 0xff);
#cheat Bomb Shop Out line Colors Red
setchar(0x96EBD24, 0xff, 0x00, 0x00);
setchar(0x96EBD28, 0xff, 0x00, 0x00);

#cheat pay n` Spray Out Lines Blue
setchar(0x96EB5C4, 0x00, 0x00, 0xff);
#cheat Pay n` Spray main Inside Color ( Red )
setchar(0x96EB5C8, 0xff, 0x00, 0x00);

#cheat pinata man
static pinata;
if(!pinata){ 
moveto(getfloat(pplayer+0x30)+5, getfloat(pplayer+0x34)+5, getfloat(pplayer+0x38)+1); 
pinata = object(0x1C91, 0, 0, 0);}
dx = getfloat( pplayer+0x30 ) - getfloat( pinata+0x30 );
dy = getfloat( pplayer+0x34 ) - getfloat( pinata+0x34 );
atan2(rot,dy,dx) * -180 / 3.14159 + 90;selectobject( pinata );
setfloat(pinata+0x38, getfloat(pplayer+0x38)+1);
setfloat(pinata+0x30, getfloat(pinata+0x30) + sin( rot ) * 0.05, getfloat( pinata+0x34 ) + cos( rot ) * 0.05 );
setfloat(pinata, cos( rot ), -sin( rot ));
setfloat(pinata+0x10, sin( rot ), cos( rot ));
propagateobject();

#cheat pinata man
static pinata;
if(!pinata){
moveto(getfloat(pplayer+0x30)+5, getfloat(pplayer+0x34)+5, getfloat(pplayer+0x38)+1);
pinata = object(0x1C91, 0, 0, 0);}
dx = getfloat( pplayer+0x30 ) - getfloat( pinata+0x30 );
dy = getfloat( pplayer+0x34 ) - getfloat( pinata+0x34 );
//atan2
abs_y = abs(dy);
if (dx >= 0){
r = (dx - abs_y) / (dx + abs_y);
angle = 0.7853975 - 0.7853975 * r;}
else{
r = (dx + abs_y) / (abs_y - dx);
angle = 2.3561925 - 0.7853975 * r;}
rot = ((dy < 0) ? -angle : angle) * -180 / 3.14159 + 90;
selectobject( pinata );
setfloat(pinata+0x38, getfloat(pplayer+0x38)+1);
setfloat(pinata+0x30, getfloat(pinata+0x30) + sin( rot ) * 0.05, getfloat( pinata+0x34 ) + cos( rot ) * 0.05 );
setfloat(pinata, cos( rot ), -sin( rot ));
setfloat(pinata+0x10, sin( rot ), cos( rot ));
propagateobject();

#cheat max out bullets that hit stat
setint(0x08BB41D0, 2147483647);

#cheat nothing
setchar(0x08C40849, 17);

#cheat easter egg 1,2,3,4
//made with Button Cheat Maker by DDM
if(press & CTRL_UP){
teleport(-915.48, -842.81, 12.18);}
if(press & CTRL_DOWN){
teleport(-728.71, -1417.24, 12.60);}
if(press & CTRL_LEFT){
teleport(-979.90, 267.10, 8.81);}
if(press & CTRL_RIGHT){
teleport(415.27, 203.02, 11.95);}

#cheat easter egg 5,6,7,8
//made with Button Cheat Maker by DDM
if(press & CTRL_UP){
teleport(79.12, 1092.96, 32.60);}
if(press & CTRL_DOWN){
teleport(-1552.07, 1258.80, 8.73);}
if( & CTRL_LEFT){
teleport(-707.99, 1301.08, 11.76);}
if(press & CTRL_RIGHT){
teleport(-0.68, -1233.04, 23.47);}

#cheat easter egg 9 & 10
if( & CTRL_LTRIGGER){
teleport(358.45, 1103.05, -193.60);}
if( & CTRL_RTRIGGER){
teleport(302.95, -453.77, 5.74);}

#cheat White Nite Stick Color
setchar(0x9AF2C50,  0xff,  0xff,  0xff); 
setchar(0x9AF2C54,  0xff,  0xff,  0xff); 
setchar(0x9AF2C58,  0xff,  0xff,  0xff); 
setchar(0x9AF2C5C,  0xff,  0xff,  0xff); 
setchar(0x9AF2C60,  0xff,  0xff,  0xff); 
setchar(0x9AF2C64,  0xff,  0xff,  0xff); 
setchar(0x9AF2C68,  0xff,  0xff,  0xff); 
setchar(0x9AF2C6C,  0xff,  0xff,  0xff); 
setchar(0x9AF2C70,  0xff,  0xff,  0xff); 
setchar(0x9AF2C74,  0xff,  0xff,  0xff); 
setchar(0x9AF2C78,  0xff,  0xff,  0xff); 
setchar(0x9AF2C7C,  0xff,  0xff,  0xff); 
setchar(0x9AF2C80,  0xff,  0xff,  0xff); 
setchar(0x9AF2C84,  0xff,  0xff,  0xff); 
setchar(0x9AF2C88,  0xff,  0xff,  0xff); 
setchar(0x9AF2C8C,  0xff,  0xff,  0xff);

#cheat Nite Stick Color Blue
setchar(0x9AF2C50,   0x00,   0x00,   0xff);  
setchar(0x9AF2C54,   0x00,   0x00,   0xff);  
setchar(0x9AF2C58,   0x00,   0x00,   0xff);  
setchar(0x9AF2C5C,   0x00,   0x00,   0xff);  
setchar(0x9AF2C60,   0x00,   0x00,   0xff);  
setchar(0x9AF2C64,   0x00,   0x00,   0xff);  
setchar(0x9AF2C68,   0x00,   0x00,   0xff);  
setchar(0x9AF2C6C,   0x00,   0x00,   0xff);  
setchar(0x9AF2C70,   0x00,   0x00,   0xff);  
setchar(0x9AF2C74,   0x00,   0x00,   0xff);  
setchar(0x9AF2C78,   0x00,   0x00,   0xff);  
setchar(0x9AF2C7C,   0x00,   0x00,   0xff);  
setchar(0x9AF2C80,   0x00,   0x00,   0xff);  
setchar(0x9AF2C84,   0x00,   0x00,   0xff);  
setchar(0x9AF2C88,   0x00,   0x00,   0xff);  
setchar(0x9AF2C8C,   0x00,   0x00,   0xff);

#cheat Nite Stick Color Red
setchar(0x9AF2C50,  0xff,  0x00,  0x00); 
setchar(0x9AF2C54,  0xff,  0x00,  0x00); 
setchar(0x9AF2C58,  0xff,  0x00,  0x00); 
setchar(0x9AF2C5C,  0xff,  0x00,  0x00); 
setchar(0x9AF2C60,  0xff,  0x00,  0x00); 
setchar(0x9AF2C64,  0xff,  0x00,  0x00); 
setchar(0x9AF2C68,  0xff,  0x00,  0x00); 
setchar(0x9AF2C6C,  0xff,  0x00,  0x00); 
setchar(0x9AF2C70,  0xff,  0x00,  0x00); 
setchar(0x9AF2C74,  0xff,  0x00,  0x00); 
setchar(0x9AF2C78,  0xff,  0x00,  0x00); 
setchar(0x9AF2C7C,  0xff,  0x00,  0x00); 
setchar(0x9AF2C80,  0xff,  0x00,  0x00); 
setchar(0x9AF2C84,  0xff,  0x00,  0x00); 
setchar(0x9AF2C88,  0xff,  0x00,  0x00); 
setchar(0x9AF2C8C,  0xff,  0x00,  0x00);

#cheat 2D wintergreen
setchar(pcar + 0x00000003, 62);
setchar(0x098F56A3, 127);

#cheat First Person View in Car
setchar(pplayer + 0x000008B4, 61);
#off
setchar(pplayer + 0x000008B4, 55);

#cheat Teleport into Mendez House Interior
teleport(16.78,  1150.80,  -193.79);

#cheat Pop Everything
if(press & CTRL_UP)
setchar(pcar + 0x000003BA, 2);
if(press & CTRL_DOWN)
setchar(pcar + 0x000003BB, 2);
if(press & CTRL_RIGHT)
setchar(pcar + 0x000003BD, 2);
if(press & CTRL_LEFT)
setchar(pcar + 0x000003BC, 2);
#off
setchar(pcar + 0x000003BC, 0);
setchar(pcar + 0x000003BD, 0);
setchar(pcar + 0x000003BB, 0);
setchar(pcar + 0x000003BA, 0);

#cheat Drifting Minigame Easy
static score;
static getMoney;
static money;
static points;
if(!getMoney) {
money = getint(0x08bde55c);
getMoney = 2;}
if(getchar(pcar+0x764) == 0x02 || getchar(pcar+0x768) == 0x02 || getchar(pcar+0x76C) == 0x02 || getchar(pcar+0x770) == 0x02) {
score += points;
points += 0.2;}
else {
points = 7.5;}
if(getint(pcar+0x150) && score > 200) {
score -= 200;
points = 7.5;}
setint(0x08bde55c,  score); 
if(points > 22.5) {
setchar(0x9569c90,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x80,  0x3f,  0x00,  0x00, 0x00,  0x00,  0xff,  0x20,  0x00);
setshort(0x08e90bd8, 1, 'Y', 'o', 'u', ' ', 'a', 'r', 'e', ' ', 'o', 'n', ' ', 'F', 'I', 'R', 'E', '!', 0);}
else {
setchar(0x9569c90,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x80,  0x3f,  0x04,  0x00,  0x00,  0x00,  0x80,  0x80,  0x80);}
#off
setint(0x08bde55c,  money);
score = getMoney = money = 0;

#cheat Drifting Minigame
static score;
static getMoney;
static money;
static points;
if(!getMoney) {
money = getint(0x08bde55c);
getMoney = 1;}
if(getchar(pcar+0x764) == 0x02 || getchar(pcar+0x768) == 0x02 || getchar(pcar+0x76C) == 0x02 || getchar(pcar+0x770) == 0x02) {
score += points;
points += 0.1;}
else {
points = 5;}
if(getint(pcar+0x150) && score > 100) {
score -= 100;
points = 5;}
setint(0x08bde55c,  score); 
if(points > 15) {
setchar(0x9569c90,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x80,  0x3f,  0x00,  0x00, 0x00,  0x00,  0xff,  0x20,  0x00);
setshort(0x08e90bd8, 1, 'Y', 'o', 'u', ' ', 'a', 'r', 'e', ' ', 'o', 'n', ' ', 'F', 'I', 'R', 'E', '!', 0);}
else {
setchar(0x9569c90,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x80,  0x3f,  0x04,  0x00,  0x00,  0x00,  0x80,  0x80,  0x80);}
#off
setint(0x08bde55c,  money);
score = getMoney = money = 0;

#cheat Drifting Minigame Hard
static score;
static getMoney;
static money;
static points;
if(!getMoney) {
money = getint(0x08bde55c);
getMoney = 0.75;}
if(getchar(pcar+0x764) == 0x02 || getchar(pcar+0x768) == 0x02 || getchar(pcar+0x76C) == 0x02 || getchar(pcar+0x770) == 0x02) {
score += points;
points += 0.06;}
else {
points = 2.5;}
if(getint(pcar+0x150) && score > 50) {
score -= 100;
points = 2.5;}
setint(0x08bde55c,  score); 
if(points > 7.5) {
setchar(0x9569c90,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x80,  0x3f,  0x00,  0x00, 0x00,  0x00,  0xff,  0x20,  0x00);
setshort(0x08e90bd8, 1, 'Y', 'o', 'u', ' ', 'a', 'r', 'e', ' ', 'o', 'n', ' ', 'F', 'I', 'R', 'E', '!', 0);}
else {
setchar(0x9569c90,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x80,  0x3f,  0x04,  0x00,  0x00,  0x00,  0x80,  0x80,  0x80);}
#off
setint(0x08bde55c,  money);
score = getMoney = money = 0;

#cheat San Andreas Nos
static On;
static going;
if(buttons & CTRL_CIRCLE &&!On) {  
On = 1;}
if(On) {
static timepassed;
static init;
if(!init){  
lasttime = getchar( 0x08bb3b41 );  
init = 1;}
if( lasttime != getchar( 0x08bb3b41 ) ){  
timepassed++;  
lasttime = getchar( 0x08bb3b41 );}
if( timepassed < 15 ){   
going = 1;}
else { 
On = 0; 
timepassed = 0; 
going = 0;}}
if(going) {  
setchar(0x09569B90,   0x10);  
setchar(0x09569B94,   0,   127,   255);
speed = 1.5;
thrust = speed * 0.00333;
if(buttons & CTRL_CROSS) {
setfloat(pcar + 0x0140, getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);
setfloat(pcar + 0x0144,   getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust);}}
else{
setchar(0x09569B90,   0x4);  
setchar(0x09569B94,   63,   63,   63);}

#cheat First Person View in Car v2
setchar(pplayer + 0x000008B4, 61);
setchar(pplayer+0x4C,   0x10,   0x20);
#off 
setchar(pplayer+0x4C,   0x00,   0x00); 
setchar(pplayer + 0x000008B4, 55);

#cheat Automatically Busted
setchar(pplayer + 0x000008B4, 65);
 
#cheat Pop open Everything v2 O&R
if (buttons & CTRL_CIRCLE && buttons & CTRL_UP) 
setchar(pcar + 0x000003BA,  2); 
if (buttons & CTRL_CIRCLE && buttons & CTRL_DOWN) 
setchar(pcar + 0x000003BB,  2); 
if (buttons & CTRL_CIRCLE && buttons & CTRL_RIGHT) 
setchar(pcar + 0x000003BD,  2); 
if (buttons & CTRL_CIRCLE && buttons & CTRL_LEFT) 
setchar(pcar + 0x000003BC,  2); 
if (buttons & CTRL_RTRIGGER && buttons & CTRL_UP) 
setchar(pcar + 0x000003BA,  0); 
if (buttons & CTRL_RTRIGGER && buttons & CTRL_DOWN) 
setchar(pcar + 0x000003BB,  0); 
if (buttons & CTRL_RTRIGGER && buttons & CTRL_RIGHT) 
setchar(pcar + 0x000003BD,  0); 
if (buttons & CTRL_RTRIGGER && buttons & CTRL_LEFT) 
setchar(pcar + 0x000003BC,  0); 
#off 
setchar(pcar + 0x000003BC,  0); 
setchar(pcar + 0x000003BD,  0); 
setchar(pcar + 0x000003BB,  0); 
setchar(pcar + 0x000003BA,  0);

#cheat text
//Made with DDM's Text Editor
setshort(0x08e90bd8, 1, 'l', 'e', 'f', 't', ' ', 'a', 'n', 'd', ' ', 'r', 'i', 'g', 'h', 't', ' ', 'f', 'o', 'r', ' ', 's', 'i', 'd', 'e', 'w', 'a', 'y', 's', ',', 'u', 'p', ' ', 'a', 'n', 'd', ' ', 'd', 'o', 'w', 'n', ' ', 'f', 'o', 'r', ' ', 'f', 'r', 'o', 'n', 't', ' ', 'a', 'n', 'd', ' ', 'b', 'a', 'c', 'k', ',', 'c', 'i', 'r', 'c', 'l', 'e', ' ', 't', 'o', ' ', 'h', 'o', 'p', ' ', 0); 

#cheat instruction book for xsjado's pop everything code
//Made with DDM's Text Editor
setshort(0x08e90bd8, 1, 'p', 'r', 'e', 's', 's', ' ', 'c', 'i', 'r', 'c', 'l', 'e', ' ', 'a', 'n', 'd', ' ', 'u', 'p', ' ', 't', 'o', ' ', 'p', 'o', 'p', ' ', 't', 'h', 'e', ' ', 'h', 'o', 'o', 'd', ',', 'p', 'r', 'e', 's', 's', ' ', 'c', 'i', 'r', 'c', 'l', 'e', ' ', 'a', 'n', 'd', ' ', 'd', 'o', 'w', 'n', ' ', 't', 'o', ' ', 'p', 'o', 'p', ' ', 't', 'h', 'e', ' ', 'b', 'o', 'o', 't', ',', 'p', 'r', 'e', 's', 's', ' ', 'c', 'i', 'r', 'c', 'l', 'e', ' ', 'a', 'n', 'd', ' ', 'r', 'i', 'g', 'h', 't', ' ', 't', 'o', ' ', 'o', 'p', 'e', 'n', ' ', 't', 'h', 'e', ' ', 'r', 'i', 'g', 'h', 't', ' ', 'd', 'o', 'o', 'r', ',', 'p', 'r', 'e', 's', 's', ' ', 'c', 'i', 'r', 'c', 'l', 'e', ' ', 'a', 'n', 'd', ' ', 'l', 'e', 'f', 't', ' ', 't', 'o', ' ', 'o', 'p', 'e', 'n', ' ', 'l', 'e', 'f', 't', ' ', 'd', 'o', 'o', 'r', ' ', ',', 'p', 'r', 'e', 's', 's', ' ', 'R', ' ', 'a', 'n', 'd', ' ', 'u', 'p', ' ', 't', 'o', ' ', 'l', 'o', 'c', 'k', ' ', 'h', 'o', 'o', 'd', ' ', 'i', 'n', ' ', 'p', 'o', 's', 'i', 't', 'i', 'o', 'n', ',', 'p', 'r', 'e', 's', 's', ' ', 'R', ' ', 'a', 'n', 'd', ' ', 'd', 'o', 'w', 'n', ' ', 't', 'o', ' ', 'l', 'o', 'c', 'k', ' ', 'b', 'o', 'o', 't', ' ', 'i', 'n', ' ', 'p', 'o', 's', 'i', 't', 'i', 'o', 'n', ',', 'p', 'r', 'e', 's', 's', ' ', 'R', ' ', 'a', 'n', 'd', ' ', 'r', 'i', 'g', 'h', 't', ' ', 't', 'o', ' ', 'l', 'o', 'c', 'k', ' ', 'r', 'i', 'g', 'h', 't', ' ', 'd', 'o', 'o', 'r', ' ', 'p', 'o', 's', 'i', 't', 'i', 'o', 'n', ',', 'p', 'r', 'e', 's', 's', ' ', 'R', ' ', 'a', 'n', 'd', ' ', 'l', 'e', 'f', 't', ' ', 't', 'o', ' ', 'l', 'o', 'c', 'k', ' ', 'l', 'e', 'f', 't', ' ', 'd', 'o', 'o', 'r', ' ', 'p', 'o', 's', 'i', 't', 'i', 'o', 'n', 0);

#cheat cars you don't see everyday
pspawn = 0x08E81290;
setint(pspawn, 262);
setfloat(pspawn + 0x4, 244.63, -183.85, 29.08, 90);
pspawn += 0x30;
setint(pspawn, 172);
setfloat(pspawn + 0x4, 225.27, -230.23, 11.41, 60); 
pspawn += 0x30;
setint(pspawn, 175);
setfloat(pspawn + 0x4, 346.95, -281.08, 10.88, 180); 
pspawn += 0x30;
setint(pspawn, 187);
setfloat(pspawn + 0x4, 454.94, 13.13, 10.67, 90); 
pspawn += 0x30;
setint(pspawn, 212);
setfloat(pspawn + 0x4, 370.25, 705.49, 11.32, 0); 
pspawn += 0x30;
setint(pspawn, 268);
setfloat(pspawn + 0x4, 520.97, 502.66, 10.99, 0);
pspawn += 0x30;

#cheat Hydraulics
setshort(0x08e90bd8, 1, 'P', 'r', 'e', 's', 's', ' ', 'r', 'i', 'g', 'h', 't', ' ', 't', 'o', ' ', 't', 'i', 'l', 't', ' ', 't', 'h', 'e', ' ', 'c', 'a', 'r', ' ', 'r', 'i', 'g', 'h', 't', ',', ' ', 'l', 'e', 'f', 't', ' ', 't', 'o', ' ', 't', 'i', 'l', 't', ' ', 'i', 't', ' ', 'l', 'e', 'f', 't', ',', ' ', 'u', 'p', ' ', 't', 'o', ' ', 't', 'i', 'l', 't', ' ', 'i', 't', ' ', 'f', 'o', 'r', 'w', 'a', 'r', 'd', 's', ',', ' ', 'd', 'o', 'w', 'n', ' ', 't', 'o', ' ', 't', 'i', 'l', 't', ' ', 'i', 't', ' ', 'b', 'a', 'c', 'k', 'w', 'a', 'r', 'd', 's', ',', ' ', 'H', 'o', 'l', 'd', ' ', 'R', ' ', 'a', 'n', 'd', ' ', 't', 'a', 'p', ' ', 'c', 'i', 'r', 'c', 'l', 'e', ' ', 't', 'o', ' ', 'b', 'o', 'u', 'n', 'c', 'e', '.', ' ', 'C', 'i', 'r', 'c', 'l', 'e', ' ', 'r', 'e', 's', 'e', 't', 's', ' ', 'c', 'a', 'r', '.', 0); 
if(buttons & CTRL_LEFT){
setchar(pcar + 0x000003B8, 0);
setchar(pcar + 0x000003B9, 0);
setchar(pcar + 0x000003B7, 2);
setchar(pcar + 0x000003B6, 2);}
if(buttons & CTRL_RIGHT){
setchar(pcar + 0x000003B8, 2);
setchar(pcar + 0x000003B9, 2);
setchar(pcar + 0x000003B7, 0);
setchar(pcar + 0x000003B6, 0);}
if(buttons & CTRL_UP){
setchar(pcar + 0x000003B8, 2);
setchar(pcar + 0x000003B6, 2);
setchar(pcar + 0x000003B7, 0);
setchar(pcar + 0x000003B9, 0);}
if(buttons & CTRL_DOWN){
setchar(pcar + 0x000003B7, 2);
setchar(pcar + 0x000003B9, 2);
setchar(pcar + 0x000003B6, 0);
setchar(pcar + 0x000003B8, 0);}
if (press & CTRL_RTRIGGER){
setchar(pcar + 0x000003B7, 2);
setchar(pcar + 0x000003B9, 2);
setchar(pcar + 0x000003B8, 2);
setchar(pcar + 0x000003B6, 2);}
if(buttons & CTRL_CIRCLE){
setchar(pcar + 0x000003B6, 0);
setchar(pcar + 0x000003B7, 0);
setchar(pcar + 0x000003B9, 0);
setchar(pcar + 0x000003B8, 0);}
#off
setchar(pcar + 0x000003B6, 0);
setchar(pcar + 0x000003B7, 0);
setchar(pcar + 0x000003B9, 0);
setchar(pcar + 0x000003B8, 0);

#cheat  
setshort(0x08e90bd8, 1, 'l', 'e', 'v', 'e', 'l', ' ', 'p', 'a', 's', 's', 'e', 'd', 0);

#cheat Coordinates Test
X1 = -750.37;
Y1 = 1012.38;
X2 = -755.22;
Y2 = 1019.48;
if(getfloat(pobj+0x30) >= X1 && getfloat(pobj+0x30) <= X2 && getfloat(pobj+0x34) >= Y1 getfloat(pobj+0x34) <= Y2){
teleport(-364.26,  1283.05,  374.50);}

#cheat Show Vehicles Health In Armor Bar V1
CarHP = getfloat(pcar+0x027C);
setfloat(pplayer+0x4E8,   ((CarHP-250)/750)*100); 

#cheat Unknown
XCo =3434387
YCo =6736273
if(getfloat(pcar+0x30) > XCo-10 && getfloat(pcar+0x30) < XCo-10 && getfloat(pcar+0x34) > YCo-10 && getfloat(pcar+0x34) < YCo-10)

#cheat Unknown
static TimerFPS =;
Time = 5*FPS;
Timer = 1;
Timer++
if(press & CTRL_RTRIGGER && Timer >= Time){
Timer = 1}

#cheat Unknown
static fInt;
static oldTime;
if(!fInt){
oldTime  = getchar(0x08bb3b40);
fInt = 1;}
Time = getchar(0x08bb3b40);
if(press & CTRL_RTRIGGER &&  Time >= oldTime+5){
oldTime  = getchar(0x08bb3b40);}

#cheat Unknown
time = setfloat(0x08bb3b40)
if(time+5 && CTRL_RTRIGGER)

#cheat Vehicles Health Bar Mod V2
//Thanks To Waterbottle for helping me getting the armor back
//Bar Color found by vettefan88
CarHP = getfloat(pcar+0x027C);
static armor;
static wasin;
static fInt;
if(!fInt){
armor = getfloat(pplayer + 0x4E8);  
fInt = 1;}
if (pcar){
wasin = true;
//Show Health In Bar
setfloat(pplayer+0x4E8,   ((CarHP-250)/750)*100);
//change color
for(neon=0;neon<15;neon++){
setchar(0x96E1ED0+4*neon,   40,  240,  40);}}
else{  
if(wasin){
wasin = false;
setfloat(pplayer + 0x4E8,  armor);
//change color
for(neon=0;neon<15;neon++){
setchar(0x96E1ED0+4*neon,   106,  255,  255);}}
armor = getfloat(pplayer + 0x4E8);} 

#cheat Infinate adrenaline
//BY PSPHACKER108 
setchar(0x08BB3B5B,   0x8f);
#cheat Turbo Walker
//BY PSPHACKER108
setchar(0x08BB3B5B,  0x4f);
#cheat Infinate adrenaline/ walking code off
//BY PSPHACKER108
setchar(0x08BB3B5B,  0x3f);

#cheat Car Realism v1
health = getfloat(pcar+0x027c); 
speed = sqrt(getfloat(pcar + 0x140) * getfloat(pcar + 0x140) + getfloat(pcar + 0x144) * getfloat(pcar + 0x144)); 
setfloat(0x9632544,  0.0); 
if(speed>0.93) { 
setchar(pcar + 0x000003B7,  1); 
setchar(pcar + 0x000003B9,  1); } 
if(health<999) { 
setchar(pcar + 0x0000022f,  255); } 
if(health<400) { 
setchar(pcar + 0x000003B6,  1); } 
if(health<300) { 
setchar(pcar + 0x000003B8,  1); } 
if(buttons & CTRL_CROSS) { 
setfloat(0x9632544,  -1.5); } 
if(speed>0.30) { 
setfloat(0x9632544,  0.0); } 
if(speed=0.0) { 
setfloat(0x9632544,  0.0); } 
if(buttons & CTRL_SQUARE) { 
setfloat(0x9632544,  0.0); } 
#off 
setfloat(0x9632544,  0.0); 
setchar(pcar + 0x0000022f,  0); 

#cheat VRA Base 2
static Gate;
if(pcar){
moveMent = pcar;}
else{
moveMent = pplayer;}
Xco = getfloat(moveMent+ 0x30);
Yco = getfloat(moveMent+ 0x34);
Zco = getfloat(moveMent+ 0x38);
if(!Gate){
moveto( -730.54,563.70,12.83);
Gate = object(0x1D1C,0,0,90);}
else{
selectobject(Gate);
if(Xco < -718.50 && Xco > -739.99 && Yco < 577.52 && Yco > 549.70 && Zco < 15.93 && Zco > 10.93){ 
setfloat(Gate+0x34,   getfloat(Gate+0x34) - 0.1);  }
else{ 
setfloat(Gate+0x34,   getfloat(Gate+0x34) + 0.1);}
if(getfloat(Gate+0x34) < 552.70){ 
setfloat(Gate+0x34,   552.70);}
if(getfloat(Gate+0x34) > 563.70){ 
setfloat(Gate+0x34,   563.70);}
propagateobject();}
#cheat teleport to VRA Base 2
teleport( -677.44, 550.65, 11.08);

#cheat DONT CHANGE THE 44 CODE AT COLUMN 7 (0 1 2 3 4 5 6 7 8 9 A B C D E F) this WILL freeze your game
setchar(pcar + 0x260,  0xXX,  0xXX,  0xXX);

#cheat prankster city
moveto(497.54,-423.91,9.81);  object(0x02A5,10,0,182);
move(-0.20,-7.36,1.80);  object(0x02A5,5,0,182);
move(-0.26,-7.15,2.90);  object(0x02A5,355,0,182);
move(-0.24,-6.57,3.60);  object(0x02A5,350,0,182);
move(3.54,-7.77,-2.90);  object(0x02A5,105,0,274);
move(-7.89,0.72,0.00);  object(0x02A5,105,0,91);
move(3.60,-4.13,0.00);  object(0x02A5,105,0,357);
move(0.05,8.39,0.00);  object(0x02A5,105,0,183);
move(-14.44,-2.48,13.15);  object(0x1CB2,0,270,271);
moveto(496.41,-454.12,23.40);  object(0x1CAA,255,0,180);
moveto(517.23,-409.85,10.30);  object(0x01C2,0,0,10);
move(-0.89,0.14,0.00);  object(0x01C2,0,0,2);
move(-0.90,0.03,0.00);  object(0x01C2,0,0,2);
move(-0.90,0.03,0.00);  object(0x01C2,0,0,2);
move(-0.90,0.03,0.00);  object(0x01C2,0,0,2);
move(-0.90,0.03,0.00);  object(0x01C2,0,0,2);
move(0.03,0.97,0.00);  object(0x01C2,0,0,2);
move(0.03,0.99,0.00);  object(0x01C2,0,0,2);
move(0.03,0.93,0.00);  object(0x01C2,0,0,2);
move(0.03,1.14,0.00);  object(0x01C2,0,0,2);
move(-0.14,-4.92,0.00);  object(0x01C2,0,0,2);
move(-0.02,-0.88,0.00);  object(0x01C2,0,0,2);
move(-0.03,-0.87,0.00);  object(0x01C2,0,0,2);
move(-0.03,-0.91,0.00);  object(0x01C2,0,0,2);
move(4.57,2.50,0.00);  object(0x01C2,0,0,2);
move(-0.02,-0.83,0.00);  object(0x01C2,0,0,2);
move(-0.02,-0.88,0.00);  object(0x01C2,0,0,2);
move(-0.03,-0.85,0.00);  object(0x01C2,0,0,2);
move(0.12,4.42,0.00);  object(0x01C2,0,0,2);
move(0.03,0.98,0.00);  object(0x01C2,0,0,2);
move(0.03,1.05,0.00);  object(0x01C2,0,0,2);
move(0.02,0.89,0.00);  object(0x01C2,0,0,2);
moveto(501.30,-480.84,11.01);  object(0x1CB2,0,270,181);
move(-0.21,-14.09,-0.60);  object(0x1CB2,275,275,86);
move(-3.10,14.28,1.30);  object(0x1CB2,180,180,1);
move(6.60,-0.06,0.00);  object(0x1CB2,180,180,1);
move(-3.04,7.08,-4.10);  object(0x1CB2,90,180,87);
move(-0.23,-3.57,2.70);  object(0x01C2,0,0,172);
move(0.69,0.10,-0.30);  object(0x01C2,0,0,172);
move(-0.79,-0.11,0.00);  object(0x01C2,0,0,172);
move(-0.50,-0.07,0.00);  object(0x01C2,0,0,172);
move(-0.79,-0.11,0.00);  object(0x01C2,0,0,172);
move(-0.50,-0.07,0.00);  object(0x01C2,0,0,172);
move(-0.50,-0.07,0.00);  object(0x01C2,0,0,172);
move(-0.50,-0.07,0.00);  object(0x01C2,0,0,172);
move(1.29,0.18,0.00);  object(0x01C2,0,0,172);
move(0.98,0.39,0.20);  object(0x01C2,0,0,173);
move(-0.69,-0.09,0.00);  object(0x01C2,0,0,173);
move(1.19,0.15,0.00);  object(0x01C2,0,0,199);
move(1.14,-0.38,0.00);  object(0x01C2,0,0,182);
move(0.48,-0.15,0.00);  object(0x01C2,0,0,198);
move(0.38,-0.12,0.00);  object(0x01C2,0,0,198);
move(0.48,-0.15,0.00);  object(0x01C2,0,0,198);
move(0.29,-0.09,0.00);  object(0x01C2,0,0,198);
move(-6.13,0.06,-0.10);  object(0x01C2,0,0,113);
move(-1.03,0.43,0.00);  object(0x01C2,0,0,113);
move(-0.55,0.23,0.00);  object(0x01C2,0,0,113);
move(-0.52,0.22,0.00);  object(0x01C2,0,0,113);
move(-0.66,0.28,0.00);  object(0x01C2,0,0,113);
move(-0.55,0.23,0.00);  object(0x01C2,0,0,113);
move(-0.56,0.23,0.00);  object(0x01C2,0,0,113);
move(-0.48,0.20,0.00);  object(0x01C2,0,0,113);
move(-1.11,0.47,0.00);  object(0x01C2,0,0,113);
move(0.59,-0.25,0.00);  object(0x01C2,0,0,113);
move(-1.11,0.47,0.00);  object(0x01C2,0,0,113);
move(-0.55,0.23,0.00);  object(0x01C2,0,0,113);
move(-0.60,0.26,0.00);  object(0x01C2,0,0,113);
move(-0.29,0.12,0.00);  object(0x01C2,0,0,113);
move(6.87,-2.91,0.00);  object(0x01C2,0,0,113);
move(-0.55,0.23,0.00);  object(0x01C2,0,0,113);
move(-2.19,0.92,0.00);  object(0x01C2,0,0,113);
moveto(485.96,-459.27,28.17);  object(0x1CB2,0,270,179);
move(0.30,-13.55,0.00);  object(0x1CB2,0,270,179);
move(0.27,-12.18,0.00);  object(0x1CB2,0,270,179);
move(0.18,-13.36,0.00);  object(0x1CB2,0,270,179);
move(-0.70,-12.44,0.00);  object(0x1CB2,0,270,189);
move(-2.08,0.32,0.00);  object(0x1CB2,0,270,189);
move(0.47,9.27,0.00);  object(0x1CB2,0,270,183);
move(0.23,3.96,0.00);  object(0x1CB2,0,270,183);
move(-0.06,9.33,0.00);  object(0x1CB2,0,270,183);
move(-0.48,7.24,0.00);  object(0x1CB2,0,270,183);
move(-0.37,4.03,0.00);  object(0x1CB2,0,270,183);
move(0.57,9.93,0.00);  object(0x1CB2,0,270,183);
move(1.05,4.17,1.20);  object(0x1CB2,0,180,2);
move(-0.55,-13.58,0.00);  object(0x1CB2,0,180,2);
move(-0.33,-9.92,0.00);  object(0x1CB2,0,180,2);
move(-0.40,-13.46,0.00);  object(0x1CB2,0,180,2);
move(-1.10,-10.87,0.00);  object(0x1CB2,0,180,9);
move(2.11,-0.12,-0.40);  object(0x1CB2,0,90,7);
move(1.37,11.76,0.00);  object(0x1CB2,0,90,5);
move(0.52,13.65,0.00);  object(0x1CB2,0,90,359);
move(-0.12,13.86,0.00);  object(0x1CB2,0,90,359);
move(-0.14,8.42,0.00);  object(0x1CB2,0,90,359);
move(-0.13,8.19,0.00);  object(0x1CB2,0,90,359);
move(-0.21,13.00,0.00);  object(0x1CB2,0,90,359);
move(-0.10,5.94,0.00);  object(0x1CB2,0,90,0);
move(0.01,3.14,0.00);  object(0x1CB2,0,90,0);
move(0.01,2.36,0.00);  object(0x1CB2,0,90,0);
move(-1.16,-12.64,0.00);  object(0x1CB2,0,0,358);
move(-0.38,10.13,0.00);  object(0x1CB2,0,0,358);
move(1.39,5.42,-4.50);  object(0x1CB2,270,180,268);
move(-6.03,-24.62,3.80);  object(0x1CB2,0,100,180);
move(3.00,13.58,-1.80);  object(0x1CB2,0,0,180);
move(0.03,3.87,0.00);  object(0x1CB2,0,0,180);
move(-0.06,0.00,-6.60);  object(0x1CB2,0,0,181);
move(-0.08,-5.00,0.00);  object(0x1CB2,0,0,181);
move(6.32,4.88,6.00);  object(0x1CB2,0,0,181);
move(-0.19,-7.64,0.00);  object(0x1CB2,0,0,181);
move(-0.15,-6.11,0.00);  object(0x1CB2,0,0,181);
move(-0.27,-11.11,0.00);  object(0x1CB2,0,0,181);
move(0.78,24.41,-6.50);  object(0x1CB2,0,0,182);
move(0.00,0.00,-6.40);  object(0x1CB2,0,0,182);
move(-0.21,-9.33,6.60);  object(0x1CB2,0,0,2);
move(-0.36,-13.46,0.00);  object(0x1CB2,0,0,2);
move(-0.04,-1.39,0.00);  object(0x1CB2,0,0,2);
move(0.00,0.00,-5.60);  object(0x1CB2,0,0,2);
move(0.27,9.92,0.00);  object(0x1CB2,0,0,2);
moveto(489.03,-453.47,12.70);  object(0x1CB2,180,0,180);
move(0.03,7.48,0.50);  object(0x1CB2,180,0,187);
move(-0.61,-26.41,12.30);  object(0x1CB2,180,0,181);
move(-0.22,-14.50,0.00);  object(0x1CB2,180,0,181);
move(0.00,0.00,-6.40);  object(0x1CB2,180,0,181);
move(0.00,0.00,-6.20);  object(0x1CB2,180,0,181);
move(0.29,13.30,6.20);  object(0x1CB2,180,0,181);
move(0.00,0.00,-6.10);  object(0x1CB2,180,0,181);
move(-0.41,-25.10,12.40);  object(0x1CB2,180,0,181);
move(-0.01,-12.40,0.00);  object(0x1CB2,180,0,181);
move(0.00,0.00,-6.30);  object(0x1CB2,180,0,181);
move(0.00,0.00,-6.20);  object(0x1CB2,180,0,181);
move(0.00,0.00,-3.00);  object(0x1CB2,180,0,181);
move(0.01,13.50,9.10);  object(0x1CB2,180,0,181);
move(0.00,0.00,-6.20);  object(0x1CB2,180,0,181);
move(1.73,36.21,0.20);  object(0x1CB2,180,0,190);
move(0.17,14.27,0.00);  object(0x1CB2,180,0,172);
move(0.01,4.26,0.00);  object(0x1CB2,180,0,181);
move(-6.18,6.41,0.00);  object(0x1CB2,180,0,85);
move(7.10,-6.60,0.10);  object(0x1CB2,180,0,181);
move(-1.01,-21.09,0.00);  object(0x1CB2,180,0,182);
move(-0.12,-3.50,0.00);  object(0x1CB2,180,0,182);
move(-3.53,-6.92,-3.90);  object(0x1CB2,90,0,97);
move(0.01,6.92,7.00);  object(0x1CB2,90,270,91);
move(0.45,6.78,0.00);  object(0x1CB2,90,270,99);
move(0.10,12.79,0.00);  object(0x1CB2,90,270,82);
move(0.71,4.76,0.00);  object(0x1CB2,90,270,91);
move(-1.24,15.50,-1.20);  object(0x1CB2,90,180,91);
move(-0.03,0.40,0.00);  object(0x1CB2,90,180,91);
move(-0.02,0.30,0.00);  object(0x1CB2,90,180,91);
move(0.04,-0.60,0.00);  object(0x1CB2,90,180,91);
move(-3.11,-89.52,5.90);  object(0x1CB2,90,180,101);
move(1.57,-0.29,0.00);  object(0x1CB2,90,180,101);
move(0.00,0.00,-4.70);  object(0x1CB2,90,180,101);
move(-1.57,0.29,-5.10);  object(0x1CB2,90,180,101);
move(0.00,0.00,14.10);  object(0x1CB2,90,180,101);
move(1.67,-0.31,0.00);  object(0x1CB2,90,180,101);
move(0.72,9.88,3.61);  object(0x1CB2,90,90,96);
move(-0.65,-3.27,0.00);  object(0x1CB2,90,90,96);
move(0.40,0.03,0.00);  object(0x1CB2,90,90,96);
moveto(491.98,-475.94,7.60);  object(0x1CB2,0,0,292);
move(0.38,0.93,0.00);  object(0x1CB2,0,0,292);
move(-1.90,0.23,3.30);  object(0x01C2,0,0,292);
move(-0.01,0.00,1.00);  object(0x01C2,0,0,292);
move(0.00,0.00,1.10);  object(0x01C2,0,0,292);
move(0.00,0.00,1.00);  object(0x01C2,0,0,292);
move(0.00,0.00,0.80);  object(0x01C2,0,0,292);
move(0.00,0.00,-0.50);  object(0x01C2,0,0,113);
move(0.00,0.00,1.20);  object(0x01C2,0,0,113);
move(-0.00,0.00,0.90);  object(0x01C2,0,0,288);
move(0.00,0.00,1.00);  object(0x01C2,0,0,288);
move(0.00,0.00,0.60);  object(0x01C2,0,0,288);
move(0.00,0.00,0.60);  object(0x01C2,0,0,288);
move(0.00,0.00,0.50);  object(0x01C2,0,0,267);
move(0.00,0.00,0.70);  object(0x01C2,0,0,267);
move(0.00,0.00,0.70);  object(0x01C2,0,0,267);
move(0.00,0.00,1.10);  object(0x01C2,0,0,267);
move(0.00,0.00,0.70);  object(0x01C2,0,0,267);
move(0.00,0.00,1.10);  object(0x01C2,0,0,267);
move(0.00,0.00,1.00);  object(0x01C2,0,0,267);
move(0.00,0.00,0.60);  object(0x01C2,0,0,267);
move(0.00,0.00,1.00);  object(0x01C2,0,0,267);
move(0.00,0.00,0.40);  object(0x01C2,0,0,267);
move(0.00,0.00,0.50);  object(0x01C2,0,0,267);
move(0.00,0.00,0.70);  object(0x01C2,0,0,267);
move(0.00,0.00,0.80);  object(0x01C2,0,0,267);
move(0.00,0.00,0.70);  object(0x01C2,0,0,267);
move(0.00,0.00,0.50);  object(0x01C2,0,0,267);
moveto(498.07,-449.37,10.91);  object(0x1CB2,0,290,131);
move(-1.22,-0.02,0.00);  object(0x1CB2,0,290,89);
move(-2.68,-1.42,0.00);  object(0x1CB2,0,290,44);
move(0.11,-1.36,0.00);  object(0x1CB2,0,290,359);
move(0.69,-2.43,0.00);  object(0x1CB2,0,290,325);
move(2.13,0.33,0.00);  object(0x1CB2,0,290,274);
moveto(476.30,-534.43,11.51);  object(0x1CCF,265,0,290);
move(-1.52,-4.10,-0.20);  object(0x1CCF,265,0,291);
move(15.17,-10.64,1.20);  object(0x1CEB,180,0,16);
move(-6.54,2.49,-0.10);  object(0x1CEB,180,0,201);
move(0.00,0.00,-0.80);  object(0x1CEB,180,0,201);
move(0.00,0.00,-0.80);  object(0x1CEB,180,0,201);
move(6.55,-2.47,0.90);  object(0x1CEB,180,0,19);
move(0.00,0.00,-0.80);  object(0x1CEB,180,0,19);
moveto(511.70,-443.25,12.41);  object(0x1CB2,270,240,95);
move(-1.02,-11.86,6.90);  object(0x1CB2,270,240,95);
move(-1.16,-11.78,6.80);  object(0x1CB2,270,240,96);
move(-1.24,-11.33,6.60);  object(0x1CB2,270,240,96);
move(-4.72,-52.31,-18.70);  object(0x1CB2,270,305,88);
move(-0.38,11.29,8.00);  object(0x1CB2,270,305,88);
move(-0.30,10.00,6.90);  object(0x1CB2,270,305,88);
move(-4.08,9.14,4.10);  object(0x1CB2,270,270,359);
move(-9.60,-0.12,0.00);  object(0x1CB2,270,270,359);
move(-12.60,-0.15,0.00);  object(0x1CB2,270,270,359);
move(17.84,-10.75,-4.20);  object(0x1CB2,270,270,0);
move(4.50,-0.01,0.00);  object(0x1CB2,270,270,0);
move(4.10,-7.44,-5.80);  object(0x1CB2,270,215,270);
move(-40.72,17.70,10.00);  object(0x1CB2,270,270,358);
move(-13.49,-0.55,0.00);  object(0x1CB2,270,270,358);
move(-12.89,-0.52,0.00);  object(0x1CB2,270,270,358);
move(-13.49,-0.55,0.00);  object(0x1CB2,270,270,358);
move(-13.29,-0.54,0.00);  object(0x1CB2,270,270,358);
move(-13.69,-0.56,0.00);  object(0x1CB2,270,270,358);
move(-13.59,-0.55,0.00);  object(0x1CB2,270,270,358);
move(-9.39,-0.38,0.00);  object(0x1CB2,270,270,358);
move(-0.25,6.24,0.00);  object(0x1CB2,270,270,358);
move(0.59,-12.26,0.00);  object(0x1CB2,270,270,358);
move(-13.49,-0.49,0.00);  object(0x1CB2,270,270,358);
move(-0.23,6.13,0.00);  object(0x1CB2,270,270,358);
move(-0.23,6.28,0.00);  object(0x1CB2,270,270,358);
move(-0.38,3.19,3.20);  object(0x1CB2,180,180,89);
move(13.32,0.34,0.00);  object(0x1CB2,180,180,89);
move(0.48,-18.90,0.00);  object(0x1CB2,180,180,89);
move(-12.89,-0.32,0.00);  object(0x1CB2,180,180,89);
move(-7.48,7.21,0.00);  object(0x1CB2,180,180,358);
move(-0.16,4.32,0.00);  object(0x1CB2,180,180,358);
move(27.22,4.55,-4.10);  object(0x1CB2,90,180,355);
move(0.42,-12.12,0.00);  object(0x1CB2,90,180,0);
move(0.00,0.00,-14.10);  object(0x1CB2,90,180,0);
move(0.00,0.00,-2.70);  object(0x1CB2,90,180,0);
move(-0.54,12.22,2.80);  object(0x1CB2,90,180,353);
move(-2.80,-3.18,7.70);  object(0x1CB2,90,180,271);
move(0.14,6.40,0.00);  object(0x1CB2,90,180,271);
move(0.14,-12.21,0.00);  object(0x1CB2,90,180,271);
move(-0.14,-6.40,0.00);  object(0x1CB2,90,180,271);
move(-2.94,2.97,0.00);  object(0x1CB2,90,180,0);
move(0.00,0.00,-7.70);  object(0x1CB2,90,180,0);
move(2.91,-3.01,0.00);  object(0x1CB2,90,180,88);
move(-3.07,15.47,0.00);  object(0x1CB2,90,180,3);
move(0.01,0.02,7.80);  object(0x1CB2,90,180,3);
move(-21.45,-0.82,0.30);  object(0x1CB2,90,180,355);
move(0.00,0.00,-12.00);  object(0x1CB2,90,180,355);
move(0.42,-12.43,11.70);  object(0x1CB2,90,180,355);
move(0.00,0.00,-11.40);  object(0x1CB2,90,180,355);
move(2.34,15.75,11.40);  object(0x1CB2,90,180,85);
move(0.00,0.00,-7.40);  object(0x1CB2,90,180,85);
move(0.58,-12.50,6.90);  object(0x1CB2,90,180,85);
move(0.00,0.00,-8.50);  object(0x1CB2,90,180,85);
move(-0.27,6.20,8.00);  object(0x1CB2,90,180,85);
move(0.00,0.00,-8.70);  object(0x1CB2,90,180,85);
move(63.76,-4.04,10.00);  object(0x1CB2,90,180,270);
move(0.00,0.00,-13.30);  object(0x1CB2,90,180,270);
move(0.08,6.22,13.40);  object(0x1CB2,90,180,88);
move(0.07,-0.02,-12.60);  object(0x1CB2,90,180,90);
moveto(421.92,-502.60,25.75);  object(0x1CB2,270,0,177);
move(-0.00,0.00,-10.90);  object(0x1CB2,270,0,177);
move(-6.49,-0.38,10.90);  object(0x1CB2,270,0,177);
move(0.00,0.00,-10.20);  object(0x1CB2,270,0,177);
move(-28.86,1.89,20.40);  object(0x1CB2,180,0,87);
move(13.98,0.73,0.00);  object(0x1CB2,180,0,87);
move(12.79,0.67,0.00);  object(0x1CB2,180,0,87);
move(14.21,0.74,0.00);  object(0x1CB2,180,0,87);
move(13.64,0.62,0.00);  object(0x1CB2,180,0,88);
move(14.21,0.38,0.00);  object(0x1CB2,180,0,88);
moveto(386.58,-506.86,35.95);  object(0x1CB2,0,0,88);
move(12.14,0.44,0.00);  object(0x1CB2,0,0,88);
move(12.64,0.46,0.00);  object(0x1CB2,0,0,88);
move(13.24,0.48,0.00);  object(0x1CB2,0,0,88);
move(14.05,0.51,0.00);  object(0x1CB2,0,0,88);
move(14.08,0.51,0.00);  object(0x1CB2,0,0,88);
move(2.68,0.10,0.00);  object(0x1CB2,0,0,88);
move(-93.08,8.24,0.20);  object(0x1C91,0,0,179);
move(-1.00,0.94,0.00);  object(0x029F,0,0,90);
move(2.09,0.17,0.00);  object(0x029F,0,0,90);
move(-1.12,-2.20,0.00);  object(0x029F,0,0,355);
move(-0.14,1.68,1.60);  object(0x029F,270,0,355);
move(0.00,0.00,-3.50);  object(0x029F,270,0,355);
move(0.13,-1.65,1.60);  object(0x029F,180,0,357);
move(-2.09,2.06,0.20);  object(0x029F,180,0,267);
move(0.00,0.00,-0.30);  object(0x029F,180,0,267);
move(3.80,0.17,0.00);  object(0x029F,180,0,267);
move(-3.04,-5.41,-2.10);  object(0x01C2,180,0,173);
move(-0.73,-0.39,0.00);  object(0x01C2,180,0,173);
move(-0.54,-0.57,0.00);  object(0x01C2,180,0,173);
move(-0.30,-0.64,0.00);  object(0x01C2,180,0,173);
move(-0.37,-0.55,0.00);  object(0x01C2,180,0,173);
move(-0.32,-0.54,0.00);  object(0x01C2,180,0,173);
move(0.07,-0.60,0.00);  object(0x01C2,180,0,173);
move(0.22,-0.68,0.00);  object(0x01C2,180,0,173);
move(0.44,-0.65,0.00);  object(0x01C2,180,0,173);
move(0.50,-0.55,0.00);  object(0x01C2,180,0,173);
move(0.57,-0.34,0.00);  object(0x01C2,180,0,173);
move(0.63,-0.23,0.00);  object(0x01C2,180,0,173);
move(0.54,0.06,0.00);  object(0x01C2,180,0,173);
move(0.43,0.05,0.00);  object(0x01C2,180,0,173);
move(0.75,0.31,0.00);  object(0x01C2,180,0,23);
move(0.76,0.44,0.00);  object(0x01C2,180,0,23);
move(0.60,0.40,0.00);  object(0x01C2,180,0,23);
move(0.35,0.83,0.00);  object(0x01C2,180,0,23);
move(0.05,0.75,0.00);  object(0x01C2,180,0,340);
move(-0.23,0.66,0.00);  object(0x01C2,180,0,340);
move(-0.30,0.74,0.00);  object(0x01C2,180,0,332);
move(-0.36,0.48,0.00);  object(0x01C2,180,0,323);
move(-0.35,0.49,0.00);  object(0x01C2,180,0,322);
move(-0.44,0.41,0.00);  object(0x01C2,180,0,304);
move(-0.27,0.13,0.00);  object(0x01C2,180,0,296);
move(-0.38,0.12,0.00);  object(0x01C2,180,0,287);
move(-0.59,0.09,0.00);  object(0x01C2,180,0,279);
move(-0.61,-4.27,0.00);  object(0x01C2,180,0,37);
move(0.46,-0.46,0.00);  object(0x01C2,180,0,12);
move(0.70,0.16,0.00);  object(0x01C2,180,0,346);
move(0.50,0.20,0.00);  object(0x01C2,180,0,317);
move(0.07,0.62,0.00);  object(0x01C2,180,0,317);
move(0.55,-0.58,0.00);  object(0x01C2,180,0,317);
move(0.03,0.58,0.00);  object(0x01C2,180,0,317);
move(-0.21,1.35,0.00); object(0x01C2,180,0,329);
move(-0.27,0.54,0.00);  object(0x01C2,180,0,312);
move(-0.45,0.40,0.00);  object(0x01C2,180,0,312);
move(-0.67,0.18,0.00);  object(0x01C2,180,0,267);
move(-0.51,-0.10,0.00);  object(0x01C2,180,0,242);
move(-0.21,0.39,0.00);  object(0x01C2,180,0,242);
move(0.36,-0.67,0.00);  object(0x01C2,180,0,242);
move(-0.57,0.22,0.00);  object(0x01C2,180,0,242);
move(-0.15,-2.38,0.00);  object(0x01C2,180,0,23);
teleport(483.13, -451.48, 29.51);

#cheat 7.13.07
:( 7.13.07 BRROR

#cheat Blue Headlights
//by Vicecitystories
R = 0;
G = 0;
B = 255;
for(neon=0;light<16;light++){
setchar(0x9728570+4*light,  R,  G,  B);}
off();
 
#cheat Disco Head Lights
r = (abs((getint(pplayer+0x68)+getint(pplayer))*getint(0x08bb3b40)) % (255-1)) + 1;
g = (abs((getint(pplayer+0x64)+getint(pplayer+0x4))*getint(0x08bb3b40)) % (255-1)) + 1;
b = (abs((getint(pplayer+0x60)+getint(pplayer+0x8))*getint(0x08bb3b40)) % (255-1)) + 1;
for(i = 0x9728570; i < 0x972857f; i+= 0x4) {
setchar(i, r, g, b);}
r = (abs((getint(pplayer+0x68)+getint(pplayer))*getint(0x08bb3b40)) % (255-1)) + 1;
g = (abs((getint(pplayer+0x64)+getint(pplayer+0x4))*getint(0x08bb3b40)) % (255-1)) + 1;
b = (abs((getint(pplayer+0x60)+getint(pplayer+0x8))*getint(0x08bb3b40)) % (255-1)) + 1;
for(i = 0x9728584; i < 0x97285Af; i+= 0x4) {
setchar(i, r, g, b);}

#cheat Head lights (Inside Dot color)
R = 0;
G = 0;
B = 255;
setchar(0x9728570, R, G, B);

#cheat Square head lights ( green )
setchar(0x9728580, 0x00, 0xff, 0x00, 0xff);
#cheat Square head lights ( Blue )
setchar(0x9728580, 0x00, 0x00, 0xff, 0xff);
#cheat Square head lights ( Red )
setchar(0x9728580, 0xff, 0x00, 0x00, 0xff);

#cheat Construction 1
moveto(-1152.50,426.72,14.17); object(0x1CA6,0,0,3);
move(10.08,-0.55,1.10); object(0x1CA6,0,0,3);
move(0.00,0.00,-3.90); object(0x1CA6,0,0,3);
move(-10.19,0.45,0.00); object(0x1CA6,0,0,3);
move(-4.76,-4.79,2.40); object(0x1CA6,0,0,272);
move(0.00,0.00,1.60); object(0x1CA6,0,0,272);
move(19.59,-0.63,-0.20); object(0x1CA6,0,0,93);
#cheat Construction 2
moveto(-1155.15,425.96,13.47); object(0x1CE5,0,90,358);
move(0.00,0.00,0.60); object(0x1CE5,0,0,358);
move(1.50,0.06,0.00); object(0x1CE5,0,0,358);
move(1.50,0.06,0.00); object(0x1CE5,0,0,358);
move(0.00,0.00,-0.90); object(0x1CE5,0,0,358);
move(-1.50,-0.06,0.00); object(0x1CE5,0,0,358);
move(3.00,0.11,0.00); object(0x1CE5,0,0,358);

#cheat Construction 1+2
moveto(-1152.50,426.72,14.17); object(0x1CA6,0,0,3);
move(10.08,-0.55,1.10); object(0x1CA6,0,0,3);
move(0.00,0.00,-3.90); object(0x1CA6,0,0,3);
move(-10.19,0.45,0.00); object(0x1CA6,0,0,3);
move(-4.76,-4.79,2.40); object(0x1CA6,0,0,272);
move(0.00,0.00,1.60); object(0x1CA6,0,0,272);
move(19.59,-0.63,-0.20); object(0x1CA6,0,0,93);
moveto(-1155.15,425.96,13.47); object(0x1CE5,0,90,358);
move(0.00,0.00,0.60); object(0x1CE5,0,0,358);
move(1.50,0.06,0.00); object(0x1CE5,0,0,358);
move(1.50,0.06,0.00); object(0x1CE5,0,0,358);
move(0.00,0.00,-0.90); object(0x1CE5,0,0,358);
move(-1.50,-0.06,0.00); object(0x1CE5,0,0,358);
move(3.00,0.11,0.00); object(0x1CE5,0,0,358);

#cheat Radio Studio
moveto(288.92,-20.04,11.43);  object(0x029F,0,0,220);
move(-3.28,2.78,0.00);  object(0x029F,0,0,220);
move(-2.60,-0.51,0.00);  object(0x029F,0,0,130);
move(-1.39,-1.66,0.00);  object(0x029F,0,0,130);
move(0.83,4.88,0.00);  object(0x029F,0,0,220);
move(-1.83,1.56,0.00);  object(0x029F,0,0,220);
move(-4.27,-1.43,0.00);  object(0x029F,0,0,312);
move(-1.54,-1.71,0.00);  object(0x029F,0,0,312);
move(0.75,-2.37,-1.70);  object(0x1D06,0,0,312);
move(0.93,1.05,0.00);  object(0x1D06,0,0,312);
move(0.80,0.90,0.00);  object(0x1D06,0,0,312);
move(1.02,-0.49,0.00);  object(0x1D06,0,0,221);
move(0.98,-0.85,0.00);  object(0x1D06,0,0,221);
move(-0.20,-0.02,1.00);  object(0x1CFF,85,0,41);
move(-1.14,0.97,0.00);  object(0x1CFF,85,0,41);
move(-2.20,-1.34,0.30);  object(0x1CEA,0,0,128);
move(1.46,1.58,0.00);  object(0x1CEA,0,0,128);
move(-0.96,-0.92,-0.60);  object(0x1CEA,270,0,128);
move(2.36,0.34,0.00);  object(0x1CEA,270,0,223);
move(-2.61,-2.06,-0.70);  object(0x1D06,0,0,223);
move(0.95,-0.89,0.00);  object(0x1D06,0,0,223);
move(0.22,-0.21,0.00);  object(0x1D06,0,0,223);
move(0.08,-0.12,1.30);  object(0x1CEB,0,0,41);
move(-0.77,0.79,0.00);  object(0x1CEA,0,0,41);
move(-0.42,0.43,0.00);  object(0x1CEA,0,0,46);
move(2.66,2.47,0.00);  object(0x1C96,295,0,356);
move(0.08,-0.23,0.00);  object(0x1C97,310,0,216);
move(2.01,1.78,-1.30);  object(0x1D39,0,0,41);
move(-2.68,-3.08,0.00);  object(0x1CF7,0,0,221);
move(-0.68,-2.48,3.40);  object(0x1CEA,0,0,43);
move(-2.14,2.11,0.00);  object(0x1CEA,0,0,43);
move(7.22,-4.77,-3.40);  object(0x1D06,0,0,41);
move(1.10,-1.01,0.00);  object(0x1D06,0,0,41);
move(1.00,-0.84,0.00);  object(0x1D06,0,0,41);
move(1.05,0.48,-0.10);  object(0x1D06,0,0,307);
move(0.94,1.04,-0.10);  object(0x1D06,0,0,307);
move(0.94,1.04,-0.10);  object(0x1D06,0,0,307);
move(0.03,-0.25,0.70);  object(0x1CEA,275,0,307);
move(-1.14,-1.26,0.10);  object(0x1CEA,275,0,307);
move(-0.74,-0.81,0.10);  object(0x1CEA,275,0,307);
move(1.28,1.41,0.40);  object(0x1CEB,0,0,307);
move(-0.94,-1.04,0.10);  object(0x1CEB,0,0,307);
move(-1.71,0.08,0.00);  object(0x1CFF,0,0,223);
move(-1.84,1.31,-0.10);  object(0x1CFF,0,0,223);
move(1.07,-1.19,0.30);  object(0x1CEA,0,0,43);
move(-0.54,0.46,0.00);  object(0x1CEA,0,0,43);
move(7.04,14.70,0.00);  object(0x1C90,0,0,229);
moveto(284.96,-20.41,9.52);  object(0x1D39,0,0,41);
move(-1.16,-1.47,-0.50);  object(0x1CFE,0,0,45);
moveto(285.74,-6.08,9.84);  object(0x1D4E,0,0,41);
move(-2.01,-2.34,0.00);  object(0x1D4E,0,0,41);
move(3.33,-2.87,0.00);  object(0x1D4E,0,0,41);
move(3.11,-2.68,0.00);  object(0x1D4E,0,0,41);
move(0.84,-3.82,-0.10);  object(0x1D15,0,0,129);
move(-3.03,2.47,0.00);  object(0x1D15,0,0,129);
move(-1.39,1.15,0.00);  object(0x1D15,0,0,129);
move(-3.50,2.44,0.29);  object(0x1D39,0,0,312);
move(1.97,-1.77,0.00);  object(0x1D39,0,0,132);
teleport( 287.22, -14.93, 10.83);

#cheat City On Da Beach
moveto(382.15,1044.37,47.13);  object(0x1D08,0,5,198);
move(6.92,-24.60,0.00);  object(0x1D09,0,10,146);
move(42.52,-26.95,0.00);  object(0x1D4F,0,10,328);
move(10.13,-53.71,0.00);  object(0x1AC9,0,345,239);
move(-8.84,-18.36,0.00);  object(0x1AC8,0,345,24);
move(-51.66,-15.07,0.00);  object(0x1A9C,0,345,35);
move(39.77,25.00,0.00);  object(0x1A9B,0,345,8);
move(35.26,-46.33,0.00);  object(0x1CA1,0,345,289);
move(-0.43,-55.04,0.00);  object(0x1CA2,0,345,235);
move(32.50,38.56,0.00);  object(0x1CA3,0,345,90);
move(-54.50,15.73,0.00);  object(0x1CA4,0,345,84);
move(41.20,0.68,0.00);  object(0x1CA5,0,345,153);
move(12.03,28.66,0.00);  object(0x1CA6,0,345,95);
move(-21.62,-18.31,0.00);  object(0x1CA7,0,345,290);
move(6.93,-34.50,0.00);  object(0x1CA8,0,345,280);
move(-47.02,-17.46,0.00);  object(0x1CA9,0,345,324);
move(24.99,-5.58,0.00);  object(0x1CAA,0,345,196);
move(87.51,81.68,0.00);  object(0x1CAB,0,345,161);
move(-106.71,19.74,0.00);  object(0x1CAC,0,345,345);
moveto(448.74,-971.96,10.21);  object(0x1D25,0,0,329);
move(30.42,15.68,0.00);  object(0x1D53,0,0,331);
move(33.27,-29.51,-0.40);  object(0x1D52,0,0,174);
move(-18.75,-2.12,0.40);  object(0x1D53,0,0,175);
move(-33.55,-8.96,0.00);  object(0x1D64,0,0,151);
move(18.82,-34.92,-0.20);  object(0x1D64,0,0,334);
move(-26.83,-3.90,0.00);  object(0x1D57,0,0,245);
move(57.07,16.70,0.00);  object(0x1D54,0,0,64);
move(-38.82,16.95,0.00);  object(0x1D51,0,0,336);
move(-22.44,-2.45,0.00);  object(0x1D60,0,0,248);
move(38.94,35.86,0.00);  object(0x1D5D,0,0,155);
move(-65.02,-47.32,0.00);  object(0x1D5A,0,0,249);
move(-2.80,29.90,0.00);  object(0x1D5A,0,0,328);
move(39.20,-17.89,-0.30);  object(0x1D58,0,0,63);
move(-33.66,-57.56,0.80);  object(0x1D54,0,0,254);
move(-5.87,14.08,0.00);  object(0x1D50,0,0,252);
move(42.69,-12.77,-1.00);  object(0x1D58,0,0,154);
move(32.96,6.02,0.00);  object(0x1D55,0,0,153);
move(-6.81,63.67,0.00);  object(0x1D52,0,0,254);
move(-25.35,3.51,0.00);  object(0x1D61,0,0,334);
move(-26.11,-2.53,0.00);  object(0x1D62,0,0,338);
move(54.62,22.81,1.20);  object(0x1D5F,0,0,341);
move(-30.71,7.17,0.00);  object(0x1D5C,0,0,338);
move(-19.88,21.71,0.39);  object(0x1D59,0,0,334);
move(-20.89,-15.66,0.00);  object(0x1D56,0,0,331);
move(-6.84,10.57,0.00);  object(0x1D56,0,0,332);
move(54.22,21.79,0.00);  object(0x1D68,0,0,331);
move(22.59,6.61,0.00);  object(0x1D66,0,0,71);
move(28.32,-23.15,0.10);  object(0x1D63,0,0,337);
move(4.02,35.77,0.00);  object(0x1D5F,0,0,68);
move(16.78,-26.05,0.00);  object(0x1D5B,0,0,64);
move(43.09,-74.97,0.00);  object(0x1D56,0,0,55);
teleport( 505.78, -972.76, 11.07);

#cheat Green danger Overpass
moveto(251.52,-220.60,9.74);  object(0x1CB2,270,55,114);
move(-1.37,-3.03,2.90);  object(0x1CB2,270,55,114);
move(-4.26,-11.82,5.40);  object(0x1CB2,270,80,106);
move(-4.30,-12.72,2.50);  object(0x1CB2,270,80,110);
move(-4.58,-12.80,2.50);  object(0x1CB2,270,80,110);
move(-4.45,-12.45,2.40);  object(0x1CB2,270,80,110);
move(-4.64,-12.80,2.60);  object(0x1CB2,270,80,112);
move(-4.38,-12.34,2.60);  object(0x1CB2,270,80,110);
move(-4.35,-11.79,2.30);  object(0x1CB2,270,80,110);
move(-4.21,-13.04,2.50);  object(0x1CB2,270,80,107);
move(-4.12,-13.35,2.40);  object(0x1CB2,270,80,107);
move(-2.25,-8.23,-0.20);  object(0x1CB2,275,85,286);
move(-2.47,-12.29,-1.20);  object(0x1CB2,275,85,286);
move(-2.03,-11.20,-1.10);  object(0x1CB2,275,85,284);
move(-1.69,-10.88,-1.00);  object(0x1CB2,275,85,284);
move(-1.67,-11.73,-1.10);  object(0x1CB2,275,85,282);
move(-1.54,-12.47,-1.10);  object(0x1CB2,275,85,282);
move(-0.79,-11.34,-1.10);  object(0x1CB2,275,85,274);
move(-0.32,-28.72,-30.81);  object(0x1CB4,275,85,310);
move(0.36,21.24,30.10);  object(0x1CB2,275,85,277);
move(-0.21,-10.44,-1.00);  object(0x1CB2,275,85,277);
move(-0.37,-9.80,-0.90);  object(0x1CB2,275,85,277);
move(-0.39,-10.15,-0.90);  object(0x1CB2,275,85,277);
move(-0.38,-10.11,-0.90);  object(0x1CB2,275,85,277);
move(-0.48,-12.72,-1.10);  object(0x1CB2,275,85,277);
move(-0.52,-13.76,-1.20);  object(0x1CB2,275,85,277);
move(-0.27,-7.28,-0.70);  object(0x1CB2,275,85,277);
move(-2.29,-12.27,-0.00);  object(0x1CB2,265,85,104);
move(-3.86,-11.29,1.00);  object(0x1CB2,265,85,104);
move(-4.12,-13.37,-0.10);  object(0x1CB2,265,85,279);
move(-2.74,-13.10,-1.10);  object(0x1CB2,265,85,276);
move(-1.90,-10.32,-0.86);  object(0x1CB2,265,85,275);
move(-1.48,-9.73,-0.80);  object(0x1CB2,265,85,273);
move(-0.63,-12.53,-1.00);  object(0x1CB2,265,85,270);
move(-0.37,-11.01,-0.90);  object(0x1CB2,265,85,266);
move(0.18,-14.02,-1.00);  object(0x1CB2,265,85,264);
move(0.57,29.18,2.30);  object(0x1CB2,265,90,274);
move(-2.31,-12.24,-1.00);  object(0x1CB2,265,80,264);
move(2.25,-27.01,-4.90);  object(0x1CB2,265,60,265);
moveto(263.33,-552.62,10.55);  object(0x1CB2,270,300,210);
move(5.91,-3.41,3.90);  object(0x1CB2,270,300,208);
move(11.75,-5.62,4.00);  object(0x1CB2,270,275,205);
move(12.13,-6.13,1.20);  object(0x1CB2,270,275,209);
move(10.75,-7.19,1.20);  object(0x1CB2,270,275,217);
move(9.38,-7.42,1.10);  object(0x1CB2,270,275,219);
move(10.19,-8.24,1.10);  object(0x1CB2,270,275,219);
move(10.05,-8.14,1.20);  object(0x1CB2,270,275,219);
move(8.51,-9.16,1.20);  object(0x1CB2,270,275,233);
move(7.62,-10.38,1.20);  object(0x1CB2,270,275,232);
move(7.45,-9.59,1.20);  object(0x1CB2,270,275,233);
move(5.36,-11.52,1.30);  object(0x1CB2,270,275,256);
move(0.22,-11.64,1.00);  object(0x1CB2,270,275,284);
move(-3.62,-13.71,1.20);  object(0x1CB2,270,275,286);
move(-3.80,-13.14,1.20);  object(0x1CB2,270,275,286);
move(-3.90,-13.49,1.30);  object(0x1CB2,270,275,286);
move(-3.62,-12.54,1.20);  object(0x1CB2,270,275,286);
move(-4.77,-10.90,1.10);  object(0x1CB2,270,275,299);
move(-7.52,-11.76,1.30);  object(0x1CB2,270,275,306);
move(-3.75,-10.16,-0.20);  object(0x1CB2,210,275,159);
moveto(328.50,-749.40,37.19);  object(0x1CB2,235,270,145);
move(-4.52,-12.05,0.10);  object(0x1CB2,235,270,145);
move(-4.10,-11.83,0.10);  object(0x1CB2,235,270,145);
move(-3.73,-10.65,0.10);  object(0x1CB2,235,270,145);
move(-4.47,-12.69,0.10);  object(0x1CB2,235,270,145);
move(-3.88,-11.85,0.10);  object(0x1CB2,235,270,145);
move(-2.96,-8.29,0.00);  object(0x1CB2,235,270,145);
move(-4.47,-12.80,0.20);  object(0x1CB2,235,270,145);
move(-4.21,-12.62,0.10);  object(0x1CB2,235,270,145);
move(-4.54,-12.85,-0.00);  object(0x1CB2,235,270,145);
move(-4.42,-11.83,0.10);  object(0x1CB2,235,270,145);
move(-6.63,-9.65,0.10);  object(0x1CB2,235,270,177);
move(-10.97,-3.50,0.10);  object(0x1CB2,235,270,212);
move(-12.85,1.38,-0.00);  object(0x1CB2,235,270,234);
move(-12.48,3.67,-0.00);  object(0x1CB2,235,270,229);
move(-12.75,3.66,0.10);  object(0x1CB2,235,270,232);
move(-12.26,2.90,-0.00);  object(0x1CB2,235,270,224);
move(-11.50,2.76,0.10);  object(0x1CB2,235,270,236);
move(-11.51,4.59,-0.00);  object(0x1CB2,235,270,236);
move(-9.50,6.79,0.00);  object(0x1CB2,235,270,266);
move(-3.55,8.07,0.00);  object(0x1CB2,235,270,289);
move(-0.87,10.75,-0.00);  object(0x1CB2,235,270,314);
move(2.36,11.84,0.10);  object(0x1CB2,235,270,322);
move(4.45,12.25,-0.00);  object(0x1CB2,235,270,326);
move(4.37,10.16,0.10);  object(0x1CB2,235,270,329);
move(4.67,10.40,0.10);  object(0x1CB2,235,270,330);
move(4.11,11.33,-0.60);  object(0x1CB2,230,280,329);
move(5.06,11.38,-2.00);  object(0x1CB2,235,285,331);
move(5.38,11.30,-3.20);  object(0x1CB2,235,290,330);
move(5.24,10.90,-4.20);  object(0x1CB2,235,295,332);
move(5.02,12.14,-5.30);  object(0x1CB2,235,300,330);
move(4.06,10.62,-5.70);  object(0x1CB2,235,305,328);
move(-0.55,-0.43,-0.20);  object(0x1CB2,260,305,294);
move(2.09,12.47,-7.80);  object(0x1CB2,260,305,290);
moveto(336.27,-715.27,36.65);  object(0x1CB2,90,275,342);
move(-12.00,-0.24,1.40);  object(0x1CB2,90,275,10);
move(-11.03,5.73,1.10);  object(0x1CB2,90,275,45);
move(-7.00,10.25,1.10);  object(0x1CB2,90,275,65);
move(-3.46,11.83,1.10);  object(0x1CB2,90,275,81);
move(0.80,13.14,1.20);  object(0x1CB2,90,275,107);
move(3.53,12.89,1.30);  object(0x1CB2,90,275,103);
move(1.22,13.50,1.20);  object(0x1CB2,90,275,90);
move(2.55,12.33,1.00);  object(0x1CB2,90,275,118);
move(8.36,8.81,1.10);  object(0x1CB2,90,275,148);
move(11.56,5.14,1.10);  object(0x1CB2,90,275,160);
move(9.75,7.31,1.20);  object(0x1CB2,90,275,128);
move(7.76,11.00,3.00);  object(0x1CB2,90,290,122);
move(7.23,12.33,2.90);  object(0x1CB2,90,275,118);
move(6.72,12.33,-0.40);  object(0x1CB2,90,260,119);
move(-0.22,7.59,0.00);  object(0x1CB2,90,260,109);
move(4.01,8.30,0.40);  object(0x1CB2,90,270,301);
move(6.22,10.11,-0.50);  object(0x1CB2,90,270,306);
move(7.13,10.84,0.10);  object(0x1CB2,90,270,124);
move(8.24,11.32,0.10);  object(0x1CB2,90,270,128);
move(9.29,10.61,0.00);  object(0x1CB2,90,270,135);
move(9.21,10.75,-0.00);  object(0x1CB2,90,270,126);
move(6.41,11.28,0.20);  object(0x1CB2,90,270,116);
move(6.34,12.21,0.10);  object(0x1CB2,90,270,118);
move(5.99,12.23,-1.00);  object(0x1CB2,90,260,116);
move(4.13,12.22,-2.10);  object(0x1CB2,90,260,104);
move(3.73,13.21,-2.30);  object(0x1CB2,90,260,105);
move(3.84,13.14,-2.50);  object(0x1CB2,90,260,105);
move(3.02,12.65,-2.80);  object(0x1CB2,90,255,100);
move(2.61,12.55,-3.30);  object(0x1CB2,90,255,102);
move(3.00,13.22,-3.50);  object(0x1CB2,90,255,104);
move(2.39,12.67,-2.60);  object(0x1CB2,90,255,101);
move(2.50,13.10,-3.40);  object(0x1CB2,90,255,100);
move(2.49,13.85,-3.70);  object(0x1CB2,90,255,100);
move(2.36,13.74,-3.80);  object(0x1CB2,90,255,100);
move(2.45,13.76,-3.70);  object(0x1CB2,90,255,100);
move(0.83,7.18,-2.00);  object(0x1CB2,100,260,89);
move(1.67,10.32,-2.50);  object(0x1CB2,100,255,89);
move(1.98,12.21,-3.50);  object(0x1CB2,100,255,89);
move(2.85,12.85,-3.50);  object(0x1CB2,100,255,90);
teleport( 260.00, -550.67, 10.05);

#cheat Set Vehicle CoordinatesXY15
setfloat(0x08BF3CC0, 0, 0, 15);

#cheat Quad, Sea and Air Ace
setint(0x08E82D90, 230);
setchar(0x08BEE45C, 2);
setint(0x08BEE460, 230);
setchar(0x08BEE464, 0xFF, 0xFF, 0xFF, 0xFF);
setfloat(0x08BEE468, 488.494904, -1725.014282, 7.801000);
setchar(0x08BEE474, 1);

#cheat Crimes on Hunter Wings
setint(0x08E82D60, 275);
setchar(0x08BEEAA4, 2);
setint(0x08BEEAA8, 275);
setchar(0x08BEEAAC, 0xFF, 0xFF, 0xFF, 0xFF);
setfloat(0x08BEEAB0, -1276.823486, -1085.378784, 13.723500);
setchar(0x08BEEABC, 1);

#cheat Skysparrow
setint(0x08E82D30, 263);
setchar(0x08BEECBC, 2);
setint(0x08BEECC0, 263);
setchar(0x08BEECC4, 0xFF, 0xFF, 0xFF, 0xFF);
setfloat(0x08BEECC8, -1175.068970, -1103.093506, 14.410400);
setchar(0x08BEECD4, 1);

#cheat Car Thrower
//part of DDM's cheat for launching is used
if(pplayer){
playerx = getfloat(pplayer + 0x30);
playery = getfloat(pplayer + 0x34);
playerz = getfloat(pplayer + 0x38);
push = 1.0;
static find;
if(find == 0){
if(getint(pplayer + 0x150)){
pick = getint(pplayer + 0x150);
find = 1;}}
if(find == 1 && press & CTRL_CROSS){
setfloat(pick + 0x27C, 0.0);}
if(getshort(pick + 0x56) > 0&&getshort(pick + 0x56) < 279){
setfloat(pick + 0x30, playerx);
setfloat(pick + 0x34, playery);
setfloat(pick + 0x38, playerz +2);
setfloat(pick + 0x140, 0, 0, 0);
setfloat(pick + 0x70, 0, 0, 0);
setchar(pplayer + 0x8B4, 0x40);}
if(press & CTRL_CIRCLE){
setfloat(pick + 0x0140, getfloat(pobj + 0x0140) + getfloat(pobj + 0x0010) * push);
setfloat(pick + 0x0144, getfloat(pobj + 0x0144) + getfloat(pobj + 0x0014) * push);
setfloat(pick + 0x0148, getfloat(pobj + 0x0148) + getfloat(pobj + 0x0018) * push);
pick = 0;
find = 0;
setchar(pplayer + 0x8B4, 0x01);}}
#off
pick = 0;
setchar(pplayer + 0x8B4, 0x01);

#cheat Car Object Launcher
//part of DDM's cheat for launching is used
if(pcar){
playerx = getfloat(pplayer + 0x30);
playery = getfloat(pplayer + 0x34);
playerz = getfloat(pplayer + 0x38);
push = 2.0;
static find;
if(find == 0){
if(getint(pcar + 0x150)){
pick = getint(pcar + 0x150);
find = 1;}}
if(getshort(pick + 0x56) > 0&&getshort(pick + 0x56) < 279){
if(find == 1 && press & CTRL_CROSS){
setfloat(pick + 0x27C, 0.0);}}
if(getshort(pick + 0x56) < 279){
setfloat(pick + 0x30, playerx);
setfloat(pick + 0x34, playery);
setfloat(pick + 0x38, playerz +2);
setfloat(pick + 0x140, 0, 0, 0);
setfloat(pick + 0x70, 0, 0, 0);}
if(press & CTRL_UP){
setfloat(pick + 0x0140, getfloat(pobj + 0x0140) + getfloat(pobj + 0x0010) * push);
setfloat(pick + 0x0144, getfloat(pobj + 0x0144) + getfloat(pobj + 0x0014) * push);
setfloat(pick + 0x0148, getfloat(pobj + 0x0148) + getfloat(pobj + 0x0018) * push);
pick = 0;
find = 0;}}
#off
pick = 0;

#cheat Money Counter is a Speed'O'Meter v. 2
static money;
static wasin;
if(!money) 
money = getint(0x08bde560);
if (pcar){ 
wasin = true; 
speed = (sqrt(getfloat(pcar + 0x140) * getfloat(pcar + 0x140) + getfloat(pcar + 0x144) * getfloat(pcar + 0x144)))*100; 
setint(0x08bde55c, speed, speed); 
setchar(0x8BAEDB8, '%', 'd', 0); 
setchar(0x8BAEDC0, '%', 'd', 0);}
else{  
if(wasin){ 
setchar(0x8BAEDB8, '%', '0', '8', 'd', '$', 0); 
setchar(0x8BAEDC0, '$', '%', '0', '8', 'd', 0); 
setint(0x08bde55c, money, money); 
wasin = false;} 
money = getint(0x08bde560);}
#off
setint(0x08bde55c, money, money);
setchar(0x8BAEDB8, '%', '0', '8', 'd', '$', 0);
setchar(0x8BAEDC0, '$', '%', '0', '8', 'd', 0);

#cheat Money Counter is a Speed'O'Meter v. 2 (player)
static money;
if(!money) 
money = getint(0x08bde560);
speed = (sqrt(getfloat(pplayer + 0x140) * getfloat(pplayer + 0x140) + getfloat(pplayer + 0x144) * getfloat(pplayer + 0x144)))*100; 
setint(0x08bde55c, speed, speed); 
setchar(0x8BAEDB8, '%', 'd', 0); 
setchar(0x8BAEDC0, '%', 'd', 0);
money = getint(0x08bde560);
#off
setint(0x08bde55c, money, money);
setchar(0x8BAEDB8, '%', '0', '8', 'd', '$', 0);
setchar(0x8BAEDC0, '$', '%', '0', '8', 'd', 0);

#cheat Mission Trigger
setint(0x08E82D90, 205);
setfloat(0x08E82D94, 488.494904, -1725.014282, 7.801000);
setchar(0x08BEE45C, 2);
setint(0x08BEE460, 205);
setchar(0x08BEE464, 0xFF, 0xFF, 0xFF, 0xFF);
setfloat(0x08BEE468, 488.494904, -1725.014282, 7.801000);
setchar(0x08BEE474, 1);
#cheat Deactivate Land, Sea and Air Ace Mission
setchar(0x08BEE3F8, 0);
#off
setchar(0x08BEE3F8, 1);

#cheat Viceport Mission Trigger
setint(0x08E82E20, 198);
setchar(0x08BEE674, 2);
setint(0x08BEE678, 198);
setchar(0x08BEE67C, 0xFF, 0xFF, 0xFF, 0xFF);
setfloat(0x08BEE680, -259.351990, -1658.676025, 5.410000);
setchar(0x08BEE68C, 1);
#cheat Little Haiti Mission Trigger
setint(0x08E82E50, 198);
setchar(0x08BEE674, 2);
setint(0x08BEE678, 198);
setchar(0x08BEE67C, 0xFF, 0xFF, 0xFF, 0xFF);
setfloat(0x08BEE680, -1179.552002, -40.727001, 5.534000);
setchar(0x08BEE68C, 1);
#cheat Deactivate Hover Race Missions
setchar(0x08BEE828, 0);
#off
setchar(0x08BEE828, 1);

#cheat Mission Trigger
setint(0x08E82D60, 222);
setchar(0x08BEEAA4, 2);
setint(0x08BEEAA8, 222);
setchar(0x08BEEAAC, 0xFF, 0xFF, 0xFF, 0xFF);
setfloat(0x08BEEAB0, -1276.823486, -1085.378784, 13.723500);
setchar(0x08BEEABC, 1);
#cheat Deactivate Crimes on Wings Mission
setchar(0x08BEE828, 0);
#off
setchar(0x08BEE828, 1);

#cheat Mission Trigger
setint(0x08E82D30, 275);
setchar(0x08BEECBC, 2);
setint(0x08BEECC0, 275);
setchar(0x08BEECC4, 0xFF, 0xFF, 0xFF, 0xFF);
setfloat(0x08BEECC8, -1175.068970, -1103.093506, 14.410400);
setchar(0x08BEECD4, 1);
#cheat Deactivate Skywolf Mission
setchar(0x08BEEC58, 0);
#off
setchar(0x08BEEC58, 1);

#cheat Mission Trigger
setint(0x08E82CD0, 213);
setchar(0x08BEF51B, 2);
setint(0x08BEF520, 213);
setchar(0x08BEF524, 0xFF, 0xFF, 0xFF, 0xFF);
setfloat(0x08BEF528, -1236.356201, -901.205688, 13.929900);
setchar(0x08BEF534, 1);
#cheat Deactivate Vice Sights Mission
setchar(0x08BEF4B8, 0);
#off
setchar(0x08BEF4B8, 1);

#cheat Deactivate Security Guards Spawn
setchar(0x08BF24E0, 0);
#off
setchar(0x08BF24E0, 1);
 
#cheat Select Weapon 1 in the Buy Menu
setchar(0x08BF255C, 1);
#cheat Gunshop Location Modifier
setchar(0x08BF2544, 0);

#cheat Reset Game Status
setchar(0x08BF2D3C, 2);
#cheat Savehouse Location Modifier
setchar(0x08BF2DB0, 0);

#cheat Store Location Modifier
setchar(0x08BF3848, 0);
#cheat Force the Player to leave Store Interiors
setchar(0x08BF3884, 0);
off();

#cheat Reload Empire Site Script
setchar(0x08BF3C74, 0);
off();
#cheat Empire Site Vehicle Spawn
setint(0x08BF3CB8, ID);
setfloat(0x08BF3CC0, 0, 0, 15);
#cheat Force the Player to leave Empire Site Interiors
setchar(0x08BF3CCC, 0);
off();
#cheat Empire Site Location Modifier
setchar(0x08BF3DFC, 0);
#cheat Trigger Empire Attacks
setchar(0x08BF42B8, 7);

#cheat:the apartment

moveto(-808.01,-1180.07,12.66); object(0x1CD2,0,0,160);

move(-7.04,6.52,1.20); object(0x1CE6,0,0,342);

move(9.22,-1.32,-0.30); object(0x1CEC,0,0,99);

move(0.34,-1.09,0.10); object(0x1CF2,0,0,251);

move(-6.89,-1.14,-1.00); object(0x1CF7,0,0,120);

move(-1.52,-4.17,0.00); object(0x1CF8,0,0,254);

move(2.71,8.60,0.00); object(0x1CFA,0,0,342);

move(1.94,0.30,0.00); object(0x1CFB,0,0,2);

move(0.53,0.29,1.00); object(0x1CFB,0,0,6);

move(0.33,-0.89,-1.00); object(0x1CFB,0,0,16);

move(-5.00,-0.25,0.00); object(0x1D03,0,0,158);

move(0.73,-0.03,0.00); object(0x1D05,0,0,180);

move(0.00,0.00,0.40); object(0x1CFF,0,0,345);

move(-0.35,-3.27,-0.60); object(0x1D06,0,0,296);

move(-0.46,0.65,0.20); object(0x1CF7,0,0,301);

move(1.56,2.01,0.40); object(0x1CEA,0,0,6);

move(0.03,0.13,0.60); object(0x1CEB,0,0,181);

move(-3.07,-7.40,-0.60); object(0x1CE2,0,0,0);

move(-0.06,0.32,0.00); object(0x1CE2,0,0,182);

move(9.25,5.79,-0.50); object(0x1CCD,0,0,154);

move(-0.05,0.22,0.00); object(0x1CCC,0,0,151);

move(-0.13,0.18,0.00); object(0x1CCB,0,0,148);

move(-6.96,-1.28,1.00); object(0x014A,0,70,83);

move(-0.13,-0.39,0.00); object(0x014B,210,130,162);

move(0.15,-0.23,-0.10); object(0x014C,245,170,201);

move(-0.09,-0.27,-0.10); object(0x014D,245,170,193);

move(-0.18,-0.20,0.00); object(0x014E,245,170,191);

move(-0.31,0.23,0.20); object(0x014F,250,140,181);

move(0.26,-0.14,0.00); object(0x0150,250,140,188);

move(0.13,-0.16,0.00); object(0x0151,250,140,189);

move(-0.12,0.41,0.00); object(0x0152,250,140,194);

move(-0.09,0.29,0.00); object(0x0153,250,140,187);

move(0.33,-0.36,0.00); object(0x0154,250,140,185);

move(-0.59,0.31,0.00); object(0x0155,105,170,203);

move(0.94,0.48,-0.10); object(0x0156,105,170,235);

move(-0.40,-0.08,0.00); object(0x0158,105,170,225);

move(-4.20,-3.95,2.10); object(0x0159,105,210,320);

move(4.25,2.76,-2.20); object(0x015A,105,210,2);

move(-0.20,0.10,0.00); object(0x015B,105,210,356);

move(0.80,0.97,0.00); object(0x015C,105,210,352);

move(-0.41,-0.97,-0.10); object(0x015D,105,210,10);

move(-0.07,1.11,0.20); object(0x015E,105,210,262);

#cheat Mega Monster Truck
pspawn = 0x08E81290;
setint(pspawn, 209);
setfloat(pspawn + 4, -1041.73, -761.80, 11.57, 90);
//Basics
setshort(0x98a325a, 1, 'M','o','n','s','t','e','r','+',0);
setshort(0x08e90DD8, 1, ' ', 'G', 'o', ' ', 'T', 'o', ' ', 'S', 'u', 'n', 's', 'h', 'i', 'n', 'e', ' ', 'A', 'u', 't', 'o', 's', 0);
//Wheels
setfloat(0x93647F8, 1.75, 1.75); //wheel size
setfloat(0x96309c0+0x6c, 1.05); //Traction Multiplier
setfloat(0x96309c0+0xc4, 1); //Traction Loss
setfloat(0x96309c0+0x70, 0.75); //Traction Bias
//Engine
setchar(0x96309c0+0x5c, '7', '6', 9); // Drive type / Engine type / Gears
//Suspension
setfloat(0x96309c0+0x7c, 0); //Suspension Upper Limit
setfloat(0x96309c0+0x80, -1); //Suspension Lower Limit
setfloat(0x96309c0+0x78, 5); //Suspension Damping Level
setfloat(0x96309c0+0x74, 0.85); //Suspension Force Level
setfloat(0x96309c0+0x84, 0.75); //Suspension Bias
setfloat(0x96309c0+0x88, 2); //Anti-Dive Multiplier
//Handling
setfloat(0x96309c0+0x68, 40); //Steering Lock
setfloat(0x96309c0+0xbc, 9500); //Vehilce Mass
setfloat(0x96309c0+0xc0, 9500); //Turn Mass
setfloat(0x96309c0+0xa0, 0); //Centre of Mass - X
setfloat(0x96309c0+0xa4, 0); //Centre of Mass - Y
setfloat(0x96309c0+0xa8, 0); //Centre of Mass - Z

#cheat Vice's Row
//based on saints row 1's church
//Be Sure To Wear The Leisure Suit Its A Bit Purple,LOL.
//Made By The Modding-DutchGuy
pspawn = 0x08E81290;
setint(pspawn, 269);
setfloat(pspawn + 4, 0x4,18.97,-1228.06,10.47);
pickup = 0x08C6A330;
pspawn += 0x30;
setint(pspawn, 275);
setfloat(pspawn + 4, -1208.15,24.28);
pickup = 0x08C6A330;
setfloat(pickup, 10.41,-1203.93,20.02);
setint(pickup + 0x2C, 99999);
setshort(pickup + 0x34, 0x015D);
setchar(pickup + 0x38, 0x03);
pickup += 0x40;
setfloat(pickup, 4.12,-1231.30,20.00);
setint(pickup + 0x2C, 99999);
setshort(pickup + 0x34, 0x0165);
setchar(pickup + 0x38, 0x03);
pickup += 0x40;
setfloat(pickup, 10.41,-1203.93,20.02);
setint(pickup + 0x2C, 99999);
setshort(pickup + 0x34, 0x015D);
setchar(pickup + 0x38, 0x03);
pickup += 0x40;
setfloat(pickup, 6.02,-1201.37,10.47);
setint(pickup + 0x2C, 99999);
setshort(pickup + 0x34, 0x0164);
setchar(pickup + 0x38, 0x03);
pickup += 0x40;
setfloat(pickup, 6.11,-1203.10,10.47);
setint(pickup + 0x2C, 99999);
setshort(pickup + 0x34, 0x0169);
setchar(pickup + 0x38, 0x03);
pickup += 0x40;
setfloat(pickup, 4.48,-1208.73,10.47);
setint(pickup + 0x2C, 99999);
setshort(pickup + 0x34,0x015A);
setchar(pickup + 0x38, 0x03);
moveto(-0.62,-1198.13,21.87); object(0x1CA6,0,0,180);
move(5.20,-0.01,0.00); object(0x1CA6,0,0,180);
move(0.00,0.00,-4.20); object(0x1CA6,0,0,180);
move(-4.20,0.01,0.00); object(0x1CA6,0,0,180);
move(1.10,-0.00,-1.10); object(0x1CA6,0,0,180);
move(0.00,0.00,-2.10); object(0x1CA6,0,270,180);
move(7.07,0.07,0.00); object(0x1CA6,0,270,176);
move(-6.62,-23.89,8.50); object(0x1CA6,265,0,175);
move(7.67,0.62,0.00); object(0x1CA6,265,0,175);
move(-0.42,5.14,0.00); object(0x1CA6,265,0,175);
move(-6.28,-0.51,0.00); object(0x1CA6,265,0,175);
move(-0.38,4.67,0.00); object(0x1CA6,265,0,175);
move(5.18,0.42,0.00); object(0x1CA6,265,0,175);
move(-5.70,4.27,0.00); object(0x1CA6,265,0,272);
move(4.64,1.62,0.00); object(0x1CA6,265,0,272);
move(1.84,-3.56,0.00); object(0x1CA6,265,0,223);
move(-0.38,-9.06,0.10); object(0x1CA6,265,0,356);
move(-4.29,-0.29,0.00); object(0x1CA6,265,0,356);
move(-0.66,-4.98,0.00); object(0x1CA6,265,0,356);
move(2.99,0.21,0.00); object(0x1CA6,265,0,356);
move(7.13,24.70,5.50); object(0x1CA6,180,270,5);
move(0.12,-4.30,0.00); object(0x1CA6,180,270,89);
move(-3.96,-0.22,0.30); object(0x1CA6,180,270,177);
move(0.04,4.48,0.00); object(0x1CA6,180,270,272);
move(1.71,1.18,4.80); object(0x1CA6,85,180,358);
move(-8.27,-1.26,-11.00); object(0x1CA6,80,180,2);
move(-0.37,2.99,0.00); object(0x1CA6,80,180,2);
move(-1.32,-1.84,-11.80); object(0x1CD4,0,0,261);
move(3.24,-0.63,0.00); object(0x1CD4,0,0,271);
move(5.07,-25.82,1.80); object(0x1CD6,270,180,187);
move(-2.69,13.36,0.70); object(0x1CE1,180,180,272);
move(-0.00,-1.80,0.00); object(0x1CE2,180,180,272);
move(-0.02,-1.92,0.00); object(0x1CE4,180,180,271);
move(7.05,-9.95,0.50); object(0x1CEA,0,180,276);
move(0.00,0.00,0.60); object(0x1CEB,0,180,276);
move(-1.48,4.00,-1.70); object(0x1CEC,0,0,214);
move(-0.01,-8.12,0.00); object(0x1CF0,0,0,339);
move(-1.23,-0.13,0.00); object(0x1CF0,0,0,1);
move(-0.55,8.46,0.00); object(0x1CF6,0,0,359);
move(-14.23,8.06,0.00); object(0x1CF8,0,0,356);
move(0.83,-5.06,0.00); object(0x1CF8,0,0,356);
move(16.13,-9.79,-0.10); object(0x1CFC,0,0,91);
move(-1.52,-4.77,3.10); object(0x1D04,0,0,139);
move(-3.81,-0.03,0.00); object(0x1D04,0,0,172);
move(-3.93,0.25,0.00); object(0x1D04,0,0,216);
move(-4.25,0.75,0.00); object(0x1D04,0,0,248);
move(0.07,26.14,-6.30); object(0x1D04,0,0,335);
move(1.66,-15.68,0.00); object(0x1D04,0,0,188);
move(7.61,-3.02,8.90); object(0x1CD6,265,0,2);
move(3.24,-4.56,0.60); object(0x1CFA,0,0,177);
move(-2.20,-0.11,0.00); object(0x1CFA,0,0,177);
move(-0.15,20.69,-0.10); object(0x1D00,0,0,178);
move(1.72,-6.23,0.10); object(0x1D00,0,0,322);
move(-5.40,-19.48,4.50); object(0x1D05,0,0,169);
teleport(2.61,-1193.92,10.46);

#cheat Car Spawner
playerx = getfloat(pplayer + 0x30);
playery = getfloat(pplayer + 0x34);
playerz = getfloat(pplayer + 0x38);
setchar(0x8BAEDB8, '%', 'd', 0);
setchar(0x8BAEDC0, '%', 'd', 0);
static start;
if (!start){
pobject = 212;
start = 1;
money = getint(0x08E81290);}
setint(0x08bde55c, money, money);
setint(0x08bde55c, pobject, pobject);
if (buttons & CTRL_LTRIGGER && pressfast & CTRL_LEFT){
pobject = pobject-1;}
if (buttons & CTRL_LTRIGGER && pressfast & CTRL_RIGHT){
pobject = pobject+1;}
if (buttons & CTRL_RTRIGGER && pressfast & CTRL_LEFT){
pobject = pobject-50;}
if (buttons & CTRL_RTRIGGER && pressfast & CTRL_RIGHT){
pobject = pobject+50;}
pspawn = 0x08E81290;
if(press & CTRL_DOWN){
if(pobject <= 0)
pobject = 0;
if(pobject >= 279)
pobject = 279;
setint( pspawn , pobject);
setfloat(pspawn + 4, playerx, playery, playerz);
pspawn = pspawn + 0x30;}
#off
setint(0x08bde55c,  99999999,  99999999);
setchar(0x8BAEDB8,  '%',  '0',  '8',  'd',  '$',  0);
setchar(0x8BAEDC0,  '$',  '%',  '0',  '8',  'd',  0);

#cheat Turbo Atomic Nuke
setchar(0x9569fb0, 0x00, 0xa0, 0x00, 0x00, 0x00, 0xff);
setchar(0x958fb0, 0x00, 0x00, 0xff);
{
setchar(0x08be3a20, 1);
setfloat(0x08be3a30, -593.40, -462.94, 11.29);
setchar(0x08be3a60, 1);
setfloat(0x08be3a70, -595.08, -458.48, 11.29);
setchar(0x08be3aa0, 1);
setfloat(0x08be3ab0, -595.14, -455.58, 11.29);
}
moveto(-567.89, -488.01, 16.28); object(0x01C2, 0, 40, 85);
move(0.14, -1.49, 1.50); object(0x01C2, 0, 40, 85);
move(0.17, -1.89, 0.00); object(0x01C2, 0, 145, 85);
move(0.09, -1.00, -1.60); object(0x01C2, 0, 145, 85);
move(3.29, 3.24, -4.51); object(0x01C2, 0, 145, 86);
move(0.07, -1.00, 0.00); object(0x01C2, 0, 145, 86);
move(0.00, 0.00, 0.00); object(0x01C2, 0, 145, 86);
move(246.09, 100.05, 0.51); object(0x01C2, 0, 145, 14);
move(0.78, -0.19, 0.00); object(0x01C2, 0, 145, 14);
move(0.39, -0.09, 0.00); object(0x01C2, 0, 145, 14);
move(-23.12, -4.82, -1.54); object(0x01C2, 0, 145, 267);
move(-0.05, 1.00, 0.00); object(0x01C2, 0, 145, 267);
move(-0.03, 0.70, 0.00); object(0x01C2, 0, 145, 267);
move(6.56, -12.08, -0.00); object(0x01C2, 0, 145, 185);
move(-0.90, 0.08, 0.00); object(0x01C2, 0, 145, 185);
move(0.00, 0.00, 0.00); object(0x01C2, 0, 145, 185);
move(0.00, 0.00, 0.00); object(0x01C2, 0, 145, 185);

#cheat Teleport
teleport(505.75, -1735.15, 9.76);
#cheat GhostTown (By ChojaK) ALFA VERSION!!!
moveto(487.82,-1722.34,11.81);  object(0x1CA6,0,0,280);
move(-1.41,-7.98,0.00);  object(0x1CA6,0,0,280);
move(-1.20,-6.80,0.00);  object(0x1CA6,0,0,280);
move(3.64,20.59,0.00);  object(0x1CA6,0,0,280);
move(1.18,6.70,0.00);  object(0x1CA6,0,0,280);
move(0.92,5.22,0.00);  object(0x1CA6,0,0,280);
move(0.00,0.00,3.70);  object(0x1CA6,0,0,280);
move(-1.50,-8.47,0.00);  object(0x1CA6,0,0,280);
move(-1.65,-9.36,0.00);  object(0x1CA6,0,0,280);
move(-1.72,-9.75,0.00);  object(0x1CA6,0,0,280);
move(-0.87,-4.93,0.00);  object(0x1CA6,0,0,280);
move(-0.78,-4.43,0.00);  object(0x1CA6,0,0,280);
move(0.00,0.00,-4.20);  object(0x1CA6,0,0,280);
move(9.75,38.03,-0.90);  object(0x1CA6,0,0,5);
move(9.77,-0.78,0.00);  object(0x1CA6,0,0,5);
move(9.47,-0.75,0.00);  object(0x1CA6,0,0,5);
move(8.97,-0.71,0.00);  object(0x1CA6,0,0,5);
move(9.87,-0.79,0.00);  object(0x1CA6,0,0,5);
move(10.07,-0.80,0.00);  object(0x1CA6,0,0,5);
move(10.57,-0.84,0.00);  object(0x1CA6,0,0,5);
move(9.67,-0.77,0.00);  object(0x1CA6,0,0,5);
move(9.97,-0.79,0.00);  object(0x1CA6,0,0,5);
move(10.07,-0.80,0.00);  object(0x1CA6,0,0,5);
move(7.67,-0.61,0.00);  object(0x1CA6,0,0,5);
move(0.00,0.00,4.10);  object(0x1CA6,0,0,5);
move(-8.77,0.70,0.00);  object(0x1CA6,0,0,5);
move(-9.47,0.75,0.00);  object(0x1CA6,0,0,5);
move(-10.17,0.81,0.00);  object(0x1CA6,0,0,5);
move(1.30,-0.10,0.00);  object(0x1CA6,0,0,5);
move(-11.06,0.88,0.00);  object(0x1CA6,0,0,5);
move(-9.17,0.73,0.00);  object(0x1CA6,0,0,5);
move(-10.27,0.82,0.00);  object(0x1CA6,0,0,5);
move(2.99,-0.24,0.00);  object(0x1CA6,0,0,5);
move(-12.46,0.99,0.00);  object(0x1CA6,0,0,5);
move(-9.57,0.76,0.00);  object(0x1CA6,0,0,5);
move(-1.50,0.12,0.00);  object(0x1CA6,0,0,5);
move(-8.67,0.69,0.00);  object(0x1CA6,0,0,5);
move(-9.17,0.73,0.00);  object(0x1CA6,0,0,5);
move(-7.59,-40.44,-3.60);  object(0x1CA6,0,0,222);
move(6.13,-5.46,0.00);  object(0x1CA6,0,0,222);
move(6.28,-5.59,0.00);  object(0x1CA6,0,0,222);
move(5.50,-4.07,1.70);  object(0x1CA6,0,0,220);
move(6.26,-1.90,-2.80);  object(0x1CA6,0,0,152);
move(6.54,3.45,0.00);  object(0x1CA6,0,0,152);
move(6.90,3.64,0.00);  object(0x1CA6,0,0,152);
move(2.30,1.21,0.00);  object(0x1CA6,0,0,152);
move(0.00,0.00,3.90);  object(0x1CA6,0,0,152);
move(-6.54,-3.45,0.00);  object(0x1CA6,0,0,152);
move(-6.28,-3.31,0.00);  object(0x1CA6,0,0,152);
move(-2.56,-1.35,0.00);  object(0x1CA6,0,0,152);
move(-5.60,0.63,0.00);  object(0x1CA6,0,0,221);
move(-5.38,4.64,0.00);  object(0x1CA6,0,0,221);
move(-5.15,4.44,0.00);  object(0x1CA6,0,0,221);
move(-5.45,4.70,0.00);  object(0x1CA6,0,0,221);
move(-2.50,2.16,0.00);  object(0x1CA6,0,0,221);
moveto(603.53,-1776.22,7.33);  object(0x1CB2,0,270,291);
move(7.32,-2.79,0.00);  object(0x1CB2,0,270,291);
move(8.21,-3.13,0.00);  object(0x1CB2,0,270,291);
move(7.98,-2.92,0.00);  object(0x1CB2,0,270,291);
move(9.07,-3.53,0.00);  object(0x1CB2,0,270,291);
move(8.69,-3.29,0.00);  object(0x1CB2,0,270,291);
move(7.30,-2.77,0.00);  object(0x1CB2,0,270,291);
move(10.96,-4.15,0.00);  object(0x1CB2,0,270,291);
move(6.03,-2.28,0.00);  object(0x1CB2,0,270,291);
move(9.27,-3.51,0.00);  object(0x1CB2,0,270,291);
move(10.89,-4.13,0.00);  object(0x1CB2,0,270,291);
move(9.25,-3.51,0.00);  object(0x1CB2,0,270,291);
move(8.32,-3.15,0.00);  object(0x1CB2,0,270,291);
move(12.88,-4.88,0.00);  object(0x1CB2,0,270,291);
move(9.01,-3.42,0.00);  object(0x1CB2,0,270,291);
move(11.53,-4.37,0.00);  object(0x1CB2,0,270,291);
move(13.14,-4.98,0.00);  object(0x1CB2,0,270,291);
move(9.68,-3.67,0.00);  object(0x1CB2,0,270,291);
move(6.16,-2.47,0.00);  object(0x1CB2,85,110,186);
move(12.33,-2.30,4.50);  object(0x1CB2,85,110,186);
move(9.11,-2.35,3.10);  object(0x1CB2,85,110,186);
move(13.42,-3.35,2.10);  object(0x1CB2,0,270,282);
move(9.99,-2.05,0.00);  object(0x1CB2,0,270,282);
move(10.04,-1.98,0.00);  object(0x1CB2,0,270,282);
move(13.27,-2.65,0.00);  object(0x1CB2,0,270,282);
move(13.27,-3.10,0.00);  object(0x1CB2,0,270,282);
move(13.31,-2.53,0.00);  object(0x1CB2,0,270,282);
move(11.71,-2.12,0.00);  object(0x1CB2,0,270,279);
move(12.12,-1.91,0.00);  object(0x1CB2,0,270,279);
move(13.85,-2.18,0.00);  object(0x1CB2,0,270,280);
move(13.82,-2.11,0.00);  object(0x1CB2,0,270,280);
move(13.55,-2.32,0.00);  object(0x1CB2,0,270,280);
move(13.72,-2.45,0.00);  object(0x1CB2,0,270,280);
move(13.45,-2.48,0.00);  object(0x1CB2,0,270,280);
move(6.74,-0.98,0.00);  object(0x1CB2,0,270,278);
move(10.92,-1.86,0.00);  object(0x1CB2,0,270,278);
move(12.21,-1.52,0.00);  object(0x1CB2,0,270,278);
move(10.17,-1.55,0.00);  object(0x1CB2,0,270,278);
move(12.19,-1.91,0.00);  object(0x1CB2,0,270,278);
move(13.11,-1.79,0.00);  object(0x1CB2,0,270,278);
move(13.23,-1.78,0.00);  object(0x1CB2,0,270,278);
move(7.76,2.50,0.00);  object(0x1CB2,0,270,233);
move(2.15,-3.99,0.00);  object(0x1CB2,0,270,239);
move(-5.04,8.27,0.00);  object(0x1CB2,0,270,239);
move(12.24,1.22,0.00);  object(0x1CB2,0,270,239);
move(11.94,7.21,0.00);  object(0x1CB2,0,270,239);
move(10.98,6.77,0.00);  object(0x1CB2,0,270,239);
move(11.88,6.77,0.00);  object(0x1CB2,0,270,239);
move(4.10,8.43,0.00);  object(0x1CB2,0,270,178);
move(-45.28,-43.15,1.70);  object(0x1CB2,0,190,59);
move(11.86,7.44,0.10);  object(0x1CB2,0,190,56);
//end bright
//road to sky
moveto(1088.34,-1839.92,17.17);  object(0x1CAA,0,0,354);
move(-0.14,6.89,2.60);  object(0x1CAA,0,0,358);
move(0.11,7.03,2.40);  object(0x1CAA,0,0,1);
move(1.04,7.38,2.90);  object(0x1CAA,0,0,11);
move(2.60,8.21,2.90);  object(0x1CAA,0,0,19);
move(3.08,8.73,3.70);  object(0x1CAA,0,0,19);
move(2.98,8.79,3.40);  object(0x1CAA,0,0,25);
move(3.99,8.47,3.60);  object(0x1CAA,0,0,25);
move(3.82,8.14,3.30);  object(0x1CAA,0,0,25);
move(3.67,7.59,3.10);  object(0x1CAA,0,0,26);
move(4.15,8.11,3.60);  object(0x1CAA,0,0,27);
move(4.21,8.10,3.50);  object(0x1CAA,0,0,28);
move(4.92,6.95,2.90);  object(0x1CAA,0,0,43);
move(4.82,4.66,2.70);  object(0x1CAA,0,0,48);
move(7.15,6.35,3.10);  object(0x1CAA,0,0,48);
move(6.58,5.95,3.50);  object(0x1CAA,0,0,52);
move(7.33,5.70,3.60);  object(0x1CAA,0,0,52);
move(7.31,5.71,3.00);  object(0x1CAA,0,0,52);
move(7.62,5.86,3.00);  object(0x1CAA,0,0,52);
move(7.15,4.96,3.00);  object(0x1CAA,0,0,65);
move(7.76,2.38,2.90);  object(0x1CAA,0,0,83);
move(8.99,0.45,2.90);  object(0x1CAA,0,0,88);
move(8.73,-0.26,2.90);  object(0x1CAA,0,0,100);
move(9.21,-1.68,3.50);  object(0x1CAA,0,0,100);
move(6.84,-3.08,2.70);  object(0x1CAA,0,0,117);
move(6.05,-3.47,2.60);  object(0x1CB2,0,270,206);
move(4.76,-2.35,0.00);  object(0x1CB2,0,270,206);
move(5.65,-2.79,0.00);  object(0x1CB2,0,270,206);
move(5.11,-2.53,0.00);  object(0x1CB2,0,270,206);
move(5.20,-2.57,0.00);  object(0x1CB2,0,270,206);
move(5.11,-2.53,0.00);  object(0x1CB2,0,270,206);
move(5.29,-2.61,0.00);  object(0x1CB2,0,270,206);
move(4.67,-2.30,0.00);  object(0x1CB2,0,270,206);
move(5.29,-2.61,0.00);  object(0x1CB2,0,270,206);
move(5.29,-2.61,0.00);  object(0x1CB2,0,270,206);
move(5.38,-2.66,0.00);  object(0x1CB2,0,270,206);
move(4.58,-2.26,0.00);  object(0x1CB2,0,270,206);
move(5.38,-2.66,0.00);  object(0x1CB2,0,270,206);
move(5.70,11.53,0.00);  object(0x1CB2,0,270,206);
move(-5.56,2.74,0.00);  object(0x1CB2,0,270,206);
move(-5.02,2.47,0.00);  object(0x1CB2,0,270,206);
move(0.00,0.00,0.00);  object(0x1CB2,0,270,206);
move(-4.76,2.34,0.00);  object(0x1CB2,0,270,206);
move(-4.79,2.50,0.00);  object(0x1CB2,0,270,206);
move(-5.20,2.56,0.00);  object(0x1CB2,0,270,206);
move(-4.84,2.39,0.00);  object(0x1CB2,0,270,206);
move(-5.74,2.83,0.00);  object(0x1CB2,0,270,206);
move(-5.11,2.52,0.00);  object(0x1CB2,0,270,206);
move(-4.76,2.34,0.00);  object(0x1CB2,0,270,206);
move(-4.76,2.34,0.00);  object(0x1CB2,0,270,206);
move(-3.59,1.77,0.00);  object(0x1CB2,0,270,206);
move(-2.51,1.24,0.00);  object(0x1CB2,0,270,206);
move(-5.11,2.52,0.00);  object(0x1CB2,0,270,206);
move(5.83,11.83,0.00);  object(0x1CB2,0,270,206);
move(5.38,-2.65,0.00);  object(0x1CB2,0,270,206);
move(6.01,-2.96,0.00);  object(0x1CB2,0,270,206);
move(5.47,-2.70,0.00);  object(0x1CB2,0,270,206);
move(5.83,-2.87,0.00);  object(0x1CB2,0,270,206);
move(5.56,-2.74,0.00);  object(0x1CB2,0,270,206);
move(5.56,-2.74,0.00);  object(0x1CB2,0,270,206);
move(5.11,-2.52,0.00);  object(0x1CB2,0,270,206);
move(5.38,-2.65,0.00);  object(0x1CB2,0,270,206);
move(5.83,-2.87,0.00);  object(0x1CB2,0,270,206);
move(5.29,-2.61,0.00);  object(0x1CB2,0,270,206);
move(5.92,-2.92,0.00);  object(0x1CB2,0,270,206); 
//end road to sky
//First hauses added.
moveto(1258.50,-1703.77,86.51);  object(0x1D08,0,0,292);
move(105.39,-14.42,64.10);  object(0x1D30,0,0,87);
move(-126.07,18.98,-56.20);  object(0x1D2E,0,0,296);
move(31.88,-32.68,0.00);  object(0x1D2D,0,0,203);
move(0.00,0.00,4.50);  object(0x1D2D,0,0,203);
move(0.00,0.00,3.90);  object(0x1D2D,0,0,203);
move(0.00,0.00,0.00);  object(0x1D2D,0,0,203);
move(0.00,0.00,3.80);  object(0x1D2D,0,0,203);
move(3.63,-0.12,0.00);  object(0x1D2D,0,0,161);
move(4.79,0.21,0.00);  object(0x1D2D,0,0,132);
move(1.83,2.11,0.00);  object(0x1D2D,0,0,105);
move(-0.52,3.81,0.00);  object(0x1D2D,0,0,60);
move(-2.30,2.05,0.00);  object(0x1D2D,0,0,24);
move(0.00,0.00,-4.40);  object(0x1D2D,0,0,24);
move(0.00,0.00,-4.20);  object(0x1D2D,0,0,24);
move(0.00,0.00,-4.40);  object(0x1D2D,0,0,24);
move(-1.92,3.99,13.40);  object(0x1D2D,0,0,61);
move(119.83,9.17,0.00);  object(0x1D2C,0,0,18);
move(-2.56,-7.50,0.00);  object(0x1D2C,0,0,39);
move(-9.17,-3.74,0.00);  object(0x1D2C,0,0,92);
move(-9.59,0.27,0.00);  object(0x1D2C,0,0,92);
move(23.49,26.68,0.00);  object(0x1D2C,0,0,8);
//end first hauses
//add very big ghost object
moveto(1292.02,-1738.17,96.61);  object(0x1CB2,270,70,31);
move(10.34,-6.09,4.30);  object(0x1CB2,270,70,31);
move(9.55,-5.40,3.80);  object(0x1CB2,270,70,31);
move(8.58,-5.14,3.70);  object(0x1CB2,270,70,31);
move(94.24,63.02,-1.50);  object(0x1CB2,270,90,95);
move(-4.45,0.43,0.00);  object(0x1CB2,270,90,95);
move(-4.14,0.54,0.00);  object(0x1CB2,270,90,95);
move(-4.69,0.39,0.00);  object(0x1CB2,270,90,94);
move(-4.22,0.48,0.00);  object(0x1CB2,270,90,94);
move(-6.13,0.39,0.00);  object(0x1CB2,270,90,94);
move(-5.58,0.35,0.00);  object(0x1CB2,270,90,94);
move(-6.14,0.39,0.00);  object(0x1CB2,270,90,94);
move(-5.85,0.38,0.00);  object(0x1CB2,270,90,93);
move(-5.44,0.33,0.00);  object(0x1CB2,270,90,93);
move(-0.84,-13.78,0.00);  object(0x1CB2,270,90,93);
move(6.10,-0.37,0.00);  object(0x1CB2,270,90,93);
move(5.96,-0.36,0.00);  object(0x1CB2,270,90,93);
move(6.34,-0.39,0.00);  object(0x1CB2,270,90,93);
move(4.92,-0.30,0.00);  object(0x1CB2,270,90,93);
move(6.15,-0.38,0.00);  object(0x1CB2,270,90,93);
move(5.79,-0.35,0.00);  object(0x1CB2,270,90,93);
move(5.58,-0.34,0.00);  object(0x1CB2,270,90,93);
move(5.14,-0.31,0.00);  object(0x1CB2,270,90,93);
move(4.03,-0.25,0.00);  object(0x1CB2,270,90,93);
move(-50.01,-9.27,0.00);  object(0x1CB2,270,90,93);
move(6.32,-0.39,0.00);  object(0x1CB2,270,90,93);
move(5.66,-0.35,0.00);  object(0x1CB2,270,90,93);
move(6.71,-0.41,0.00);  object(0x1CB2,270,90,93);
move(4.96,-0.30,0.00);  object(0x1CB2,270,90,93);
move(1.72,-0.11,0.00);  object(0x1CB2,270,90,93);
move(5.73,-0.35,0.00);  object(0x1CB2,270,90,93);
move(4.73,-0.29,0.00);  object(0x1CB2,270,90,93);
move(4.30,-0.26,0.00);  object(0x1CB2,270,90,93);
move(4.49,-0.27,0.00);  object(0x1CB2,270,90,93);
move(-0.76,-12.69,0.00);  object(0x1CB2,270,90,271);
move(-0.08,-8.90,0.00);  object(0x1CB2,270,90,271);
move(-5.55,0.05,0.00);  object(0x1CB2,270,90,271);
move(-5.38,0.04,0.00);  object(0x1CB2,270,90,271);
move(-5.26,0.04,0.00);  object(0x1CB2,270,90,271);
move(-5.87,0.05,0.00);  object(0x1CB2,270,90,271);
move(-5.76,0.05,0.00);  object(0x1CB2,270,90,271);
move(-6.13,0.05,0.00);  object(0x1CB2,270,90,271);
move(-6.28,0.05,0.00);  object(0x1CB2,270,90,271);
move(-5.34,0.05,0.00);  object(0x1CB2,270,90,271);
move(0.00,11.68,0.00);  object(0x1CB2,270,90,86);
move(7.22,0.49,0.00);  object(0x1CB2,270,90,86);
move(8.19,0.55,0.00);  object(0x1CB2,270,90,86);
move(5.46,0.37,0.00);  object(0x1CB2,270,90,86);
move(3.98,0.27,0.00);  object(0x1CB2,270,90,86);
move(-5.21,-0.35,0.00);  object(0x1CB2,270,90,86);
move(18.12,-3.55,0.00);  object(0x1CB2,270,90,348);
move(-8.65,0.26,0.00);  object(0x1CB2,270,90,316);
move(5.79,4.81,0.00);  object(0x1CB2,270,90,350);
move(-34.13,36.32,0.00);  object(0x1D2D,270,90,320);
move(-1.93,-8.58,0.00);  object(0x1D2D,270,90,272);
move(-0.31,-8.30,0.00);  object(0x1D2D,270,90,272);
move(-0.29,-7.70,0.00);  object(0x1D2D,270,90,272);
move(14.18,32.62,-0.20);  object(0x1D2D,270,90,349);
move(47.24,-24.63,8.00);  object(0x1D2C,270,90,168);
moveto(1368.56,-1732.41,108.15);  object(0x1CB2,0,0,358);
move(0.22,-6.49,0.00);  object(0x1CB2,0,0,358);
move(-38.30,-17.65,1.80);  object(0x1CB2,0,280,28);
move(5.19,-2.42,-0.60);  object(0x1CB2,0,90,32);
move(5.44,-3.46,0.00);  object(0x1CB2,0,90,32);
move(3.78,-1.73,0.00);  object(0x1CB2,0,90,20);
move(5.58,8.29,0.00);  object(0x1CB2,0,90,36);
move(-3.98,2.94,0.00);  object(0x1CB2,0,90,36);
move(-6.94,-9.14,0.00);  object(0x1CB2,0,90,110);
moveto(1392.74,-1681.64,105.95);  object(0x1CD5,0,0,202);
move(4.44,11.25,0.00);  object(0x1CD5,0,0,202);
move(4.19,10.64,0.00);  object(0x1CD5,0,0,202);
move(4.08,10.31,0.00);  object(0x1CD5,0,0,202);
move(4.07,10.29,0.00);  object(0x1CD5,0,0,201);
move(3.82,9.71,0.00);  object(0x1CD5,0,0,201);
move(3.74,9.50,0.00);  object(0x1CD5,0,0,201);
move(3.93,10.01,0.00);  object(0x1CD5,0,0,201);
move(4.13,10.64,0.00);  object(0x1CD5,0,0,201);
move(2.95,6.52,0.00);  object(0x1CD5,0,0,212);
move(5.99,9.63,0.00);  object(0x1CD5,0,0,212);
move(4.41,7.08,0.00);  object(0x1CD5,0,0,212);
move(5.40,8.67,0.00);  object(0x1CD5,0,0,212);
move(5.02,8.06,0.00);  object(0x1CD5,0,0,212);
move(5.52,8.86,0.00);  object(0x1CD5,0,0,212);
move(5.96,9.58,0.00);  object(0x1CD5,0,0,212);
move(5.81,9.33,0.00);  object(0x1CD5,0,0,212);
move(5.01,8.05,0.00);  object(0x1CD5,0,0,212);
move(5.97,9.59,0.00);  object(0x1CD5,0,0,212);
move(4.91,7.88,0.00);  object(0x1CD5,0,0,212);
move(5.51,8.84,0.00);  object(0x1CD5,0,0,212);
move(4.50,6.12,0.00);  object(0x1CB2,0,270,128);
move(3.51,4.49,0.00);  object(0x1CB2,0,270,128);
move(3.38,4.34,0.00);  object(0x1CB2,0,270,128);
move(3.94,5.05,0.00);  object(0x1CB2,0,270,128);
move(3.94,5.05,0.00);  object(0x1CB2,0,270,128);
move(3.51,4.49,0.00);  object(0x1CB2,0,270,128);
move(3.63,4.65,0.00);  object(0x1CB2,0,270,128);
move(3.75,4.81,0.00);  object(0x1CB2,0,270,128);
move(3.63,4.65,0.00);  object(0x1CB2,0,270,128);
move(-6.64,5.18,0.00);  object(0x1CB2,0,270,128);
move(-3.69,-4.73,0.00);  object(0x1CB2,0,270,128);
move(-3.45,-4.42,0.00);  object(0x1CB2,0,270,128);
move(-3.38,-4.34,0.00);  object(0x1CB2,0,270,128);
move(-3.32,-4.26,0.00);  object(0x1CB2,0,270,128);
move(-3.94,-5.05,0.00);  object(0x1CB2,0,270,128);
move(-3.63,-4.65,0.00);  object(0x1CB2,0,270,128);
move(-3.94,-5.05,0.00);  object(0x1CB2,0,270,128);
move(-3.75,-4.81,0.00);  object(0x1CB2,0,270,128);
move(-11.33,8.83,0.00);  object(0x1CB2,0,270,128);
move(4.03,4.47,0.00);  object(0x1CB2,0,270,128);
move(4.06,5.20,0.00);  object(0x1CB2,0,270,128);
move(4.06,5.20,0.00);  object(0x1CB2,0,270,128);
move(3.75,4.81,0.00);  object(0x1CB2,0,270,128);
move(3.63,4.65,0.00);  object(0x1CB2,0,270,128);
move(3.81,4.89,0.00);  object(0x1CB2,0,270,128);
move(3.14,4.02,0.00);  object(0x1CB2,0,270,128);
move(2.83,3.63,0.00);  object(0x1CB2,0,270,128);
move(-0.52,-59.90,0.00);  object(0x1CB2,0,270,309);
move(3.72,4.58,0.00);  object(0x1CB2,0,270,309);
move(3.34,4.11,0.00);  object(0x1CB2,0,270,309);
move(4.03,4.97,0.00);  object(0x1CB2,0,270,309);
move(3.78,4.66,0.00);  object(0x1CB2,0,270,309);
move(3.84,4.74,0.00);  object(0x1CB2,0,270,309);
move(2.10,2.93,0.00);  object(0x1CB2,0,270,309);
move(3.91,4.81,0.00);  object(0x1CB2,0,270,309);
move(3.59,4.43,0.00);  object(0x1CB2,0,270,309);
move(0.66,2.04,0.00);  object(0x1CB2,0,270,309);
moveto(1500.98,-1505.27,109.72);  object(0x1D20,275,355,179);
move(-20.07,14.02,-4.90);  object(0x1D21,180,180,126);
move(-8.24,6.04,0.00);  object(0x1D21,180,180,126);
move(0.00,0.00,6.70);  object(0x1D21,180,180,126);
move(8.68,-6.36,0.20);  object(0x1D21,180,180,126);
move(0.00,0.00,6.80);  object(0x1D21,180,180,126);
move(-8.84,6.48,0.00);  object(0x1D21,180,180,126);
move(4.72,6.45,0.00);  object(0x1D21,180,180,126);
move(0.00,0.00,-7.10);  object(0x1D21,180,180,126);
move(0.00,0.00,-5.70);  object(0x1D21,180,180,126);
move(17.21,-2.69,0.00);  object(0x1D21,180,180,126);
move(0.00,0.00,7.20);  object(0x1D21,180,180,126);
move(0.00,0.00,6.00);  object(0x1D21,180,180,126);
move(-12.81,9.39,-12.50);  object(0x1D21,180,180,126);
move(0.00,0.00,-0.50);  object(0x1D21,180,180,126);
move(0.00,0.00,5.70);  object(0x1D21,180,180,126);
move(0.00,0.00,6.80);  object(0x1D21,180,180,126);
moveto(1520.22,-1498.28,99.09);  object(0x1D28,0,0,167);
move(11.56,9.80,0.00);  object(0x1D28,0,0,131);
move(4.40,21.03,0.00);  object(0x1D28,0,0,80);
move(0.00,0.00,6.10);  object(0x1D28,0,0,80);
move(0.00,0.00,6.70);  object(0x1D28,0,0,80);
move(-53.17,17.87,-9.00);  object(0x1D28,0,0,116);
move(8.01,13.44,0.00);  object(0x1D28,0,0,133);
move(-1.02,-0.41,3.50);  object(0x1D28,0,0,133);
move(-10.46,-20.19,-4.20);  object(0x1D2B,0,0,69);
moveto(1522.95,-1443.23,104.49);  object(0x1CD5,0,0,40);
move(6.74,8.17,0.00);  object(0x1CD5,0,0,40);
move(5.73,6.95,0.00);  object(0x1CD5,0,0,40);
move(5.68,6.88,0.00);  object(0x1CD5,0,0,40);
move(6.21,7.53,0.00);  object(0x1CD5,0,0,40);
move(6.25,7.58,0.00);  object(0x1CD5,0,0,40);
move(6.71,8.14,0.00);  object(0x1CD5,0,0,40);
move(6.38,7.74,0.00);  object(0x1CD5,0,0,40);
move(6.87,8.33,0.00);  object(0x1CD5,0,0,40);
move(6.17,7.48,0.00);  object(0x1CD5,0,0,40);
move(6.14,7.45,0.00);  object(0x1CD5,0,0,40);
move(6.77,8.20,0.00);  object(0x1CD5,0,0,40);
move(6.12,7.42,0.00);  object(0x1CD5,0,0,40);
moveto(1601.33,-1349.09,104.21);  object(0x1CD5,0,0,196);
move(1.51,6.65,0.00);  object(0x1CD5,0,0,190);
move(-1.04,10.18,0.50);  object(0x1CD5,0,0,160);
move(-3.98,10.77,0.00);  object(0x1CD5,0,0,160);
move(-3.69,9.98,0.00);  object(0x1CD5,0,0,160);
move(-3.92,10.63,0.00);  object(0x1CD5,0,0,160);
move(-3.06,9.26,0.23);  object(0x1CD5,0,0,162);
move(-2.98,9.24,0.00);  object(0x1CD5,0,0,162);
move(-3.39,6.63,0.00);  object(0x1CD5,0,0,152);
move(-5.52,10.25,0.00);  object(0x1CD5,0,0,152);
move(-5.25,9.75,0.00);  object(0x1CD5,0,0,152);
move(-5.41,10.06,0.00);  object(0x1CD5,0,0,152);
move(-4.56,8.48,0.00);  object(0x1CD5,0,0,152);
move(-4.86,9.03,0.00);  object(0x1CD5,0,0,152);
move(0.00,0.00,0.00);  object(0x1CD5,10,0,152);
move(-4.36,8.16,0.60);  object(0x1CD5,10,0,152);
move(-4.00,7.39,1.50);  object(0x1CD5,10,0,152);
move(-4.58,8.57,1.80);  object(0x1CD5,10,0,151);
move(-3.58,6.50,1.20);  object(0x1CD5,10,0,151);
move(-4.48,7.59,1.60);  object(0x1CD5,10,0,152);
move(-4.52,8.89,1.20);  object(0x1CD5,5,0,152);
move(-4.20,8.70,0.50);  object(0x1CD5,0,0,158);
move(-5.23,7.35,0.00);  object(0x1CB2,0,270,67);
move(-2.38,5.51,0.00);  object(0x1CB2,0,270,67);
move(-2.30,5.32,0.00);  object(0x1CB2,0,270,67);
move(-10.62,-4.57,0.00);  object(0x1CB2,0,270,66);
move(2.28,-5.23,0.00);  object(0x1CB2,0,270,66);
move(2.51,-5.78,0.00);  object(0x1CB2,0,270,66);
move(-8.28,-3.56,0.20);  object(0x1CB2,0,270,66);
move(-2.34,5.31,-0.20);  object(0x1CB2,0,270,66);
move(-2.24,5.67,-0.00);  object(0x1CB2,0,270,65);
move(5.75,5.88,1.80);  object(0x1CB2,0,180,246);
move(9.70,4.27,0.00);  object(0x1CB2,0,180,246);
move(2.61,1.15,0.00);  object(0x1CB2,0,180,246);
move(7.98,-1.20,0.00);  object(0x1CB2,0,180,157);
move(3.57,-8.62,0.00);  object(0x1CB2,0,180,157);
move(6.14,-2.75,0.10);  object(0x1CB2,0,180,244);
move(-18.04,-7.59,0.30);  object(0x1CB2,0,180,65);
move(-11.83,-5.39,0.00);  object(0x1CB2,0,180,67);
move(-7.15,16.84,0.00);  object(0x1CB2,0,180,67);
moveto(1489.27,-1173.38,113.68);  object(0x1CAA,0,0,235);
move(-5.80,-4.03,3.00);  object(0x1CAA,0,0,235);
move(-6.32,-4.40,2.90);  object(0x1CAA,0,0,235);
move(-6.33,-6.03,2.70);  object(0x1CAA,0,0,221);
move(-5.14,-5.92,3.30);  object(0x1CAA,0,0,221);
move(-4.55,-5.24,2.90);  object(0x1CAA,0,0,221);
move(-5.78,-6.66,3.70);  object(0x1CAA,0,0,221);
move(-5.94,-6.89,3.40);  object(0x1CAA,0,0,221);
move(-5.76,-6.68,3.50);  object(0x1CAA,0,0,221);
move(-5.05,-7.03,3.30);  object(0x1CAA,0,0,213);
move(-4.58,-6.98,3.10);  object(0x1CAA,0,0,213);
move(-4.07,-6.21,3.00);  object(0x1CAA,0,0,213);
move(-4.89,-7.46,3.10);  object(0x1CAA,0,0,213);
move(-5.08,-7.75,3.30);  object(0x1CAA,0,0,213);
move(-5.10,-7.78,3.30);  object(0x1CAA,0,0,213);
move(-5.85,-6.16,2.80);  object(0x1CB2,0,270,123);
move(-3.17,-4.42,0.00);  object(0x1CB2,0,270,122);
move(-3.43,-5.41,0.00);  object(0x1CB2,0,270,122);
move(-3.54,-5.58,0.00);  object(0x1CB2,0,270,122);
move(-3.16,-4.98,0.00);  object(0x1CB2,0,270,122);
move(-3.38,-5.32,0.00);  object(0x1CB2,0,270,122);
move(-3.32,-5.24,0.00);  object(0x1CB2,0,270,122);
move(-3.16,-4.98,0.00);  object(0x1CB2,0,270,122);
move(-3.16,-4.98,0.00);  object(0x1CB2,0,270,122);
move(-3.32,-5.24,0.00);  object(0x1CB2,0,270,122);
move(-3.05,-4.81,0.00);  object(0x1CB2,0,270,122);
move(-3.00,-4.73,0.00);  object(0x1CB2,0,270,122);
move(-9.89,6.28,0.00);  object(0x1CB2,0,270,122);
move(3.59,5.66,0.00);  object(0x1CB2,0,270,122);
move(3.27,5.15,0.00);  object(0x1CB2,0,270,122);
move(3.00,4.73,0.00);  object(0x1CB2,0,270,122);
move(2.95,4.65,0.00);  object(0x1CB2,0,270,122);
move(2.95,4.65,0.00);  object(0x1CB2,0,270,122);
move(3.54,5.58,0.00);  object(0x1CB2,0,270,122);
move(3.38,5.32,0.00);  object(0x1CB2,0,270,122);
move(3.05,4.81,0.00);  object(0x1CB2,0,270,122);
move(2.89,4.56,0.00);  object(0x1CB2,0,270,122);
move(3.11,4.90,0.00);  object(0x1CB2,0,270,122);
move(3.59,5.66,0.00);  object(0x1CB2,0,270,122);
move(-11.50,7.30,0.00);  object(0x1CB2,0,270,122);
move(-3.38,-5.32,0.00);  object(0x1CB2,0,270,122);
move(-3.48,-5.49,0.00);  object(0x1CB2,0,270,122);
move(-3.05,-4.81,0.00);  object(0x1CB2,0,270,122);
move(-3.48,-5.49,0.00);  object(0x1CB2,0,270,122);
move(-3.59,-5.66,0.00);  object(0x1CB2,0,270,122);
move(-3.43,-5.41,0.00);  object(0x1CB2,0,270,122);
move(-3.59,-5.66,0.00);  object(0x1CB2,0,270,122);
move(-3.48,-5.49,0.00);  object(0x1CB2,0,270,122);
move(-3.48,-5.49,0.00);  object(0x1CB2,0,270,122);
move(-3.54,-5.58,0.00);  object(0x1CB2,0,270,122);
move(-0.80,-1.27,0.00);  object(0x1CB2,0,270,122);
move(32.35,-20.53,0.00);  object(0x1CB2,0,270,122);
move(2.89,4.56,0.00);  object(0x1CB2,0,270,122);
move(3.27,5.15,0.00);  object(0x1CB2,0,270,122);
move(3.05,4.81,0.00);  object(0x1CB2,0,270,122);
move(3.05,4.81,0.00);  object(0x1CB2,0,270,122);
move(3.38,5.32,0.00);  object(0x1CB2,0,270,122);
move(3.54,5.58,0.00);  object(0x1CB2,0,270,122);
move(3.43,5.41,0.00);  object(0x1CB2,0,270,122);
move(3.22,5.07,0.00);  object(0x1CB2,0,270,122);
move(3.38,5.32,0.00);  object(0x1CB2,0,270,122);
move(3.27,5.15,0.00);  object(0x1CB2,0,270,122);
move(2.89,4.56,0.00);  object(0x1CB2,0,270,122);
moveto(1396.16,-1338.85,160.98);  object(0x1CB2,0,270,124);
move(3.07,4.57,0.00);  object(0x1CB2,0,270,124);
move(3.46,5.15,0.00);  object(0x1CB2,0,270,123);
move(3.19,4.60,0.00);  object(0x1CB2,0,270,123);
move(3.58,5.88,0.00);  object(0x1CB2,0,270,123);
moveto(1345.60,-1751.75,109.39);  object(0x1CB2,0,270,215);
move(-4.99,3.51,0.00);  object(0x1CB2,0,270,215);
move(9.00,-6.34,0.00);  object(0x1CB2,0,270,215);
move(4.50,-3.17,0.00);  object(0x1CB2,0,270,215);
move(4.67,5.95,0.00);  object(0x1CB2,0,270,211);
move(-5.90,3.57,0.00);  object(0x1CB2,0,270,211);
move(-1.86,8.29,0.00);  object(0x1CB2,0,270,211);
move(5.17,-3.05,0.00);  object(0x1CB2,0,270,211);
move(-3.09,13.39,0.00);  object(0x1CB2,0,270,209);
move(-7.12,-9.10,0.00);  object(0x1CB2,0,270,194);
//<!----------------otherefffectforthismod:---------------->
setshort(0x98a325a, 1, 'C','h','o','j','a','K', 0);
setshort(0x08e90DD8, 1, ' ','C','r','e','a','t','e','d',' ','B','y',' ','C','h','o','j','a','K', 0);
pspawn = 0x08E81290;
setint(pspawn, 212);
setfloat(pspawn + 4, 518.63, -1742.86, 9.51);
pspawn += 0x30;
off();
//END PRO-ALPHA CODE

#cheat Square head lights ( green )
setchar(0x9728580, 0x00, 0xff, 0x00, 0xff);
#off
setchar(0x9728580, 0xff, 0xff, 0xff, 0xff);

#cheat Square head lights ( Blue )
setchar(0x9728580, 0x00, 0x00, 0xff, 0xff);
#off
setchar(0x9728580, 0xff, 0xff, 0xff, 0xff);

#cheat Square head lights ( Red )
setchar(0x9728580, 0xff, 0x00, 0x00, 0xff);
#off
setchar(0x9728580, 0xff, 0xff, 0xff, 0xff);

#cheat Get Cars ID
//By: Gunner54
setint(0x08bde55c, getshort(pcar+0x56), getshort(pcar+0x56));

#cheat PJ-600 XT
//By: Gunner54
if(getshort(pcar + 0x56) == 212){
setchar(pcar+0x224, 0, 255, 5);
if (buttons & CTRL_CROSS && buttons & CTRL_CIRCLE){
setchar(0x09569B90,   0x10); 
setchar(0x09569B94,   0,   127,   255); 
speed = 1.8;
thrust = speed * 0.00333;
setfloat(pcar + 0x0140,   getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);
setfloat(pcar + 0x0144,   getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust);}
else 
if (buttons & CTRL_CROSS){
speed = 0.8;  
thrust = speed * 0.00333;
setchar(0x09569B90,   0x2); 
setchar(0x09569B94,   255, 185, 50);
setfloat(pcar + 0x0140,   getfloat(pcar + 0x0140) + getfloat(pcar + 0x0010) * thrust);
setfloat(pcar + 0x0144,   getfloat(pcar + 0x0144) + getfloat(pcar + 0x0014) * thrust);}
else{
setchar(0x09569B90,   0x4); 
setchar(0x09569B94,   63, 63, 63);}}

#cheat T
teleport(222.24, -238.25, 11.54);

#cheat Unknown
if(gethex(0x08BB3F44) > 0x14){sethex(0x08BB3F44, 0x14)}