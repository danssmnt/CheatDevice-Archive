#cheat Backup
404!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#cheat No Peds
static counter;
player = getint(0x08bc8170);//address of pplayer 
if(counter++ % 30 == 0) {
     for(p=0x098b4a40; p <= 0x098ecf90; p+=0xd10) {
             if(p != player) setchar(p + 0x4c, 1);
     }
}

#cheat Increased Traffic
setchar(0x08BB329C, 0x00);

#cheat Emotion 98.3
setchar(pcar+0x2b7, 8);
setchar(0x8bb11dc, 8);
setchar(0x9a6341b, 8);

#cheat Fresh 105 FM
setchar(pcar+0x2b7, 6);
setchar(0x8bb11dc, 6);
setchar(0x9a6341b, 6);

#cheat AI Driving
for(i = 0; 0x098B4A40 + i <= 0x098ECF90; i += 0x0D10){
if(0x098B4A40 + i != pplayer){
setchar(0x098B4A40 + i + 0x0894, 0x17);
setint(0x098B4A40 + i + 0x0890, pplayer);}}
off();

#cheat Revive Dead Peds
for(i = 0; 0x098B4A40 + i <= 0x098ECF90; i += 0x0D10){
health = getfloat(0x098B4A40 + i + 0x04E4);
if(health == 0){
setchar(0x098B4A40 + i + 0x08B4, 0x32);
setfloat(0x098B4A40 + i + 0x04E4, 100.0);}}

#cheat Driveby Mode
x = getfloat(pcar+0x30);
y = getfloat(pcar+0x34);
z = getfloat(pcar+0x38);
paim = getint(pplayer+0x81C);
if(buttons&CTRL_TRIANGLE){
setchar(pplayer+0x894, 0x11);}
if(pcar&&!paim){
setfloat(pcar+0x27C, 1000000000);
setfloat(pcar+0x10C, 0);
setshort(pcar+0x232, 0x101);
setchar(pplayer+0x8B4, 0x0);
setint(pplayer+0x610, 0xffffff);
setchar(pplayer+0xCB8, 0x5);
setchar(pplayer+0x604, 0x18);
setfloat(pplayer+0x30, x);
setfloat(pplayer+0x34, y);
setfloat(pplayer+0x38, z+1);}
if(pcar&&paim){
setchar(pplayer+0x8B4, 0x37);}

#cheat The Wave 103
setchar(pcar+0x2b7, 5);
setchar(0x8bb11dc, 5);
setchar(0x9a6341b, 5);

#cheat Paradise
setchar(pcar+0x2b7, 2);
setchar(0x8bb11dc, 2);
setchar(0x9a6341b, 2);

#cheat World Building Light Control?
setchar(0x08BC7381, 0xE7);

#cheat Hitmen
pped = getint(0x08BA1D70);
static yourped;
if(pped&&!yourped)
yourped=pped;
if(yourped){
setint(yourped+0x62c, 0x00ffffff);
setchar(yourped+0x620, 0x1d);
setchar(yourped+0x87c, 0x1e);
setint(yourped+0x648, 1000);
setchar(yourped+0x789, 0x06);
setchar(yourped+0x87c, 0x1e);
setchar(yourped+0x894, 0x8);
setint(yourped+0x890, pplayer);}

#cheat Always have Interior Atmosphere
setchar(0x08B8EBA4, 0x01);
setchar(0x08BB194C, 0x02);
setchar(0x08E937A8, 0x01);

#cheat Remove Interior Atmosphere
setchar(0x08B8EBA4, 0x00);
setchar(0x08BB194C, 0x00);
setchar(0x08E937A8, 0x00);

#cheat Suspension Modifier
static start;
if (!start)
size = 0.0;
start = 1;
if (buttons & CTRL_LTRIGGER && press & CTRL_LEFT){
size = size-1;}
if (buttons & CTRL_LTRIGGER && press & CTRL_RIGHT){
size = size+1;}
n = size;
if ( n < 0 ) n = -n;
fract = int(n * 10) % 10;
unit = int( n ) % 10;
n = n / 10;
dec = int( n ) % 10;
n = n / 10;
hund = int( n ) % 10;
hund = hund + '0';
dec = dec + '0';
unit = unit + '0';
fract = fract + '0';
if( size < 0 )
setshort( 0x08e90bd8, 1, '-', hund, dec, unit, '.', fract, 0 );
else
setshort( 0x08e90bd8, 1, ' ', hund, dec, unit, '.', fract, 0 );
setfloat(0x962e7a0+0x80, size);
setfloat(0x962eb20+0x80, size);
setfloat(0x962ea40+0x80, size);
setfloat(0x962ec00+0x80, size);
setfloat(0x96334A0+0x80, size);
setfloat(0x962ece0+0x80, size);
setfloat(0x962edc0+0x80, size);
setfloat(0x962f060+0x80, size);
setfloat(0x962f300+0x80, size);
setfloat(0x962f140+0x80, size);
setfloat(0x962ef80+0x80, size);
setfloat(0x962f220+0x80, size);
setfloat(0x962eea0+0x80, size);
setfloat(0x962f3e0+0x80, size);
setfloat(0x962f4c0+0x80, size);
setfloat(0x962f680+0x80, size);
setfloat(0x962f920+0x80, size);
setfloat(0x962fa00+0x80, size);
setfloat(0x962fbc0+0x80, size);
setfloat(0x962fca0+0x80, size);
setfloat(0x962fae0+0x80, size);
setfloat(0x962fd80+0x80, size);
setfloat(0x962fe60+0x80, size);
setfloat(0x962ff40+0x80, size);
setfloat(0x9630100+0x80, size);
setfloat(0x9630020+0x80, size);
setfloat(0x96301e0+0x80, size);
setfloat(0x9634340+0x80, size);
setfloat(0x9634180+0x80, size);
setfloat(0x9630720+0x80, size);
setfloat(0x96309c0+0x80, size);
setfloat(0x96302c0+0x80, size);
setfloat(0x96303a0+0x80, size);
setfloat(0x9630560+0x80, size);
setfloat(0x9630480+0x80, size);
setfloat(0x9630640+0x80, size);
setfloat(0x9630800+0x80, size);
setfloat(0x96308e0+0x80, size);
setfloat(0x9630aa0+0x80, size);
setfloat(0x9630b80+0x80, size);
setfloat(0x9630c60+0x80, size);
setfloat(0x9631280+0x80, size);
setfloat(0x96310c0+0x80, size);
setfloat(0x9630fe0+0x80, size);
setfloat(0x96311a0+0x80, size);
setfloat(0x9631440+0x80, size);
setfloat(0x9631740+0x80, size);
setfloat(0x9631820+0x80, size);
setfloat(0x9631ba0+0x80, size);
setfloat(0x9631660+0x80, size);
setfloat(0x96319e0+0x80, size);
setfloat(0x9631c80+0x80, size);
setfloat(0x9631d60+0x80, size);
setfloat(0x9631f60+0x80, size);
setfloat(0x9631e40+0x80, size);
setfloat(0x9631ac0+0x80, size);
setfloat(0x96323c0+0x80, size);
setfloat(0x96322e0+0x80, size);
setfloat(0x9632120+0x80, size);
setfloat(0x9632200+0x80, size);
setfloat(0x96324a0+0x80, size);
setfloat(0x9632580+0x80, size);
setfloat(0x9632660+0x80, size);
setfloat(0x9632820+0x80, size);
setfloat(0x9632900+0x80, size);
setfloat(0x96329e0+0x80, size);
setfloat(0x9632ac0+0x80, size);
setfloat(0x9632f20+0x80, size);
setfloat(0x9633000+0x80, size);
setfloat(0x96332e0+0x80, size);
setfloat(0x9633120+0x80, size);
setfloat(0x96333c0+0x80, size);
setfloat(0x96334a0+0x80, size);
setfloat(0x9633200+0x80, size);
setfloat(0x9633880+0x80, size);
setfloat(0x96340a0+0x80, size);
setfloat(0x9633d20+0x80, size);
setfloat(0x9633ee0+0x80, size);
setfloat(0x9633fc0+0x80, size);
setfloat(0x9634260+0x80, size);
setfloat(0x9634420+0x80, size);
setfloat(0x9634500+0x80, size);
setfloat(0x9634800+0x80, size);

#cheat Equip any Ped with the SMG
pped = getint(0x08BA1D70);
if(pped){
setint(pped+0x610, 0x00ffffff);
setfloat(pped+0x4e4, 10000);
setchar(pped+0x604, 0x19);
setchar(pped+0x87c, 0x1e);
setint(pped+0x648, 1000);
setchar(pped+0x789, 0x05);}

#cheat Get in the Passenger seat of a car
if(buttons & CTRL_TRIANGLE && !pcar){
setchar(pplayer+0x894, 0x11);
setchar(pplayer+0x8B4, 0x18);}

#cheat Enter Driveby Mode
setchar(pplayer+0x894, 0x00);
setchar(pplayer+0x8B4, 0x00); 

#cheat Position Reset
sethex(0x098B52F4, 00);

#cheat World Edits
setchar(0x08BC7383, 0x47);

#cheat World Draw Distance Control?
setchar(0x08BC7382, 0xC8);

#cheat Tow Objects
setfloat(0x8bc8684, 3);
setchar(0x9F932D8, 35);
if(buttons & CTRL_UP){
playerx = getfloat(pobj + 0x030);
playery = getfloat(pobj + 0x034);
playerz = getfloat(pobj + 0x038);}
static Marker;
X = -782.42;
Y = 922.57;
if(!Marker){
for(rot = 0;rot<360;rot += 10.0)
Marker = 1;}
checkx = X-getfloat(pobj+0x30);
checky = Y-getfloat(pobj+0x34);
if(sqrt(checkx*checkx+checky*checky)<2){
setfloat(pobj + 0x030, playerx);
setfloat(pobj + 0x034, playery);
setfloat(pobj + 0x038, playerz);}
setchar(0x8BAEDB8, '%', 'd', 0);
setchar(0x8BAEDC0, '%', 'd', 0);
static start;
if (!start){
pobject = 7313;
start = 1;
money = getint(0x08E81290);}
setint(0x08bde55c, money, money);
setint(0x08bde55c, pobject, pobject);
if (buttons & CTRL_LTRIGGER && pressfast & CTRL_LEFT){
pobject = pobject-1;}
if (buttons & CTRL_LTRIGGER && pressfast & CTRL_RIGHT){
pobject = pobject+1;}
if (buttons & CTRL_RTRIGGER && pressfast & CTRL_LEFT){
pobject = pobject-100;}
if (buttons & CTRL_RTRIGGER && pressfast & CTRL_RIGHT){
pobject = pobject+100;}
if (buttons & CTRL_LTRIGGER && buttons & CTRL_RTRIGGER && pressfast & CTRL_LEFT){
pobject = pobject-1000;}
if (buttons & CTRL_LTRIGGER && buttons & CTRL_RTRIGGER && pressfast & CTRL_RIGHT){
pobject = pobject+1000;}
ptow = getint(0x0994f460);
check = getshort(ptow+0x56);
if(pcar && buttons & CTRL_CIRCLE && ptow && check && check == 7350 || check == 7353 || check == 7392){
setshort(ptow+0x56, pobject);}

#cheat Bodyguard Mod
pped = getint(0x08BA1D70);
static yourped;
if(pped&&!yourped&&press&CTRL_UP)
yourped=pped;
if(yourped){
setint(yourped+0x5d8, 0xffffff);
setint(yourped+0x5f4, 0xffffff);
setint(yourped+0x610, 0xffffff);
setint(yourped+0x5bc, 0xffffff);
setint(yourped+0x62c, 0xffffff);
setint(yourped+0x648, 0xffffff);
setint(yourped+0x664, 0xffffff);
setint(yourped+0x680, 0xffffff);
setchar(yourped+0x87c, 0x1e);
if(!pcar){
if(getint(yourped+0x480))
setchar(yourped+0x894, 0x10);
else{
pped = getint(0x08BA1D70);
if(pped&&pped != yourped){
static enemy;
enemy=pped;
if(enemy){
setchar(yourped+0x894, 0x8);
setint(yourped+0x890, enemy);
health = getfloat(enemy+0x4e4);
if(health == 0){
enemy=0;
setchar(yourped+0x894, 0xC);
setint(yourped+0x890, pplayer);}}}
else{
setchar(yourped+0x894, 0xC);
setint(yourped+0x890, pplayer);}}}
else{
if(!getint(yourped+0x480))
setchar(yourped+0x894, 0x11);
setint(yourped+0x484, pcar);
setint(yourped+0x450, pcar);}
pfollow = getchar(yourped+0x894);
if(pfollow == 0xC&&buttons&CTRL_CROSS&&press&CTRL_UP){
setchar(yourped+0x894, 0x31);
yourped=0;}
if(yourped){
health2 = getfloat(yourped+0x4e4);
if(health2 == 0){
yourped=0;}}}
#off
setchar(yourped+0x894, 0x31);
yourped=0;

#cheat Rocket
pped = getint(0x08BA1D70);
if(pped){
pguard = getchar(pped + 0x894);
if(pped&&pguard == 0xC){
setchar(pped+0x5B0, 0x12);
setchar(pped+0x87c, 0x1e);
setchar(pped+0x789, 0x02);}}

#cheat Equalizer
pped = getint(0x08BA1D70);
if(pped){
pguard = getchar(pped + 0x894);
if(pped&&pguard == 0xC){
setchar(pped+0x5CC, 0x14);
setchar(pped+0x87c, 0x1e);
setchar(pped+0x789, 0x03);}}

#cheat Spaz 12
pped = getint(0x08BA1D70);
if(pped){
pguard = getchar(pped + 0x894);
if(pped&&pguard == 0xC){
setchar(pped+0x5E8, 0x16);
setchar(pped+0x87c, 0x1e);
setchar(pped+0x789, 0x04);}}

#cheat SMG
pped = getint(0x08BA1D70);
if(pped){
pguard = getchar(pped + 0x894);
if(pped&&pguard == 0xC){
setchar(pped+0x604, 0x19);
setchar(pped+0x87c, 0x1e);
setchar(pped+0x789, 0x05);}}

#cheat Uzi
pped = getint(0x08BA1D70);
if(pped){
pguard = getchar(pped + 0x894);
if(pped&&pguard == 0xC){
setchar(pped+0x604, 0x1A);
setchar(pped+0x87c, 0x1e);
setchar(pped+0x789, 0x05);}}

#cheat AK47
pped = getint(0x08BA1D70);
if(pped){
pguard = getchar(pped + 0x894);
if(pped&&pguard == 0xC){
setchar(pped+0x620, 0x1D);
setchar(pped+0x87c, 0x1e);
setchar(pped+0x789, 0x06);}}

#cheat Minigun
pped = getint(0x08BA1D70);
if(pped){
pguard = getchar(pped + 0x894);
if(pped&&pguard == 0xC){
setchar(pped+0x63C, 0x23);
setchar(pped+0x87c, 0x1e);
setchar(pped+0x789, 0x07);}}

#cheat Throw Explosive Barrels
setint(pplayer+0x5bc, 0x00ffffff);
setchar(pplayer+0xCB8, 0x02);
setchar(pplayer+0x5B0, 0x10);
pspawn = getint(0x0994f460);
check = getshort(pspawn+0x56);
if(check && check == 343 || check == 344 || check == 345){
setshort(pspawn+0x56, 450);}
for(pbomb = 0x08BF9E50; pbomb < 0x08BFA420; pbomb += 0x30){
setchar(pbomb, 0x12);}
pexp = 0x08BF9E50;
static det;
if(getchar(pexp + 0x0C)){
setchar(pexp + 0x0C, 0x0);
det = 1;}
if(det && buttons & CTRL_CROSS){
setchar(pexp + 0x0C, 0x1);
det = 0;}

#cheat Explosive Barrel Launcher
setint(pplayer+0x648, 0x00ffffff);
setchar(pplayer+0xCB8, 0x07);
setchar(pplayer+0x63C, 0x20);
pspawn = getint(0x0994f460);
check = getshort(pspawn+0x56);
if(check && check == 343 || check == 344 || check == 345){
setshort(pspawn+0x56, 450);}
for(pbomb = 0x08BF9E50; pbomb < 0x08BFA420; pbomb += 0x30){
setchar(pbomb, 0x12);}
pexp = 0x08BF9E50;
static det;
if(getchar(pexp + 0x0C)){
setchar(pexp + 0x0C, 0x0);
det = 1;}
if(det && buttons & CTRL_CROSS){
setchar(pexp + 0x0C, 0x1);
det = 0;}

#cheat Molotov Rockets
for(pbomb = 0x08BF9E50; pbomb < 0x08BFA420; pbomb += 0x30){
setchar(pbomb, 0x11);}

#cheat Get Rocket Launcher
setint(pplayer+0x648, 0x00ffffff);
setchar(pplayer+0xCB8, 0x07);
setchar(pplayer+0x63C, 0x20);

#cheat Shoot Explosive Umberto Pinatas
setint(pplayer+0x648, 0x00ffffff);
setchar(pplayer+0xCB8, 0x07);
setchar(pplayer+0x63C, 0x20);
pspawn = getint(0x0994f460);
check = getshort(pspawn+0x56);
if(check && check == 343 || check == 344 || check == 345){
setshort(pspawn+0x56, 7313);}
for(pbomb = 0x08BF9E50; pbomb < 0x08BFA420; pbomb += 0x30){
setchar(pbomb, 0x12);}
pexp = 0x08BF9E50;
static det;
if(getchar(pexp + 0x0C)){
setchar(pexp + 0x0C, 0x0);
det = 1;}
if(det && buttons & CTRL_CROSS){
setchar(pexp + 0x0C, 0x1);
det = 0;}

#cheat All Peds Invincible
player = getint(0x08bc8170);//address of pplayer
for(i=0; 0x098b4a40+i<=0x098ecf90; i+=0xd10){
if(0x098b4a40 + i != player) 
setfloat(0x098b4a40 + i + 0x4e4, 150);}

#cheat Police RC car
sethex(0x09ab9916, FF); //size car body
sethex(0x09ab9917, 3F); //size car body
sethex(0x09ab991a, 00); //size car body
sethex(0x09ab9926, AF); //move car body
sethex(0x09ab9927, BF); //move car body
sethex(0x09ab992a, 40); //move car body
sethex(0x09ab992b, 3E); //move car body
sethex(0x09abe776, 00); //back left door
sethex(0x09abe77a, 00); //back left door
sethex(0x09abe786, 9F); //move left door
sethex(0x09abe787, BF); //move left door
sethex(0x09abe78b, 3E); //move left door
sethex(0x09abf746, 00); //back right door
sethex(0x09abf74a, 00); //back right door
sethex(0x09abf756, 9F); //move right door
sethex(0x09abf757, BF); //move right door
sethex(0x09abf75b, 3E); //move right door
sethex(0x09abd496, 00); //front left door
sethex(0x09abd49a, 00); //front left door
sethex(0x09abd4a6, E4); //move front left door
sethex(0x09abd4a7, BF); //move front left door
sethex(0x09abd4ab, 3E); //move front left door
sethex(0x09ac2ab6, 00); //front right door
sethex(0x09ac2aba, 00); //front right door
sethex(0x09ac2ac6, E0); //move front right door
sethex(0x09ac2ac7, BF); //move front right door
sethex(0x09ac2acb, 3E); //move front right door
sethex(0x09ab9326, 00); //hood
sethex(0x09ab932a, 00); //hood
sethex(0x09ab9336, E8); //move hood
sethex(0x09ab9337, BF); //move hood
sethex(0x09ab933a, 5D); //move hood
sethex(0x09ab85d6, 00); //back seat
sethex(0x09ab85da, 00); //back seat
sethex(0x09ab85e6, B8); //move back seat
sethex(0x09ab85e7, BF); //move back seat
sethex(0x09ab85ea, 30); //move back seat
sethex(0x09ab85eb, 3E); //move back seat
sethex(0x09ab8d06, 00); //back bumper
sethex(0x09ab8d0a, 00); //back bumper
sethex(0x09ab8d17, BB); //move back bumper
sethex(0x09ab8d1b, 3E); //move back bumper
sethex(0x09ac19d6, 00); //front bumper
sethex(0x09ac19da, 00); //front bumper
sethex(0x09ac19e6, 29); //move front bumper
sethex(0x09ac19e7, C0); //move front bumper
sethex(0x09ac19eb, 3E); //move front bumper
sethex(0x09ac4116, 00); //siren
sethex(0x09ac411a, 00); //siren
sethex(0x09ac4126, B3); //move siren
sethex(0x09ac4127, BF); //move siren
sethex(0x09ac412a, 30); //move siren
sethex(0x09ac412b, 3E); //move siren
sethex(0x09ac4c36, 00); //engine
sethex(0x09ac4c3a, 00); //engine
sethex(0x09ac4c46, C0); //move engine
sethex(0x09ac4c47, BF); //move engine
sethex(0x09ac4c4a, 30); //move engine
sethex(0x09ac4c4b, 3E); //move engine
sethex(0x09ab96e6, 00); //trunk
sethex(0x09ab96ea, 00); //trunk
sethex(0x09ab96f6, DF); //move trunk
sethex(0x09ab96fa, 5D); //move trunk

#cheat Bonstruction
moveto(-693.45,1071.91,16.77);  object(0x1CB1,0,0,273);
move(0.26,1.33,-0.80);  object(0x1CB8,0,305,270);
move(-0.02,2.04,-1.40);  object(0x1CB8,0,305,260);
move(0.37,-0.05,-1.20);  object(0x1CB8,0,255,265);
move(-0.13,-2.21,-1.10);  object(0x1CB8,0,235,270);
move(-0.32,-1.87,-1.40);  object(0x1CB8,0,235,270);
teleport (-693.45,1071.91,16.77);

#cheat Force Push 
// By Edison Carter 
// Target a ped and they go flying! 
Static pdone; 
pped = getint (0x08BA1D70); 
if (pped! = 0 && pped! = pdone){
dx = getfloat (pped + 0x0030) = getfloat (pplayer + 0x0030); 
dy = getfloat (pped + 0x0034) = getfloat (pplayer + 0x0034); 
setshort (pped + 0x01c8, 0x1020); 
setfloat (pped + 0x0140, dx * 0.2); 
setfloat (pped + 0x0144, dy * 0.2); 
setfloat (pped + 0x0148, (fabs (dx) + fabs (dy)) * 0.05); 
pdone = pped;} 
if (pped == 0) {
pdone = 0;} 

#cheat Superman 2 
// By Waterbottle 
pstartfly = getshort (pplayer + 0x1C8); 
static speedmult; 
setfloat (pplayer + 0x4E4, 10000.0); // health 
setfloat (pplayer + 0x78, -0.03 * xstick); 
setfloat (pplayer + 0x70, 0.03 * ystick * getfloat (pplayer)); 
setfloat (pplayer + 0x74, 0.03 * ystick * getfloat (pplayer + 4)); 
if (buttons & CTRL_CROSS) {
setshort (pplayer + 0x1c8, 0x1020); 
if (speedmult <1.4) 
speedmult + = 0.01;} 
else 
if (speedmult> = 0) 
speedmult * = 0.95; 
if (pstartfly == 0x1020) {
updown = (getfloat (pplayer + 0x28)> 0)? 1: -1; 
setfloat (pplayer + 0x140, getfloat (pplayer + 4) * speedmult); 
setfloat (pplayer + 0x144, getfloat (pplayer) * speedmult); 
setfloat (pplayer + 0x148, getfloat (pplayer + 0x18) + cos (90/180) * 3.1415)) * speedmult * updown);} 

#cheat Tuned Sabre Turbo
//Author: WZW
//Category: Vehicle
//Description: A Sabre Turbo with indestructable tyres, custom colour, NOS, locked car doors (press down to lock/unlock), and neon.
//
//Version: 1.4.1
//Image:
//Working: Yes
if(getshort(pcar + 0x56) == 273)
{
setfloat(0x936F298, 0.8);
setchar(pcar + 0x224, 200, 0, 0);
setchar(pcar + 0x228, 0, 0, 0);
if(buttons & CTRL_CIRCLE && buttons & CTRL_CROSS) {

   speed = 0.0;
   setchar(0x09569B90, 0x10);
   setchar(0x09569B94, 0, 50, 255);
   if(getfloat(pcar+0x140)>0)
   {
      speed+=getfloat(pcar+0x140);
   }
   else
   {
      speed-=getfloat(pcar+0x140);
   }

   if(getfloat(pcar+0x144)>0)
   {
      speed+=getfloat(pcar+0x144);
   }
   else
   {
      speed-=getfloat(pcar+0x144);
   }

   if(speed<175/75)
   {
      setfloat(pcar+0x140,  getfloat(pcar+0x140)-getfloat(pcar+0x4)*0.005);
      setfloat(pcar+0x144,  getfloat(pcar+0x144)+getfloat(pcar)*0.005);
   }

}
else
{
   setchar(0x09569B90, 0x4);
   setchar(0x09569B94, 63, 63, 63);
}
}

R = 255;
G = 0;
B = 0;
for(neon=0;neon<16;neon++)
{setchar(0x0972EFF0+4*neon, R, G, B);}

setshort(pcar+0x3b6, 0, 0);

if(press & CTRL_DOWN)
setshort(pcar+0x232, getshort(pcar+0x232) ^ 0x0101);
#off
setshort(pcar+0x232, 0);

}

#cheat Barbie Blista
//Author: WZW
//Category: Vehicle
//Description: A pink Blista Compact.
//
//Version: 1.0
//Image:
//Working: Yes
if(getshort(pcar + 0x56) == 177)
{
setfloat(0x936F298, 0.8);
setchar(pcar + 0x224, 255, 41, 126);
setchar(pcar + 0x228, 245, 0, 100);

}

#cheat Custom Infernus
//Author: WZW
//Category: Vehicle
//Description: This Infernus has a bright green paint job. Hold O to use the Nos. It also has Lamborghini Style Doors and 20" Rims. Thanks to DDM for his Sentinel XS cheat.
//
//Version: 1.1
//Image:
//Working: Yes
if(getshort(pcar + 0x56) == 270)
{
setfloat(0x936F298, 0.8);
setchar(pcar + 0x224, 10, 255, 10);
setchar(pcar + 0x228, 0, 0, 0);
setfloat(pcar+0x450,  0,  -1.2566371,  0);
setfloat(pcar+0x480,  0,  -1.2566371,  0);
setfloat(pcar+0x4b0,  0,  -1.2566371,  0);
setfloat(pcar+0x4e0,  0,  -1.2566371,  0);
if(buttons & CTRL_CIRCLE && buttons & CTRL_CROSS) {

   speed = 0.0;
   setchar(0x09569B90, 0x10);
   setchar(0x09569B94, 0, 127, 255);
   if(getfloat(pcar+0x140)>0)
   {
      speed+=getfloat(pcar+0x140);
   }
   else
   {
      speed-=getfloat(pcar+0x140);
   }

   if(getfloat(pcar+0x144)>0)
   {
      speed+=getfloat(pcar+0x144);
   }
   else
   {
      speed-=getfloat(pcar+0x144);
   }

   if(speed<175/75)
   {
      setfloat(pcar+0x140,  getfloat(pcar+0x140)-getfloat(pcar+0x4)*0.005);
      setfloat(pcar+0x144,  getfloat(pcar+0x144)+getfloat(pcar)*0.005);
   }

}
else
{
   setchar(0x09569B90, 0x4);
   setchar(0x09569B94, 63, 63, 63);
}
}

#cheat Vehicle Spawns
//Author: WZW
//Category: Vehicle
//Description: Enjoy!
//
//Version: 0.5
//Image: None
//Working: Yes
pspawn = 0x08E81290;
setint(pspawn, 275); //Hunter
setfloat(pspawn + 0x4, 244.85, -182.86, 29.08, 0); //Clymenus Suite 2nd Helipad
pspawn += 0x30;
setint(pspawn, 268); //FBI Rancher
setfloat(pspawn + 0x4, 353.20, -509.06, 12.33, 145); //Washinton Beach Police Dept
pspawn += 0x30;
setint(pspawn, 204); //VCPD Cheetah
setfloat(pspawn + 0x4, 349.95, -508.19, 12.33, 145); //Washinton Beach Police Dept
pspawn += 0x30;
setint(pspawn, 245); //Sandking
setfloat(pspawn + 0x4, -428.90, 1388.54, 11.76, 0); //Dirt Track
pspawn += 0x30;
setint(pspawn, 255); //Bfinjection
setfloat(pspawn + 0x4, -435.49, 1389.45, 11.77, 150); //Dirt Track
pspawn += 0x30;
setint(pspawn, 228); //Stretch
setfloat(pspawn + 0x4, -835.06, 1038.65, 15.75, 0); //Hotel next to the Downtown Hospital
pspawn += 0x30;
setint(pspawn, 213); //Maverick
setfloat(pspawn + 0x4, -1069.02, 295.51, 11.26, 0); //The Compound
pspawn += 0x30;
setint(pspawn, 187); //Deluxo
setfloat(pspawn + 0x4, -1096.34, 313.76, 11.27, 0); //The Compound
pspawn += 0x30;
setint(pspawn, 172); //Cheetah
setfloat(pspawn + 0x4, 820.24, -1198.78, 11.11, 20); //Behind 101 Bayshore Avenue
pspawn += 0x30;
setint(pspawn, 263); //Sea Sparrow
setfloat(pspawn + 0x4, -835.96, -1197.60, 19.70, 90); //On top of 101 Bayshore Avenue garage
pspawn += 0x30;
setint(pspawn, 232); //Freeway
setfloat(pspawn + 0x4, -801.61,-1179.28 , 10.96, 90); //101 Bayshore Avenue
pspawn += 0x30;
setint(pspawn, 222); //Biplane
setfloat(pspawn + 0x4, -1307.15, -664.83, 14.87, 0); //Bended runway
pspawn += 0x30;
off()

#cheat ADMIRAL at 101 Bayshore Avenue
//Created By Sunshine Customs
//Sunshine Customs Created By emcp
//Addresses Found By Vette
//Customed By .kom From Joey's Garage, Trenton, Portland, Liberty City
//Basics
setint(0x08C739B0, 171); //Car Id
setchar(0x08C739B0+0x24, 0,0,0, 255); //Color 1
setchar(0x08C739B0+0x28, 0,0,255, 255); //Color2
setshort(0x98a30e2, 1, 'A','D','M','I','R','A','L', 0);
//Wheels
setfloat(0x935E438, 0.7, 0.7); //wheel size
setfloat(0x962eb20+0x6c, 0.65); //Traction Multiplier
setfloat(0x962eb20+0xc4, 0.8); //Traction Loss
setfloat(0x962eb20+0x70, 0.52); //Traction Bias
//Engine
setchar(0x962eb20+0x5c, 'R', 'D', 5); // Drive type / Engine type / Gears
//Suspension
setfloat(0x962eb20+0x7c, 0.26); //Suspension Upper Limit
setfloat(0x962eb20+0x80, -0.02); //Suspension Lower Limit
setfloat(0x962eb20+0x78, 0.3); //Suspension Damping Level
setfloat(0x962eb20+0x74, 0.5); //Suspension Force Level
setfloat(0x962eb20+0x84, 0.55); //Suspension Bias
setfloat(0x962eb20+0x88, 0.7); //Anti-Dive Multiplier
//Handling
setfloat(0x962eb20+0x68, 30); //Steering Lock
setfloat(0x962eb20+0xbc, 1800); //Vehilce Mass
setfloat(0x962eb20+0xc0, 4000); //Turn Mass
setfloat(0x962eb20+0xa0, 0); //Centre of Mass - X
setfloat(0x962eb20+0xa4, 0.2); //Centre of Mass - Y
setfloat(0x962eb20+0xa8, 0.15); //Centre of Mass - Z
//Teleport
teleport( -806.04, -1185.04, 11.0);
off()

#cheat GREENWOOD at 101 Bayshore Avenue
//Created By Sunshine Customs
//Sunshine Customs Created By emcp
//Addresses Found By Vette
//Basics
setint(0x08C739B0, 196); //Car Id
setchar(0x08C739B0+0x24, 0,0,0, 255); //Color 1
setchar(0x08C739B0+0x28, 150,120,70, 255); //Color2
setshort(0x98a364e, 1, 'G','R','E','E','N','W','O','O','D', 0);
//Wheels
setfloat(0x93625D8, 0.65, 0.65); //wheel size
setfloat(0x962fe60+0x6c, 0.7); //Traction Multiplier
setfloat(0x962fe60+0xc4, 0.8); //Traction Loss
setfloat(0x962fe60+0x70, 0.52); //Traction Bias
//Engine
setchar(0x962fe60+0x5c, 'R', 'P', 4); // Drive type / Engine type / Gears
//Suspension
setfloat(0x962fe60+0x7c, 0.2); //Suspension Upper Limit
setfloat(0x962fe60+0x80, -0.02); //Suspension Lower Limit
setfloat(0x962fe60+0x78, 0.25); //Suspension Damping Level
setfloat(0x962fe60+0x74, 0.55); //Suspension Force Level
setfloat(0x962fe60+0x84, 0.49); //Suspension Bias
setfloat(0x962fe60+0x88, 0.7); //Anti-Dive Multiplier
//Handling
setfloat(0x962fe60+0x68, 30); //Steering Lock
setfloat(0x962fe60+0xbc, 1600); //Vehilce Mass
setfloat(0x962fe60+0xc0, 4000); //Turn Mass
setfloat(0x962fe60+0xa0, 0); //Centre of Mass - X
setfloat(0x962fe60+0xa4, 0); //Centre of Mass - Y
setfloat(0x962fe60+0xa8, 0); //Centre of Mass - Z
//Teleport
teleport( -806.04, -1185.04, 11.0);
off()

#cheat GLENDALE at 101 Bayshore Avenue
//Created By Sunshine Customs
//Sunshine Customs Created By emcp
//Addresses Found By Vette
//Customed By .kom From Joey's Garage, Trenton, Portland, Liberty City
//Basics
setint(0x08C739B0, 195); //Car Id
setchar(0x08C739B0+0x24, 0,0,0, 255); //Color 1
setchar(0x08C739B0+0x28, 255,255,255, 255); //Color2
setshort(0x98a351c, 1, 'G','L','E','N','D','A','L','E', 0);
//Wheels
setfloat(0x9362338, 0.7, 0.7); //wheel size
setfloat(0x962fd80+0x6c, 0.6); //Traction Multiplier
setfloat(0x962fd80+0xc4, 0.84); //Traction Loss
setfloat(0x962fd80+0x70, 0.52); //Traction Bias
//Engine
setchar(0x962fd80+0x5c, 'R', 'P', 5); // Drive type / Engine type / Gears
//Suspension
setfloat(0x962fd80+0x7c, 0.25); //Suspension Upper Limit
setfloat(0x962fd80+0x80, -0.02); //Suspension Lower Limit
setfloat(0x962fd80+0x78, 0.25); //Suspension Damping Level
setfloat(0x962fd80+0x74, 0.55); //Suspension Force Level
setfloat(0x962fd80+0x84, 0.49); //Suspension Bias
setfloat(0x962fd80+0x88, 0.7); //Anti-Dive Multiplier
//Handling
setfloat(0x962fd80+0x68, 30); //Steering Lock
setfloat(0x962fd80+0xbc, 1600); //Vehilce Mass
setfloat(0x962fd80+0xc0, 4000); //Turn Mass
setfloat(0x962fd80+0xa0, 0); //Centre of Mass - X
setfloat(0x962fd80+0xa4, 0); //Centre of Mass - Y
setfloat(0x962fd80+0xa8, 0.5); //Centre of Mass - Z
//Teleport
teleport( -806.04, -1185.04, 11.0);
off()

#cheat PIMPED: 164-DODO
sethex(0x945b7c0, 0x00, 0x80, 0x04, 0x00);
sethex(0x944fb48, 0xFF, 0xFF, 0x00);
sethex(0x944fb0c, 0xFF, 0x00, 0xFF);
setint(0x8E38988, 164);
sethex(0x8E389AE, 0x01, 0x00);
teleport(1155.71, -257.05, 17.30);
setchar(pplayer + 0xB84, 0x00);

#cheat Saw Blade
//Bump into cars to collect them, then use O to spin them
//extremely fast, knocking out everything in their way!
static car1;
static car2;
static car3;
static car4;
static started;
static touch2;
static touch3;
static touch4;
if(!started){
angle = 0;
started = 1;
}
if(buttons & CTRL_RTRIGGER){
if(press & CTRL_UP)
 car1 = 0;
if(press & CTRL_RIGHT)
 car2 = 0;
if(press & CTRL_DOWN)
 car3 = 0;
if(press & CTRL_LEFT)
 car4 = 0;
}
if(buttons & CTRL_CIRCLE){
revspeed = 6;
rotspeed = 5;
} else{
revspeed = 1;
rotspeed = .1;
}
touch1 = getint(pobj+0x150);
if(car1)
touch2 = getint(car1+0x150);
if(car2)
touch3 = getint(car2+0x150);
if(car3)
touch4 = getint(car3+0x150);
if(touch1 && touch1 != pcar && touch1 != car1 ?amp;& touch1 != car2 ?amp;& touch1 != car3 ?amp;& touch1 != car4 && getshort(touch1 + 0x56) >= 170 && getshort(touch1 + 0x56) <= 280){
if(!car1)
 car1 = touch1;
else if(!car2)
 car2 = touch1;
else if(!car3)
 car3 = touch1;
else if(!car4)
 car4 = touch1;
}
if(touch2 && touch2 != pcar && touch2 != car1 ?amp;& touch2 != car2 ?amp;& touch2 != car3 ?amp;& touch2 != car4 && getshort(touch2 + 0x56) >= 170 && getshort(touch2 + 0x56) <= 280){
if(!car1)
 car1 = touch2;
else if(!car2)
 car2 = touch2;
else if(!car3)
 car3 = touch2;
else if(!car4)
 car4 = touch2;
}
if(touch3 && touch3 != pcar && touch3 != car1 ?amp;& touch3 != car2 ?amp;& touch3 != car3 ?amp;& touch3 != car4 && getshort(touch3 + 0x56) >= 170 && getshort(touch3 + 0x56) <= 280){
if(!car1)
 car1 = touch3;
else if(!car2)
 car2 = touch3;
else if(!car3)
 car3 = touch3;
else if(!car4)
 car4 = touch3;
}
if(touch4 && touch4 != pcar && touch4 != car1 ?amp;& touch4 != car2 ?amp;& touch4 != car3 ?amp;& touch4 != car4 && getshort(touch4 + 0x56) >= 170 && getshort(touch4 + 0x56) <= 280){
if(!car1)
 car1 = touch4;
else if(!car2)
 car2 = touch4;
else if(!car3)
 car3 = touch4;
else if(!car4)
 car4 = touch4;
}
angle+=revspeed;
if(angle > 360)
angle = 0;
if(car1){
setfloat(car1 + 0x08, 0);
??setfloat(car1 + 0x18, 0);
setfloat(car1+0x140, 0, 0, -0.00083);
setfloat(car1 + 0x20, 0, 0, 1);
setfloat(car1 + 0x70, 0, 0, rotspeed);
setfloat(car1 + 0x27c, 100000);
setfloat(car1+0x30, getfloat(pobj+0x30) + cos(angle)*10, getfloat(pobj+0x34) + sin(angle)*10, getfloat(pobj+0x38) + 0.25);
}
if(car2){
setfloat(car2 + 0x08, 0);
??setfloat(car2 + 0x18, 0);
setfloat(car2+0x140, 0, 0, -0.00083);
setfloat(car2 + 0x20, 0, 0, 1);
setfloat(car2 + 0x70, 0, 0, rotspeed);
setfloat(car2 + 0x27c, 100000);
setfloat(car2+0x30, getfloat(pobj+0x30) + cos(angle+90)*10, getfloat(pobj+0x34) + sin(angle+90)*10, getfloat(pobj+0x38) + 0.25);
}
if(car3){
setfloat(car3 + 0x08, 0);
??setfloat(car3 + 0x18, 0);
setfloat(car3+0x140, 0, 0, -0.00083);
setfloat(car3 + 0x20, 0, 0, 1);
setfloat(car3 + 0x70, 0, 0, rotspeed);
setfloat(car3 + 0x27c, 100000);
setfloat(car3+0x30, getfloat(pobj+0x30) + cos(angle+180)*10, getfloat(pobj+0x34) + sin(angle+180)*10, getfloat(pobj+0x38) + 0.25);
}
if(car4){
setfloat(car4 + 0x08, 0);
??setfloat(car4 + 0x18, 0);
setfloat(car4+0x140, 0, 0, -0.00083);
setfloat(car4 + 0x20, 0, 0, 1);
setfloat(car4 + 0x70, 0, 0, rotspeed);
setfloat(car4 + 0x27c, 100000);
setfloat(car4+0x30, getfloat(pobj+0x30) + cos(angle+270)*10, getfloat(pobj+0x34) + sin(angle+270)*10, getfloat(pobj+0x38) + 0.25);
}
#off
car1 = car2 = car3 = car4 = started = 0;

#cheat Car Thrower
//part of DDM's cheat for launching is used
if(pplayer){
playerx = getfloat(pplayer + 0x30);
playery = getfloat(pplayer + 0x34);
playerz = getfloat(pplayer + 0x38);
push = 1.0;
static find;
if(find == 0){
if(getint(pplayer + 0x150)){
pick = getint(pplayer + 0x150);
find = 1;}}
if(find == 1 && press & CTRL_RTRIGGER){
setfloat(pick + 0x27C, 0.0);}
if(getshort(pick + 0x56) > 150&&getshort(pick + 0x56) < 279){
setfloat(pick + 0x30, playerx);
setfloat(pick + 0x34, playery);
setfloat(pick + 0x38, playerz +2);
setfloat(pick + 0x140, 0, 0, 0);
setfloat(pick + 0x70, 0, 0, 0);
setchar(pplayer + 0x8B4, 0x40);}
if(press & CTRL_CIRCLE){
setfloat(pick + 0x0140, getfloat(pobj + 0x0140) + getfloat(pobj + 0x0010) * push);
setfloat(pick + 0x0144, getfloat(pobj + 0x0144) + getfloat(pobj + 0x0014) * push);
setfloat(pick + 0x0148, getfloat(pobj + 0x0148) + getfloat(pobj + 0x0018) * push);
pick = 0;
find = 0;
setchar(pplayer + 0x8B4, 0x01);}}
#off
pick = 0;
setchar(pplayer + 0x8B4, 0x01);

#cheat Car Object Launcher
//part of DDM's cheat for launching is used
if(pcar){
playerx = getfloat(pplayer + 0x30);
playery = getfloat(pplayer + 0x34);
playerz = getfloat(pplayer + 0x38);
push = 2.0;
static find;
if(find == 0){
if(getint(pcar + 0x150)){
pick = getint(pcar + 0x150);
find = 1;}}
if(getshort(pick + 0x56) > 150&&getshort(pick + 0x56) < 279){
if(find == 1 && press & CTRL_RTRIGGER){
setfloat(pick + 0x27C, 0.0);}}
if(getshort(pick + 0x56) < 279){
setfloat(pick + 0x30, playerx);
setfloat(pick + 0x34, playery);
setfloat(pick + 0x38, playerz +2);
setfloat(pick + 0x140, 0, 0, 0);
setfloat(pick + 0x70, 0, 0, 0);}
if(press & CTRL_UP){
setfloat(pick + 0x0140, getfloat(pobj + 0x0140) + getfloat(pobj + 0x0010) * push);
setfloat(pick + 0x0144, getfloat(pobj + 0x0144) + getfloat(pobj + 0x0014) * push);
setfloat(pick + 0x0148, getfloat(pobj + 0x0148) + getfloat(pobj + 0x0018) * push);
pick = 0;
find = 0;}}
#off
pick = 0;
setchar(0x08BA09F5, 1);

#cheat Pickup Spawn above Vic
setfloat(0x08C6A17, getfloat(pplayer+0x30), getfloat(pplayer+0x34), getfloat(pplayer+0x38));
setint(0x08C6A19C, 100); // Amount of ammo for the pickup (Set to FF for non weapon pickups)
setchar(0x08C6A1A4, 0x57); // Object ID
setchar(0x08C6A1A6, 0x02); // Don't know what it's for (Goes up each time you collect it)
setchar(0x08C6A1A8, 0x02); // Pickup Type (01 = Buyable; 02 = One Time; 03 = Respawning)
setchar(0x08C6A1A9, 0x00); // 00 = Pickup spawns; 01 = Pickup won't spawn

#cheat Sub Machine Gun Upgrade Pack
for(i=0; i<4; i++){
sub=0x095FFCE0+(i*0x70);
setchar(sub+0x1, 0x1);//Allow jumping
setfloat(sub+0x8, 500);//Set range to 500
setint(sub+0x14, 1000);//Max out clip size
setfloat(sub+0x18, 5000);//Set high damage for each gun
setfloat(sub+0x44, 0.4, 0.4, 0.4);//Set firing speed to Minigun's speed
}
off();

#cheat Shotgun Upgrade Pack
for(i=0; i<3; i++){
sub=0x095FFB90+(i*0x70);
setchar(sub+0x1, 0x1);//Allow jumping
setfloat(sub+0x8, 500);//Set range to 500
setint(sub+0x14, 1000);//Max out clip size
setfloat(sub+0x18, 5000);//Set high damage for each gun
setfloat(sub+0x44, 0.4, 0.4, 0.4);//Set firing speed to Minigun's speed
}
off();

#cheat Machine Gun Upgrade Pack
for(i=0; i<2; i++){
sub=0x095FFEA0+(i*0x70);
setchar(sub+0x1, 0x1);//Allow jumping
setfloat(sub+0x8, 500);//Set range to 500
setint(sub+0x14, 1000);//Max out clip size
setfloat(sub+0x18, 5000);//Set high damage for each gun
setfloat(sub+0x44, 0.4, 0.4, 0.4);//Set firing speed to Minigun's speed
}
off();

#cheat Pistol Upgrade Pack
for(i=0; i<2; i++){
sub=0x095FFAB0+(i*0x70);
setchar(sub+0x1, 0x1);//Allow jumping
setfloat(sub+0x8, 500);//Set range to 500
setint(sub+0x14, 1000);//Max out clip size
setfloat(sub+0x18, 5000);//Set high damage for each gun
setfloat(sub+0x44, 0.4, 0.4, 0.4);//Set firing speed to Minigun's sp
}
off();

#cheat Thrown Weapon Upgrade Pack
for(i=0; i<6; i++){
sub=0x095FF7A0+(i*0x70);
setchar(sub+0x0, 0x46); //Allow manual aiming
setchar(sub+0x1, 0x1);//Allow jumping
setfloat(sub+0x8, 500);//Set range to 500
setint(sub+0x14, 1000);//Max out clip size
setfloat(sub+0x18, 5000);//Set high damage for each gun
setshort(sub+0x40, 0x0E);//Allow run and shoot
setfloat(sub+0x44, 0.25, 0.25, 0.25);//Set firing speed to Minigun's speed
}
off();

#cheat Heavy Weapon Upgrade Pack
for(i=0; i<4; i++){
sub=0x09600060+(i*0x70);
setchar(sub+0x0, 0x46); //Allow manual aiming
setchar(sub+0x1, 0x1);//Allow jumping
setfloat(sub+0x8, 500);//Set range to 500
setint(sub+0x14, 1000);//Max out clip size
setfloat(sub+0x18, 5000);//Set high damage for each gun
//setshort(sub+0x40, 0x0E);//Allow run and shoot
setfloat(sub+0x44, 0.4, 0.4, 0.4);//Set firing speed to Minigun's speed
}
off();

#cheat Pimped Sandking at 101 Bayshore Avenue
//Created By Sunshine Customs
//Sunshine Customs Created By emcp
//Addresses Found By Vette
//Basics
setint(0x08C739B0, 245); //Car Id
setchar(0x08C739B0+0x24, 222,0,0, 255); //Color 1
setchar(0x08C739B0+0x28, 225,225,225, 255); //Color2
setshort(0x98a2fb2, 1,  0);
//Wheels
setfloat(0x936A678, 1.05, 1.05); //wheel size
setfloat(0x96329e0+0x6c, 0.75); //Traction Multiplier
setfloat(0x96329e0+0xc4, 0.85); //Traction Loss
setfloat(0x96329e0+0x70, 0.5); //Traction Bias
//Engine
setchar(0x96329e0+0x5c, '4', 'P', 5); // Drive type / Engine type / Gears
//Suspension
setfloat(0x96329e0+0x7c, -0.1); //Suspension Upper Limit
setfloat(0x96329e0+0x80, -0.5); //Suspension Lower Limit
setfloat(0x96329e0+0x78, 0.07); //Suspension Damping Level
setfloat(0x96329e0+0x74, 0.7); //Suspension Force Level
setfloat(0x96329e0+0x84, 0.5); //Suspension Bias
setfloat(0x96329e0+0x88, 0); //Anti-Dive Multiplier
//Handling
setfloat(0x96329e0+0x68, 30); //Steering Lock
setfloat(0x96329e0+0xbc, 1500); //Vehilce Mass
setfloat(0x96329e0+0xc0, 1500); //Turn Mass
setfloat(0x96329e0+0xa0, 0); //Centre of Mass - X
setfloat(0x96329e0+0xa4, 0); //Centre of Mass - Y
setfloat(0x96329e0+0xa8, 0); //Centre of Mass - Z
//Teleport
teleport( -806.04, -1185.04, 11.0);
off()

#cheat New Weapon Pack
//Generated By VCS Cheater
//Orginal Cheat Created By Waterbottle, Sousanator and parm
  setint(pplayer+0x5d8,  0x9999);
setint(pplayer+0x5f4,  0x9999);
setint(pplayer+0x610,  0x9999);
setint(pplayer+0x5bc,  0x9999);
setint(pplayer+0x62c,  0x9999);
setint(pplayer+0x648,  0x9999);
setint(pplayer+0x664,  0x9999);
setchar(pplayer+0xCB8,  0x00);
setchar(pplayer+0x594,  0x09);
setchar(pplayer+0x5b0,  0x0e);
setchar(pplayer+0x5cc,  0x14);
setchar(pplayer+0x5E8,  0x16);
setchar(pplayer+0x604,  0x1a);
setchar(pplayer+0x620,  0x1c);
setchar(pplayer+0x63C,  0x20);
setchar(pplayer+0x658,  0x1f);
off();

#cheat IO_race
moveto(-728.31,1038.98,13.29); object(0x1CAA,0,0,74);
move(-68.46,67.32,11.60); object(0x1CAA,0,0,163);
move(264.54,-76.91,43.20); object(0x1CAA,0,0,339);
move(-159.27,22.06,-50.50); object(0x1CAA,0,0,89);
move(33.73,-41.15,2.90); object(0x1CAA,0,0,141);
move(71.04,-243.68,-8.60); object(0x1CB2,270,290,271);
move(-0.18,-11.01,3.30); object(0x1D0F,165,180,1);
move(57.97,-92.82,-4.90); object(0x1CA8,180,180,316);
move(12.99,-2.81,0.00); object(0x1CA8,180,180,251);
move(13.31,7.41,0.00); object(0x1CA8,180,180,231);
move(7.77,12.71,0.00); object(0x1CA8,180,180,192);
move(-2.13,13.62,2.10); object(0x1CB2,90,290,83);
move(-1.42,11.82,4.30); object(0x1CB2,90,290,83);
move(-1.45,12.32,4.50); object(0x1CB2,90,290,83);
move(-1.79,13.33,4.90); object(0x1CB2,90,290,82);
move(-0.95,10.57,3.60); object(0x1D0F,160,180,174);
move(-14.02,19.21,4.50); object(0x1CA8,180,180,342);
move(0.00,0.00,3.50); object(0x1CA8,180,180,342);
moveto(-680.66,1048.86,21.66); object(0x1CB2,270,260,2);
move(-0.29,5.36,0.00); object(0x1CB2,270,260,356);
moveto(-493.73,796.99,35.06); object(0x1CB2,260,285,121);
move(6.02,11.35,2.30); object(0x1CB2,260,280,143);
move(2.89,9.60,2.00); object(0x1CB2,260,285,91);
move(-4.18,12.57,2.90); object(0x1CB2,260,285,75);
move(-5.83,12.44,4.30); object(0x1CB2,260,290,75);
move(-5.93,11.81,5.90); object(0x1CB2,260,300,75);
move(-5.96,10.65,6.90); object(0x1CB2,260,300,70);
moveto(-514.06,873.21,64.36); object(0x1CB2,270,240,214);
moveto(-585.60,716.03,22.15); object(0x1CB2,270,290,264);
move(1.41,-13.34,5.50); object(0x1CB2,270,295,264);
move(1.00,-12.15,3.30); object(0x1CA8,180,180,131);
move(13.67,-6.93,-0.10); object(0x1CA8,180,180,104);
move(15.37,-2.26,0.00); object(0x1CA8,180,180,94);
moveto(-638.04,936.07,16.75); object(0x1CB2,270,105,245);
move(6.04,2.81,0.00); object(0x1CB2,270,105,245);
move(5.90,-12.32,3.60); object(0x1CB2,270,105,243);
move(-5.84,-3.18,0.00); object(0x1CB2,270,105,243);
move(7.56,-7.79,2.10); object(0x1CAA,0,0,152);
moveto(-532.70,959.58,73.68); object(0x1CA8,280,270,259);
move(-0.36,14.31,-4.50); object(0x1CA8,270,305,268);
move(6.14,-25.38,4.50); object(0x1CB2,270,270,1);
move(0.11,6.70,0.00); object(0x1CB2,270,270,1);
moveto(-522.08,953.99,74.12); object(0x0201,0,0,90);
move(-2.71,0.04,0.00); object(0x0201,0,0,90);
move(-3.00,0.16,0.00); object(0x0201,0,0,90);
move(-0.17,-1.92,0.00); object(0x0201,0,0,90);
move(2.91,-0.05,0.00); object(0x0201,0,0,90);
move(2.91,-0.05,0.00); object(0x0201,0,0,90);
moveto(-529.37,953.62,73.72); object(0x1D01,0,0,8);
move(8.99,0.03,0.00); object(0x1D01,0,0,8);
pspawn = 0x08E81290;
setint(pspawn, 270);
setfloat(pspawn + 4, -521.80, 952.32, 75, 0);
pspawn += 0x30;
setint(pspawn, 212);
setfloat(pspawn + 4, -531.05, 951.93, 75, 0);
pspawn += 0x30;
teleport(-524.97,954.97,80);

#cheat Teleport: Mendez'S House
teleport(17.49, 1150.10, -193.79);

#cheat (UPGREAD) 2
setfloat (0X945b330, 10700);
setfloat (0X945b3bc, 1.575);
setfloat (0X945b3c0, 1.575);
setfloat (0X945b3b4, 0.0025);
setfloat (0X945b3d0, 0.525);
setfloat (0X945b33c, .00952);
sethex (0X945b400, 0x22, 0x60, 0x00, 0x00);
sethex (0X944fb2c, 0xFF, 0xFF, 0x00);
sethex (0X944fb14, 0xFF, 0x00, 0xFF);
setchar (Pplayer + 0XB84, 0x00);
// FBI sp car - Pimped: FBICAR
setShort (0X992FD0C, 0x20, 0x46, 0x42, 0x49, 0x20, 0x73, 0x70, 0x20, 0X63,0x61, 0x72);
setShort (0X9441300, 254);
setFloat (0X94412fc, 0.825);
setFloat (0x945a610, 3700);
setfloat (0x945a69c, 1.625);
setFloat (0X945a6a0, 1.625);
setFloat (0X945a694, .00363);
setFloat (0X945a6b0, 0.7);
setFloat (0X945a61c, 0.24);
Sethex (0X945a6e0, 0x02, 0x80, 0x00, 0x01);
Sethex (0X944fb30, 0xFF, 0xFF, 0x00 );
Sethex (0X944fb34, 0xFF, 0x00, 0xFF);
setchar (Pplayer + 0XB84, 0x00);
// RHINO
setFloat (0X945b2cc, 1.425);
setFloat (0X945b2d0, 1.425);
setFloat (0X945b2c4, 0.003);
setFloat (0X945b2e0, 0.6);
setfloat (0x945b24c, 0.002);
sethex (0x945b310, 0x03, 0x40, 0x00, 0x01);
sethex (0x944fb34, 0xFF, 0xFF, 0x00);
sethex (0x944fb0c, 0xFF, 0x00, 0xFF);
// SWAT car --PIMPED: ENFORCR
setShort (0X992FDAE, 0x53, 0x57, 0x41, 0x54, 0x20, 0x63, 0x61, 0x72);
setFloat (0X944229c, 1.025);
setFloat (0X945af0c, 1.675);
setFloat (0X945af10, 1.675);
setFloat (0X945af04, 0.00275);
setFloat (0X945af20, 0.5625);
setFloat (0X945ae8c, 0.004);
Sethex (0X945af50, 0x27, 0x00, 0x00, 0x01);
Sethex (0X944fb14, 0xFF, 0xFF, 0x00);
Sethex (0X944fb5c, 0xFF, 0x00, 0xFF);
setchar (0XB84 Pplayer, 0X00);
// PIMPED: POLICAR
Setfloat (0X944210c, 0.775);
Setfloat (0X945ad90, 2575);
Setfloat (0X945ae1c, 1.675);
Setfloat (0X945ae20, 1.675);
Setfloat (0X945ae14, 0.00325);
Setfloat (0X945ae30 , 0.6);
setfloat (0x945ad9c, 0.22);
sethex (0x945ae60, 0x02, 0x90, 0x00, 0x01);
sethex (0x944fb30, 0xFF, 0xFF, 0x00);
sethex (0x944fb4c, 0xFF, 0x00, 0xFF);
setchar (pplayer + 0xB84, 0x00);

#cheat saspeed- 210-SANCHEZ
setshort (0x993016C, 0x73, 0x61, 0x73, 0x70, 0x65, 0x65, 0x64);
setfloat (0x945d66c, 2);
setfloat (0x945d670, 2);
setfloat (0x945d664, 0.0075);
setfloat (0x945d664, 0.0075 );
setfloat (0x945d5ec, 7.5);
sethex (0x945d6b0, 0x03, 0x00, 0x11, 0x00);
sethex (0x944fb58, 0xFF, 0xFF, 0x00);
sethex (0x944fb20, 0xFF, 0xFF, 0x00);
setchar (pplayer + 0x00);

#cheat Dogs the cose1
moveto(-847.99,-1122.80,16.01); object(0x1CB2,0,90,82);
moveto(-817.11,-1118.22,16.00); object(0x1CB2,0,90,49);
move(8.88,9.78,0.00); object(0x1CB2,0,90,35);
move(6.18,12.01,0.00); object(0x1CB2,0,90,20);
move(0.83,11.86,0.00); object(0x1CB2,0,90,347);
move(-4.27,12.56,2.40); object(0x1CB2,90,110,67);
move(-5.19,13.09,2.50); object(0x1CB2,90,90,69);
move(0.37,10.09,0.00); object(0x1CB2,90,90,159);
move(8.12,6.83,0.00); object(0x1CB2,90,90,87);
move(-3.32,12.36,2.60); object(0x1CD5,90,90,89);
move(-0.11,10.87,0.00); object(0x1CD5,90,90,90);
move(-0.09,10.66,0.00); object(0x1CD5,90,90,89);
move(-0.29,11.14,0.00); object(0x1CD5,90,90,88);
moveto(-801.15,-986.81,23.51); object(0x1CD5,90,90,268);
move(-1.83,10.88,0.00); object(0x1CD5,90,90,252);
move(-3.02,9.15,0.00); object(0x1CD5,90,90,252);
move(-6.46,9.95,-2.60); object(0x1CB2,90,90,247);
move(-6.16,10.27,1.60); object(0x1CB2,90,75,230);
move(-8.79,10.56,3.70); object(0x1CB2,90,105,51);
move(-0.54,12.81,1.80); object(0x1CB2,90,90,137);
move(-9.12,-8.87,-0.10); object(0x1CB2,90,90,136);
moveto(-885.50,-934.99,25.95); object(0x1CB2,0,90,273);
move(-14.35,0.81,0.00); object(0x1CB2,0,90,273);
move(-8.54,4.81,0.00); object(0x1CB2,0,90,326);
move(-8.97,10.33,0.00); object(0x1CB2,0,90,312);
move(-9.86,8.77,0.00); object(0x1CB2,0,90,311);
move(-8.90,9.96,0.00); object(0x1CB2,0,90,325);
move(-8.07,11.77,0.00); object(0x1CB2,0,90,326);
move(-7.63,11.80,1.90); object(0x1CB2,90,285,57);
move(-7.36,11.51,3.70); object(0x1CB2,90,285,57);
move(-7.57,11.89,1.90); object(0x1CB2,90,270,58);
move(-7.49,12.18,-1.20); object(0x1CB2,90,260,59);
move(-8.45,10.57,-1.10); object(0x1CB2,90,270,45);
move(-7.88,10.54,0.00); object(0x1CB2,90,270,62);
move(-6.70,12.43,0.00); object(0x1CB2,90,270,61);
move(-6.88,12.57,-1.30); object(0x1CB2,90,260,61);
move(-5.95,12.28,-2.40); object(0x1CB2,90,260,67);
move(-3.64,12.63,-2.40); object(0x1CB2,90,260,80);
move(-2.61,13.97,-2.50); object(0x1CB2,90,260,78);
move(-3.13,13.70,-2.40); object(0x1CB2,90,260,77);
move(-2.14,13.77,-1.30); object(0x1CB2,90,270,85);
move(-1.10,14.13,-1.20); object(0x1CB2,90,260,87);
move(-0.86,12.41,-2.20); object(0x1CB2,90,260,86);
move(-3.31,21.48,0.30); object(0x1CB2,90,260,257);
move(-2.31,13.78,1.80); object(0x1CB2,90,265,263);
move(-49.18,70.42,-0.80); object(0x1CB2,90,270,175);
move(0.51,-6.62,0.00); object(0x1CB2,90,270,175);
move(0.60,-6.57,0.00); object(0x1CB2,90,270,175);
move(-15.34,12.02,0.10); object(0x1CB2,90,270,354);
move(0.68,-6.68,0.00); object(0x1CB2,90,270,354);
move(0.73,-6.62,-0.10); object(0x1CB2,90,270,354);
move(64.08,17.79,-0.16); object(0x1CAB,180,180,268);
move(-52.06,-0.77,1.60); object(0x1CA8,180,180,84);
move(-13.13,-1.36,0.00); object(0x1CA8,180,180,84);
move(-5.62,-7.66,0.10); object(0x1CA8,180,180,173);
move(7.98,-6.87,0.00); object(0x1CA8,180,180,262);
move(14.07,1.69,0.10); object(0x1CA8,180,180,265);
move(0.23,7.36,2.20); object(0x1CA8,180,270,356);
move(-3.62,-0.17,0.00); object(0x1CA8,180,270,355);
move(-2.75,-0.26,-0.10); object(0x1CA8,180,270,174);
move(-3.67,-0.39,0.10); object(0x1CA8,180,270,175);
move(-3.55,-0.30,0.00); object(0x1CA8,180,270,174);
move(-3.40,-0.39,-0.20); object(0x1CA8,180,270,174);
move(-3.71,-0.34,0.00); object(0x1CA8,180,270,174);
moveto(-808.10,-1112.70,16.73); object(0x01A4,0,0,305);
move(-4.31,3.11,0.00); object(0x01A4,0,0,305);
move(6.76,11.76,0.00); object(0x01A4,0,0,290);
move(5.19,-1.94,0.00); object(0x01A4,0,0,291);
move(2.72,11.99,0.10); object(0x01A4,0,0,257);
move(-5.17,-1.11,0.00); object(0x01A4,0,0,255);
move(-11.52,32.31,4.70); object(0x01A4,0,0,248);
move(-1.29,8.20,0.00); object(0x01A4,0,0,339);
move(1.99,87.42,0.00); object(0x01A4,0,0,246);
move(4.74,3.01,0.00); object(0x01A4,0,0,246);
move(-33.46,24.59,7.10); object(0x01A4,0,0,317);
move(2.52,-5.15,0.00); object(0x01A4,0,0,317);
move(9.67,16.60,0.00); object(0x01A4,0,0,137);
move(1.91,-5.52,0.00); object(0x01A4,0,0,317);
move(6.95,6.41,0.20); object(0x01A4,0,0,188);
move(-124.75,40.60,-1.90); object(0x01A4,0,345,236);
move(-16.43,26.01,7.20); object(0x01A4,0,0,237);
move(-8.67,2.81,0.00); object(0x01A4,0,0,59);
move(-6.43,20.07,-2.30); object(0x01A4,0,0,225);
move(-4.55,-3.79,-0.00); object(0x01A4,0,0,224);
move(-4.05,13.06,0.00); object(0x01A4,0,0,243);
move(-5.17,-1.72,0.00); object(0x01A4,0,0,243);
move(-0.55,12.45,0.00); object(0x01A4,0,0,241);
move(-5.15,-1.79,0.00); object(0x01A4,0,0,240);
move(-2.60,16.20,-0.70); object(0x01A4,0,10,240);
move(-4.88,-2.62,0.00); object(0x01A4,0,10,240);
move(-1.34,14.76,-2.40); object(0x01A4,0,10,247);
move(-5.58,-1.58,-0.10); object(0x01A4,0,10,247);
move(-5.65,19.13,-3.50); object(0x01A4,0,350,80);
move(5.76,0.48,0.00); object(0x01A4,0,350,80);
move(-56.61,151.86,-7.80); object(0x01A4,0,0,265);
pspawn = 0x08E81290;
setint(pspawn,252);
setfloat(pspawn + 4, -851.10, -1123, 17.15, 0);
pspawn += 0x30;
teleport(-860.13, -1128.63, 17.21);

#cheat sunahamakiti
moveto(539.85,-1280.60,12.78);  object(0x1CD5,275,0,15);
move(-0.10,0.03,0.00);  object(0x1CD5,270,0,15);
move(-9.96,2.63,0.00);  object(0x1CD5,270,0,15);
move(23.20,-6.12,0.00);  object(0x1CD5,270,0,15);
move(13.92,-3.67,0.00);  object(0x1CD5,270,0,15);
move(-4.90,-18.57,0.00);  object(0x1CD5,270,0,15);
move(-13.63,3.60,0.00);  object(0x1CD5,270,0,15);
move(-13.34,3.52,0.00);  object(0x1CD5,270,0,15);
move(-10.05,2.65,0.00);  object(0x1CD5,270,0,15);
move(0.48,7.00,-0.30);  object(0x1CD5,270,0,109);
move(4.07,4.41,0.00);  object(0x1CD5,270,0,109);
move(-3.47,-10.02,0.00);  object(0x1CD5,270,0,109);
move(3.26,-3.18,0.10);  object(0x1CD5,270,0,8);
move(9.68,-2.25,0.00);  object(0x1CD5,270,0,8);
move(-13.95,5.17,0.70);  object(0x1CD5,0,0,13);
move(2.06,8.87,0.00);  object(0x1CD5,0,0,13);
move(-4.88,-5.36,0.00);  object(0x1CD5,0,0,13);
move(10.11,-9.95,0.00);  object(0x1CD5,0,0,101);
move(-8.71,1.74,0.00);  object(0x1CD5,0,0,99);
move(18.86,-3.88,0.00);  object(0x1CD5,0,0,101);
move(10.31,-2.35,0.00);  object(0x1CD5,0,0,104);
move(7.14,-1.99,0.00);  object(0x1CD5,0,0,104);
move(5.69,15.66,0.00);  object(0x1CD5,0,0,15);
move(-1.78,-6.39,0.00);  object(0x1CD5,0,0,15);
move(-0.81,-3.07,0.00);  object(0x1CD5,0,0,15);
move(-3.19,13.50,0.00);  object(0x1CD5,0,0,283);
move(-10.25,2.62,0.00);  object(0x1CD5,0,0,284);
move(-10.29,2.80,0.00);  object(0x1CD5,0,0,284);
move(-8.12,1.97,0.00);  object(0x1CD5,0,0,284);
move(13.55,-15.33,0.00);  object(0x1CD5,0,0,193);
move(1.19,5.26,0.00);  object(0x1CD5,0,0,193);
move(8.78,-1.99,0.00);  object(0x1CD5,0,0,193);
move(-1.97,-8.73,0.00);  object(0x1CD5,0,0,193);
move(-18.73,4.24,0.00);  object(0x1CD5,0,0,193);
move(2.02,8.82,0.00);  object(0x1CD5,0,0,193);
move(-7.70,5.88,4.30);  object(0x1CD5,270,0,193);
move(0.00,0.00,0.00);  object(0x1CD5,270,0,193);
move(-4.79,-19.52,0.00);  object(0x1CD5,270,0,193);
move(8.59,-1.92,0.00);  object(0x1CD5,270,0,193);
move(10.54,-2.36,0.00);  object(0x1CD5,270,0,193);
move(8.20,-1.84,0.00);  object(0x1CD5,270,0,193);
move(9.86,-2.21,0.00);  object(0x1CD5,270,0,193);
move(5.92,23.65,0.00);  object(0x1CD5,270,0,14);
move(-9.80,2.45,0.00);  object(0x1CD5,270,0,14);
move(-8.83,2.21,0.00);  object(0x1CD5,270,0,14);
move(-9.89,2.48,0.00);  object(0x1CD5,270,0,14);
move(-6.19,-0.86,10.60);  object(0x1CD5,180,0,284);
move(8.73,-2.19,0.00);  object(0x1CD5,180,0,284);
move(9.80,-2.45,0.00);  object(0x1CD5,180,0,284);
move(10.28,-2.57,0.00);  object(0x1CD5,180,0,284);
move(4.32,-4.17,0.00);  object(0x1CD5,180,0,15);
move(-2.79,-10.74,0.00);  object(0x1CD5,180,0,15);
move(-4.40,-4.75,0.00);  object(0x1CD5,180,0,285);
move(-10.86,2.83,0.00);  object(0x1CD5,180,0,285);
move(-6.67,1.74,0.00);  object(0x1CD5,180,0,285);
move(-8.39,1.87,0.00);  object(0x1CD5,180,0,285);
move(-7.10,4.64,-0.30);  object(0x1CD5,180,0,193);
move(2.53,10.03,0.30);  object(0x1CD5,180,0,193);
move(-12.33,-3.49,-12.60);  object(0x1CD5,210,0,281);
move(-4.94,0.99,-2.40);  object(0x1CD5,210,0,281);
move(7.35,2.79,12.50);  object(0x1CD5,210,0,281);
move(-4.69,0.91,-3.60);  object(0x1CD5,180,0,281);
move(-1.83,1.88,0.10);  object(0x1CD5,180,0,13);
move(8.10,1.33,-1.60);  object(0x1CD5,165,0,281);
move(5.57,-5.54,7.80);  object(0x1CD5,180,0,193);
move(-0.42,-9.32,0.00);  object(0x1CD5,180,0,172);
move(4.18,-4.72,0.00);  object(0x1CD5,180,0,284);
move(9.05,-2.22,0.00);  object(0x1CD5,180,0,284);
move(9.07,-2.23,0.00);  object(0x1CD5,180,0,104);
move(8.67,-2.12,0.00);  object(0x1CD5,180,0,104);
move(5.59,1.52,0.00);  object(0x1CD5,180,0,14);
move(1.66,6.29,0.00);  object(0x1CD5,180,0,14);
move(2.20,8.92,0.00);  object(0x1CD5,180,0,14);
move(-36.12,10.84,0.00);  object(0x1CD5,180,0,102);
move(9.37,-2.04,0.00);  object(0x1CD5,180,0,102);
move(7.38,-1.50,0.00);  object(0x1CD5,180,0,102);
move(10.34,-2.27,0.00);  object(0x1CD5,180,0,104);
move(4.09,-1.03,0.00);  object(0x1CD5,180,0,104);
move(-35.77,5.70,-9.12);  object(0x1CD5,180,345,189);
move(25.74,-18.51,-0.90);  object(0x1CD5,180,0,281);
move(8.53,-2.06,0.00);  object(0x1CD5,180,0,281);
move(1.27,6.24,0.10);  object(0x1CD5,180,0,192);
move(-9.32,1.98,-0.10);  object(0x1CD5,180,0,192);
move(-10.96,-2.24,0.00);  object(0x1CD5,180,0,194);
move(2.15,7.26,0.00);  object(0x1CD5,180,0,194);
move(-11.16,-3.91,0.00);  object(0x1CD5,180,0,191);
move(2.13,6.93,-0.10);  object(0x1CD5,180,0,191);
move(26.27,-0.92,5.30);  object(0x1CD5,180,0,102);
move(-9.90,2.70,0.00);  object(0x1CD5,180,0,104);
move(-7.02,2.27,0.00);  object(0x1CD5,180,0,105);
move(-4.69,0.23,0.00);  object(0x1CD5,180,0,103);
move(26.31,-18.83,0.00);  object(0x1CD5,180,0,194);
move(1.58,4.22,0.00);  object(0x1CD5,180,0,194);
move(-11.59,-10.16,-3.10);  object(0x1CD5,180,0,283);
move(-9.81,2.23,0.00);  object(0x1CD5,180,0,283);
move(-9.33,2.09,0.00);  object(0x1CD5,180,0,283);
move(-3.46,0.82,0.10);  object(0x1CD5,180,0,283);
move(-2.23,12.12,7.80);  object(0x1CB2,180,90,7);
move(-1.30,-4.31,0.00);  object(0x1CB2,180,90,7);
move(5.23,-1.58,0.00);  object(0x1CB2,180,90,7);
move(0.85,4.03,0.00);  object(0x1CB2,180,90,7);
move(4.75,0.25,0.00);  object(0x1CB2,180,90,7);
move(-0.41,-5.13,0.00);  object(0x1CB2,180,90,6);
move(4.55,2.88,0.00);  object(0x1CB2,180,90,5);
move(0.05,-4.35,0.00);  object(0x1CB2,180,90,5);
move(4.26,4.05,-0.10);  object(0x1CB2,180,90,5);
move(1.18,-5.79,0.00);  object(0x1CB2,180,90,4);
move(4.55,4.28,-0.10);  object(0x1CB2,180,90,4);
move(0.93,-4.05,0.00);  object(0x1CB2,180,90,4);
move(4.23,4.01,-0.10);  object(0x1CB2,180,90,10);
move(0.06,-5.77,0.00);  object(0x1CB2,180,90,10);
move(1.50,4.14,0.00);  object(0x1CB2,180,90,10);
move(-6.72,-6.67,-6.58);  object(0x1CE1,180,0,190);
move(-0.04,0.04,-2.00);  object(0x1CE2,180,180,7);
move(-8.13,1.86,0.00);  object(0x1CE4,180,180,17);
move(-17.34,5.33,-0.50);  object(0x1CE0,180,180,59);
move(25.87,-8.32,3.40);  object(0x1CEE,180,180,336);
move(-11.39,5.37,-4.10);  object(0x1CF7,180,180,222);
move(19.17,4.64,0.80);  object(0x1CFA,180,180,286);
move(0.13,-3.41,-0.60);  object(0x1CFA,180,180,286);
move(-19.49,-2.11,-0.20);  object(0x1D00,180,180,11);
move(16.33,-3.38,0.70);  object(0x1D02,180,180,286);
move(-14.04,15.73,-0.90);  object(0x1D06,180,180,103);
move(-0.01,-0.27,1.00);  object(0x1D14,180,180,110);
move(1.17,0.61,-1.10);  object(0x1D15,180,180,194);
teleport(540.62,-1294.00,19.40);

#cheat uzi rgb
setchar(0x9569EAC, 0xff);
setchar(0x9569EAD, 0x00);
setchar(0x9569EAE, 0x00);
setchar(0x9569E28, 0x00);
setchar(0x9569E29, 0xff);
setchar(0x9569E2A, 0x00);
setchar(0x9569F30, 0x00);
setchar(0x9569F31, 0x00);
setchar(0x9569F32, 0xff);
#off
setchar(0x9569EAC, 0x6c);
setchar(0x9569EAD, 0x6c);
setchar(0x9569EAE, 0x6c);
setchar(0x9569E28, 0x6c);
setchar(0x9569E29, 0x6c);
setchar(0x9569E2A, 0x6c);
setchar(0x9569F30, 0x6c);
setchar(0x9569F31, 0x6c);
setchar(0x9569F32, 0x6c);

#cheat Pimped Domestobot at The Clymenus Suite
//Created By Vice Mod Shop
//Vice Mod Shop Created By emcp
//Addresses Found By Vette
//Basics
setint(0x8C73B30, 208);
setchar(0x8C73B30+0x24, 255,255,255, 255);
setchar(0x8C73B30+0x28, 0,0,255, 255);
//Wheels
setfloat(0x9364558, 1.4, 1.4);
setfloat(0x9630720+0x6c, 1.2);
setfloat(0x9630720+0xc4, 0.8);
setfloat(0x9630720+0x70, 0.48);
//Engine
setchar(0x9630720+0x5c, 'R', 'P', 1);
//Suspension
setfloat(0x9630720+0x7c, 0.6);
setfloat(0x9630720+0x80, -0.4);
setfloat(0x9630720+0x78, 0.3);
setfloat(0x9630720+0x74, 1.5);
setfloat(0x9630720+0x84, 0.6);
setfloat(0x9630720+0x88, 0.6);
//Handling
setfloat(0x9630720+0x68, 30);
setfloat(0x9630720+0xbc, 6440);
setfloat(0x9630720+0xa0, 0.1);
setfloat(0x9630720+0xa4, 0.1);
setfloat(0x9630720+0xa8, 0.1);
//Effects
//Teleport

#cheat Kensetugennba no Himitukiti
moveto(-832.18,418.92,14.96);  object(0x1CD5,350,0,178);
move(0.32,-9.59,1.30);  object(0x1CD5,355,0,178);
move(-10.89,-1.12,-5.70);  object(0x1CD5,270,0,1);
move(19.50,-0.49,0.00);  object(0x1CD5,270,0,1);
move(-1.14,-20.48,0.00);  object(0x1CD5,270,0,0);
move(-18.80,0.12,0.00);  object(0x1CD5,270,0,0);
move(19.78,13.99,5.60);  object(0x1CD5,175,0,3);
move(-0.59,-10.68,0.00);  object(0x1CD5,180,0,3);
move(-3.44,-6.13,0.10);  object(0x1CD5,180,0,89);
move(-11.32,0.15,0.00);  object(0x1CD5,180,0,90);
move(-4.55,3.09,0.00);  object(0x1CD5,180,0,1);
move(0.24,9.50,0.00);  object(0x1CD5,180,0,1);
move(0.20,8.00,0.00);  object(0x1CD5,180,0,1);
move(19.83,4.19,0.40);  object(0x1CD5,180,0,183);
move(-1.48,5.11,4.20);  object(0x1CD5,180,0,269);
move(-8.21,-17.84,-4.10);  object(0x1CA8,180,270,0);
move(2.80,0.02,0.00);  object(0x1CA8,180,270,0);
move(3.20,0.02,-0.30);  object(0x1CA8,180,285,0);
move(0.10,13.50,0.10);  object(0x1CA8,180,285,0);
move(-9.83,-14.06,0.40);  object(0x1CA8,180,270,0);
move(0.40,0.00,0.00);  object(0x1CA8,180,270,0);
move(-2.10,-0.00,0.00);  object(0x1CA8,180,270,0);
move(-3.30,-0.00,-0.50);  object(0x1CA8,180,255,0);
move(8.48,-9.40,0.24);  object(0x1CA8,180,255,271);
move(7.55,0.65,-6.30);  object(0x1CA8,270,180,355);
move(-15.27,-0.80,0.00);  object(0x1CA8,270,180,175);
move(8.32,11.06,6.41);  object(0x1CA8,260,90,80);
move(2.09,-0.20,0.00);  object(0x1CA8,260,90,80);
move(-1.06,-22.14,-5.30);  object(0x1CA8,85,130,356);
move(-8.27,6.60,5.00);  object(0x1CA8,85,90,83);
move(17.09,16.65,-0.11);  object(0x1CA8,65,90,248);
move(-19.37,10.47,-1.34);  object(0x1CA8,65,90,246);
move(-1.10,0.02,0.00);  object(0x1CA8,65,90,246);
move(4.43,-5.47,-2.20);  object(0x1CA8,95,245,268);
move(0.38,13.96,2.10);  object(0x1CA8,95,275,266);
move(-0.27,-0.11,0.23);  object(0x1CA8,95,275,263);
move(-2.41,-38.24,2.59);  object(0x1CD6,5,0,267);
move(-0.13,-3.20,0.00);  object(0x1CD6,5,0,267);
move(2.20,-1.79,-0.30);  object(0x1CD6,5,0,181);
move(-7.73,10.56,-1.39);  object(0x1CD5,0,0,272);
move(-7.81,0.02,-0.40);  object(0x1CD5,0,0,272);
move(-3.11,0.11,-0.50);  object(0x1CD5,90,0,272);
move(-5.21,0.28,5.60);  object(0x1CD6,90,0,272);
move(37.37,26.01,-9.65);  object(0x1CD6,90,270,174);
move(-0.26,-4.19,0.50);  object(0x1CD6,90,270,187);
move(-22.45,3.65,-0.06);  object(0x1CD4,0,175,184);
move(1.88,-0.25,-0.16);  object(0x1CD4,0,175,186);
move(-2.17,-20.79,9.29);  object(0x1CD5,0,180,0);
move(0.24,7.63,0.00);  object(0x1CD5,0,180,0);
move(0.19,4.63,0.00);  object(0x1CD5,0,180,0);
move(0.24,16.20,-0.30);  object(0x1CD5,350,180,0);
move(1.45,-6.91,-4.42);  object(0x1CD4,260,180,270);
move(-0.14,-1.69,0.00);  object(0x1CD4,260,180,270);
move(-0.14,-1.69,-0.20);  object(0x1CD4,260,170,270);
move(-2.97,2.89,1.20);  object(0x1CD4,185,80,265);
move(-0.55,-2.00,-0.30);  object(0x1CD4,185,80,290);
move(4.11,-26.49,7.36);  object(0x1CD5,190,90,103);
move(5.83,29.83,-6.10);  object(0x1CD6,190,90,189);
move(0.00,0.00,0.00);  object(0x1CD6,190,90,104);
move(-0.21,-3.59,0.20);  object(0x1CD6,190,90,104);
move(-0.23,-4.07,0.00);  object(0x1CD6,190,90,9);
move(0.97,-0.25,0.00);  object(0x1CD6,190,90,9);
move(-11.27,5.59,-2.61);  object(0x1CD6,260,10,96);
move(11.85,-35.38,-5.80);  object(0x1CD6,180,0,3);
move(-2.00,2.35,0.30);  object(0x1CD6,180,0,93);
move(-0.11,3.20,0.00);  object(0x1CD6,180,0,93);
move(-7.10,23.18,5.66);  object(0x1CD6,95,0,184);
move(0.02,4.50,1.90);  object(0x1CD6,80,0,184);
move(-0.11,-4.80,-0.90);  object(0x1CD6,100,0,184);
move(-0.13,1.21,0.29);  object(0x1CD6,75,0,1);
move(-4.18,7.30,0.54);  object(0x1CD6,355,270,94);
move(0.07,1.50,0.00);  object(0x1CD6,355,270,94);
move(-2.74,-0.28,-0.78);  object(0x1CD6,355,270,3);
move(22.90,11.82,-2.70);  object(0x1CD6,350,180,0);
teleport(-838.10,398.07,18.04);

#cheat RF LIFE House
moveto(346.59,-24.36,14.05);  object(0x1CA8,270,60,0);
move(9.36,2.32,4.00);  object(0x1CD7,270,0,179);
move(5.24,0.54,-0.10);  object(0x1CD5,0,0,180);
move(5.20,0.01,0.00);  object(0x1CD5,0,0,180);
move(5.20,0.01,0.00);  object(0x1CD5,0,0,180);
move(-15.52,-10.70,-0.10);  object(0x1CD7,90,0,180);
move(5.10,0.03,0.00);  object(0x1CD7,90,0,180);
move(5.20,0.03,0.00);  object(0x1CD7,90,0,180);
move(5.20,0.03,0.00);  object(0x1CD7,90,0,180);
move(-15.56,15.07,0.00);  object(0x1CD7,90,0,0);
move(5.15,-15.11,5.10);  object(0x1CD7,90,0,180);
move(5.10,-0.01,0.00);  object(0x1CD7,90,0,180);
move(5.20,-0.01,0.00);  object(0x1CD7,90,0,180);
move(-11.85,0.06,-3.50);  object(0x1CD4,0,0,0);
move(0.00,0.00,2.10);  object(0x1CD4,0,0,0);
move(13.60,0.07,-2.10);  object(0x1CD4,0,0,0);
move(0.00,0.00,2.10);  object(0x1CD4,0,0,0);
move(-10.50,-0.06,-1.90);  object(0x029F,0,0,0);
move(4.40,0.02,0.00);  object(0x029F,0,0,0);
move(4.40,0.02,0.00);  object(0x029F,0,0,0);
move(-0.70,0.02,2.50);  object(0x1CD4,0,270,0);
move(-2.90,-0.01,0.00);  object(0x1CD4,0,270,0);
move(-3.00,-0.02,0.00);  object(0x1CD4,0,270,0);
move(-2.90,-0.01,0.00);  object(0x1CD4,0,270,0);
move(-3.35,0.87,-2.70);  object(0x1CD4,0,0,90);
move(-0.01,2.10,-0.40);  object(0x1CE6,0,0,90);
move(0.01,2.10,0.40);  object(0x1CD4,0,0,90);
move(0.04,-2.60,5.80);  object(0x1CD7,0,0,90);
move(3.67,2.63,-7.20);  object(0x1C8D,0,0,270);
move(-3.70,-0.02,0.00);  object(0x1C8D,0,0,270);
move(5.14,0.03,0.00);  object(0x1C8D,0,0,270);
move(3.72,0.02,0.00);  object(0x1C8D,0,0,270);
move(1.49,0.01,0.00);  object(0x1C8D,0,0,270);
move(3.75,0.02,0.00);  object(0x1C8D,0,0,270);
move(-11.63,-0.05,7.50);  object(0x1CD7,0,0,0);
move(5.30,0.03,0.00);  object(0x1CD7,0,0,0);
move(5.10,0.03,0.00);  object(0x1CD7,0,0,0);
move(-11.65,10.90,-5.90);  object(0x1904,0,0,90);
move(2.56,0.03,0.00);  object(0x1904,0,0,90);
move(2.62,0.03,0.00);  object(0x1904,0,0,90);
move(2.55,0.03,0.00);  object(0x1904,0,0,90);
move(2.69,0.03,0.00);  object(0x1904,0,0,90);
move(2.55,0.01,0.00);  object(0x1904,0,0,270);
move(-12.72,-0.13,2.40);  object(0x1CD4,0,270,180);
move(2.20,0.01,0.00);  object(0x1CD4,0,270,180);
move(2.80,0.09,0.00);  object(0x1CD4,0,270,180);
move(2.30,-0.01,0.00);  object(0x1CD4,0,270,180);
move(2.90,0.05,0.00);  object(0x1CD4,0,270,180);
move(2.30,-0.01,0.00);  object(0x1CD4,0,270,180);
move(1.22,-8.88,-4.10);  object(0x1CD7,0,0,270);
move(-0.03,5.10,0.00);  object(0x1CD7,0,0,270);
move(-2.34,-12.47,-5.10);  object(0x1CD7,90,0,180);
move(-5.10,0.03,0.00);  object(0x1CD7,90,0,180);
move(-5.10,0.03,0.00);  object(0x1CD7,90,0,180);
move(-5.20,0.03,0.00);  object(0x1CD7,90,0,180);
move(15.26,5.06,-0.00);  object(0x1CD7,90,0,180);
move(-5.10,-0.04,0.00);  object(0x1CD7,90,0,180);
move(-5.20,-0.04,0.00);  object(0x1CD7,90,0,180);
move(-5.00,-0.04,0.00);  object(0x1CD7,90,0,180);
move(15.37,10.05,0.00);  object(0x1CD7,90,0,0);
move(0.28,-0.15,1.80);  object(0x029F,0,0,0);
move(0.70,0.00,2.40);  object(0x1CD4,0,270,0);
move(-2.10,-0.04,0.00);  object(0x1CD4,0,270,0);
move(-0.50,0.03,-2.30);  object(0x1CD4,0,0,0);
move(0.00,-0.02,-0.40);  object(0x1CD4,0,0,0);
move(-0.78,-2.46,3.70);  object(0x1CD7,0,0,90);
move(-2.27,-2.42,-3.40);  object(0x029F,0,0,180);
move(-4.40,0.01,0.00);  object(0x029F,0,0,180);
move(-4.40,0.01,0.00);  object(0x029F,0,0,180);
move(-3.50,0.01,-0.20);  object(0x1CD4,0,0,180);
move(1.90,-0.00,0.00);  object(0x1CD4,0,0,180);
move(0.00,0.00,2.00);  object(0x1CD4,0,0,180);
move(-1.90,0.00,0.00);  object(0x1CD4,0,0,180);
move(13.00,-0.02,0.60);  object(0x1CD4,0,90,180);
move(-2.90,0.00,0.00);  object(0x1CD4,0,90,180);
move(-2.90,0.00,0.00);  object(0x1CD4,0,90,180);
move(-3.00,0.00,0.00);  object(0x1CD4,0,90,180);
move(-4.23,-9.88,-2.70);  object(0x1CD4,0,0,0);
move(0.00,0.00,2.10);  object(0x1CD4,0,0,0);
move(18.80,0.05,0.00);  object(0x1CD4,0,0,0);
move(0.00,0.00,-2.10);  object(0x1CD4,0,0,0);
move(-2.95,-0.01,0.20);  object(0x029F,0,0,0);
move(-4.40,0.03,0.00);  object(0x029F,0,0,0);
move(-4.40,0.03,0.00);  object(0x029F,0,0,0);
move(-4.45,-0.07,0.00);  object(0x029F,0,0,359);
move(-0.77,-0.03,2.40);  object(0x1CD4,0,270,0);
move(2.77,0.09,0.00);  object(0x1CD4,0,270,359);
move(2.92,0.03,0.00);  object(0x1CD4,0,270,0);
move(2.86,-0.03,0.00);  object(0x1CD4,0,270,0);
move(2.90,-0.02,0.00);  object(0x1CD4,0,270,0);
move(2.90,-0.02,0.00);  object(0x1CD4,0,270,0);
move(2.10,-0.02,0.00);  object(0x1CD4,0,270,0);
move(-19.04,7.68,-2.40);  object(0x029F,0,0,270);
move(0.02,-4.40,0.00);  object(0x029F,0,0,270);
move(0.01,-2.40,-0.20);  object(0x1CD4,0,0,270);
move(0.00,0.00,2.10);  object(0x1CD4,0,0,270);
move(-0.03,7.50,0.50);  object(0x1CD4,0,90,270);
move(0.01,-2.90,0.00);  object(0x1CD4,0,90,270);
move(0.01,-2.70,0.00);  object(0x1CD4,0,90,270);
move(-13.39,2.60,-6.80);  object(0x1CD4,0,270,0);
move(-0.01,3.60,0.00);  object(0x1CD4,0,270,0);
move(36.33,-9.20,12.80);  object(0x1CD6,270,0,0);
move(-0.02,0.08,0.10);  object(0x1CD6,0,0,0);
move(0.00,0.00,-5.10);  object(0x1CD6,0,0,0);
move(0.03,5.01,0.00);  object(0x1CD6,0,0,0);
move(0.00,0.00,5.10);  object(0x1CD6,0,0,0);
move(1.63,-3.50,-7.60);  object(0x1CD4,90,0,0);
move(0.01,2.10,0.00);  object(0x1CD4,90,0,0);
move(-2.09,0.56,-0.80);  object(0x1CD4,55,0,90);
move(-1.42,-0.00,-1.00);  object(0x1CD4,55,0,90);
move(1.44,-0.93,1.00);  object(0x1CD4,0,55,0);
move(-2.30,-0.00,-1.60);  object(0x1CD4,0,55,0);
move(1.50,-2.21,4.10);  object(0x1CD4,55,0,270);
move(2.32,0.01,-1.60);  object(0x1CD4,55,0,270);
move(-2.75,0.85,1.80);  object(0x1CD4,0,55,180);
move(1.00,-0.00,-0.70);  object(0x1CD4,0,55,180);
move(3.34,0.70,6.50);  object(0x1CD6,0,0,270);
move(0.00,0.00,-5.10);  object(0x1CD6,0,0,270);
move(-5.33,-0.05,-5.20);  object(0x1CD6,270,0,89);
move(-0.77,11.89,5.20);  object(0x1CF5,0,0,0);
move(-3.42,0.34,0.00);  object(0x1CFA,0,0,270);
move(0.06,-1.93,-0.00);  object(0x1D01,0,0,323);
move(-0.29,-1.31,0.00);  object(0x1D06,0,0,270);
move(0.01,-1.50,0.00);  object(0x1D06,0,0,270);
move(0.02,-2.20,0.00);  object(0x1D4E,0,0,270);
move(-0.01,-1.82,0.00);  object(0x1D12,0,0,270);
move(-0.03,5.80,1.30);  object(0x1CEB,180,180,270);
move(0.00,-0.80,0.00);  object(0x1CEB,180,180,270);
move(-0.00,-0.76,0.00);  object(0x1CEA,180,180,270);
move(0.00,-0.70,0.00);  object(0x1CEA,180,180,270);
move(1.76,1.91,-1.30);  object(0x1D05,180,180,0);
move(1.97,0.01,0.00);  object(0x1CF9,0,0,90);
moveto(376.52,-32.03,7.30);  object(0x1CD5,270,0,180);
move(-7.91,12.14,0.00);  object(0x1CD5,270,0,270);
move(-12.56,-7.27,0.00);  object(0x1CD5,270,0,180);
move(2.58,-2.09,0.00);  object(0x1CD5,270,0,89);
move(14.97,5.57,10.70);  object(0x1D15,0,0,90);
move(-0.48,-0.01,0.00);  object(0x1CF7,180,180,90);
move(0.39,-1.20,0.60);  object(0x01CD,180,180,90);
move(-9.11,6.57,-0.60);  object(0x1CF8,180,180,0);
move(-0.01,-2.78,0.00);  object(0x1CF8,180,180,0);
move(1.00,-0.00,0.00);  object(0x1CF8,180,180,0);
move(0.10,2.87,0.00);  object(0x1CF8,180,180,4);
move(2.89,0.06,0.00);  object(0x1D4E,0,0,90);
move(0.01,-2.40,0.00);  object(0x1D4E,0,0,90);
move(0.01,-2.40,0.00);  object(0x1D4E,0,0,90);
move(0.01,-2.40,0.00);  object(0x1D4E,0,0,90);
move(-0.06,8.91,0.10);  object(0x1CFE,0,0,52);
move(-3.86,-9.82,0.00);  object(0x1CFE,0,0,304);
moveto(340.02,-34.41,11.10);  object(0x1CA8,0,0,179);
move(3.35,-15.07,0.00);  object(0x1CA8,0,0,156);
move(20.34,26.74,-1.20);  object(0x01A4,0,0,90);
move(-5.97,-7.93,-1.70);  object(0x1CE7,0,0,2);
move(13.94,-0.54,1.40);  object(0x1CB2,0,0,90);
move(-10.82,-0.03,0.00);  object(0x1CB2,0,0,90);
move(13.07,6.68,3.40);  object(0x1CD7,0,0,87);
move(-0.79,16.68,-2.60);  object(0x0201,0,0,330);
move(-3.11,-1.82,0.00);  object(0x0201,180,180,330);
move(1.25,3.92,-0.50);  object(0x0259,0,0,40);
moveto(374.08,-28.68,18.14);  object(0x1CD4,0,90,90);
move(-14.57,10.48,-0.10);  object(0x1D39,0,0,270);
move(3.39,0.04,0.00);  object(0x1D39,180,180,270);
move(-3.00,-3.46,0.00);  object(0x1D4E,0,0,0);
move(1.28,4.55,0.00);  object(0x1D05,0,0,180);
move(0.00,-1.10,0.00);  object(0x1D05,0,0,180);
move(0.00,-1.10,0.00);  object(0x1D05,0,0,180);
move(-0.01,2.20,0.40);  object(0x1CEC,0,0,180);
move(0.00,-1.10,0.00);  object(0x1CF2,0,0,180);
move(0.00,-1.10,0.00);  object(0x1CF2,0,0,180);
move(-1.59,-2.39,2.10);  object(0x1CEB,0,0,17);
move(4.29,3.61,-0.40);  object(0x1CE1,0,0,270);
move(0.02,-1.90,0.00);  object(0x1CE2,0,0,270);
move(0.02,-1.90,0.00);  object(0x1CE3,0,0,270);
move(6.64,-0.65,-9.60);  object(0x1CE4,0,0,0);
move(2.53,-0.68,-0.80);  object(0x01BA,0,0,60);
move(0.03,-0.06,1.10);  object(0x01BA,0,0,62);
move(-1.27,-0.40,-1.10);  object(0x01BA,0,0,60);
move(0.95,-0.85,0.10);  object(0x01BB,0,0,86);
move(-2.30,0.73,-0.20);  object(0x01BE,0,0,1);
move(-1.36,-0.18,0.00);  object(0x01BE,0,0,10);
move(2.46,-1.11,-0.10);  object(0x01BD,0,0,86);
moveto(363.74,-22.23,12.98);  object(0x1CA6,90,0,180);
move(5.83,3.71,0.00);  object(0x1D4E,0,0,270);
move(0.01,-2.40,0.00);  object(0x1D4E,0,0,270);
move(2.59,1.66,0.00);  object(0x1D04,0,0,1);
move(-0.08,-0.12,1.00);  object(0x1CEC,0,0,352);
move(-10.29,-4.89,-1.00);  object(0x1D39,0,0,270);
move(3.53,0.02,0.00);  object(0x1D39,180,180,270);
move(-0.69,0.52,5.00);  object(0x1D11,0,0,270);
move(-10.28,-7.18,-5.00);  object(0x1D12,0,0,270);
move(9.14,7.68,-0.00);  object(0x1D05,0,0,0);
move(-0.01,-1.02,0.00);  object(0x1D05,0,0,0);
move(-0.01,-1.00,0.00);  object(0x1D05,0,0,0);
move(7.32,7.23,0.00);  object(0x1CFE,0,0,352);
move(-7.29,-6.17,0.40);  object(0x1CF2,0,0,20);
move(0.03,-1.17,0.00);  object(0x1CF2,0,0,338);
move(-0.07,2.17,0.00);  object(0x1CF2,0,0,354);
move(7.41,4.20,-0.40);  object(0x1CF4,0,0,356);
move(-16.56,-11.96,2.30);  object(0x1CEB,180,180,248);
move(24.09,1.40,-1.80);  object(0x01BD,180,180,91);
move(-0.16,0.15,0.90);  object(0x01BD,180,180,87);
move(-0.11,-1.83,-1.00);  object(0x01BD,180,180,113);
move(-1.31,0.82,0.10);  object(0x01BE,0,0,131);
move(-35.16,1.28,-0.60);  object(0x01C9,0,0,261);
move(6.08,12.13,0.10);  object(0x01C9,0,0,329);
move(26.13,5.44,-0.40);  object(0x01C9,0,0,81);
moveto(378.43,-29.58,13.44);  object(0x01BE,0,0,86);
move(-0.18,0.12,0.90);  object(0x01BE,0,0,84);
move(-5.21,3.89,-4.70);  object(0x01BE,0,0,84);
move(-0.58,-4.15,-0.30);  object(0x01BE,0,0,131);
move(0.17,2.42,0.10);  object(0x01BE,0,0,101);
move(-17.26,7.33,8.60);  object(0x1D04,0,0,24);
move(2.23,-11.22,-0.10);  object(0x1D01,0,0,90);
move(-0.04,4.50,0.00);  object(0x1D01,0,0,90);
move(1.96,6.17,0.10);  object(0x1D01,0,0,283);
moveto(356.15,-17.36,19.27);  object(0x1D0E,0,90,0);
move(-2.40,0.00,0.00);  object(0x1D0E,0,90,0);
move(0.03,-0.02,0.00);  object(0x1D0E,0,90,90);
move(0.01,-2.40,0.00);  object(0x1D0E,0,90,90);
move(0.04,-9.70,0.00);  object(0x1D0E,0,90,90);
move(-0.01,2.40,0.00);  object(0x1D0E,0,90,90);
move(-0.08,-4.79,0.00);  object(0x1D0E,0,90,0);
move(2.40,0.01,0.00);  object(0x1D0E,0,90,0);
pspawn = 0x08E81290;
setint(pspawn,     230);
setfloat(pspawn + 4,     366.25,    -27.06,    10.20,    0);
pspawn += 0x30;
setint(pspawn,     256);
setfloat(pspawn + 4,     361.40,    -27.06,    10.20,    0);
pspawn += 0x30;
setint(pspawn,     231);
setfloat(pspawn + 4,     369.00,    -27.06,    10.20,    0);
pspawn += 0x30;
teleport(311.15,-46.52,10.81);

#cheat big robot
moveto(-872.40,-1196.01,14.20);  object(0x1CA6,0,0,290);
move(-3.93,1.35,0.10);  object(0x1CA6,90,0,289);
move(-0.19,0.14,0.10);  object(0x1CA6,0,0,109);
move(-1.80,-4.97,2.40);  object(0x1CA6,0,90,199);
move(1.12,3.21,0.00);  object(0x1CA6,0,90,199);
move(-1.09,-3.79,1.30);  object(0x1CA6,0,90,111);
move(3.40,-1.31,0.30);  object(0x1CA6,0,90,111);
move(0.27,11.60,-9.10);  object(0x1CA6,0,90,198);
move(16.22,-12.06,5.10);  object(0x1CA6,90,0,293);
move(0.00,0.10,0.00);  object(0x1CA6,0,0,294);
move(3.95,-1.73,0.00);  object(0x1CA6,0,0,294);
move(2.02,4.88,-5.20);  object(0x1CA6,0,270,203);
move(-4.31,-9.31,7.80);  object(0x1CA6,0,270,205);
move(1.52,3.74,0.10);  object(0x1CA6,0,270,200);
move(-1.91,-3.67,0.00);  object(0x1CA6,0,270,296);
move(-3.66,1.61,0.00);  object(0x1CA6,0,270,295);
move(5.14,2.08,9.70);  object(0x1CA6,0,275,201);
move(-17.23,6.37,0.00);  object(0x1CA6,0,265,198);
move(-1.12,-3.48,0.00);  object(0x1CA6,0,265,198);
move(16.59,-6.44,0.00);  object(0x1CA6,0,275,203);
move(-3.35,1.24,-0.20);  object(0x1CA6,0,270,294);
move(2.90,-1.27,0.00);  object(0x1CA6,0,270,294);
move(-15.72,10.25,0.10);  object(0x1CA6,0,270,109);
move(-2.67,0.93,0.00);  object(0x1CA6,0,270,109);
move(15.68,-7.77,4.50);  object(0x1CD7,140,0,112);
move(3.59,-1.48,0.00);  object(0x1CD7,140,0,112);
move(-3.68,4.04,3.70);  object(0x1CD7,0,35,203);
move(-1.97,-4.70,0.00);  object(0x1CD7,0,35,203);
move(-9.01,8.16,-3.30);  object(0x1CD7,0,230,200);
move(-1.30,-3.58,0.00);  object(0x1CD7,0,230,200);
move(-3.88,3.31,0.00);  object(0x1CD7,315,180,112);
move(3.15,-1.25,0.00);  object(0x1CD7,315,180,112);
move(6.69,-4.72,3.30);  object(0x1CD7,270,180,24);
move(-1.83,0.81,0.00);  object(0x1CD7,270,180,24);
move(-5.25,3.86,3.30);  object(0x1CD7,210,180,291);
move(13.27,-4.55,0.00);  object(0x1CD7,210,180,114);
move(-0.41,3.03,1.20);  object(0x1CD7,180,180,205);
move(-4.46,2.04,0.00);  object(0x1CD7,180,180,205);
move(-4.46,2.04,0.00);  object(0x1CD7,180,180,205);
move(-1.81,-5.28,0.60);  object(0x1CD7,180,180,24);
move(4.76,-2.09,0.00);  object(0x1CD7,180,180,24);
move(4.21,-1.85,0.00);  object(0x1CD7,180,180,24);
move(1.66,5.25,4.00);  object(0x1CD7,180,180,208);
move(-4.65,2.00,0.00);  object(0x1CD7,180,180,204);
move(-4.16,1.78,0.20);  object(0x1CD7,180,180,204);
move(-4.05,-1.20,-4.30);  object(0x1CD7,180,180,108);
move(3.32,1.23,-0.50);  object(0x1CD7,180,180,197);
move(-1.24,-5.04,5.10);  object(0x1CD7,180,180,25);
move(4.53,-2.40,0.10);  object(0x1CD7,180,180,25);
move(4.75,-1.50,0.00);  object(0x1CD7,180,180,18);
move(2.23,2.15,-1.80);  object(0x1CD7,180,180,290);
move(-12.75,5.04,1.90);  object(0x1CD7,180,180,291);
move(12.60,-5.04,0.00);  object(0x1CD7,180,180,109);
move(-8.53,3.75,-0.90);  object(0x1CD6,180,180,200);
move(0.11,0.21,-0.30);  object(0x1CD7,180,180,200);
move(-2.35,-1.69,5.90);  object(0x1D1B,180,90,202);
move(3.33,-2.04,-0.20);  object(0x1D1B,180,90,202);
move(-2.94,1.14,-0.40);  object(0x1D1B,180,90,202);
move(5.40,-2.05,0.40);  object(0x1D1B,180,90,210);
move(2.77,-1.50,0.40);  object(0x1D1B,180,90,209);
move(1.20,5.37,-0.50);  object(0x1D1B,180,90,204);
move(-4.00,1.56,0.00);  object(0x1D1B,180,90,204);
move(-3.77,1.73,0.00);  object(0x1D1B,180,90,204);
move(-0.92,0.61,0.10);  object(0x1D1B,180,90,204);
move(-2.71,-1.40,0.20);  object(0x1D1B,180,90,117);
move(-0.78,-1.04,-0.40);  object(0x1D1B,180,90,117);
move(11.77,-6.45,0.20);  object(0x1D1B,180,90,27);
move(1.36,1.95,0.40);  object(0x1D1B,180,90,289);
move(-0.56,0.17,4.70);  object(0x1CD7,40,0,290);
move(2.86,-1.16,-3.60);  object(0x1CD7,40,0,289);
move(2.47,-1.43,-3.50);  object(0x1CD7,5,0,288);
move(0.11,-0.11,-5.00);  object(0x1CD7,0,0,287);
move(-4.42,-0.23,13.70);  object(0x1CD7,0,320,20);
move(2.95,-1.29,-3.80);  object(0x1CD7,0,320,20);
move(3.03,-1.36,-4.60);  object(0x1CD7,0,355,20);
move(0.43,-0.25,-5.30);  object(0x1CD7,0,0,20);
move(0.00,0.00,1.00);  object(0x1CD7,0,0,20);
move(-0.95,0.56,6.00);  object(0x1CD7,0,340,20);
move(-3.95,6.06,6.50);  object(0x1CD7,0,40,189);
move(2.92,-0.06,-4.00);  object(0x1CD7,0,40,197);
move(-1.88,0.94,3.80);  object(0x1CD7,0,40,197);
move(4.89,-2.51,-8.70);  object(0x1CD7,0,5,197);
move(0.30,-0.29,-4.90);  object(0x1CD7,0,0,197);
move(-1.33,0.68,6.80);  object(0x1CD7,0,30,197);
move(-3.74,-0.73,8.60);  object(0x1CD7,40,0,288);
move(2.92,-1.53,-3.90);  object(0x1CD7,40,0,288);
move(2.48,-1.00,-3.70);  object(0x1CD7,25,0,288);
move(1.63,-0.86,-4.60);  object(0x1CD7,0,0,288);
move(0.00,0.00,-3.30);  object(0x1CD7,0,0,288);
move(-0.53,-1.30,-5.50);  object(0x1C9F,100,0,288);
move(0.47,0.89,0.00);  object(0x1C9F,100,0,288);
move(-0.84,-1.59,0.00);  object(0x1C9F,100,0,288);
move(1.40,2.66,0.00);  object(0x1C9F,100,0,288);
move(0.60,1.15,0.00);  object(0x1C9F,100,0,288);
move(-0.72,0.56,0.00);  object(0x1C9F,100,0,212);
move(-0.96,1.00,0.00);  object(0x1C9F,100,0,217);
move(-0.75,0.81,0.00);  object(0x1C9F,100,0,217);
move(-1.26,-0.91,0.00);  object(0x1C9F,100,0,207);
move(-0.58,0.58,0.00);  object(0x1C9F,100,0,194);
move(-0.38,0.13,0.30);  object(0x1C9F,100,0,194);
move(2.01,-0.90,0.00);  object(0x1C9F,100,0,194);
move(-1.27,-4.03,0.00);  object(0x1C9F,100,0,336);
move(-1.07,-0.26,0.00);  object(0x1C9F,100,0,336);
move(1.83,0.66,0.00);  object(0x1C9F,100,0,359);
move(0.46,-1.12,0.00);  object(0x1C9F,100,0,6);
move(-2.46,1.74,0.00);  object(0x1C9F,100,0,46);
move(-0.46,0.61,0.00);  object(0x1C9F,100,0,37);
move(0.09,1.57,0.00);  object(0x1C9F,100,0,29);
move(3.58,-2.98,0.00);  object(0x1C9F,100,0,69);
move(-0.47,1.34,0.00);  object(0x1C9F,100,0,53);
move(-1.42,-0.07,0.00);  object(0x1C9F,100,0,44);
move(-1.37,0.91,0.00);  object(0x1C9F,100,0,26);
move(0.12,0.62,-3.70);  object(0x1C9F,100,0,353);
move(2.04,1.23,0.20);  object(0x1C9F,100,0,163);
move(1.49,0.17,0.40);  object(0x1C9F,100,0,163);
move(1.35,-1.63,0.00);  object(0x1C9F,100,0,172);
move(-4.59,2.38,0.00);  object(0x1C9F,100,0,215);
move(-22.39,6.05,17.00);  object(0x1CD7,220,0,107);
move(-3.25,1.68,-4.10);  object(0x1CD7,220,0,107);
move(-1.55,0.80,-4.50);  object(0x1CD7,200,0,107);
move(-0.14,-0.27,-5.10);  object(0x1CD7,180,0,107);
move(-3.02,-1.92,5.40);  object(0x1CD7,0,0,9);
move(1.64,4.88,0.00);  object(0x1CD7,0,0,9);
move(1.46,-0.05,4.90);  object(0x1CD7,0,20,9);
move(3.51,-1.18,4.70);  object(0x1CD7,0,40,9);
move(3.41,-1.01,4.00);  object(0x1CD7,0,40,23);
move(-2.98,-7.15,2.80);  object(0x1CD7,0,40,24);
move(-2.55,1.90,-4.60);  object(0x1CD7,0,40,24);
move(4.20,-0.19,1.50);  object(0x1CD7,0,40,26);
move(-1.98,3.56,1.40);  object(0x1CD7,40,0,109);
move(-1.26,0.12,-4.20);  object(0x1CD7,40,0,102);
move(-5.26,2.11,-4.80);  object(0x1CD7,20,0,102);
move(-1.52,0.50,-5.50);  object(0x1CD7,0,0,102);
move(3.21,0.16,-3.80);  object(0x1CCE,0,0,110);
move(-3.37,-2.06,-26.60);  object(0x1CAA,0,0,171);
move(10.60,-1.77,16.90);  object(0x1CA7,0,0,138);
move(-7.06,1.82,8.00);  object(0x1C9F,90,0,231);
move(-0.62,2.60,0.00);  object(0x1C9F,90,0,262);
move(-0.04,-1.00,0.00);  object(0x1C9F,90,0,262);
move(0.90,-0.03,-0.10);  object(0x1C9F,90,0,262);
move(-2.93,0.11,0.00);  object(0x1C9F,90,0,262);
move(0.12,0.96,0.00);  object(0x1C9F,90,0,269);
move(-0.34,-2.18,0.00);  object(0x1C9F,90,0,269);
move(1.19,-0.18,0.00);  object(0x1C9F,90,0,269);
move(1.81,-0.28,0.00);  object(0x1C9F,90,0,269);
move(-1.14,0.04,0.00);  object(0x1C9F,90,0,269);
move(2.68,-0.15,0.00);  object(0x1C9F,90,0,261);
move(4.14,-4.94,-3.20);  object(0x1C9F,90,0,171);
move(-5.33,5.45,-0.30);  object(0x1C9F,90,0,59);
move(-1.12,1.76,-0.30);  object(0x1C9F,90,0,30);
move(-0.83,0.40,0.00);  object(0x1C9F,90,0,20);
move(-0.68,0.27,0.00);  object(0x1C9F,90,0,12);
move(-0.70,0.23,0.00);  object(0x1C9F,90,0,3);
move(0.21,0.88,3.60);  object(0x1C9F,90,0,3);
move(0.79,-2.97,0.00);  object(0x1C9F,90,0,20);
move(27.75,-10.35,21.20);  object(0x1CD6,90,0,108);
move(-4.63,1.88,0.00);  object(0x1CD6,90,0,109);
move(-12.12,4.87,0.00);  object(0x1CD6,90,0,109);
move(2.83,-1.71,0.00);  object(0x1CD6,90,0,112);
move(8.38,-0.25,-0.10);  object(0x1CD6,0,0,201);
move(-4.28,2.59,0.20);  object(0x1CD6,0,0,201);
move(-4.57,1.71,0.00);  object(0x1CD6,0,0,201);
move(-1.97,-6.35,0.00);  object(0x1CD6,0,0,25);
move(9.13,-3.19,0.00);  object(0x1CD6,0,0,17);
move(-5.03,2.12,0.00);  object(0x1CD6,0,0,26);
move(0.00,0.00,3.40);  object(0x1CD6,0,0,26);
move(-1.78,4.11,0.00);  object(0x1CD6,0,0,111);
move(4.98,-2.76,0.00);  object(0x1CD6,0,0,111);
move(0.51,-0.31,4.90);  object(0x1CD6,10,0,111);
move(-6.27,3.77,0.00);  object(0x1CD6,350,0,111);
move(2.05,-4.96,0.00);  object(0x1CD6,5,0,203);
move(-1.79,1.99,0.00);  object(0x1CD6,5,0,234);
move(4.08,-2.81,0.00);  object(0x1CD6,5,0,175);
move(-0.10,3.74,3.90);  object(0x1CD6,325,0,199);
move(-1.18,0.91,0.00);  object(0x1CD6,325,0,216);
move(4.45,-2.88,-4.20);  object(0x1CD6,20,0,115);
move(-1.59,1.10,3.60);  object(0x1CD6,350,0,115);
move(-4.48,2.61,0.00);  object(0x1CD6,25,0,114);
move(0.02,-0.01,0.00);  object(0x1CD6,270,0,114);
move(2.95,1.15,-4.70);  object(0x1CD6,180,0,200);
move(1.04,-0.59,0.00);  object(0x1CD6,180,0,200);
move(-0.70,0.40,-6.80);  object(0x1CD6,180,0,200);
move(0.61,-0.35,4.10);  object(0x1CD6,180,0,200);
move(-1.98,0.36,0.80);  object(0x1CD6,180,0,200);
move(4.35,-4.18,1.80);  object(0x1CD6,200,0,293);
move(-2.27,1.76,1.10);  object(0x1C9F,180,0,204);
move(-3.19,0.98,0.00);  object(0x1C9F,180,0,204);
move(0.25,-0.17,0.00);  object(0x1C9F,180,0,204);
move(-0.17,0.11,0.30);  object(0x1C9F,180,0,204);
move(-0.05,-0.07,-0.50);  object(0x1C9F,180,0,204);
move(3.41,-0.83,0.20);  object(0x1C9F,180,0,204);
move(-0.17,0.11,0.20);  object(0x1C9F,180,0,204);
move(0.00,0.00,-0.50);  object(0x1C9F,180,0,204);
move(-0.08,0.06,0.10);  object(0x1C9F,180,0,204);
teleport(-884.05,-1120.83,14.01)

#cheat Pimped Cometv1 at 101 Bayshore Avenue
//Created By Vice Mod Shop
//Vice Mod Shop Created By emcp
//Addresses Found By Vette
//Basics
setint(0x08C739B0, 266);
setchar(0x08C739B0+0x24, 71,18,117, 255);
setchar(0x08C739B0+0x28, 255,150,150, 255);
//Wheels
setfloat(0x936DD98, 0.98, 0.98);
setfloat(0x96340a0+0x6c, 1.2);
setfloat(0x96340a0+0xc4, 0.9);
setfloat(0x96340a0+0x70, 0.6);
//Engine
setchar(0x96340a0+0x5c, 'R', 'P', 4);
//Suspension
setfloat(0x96340a0+0x7c, 0.6);
setfloat(0x96340a0+0x80, -0.69);
setfloat(0x96340a0+0x78, 0.25);
setfloat(0x96340a0+0x74, 1.25);
setfloat(0x96340a0+0x84, 0.76);
setfloat(0x96340a0+0x88, 0.25);
//Handling
setfloat(0x96340a0+0x68, 40);
setfloat(0x96340a0+0xbc, 3200);
setfloat(0x96340a0+0xa0, 0);
setfloat(0x96340a0+0xa4, -0.1);
setfloat(0x96340a0+0xa8, 0);
//Effects
//Exhaust
setchar(0x09569B94,  71, 18, 117);
setchar(0x09569B90,  0x4);
//Teleport
teleport( -806.04, -1185.04, 11.0);
off()

#cheat BIL
moveto(-938.71,1338.42,77.55);  object(0x1CB0,0,0,228);
move(12.72,-14.84,1.80);  object(0x1CEB,0,0,296);
move(12.33,-9.38,-1.50);  object(0x1CEB,0,0,306);
move(-4.31,9.28,-0.30);  object(0x1CF5,0,0,2);
move(1.30,-0.04,0.00);  object(0x1CF5,0,0,2);
move(1.20,-0.04,0.00);  object(0x1CF5,0,0,2);
move(1.10,-0.03,0.00);  object(0x1CF5,0,0,2);
move(-4.70,0.14,0.00);  object(0x1CF5,0,0,2);
move(-2.30,0.07,0.00);  object(0x1CF5,0,0,2);
move(-17.84,2.36,-0.20);  object(0x1CFD,0,0,272);
move(4.20,-0.13,0.00);  object(0x1CFD,0,0,272);
move(0.12,4.00,0.00);  object(0x1CFD,0,0,272);
move(-3.93,0.12,0.00);  object(0x1CFD,0,0,272);
move(-0.29,-13.31,0.00);  object(0x1D00,0,0,269);
move(0.48,2.15,0.10);  object(0x1D00,0,0,274);
move(-14.55,22.64,0.00);  object(0x1D33,0,0,88);
move(-4.64,-3.92,-0.10);  object(0x1D33,0,0,273);
move(48.84,-17.99,-0.50);  object(0x1CA4,80,0,268);
move(-0.11,3.40,0.60);  object(0x1CA4,80,0,268);
move(-0.13,3.90,1.10);  object(0x1CA4,80,0,268);
move(-0.16,4.80,0.70);  object(0x1CA4,80,0,268);
move(-0.15,4.60,1.40);  object(0x1CA4,80,0,268);
move(-0.16,4.90,0.90);  object(0x1CA4,80,0,268);
move(-0.17,5.20,0.70);  object(0x1CA4,80,0,268);
move(-0.17,5.40,0.60);  object(0x1CA4,80,0,268);
move(52.52,-30.65,-7.90);  object(0x1CAA,80,0,52);
move(-41.16,-0.88,3.10);  object(0x1CB4,80,0,261);
move(-19.75,29.08,-0.60);  object(0x1CCD,80,0,95);
move(4.49,8.49,0.50);  object(0x1CD3,80,0,47);
move(-3.37,-11.86,0.00);  object(0x1CE3,0,0,181);
move(-2.20,0.04,0.00);  object(0x1CE4,0,0,181);
move(-2.20,0.04,0.00);  object(0x1CE3,0,0,181);
move(6.90,-0.13,0.00);  object(0x1CE2,0,0,181);
pspawn = 0x08E81290;
setint(pspawn, 229);
setfloat(pspawn + 4, -934.48, 1345.00, 78.45);
pspawn += 0x30;
teleport( -913.07, 1353.93, 85.61);

#cheat Unknown Construction
moveto(-740.28,-1142.97,6.68);  object(0x1CB2,0,270,159);
move(2.69,0.77,-1.50);  object(0x1CB2,0,180,159);
move(-7.43,-0.45,0.00);  object(0x1CB2,0,180,71);
move(2.04,-5.33,0.00);  object(0x1CB2,0,180,71);
move(2.92,10.62,4.30);  object(0x1CB2,0,90,71);
move(4.21,-12.30,0.00);  object(0x1CB2,0,90,71);
move(1.10,8.07,0.00);  object(0x1CB2,0,90,162);
move(2.43,2.30,1.80);  object(0x1CB2,0,0,341);
move(1.65,-4.27,0.00);  object(0x1CB2,0,0,163);
move(-10.39,7.83,0.00);  object(0x1CB2,0,0,249);
move(6.16,-16.73,0.00);  object(0x1CB2,0,0,251);
move(-10.24,8.19,0.00);  object(0x1CB2,0,0,160);
move(5.64,5.53,2.80);  object(0x1CB2,0,275,71);
move(2.33,-3.55,0.00);  object(0x1CB2,0,275,71);
move(-0.83,-2.34,0.00);  object(0x1CB2,0,275,71);
move(2.04,-4.68,0.00);  object(0x1CB2,0,275,70);
move(-6.01,-7.78,-2.90);  object(0x1C93,0,185,69);
move(-3.40,-0.43,-0.10);  object(0x1C93,0,190,97);
move(0.09,7.09,0.00);  object(0x1C93,0,180,66);
move(0.39,-0.63,2.20);  object(0x1C93,0,180,340);
move(1.05,-3.82,0.00);  object(0x1C93,0,180,340);
move(1.58,-0.20,-2.60);  object(0x01C2,0,180,76);
move(0.00,0.00,1.10);  object(0x01C2,0,180,76);
move(-0.07,15.99,-2.20);  object(0x1D06,0,0,160);
move(-1.31,-0.51,0.00);  object(0x1D06,0,0,160);
move(0.23,-0.78,0.10);  object(0x1CF7,0,0,168);
move(0.62,1.03,0.90);  object(0x1CEC,0,0,168);
move(0.86,0.27,0.00);  object(0x1CFF,0,0,8);
move(-2.77,-0.86,-0.90);  object(0x1D01,0,0,8);
move(4.20,1.31,-0.20);  object(0x1D02,0,0,8);
move(1.06,0.96,0.00);  object(0x1D02,0,0,8);
move(-1.16,0.35,0.00);  object(0x1D02,0,0,8);
move(-2.76,-2.22,1.10);  object(0x014C,265,0,118);
move(-0.31,-0.27,0.00);  object(0x015B,265,0,152);
move(1.12,-4.76,-0.90);  object(0x1CF8,0,0,332);
move(-1.29,2.38,0.00);  object(0x1CF8,0,0,332);
move(2.43,-5.09,0.00);  object(0x1CF8,0,0,332);
move(9.25,0.99,-0.20);  object(0x0266,0,0,81);
move(-0.40,1.55,0.00);  object(0x0266,0,0,81);
move(0.84,-3.29,0.00);  object(0x0266,0,0,81);
move(0.42,-1.65,0.00);  object(0x0266,0,0,81);
move(-1.66,6.49,0.00);  object(0x0266,0,0,81);
move(-0.42,1.65,0.00);  object(0x0266,0,0,81);
move(-0.42,1.65,0.00);  object(0x0266,0,0,81);
move(-0.40,1.55,0.00);  object(0x0266,0,0,81);
move(-0.37,1.45,0.00);  object(0x0266,0,0,81);
move(-10.94,-10.83,0.50);  object(0x1CB3,0,0,72);
move(-0.27,0.65,0.00);  object(0x1CB3,0,0,72);
move(-0.35,0.83,0.00);  object(0x1CB3,0,0,72);
teleport(-751.45,-1149.91,11.07);

#cheat Futa`s House2
moveto(-283.33,-1740.50,1.84);  object(0x1CD5,0,0,90);
move(12.85,-0.07,5.10);  object(0x1CB2,0,270,90);
move(-0.01,6.70,0.00);  object(0x1CB2,0,270,90);
move(0.03,-13.40,0.00);  object(0x1CB2,0,270,90);
move(0.01,-6.70,0.00);  object(0x1CB2,0,270,90);
move(-0.06,26.89,0.00);  object(0x1CB2,0,270,90);
move(14.57,0.03,0.00);  object(0x1CB2,0,270,90);
move(0.01,-6.70,0.00);  object(0x1CB2,0,270,90);
move(0.01,-6.70,0.00);  object(0x1CB2,0,270,90);
move(0.01,-6.70,0.00);  object(0x1CB2,0,270,90);
move(0.01,-6.70,0.00);  object(0x1CB2,0,270,90);
move(-14.59,29.91,-3.40);  object(0x1CB2,0,0,90);
move(14.54,0.01,0.00);  object(0x1CB2,0,0,90);
move(0.02,-33.09,0.00);  object(0x1CB2,0,0,90);
move(-14.58,-0.01,0.00);  object(0x1CB2,0,0,90);
move(21.66,26.06,0.00);  object(0x1CB2,0,0,0);
move(0.01,-18.95,0.00);  object(0x1CB2,0,0,0);
move(-0.06,11.09,0.00);  object(0x1CB2,0,0,0);
move(-28.77,7.78,0.00);  object(0x1CB2,0,0,0);
move(0.10,-18.90,0.00);  object(0x1CB2,0,0,0);
move(-9.17,7.32,4.10);  object(0x01A4,0,0,0);
move(0.01,4.30,0.00);  object(0x01A4,0,0,0);
move(8.26,-4.33,-0.20);  object(0x01B8,0,0,90);
move(-0.01,4.30,0.00);  object(0x01B8,0,0,90);
move(-9.85,0.07,0.00);  object(0x01B8,0,0,90);
move(0.01,-4.40,0.00);  object(0x01B8,0,0,90);
move(33.45,4.81,3.40);  object(0x1CD6,0,0,180);
move(-4.70,-0.07,-1.70);  object(0x029F,0,0,180);
move(-4.40,0.03,0.00);  object(0x029F,0,0,180);
move(4.10,0.07,-1.60);  object(0x1CD6,0,0,180);
move(-3.90,0.03,0.00);  object(0x1CD6,0,0,180);
move(-4.90,0.04,3.30);  object(0x1CD6,0,0,180);
move(13.77,-0.26,0.00);  object(0x1CD6,90,0,180);
move(-13.70,-0.02,0.00);  object(0x1CD6,90,0,180);
move(8.90,0.01,0.00);  object(0x1CD6,90,0,180);
move(-4.70,-0.01,0.00);  object(0x1CD6,90,0,180);
move(-4.21,5.12,0.00);  object(0x1CD6,90,0,180);
move(4.30,0.01,0.00);  object(0x1CD6,90,0,180);
move(9.40,0.01,0.00);  object(0x1CD6,90,0,180);
move(-4.80,-0.01,0.00);  object(0x1CD6,90,0,180);
move(4.79,5.22,0.00);  object(0x1CD6,0,0,180);
move(-13.70,-0.02,0.00);  object(0x1CD6,0,0,180);
move(9.04,-0.10,-1.70);  object(0x029F,0,0,180);
move(-4.40,-0.04,0.00);  object(0x029F,0,0,180);
move(0.10,0.12,-1.60);  object(0x1CD6,0,0,180);
move(4.40,0.04,0.00);  object(0x1CD6,0,0,180);
move(-11.83,-2.69,-0.70);  object(0x1CD6,270,0,90);
move(0.00,-4.80,0.00);  object(0x1CD6,270,0,90);
move(4.80,0.00,0.00);  object(0x1CD6,270,0,90);
move(-0.00,4.90,0.00);  object(0x1CD6,270,0,90);
move(9.06,0.00,0.00);  object(0x1CD6,270,0,90);
move(0.00,-5.00,0.00);  object(0x1CD6,270,0,90);
move(-4.17,-0.00,0.00);  object(0x1CD6,270,0,90);
move(-0.00,4.90,0.00);  object(0x1CD6,270,0,90);
move(9.29,0.05,0.00);  object(0x1CD6,245,0,90);
move(9.82,0.06,2.20);  object(0x1CD6,270,0,270);
move(-0.01,-5.10,0.00);  object(0x1CD6,270,0,270);
move(-5.11,-0.03,0.00);  object(0x1CD6,250,0,270);
move(-4.80,0.06,1.80);  object(0x1CD6,0,0,90);
move(-18.66,-2.52,-2.50);  object(0x1CCE,0,0,180);
move(-0.04,2.65,-0.30);  object(0x1CE6,0,0,90);
move(0.06,1.10,0.30);  object(0x1CCE,0,0,180);
move(-0.09,-1.12,5.90);  object(0x1CD6,0,0,90);
move(-0.02,4.90,-3.40);  object(0x1CD6,0,0,90);
move(21.43,2.71,0.00);  object(0x1CD6,0,0,180);
move(4.60,0.01,0.00);  object(0x1CD6,0,0,180);
move(-0.00,0.00,5.10);  object(0x1CD6,0,0,180);
move(-5.00,-0.01,0.00);  object(0x1CD6,0,0,180);
move(7.53,-2.60,-5.10);  object(0x1CD6,0,0,270);
move(0.02,-5.10,0.00);  object(0x1CD6,0,0,270);
move(-0.02,5.10,5.10);  object(0x1CD6,0,0,270);
move(0.02,-5.10,0.00);  object(0x1CD6,0,0,270);
move(-7.13,-2.65,-5.10);  object(0x1CD6,0,0,0);
move(4.50,0.02,0.00);  object(0x1CD6,0,0,0);
move(0.00,0.00,5.10);  object(0x1CD6,0,0,0);
move(-4.60,-0.02,0.00);  object(0x1CD6,0,0,0);
move(-7.11,-14.10,-9.20);  object(0x1CD5,0,0,90);
move(11.61,19.58,0.20);  object(0x1CB2,0,90,0);
move(6.70,0.04,0.00);  object(0x1CB2,0,90,0);
move(-13.72,-5.55,6.40);  object(0x1CD6,0,90,0);
move(-5.00,-0.01,0.00);  object(0x1CD6,0,90,0);
move(-5.00,-0.01,0.00);  object(0x1CD6,0,90,0);
move(-3.70,-0.01,0.00);  object(0x1CD6,0,90,0);
move(-5.13,5.14,0.00);  object(0x1CD6,0,90,90);
move(18.40,0.11,0.00);  object(0x1CD6,0,90,90);
move(-18.32,-2.92,0.90);  object(0x029F,0,0,270);
move(-0.03,4.40,0.00);  object(0x029F,0,0,270);
move(2.53,3.45,1.70);  object(0x1CD7,0,0,180);
move(5.20,-0.03,0.00);  object(0x1CD7,0,0,180);
move(4.80,-0.02,0.00);  object(0x1CD7,0,0,180);
move(3.30,-0.02,0.00);  object(0x1CD7,0,0,180);
move(-15.82,-7.46,-6.56);  object(0x1CD7,90,0,90);
move(-0.02,-0.09,6.40);  object(0x1CD7,90,0,270);
move(5.11,0.06,0.00);  object(0x1CD7,90,0,270);
move(5.11,0.05,0.00);  object(0x1CD7,90,0,270);
move(5.05,0.03,0.00);  object(0x1CD7,90,0,269);
move(5.12,0.02,0.00);  object(0x1CD7,90,0,269);
move(3.01,0.07,0.00);  object(0x1CD7,90,0,269);
move(-23.41,4.93,0.00);  object(0x1CD7,90,0,270);
move(5.14,0.02,0.00);  object(0x1CD7,90,0,270);
move(5.04,-0.19,0.00);  object(0x1CD7,90,0,268);
move(5.13,0.15,0.00);  object(0x1CD7,90,0,268);
move(5.07,0.15,0.00);  object(0x1CD7,90,0,268);
move(2.93,-0.05,0.00);  object(0x1CD7,90,0,270);
move(-22.72,1.34,-8.90);  object(0x1D06,0,0,270);
move(0.01,-1.50,0.00);  object(0x1D06,0,0,270);
move(0.01,-1.50,0.00);  object(0x1D06,0,0,270);
move(1.11,3.35,0.00);  object(0x1D06,0,0,0);
move(1.50,0.00,0.00);  object(0x1D06,0,0,0);
move(1.38,-0.13,0.10);  object(0x1D01,0,0,24);
move(-3.89,-4.74,0.00);  object(0x1D01,0,0,223);
move(0.07,-3.50,0.00);  object(0x1D01,0,0,222);
move(0.59,4.96,0.00);  object(0x1CF4,0,0,225);
move(1.93,2.63,0.00);  object(0x1CF4,0,0,2);
move(-1.64,-0.26,0.00);  object(0x1CF4,0,0,321);
move(-0.02,-1.23,0.00);  object(0x1CF4,0,0,282);
move(2.17,2.24,0.90);  object(0x1CED,0,0,30);
move(-0.09,0.05,0.00);  object(0x1CED,0,0,26);
move(-0.32,0.04,0.00);  object(0x1CEE,0,0,18);
move(-2.63,-0.27,0.00);  object(0x1CEC,0,0,302);
move(2.10,0.26,0.00);  object(0x1CEC,0,0,5);
move(9.37,-6.85,-0.90);  object(0x1D39,0,0,90);
move(-3.19,0.08,0.00);  object(0x1D39,0,0,271);
move(1.59,-1.31,0.00);  object(0x1D05,0,0,91);
move(0.01,1.20,0.00);  object(0x1D05,0,0,91);
move(0.03,1.14,0.00);  object(0x1D05,0,0,90);
move(0.04,0.01,0.40);  object(0x1CEC,0,0,205);
move(-0.20,-2.22,0.10);  object(0x1CED,0,0,193);
move(-0.12,-0.07,0.00);  object(0x1CED,0,0,194);
move(0.28,-0.10,-0.10);  object(0x1CEE,0,0,185);
move(-5.99,0.61,1.70);  object(0x1904,0,0,0);
move(0.01,3.00,0.00);  object(0x1904,0,0,0);
move(0.08,-2.34,-1.60);  object(0x1CD6,0,0,270);
move(-0.01,1.40,0.00);  object(0x1CD6,0,0,270);
move(13.39,-2.67,-0.50);  object(0x1D4E,0,0,90);
move(-0.02,2.40,0.00);  object(0x1D4E,0,0,90);
move(3.13,1.52,3.80);  object(0x1CD6,0,0,180);
move(-19.98,3.83,0.00);  object(0x1CF5,0,0,270);
move(-0.61,-2.70,0.00);  object(0x1D06,0,0,270);
move(0.01,-1.50,0.00);  object(0x1D06,0,0,270);
move(-0.01,1.40,1.20);  object(0x1CEB,180,180,270);
move(0.00,0.00,0.60);  object(0x1CEB,180,180,270);
move(0.00,-0.80,-0.50);  object(0x1CEA,180,180,270);
move(0.00,-0.80,0.00);  object(0x1CEA,180,180,270);
move(3.36,-4.09,-1.30);  object(0x1D06,180,180,180);
move(-3.35,1.18,0.10);  object(0x1D4E,0,0,270);
move(3.36,-0.50,0.00);  object(0x1CF4,0,0,258);
move(-3.24,2.28,0.00);  object(0x1CCD,0,0,268);
move(4.27,-2.92,0.00);  object(0x1CFE,0,0,156);
move(-2.45,5.30,0.00);  object(0x1D05,0,0,270);
move(1.66,0.02,-0.10);  object(0x1CF9,0,0,90);
move(2.50,1.65,5.10);  object(0x1CD6,0,0,270);
move(-0.03,-7.56,-5.10);  object(0x1C8B,0,0,270);
move(-0.01,3.60,0.00);  object(0x1C8B,0,0,270);
move(-0.13,-1.10,7.50);  object(0x1CD7,0,0,270);
move(3.49,4.59,-7.40);  object(0x1D04,0,0,0);
move(3.30,0.00,0.00);  object(0x1D04,0,0,0);
move(-3.30,-0.03,1.00);  object(0x1CEC,0,0,310);
move(3.31,0.05,0.00);  object(0x1CEC,0,0,359);
move(-5.75,2.25,-0.50);  object(0x01B8,0,0,303);
move(10.12,-0.05,0.00);  object(0x01B8,0,0,32);
move(-13.12,-5.86,-4.30);  object(0x01B8,0,0,180);
move(-5.59,-2.69,-0.10);  object(0x1D01,0,0,0);
move(-0.01,3.50,0.00);  object(0x1D01,0,0,0);
move(30.59,-9.75,-1.37);  object(0x1CB2,270,100,0);
move(-35.57,-9.88,2.07);  object(0x01A4,0,0,270);
move(-0.16,19.01,0.00);  object(0x01A4,0,0,270);
move(11.09,-28.61,-5.90);  object(0x1CD5,0,0,180);
move(-9.00,0.03,0.00);  object(0x1CD5,0,0,180);
move(-1.82,-3.30,5.90);  object(0x01A4,0,0,270);
move(12.87,0.09,0.00);  object(0x01A4,0,0,270);
move(-11.12,16.11,-1.00);  object(0x1D04,0,0,332);
move(21.19,-2.80,0.31);  object(0x1D04,0,0,110);
move(0.39,2.77,0.00);  object(0x1CFE,0,0,76);
move(-0.42,-2.75,1.00);  object(0x1CEC,0,0,111);
pspawn = 0x08E81290;
setint(pspawn,     233);
setfloat(pspawn + 4,     -270.59,    -1760.94,    5.90,    180);
pspawn += 0x30;
teleport(-330.88,  -1743.86,  5.80);

#cheat big kame
moveto(-1773.09,485.43,7.34);  object(0x1CB2,0,90,300);
move(-3.38,-5.75,0.00);  object(0x1CB2,0,90,300);
move(-3.28,-5.63,0.00);  object(0x1CB2,0,90,300);
move(-3.48,-5.86,0.00);  object(0x1CB2,0,90,300);
move(12.56,-7.27,0.00);  object(0x1CB2,0,90,300);
move(-3.42,-5.80,0.00);  object(0x1CB2,0,90,300);
move(-12.46,7.23,0.00);  object(0x1CB2,0,90,300);
move(-3.45,-5.84,0.00);  object(0x1CB2,0,90,300);
move(-3.40,-5.78,0.00);  object(0x1CB2,0,90,300);
move(-3.25,-5.75,0.00);  object(0x1CB2,0,90,300);
move(12.63,-7.34,0.00);  object(0x1CB2,0,90,300);
moveto(-1785.80,434.78,3.93);  object(0x1CB2,0,0,300);
move(-12.41,7.23,0.00);  object(0x1CB2,0,0,300);
move(12.76,7.85,0.10);  object(0x1CB2,0,0,210);
move(9.60,2.42,0.00);  object(0x1CB2,0,0,300);
move(-6.39,-11.74,0.00);  object(0x1CB2,0,0,120);
moveto(-1768.92,463.80,3.98);  object(0x1CB2,0,0,120);
moveto(-1784.78,479.92,3.98);  object(0x1CB2,0,0,30);
move(-7.33,-12.64,0.00);  object(0x1CB2,0,0,30);
move(-7.17,-12.38,0.00);  object(0x1CB2,0,0,30);
move(-1.72,-2.99,0.00);  object(0x1CB2,0,0,30);
moveto(-1774.89,482.56,3.98);  object(0x1CB2,0,0,120);
move(2.61,-10.01,0.00);  object(0x1CB2,0,0,210);
moveto(-1785.75,434.89,10.68);  object(0x1CB2,0,0,300);
move(0.00,0.00,6.80);  object(0x1CB2,0,0,300);
move(-12.53,7.22,-6.80);  object(0x1CB2,0,0,300);
move(0.00,0.00,6.80);  object(0x1CB2,0,0,300);
move(-2.68,10.02,-6.80);  object(0x1CB2,0,0,30);
move(0.00,0.00,6.80);  object(0x1CB2,0,0,30);
move(7.28,12.66,-6.80);  object(0x1CB2,0,0,30);
move(0.00,0.00,6.80);  object(0x1CB2,0,0,30);
moveto(-1768.89,463.70,10.68);  object(0x1CB2,0,0,120);
move(0.00,0.00,6.80);  object(0x1CB2,0,0,120);
move(-12.64,7.30,0.00);  object(0x1CB2,0,0,120);
move(-10.04,-2.53,0.00);  object(0x1CB2,0,0,30);
move(0.00,0.00,-6.80);  object(0x1CB2,0,0,30);
moveto(-1764.37,457.20,7.88);  object(0x1CB2,270,0,210);
move(-3.38,-5.71,0.00);  object(0x1CB2,270,0,210);
move(3.31,5.75,5.70);  object(0x1CB2,270,0,210);
moveto(-1767.76,451.47,13.58);  object(0x1CB2,90,0,30);
moveto(-1772.87,442.37,17.48);  object(0x1CB2,0,0,30);
move(-2.90,-4.99,0.00);  object(0x1CB2,0,0,30);
move(-1.97,-3.27,-9.70);  object(0x1CB2,90,0,30);
moveto(-1769.44,455.40,14.18);  object(0x1CB2,0,90,30);
moveto(-1774.76,463.13,9.08);  object(0x1CB2,90,315,210);
moveto(-1776.71,442.78,14.18);  object(0x1CB2,0,90,30);
move(-5.90,3.38,0.00);  object(0x1CB2,0,90,30);
move(-5.90,3.38,0.00);  object(0x1CB2,0,90,30);
move(-5.90,3.39,0.00);  object(0x1CB2,0,90,30);
move(15.69,0.01,0.00);  object(0x1CB2,0,90,30);
move(-5.86,3.39,0.00);  object(0x1CB2,0,90,30);
move(-5.92,3.42,0.00);  object(0x1CB2,0,90,30);
move(9.39,2.68,0.00);  object(0x1CB2,0,90,30);
move(-5.91,3.29,0.00);  object(0x1CB2,0,90,30);
move(-1.56,0.80,0.00);  object(0x1CB2,0,90,30);
move(-7.24,-12.60,0.00);  object(0x1CB2,0,90,30);
move(11.00,-15.72,0.00);  object(0x1CB2,0,90,300);
move(-11.75,6.91,0.00);  object(0x1CB2,0,90,300);
move(-1.54,5.52,6.10);  object(0x1CB2,0,90,210);
moveto(-1791.28,442.18,17.82);  object(0x1CB2,90,290,31);
move(2.41,-1.44,-1.10);  object(0x1CB2,90,290,31);
moveto(-1778.62,439.33,14.12);  object(0x1CB2,0,90,30);
move(-12.27,23.83,6.10);  object(0x1CB2,0,90,210);
move(1.96,-9.87,0.00);  object(0x1CB2,0,90,210);
move(2.44,-9.30,0.00);  object(0x1CB2,0,90,210);
move(5.88,-3.43,0.00);  object(0x1CB2,0,90,210);
move(1.33,15.97,0.00);  object(0x1CB2,0,90,210);
move(5.89,-3.44,0.00);  object(0x1CB2,0,90,210);
moveto(-1778.50,439.30,20.18);  object(0x1CB2,0,90,30);
move(7.07,12.54,0.00);  object(0x1CB2,0,90,30);
move(0.58,9.06,0.00);  object(0x1CB2,0,90,300);
move(-12.46,7.21,0.00);  object(0x1CB2,0,90,300);
move(0.10,-7.27,0.00);  object(0x1CB2,0,90,299);
moveto(-1768.85,478.34,4.01);  object(0x1CB2,0,0,210);
moveto(-1771.55,488.32,3.97);  object(0x1CB2,0,0,120);
move(-9.83,-2.65,0.00);  object(0x1CB2,0,0,30);
moveto(-1776.49,468.18,10.78);  object(0x1CB2,90,0,120);
move(-8.60,4.89,0.00);  object(0x1CB2,90,0,120);
move(4.87,-2.77,3.80);  object(0x1CB2,0,0,120);
moveto(-1788.36,473.39,21.00);  object(0x01A4,0,0,120);
move(-4.06,-7.01,0.00);  object(0x01A4,0,0,120);
move(-3.98,-6.94,0.00);  object(0x01A4,0,0,120);
move(-4.04,-7.02,0.00);  object(0x01A4,0,0,120);
moveto(-1781.14,470.34,21.02);  object(0x01A4,0,0,210);
move(7.01,-4.06,0.00);  object(0x01A4,0,0,210);
move(7.01,-4.06,0.00);  object(0x01A4,0,0,210);
move(3.46,-2.00,0.00);  object(0x01A4,0,0,210);
moveto(-1803.33,445.61,14.22);  object(0x1D4E,0,0,210);
move(3.17,-1.57,0.00);  object(0x1CF8,0,0,120);
move(3.31,-1.89,0.00);  object(0x1CF8,0,0,120);
moveto(-1791.21,448.93,14.26);  object(0x1D39,0,0,120);
moveto(-1795.71,451.60,14.21);  object(0x1D39,0,0,300);
moveto(-1766.91,453.13,21.01);  object(0x01A4,0,0,300);
moveto(-1770.99,446.16,21.00);  object(0x01A4,0,0,300);
move(-4.02,-7.03,0.00);  object(0x01A4,0,0,300);
move(-4.02,-7.03,0.00);  object(0x01A4,0,0,300);
move(-7.20,3.30,0.00);  object(0x01A4,0,0,30);
move(-5.72,3.29,0.00);  object(0x01A4,0,0,30);
moveto(-1792.18,457.28,14.18);  object(0x1D04,0,0,179);
move(2.31,3.25,0.00);  object(0x1D04,0,0,179);
move(2.09,3.58,0.00);  object(0x1D04,0,0,180);
moveto(-1787.36,454.92,14.27);  object(0x1D04,0,0,300);
move(1.70,3.07,0.00);  object(0x1D04,0,0,300);
moveto(-1783.62,461.73,14.26);  object(0x1D04,0,0,300);
move(-3.38,11.85,0.00);  object(0x1D4E,0,0,30);
move(1.99,-1.16,0.00);  object(0x1D4E,0,0,30);
moveto(-1780.27,470.14,15.22);  object(0x1CE2,0,0,30);
move(11.51,-20.08,0.00);  object(0x1CE1,0,0,120);
moveto(-1771.07,445.71,15.30);  object(0x1CE4,0,0,120);
move(-2.14,-3.63,0.00);  object(0x1CE2,0,0,120);
move(-21.59,-0.83,-0.60);  object(0x01CD,0,0,48);
move(11.59,30.18,0.00);  object(0x01CD,0,0,192);
moveto(-1783.30,452.74,14.22);  object(0x1D04,0,0,300);
move(1.68,2.98,0.00);  object(0x1D04,0,0,299);
moveto(-1778.49,468.82,14.19);  object(0x1D06,0,0,30);
move(-0.27,0.12,1.00);  object(0x1CFF,0,0,30);
move(0.80,-0.42,0.30);  object(0x1CEB,0,0,205);
move(0.87,-0.50,-1.30);  object(0x1D06,0,0,210);
moveto(-1776.88,467.87,15.15);  object(0x1CEC,0,0,30);
moveto(-1763.87,459.18,7.36);  object(0x1D4E,0,0,120);
move(-1.38,-2.49,0.00);  object(0x1D4E,0,0,120);
move(-1.82,-3.82,0.70);  object(0x1CE3,0,0,120);
moveto(-1778.98,436.41,7.44);  object(0x1CCF,0,0,140);
move(-1.33,-1.99,0.00);  object(0x1CCF,0,0,40);
moveto(-1766.03,487.49,6.01);  object(0x1D0E,55,0,210);
move(-1.13,0.65,0.00);  object(0x1D0E,55,0,210);
move(-1.13,0.65,0.00);  object(0x1D0E,55,0,210);
move(-1.13,0.65,0.00);  object(0x1D0E,55,0,210);
move(0.99,1.73,-1.40);  object(0x1D0E,55,0,210);
move(1.13,-0.65,0.00);  object(0x1D0E,55,0,210);
move(1.13,-0.65,0.00);  object(0x1D0E,55,0,210);
move(1.13,-0.65,0.00);  object(0x1D0E,55,0,210);
moveto(-1787.03,443.29,6.07);  object(0x1D0E,55,0,300);
moveto(-1786.35,444.45,6.06);  object(0x1D0E,55,0,300);
move(0.63,1.18,0.00);  object(0x1D0E,55,0,300);
moveto(-1785.06,446.78,6.08);  object(0x1D0E,55,0,300);
moveto(-1783.32,445.77,4.65);  object(0x1D0E,55,0,300);
move(-0.66,-1.12,-0.00);  object(0x1D0E,55,0,300);
move(-0.65,-1.18,0.03);  object(0x1D0E,55,0,300);
moveto(-1785.29,442.27,4.68);  object(0x1D0E,55,0,300);
moveto(-1778.81,489.99,8.04);  object(0x01A4,0,0,120);
move(-4.66,-7.97,0.00);  object(0x01A4,0,0,120);
move(8.90,-13.08,0.00);  object(0x01A4,0,0,300);
move(4.62,7.99,0.00);  object(0x01A4,0,0,300);
moveto(-1772.53,463.26,7.57);  object(0x1CA7,0,0,300);
move(1.01,-0.59,0.00);  object(0x1CA7,0,0,300);
move(1.01,-0.59,0.00);  object(0x1CA7,0,0,300);
move(2.34,-3.10,-0.20);  object(0x1D04,0,0,32);
moveto(-1801.15,444.65,7.81);  object(0x01BF,0,0,294);
moveto(-1782.34,433.03,8.10);  object(0x1CE3,0,0,210);
moveto(-1793.99,439.74,15.32);  object(0x1CE3,0,0,210);
move(23.98,16.43,-8.00);  object(0x1D04,0,0,35);
move(-10.72,-20.44,0.10);  object(0x1CCF,0,0,195);
move(-0.07,-0.03,0.15);  object(0x1CCF,0,0,179);
move(7.85,25.07,-0.20);  object(0x1CF8,0,0,120);
moveto(-1789.42,444.17,7.88);  object(0x01B8,0,0,283);
move(7.20,12.13,0.00);  object(0x01B8,0,0,7);
moveto(-1778.08,436.89,7.98);  object(0x01B8,0,0,210);
move(7.68,13.01,0.00);  object(0x01B8,0,0,30);
move(6.60,9.73,12.80);  object(0x01B8,0,0,28);
move(-23.89,13.79,0.00);  object(0x01B8,0,0,293);
move(8.04,-41.25,0.00);  object(0x01B8,0,0,118);
moveto(-1766.32,455.31,7.32);  object(0x1D01,0,0,57);
move(-13.86,14.25,6.90);  object(0x1D01,0,0,359);
move(-11.84,-29.91,0.00);  object(0x1D01,0,0,214);
move(22.66,21.68,-6.30);  object(0x01CD,0,0,359);
moveto(-1803.40,445.83,20.88);  object(0x01B8,0,0,68);
moveto(-1775.92,466.61,20.78);  object(0x01B8,0,0,219);
move(6.42,-3.81,0.00);  object(0x01B8,0,0,219);
move(-12.81,7.52,0.00);  object(0x01B8,0,0,219);
move(-13.46,-10.53,0.00);  object(0x01B8,0,0,130);
moveto(-1799.80,452.92,20.86);  object(0x01B8,0,0,135);
move(8.04,13.85,0.00);  object(0x01B8,0,0,135);
move(20.12,-21.04,0.00);  object(0x01B8,0,0,301);
move(4.16,7.07,0.00);  object(0x01B8,0,0,301);
move(-8.49,-14.62,0.00);  object(0x01B8,0,0,301);
move(-15.73,0.87,0.00);  object(0x01B8,0,0,24);
move(6.03,-3.43,0.00);  object(0x01B8,0,0,24);
moveto(-1782.79,483.02,7.88);  object(0x01B8,0,0,126);
move(4.84,8.23,0.00);  object(0x01B8,0,0,126);
moveto(-1770.58,475.94,7.91);  object(0x01B8,0,0,296);
moveto(-1765.78,484.29,7.88);  object(0x01B8,0,0,296);
moveto(-1777.36,461.32,8.78);  object(0x01A4,0,315,30);
moveto(-1782.33,440.40,15.42);  object(0x01A4,0,340,211);
move(-6.87,4.11,2.90);  object(0x01A4,0,340,211);
pspawn = 0x08E81290;
setint(pspawn, 233);
setfloat(pspawn + 4, -1765.14, 490.61, 5.86, 240);
pspawn += 0x30;
setint(pspawn, 258);
setfloat(pspawn + 4, -1779.25, 450.47, 5.86, 240);
pspawn += 0x30;
teleport(-1776.30,481.60,7.34);

#cheat a wonderful HOUSE
moveto(372.43,303.88,13.38);  object(0x1D0C,0,0,98);
move(0.17,-9.63,-0.30);  object(0x1CA9,270,320,280);
move(2.33,3.76,3.61);  object(0x1CB1,270,270,280);
move(-3.14,0.37,0.00);  object(0x1CB1,270,270,277);
move(3.36,0.93,0.02);  object(0x1CB1,270,270,94);
move(-3.04,0.39,-0.10);  object(0x1CB1,270,270,277);
move(-2.53,9.53,1.47);  object(0x1CA4,0,0,103);
move(-0.81,-4.39,0.30);  object(0x1CA4,0,180,98);
move(8.40,-0.73,-1.45);  object(0x1CA8,0,90,7);
move(3.74,-0.49,0.02);  object(0x1CA8,0,90,7);
move(-6.36,-5.19,-0.74);  object(0x1C8C,270,25,99);
move(0.66,11.74,0.47);  object(0x1CF5,0,0,279);
moveto(371.40,310.00,17.97);  object(0x1CEB,0,0,86);
moveto(381.54,307.24,17.01);  object(0x1D06,0,0,98);
moveto(381.61,307.59,17.91);  object(0x016F,0,250,253);
move(-0.07,-0.70,0.00);  object(0x016F,0,250,307);
move(-2.27,0.42,-1.01);  object(0x1D39,0,0,275);
move(-4.48,-7.14,0.00);  object(0x1D01,0,0,101);
move(-2.41,0.19,0.00);  object(0x1D01,0,0,243);
move(8.67,-1.46,0.40);  object(0x01BE,0,0,216);
move(-2.75,1.34,-0.30);  object(0x1C9A,0,0,88);
move(0.00,-0.09,0.00);  object(0x1C9C,0,0,86);
moveto(378.71,301.54,17.41);  object(0x01BE,0,0,324);
moveto(371.92,308.57,19.49);  object(0x1CCA,0,0,284);
move(-2.71,-1.54,-1.60);  object(0x1D11,0,270,191);
move(0.66,-0.18,0.00);  object(0x1CEF,0,0,285);
move(-0.37,0.17,-1.00);  object(0x1CF2,0,0,271);
move(7.94,-8.83,0.40);  object(0x01BD,0,0,346);
move(-9.13,5.24,-0.50);  object(0x0264,0,0,284);
move(0.25,0.57,-0.40);  object(0x0264,0,0,279);
move(0.10,0.69,0.70);  object(0x0264,0,0,279);
move(-0.18,-1.59,-0.90);  object(0x0266,0,0,279);
move(0.17,1.25,0.00);  object(0x0264,0,0,273);
move(-0.27,-0.41,0.90);  object(0x0264,0,0,280);
move(0.26,0.12,0.00);  object(0x029F,0,0,279);
moveto(368.75,299.80,18.98);  object(0x1CA4,0,0,9);
move(-0.50,1.91,-1.00);  object(0x1CA4,0,0,97);
move(1.24,-1.95,-0.40);  object(0x1CA4,0,0,8);
move(-1.07,4.30,3.50);  object(0x1CB2,0,130,192);
teleport(362.79,305.55,11.63);

#cheat New Paint
//Generated By VCS Cheater
//Orginal Cheat Created By (Unknown)
setchar(pcar + 0x00000224,  0,  0,  0);
setchar(pcar + 0x00000228,  255,  0,  0);

#cheat Unknown Construction
moveto(-1192.57,-1361.64,1.73);  object(0x1CD5,0,0,294);
move(-9.32,4.21,0.00);  object(0x1CD5,0,0,294);
move(-6.06,-43.54,0.10);  object(0x1CD5,0,0,118);
move(-9.15,4.82,0.00);  object(0x1CD5,0,0,118);
move(-3.33,1.85,0.00);  object(0x1CD5,0,0,118);
move(10.04,12.26,-0.10);  object(0x1CD5,0,0,297);
move(9.99,-5.14,0.00);  object(0x1CD5,0,0,297);
move(-18.17,1.06,-1.30);  object(0x1CD5,0,0,204);
move(3.73,-2.10,0.00);  object(0x1CD5,0,0,204);
move(3.70,-2.08,0.00);  object(0x1CD5,0,0,204);
move(3.85,-2.17,0.00);  object(0x1CD5,0,0,204);
move(3.64,-2.35,-0.10);  object(0x1CD5,0,0,25);
move(2.69,-1.31,1.40);  object(0x1CD5,0,0,25);
move(-19.20,11.00,0.00);  object(0x1CD5,0,0,206);
move(-0.38,5.66,6.00);  object(0x1CB1,0,0,183);
move(20.92,-12.41,0.00);  object(0x1C93,270,0,298);
move(-1.08,-2.03,0.00);  object(0x1C93,270,0,298);
move(4.10,4.29,-0.80);  object(0x1C8B,0,0,291);
move(0.49,1.22,0.00);  object(0x1C8B,0,0,296);
move(-1.11,2.66,0.40);  object(0x01B8,0,0,259);
move(-2.24,-4.38,0.00);  object(0x01B8,0,0,297);
move(11.40,24.01,0.00);  object(0x01B8,0,0,229);
move(-17.36,7.91,0.00);  object(0x01B8,0,0,143);
move(-9.00,-19.17,0.00);  object(0x01B8,0,0,66);
move(-2.07,-4.23,0.00);  object(0x01B8,0,0,56);
move(-4.54,-9.74,0.00);  object(0x01B8,0,0,37);
move(16.10,-8.81,0.00);  object(0x01B8,0,0,327);
move(3.68,8.54,0.30);  object(0x02A6,0,0,206);
move(-1.07,0.53,0.00);  object(0x02A6,0,0,206);
move(-0.43,0.26,-0.50);  object(0x02A6,0,100,206);
move(0.00,0.00,-1.10);  object(0x02A6,0,100,206);
move(-1.87,46.46,7.30);  object(0x0204,0,0,127);
move(23.54,-11.20,0.00);  object(0x0204,0,0,279);
move(-27.86,-25.95,-6.10);  object(0x0201,0,0,116);
move(3.68,-3.96,0.00);  object(0x0201,0,0,64);
move(6.59,52.07,3.10);  object(0x01E0,0,0,118);
move(-0.05,-5.47,0.40);  object(0x01C8,0,0,119);
move(-1.93,-1.06,0.00);  object(0x01C8,0,0,54);
move(-0.35,1.83,0.00);  object(0x01C8,0,0,62);
move(3.48,-0.54,0.00);  object(0x01CB,0,0,358);
move(-4.29,-13.71,0.00);  object(0x01C6,0,0,228);
move(2.03,3.09,0.00);  object(0x01C6,0,0,228);
move(1.87,2.84,0.00);  object(0x01C6,0,0,193);
move(0.83,3.04,0.00);  object(0x01C6,0,0,213);
move(1.48,2.84,0.00);  object(0x01C6,0,0,188);
move(-17.58,-15.94,0.00);  object(0x01C6,0,0,115);
move(2.93,-1.60,0.00);  object(0x01C6,0,0,125);
move(21.24,17.56,0.40);  object(0x01C5,0,0,23);
move(2.77,-1.15,0.00);  object(0x01C5,0,0,23);
move(1.84,-1.35,-0.40);  object(0x01C4,0,0,30);
move(1.47,-0.86,0.00);  object(0x01C4,0,0,30);
move(2.59,-6.74,0.30);  object(0x01C1,0,0,114);
move(0.00,0.00,1.20);  object(0x01C1,0,0,79);
move(-10.74,14.14,2.40);  object(0x01C6,0,0,194);
move(0.93,2.58,0.00);  object(0x01C6,0,0,223);
move(0.49,2.15,0.00);  object(0x01C6,0,0,318);
move(-2.48,1.91,0.00);  object(0x01C6,0,0,321);
move(-2.21,2.43,0.00);  object(0x01C6,0,0,321);
move(-1.57,2.79,0.00);  object(0x01C6,0,0,321);
move(-1.60,2.58,0.00);  object(0x01C6,0,0,351);
move(-1.07,3.39,0.00);  object(0x01C6,0,0,9);
move(29.71,-20.44,-0.90);  object(0x1D00,0,0,127);
move(-2.35,-5.74,0.00);  object(0x1D00,0,0,87);
move(3.82,4.56,0.00);  object(0x1CF7,0,0,115);
move(-2.03,-5.23,0.00);  object(0x1CF7,0,0,132);
move(-0.33,4.11,0.00);  object(0x1D06,0,0,112);
move(-0.72,-1.76,0.00);  object(0x1D06,0,0,112);
move(0.00,0.00,1.00);  object(0x1D14,0,0,112);
move(-1.31,-3.26,-1.00);  object(0x1D15,0,0,133);
move(1.09,9.41,0.20);  object(0x1CCD,0,0,293);
move(0.26,-0.14,0.00);  object(0x1CCD,0,0,293);
move(0.35,-0.19,0.00);  object(0x1CCD,0,0,293);
move(-7.17,6.01,2.00);  object(0x1CE6,0,0,205);
move(-0.04,-0.09,-1.10);  object(0x1CE6,0,0,25);
move(0.00,0.00,1.00);  object(0x1CE6,0,0,25);
move(3.90,-4.93,-1.90);  object(0x1CF8,0,0,280);
move(-3.07,1.71,0.00);  object(0x1CF8,0,0,299);
move(1.26,-9.58,0.00);  object(0x1CF8,0,0,104);
move(-2.99,1.12,0.00);  object(0x1CF8,0,0,130);
move(9.26,-0.77,0.00);  object(0x01B5,0,0,45);
move(2.28,1.01,0.40);  object(0x01BE,0,0,29);
move(-0.22,-1.38,0.00);  object(0x01BE,0,0,19);
move(0.11,0.69,0.90);  object(0x01BE,0,0,24);
move(-3.09,2.31,-0.50);  object(0x1D43,0,0,292);
move(-8.96,-27.41,-0.50);  object(0x1D1A,0,0,293);
move(-15.76,11.44,-4.10);  object(0x1D11,0,0,206);
move(-2.24,1.11,0.00);  object(0x1D11,0,0,206);
move(4.75,-2.35,0.00);  object(0x1D10,0,0,206);
move(3.22,-0.79,0.00);  object(0x1D10,0,0,173);
move(-7.96,6.32,0.00);  object(0x1D06,0,0,285);
move(1.07,2.15,0.00);  object(0x1D06,0,0,298);
move(-0.99,-1.94,1.00);  object(0x1D43,0,0,141);
move(1.03,2.23,0.00);  object(0x1D43,0,0,100);
move(3.58,-7.93,-0.40);  object(0x1CF2,0,0,325);
move(0.58,-0.14,0.00);  object(0x1CF2,0,0,308);
move(2.36,-0.48,0.00);  object(0x1CF2,0,0,278);
move(0.52,0.33,0.30);  object(0x1CF2,0,0,266);
move(-2.00,6.96,-0.60);  object(0x1D04,0,0,108);
move(2.95,-1.63,0.00);  object(0x1D04,0,0,159);
move(-3.64,-1.56,0.00);  object(0x1D04,0,0,217);
move(3.77,-0.90,0.00);  object(0x1D04,0,0,38);
move(-3.82,0.85,1.00);  object(0x1CF2,0,0,12);
move(2.91,3.79,-1.00);  object(0x1CF0,0,0,113);
move(-2.19,-0.64,1.00);  object(0x1CEF,0,0,77);

#cheat An open space and A slope
moveto(-675.28,377.67,13.47);  object(0x1C93,0,0,3);
move(1.01,2.53,0.00);  object(0x1C93,0,0,9);
move(-22.58,-39.70,-2.19);  object(0x1CB2,0,300,96);
move(0.96,4.15,2.20);  object(0x1CB2,0,300,96);
move(0.47,4.37,2.90);  object(0x1CB2,0,310,96);
move(-0.52,3.27,2.30);  object(0x1CB2,0,310,96);
move(0.66,6.16,1.30);  object(0x1CB2,0,90,96);
move(-12.66,1.35,0.00);  object(0x1CB2,0,90,96);
move(-10.25,1.10,0.00);  object(0x1CB2,0,90,96);
move(-6.98,0.75,0.00);  object(0x1CB2,0,90,96);
move(30.28,2.88,0.00);  object(0x1CB2,0,90,97);
move(-12.72,1.47,0.00);  object(0x1CB2,0,90,97);
move(-16.77,1.93,0.00);  object(0x1CB2,0,90,97);
move(8.86,-1.02,0.00);  object(0x1CB2,0,90,97);
move(21.54,3.66,0.00);  object(0x1CB2,0,90,97);
move(-13.24,1.53,0.00);  object(0x1CB2,0,90,97);
move(-10.35,1.19,0.00);  object(0x1CB2,0,90,97);
move(-8.09,0.93,0.00);  object(0x1CB2,0,90,97);
move(32.15,2.83,0.00);  object(0x1CB2,0,90,97);
move(-9.85,1.14,0.00);  object(0x1CB2,0,90,97);
move(-5.05,0.58,0.00);  object(0x1CB2,0,90,97);
move(-9.56,1.10,0.00);  object(0x1CB2,0,90,97);
move(-7.57,0.87,0.00);  object(0x1CB2,0,90,97);
move(34.51,1.96,0.00);  object(0x1CB2,0,90,97);
move(-12.61,1.45,0.00);  object(0x1CB2,0,90,97);
move(-12.38,1.43,0.00);  object(0x1CB2,0,90,97);
move(-9.47,1.09,0.00);  object(0x1CB2,0,90,97);
move(34.09,2.21,0.00);  object(0x1CB2,0,90,97);
move(-11.51,1.33,0.00);  object(0x1CB2,0,90,97);
move(-9.96,1.15,0.00);  object(0x1CB2,0,90,97);
move(-13.16,1.52,0.00);  object(0x1CB2,0,90,97);
move(35.24,2.07,0.00);  object(0x1CB2,0,90,97);
move(-7.73,0.89,0.00);  object(0x1CB2,0,90,97);
move(-8.45,0.98,0.00);  object(0x1CB2,0,90,97);
move(-11.93,1.37,0.00);  object(0x1CB2,0,90,97);
move(30.81,2.28,0.00);  object(0x1CB2,0,90,97);
move(-15.58,1.80,0.00);  object(0x1CB2,0,90,97);
move(-12.15,1.40,0.00);  object(0x1CB2,0,90,97);
move(18.87,-2.18,0.00);  object(0x1CB2,0,90,97);
move(10.71,4.90,0.00);  object(0x1CB2,0,90,97);
move(-13.44,1.55,0.00);  object(0x1CB2,0,90,97);
move(-8.12,0.94,0.00);  object(0x1CB2,0,90,97);
move(-10.95,1.26,0.00);  object(0x1CB2,0,90,97);
move(-5.57,5.27,0.00);  object(0x1CB2,0,90,97);
move(40.80,-5.01,0.00);  object(0x1CB2,0,90,97);
move(0.18,1.59,0.00);  object(0x1CB2,0,90,97);
move(-7.48,0.86,0.00);  object(0x1CB2,0,90,97);
move(-15.48,1.78,0.00);  object(0x1CB2,0,90,97);
move(-7.91,0.91,0.00);  object(0x1CB2,0,90,97);
move(11.89,-1.97,0.00);  object(0x1CB2,0,90,97);
move(29.97,3.19,0.00);  object(0x1CB2,0,90,97);
move(-7.49,0.86,0.00);  object(0x1CB2,0,90,97);
move(0.83,-39.05,0.00);  object(0x1CB2,0,90,97);
move(13.55,-1.56,0.00);  object(0x1CB2,0,90,97);
move(-1.59,-4.85,0.00);  object(0x1CB2,0,90,97);
move(-0.75,-6.46,0.00);  object(0x1CB2,0,90,97);
move(-0.75,-6.46,0.00);  object(0x1CB2,0,90,97);
move(-0.76,-6.56,0.00);  object(0x1CB2,0,90,97);
move(-7.66,0.88,0.00);  object(0x1CB2,0,90,97);
move(0.69,5.96,0.00);  object(0x1CB2,0,90,97);
move(-7.98,69.09,0.00);  object(0x1CB2,0,90,6);
move(1.54,14.00,0.00);  object(0x1CB2,0,90,6);
move(1.60,14.52,0.00);  object(0x1CB2,0,90,6);
move(-0.80,9.75,0.00);  object(0x1CB2,0,90,275);
move(0.52,5.98,0.00);  object(0x1CB2,0,90,275);
move(0.53,6.08,0.00);  object(0x1CB2,0,90,275);
move(-0.06,5.73,0.30);  object(0x1CB2,0,80,275);
move(0.49,5.58,1.20);  object(0x1CB2,0,75,275);
move(0.46,5.28,1.90);  object(0x1CB2,0,65,275);
move(0.42,4.78,2.80);  object(0x1CB2,0,55,275);
move(0.25,2.89,3.40);  object(0x1CB2,0,20,275);
move(0.10,1.10,4.00);  object(0x1CB2,0,0,275);
move(0.00,0.00,3.20);  object(0x1CB2,0,340,275);
move(14.86,38.07,-3.60);  object(0x1CB1,0,305,27);

#cheat Villa under bridge
moveto(-73.88,68.86,8.58);  object(0x1CB2,0,90,347);
move(6.58,1.51,0.00);  object(0x1CB2,0,90,347);
move(6.62,1.51,0.00);  object(0x1CB2,0,90,347);
move(-9.98,-16.95,0.00);  object(0x1CB2,0,90,347);
move(6.51,1.53,0.00);  object(0x1CB2,0,90,347);
move(6.58,1.62,0.00);  object(0x1CB2,0,90,347);
moveto(-81.10,88.92,9.20);  object(0x01A4,0,0,78);
moveto(-79.33,80.68,9.16);  object(0x01A4,0,0,78);
move(1.82,-8.51,0.00);  object(0x01A4,0,0,78);
move(1.78,-8.31,0.00);  object(0x01A4,0,0,78);
move(1.88,-8.60,0.00);  object(0x01A4,0,0,78);
moveto(-76.80,66.26,5.26);  object(0x1CB2,0,0,347);
moveto(-74.04,54.17,5.30);  object(0x1CB2,0,0,347);
move(8.71,-5.33,-0.10);  object(0x1CB2,0,0,256);
move(3.26,0.75,0.00);  object(0x1CB2,0,0,256);
move(1.10,-2.56,1.20);  object(0x1CB2,0,230,257);
moveto(-65.66,86.88,8.98);  object(0x01C4,0,0,80);
move(0.24,-1.38,0.00);  object(0x01C4,0,0,80);
moveto(-61.30,60.83,8.58);  object(0x1D04,0,0,79);
move(-1.15,4.57,0.00);  object(0x1D04,0,0,79);
move(-1.07,4.48,0.00);  object(0x1D04,0,0,79);
move(-5.84,-1.15,0.00);  object(0x1D04,0,0,79);
move(0.88,-4.62,0.00);  object(0x1D04,0,0,79);
moveto(-67.51,59.55,8.62);  object(0x1D04,0,0,80);
moveto(-65.16,83.89,9.19);  object(0x020B,0,0,255);
move(0.12,-0.89,0.00);  object(0x0209,0,0,255);
moveto(-60.38,98.98,9.99);  object(0x1D01,0,0,137);
move(-16.88,-20.67,-1.30);  object(0x1D01,0,0,107);
moveto(-67.37,89.00,8.68);  object(0x1D02,0,0,37);
move(-11.72,-3.17,0.00);  object(0x1D01,0,0,298);
moveto(-70.71,49.27,8.62);  object(0x1CCF,0,0,78);
move(1.13,-0.37,0.00);  object(0x1CCF,0,0,78);
move(7.05,26.10,0.00);  object(0x1D01,0,0,78);
moveto(-60.28,56.19,8.62);  object(0x1D04,0,0,80);
move(-6.24,-1.22,0.00);  object(0x1D04,0,0,80);
moveto(-66.75,87.97,8.68);  object(0x1D02,0,0,60);
pspawn = 0x08E81290;
setint(pspawn, 178);
setfloat(pspawn + 0x4, -58.33, 96.01, 17.54, 293);
pspawn += 0x30;
setint(pspawn, 233);
setfloat(pspawn + 0x4, -71.04, 44.69, 6.00, 105);
pspawn += 0x30;
teleport(-60.23, 95.09, 17.62);

#cheat New Pimped Hud Green And Purple
//Generated By VCS Cheater
//Orginal Cheat Created By Vettefan88
setchar(0x96e2174, 0,255,0);
for(hud=0;hud<15;hud++)
{setchar(0x96E1ED0+4*hud,  163,88,255);}
off();

#cheat On watch tower
teleport(-1704.75, -285.03, 27.96);

#cheat Chaos Police
//Made with Wheel Size Changer by psphacker108
setfloat(0x93642B8, 2.0);

#cheat Dirtbike Various Vehicles!!
teleport(-379.27,  1353.92,  11.59);
pspawn = 0x08E81290;
setint(pspawn,     255);
setfloat(pspawn + 4,     -494.59,     1385.66,     11.77,     0);
pspawn += 0x30;
setint(pspawn,     230);
setfloat(pspawn + 4,     -491.73,     1385.91,     11.77,     0);
pspawn += 0x30;
setint(pspawn,     212);
setfloat(pspawn + 4,     -487.34,     1386.33,     11.77,     0);
pspawn += 0x30;
setint(pspawn,     178);
setfloat(pspawn + 4,     -484.79,     1387.72,     11.77,     0);
pspawn += 0x30;

#cheat ???
moveto(-419.94,1347.27,46.19);  object(0x01E2,315,0,264);
move(-0.07,0.70,0.00);  object(0x01E2,315,0,264);
move(-0.08,0.80,0.00);  object(0x01E2,315,0,264);
move(-0.08,0.80,0.00);  object(0x01E2,315,0,264);
move(0.80,0.08,0.70);  object(0x01E2,315,0,264);
move(0.73,-0.03,0.60);  object(0x01E2,315,0,264);
move(0.07,-0.70,0.00);  object(0x01E2,315,0,264);
move(0.07,-0.70,0.00);  object(0x01E2,315,0,264);
move(0.06,-0.60,0.00);  object(0x01E2,315,0,264);
move(-0.75,-0.08,-0.70);  object(0x01E2,315,0,264);
move(-1.33,-0.33,-1.20);  object(0x01E2,315,0,264);
move(-0.04,2.41,0.00);  object(0x01E2,315,0,264);
move(-0.70,-0.07,-0.60);  object(0x01E2,315,0,264);
move(0.34,-0.81,0.00);  object(0x01E2,315,0,261);
move(0.11,-0.69,0.00);  object(0x01E2,315,0,261);
move(0.12,-0.79,0.00);  object(0x01E2,315,0,261);
move(-0.83,5.33,0.00);  object(0x01E2,315,0,261);
move(0.59,0.09,0.60);  object(0x01E2,315,0,261);
move(0.49,0.08,0.50);  object(0x01E2,315,0,261);
move(0.59,0.09,0.60);  object(0x01E2,315,0,261);
move(0.49,0.08,0.50);  object(0x01E2,315,0,261);
move(-0.49,0.53,-0.40);  object(0x01E2,315,0,261);
move(-0.11,0.69,0.00);  object(0x01E2,315,0,261);
move(-0.09,0.66,0.00);  object(0x01E2,315,0,252);
move(0.44,-2.55,0.00);  object(0x01E2,315,0,260);
move(0.10,-0.59,0.00);  object(0x01E2,315,0,260);
move(0.11,-0.57,0.00);  object(0x01E2,315,0,269);
move(-1.05,1.09,-0.70);  object(0x01E2,315,0,259);
move(-0.21,1.08,0.00);  object(0x01E2,315,0,259);
move(0.28,-1.47,-0.30);  object(0x01E2,315,0,259);
move(-0.36,1.86,0.00);  object(0x01E2,315,0,259);
move(-0.08,0.39,-0.30);  object(0x01E2,315,0,259);
move(0.51,-2.65,0.00);  object(0x01E2,315,0,259);
move(-1.35,1.17,-1.00);  object(0x01E2,315,0,259);
move(-0.21,0.57,0.40);  object(0x01E2,315,0,259);
move(0.19,-0.98,0.00);  object(0x01E2,315,0,259);
move(1.61,0.62,1.50);  object(0x01E2,315,0,259);
move(0.44,0.08,0.50);  object(0x01E2,315,0,259);
move(0.63,0.14,0.70);  object(0x01E2,315,0,259);
move(-2.84,-0.48,-3.60);  object(0x01E2,315,0,265);
move(-0.09,1.00,0.90);  object(0x01E2,315,0,265);
move(0.36,-1.88,0.00);  object(0x01E2,315,0,265);
move(0.47,2.75,0.30);  object(0x01E2,315,0,265);
move(0.70,-3.37,0.00);  object(0x01E2,315,0,261);
move(1.47,-1.39,2.00);  object(0x01E2,310,0,258);
move(0.21,-2.00,0.00);  object(0x01E2,310,0,258);
move(-1.04,2.03,-0.70);  object(0x01E2,310,0,258);
move(0.25,-2.19,0.00);  object(0x01E2,315,0,258);
move(0.96,2.37,1.00);  object(0x01E2,315,0,264);
move(-1.72,-0.19,-1.60);  object(0x01E2,315,0,264);
move(0.06,-2.41,0.00);  object(0x01E2,315,0,264);
move(-0.49,-0.15,-0.60);  object(0x01E2,315,0,264);
move(-0.07,2.51,0.00);  object(0x01E2,315,0,264);
teleport(-379.27,  1353.92,  11.59);

#cheat KEI's SAFEHOUSE by KEI
teleport(-75.64, -1227.72, 23.94);
moveto(-78.25,-1224.71,22.84);  object(0x1D39,0,0,92);
move(-6.48,-1.40,0.40);  object(0x1CE8,0,0,191);
move(16.25,-3.36,0.00);  object(0x1CEA,0,0,5);
move(0.62,0.06,-0.40);  object(0x1D03,0,0,10);
move(-1.19,0.02,0.00);  object(0x1D03,0,0,359);
move(-15.70,4.19,0.80);  object(0x1CFF,0,0,247);
move(5.43,-7.24,0.30);  object(0x1CD3,0,0,216);
move(0.96,0.34,0.00);  object(0x1CD3,0,0,297);
move(0.25,0.88,-0.10);  object(0x1CEC,0,0,322);
move(-0.59,0.15,0.10);  object(0x1CF2,0,0,195);
move(-0.04,-0.93,0.00);  object(0x0158,0,0,340);
move(-6.14,-3.30,-0.40);  object(0x1D01,0,0,28);
move(-0.60,2.46,-0.50);  object(0x1CD2,0,0,270);
move(8.03,1.37,0.90);  object(0x0262,0,0,158);
move(-6.61,-3.81,-0.10);  object(0x01D4,0,0,209);
move(0.60,-0.03,0.00);  object(0x01D4,0,0,209);
move(0.60,-0.04,0.00);  object(0x01D4,0,0,209);
move(0.44,0.14,-0.20);  object(0x0163,270,0,20);
move(-2.43,12.39,-0.10);  object(0x1D14,0,0,125);
move(13.14,1.63,-0.60);  object(0x1CFA,0,0,1);
move(2.40,0.24,0.00);  object(0x1D4E,0,0,1);
move(-5.50,-0.49,0.90);  object(0x1CED,0,0,36);
move(0.23,0.28,0.00);  object(0x1CF1,0,0,41);
move(-1.41,0.12,0.00);  object(0x1D4F,0,35,255);
move(-0.72,-1.67,-0.90);  object(0x1CCC,0,0,294);
move(-8.62,-4.67,1.70);  object(0x0154,0,70,273);
move(11.48,5.05,-1.30);  object(0x01CD,0,0,17);
move(1.61,-12.61,0.00);  object(0x01CD,0,0,106);
move(-12.25,13.64,0.40);  object(0x01FB,0,0,320);
move(5.95,-8.42,0.00);  object(0x01D2,0,0,219);
move(15.11,8.54,-0.90);  object(0x1CF5,0,0,90);
move(1.26,-1.16,0.00);  object(0x1D05,0,0,133);
move(0.04,0.03,0.40);  object(0x1CF0,0,0,113);
move(0.10,-1.92,-0.40);  object(0x1CF8,0,0,176);
move(0.17,-2.59,0.00);  object(0x1CF8,0,0,176);
move(-0.40,1.27,0.70);  object(0x01F9,0,0,267);
move(-1.77,5.17,0.70);  object(0x015F,0,325,166);
move(0.70,-0.07,0.00);  object(0x015F,0,325,166);
move(0.60,-0.06,0.00);  object(0x015F,0,325,166);

#cheat BW-BF
// Made with Wheel Size Changer by psphacker108
// Made with Exhaust Color Changer by psphacker108
setchar (0x09569B94, 128, 128, 255);
setchar (0x09569B90, 0x10);
setfloat (0x936C0B8, 1.5);

#cheat Sky Dive Portal!!
//made with Portal Maker by DDM
static Made;
X1 = 231.36;
Y1 = -147.62;
Z1 = 454.71;
X2 = 248.10;
Y2 = -136.53;
Z2 = 9.57;
if(!Made)
{
for( rot = 0; rot < 270; rot += 10.8 )
{
moveto(X1 + cos(rot) * 3, Y1 + sin(rot) * 3, Z1); object(0x1B3, 0, 0, -rot + 90);
}
for( rot2 = 0; rot2 < 270; rot2 += 10.8 )
{
moveto(X2 + cos(rot2) * 3, Y2 + sin(rot2) * 3, Z2); object(0x1B3, 0, 0, -rot2 + 90);
}
Made = 1;
}
checkx1 = X1 - getfloat(pobj+0x30);
checky1 = Y1 - getfloat(pobj+0x34);
checkx2 = X2 - getfloat(pobj+0x30);
checky2 = Y2 - getfloat(pobj+0x34);
if(sqrt(checkx1*checkx1+checky1*checky1) < 2 )
{
setfloat(pobj+0x30, X2 + 5, Y2 + 5, Z2);
}
if(sqrt(checkx2*checkx2+checky2*checky2) < 2 )
{
setfloat(pobj+0x30, X1 + 5, Y1 + 5, Z1);
}

#cheat Red Exhaust
//Made with Exhaust Color Changer by psphacker108
setchar(0x09569B94, 234, 0, 0);
setchar(0x09569B90, 0x10);

#cheat The Rich
moveto(-852.12,-1018.70,20.48);  object(0x1D39,0,0,265);
move(1.10,1.78,-0.00);  object(0x1D05,0,0,314);
move(-0.66,-4.07,-0.10);  object(0x1D01,0,0,226);
move(0.74,4.11,0.50);  object(0x1CFF,0,0,39);
move(-0.79,-4.86,-0.10);  object(0x1CEA,0,0,62);
move(0.74,1.78,-0.30);  object(0x1D14,0,0,62);
move(-0.03,-0.70,0.00);  object(0x1D14,0,0,72);
move(0.43,0.08,0.00);  object(0x1D14,0,0,72);
move(-0.56,1.62,0.00);  object(0x1D14,0,0,72);
move(0.10,-2.51,0.00);  object(0x1D14,0,0,72);
move(0.42,0.48,0.00);  object(0x1D14,0,0,292);
move(0.06,1.40,0.00);  object(0x1D14,0,0,292);
move(-0.09,-2.30,0.00);  object(0x1D14,0,0,292);
move(0.22,4.19,0.00);  object(0x1D14,0,0,292);
move(0.31,-2.31,0.00);  object(0x1D14,0,0,292);
move(-0.37,0.82,0.00);  object(0x1D14,0,0,197);
move(0.03,0.70,0.00);  object(0x1D14,0,0,197);
move(-0.12,-2.90,0.00);  object(0x1D14,0,0,197);
move(0.82,0.57,0.00);  object(0x1D14,0,0,197);
move(-0.19,2.61,0.00);  object(0x1D14,0,0,197);
move(0.06,-0.90,0.00);  object(0x1D14,0,0,237);
move(0.06,1.40,0.00);  object(0x1D14,0,0,237);
move(-0.16,-3.80,0.00);  object(0x1D14,0,0,237);
move(0.54,1.08,0.00);  object(0x1D14,0,0,237);
move(-0.67,-1.67,0.00);  object(0x1D14,0,0,237);
move(0.09,2.10,0.00);  object(0x1D14,0,0,237);
move(-1.07,1.98,0.00);  object(0x1D14,0,0,239);
move(0.25,-0.62,0.00);  object(0x1D14,0,0,239);
move(-0.06,-0.80,0.00);  object(0x1D14,0,0,239);
move(0.54,-0.84,0.00);  object(0x1D14,0,0,239);
move(0.00,0.00,0.10);  object(0x1D14,0,0,239);
move(-0.51,1.24,0.00);  object(0x1D14,0,0,239);
move(-0.13,-1.80,0.00);  object(0x1D14,0,0,239);
move(0.07,-0.41,0.00);  object(0x1D14,0,0,239);
move(1.24,0.01,-0.10);  object(0x1D14,0,0,239);
move(0.30,-0.02,0.00);  object(0x1D14,0,0,239);
move(-0.08,-1.10,0.00);  object(0x1D14,0,0,239);
move(-1.83,-2.71,0.00);  object(0x1CF8,0,0,302);
move(-0.53,9.61,0.00);  object(0x1D06,0,0,302);
move(-0.24,-0.29,1.00);  object(0x1CEC,0,0,212);
move(0.32,0.31,0.00);  object(0x1CF2,0,0,212);
move(0.16,0.47,0.00);  object(0x1CF2,0,0,212);
move(-1.50,-3.17,0.70);  object(0x0169,0,0,258);
move(0.01,-1.02,0.00);  object(0x0167,0,0,273);
move(-0.05,2.24,0.00);  object(0x015C,0,0,258);
move(0.16,-3.74,0.00);  object(0x015E,0,0,264);
move(-6.74,9.26,-2.30);  object(0x1CAE,225,0,275);
pspawn = 0x08E81290;
setint(pspawn,     263);
setfloat(pspawn + 4,     -856.95,     -1034.45,     24.48,     90);
pspawn += 0x30;
setint(pspawn,     212);
setfloat(pspawn + 4,     -857.90,     -1003.41,     24.45,     90);
pspawn += 0x30;
setint(pspawn,     208);
setfloat(pspawn + 4,     -850.05,     -1023.77,     21.48,     270);
pspawn += 0x30;
teleport(-847.88,  -1018.53,  21.48);

#cheat Really High
teleport(-1007.68, -924.54,619.02);

#cheat Sniper Hideout
moveto(-1173.09,-699.97,19.18);  object(0x1CB2,0,0,273);
move(0.00,0.00,7.80);  object(0x1CB2,0,0,273);
move(-7.52,-5.67,-2.40);  object(0x1CB2,0,0,182);
move(0.00,0.00,2.40);  object(0x1CB2,0,0,182);
move(-0.29,-8.42,0.00);  object(0x1CB2,0,0,182);
move(-0.11,-0.03,-3.10);  object(0x1CB2,0,0,184);
move(16.88,0.81,1.10);  object(0x1CB2,0,0,350);
move(-0.49,5.84,1.90);  object(0x1CB2,0,0,350);
move(0.48,-5.68,0.00);  object(0x1CB2,0,0,350);
move(-9.82,-7.91,-0.10);  object(0x1CB2,0,0,91);
move(6.20,-0.06,0.20);  object(0x1CB2,0,0,87);
move(1.09,-0.30,-4.90);  object(0x1CB2,0,0,98);
move(-9.39,0.24,0.00);  object(0x1CB2,0,0,93);
move(9.80,0.62,0.00);  object(0x1CB2,0,0,83);
move(1.33,13.01,2.33);  object(0x1CB2,0,0,353);
move(-3.22,1.00,-2.76);  object(0x1D01,0,0,58);
move(-0.67,-0.21,0.00);  object(0x1D01,0,0,58);
move(-1.33,-0.46,-0.10);  object(0x1D00,0,0,313);
move(-2.09,3.77,0.00);  object(0x1CF7,0,0,177);
move(-1.40,-0.01,-0.10);  object(0x1D06,0,0,85);
move(-0.02,-0.03,1.00);  object(0x1CFF,0,0,262);
move(0.28,-0.22,-0.10);  object(0x1D4F,330,110,247);
move(3.36,-0.84,-0.70);  object(0x1CFB,0,0,212);
move(0.46,1.11,0.00);  object(0x1CFB,0,0,212);
move(1.97,-1.41,0.00);  object(0x1CF8,0,0,336);
move(-10.82,-0.05,-0.10);  object(0x1CF5,0,0,187);
move(-0.04,5.06,0.70);  object(0x1D1B,355,270,185);
move(10.90,-0.71,0.00);  object(0x1D1B,355,270,195);
move(1.77,-0.41,0.50);  object(0x1D4E,145,270,222);
move(-11.53,0.31,-0.70);  object(0x01BE,180,180,185);
move(-0.90,0.10,0.00);  object(0x01BE,180,180,185);
move(0.40,0.00,0.80);  object(0x1CEB,180,180,5);
move(-2.51,-3.82,-1.20);  object(0x1CCC,165,180,274);
move(2.83,-0.91,0.00);  object(0x1CEC,180,180,274);
move(8.14,-2.28,-0.00);  object(0x1CF7,180,180,292);
move(-20.81,51.92,-10.77);  object(0x01C2,180,180,306);
move(13.91,9.34,0.10);  object(0x01C2,180,180,306);
moveto(-1171.03,-703.30,21.74);  object(0x0166,265,0,211);
move(1.27,-3.83,0.80);  object(0x0166,280,0,151);
move(7.88,-8.97,4.20);  object(0x1CA8,270,310,259);
move(-7.06,-2.97,3.60);  object(0x1CA8,275,270,357);
move(-6.15,-0.44,-3.62);  object(0x1CA8,275,245,178);
move(8.00,0.12,-4.90);  object(0x01C1,170,185,168);
move(-0.16,1.19,0.00);  object(0x01C1,170,185,168);
move(1.41,-0.92,-0.30);  object(0x01C1,170,185,166);
move(-14.99,0.38,7.58);  object(0x01BD,185,180,274);
move(-0.06,-0.90,0.00);  object(0x01BD,185,180,274);
move(-0.04,-0.60,0.00);  object(0x01BD,185,180,274);
move(0.72,-0.05,-0.60);  object(0x01BD,185,180,274);
moveto(-1180.60,-718.40,30.02);  object(0x1CA4,270,0,6);
move(2.23,2.99,-1.46);  object(0x1CA4,270,0,6);
move(-2.25,-1.88,0.75);  object(0x1CA4,270,0,331);
move(7.26,14.70,0.70);  object(0x1CB2,180,90,91);
move(1.28,-0.93,0.00);  object(0x1CB2,180,90,91);
move(-1.88,-4.15,0.00);  object(0x1CB2,180,90,91);
move(2.54,-0.41,0.00);  object(0x1CB2,180,90,91);
move(0.42,-0.29,0.20);  object(0x1CB2,180,90,89);
move(-5.52,-2.39,0.00);  object(0x1CB2,175,90,87);
move(5.60,-0.37,0.00);  object(0x1CB2,175,90,87);
move(0.45,-3.43,0.00);  object(0x1CB2,175,90,87);
moveto(-1173.16,-718.81,21.78);  object(0x0264,0,0,179);
move(-1.10,-0.02,0.00);  object(0x0264,0,0,179);
move(-1.40,-0.02,0.00);  object(0x0264,0,0,179);
move(0.58,1.37,0.00);  object(0x0266,0,0,179);
move(2.63,-1.56,-0.10);  object(0x0266,0,0,179);
move(-4.72,1.02,0.10);  object(0x0264,0,0,179);
move(-1.20,-0.02,0.00);  object(0x0264,0,0,179);
move(0.71,-0.30,0.00);  object(0x0264,0,0,179);
move(-0.69,-0.69,-0.20);  object(0x0266,0,0,179);
move(-1.70,-0.03,0.20);  object(0x0266,0,0,179);
pspawn = 0x08E81290;
setint(pspawn,     212);
setfloat(pspawn + 4,     -1156.51,     -713.16,     15.86,     0);
pspawn += 0x30;
teleport(-1171.91,-713.03,22.79);

#cheat big tyre SANDKING
sethex(0x936a67a, 0xff);

#cheat Diaz Circuit
moveto(-374.03,-658.93,9.18);  object(0x1CB2,175,270,10);
move(0.60,-13.18,0.00);  object(0x1CB2,160,270,10);
move(-0.55,-10.04,0.00);  object(0x1CB2,200,270,352);
move(-0.58,-7.11,1.20);  object(0x1CB2,265,250,78);
move(4.66,-8.99,3.60);  object(0x1CB2,170,245,82);
move(-1.20,5.11,-2.30);  object(0x1CB2,170,250,82);
move(9.16,-0.63,-1.00);  object(0x1CB2,170,260,349);
move(3.55,1.02,-0.50);  object(0x1CB2,170,260,349);
move(3.33,0.96,0.00);  object(0x1CB2,170,260,349);
move(5.82,-2.52,0.00);  object(0x1CB2,85,245,35);
move(11.04,-6.68,3.00);  object(0x1CB2,230,265,73);
move(9.20,-9.30,0.00);  object(0x1CB2,230,265,118);
move(1.58,2.43,0.00);  object(0x1CB2,230,270,118);
move(5.36,-7.89,0.30);  object(0x1CB2,190,275,275);
move(6.77,-1.81,0.00);  object(0x1CB2,190,275,275);
move(7.14,-0.12,0.00);  object(0x1CB2,190,275,239);
move(-0.47,2.41,-0.10);  object(0x1CB2,190,270,239);
move(6.10,8.16,-0.10);  object(0x1CB2,190,270,178);
move(-3.65,-4.32,-0.40);  object(0x1CB2,190,270,222);
move(3.85,8.72,0.40);  object(0x1CB2,190,270,175);
move(0.75,7.04,-0.10);  object(0x1CB2,190,270,175);
move(0.79,7.55,-0.10);  object(0x1CB2,190,270,175);
move(1.02,8.42,-0.10);  object(0x1CB2,190,270,175);
move(1.07,10.06,-0.10);  object(0x1CB2,190,270,175);
move(0.91,8.25,-0.10);  object(0x1CB2,190,270,175);
move(-4.11,4.90,2.50);  object(0x1C91,190,180,0);
move(9.35,-0.42,0.00);  object(0x1C91,190,180,9);
move(-5.06,-2.45,-1.70);  object(0x028E,185,180,186);
move(-75.66,10.49,-1.10);  object(0x0211,185,180,5);
pspawn = 0x08E81290;
setint(pspawn,     230);
setfloat(pspawn + 4,     -373.94,     -628.74,     10.89,     180);
pspawn += 0x30;
teleport(-374.71,-637.83,10.89)

#cheat Principality of Sealand
moveto(-1733.55,-4.65,5.22);  object(0x1CD5,270,0,0);
move(0.00,0.00,11.20);  object(0x1CD5,270,0,0);
move(3.10,0.02,3.00);  object(0x1CD5,270,90,0);
move(11.00,-0.02,0.00);  object(0x1CD5,270,90,0);
move(-0.02,5.19,0.00);  object(0x1CD5,270,90,0);
move(11.22,-5.18,0.00);  object(0x1CD5,270,90,0);
move(3.10,0.01,-3.00);  object(0x1CD5,270,0,0);
move(0.00,0.00,-11.20);  object(0x1CD5,270,0,0);
move(-14.30,10.86,14.20);  object(0x1CD5,270,270,270);
move(-5.15,-0.05,0.00);  object(0x1CD5,270,270,270);
move(16.92,-5.22,0.00);  object(0x1CD5,270,270,270);
move(0.02,11.10,0.00);  object(0x1CD5,270,270,270);
move(-0.04,8.20,-3.00);  object(0x1CD5,270,0,270);
move(0.00,0.00,-11.20);  object(0x1CD5,270,0,270);
move(-23.31,-19.30,14.20);  object(0x1CD5,270,270,90);
move(-0.01,11.20,0.00);  object(0x1CD5,270,270,90);
move(-0.01,8.20,-3.00);  object(0x1CD5,270,180,90);
move(0.00,0.00,-11.20);  object(0x1CD5,270,180,90);
move(0.57,-2.63,14.20);  object(0x1CD5,270,90,180);
move(11.10,0.03,0.00);  object(0x1CD5,270,90,180);
move(11.10,0.03,0.00);  object(0x1CD5,270,90,180);
move(-5.77,-19.95,-2.60);  object(0x1CD6,180,0,270);
move(-2.71,13.82,0.00);  object(0x1CD6,180,0,180);
move(0.00,0.00,5.20);  object(0x1CD6,180,0,180);
move(-5.20,-0.02,0.00);  object(0x1CD6,180,0,180);
move(0.00,0.00,-5.20);  object(0x1CD6,180,0,180);
move(-2.93,-13.72,0.00);  object(0x1CD6,180,0,90);
move(0.51,11.10,5.20);  object(0x1CD6,180,0,90);
move(0.00,-5.20,0.00);  object(0x1CD6,180,0,90);
move(0.00,-5.20,0.00);  object(0x1CD6,180,0,90);
move(5.17,10.60,0.00);  object(0x1CD6,180,0,90);
move(0.00,-5.10,0.00);  object(0x1CD6,180,0,90);
move(4.68,5.06,0.00);  object(0x1CD6,180,0,270);
move(-0.01,-5.10,0.00);  object(0x1CD6,180,0,270);
move(0.00,-5.20,0.00);  object(0x1CD6,180,0,270);
move(-4.71,2.59,0.00);  object(0x1CD2,0,0,210);
move(0.14,-3.70,2.20);  object(0x1CD2,0,180,270);
move(-0.11,7.24,-13.05);  object(0x1CD5,90,180,0);
move(-2.52,-7.36,10.80);  object(0x1CD6,0,180,0);
move(1.76,13.38,0.30);  object(0x1CA7,0,0,0);
move(-1.20,-0.00,0.00);  object(0x1CA7,0,0,0);
move(-1.20,-0.00,0.00);  object(0x1CA7,0,0,0);
move(-1.20,-0.00,0.00);  object(0x1CA7,0,0,0);
move(0.00,-1.12,0.00);  object(0x1CA7,0,0,0);
move(1.20,0.00,0.00);  object(0x1CA7,0,0,0);
move(1.20,0.00,0.00);  object(0x1CA7,0,0,0);
move(1.20,0.00,0.00);  object(0x1CA7,0,0,0);
move(0.00,-1.23,0.00);  object(0x1CA7,0,0,0);
move(-1.20,-0.00,0.00);  object(0x1CA7,0,0,0);
move(-1.20,-0.00,0.00);  object(0x1CA7,0,0,0);
move(-1.20,-0.00,0.00);  object(0x1CA7,0,0,0);
move(0.00,-1.20,-0.20);  object(0x1CB3,0,0,0);
move(0.80,0.00,0.00);  object(0x1CB3,0,0,0);
move(0.90,0.00,0.00);  object(0x1CB3,0,0,0);
move(0.90,0.29,0.00);  object(0x1CB3,0,0,37);
move(0.84,-0.57,0.00);  object(0x1CB3,0,0,75);
move(-3.56,-0.80,0.30);  object(0x1CEB,0,0,270);
move(0.01,-1.00,0.00);  object(0x1CEB,0,270,270);
move(-0.28,0.60,0.60);  object(0x1CEB,0,170,90);
move(0.74,-0.05,-0.40);  object(0x1CEB,0,140,126);
move(-0.59,-1.69,0.00);  object(0x1CEB,0,180,63);
move(0.80,0.57,0.00);  object(0x1CEB,0,180,70);
move(0.15,-0.93,-0.20);  object(0x1CEB,90,180,174);
move(-0.25,0.48,0.70);  object(0x1CEB,0,160,174);
move(-0.50,-1.37,-0.70);  object(0x1CEA,0,180,104);
move(-0.05,-0.19,0.60);  object(0x1CEA,0,180,104);
move(-0.15,-0.58,-0.60);  object(0x1CEA,270,180,104);
move(1.04,0.74,0.00);  object(0x1CEA,270,180,152);
move(-0.09,0.18,0.60);  object(0x1CEA,0,180,152);
move(0.02,-1.19,-0.60);  object(0x1CEA,0,180,124);
move(-0.87,-0.60,0.00);  object(0x1CEA,0,90,100);
move(0.07,0.39,0.60);  object(0x1CEA,0,90,100);
move(-0.11,-1.31,-0.90);  object(0x1CA2,0,270,103);
move(-0.00,-0.87,0.00);  object(0x1CA2,0,270,79);
move(1.54,1.06,0.00);  object(0x1CA2,0,270,4);
move(-1.05,-0.82,0.20);  object(0x1CA2,0,250,133);
move(-0.54,-1.49,0.40);  object(0x01BF,0,180,83);
move(1.08,0.48,-0.30);  object(0x01C2,0,90,98);
move(0.88,-0.43,0.00);  object(0x01BA,0,0,89);
move(1.72,4.36,0.50);  object(0x01C5,0,0,90);
move(-0.01,1.90,-0.40);  object(0x01C2,0,0,90);
move(-0.01,1.30,0.00);  object(0x01C2,0,0,90);
move(-1.50,0.66,-0.20);  object(0x0160,0,250,90);
move(-0.30,-0.00,0.00);  object(0x0160,0,250,90);
move(1.11,-0.04,0.00);  object(0x0169,0,250,135);
move(-0.28,0.28,0.10);  object(0x0169,0,185,135);
move(-1.14,-0.39,-0.20);  object(0x0167,0,185,63);
move(-0.30,0.37,0.20);  object(0x0167,0,260,63);
move(-0.22,-0.00,0.00);  object(0x0167,0,260,63);
move(4.22,3.72,-0.30);  object(0x1CFA,0,0,270);
move(-0.04,-1.70,0.00);  object(0x1D06,0,0,270);
move(0.01,-1.50,0.00);  object(0x1D06,0,0,270);
move(-0.02,1.90,1.20);  object(0x1CEB,0,0,90);
move(0.00,0.00,0.60);  object(0x1CEB,0,0,90);
move(0.00,0.00,0.60);  object(0x1CEB,0,0,90);
move(-0.02,-0.60,0.00);  object(0x1CEB,0,0,90);
move(0.00,0.00,-0.60);  object(0x1CEB,0,0,90);
move(0.00,0.00,-0.60);  object(0x1CEB,0,0,90);
move(-0.01,-0.60,0.00);  object(0x1CEB,0,0,90);
move(0.00,0.00,0.60);  object(0x1CEB,0,0,90);
move(0.00,0.00,0.60);  object(0x1CEB,0,0,90);
move(0.01,-0.70,-1.20);  object(0x1CEA,0,0,270);
move(0.00,0.00,0.60);  object(0x1CEA,0,0,270);
move(-0.05,-0.00,0.60);  object(0x1CEA,0,0,90);
move(-0.08,-1.90,-2.50);  object(0x1D4E,0,0,270);
move(0.98,3.51,0.10);  object(0x1CF9,0,0,90);
move(2.52,1.56,-0.10);  object(0x1CF5,0,0,0);
move(0.29,-3.01,0.10);  object(0x1D12,0,0,90);
move(-0.21,-1.70,0.00);  object(0x1D11,0,0,90);
move(0.00,-0.50,0.00);  object(0x0262,0,0,90);
move(-0.00,1.00,0.00);  object(0x0262,0,0,90);
move(0.00,-0.20,0.20);  object(0x0262,0,0,90);
move(0.00,-0.60,0.00);  object(0x0262,0,0,90);
move(-0.00,0.30,0.10);  object(0x0262,0,0,90);
move(0.50,0.50,0.00);  object(0x0262,270,0,90);
move(0.00,-0.80,0.00);  object(0x0262,270,0,90);
move(-1.01,-2.91,0.70);  object(0x1CE6,0,0,0);
move(-2.30,-0.02,0.00);  object(0x1CE6,0,0,0);
move(-0.95,-5.72,-78.90);  object(0x1CD5,0,0,354);
move(0.31,0.66,82.90);  object(0x1CD6,0,0,0);
move(4.23,11.71,0.00);  object(0x1CD6,270,0,270);
move(0.02,-5.20,0.00);  object(0x1CD6,270,0,270);
move(0.02,-5.20,0.00);  object(0x1CD6,270,0,270);
move(-5.10,-0.02,0.00);  object(0x1CD6,270,0,270);
move(-0.02,5.20,0.00);  object(0x1CD6,270,0,270);
move(-0.02,5.20,0.00);  object(0x1CD6,270,0,270);
move(14.26,-18.87,-9.20);  object(0x1CD6,180,0,180);
move(-5.20,-0.01,0.00);  object(0x1CD6,180,0,180);
move(-5.10,-0.01,0.00);  object(0x1CD6,180,0,180);
move(-5.10,-0.01,0.00);  object(0x1CD6,180,0,180);
move(-5.20,-0.01,0.00);  object(0x1CD6,180,0,180);
move(-5.10,-0.01,0.00);  object(0x1CD6,180,0,180);
move(-2.60,0.08,0.00);  object(0x1CD6,180,0,180);
move(-2.48,2.68,0.00);  object(0x1CD6,180,0,270);
move(-0.03,5.20,0.00);  object(0x1CD6,180,0,270);
move(-0.02,5.10,0.00);  object(0x1CD6,180,0,270);
move(-0.03,5.20,0.00);  object(0x1CD6,180,0,270);
move(-0.03,5.20,0.00);  object(0x1CD6,180,0,270);
move(-0.02,5.10,0.00);  object(0x1CD6,180,0,270);
move(0.09,1.40,0.00);  object(0x1CD6,180,0,270);
move(2.61,2.51,0.00);  object(0x1CD6,180,0,0);
move(5.20,0.01,0.00);  object(0x1CD6,180,0,0);
move(5.20,0.01,0.00);  object(0x1CD6,180,0,0);
move(5.10,0.01,0.00);  object(0x1CD6,180,0,0);
move(5.10,0.01,0.00);  object(0x1CD6,180,0,0);
move(5.10,0.01,0.00);  object(0x1CD6,180,0,0);
move(2.40,-0.16,0.00);  object(0x1CD6,180,0,0);
move(2.56,-2.75,0.00);  object(0x1CD6,180,0,90);
move(0.04,-5.20,0.00);  object(0x1CD6,180,0,90);
move(0.05,-5.10,0.00);  object(0x1CD6,180,0,90);
move(-0.02,-5.20,0.00);  object(0x1CD6,180,0,90);
move(2.26,-21.10,0.80);  object(0x1CA8,90,65,270);
move(-0.01,-13.88,-6.50);  object(0x1CA8,90,65,270);
move(-10.10,1.33,1.90);  object(0x1CA8,0,180,270);
move(-7.97,-7.83,0.00);  object(0x1CA8,0,180,180);
move(19.60,0.07,0.00);  object(0x1CA8,0,180,180);
move(-7.88,-7.86,0.00);  object(0x1CA8,0,180,270);
move(-3.72,-0.03,0.00);  object(0x1CA8,0,180,270);
move(-0.29,47.42,4.50);  object(0x1CA8,90,115,270);
move(-0.01,14.18,-6.60);  object(0x1CA8,90,115,270);
move(-0.00,14.11,-6.60);  object(0x1CA8,90,115,270);
move(2.22,-2.52,-1.50);  object(0x1CD5,90,90,0);
move(-10.81,-0.39,0.00);  object(0x1CD5,90,90,90);
move(0.04,-11.20,0.00);  object(0x1CD5,90,90,90);
move(16.79,14.02,3.60);  object(0x1CA8,0,0,0);
move(-0.08,8.00,0.00);  object(0x1CA8,0,0,0);
move(-7.86,7.84,0.00);  object(0x1CA8,0,0,270);
move(-15.80,-0.04,0.00);  object(0x1CA8,0,0,270);
move(-7.83,-15.77,0.00);  object(0x1CA8,0,0,0);
move(-1.96,-20.82,0.00);  object(0x1CA8,0,0,0);
move(0.06,-7.80,0.00);  object(0x1CA8,0,0,0);
move(12.94,-11.80,0.00);  object(0x1CA8,0,0,270);
move(7.80,0.00,0.00);  object(0x1CA8,0,0,270);
move(12.63,12.85,0.00);  object(0x1CA8,0,0,180);
move(-0.07,7.80,0.00);  object(0x1CA8,0,0,180);
move(-14.56,-0.54,6.80);  object(0x1CA2,320,0,180);
move(14.18,12.56,0.00);  object(0x1CA2,320,0,129);
move(-10.65,-25.78,7.40);  object(0x1CA2,320,0,198);
move(6.99,-5.44,0.30);  object(0x1CA8,0,270,90);
move(3.94,7.49,-4.10);  object(0x1CD6,0,180,90);
move(-0.12,-2.50,0.00);  object(0x1CD6,0,180,90);
move(-11.13,0.16,8.80);  object(0x1CA2,335,0,199);
move(-9.92,-0.39,-0.30);  object(0x1CA2,335,0,278);
move(-0.73,0.07,0.00);  object(0x1CA2,335,0,153);
move(0.80,15.30,0.00);  object(0x1CA2,335,0,237);
move(6.13,-41.58,-11.10);  object(0x1CA2,355,0,315);
move(14.78,24.11,8.00);  object(0x1C98,90,270,93);
move(0.20,12.40,0.00);  object(0x1C98,90,270,93);
move(-0.07,15.67,0.00);  object(0x1C98,90,270,59);
move(-16.23,0.11,0.00);  object(0x1C98,90,270,357);
move(-16.71,0.00,0.00);  object(0x1C98,90,270,314);
move(0.01,-18.49,0.00);  object(0x1C98,90,270,274);
move(-0.08,-13.46,0.00);  object(0x1C98,90,270,221);
move(-0.09,-0.05,0.20);  object(0x0169,0,55,124);
move(0.04,13.60,0.00);  object(0x0169,0,55,168);
move(0.10,18.50,0.00);  object(0x0169,0,55,241);
move(16.77,0.04,0.00);  object(0x0169,0,55,264);
move(16.30,-0.25,0.00);  object(0x0169,0,55,320);
move(0.09,-15.78,0.00);  object(0x0169,0,55,350);
move(-0.20,-12.40,0.00);  object(0x0169,0,55,350);
move(0.29,-3.91,-0.90);  object(0x01B8,0,0,33);
move(-0.06,32.25,0.00);  object(0x01B8,0,0,312);
move(-33.33,0.17,0.00);  object(0x01B8,0,0,235);
move(-0.10,-32.39,0.00);  object(0x01B8,0,0,143);
move(17.42,-35.55,-8.90);  object(0x01B8,0,0,130);
move(19.63,0.35,0.80);  object(0x01B8,0,0,46);
move(0.21,14.76,-1.50);  object(0x01B8,0,0,274);
move(-19.43,0.62,-0.60);  object(0x01B8,0,0,254);
pspawn = 0x08E81290;
setint(pspawn,     275);
setfloat(pspawn + 4,     -1707.40,    -37.95,    14.77,    270);
pspawn += 0x30;
setint(pspawn,     258);
setfloat(pspawn + 4,     -1722.47,    16.72,    6.52,    0);
pspawn += 0x30;
setint(pspawn,     233);
setfloat(pspawn + 4,     -1708.40,    34.32,    6.57,    90);
pspawn += 0x30;
setint(pspawn,     233);
setfloat(pspawn + 4,     -1716.45,    34.59,    6.60,    90);
pspawn += 0x30;
teleport(-1738.20,  44.82,  5.85);

#cheat The Hunter Base
moveto(-876.06,-340.52,17.69);  object(0x1CB2,0,0,182);
move(0.00,0.00,6.40);  object(0x1CB2,0,0,182);
move(-0.82,13.48,-6.60);  object(0x1CB2,0,0,182);
move(0.00,0.00,6.60);  object(0x1CB2,0,0,182);
move(0.48,-25.82,0.00);  object(0x1CB2,0,0,182);
move(-0.10,-0.01,-6.30);  object(0x1CB2,0,0,182);
move(0.00,0.00,-4.70);  object(0x1CB2,0,0,182);
move(-1.44,23.56,0.00);  object(0x1CB2,0,0,182);
move(-5.29,9.96,3.80);  object(0x1CB2,0,0,97);
move(0.00,0.00,5.90);  object(0x1CB2,0,0,97);
move(-1.11,-38.73,0.00);  object(0x1CB2,0,0,97);
move(0.00,0.00,-6.60);  object(0x1CB2,0,0,97);
move(-9.20,0.26,0.00);  object(0x1CB2,0,0,97);
move(0.00,0.00,6.70);  object(0x1CB2,0,0,97);
move(0.00,0.00,-6.60);  object(0x1CB2,0,0,97);
move(2.22,39.43,0.00);  object(0x1CB2,0,0,279);
move(0.01,0.10,6.50);  object(0x1CB2,0,0,279);
move(37.41,-24.19,-11.80);  object(0x028E,0,0,96);
move(-25.07,12.68,5.40);  object(0x1CC0,0,0,272);
move(-1.88,4.27,0.00);  object(0x1CC0,0,0,272);
move(0.18,4.61,0.00);  object(0x1CC0,0,0,272);
move(0.35,-27.46,0.00);  object(0x1CC0,0,0,272);
move(-0.21,-4.01,0.00);  object(0x1CC0,0,0,272);
move(-0.08,-3.82,0.00);  object(0x1CC0,0,0,272);
move(-3.59,32.98,-0.20);  object(0x1CC0,0,0,188);
move(-4.11,0.47,0.00);  object(0x1CC0,0,0,188);
move(6.35,-31.54,-0.90);  object(0x1CC0,0,0,6);
move(-4.65,-0.29,0.00);  object(0x1CC0,0,0,6);
pspawn = 0x08E81290;
setint(pspawn,     275);
setfloat(pspawn + 4,     -883.16,    -340.51,    11.11,    0);
pspawn += 0x30;
setint(pspawn,     230);
setfloat(pspawn + 4,     -871.23,    -333.85,    11.10,    0);
pspawn += 0x30;
teleport(-867.37,-342.44,10.92)

#cheat Bus Stop
moveto(-1068.63,-171.77,10.24);  object(0x1D0C,0,0,0);
move(-5.98,-3.71,5.60);  object(0x1CA4,0,270,0);
move(2.90,0.02,0.00);  object(0x1CA4,0,270,0);
move(2.90,0.02,0.00);  object(0x1CA4,0,270,0);
move(2.80,0.02,0.00);  object(0x1CA4,0,270,0);
move(0.79,1.26,0.00);  object(0x1CA4,0,270,270);
move(-0.02,2.10,0.00);  object(0x1CA4,0,270,270);
move(-0.83,-1.51,1.70);  object(0x1CA4,90,0,270);
move(-0.04,4.30,0.00);  object(0x1CA4,90,0,270);
move(-2.90,-0.03,0.00);  object(0x1CA4,90,0,270);
move(0.04,-4.30,0.00);  object(0x1CA4,90,0,270);
move(-2.90,-0.03,0.00);  object(0x1CA4,90,0,270);
move(-0.04,4.30,0.00);  object(0x1CA4,90,0,270);
move(-2.85,-0.03,0.00);  object(0x1CA4,90,0,270);
move(0.02,-4.28,0.00);  object(0x1CA4,90,0,270);
move(-1.81,-0.57,-1.71);  object(0x1CA4,0,270,270);
move(-0.02,2.90,0.00);  object(0x1CA4,0,270,270);
move(0.02,2.00,0.00);  object(0x1CA4,0,270,270);
move(10.53,0.67,-0.10);  object(0x1CA4,0,270,0);
move(-2.90,-0.01,0.00);  object(0x1CA4,0,270,0);
move(-2.80,-0.01,0.00);  object(0x1CA4,0,270,0);
move(-2.80,-0.01,0.00);  object(0x1CA4,0,270,0);
move(9.69,-0.97,-0.99);  object(0x1CE6,0,0,270);
move(0.00,0.00,2.10);  object(0x1CE6,0,0,270);
move(-0.64,0.98,-3.70);  object(0x1CA4,90,0,270);
move(0.50,0.01,-0.20);  object(0x1CA4,90,0,270);
move(0.60,0.01,-0.20);  object(0x1CA4,90,0,270);
move(-10.58,-3.99,2.99);  object(0x1CA4,0,270,180);
move(2.90,0.00,0.00);  object(0x1CA4,0,270,180);
move(1.29,0.40,0.00);  object(0x1CA4,0,270,270);
move(0.68,-0.40,0.00);  object(0x1CA4,0,270,90);
move(-5.35,1.44,-2.20);  object(0x1CF5,0,0,180);
move(3.16,0.02,0.00);  object(0x1CF5,0,0,180);
move(-3.23,-2.12,0.00);  object(0x1CF5,0,0,0);
move(3.27,-0.08,0.00);  object(0x1CF5,0,0,0);
move(1.88,3.54,1.10);  object(0x1CE6,0,0,270);
move(-0.01,-4.80,0.00);  object(0x1CE6,0,0,270);
move(5.10,-0.49,-1.00);  object(0x1D12,0,0,90);
move(-0.01,1.20,0.00);  object(0x1D12,0,0,90);
move(0.16,-1.10,2.30);  object(0x1CEB,0,0,310);
move(0.00,0.00,-23.40);  object(0x1CEB,0,0,310);
move(0.09,1.10,23.10);  object(0x1CFF,0,0,90);
move(-2.15,1.29,-2.00);  object(0x1D04,0,0,35);
move(1.90,-0.29,0.00);  object(0x1D01,0,0,35);
move(-8.85,0.22,0.00);  object(0x1D01,0,0,220);
move(0.09,0.90,0.00);  object(0x1D01,0,0,220);
move(11.54,-1.80,-2.00);  object(0x1D0E,305,0,180);
move(-0.03,-1.99,-1.30);  object(0x1D0E,305,0,180);
move(-0.06,6.71,2.73);  object(0x1D0E,0,270,270);
move(28.94,4.91,-1.62);  object(0x1CA4,0,0,90);
move(0.01,-4.30,0.00);  object(0x1CA4,0,0,90);
move(-10.77,-0.24,-0.40);  object(0x01A4,0,0,270);
move(4.90,0.00,0.00);  object(0x01A4,0,0,270);
moveto(-1026.18,-291.22,10.90);  object(0x01CB,0,0,270);
move(0.03,-3.20,-0.80);  object(0x0201,0,0,180);
move(194.29,160.27,0.30);  object(0x0201,0,0,180);
move(-0.04,3.70,1.10);  object(0x01CB,0,0,270);
move(132.96,390.92,0.00);  object(0x01CB,0,0,280);
move(-0.36,-3.29,-1.10);  object(0x0201,0,0,190);
move(40.93,317.99,0.00);  object(0x0201,0,0,184);
move(0.21,3.19,1.00);  object(0x01CB,0,0,274);
move(-8.36,296.41,0.10);  object(0x01CB,0,0,274);
move(0.09,-2.91,-0.70);  object(0x0201,0,0,179);
move(-372.03,447.75,-2.60);  object(0x0201,0,0,180);
move(-0.22,3.04,0.60);  object(0x01CB,0,0,270);
move(160.38,-511.89,2.50);  object(0x01CB,0,0,90);
move(-0.30,3.24,-0.90);  object(0x0201,0,0,0);
move(170.18,-421.09,1.00);  object(0x01CB,0,0,95);
move(0.12,3.30,-0.90);  object(0x0201,0,0,5);
move(-154.95,-526.43,-0.10);  object(0x0201,0,0,1);
move(0.05,-3.20,0.80);  object(0x01CB,0,0,91);
move(-3.97,-329.50,0.00);  object(0x01CB,0,0,76);
move(-0.47,1.84,-21.00);  object(0x0201,0,0,76);
move(-0.27,1.07,20.20);  object(0x0201,0,0,351);
move(35.23,-250.61,0.00);  object(0x0201,0,0,354);
move(0.34,-2.89,0.60);  object(0x01CB,0,0,84);
move(-168.38,-357.63,3.70);  object(0x01CB,0,0,184);
move(3.06,0.02,-0.50);  object(0x0201,0,0,89);
move(-442.74,234.60,0.00);  object(0x0201,0,0,281);
move(322.98,80.83,-3.00);  object(0x0201,0,0,166);
move(-0.90,2.76,0.90);  object(0x01CB,0,0,256);
move(68.97,579.49,-1.70);  object(0x1CA8,0,0,0);
move(-0.05,-7.83,0.00);  object(0x1CA8,0,0,180);
move(-0.07,-11.57,0.00);  object(0x1CA8,0,0,90);
move(-23.49,0.14,0.00);  object(0x1CA8,0,0,90);
move(23.56,7.91,5.10);  object(0x0204,0,0,180);
move(0.10,11.60,0.00);  object(0x0204,0,0,180);
pspawn = 0x08E81290;
setint(pspawn,     226);
setfloat(pspawn + 4,     -1060.36,    -171.94,    10.95,    0);
pspawn += 0x30;
setint(pspawn,     226);
setfloat(pspawn + 4,     -1057.02,    -172.10,    10.92,    0);
pspawn += 0x30;
setint(pspawn,     226);
setfloat(pspawn + 4,     -1052.55,    -172.00,    10.89,    0);
pspawn += 0x30;
setint(pspawn,     226);
setfloat(pspawn + 4,     -1067.32,    -178.72,    11.02,    0);
pspawn += 0x30;
setint(pspawn,     237);
setfloat(pspawn + 4,     -1046.83,    -167.80,    10.83,    0);
pspawn += 0x30;
setint(pspawn,     237);
setfloat(pspawn + 4,     -1042.33,    -167.76,    10.88,    0);
pspawn += 0x30;
setint(pspawn,     237);
setfloat(pspawn + 4,     -1037.55,    -167.67,    10.95,    0);
pspawn += 0x30;
teleport(-1068.05,  -179.46,  11.43);

#cheat unknown
moveto(-682.33,  278.73,  -1.63);  object(0x01DE,  0,  0,  105);
move(11.27,  2.03,  14.60);  object(0x01DE,  270,  0,  100);
move(-2.34,  -12.99,  0.00);  object(0x01DE,  270,  0,  100);
move(1.24,  4.94,  1.80);  object(0x01A8,  180,  0,  100);
move(0.56,  3.05,  0.00);  object(0x01A8,  180,  0,  100);
move(-28.43,  -2.51,  -14.20);  object(0x0226,  180,  0,  244);
move(28.85,  6.54,  13.70);  object(0x0266,  0,  0,  100);
move(-2.02,  -11.22,  0.00);  object(0x0266,  0,  0,  100);
move(-4.13,  8.56,  -11.10);  object(0x01B5,  0,  0,  105);
move(8.86,  22.25,  1.00);  object(0x01B8,  0,  0,  103);
move(-23.49,  -17.28,  -11.10);  object(0x01B8,  0,  0,  296);
moveto(-613.75,  452.97,  -35.59);  object(0x1D6A,  0,  0,  17);
move(-12.81,  -184.07,  45.80);  object(0x1D6A,  0,  0,  280);
move(20.58,  -9.05,  0.57);  object(0x1D6C,  0,  0,  100);
move(-18.90,  -8.09,  0.10);  object(0x1D68,  0,  0,  280);
move(-30.38,  20.92,  0.27);  object(0x026D,  0,  0,  191);
move(-0.38,  -2.96,  0.00);  object(0x026D,  0,  0,  191);
move(4.20,  -0.76,  0.00);  object(0x020C,  0,  0,  102);
move(3.98,  -0.77,  0.00);  object(0x020C,  0,  0,  102);
move(4.53,  -0.99,  0.00);  object(0x020C,  0,  0,  109);
move(7.51,  -11.08,  0.20);  object(0x0201,  0,  0,  12);
move(-0.10,  -2.40,  0.00);  object(0x01FF,  0,  0,  12);
move(-0.39,  4.82,  0.00);  object(0x020C,  0,  0,  12);
move(-8.52,  -0.23,  0.00);  object(0x01A4,  0,  0,  280);
move(-1.46,  -8.26,  0.00);  object(0x01A4,  0,  0,  280);
move(-47.50,  -1.22,  -9.85);  object(0x01A4,  0,  0,  282);
moveto(-682.13,  252.20,  5.51);  object(0x01A4,  0,  0,  130);
move(31.10,  15.03,  5.90);  object(0x01A4,  0,  0,  11);
move(7.67,  5.02,  0.10);  object(0x01A4,  0,  0,  190);
move(2.87,  7.40,  0.00);  object(0x01A4,  0,  0,  100);
move(4.09,  0.93,  0.00);  object(0x01FF,  0,  0,  10);
move(-1.09,  0.19,  0.00);  object(0x01FF,  0,  0,  10);
move(-30.26,  19.33,  -6.27);  object(0x01FF,  0,  0,  48);
move(50.25,  -21.35,  6.20);  object(0x01A4,  0,  0,  10);
move(8.77,  -1.52,  0.00);  object(0x01A4,  0,  0,  10);
move(8.39,  -0.13,  0.00);  object(0x01A4,  0,  0,  280);
move(4.74,  -2.22,  0.00);  object(0x01A4,  0,  0,  12);
move(0.29,  8.23,  0.00);  object(0x01A4,  0,  0,  100);
move(6.69,  -10.50,  0.00);  object(0x01A4,  0,  0,  114);
moveto(-664.54,  325.22,  5.92);  object(0x01A4,  0,  0,  3);
move(41.98,  -76.47,  5.50);  object(0x01A4,  0,  0,  10);
move(8.58,  -1.45,  0.00);  object(0x01A4,  0,  0,  10);
move(8.72,  -1.78,  0.00);  object(0x01A4,  0,  0,  10);
move(-26.52,  -0.52,  -0.40);  object(0x1CD7,  270,  0,  280);
move(2.85,  -0.65,  -0.06);  object(0x1CD7,  270,  0,  282);
move(-2.28,  3.55,  0.00);  object(0x1CD7,  270,  0,  282);
move(3.48,  -0.73,  0.00);  object(0x1CD7,  270,  0,  282);
move(3.50,  -0.74,  0.00);  object(0x1CD7,  270,  0,  282);
pspawn = 0x08E81290;
setint(pspawn,     233);
setfloat(pspawn + 4,     -594.33,    301.50,    5.99,    0);
pspawn += 0x30;
setint(pspawn,     233);
setfloat(pspawn + 4,     -646.41,    236.90,    5.72,    0);
pspawn += 0x30;
teleport(-679.87,    274.44,    11.07);

#cheat Bike or car jump
moveto(-769.83,-1125.21,9.47); object(0x1CAF,0,0,307);
move(-0.59,-0.67,3.10); object(0x1CB0,0,0,307);
move(0.00,0.00,0.00); object(0x1CB0,0,0,307);
move(-6.50,3.55,6.60); object(0x1CB0,0,0,7);
move(1.27,-0.08,0.40); object(0x1CB0,0,0,357);
teleport(-767.79,-1132.89,11.07)

#cheat Torture House by chain43
moveto(-762.43,-1156.08,11.07); object(0x1CA4,0,0,74);
move(0.77,-1.29,0.10); object(0x1CA4,0,0,74);
move(2.09,-6.21,0.00); object(0x1CA4,0,0,74);
move(2.14,-1.46,0.00); object(0x1CA4,0,0,348);
move(3.04,0.62,0.00); object(0x1CA4,0,0,348);
move(3.56,0.86,0.00); object(0x1CA4,0,0,348);
move(-10.31,9.36,0.00); object(0x1CA4,0,0,348);
move(3.14,0.64,0.00); object(0x1CA4,0,0,348);
move(3.85,0.80,0.00); object(0x1CA4,0,0,348);
move(3.16,-1.59,0.00); object(0x1CA4,0,0,76);
move(0.78,-3.23,0.00); object(0x1CA4,0,0,76);
move(0.94,-3.94,0.00); object(0x1CA4,0,0,76);
move(-4.33,8.87,0.00); object(0x1CA4,0,0,350);
move(-4.91,-10.95,1.70); object(0x1CA4,270,0,74);
move(-1.23,4.05,0.00); object(0x1CA4,270,0,74);
move(-1.16,3.50,0.00); object(0x1CA4,270,0,74);
move(2.73,0.12,0.00); object(0x1CA4,270,0,74);
move(2.78,0.61,0.00); object(0x1CA4,270,0,74);
move(2.68,0.55,0.00); object(0x1CA4,270,0,74);
move(1.01,-2.66,0.00); object(0x1CA4,270,0,74);
move(0.32,-4.01,0.00); object(0x1CA4,270,0,74);
move(0.46,-0.77,0.00); object(0x1CA4,270,0,74);
move(-4.76,-0.75,0.00); object(0x1CA4,270,0,74);
move(2.58,0.61,0.00); object(0x1CA4,270,0,74);
move(-1.04,3.81,0.00); object(0x1CA4,270,0,74);
move(-2.52,-1.51,0.00); object(0x1CA4,270,0,74);
move(2.58,1.55,-2.90); object(0x1CF7,0,0,74);
move(-2.99,2.56,-0.10); object(0x1CFC,0,0,349);
move(2.75,0.52,0.00); object(0x1CFC,0,0,349);
move(-2.16,-0.41,1.00); object(0x1CFF,0,0,349);
move(-7.12,2.13,0.90); object(0x1D1C,0,0,74);
move(2.98,-11.28,-0.20); object(0x0204,0,0,116);
move(7.00,3.25,-1.40); object(0x026D,0,0,39);
move(0.82,-0.37,0.00); object(0x026D,0,0,39);
move(-0.36,0.16,0.00); object(0x026D,0,0,39);
move(0.73,-0.33,0.00); object(0x026D,0,0,39);
move(-1.52,7.03,0.80); object(0x0155,275,0,134);
move(-3.11,-0.77,-0.10); object(0x014C,265,0,134);
move(-0.34,-0.20,0.00); object(0x0153,265,0,104);
move(4.02,0.87,0.10); object(0x01B3,270,0,139);
teleport(-756.42,-1159.52,11.07);