
#cheat elevator
static obj;
static state;
top = 32.98;
bottom = 12.82;
if(!obj)
{
  moveto(-419.53,-603.07,bottom);
  obj = object(0x1CA4,90,0,0);
}
else
{
  selectobject(obj);
  if(state == 0 && getfloat(getint(pplayer+0xf0)+0x30) == getfloat(obj+0x30))
  {
       if(getfloat(obj+0x38) >= top && buttons & CTRL_DOWN) state = 2;
       else if(buttons & CTRL_UP) state = 1;
  }
  if(state == 1)
  {
       setfloat(obj + 0x38, getfloat(obj+0x38) + 0.04);
       if(getfloat(obj+0x38) >= top) state = 0;
  }
  else if(state == 2)
  {
       setfloat(obj + 0x38, getfloat(obj+0x38) - 0.04);
       if(getfloat(obj+0x38) <= bottom) state = 0;
  }
  propagateobject();
}
#off
obj = state = 0;


#cheat elevator
top = 32.98;
bottom = 12.82;
xpos = -419.53;
ypos = -603.07;
static obj;
static state;
if(!obj)
{
 moveto(xpos,ypos,bottom);
 obj = object(0x1CA4,90,0,0);
}
else
{
 selectobject(obj);
 if(state == 0 && getfloat(getint(pplayer+0xf0)+0x30) == getfloat(obj+0x30))
 {
      if(getfloat(obj+0x38) >= top && buttons & CTRL_DOWN) state = 2;
      else if(buttons & CTRL_UP) state = 1;
 }
 if(state == 1)
 {
      setfloat(obj + 0x38, getfloat(obj+0x38) + 0.04);
      if(getfloat(obj+0x38) >= top) state = 0;
 }
 else if(state == 2)
 {
      setfloat(obj + 0x38, getfloat(obj+0x38) - 0.04);
      if(getfloat(obj+0x38) <= bottom) state = 0;
 }
 propagateobject();
}
#off
obj = state = 0;

#cheat land,Sea Air
moveto(-376.82,1490.67,4.73);  object(0x1CD5,0,0,176);
move(4.99,0.37,0.00);  object(0x1CD5,0,0,176);
move(-0.48,6.34,0.00);  object(0x1CD5,0,0,176);
move(-4.89,-0.37,0.00);  object(0x1CD5,0,0,176);
move(-10.82,47.63,1.70);  object(0x1CD7,270,0,266);
move(4.50,-6.91,0.00);  object(0x1CD7,270,0,268);
move(-0.14,3.40,0.00);  object(0x1CD7,270,0,268);
move(-0.15,3.59,0.00);  object(0x1CD7,270,0,268);
move(-4.20,3.92,0.00);  object(0x1CD7,270,0,268);
move(4.02,0.17,0.00);  object(0x1CD7,270,0,268);
move(-3.40,4.51,0.00);  object(0x1CD7,270,0,268);
move(3.23,0.16,0.00);  object(0x1CD7,270,0,267);
move(-3.06,4.75,0.00);  object(0x1CD7,270,0,269);
move(2.88,0.07,0.00);  object(0x1CD7,270,0,269);
move(-2.75,3.53,0.50);  object(0x1CD7,270,340,269);
move(-0.21,4.10,1.40);  object(0x1CD7,270,340,269);
move(-0.14,4.40,1.60);  object(0x1CD7,270,340,269);
move(0.03,4.80,0.80);  object(0x1CD7,270,0,269);
move(-0.12,4.60,0.00);  object(0x1CD7,270,0,269);
move(3.22,0.08,0.00);  object(0x1CD7,270,0,269);
move(0.12,-4.70,0.00);  object(0x1CD7,270,0,269);
move(-4.22,4.78,0.20);  object(0x1CB2,270,270,269);
move(4.89,0.13,0.00);  object(0x1CB2,270,270,269);
move(-4.93,13.48,0.00);  object(0x1CB2,270,270,269);
move(4.65,0.12,0.00);  object(0x1CB2,270,270,269);
move(-6.89,-27.69,-2.40);  object(0x1CB2,270,250,269);
move(2.95,0.08,0.00);  object(0x1CB2,270,250,269);
move(3.84,0.10,0.00);  object(0x1CB2,270,250,269);
move(0.43,-13.18,-2.20);  object(0x1CB2,270,270,267);
move(0.52,-11.18,0.00);  object(0x1CB2,270,270,267);
move(7.06,14.84,0.00);  object(0x1CB2,270,270,0);
move(0.61,-13.98,0.00);  object(0x1CB2,270,270,3);
move(-0.13,-3.20,-3.40);  object(0x1CB2,180,180,273);
move(-0.45,13.87,0.00);  object(0x1CB2,180,180,269);
move(-4.11,-3.34,0.00);  object(0x1CB2,180,180,177);
move(4.95,-4.21,-0.10);  object(0x1CB2,180,180,94);
move(-0.73,13.90,0.00);  object(0x1CB2,180,180,89);
move(7.13,-3.01,-3.80);  object(0x1CB2,90,180,177);
move(0.50,-14.36,0.00);  object(0x1CB2,90,180,181);
move(-11.30,-4.05,0.00);  object(0x1CB2,90,180,181);
move(-8.34,62.45,14.50);  object(0x1CB2,0,180,88);
move(0.00,0.00,-5.00);  object(0x1CB2,0,180,88);
move(6.69,-6.71,-0.80);  object(0x1CB2,0,180,181);
move(-0.20,-14.10,0.00);  object(0x1CB2,0,180,181);
move(-10.30,17.11,5.70);  object(0x1CB2,0,180,179);
move(0.22,-14.10,0.00);  object(0x1CB2,0,180,179);
move(0.05,-3.30,0.00);  object(0x1CB2,0,180,179);
move(10.13,13.72,0.10);  object(0x1CB2,0,180,180);
move(-0.12,-11.90,0.00);  object(0x1CB2,0,180,180);
move(-6.16,16.77,3.40);  object(0x1CB2,0,90,266);
move(0.30,-4.71,0.00);  object(0x1CB2,0,90,266);
move(0.32,-4.88,0.00);  object(0x1CB2,0,90,266);
move(0.35,-5.29,0.00);  object(0x1CB2,0,90,266);
move(0.32,-4.90,0.00);  object(0x1CB2,0,90,266);
move(0.22,-3.39,0.00);  object(0x1CB2,0,90,266);
move(-1.72,25.71,2.80);  object(0x1CB2,0,0,266);
move(-6.25,-7.67,0.00);  object(0x1CB2,0,0,176);
move(0.91,-14.28,0.00);  object(0x1CB2,0,0,176);
move(6.98,-6.26,0.00);  object(0x1CB2,0,0,87);
move(-1.53,25.17,3.20);  object(0x1CB2,0,270,264);
move(0.32,-4.14,0.00);  object(0x1CB2,0,270,264);
move(0.48,-4.48,0.00);  object(0x1CB2,0,270,264);
move(0.64,-6.05,0.00);  object(0x1CB2,0,270,264);
move(0.53,-4.86,0.00);  object(0x1CB2,0,270,264);
move(0.30,-3.07,0.00);  object(0x1CB2,0,270,263);
move(4.83,1.17,-6.00);  object(0x1CB2,0,270,271);
move(3.18,-9.08,-4.10);  object(0x1CB2,90,55,273);
move(-0.55,-13.45,-4.00);  object(0x1CB2,90,270,273);
move(-0.30,-12.75,0.00);  object(0x1CB2,90,270,270);
move(0.37,-14.27,-1.90);  object(0x1CB2,85,255,272);
pspawn = 0x08E81290;
setint(pspawn,   215);
setfloat(pspawn + 4,   -370.78,  1531.76,  6.44,  0);
pspawn += 0x30;
setint(pspawn,   257);
setfloat(pspawn + 4,   -374.56,  1510.74,  5.85,  0);
pspawn += 0x30;
setint(pspawn,   233);
setfloat(pspawn + 4,   -376.92,  1549.29,  5.78,  0);
pspawn += 0x30;
setint(pspawn,   233);
setfloat(pspawn + 4,   -373.01,  1548.40,  5.82,  0);
pspawn += 0x30;
setint(pspawn,   278);
setfloat(pspawn + 4,   -372.94,  1571.16,  5.89,  0);
pspawn += 0x30;
setint(pspawn,   275);
setfloat(pspawn + 4,   -435.45,  1518.53,  11.77,  0);
pspawn += 0x30;
setint(pspawn,   245);
setfloat(pspawn + 4,   -410.78,  1510.22,  11.77,  0);
pspawn += 0x30;
setint(pspawn,   230);
setfloat(pspawn + 4,   -401.29,  1513.46,  11.76,  0);
pspawn += 0x30;
setint(pspawn,   252);
setfloat(pspawn + 4,   -425.55,  1510.18,  11.77,   0);
pspawn += 0x30;
teleport(-389.41,  1535.95,  10.53);


#cheat elevator
static obj;
static state;
top = 32.98;
bottom = 12.82;
if(!obj)
{
moveto(-419.53,-603.07,bottom);
obj = object(0x1CA4,90,0,0);
}
else
{
selectobject(obj);
if(state == 0 && getfloat(getint(pobj+0xf0)+0x30) == getfloat(obj+0x30))
{
if(getfloat(obj+0x38) >= top && buttons & CTRL_DOWN) state = 2;
else if(buttons & CTRL_UP) state = 1;
}
if(state == 1)
{
setfloat(obj + 0x38, getfloat(obj+0x38) + 0.04);
if(getfloat(getint(pcar+0xf0)+0x30) == getfloat(obj+0x30))
setfloat(pcar + 0x38, getfloat(pcar+0x38) + 0.04);
if(getfloat(obj+0x38) >= top) state = 0;
}
else if(state == 2)
{
setfloat(obj + 0x38, getfloat(obj+0x38) - 0.04);
if(getfloat(getint(pcar+0xf0)+0x30) == getfloat(obj+0x30))
setfloat(pcar + 0x38, getfloat(pcar+0x38) - 0.04);
if(getfloat(obj+0x38) <= bottom) state = 0;
}
propagateobject();
}
#off
obj = state = 0;

#cheat race track part 1
setshort(0x98a2ae6, 'V', 'e', 't', 't', 'e', ' ', 'S', 'p', 'e', 'e', 'd', 'w', 'a', 'y', ' ');
moveto(-649.03,-470.85,10.55);  object(0x1CB6,180,0,270);
move(0.01,-1.60,0.00);  object(0x1CB6,180,0,270);
move(0.01,-1.60,0.00);  object(0x1CB6,180,0,270);
move(0.01,-1.70,0.00);  object(0x1CB6,180,0,270);
move(-0.07,-0.18,0.00);  object(0x1CB6,180,0,270);
move(0.07,-1.59,0.00);  object(0x1CB6,180,0,266);
move(0.18,-1.59,0.00);  object(0x1CB6,180,0,262);
move(0.29,-1.56,0.00);  object(0x1CB6,180,0,258);
move(0.38,-1.50,0.00);  object(0x1CB6,180,0,254);
move(0.50,-1.51,0.00);  object(0x1CB6,180,0,250);
move(0.63,-1.52,0.00);  object(0x1CB6,180,0,246);
move(0.72,-1.44,0.00);  object(0x1CB6,180,0,242);
move(0.79,-1.34,0.00);  object(0x1CB6,180,0,238);
move(0.06,-0.09,0.00);  object(0x1CB6,180,0,237);
move(0.86,-1.25,0.00);  object(0x1CB6,180,0,233);
move(1.00,-1.26,0.00);  object(0x1CB6,180,0,229);
move(1.10,-1.20,0.00);  object(0x1CB6,180,0,225);
move(1.10,-1.04,0.00);  object(0x1CB6,180,0,222);
move(1.26,-1.04,0.00);  object(0x1CB6,180,0,217);
move(1.34,-0.95,0.00);  object(0x1CB6,180,0,213);
move(1.43,-0.86,0.00);  object(0x1CB6,180,0,209);
move(1.36,-0.70,0.00);  object(0x1CB6,180,0,205);
move(1.47,-0.63,0.00);  object(0x1CB6,180,0,201);
move(1.47,-0.52,0.00);  object(0x1CB6,180,0,197);
move(1.48,-0.41,0.00);  object(0x1CB6,180,0,194);
move(1.49,-0.30,0.00);  object(0x1CB6,180,0,190);
move(1.67,-0.22,0.00);  object(0x1CB6,180,0,185);
move(1.57,-0.10,0.00);  object(0x1CB6,180,0,182);
move(1.65,-0.02,0.00);  object(0x1CB6,180,0,180);
move(1.60,-0.01,0.00);  object(0x1CB6,180,0,180);
moveto(-462.59,-474.94,10.77);  object(0x1CB6,180,0,90);
move(1.60,0.02,0.00);  object(0x1CB6,180,0,90);
move(1.60,0.02,0.00);  object(0x1CB6,180,0,90);
move(1.60,0.02,0.00);  object(0x1CB6,180,0,90);
move(1.60,0.02,0.00);  object(0x1CB6,180,0,90);
move(1.60,0.02,0.00);  object(0x1CB6,180,0,90);
move(1.60,0.02,0.00);  object(0x1CB6,180,0,90);
move(1.60,0.02,0.00);  object(0x1CB6,180,0,90);
move(1.60,0.02,0.00);  object(0x1CB6,180,0,90);
move(1.60,0.02,0.00);  object(0x1CB6,180,0,90);
move(1.60,0.02,0.00);  object(0x1CB6,180,0,90);
move(1.60,0.02,0.00);  object(0x1CB6,180,0,90);
move(1.60,0.02,0.00);  object(0x1CB6,180,0,90);
move(1.60,0.02,0.00);  object(0x1CB6,180,0,90);
move(1.60,0.02,0.00);  object(0x1CB6,180,0,90);
move(1.60,0.02,0.00);  object(0x1CB6,180,0,90);
move(1.60,0.02,0.00);  object(0x1CB6,180,0,90);
move(1.60,0.02,0.00);  object(0x1CB6,180,0,90);
move(1.60,0.02,0.00);  object(0x1CB6,180,0,90);
move(1.60,0.02,0.00);  object(0x1CB6,180,0,90);
move(1.60,0.02,0.00);  object(0x1CB6,180,0,90);
move(1.28,110.73,0.00);  object(0x1CB6,180,0,90);
move(-1.60,-0.02,0.00);  object(0x1CB6,180,0,90);
move(-1.60,-0.02,0.00);  object(0x1CB6,180,0,90);
move(-1.60,-0.02,0.00);  object(0x1CB6,180,0,90);
move(-1.60,-0.02,0.00);  object(0x1CB6,180,0,90);
move(-1.60,-0.02,0.00);  object(0x1CB6,180,0,90);
move(-1.60,-0.02,0.00);  object(0x1CB6,180,0,90);
move(-1.60,-0.02,0.00);  object(0x1CB6,180,0,90);
move(-1.60,-0.02,0.00);  object(0x1CB6,180,0,90);
move(-1.60,-0.02,0.00);  object(0x1CB6,180,0,90);
move(-1.60,-0.02,0.00);  object(0x1CB6,180,0,90);
move(-1.60,-0.02,0.00);  object(0x1CB6,180,0,90);
move(-1.60,-0.02,0.00);  object(0x1CB6,180,0,90);
move(-1.60,-0.02,0.00);  object(0x1CB6,180,0,90);
move(-1.60,-0.02,0.00);  object(0x1CB6,180,0,90);
move(-1.60,-0.02,0.00);  object(0x1CB6,180,0,90);
move(-1.60,-0.02,0.00);  object(0x1CB6,180,0,90);
move(-1.60,-0.02,0.00);  object(0x1CB6,180,0,90);
move(-1.60,-0.02,0.00);  object(0x1CB6,180,0,90);
move(-1.60,-0.02,0.00);  object(0x1CB6,180,0,90);
move(192.39,-126.41,0.00);  object(0x1CB6,180,0,180);
move(1.54,0.05,0.00);  object(0x1CB6,180,0,177);
move(1.67,0.15,0.00);  object(0x1CB6,180,0,173);
move(1.51,0.23,0.00);  object(0x1CB6,180,0,170);
move(1.43,0.30,0.00);  object(0x1CB6,180,0,167);
move(1.56,0.42,0.00);  object(0x1CB6,180,0,163);
move(1.60,0.54,0.00);  object(0x1CB6,180,0,159);
move(1.50,0.61,0.00);  object(0x1CB6,180,0,156);
move(1.56,0.75,0.00);  object(0x1CB6,180,0,152);
move(1.34,0.75,0.00);  object(0x1CB6,180,0,149);
move(1.27,0.81,0.00);  object(0x1CB6,180,0,146);
move(1.32,0.96,0.00);  object(0x1CB6,180,0,142);
move(1.32,1.09,0.00);  object(0x1CB6,180,0,139);
move(1.20,1.12,0.00);  object(0x1CB6,180,0,135);
move(1.05,1.11,0.00);  object(0x1CB6,180,0,132);
move(0.08,0.09,0.00);  object(0x1CB6,180,0,132);
move(0.99,1.19,0.00);  object(0x1CB6,180,0,128);
move(0.97,1.32,0.00);  object(0x1CB6,180,0,125);
move(0.93,1.67,0.00);  object(0x1CB6,180,0,121);
move(0.71,1.27,0.00);  object(0x1CB6,180,0,117);
move(0.61,1.26,0.00);  object(0x1CB6,180,0,114);
move(0.66,1.60,0.00);  object(0x1CB6,180,0,111);
move(0.53,1.58,0.00);  object(0x1CB6,180,0,107);
move(0.36,1.28,0.00);  object(0x1CB6,180,0,104);
move(0.31,1.38,0.00);  object(0x1CB6,180,0,101);
move(0.27,1.60,0.00);  object(0x1CB6,180,0,98);
move(0.17,1.59,0.00);  object(0x1CB6,180,0,94);
move(0.08,1.69,0.00);  object(0x1CB6,180,0,91);
move(-0.01,1.56,0.00);  object(0x1CB6,180,0,90);
move(-0.02,1.60,0.00);  object(0x1CB6,180,0,90);
move(-0.02,1.70,0.00);  object(0x1CB6,180,0,90);
move(-28.79,-31.33,0.00);  object(0x1CB6,180,0,180);
moveto(-268.72,-490.68,10.77);  object(0x1CB6,180,0,180);
move(-0.10,-0.00,0.00);  object(0x1CB6,180,0,180);
move(-1.50,-0.01,0.00);  object(0x1CB6,180,0,180);
move(-1.60,-0.01,0.00);  object(0x1CB6,180,0,180);
move(-1.70,-0.01,0.00);  object(0x1CB6,180,0,180);
move(-1.50,-0.01,0.00);  object(0x1CB6,180,0,180);
move(-1.70,-0.01,0.00);  object(0x1CB6,180,0,180);
move(-1.30,-0.01,0.00);  object(0x1CB6,180,0,180);
move(-1.70,-0.01,0.00);  object(0x1CB6,180,0,180);
moveto(-427.52,-337.51,10.87);  object(0x1CB6,180,0,0);
move(1.60,0.01,0.00);  object(0x1CB6,180,0,0);
move(1.70,0.01,0.00);  object(0x1CB6,180,0,0);
move(1.60,0.01,0.00);  object(0x1CB6,180,0,0);
move(95.80,-2.71,0.00);  object(0x1CB6,180,0,0);
move(-0.00,-1.47,0.00);  object(0x1CB6,180,0,0);
move(-0.00,-1.60,0.00);  object(0x1CB6,180,0,0);
move(-0.00,-1.60,0.00);  object(0x1CB6,180,0,0);
move(1.40,-0.74,0.00);  object(0x1CB6,180,0,18);
move(1.74,-0.56,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.60,-0.59,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.41,-0.52,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.50,-0.55,0.00);  object(0x1CB6,180,0,340);
move(1.38,-0.51,0.00);  object(0x1CB6,180,0,340);
move(12.70,-10.48,0.00);  object(0x1CB6,180,0,16);
move(0.90,-1.32,0.00);  object(0x1CB6,180,0,16);
move(0.90,-1.32,0.00);  object(0x1CB6,180,0,16);
move(0.90,-1.32,0.00);  object(0x1CB6,180,0,16);
move(0.90,-1.32,0.00);  object(0x1CB6,180,0,16);
move(0.90,-1.32,0.00);  object(0x1CB6,180,0,16);
move(0.90,-1.32,0.00);  object(0x1CB6,180,0,16);
move(0.90,-1.32,0.00);  object(0x1CB6,180,0,16);
move(18.73,-37.11,0.00);  object(0x1CB6,180,0,41);
move(0.24,-1.58,0.00);  object(0x1CB6,180,0,41);
move(0.24,-1.58,0.00);  object(0x1CB6,180,0,41);
move(1.26,-36.57,0.00);  object(0x1CB6,180,0,230);
move(1.60,-0.01,0.00);  object(0x1CB6,180,0,230);
move(-145.38,-8.99,0.00);  object(0x1CB6,180,0,318);
move(1.60,0.06,0.00);  object(0x1CB6,180,0,318);
move(1.60,0.06,0.00);  object(0x1CB6,180,0,318);
move(1.60,0.06,0.00);  object(0x1CB6,180,0,318);
move(1.60,0.06,0.00);  object(0x1CB6,180,0,318);
move(1.60,0.06,0.00);  object(0x1CB6,180,0,318);
move(1.60,0.06,0.00);  object(0x1CB6,180,0,318);
move(1.60,0.06,0.00);  object(0x1CB6,180,0,318);
move(1.50,0.06,0.00);  object(0x1CB6,180,0,318);
move(1.60,0.06,0.00);  object(0x1CB6,180,0,318);
move(1.60,0.06,0.00);  object(0x1CB6,180,0,318);
move(1.60,0.06,0.00);  object(0x1CB6,180,0,318);
move(1.60,0.06,0.00);  object(0x1CB6,180,0,318);
move(1.60,0.06,0.00);  object(0x1CB6,180,0,318);
move(-142.98,-3.10,0.00);  object(0x1CB6,180,0,321);
move(1.60,-0.02,0.00);  object(0x1CB6,180,0,321);
move(1.60,-0.02,0.00);  object(0x1CB6,180,0,321);
move(1.60,-0.02,0.00);  object(0x1CB6,180,0,321);
move(1.60,-0.02,0.00);  object(0x1CB6,180,0,321);
move(1.60,-0.02,0.00);  object(0x1CB6,180,0,321);
move(1.60,-0.02,0.00);  object(0x1CB6,180,0,321);
move(1.60,-0.02,0.00);  object(0x1CB6,180,0,321);
move(-83.85,-0.99,0.00);  object(0x1CB6,180,0,321);
move(1.60,-0.04,0.00);  object(0x1CB6,180,0,321);
move(1.60,-0.04,0.00);  object(0x1CB6,180,0,321);
move(-71.31,69.43,0.00);  object(0x1CB6,180,0,80);
move(-0.80,-1.38,0.00);  object(0x1CB6,180,0,80);
move(-0.80,-1.38,0.00);  object(0x1CB6,180,0,80);
move(-0.80,-1.38,0.00);  object(0x1CB6,180,0,80);
move(59.39,51.73,0.00);  object(0x1CB6,180,0,111);
move(-1.40,-0.77,0.00);  object(0x1CB6,180,0,111);
move(-1.40,-0.77,0.00);  object(0x1CB6,180,0,111);
move(-1.40,-0.77,0.00);  object(0x1CB6,180,0,111);
move(-1.40,-0.77,0.00);  object(0x1CB6,180,0,111);
move(-1.40,-0.77,0.00);  object(0x1CB6,180,0,111);
move(-1.40,-0.77,0.00);  object(0x1CB6,180,0,111);
move(-1.40,-0.77,0.00);  object(0x1CB6,180,0,111);
move(-1.40,-0.77,0.00);  object(0x1CB6,180,0,111);
move(84.27,19.79,0.00);  object(0x1CB6,180,0,136);
move(-1.60,-0.11,0.00);  object(0x1CB6,180,0,136);
move(-1.60,-0.11,0.00);  object(0x1CB6,180,0,136);
move(-1.60,-0.11,0.00);  object(0x1CB6,180,0,136);
move(-1.60,-0.11,0.00);  object(0x1CB6,180,0,136);
move(-1.60,-0.11,0.00);  object(0x1CB6,180,0,136);
move(-1.60,-0.11,0.00);  object(0x1CB6,180,0,136);
move(-1.60,-0.11,0.00);  object(0x1CB6,180,0,136);
move(-1.60,-0.11,0.00);  object(0x1CB6,180,0,136);
move(-1.60,-0.11,0.00);  object(0x1CB6,180,0,136);
move(90.86,4.34,0.00);  object(0x1CB6,180,0,138);
move(-1.60,-0.06,0.00);  object(0x1CB6,180,0,138);
move(-1.60,-0.06,0.00);  object(0x1CB6,180,0,138);
move(-1.60,-0.06,0.00);  object(0x1CB6,180,0,138);
move(-1.60,-0.06,0.00);  object(0x1CB6,180,0,138);
moveto(-460.74,-365.33,10.90);  object(0x1CB6,180,0,39);
move(-1.00,-1.25,0.00);  object(0x1CB6,180,0,39);
move(-1.00,-1.25,0.00);  object(0x1CB6,180,0,39);
move(-1.00,-1.25,0.00);  object(0x1CB6,180,0,39);
move(-1.00,-1.25,0.00);  object(0x1CB6,180,0,39);
move(-1.00,-1.25,0.00);  object(0x1CB6,180,0,39);
move(37.46,6.66,0.00);  object(0x1CB6,180,0,320);
move(1.03,-1.23,0.00);  object(0x1CB6,180,0,320);
move(1.03,-1.23,0.00);  object(0x1CB6,180,0,320);
move(1.03,-1.23,0.00);  object(0x1CB6,180,0,320);
move(1.03,-1.23,0.00);  object(0x1CB6,180,0,320);
move(143.46,-122.08,0.00);  object(0x1CB6,180,0,36);
move(-0.93,-1.30,0.00);  object(0x1CB6,180,0,36);
move(-0.93,-1.30,0.00);  object(0x1CB6,180,0,36);
move(-283.42,-7.91,0.00);  object(0x1CB6,180,0,270);
move(1.60,0.01,0.00);  object(0x1CB6,180,0,270);
move(1.60,0.01,0.00);  object(0x1CB6,180,0,270);
move(1.60,0.01,0.00);  object(0x1CB6,180,0,270);
move(1.60,0.01,0.00);  object(0x1CB6,180,0,270);
move(1.60,0.01,0.00);  object(0x1CB6,180,0,270);
move(1.60,0.01,0.00);  object(0x1CB6,180,0,270);
move(1.60,0.01,0.00);  object(0x1CB6,180,0,270);
move(-67.40,3.08,0.00);  object(0x1CB6,180,0,297);
move(1.42,-0.73,0.00);  object(0x1CB6,180,0,297);
move(1.42,-0.73,0.00);  object(0x1CB6,180,0,297);
move(1.42,-0.73,0.00);  object(0x1CB6,180,0,297);
move(1.42,-0.73,0.00);  object(0x1CB6,180,0,297);
move(-33.55,30.67,0.00);  object(0x1CB6,180,0,128);
move(-1.27,0.98,0.00);  object(0x1CB6,180,0,128);
move(-1.27,0.98,0.00);  object(0x1CB6,180,0,128);
move(-1.27,0.98,0.00);  object(0x1CB6,180,0,128);
move(-1.27,0.98,0.00);  object(0x1CB6,180,0,128);
move(-1.27,0.98,0.00);  object(0x1CB6,180,0,128);
move(-1.27,0.98,0.00);  object(0x1CB6,180,0,128);
move(-1.27,0.98,0.00);  object(0x1CB6,180,0,128);
move(194.97,-9.81,0.00);  object(0x1CB6,180,0,143);
move(-0.96,1.28,0.00);  object(0x1CB6,180,0,143);
move(-0.96,1.28,0.00);  object(0x1CB6,180,0,143);
move(-0.96,1.28,0.00);  object(0x1CB6,180,0,143);
move(34.06,-2.70,0.00);  object(0x1CB6,180,0,217);
move(0.96,1.28,0.00);  object(0x1CB6,180,0,217);
move(0.96,1.28,0.00);  object(0x1CB6,180,0,217);
// Speed Strips
moveto(-284.91,-470.12,3.65);  object(0x1CBA,90,0,270);
move(-1.00,-0.00,0.00);  object(0x1CBA,90,0,270);
move(-1.00,-0.00,0.00);  object(0x1CBA,90,0,270);
move(-1.00,-0.00,0.00);  object(0x1CBA,90,0,270);
move(-1.00,-0.00,0.00);  object(0x1CBA,90,0,270);
move(-1.00,-0.00,0.00);  object(0x1CBA,90,0,270);
move(-1.00,-0.00,0.00);  object(0x1CBA,90,0,270);
move(-19.20,-10.04,0.00);  object(0x1CBA,90,0,270);
move(1.00,0.00,0.00);  object(0x1CBA,90,0,270);
move(-2.00,-0.00,0.00);  object(0x1CBA,90,0,270);
move(-1.00,-0.00,0.00);  object(0x1CBA,90,0,270);
move(-1.00,-0.00,0.00);  object(0x1CBA,90,0,270);
move(-1.00,-0.00,0.00);  object(0x1CBA,90,0,270);
move(-1.00,-0.00,0.00);  object(0x1CBA,90,0,270);
move(-161.45,-11.16,0.10);  object(0x1CBA,90,0,270);
move(-1.00,-0.01,0.00);  object(0x1CBA,90,0,270);
move(-1.00,-0.01,0.00);  object(0x1CBA,90,0,270);
move(-1.00,-0.01,0.00);  object(0x1CBA,90,0,270);
move(-1.00,-0.01,0.00);  object(0x1CBA,90,0,270);
move(-1.00,-0.01,0.00);  object(0x1CBA,90,0,270);
move(-111.95,15.52,-0.10);  object(0x1CBA,90,0,266);
move(-1.00,-0.06,0.00);  object(0x1CBA,90,0,266);
move(-1.00,-0.06,0.00);  object(0x1CBA,90,0,266);
move(-1.00,-0.06,0.00);  object(0x1CBA,90,0,266);
move(-1.00,-0.06,0.00);  object(0x1CBA,90,0,266);
move(-1.00,-0.06,0.00);  object(0x1CBA,90,0,266);
move(-1.00,-0.06,0.00);  object(0x1CBA,90,0,266);
move(84.50,114.69,0.00);  object(0x1CBA,90,0,90);
move(1.00,0.00,0.00);  object(0x1CBA,90,0,90);
move(1.00,0.00,0.00);  object(0x1CBA,90,0,90);
move(1.00,0.00,0.00);  object(0x1CBA,90,0,90);
move(1.00,0.00,0.00);  object(0x1CBA,90,0,90);
move(1.00,0.00,0.00);  object(0x1CBA,90,0,90);
move(109.06,-3.27,0.00);  object(0x1CBA,90,0,90);
move(1.00,0.00,0.00);  object(0x1CBA,90,0,90);
move(1.00,0.00,0.00);  object(0x1CBA,90,0,90);
move(1.00,0.00,0.00);  object(0x1CBA,90,0,90);
move(1.00,0.00,0.00);  object(0x1CBA,90,0,90);
move(1.00,0.00,0.00);  object(0x1CBA,90,0,90);
move(1.00,0.00,0.00);  object(0x1CBA,90,0,90);
off()


#cheat tallest point floor
moveto(-360.14,1264.19,372.13); object(0x1CA4,85,0,46);
move(1.87,1.21,-0.00); object(0x1CA4,85,0,46);
move(2.11,1.87,0.10); object(0x1CA4,90,0,36);
move(2.07,0.69,-0.20); object(0x1CA4,90,0,217);
move(1.69,1.59,0.10); object(0x1CA4,90,0,217);
move(1.30,0.90,0.10); object(0x1CA4,90,0,39);
move(1.78,1.55,0.00); object(0x1CA4,90,0,39);
move(-2.36,2.72,0.00); object(0x1CA4,90,0,39);
move(-1.52,-1.32,0.00); object(0x1CA4,90,0,39);
move(-1.51,-1.32,0.00); object(0x1CA4,90,0,39);
move(-1.06,-0.92,0.00); object(0x1CA4,90,0,39);
move(-0.35,-0.31,0.00); object(0x1CA4,90,0,39);
move(-1.44,-1.25,0.00); object(0x1CA4,90,0,39);
move(-1.86,-1.62,0.00); object(0x1CA4,90,0,39);
move(-1.80,-1.57,0.00); object(0x1CA4,90,0,39);
move(-1.87,-1.63,0.00); object(0x1CA4,90,0,39);
move(194.95,-61.93,-88.18); object(0x1CA2,85,0,102);
move(-181.73,73.88,87.41); object(0x1C93,0,0,312);
move(1.30,-1.66,0.00); object(0x1C93,0,0,312);
move(3.39,-0.61,0.10); object(0x1C93,0,0,312);
move(-1.52,-0.80,-0.20); object(0x1C93,0,0,311);
move(-1.17,-0.93,0.00); object(0x1C93,0,0,311);
move(-1.54,-1.12,0.00); object(0x1C93,0,0,311);
move(-0.08,3.54,2.30); object(0x1CA0,0,0,297);
move(-346.71,1278.01,372.06); object(0x1CA4,90,0,132);
move(4.49,-2.67,0.00); object(0x1CA4,90,0,145);
move(3.00,2.12,0.00); object(0x1CA4,90,0,146);
move(1.74,1.18,0.00); object(0x1CA4,90,0,146);
move(-1.62,1.94,0.10); object(0x1CA4,90,0,31);
move(-2.33,1.37,0.00); object(0x1CA4,90,0,31);
move(-1.28,-2.17,0.00); object(0x1CA4,90,0,31);
move(1.89,-1.12,0.00); object(0x1CA4,90,0,31);
move(-1.70,-1.14,0.00); object(0x1CA4,90,0,21);
move(-1.01,0.06,0.10); object(0x1CA4,90,0,280);
move(-5.07,2.11,-0.20); object(0x1CA4,90,0,311);
move(3.98,2.10,0.00); object(0x1CA4,90,0,303);
move(0.72,0.96,0.00); object(0x1CA4,90,0,302);
move(-2.12,1.14,0.00); object(0x1CA4,90,0,306);
move(-2.23,-2.29,0.00); object(0x1CA4,90,0,309);
move(-1.10,5.18,0.00); object(0x1CA4,90,0,34);
move(1.41,-0.51,0.00); object(0x1CA4,90,0,211);
move(-349.44,1284.68,371.99); object(0x1CA4,90,0,311);
move(-1.70,-3.56,0.00); object(0x1CA4,90,0,311);
move(-1.26,-2.72,0.00); object(0x1CA4,90,0,311);
move(-2.37,-2.30,0.00); object(0x1CA4,90,0,311);
move(-2.94,-2.86,0.00); object(0x1CA4,90,0,311);
move(-2.94,-2.86,0.00); object(0x1CA4,90,0,311);
move(-2.29,-2.23,0.00); object(0x1CA4,90,0,311);
move(-2.51,-2.44,0.00); object(0x1CA4,90,0,311);
move(0.32,-2.62,0.00); object(0x1CA4,90,0,311);
move(1.58,-1.62,0.00); object(0x1CA4,90,0,311);
move(0.41,-0.56,0.00); object(0x1CA4,90,0,327);
move(3.14,1.98,0.00); object(0x1CA4,90,0,327);
move(2.84,1.92,0.00); object(0x1CA4,90,0,323);
move(-0.82,0.92,0.00); object(0x1CA4,90,0,326);
move(-1.49,2.52,0.00); object(0x1CA4,90,0,320);
move(3.05,2.10,0.00); object(0x1CA4,90,0,320);
move(2.12,3.09,0.00); object(0x1CA4,90,0,320);
move(1.02,-2.07,-1.90); object(0x1CA4,90,0,134);
move(-1.43,-1.39,0.00); object(0x1CA4,90,0,311);

