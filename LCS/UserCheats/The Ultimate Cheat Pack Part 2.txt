#cheat The Ultimate Cheat Pack Part 2
//Hi this is my best cheat pack ever.
//This took me days to put together so dont be too harsh with scoring
//By Rinico 

sethex(08b89d35,   32,   55,   53,   58,   44,   53,   58)

// Thanks to Waterbottle (Lock Camera in Car)
// Remove the line below to look in different directions
sethex(pplayer + 0x538,   0x00);
setchar(0x08B83468,   0);
setfloat(0x08B83374,   -6);
// Remove the 2 lines below to look in different directions
#off
sethex(pplayer + 0x538,   0x01);

moveto(156,   411.3,   53.8);  object(0x1bf,   0,   90,   0);
moveto(156,   411.3,   53.8);  object(0x1bf,   0,   90,   0);
moveto(216,   386.87,   49.5);  object(0x251,   270,   0,   0);
moveto(195.02,   406.3,   50.5);  object(0xf01,   270,   0,   90);
moveto(202.32,   406.3,   50.5);  object(0xf01,   270,   0,   90);
moveto(209.62,   406.3,   50.5);  object(0xf01,   270,   0,   90);
moveto(216.92,   406.3,   50.5);  object(0xf01,   270,   0,   90);
moveto(224.22,   406.3,   50.5);  object(0xf01,   270,   0,   90);
moveto(215.5,   405.16,   49.8);  object(0x239,   0,   0,   0);
moveto(212.23,   409.07,   53);  object(0x1bf,   0,   0,   90);
moveto(216.1,   405.17,   52.1);  object(0x239,   0,   0,   180);
moveto(215.5,   405.33,   49.8);  object(0x239,   0,   0,   0);
moveto(219.5,   409.07,   53);  object(0x1bf,   0,   0,   90);
moveto(215.8,   413.23,   53);  object(0x1bf,   0,   0,   0);
moveto(210.96,   367.26,   56.7);  object(0x216,   0,   0,   0);
moveto(210.96,   367.26,   57.1);  object(0x216,   0,   0,   13);
moveto(217.19,   418.29,   47.5);  object(0xcdb,   90,   0,   0);
moveto(218.39,   417.29,   49.3);  object(0x249,   0,   0,   90);
moveto(216,   409.23,   49.71);  object(0x1bf,   90,   0,   90);
moveto(215.5,   409.23,   56.4);  object(0x1bf,   90,   0,   90);
moveto(216,   409.23,   56.41);  object(0x1bf,   90,   0,   90);
moveto(218.39,   416.69,   49.3);  object(0x249,   0,   0,   270);
moveto(217,   416.64,   49.3);  object(0x249,   0,   0,   45);
moveto(216.1,   416.44,   49.3);  object(0x249,   0,   0,   0);
moveto(216.39,   417.29,   49.3);  object(0x249,   0,   0,   90);
moveto(216,   412.62,   52);  object(0xf92,   0,   0,   90);
moveto(218.1,   416.44,   49.3);  object(0x249,   0,   0,   0);
moveto(212.93,   410.47,   52);  object(0xf92,   0,   0,   0);
moveto(218.85,   410.47,   52);  object(0xf92,   0,   0,   0);
moveto(231.84,   355.86,   50.5);  object(0xf90,   90,   0,   0);
moveto(231.84,   361.86,   50.5);  object(0xf92,   90,   0,   0);
moveto(210.58,   329.26,   49);  object(0xf25,   0,   0,   160);
moveto(193.10,   255.50,   49);  object(0xf25,   0,   0,   0);
moveto(195,   351.7,   50.3);  object(0x218,   0,   0,   0);
moveto(195.2,   353,   50.3);  object(0x218,   0,   0,   0);
moveto(195.2,   352.2,   51.1);  object(0x217,   0,   0,   45);
moveto(217.30,   250,   50.5);  object(0x1ee,   0,   0,   0);
move(-8,   0,   0);  object(0x1ee,   0,   0,   0);
move(-8,   0,   0);  object(0x1ee,   0,   0,   0);
move(-8,   0,   0);  object(0x1ee,   0,   0,   0);
moveto(215.5,   409.23,   49.7);  object(0x1bf,   90,   0,   90);
moveto(217,   417.09,   49.3);  object(0x249,   0,   0,   315);
moveto(194.02,   361.50,   50.5);  object(0xf01,   270,   0,   90);
move(-.02,   -24.9,   0);  object(0xf01,   270,   0,   90);
moveto(201.3,   336.6,   50.5);  object(0xf01,   270,   0,   90);
moveto(208.6,   336.6,   50.5);  object(0xf01,   270,   0,   90);
moveto(215.9,   336.6,   50.5);  object(0xf01,   270,   0,   90);
moveto(215.9,   311.7,   50.5);  object(0xf01,   270,   0,   90);
move(-7.3,   0,   0);  object(0xf01,   270,   0,   90);
move(-7.3,   0,   0);  object(0xf01,   270,   0,   90);
move(-7.3,   0,   0);  object(0xf01,   270,   0,   90);
moveto(215.9,   286.8,   50.5);  object(0xf01,   270,   0,   90);
move(-7.3,   0,   0);  object(0xf01,   270,   0,   90);
move(-7.3,   0,   0);  object(0xf01,   270,   0,   90);
move(-7.3,   0,   0);  object(0xf01,   270,   0,   90);
moveto(223.2,   286.8,   50.5);  object(0xf01,   270,   0,   90);
moveto(217.46,   417.09,   49.3);  object(0x249,   0,   0,   225);
moveto(216.39,   416.69,   49.3);  object(0x249,   0,   0,   270);
moveto(223.2,   336.6,   50.5);  object(0xf01,   270,   0,   90);
moveto(223.2,   311.7,   50.5);  object(0xf01,   270,   0,   90);
move(-7.3,   0,   0);  object(0xf01,   270,   0,   90);
move(-7.3,   0,   0);  object(0xf01,   270,   0,   90);
move(-7.3,   0,   0);  object(0xf01,   270,   0,   90);
move(-7.3,   0,   0);  object(0xf01,   270,   0,   90);
moveto(223.2,   261.9,   50.5);  object(0xf01,   270,   0,   90);
move(-7.3,   0,   0);  object(0xf01,   270,   0,   90);
move(-7.3,   0,   0);  object(0xf01,   270,   0,   90);
move(-7.3,   0,   0);  object(0xf01,   270,   0,   90);
move(-7.3,   0,   0);  object(0xf01,   270,   0,   90);
moveto(195.02,   381.4,   50.5);  object(0xf01,   270,   0,   90);
move(7.3,   0,   0);  object(0xf01,   270,   0,   90);
move(7.3,   0,   0);  object(0xf01,   270,   0,   90);
move(7.3,   0,   0);  object(0xf01,   270,   0,   90);
move(7.3,   0,   0);  object(0xf01,   270,   0,   90);
moveto(230.5,   336.6,   50.5);  object(0xf01,   270,   0,   90);
moveto(230.5,   311.7,   50.5);  object(0xf01,   270,   0,   90);
move(0,   24.9,   0);  object(0xf01,   270,   0,   90);
move(0,   24.9,   0);  object(0xf01,   270,   0,   90);
moveto(237.8,   336.6,   50.5);  object(0xf01,   270,   0,   90);
moveto(237.8,   311.7,   50.5);  object(0xf01,   270,   0,   90);
moveto(237.8,   361.5,   50.5);  object(0xf01,   270,   0,   90);
move(0,   24.9,   0);  object(0xf01,   270,   0,   90);
moveto(217.35,   416.63,   49.3);  object(0x249,   0,   0,   135);
moveto(237.8,   361.5,   50.5);  object(0xf01,   270,   0,   90);
move(0,   24.9,   0);  object(0xf01,   270,   0,   90);
moveto(230.5,   336.6,   50.5);  object(0xf01,   270,   0,   90);
move(0,   -24.9,   0);  object(0xf01,   270,   0,   90);
moveto(230.5,   361.5,   50.5);  object(0xf01,   270,   0,   90);
move(0,   24.9,   0);  object(0xf01,   270,   0,   90);
moveto(237.8,   336.6,   50.5);  object(0xf01,   270,   0,   90);
move(0,   -24.9,   0);  object(0xf01,   270,   0,   90);
moveto(237.8,   361.5,   50.5);  object(0xf01,   270,   0,   90);
move(0,   24.9,   0);  object(0xf01,   270,   0,   90);
moveto(245.1,   336.6,   50.5);  object(0xf01,   270,   0,   90);
move(0,   24.9,   0);  object(0xf01,   270,   0,   90);
moveto(252.4,   336.6,   50.5);  object(0xf01,   270,   0,   90);
move(0,   24.9,   0);  object(0xf01,   270,   0,   90);
moveto(259.7,   336.6,   50.5);  object(0xf01,   270,   0,   90);
move(0,   24.9,   0);  object(0xf01,   270,   0,   90);
moveto(267,   361.5,   50.5);  object(0xf01,   270,   0,   90);
move(0,   -24.9,   0);  object(0xf01,   270,   0,   90);
moveto(274.3,   336.6,   50.5);  object(0xf01,   270,   0,   90);
move(0,   24.9,   0);  object(0xf01,   270,   0,   90);
moveto(252.4,   371.9,   54);  object(0xfab,   0,   0,   90);
move(0,   -5.2,   0);  object(0xfab,   0,   0,   90);
move(0,   -5.2,   0);  object(0xfab,   0,   0,   90);
move(0,   -5.2,   0);  object(0xfab,   0,   0,   90);
move(0,   -5.2,   0);  object(0xfab,   0,   0,   90);
move(0,   -5.2,   0);  object(0xfab,   0,   0,   90);
move(0,   -5.2,   0);  object(0xfab,   0,   0,   90);
move(0,   -5.2,   0);  object(0xfab,   0,   0,   90);
move(0,   -5.2,   0);  object(0xfab,   0,   0,   90);
move(0,   -5.2,   0);  object(0xfab,   0,   0,   90);
moveto(198,   370,   53);  object(0x249,   0,   270,   270);
moveto(198,   370,   53.8);  object(0x249,   0,   90,   270);
moveto(198.5,   370,   53.4);  object(0x249,   90,   0,   180);
moveto(198.9,   370,   53);  object(0x249,   0,   270,   270);
moveto(198.9,   370,   53.8);  object(0x249,   0,   90,   270);
moveto(199.9,   370,   53);  object(0x249,   0,   270,   270);
moveto(199.9,   370,   53.8);  object(0x249,   0,   90,   270);
moveto(272,   359,   51);  object(0xcd1,   0,   0,   0);
moveto(204,   362.12,   50);  object(0x1de,   0,   0,   0);
moveto(212.51,   366.3,   53);  object(0x1bf,   0,   0,   90);
moveto(210.51,   367.93,   51);  object(0x251,   0,   0,   180);
moveto(208.31,   366.93,   51);  object(0x251,   0,   0,   0);
moveto(205.93,   365.23,   51);  object(0x251,   0,   0,   270);
moveto(207.98,   362.55,   51);  object(0x251,   0,   0,   180);
moveto(210.12,   363.52,   51);  object(0x251,   0,   0,   90);
moveto(220,   366.2,   53);  object(0x1bf,   0,   0,   90);
moveto(213.5,   362.12,   50);  object(0x1de,   0,   0,   0);
moveto(227.19,   369.26,   50.2);  object(0x218,   0,   0,   45);
moveto(221.34,   366.24,   49.8);  object(0xfbd,   0,   0,   0);
moveto(223.45,   363.98,   51);  object(0x251,   0,   0,   180);
moveto(219.5,   350.7,   53);  object(0x1bf,   0,   0,   90);
moveto(227.5,   354.8,   50);  object(0x1de,   0,   0,   180);
moveto(196,   358.7,   51.2);  object(0x210,   0,   0,   0);
moveto(195.99,   357.7,   56);  object(0x1bf,   0,   0,   90);
moveto(195.7,   355.7,   58);  object(0x23f,   0,   0,   90);
moveto(195.7,   359.7,   58);  object(0x23f,   0,   0,   90);
moveto(200,   346.7,   53);  object(0x1bf,   0,   0,   0);
move(8,   0,   0);  object(0x1bf,   0,   0,   0);
move(8,   0,   0);  object(0x1bf,   0,   0,   0);
move(8,   0,   0);  object(0x1bf,   0,   0,   0);
moveto(200,   370.2,   53);  object(0x1bf,   0,   0,   0);
move(8,   0,   0);  object(0x1bf,   0,   0,   0);
move(8,   0,   0);  object(0x1bf,   0,   0,   0);
move(8,   0,   0);  object(0x1bf,   0,   0,   0);
moveto(196,   350.7,   53);  object(0x1bf,   0,   0,   90);
move(.01,   16,   0);  object(0x1bf,   0,   0,   90);
move(-.01,   -4,   0);  object(0x1bf,   0,   0,   90);
move(.01,   -9.7,   0);  object(0x1bf,   0,   0,   90);
moveto(228,   350.7,   53);  object(0x1bf,   0,   0,   90);
move(.01,   16,   0);  object(0x1bf,   0,   0,   90);
moveto(230,   358.7,   51.5);  object(0x1bf,   45,   0,   90);
moveto(200,   350,   49.6);  object(0x1bf,   90,   0,   0);
moveto(200,   363.4,   49.6);  object(0x1bf,   90,   0,   0);
moveto(200,   356.7,   49.6);  object(0x1bf,   90,   0,   0);
moveto(200,   366.95,   49.59);  object(0x1bf,   90,   0,   0);
moveto(208,   350,   49.6);  object(0x1bf,   90,   0,   0);
moveto(208,   363.4,   49.6);  object(0x1bf,   90,   0,   0);
moveto(208,   356.7,   49.6);  object(0x1bf,   90,   0,   0);
moveto(208,   366.95,   49.59);  object(0x1bf,   90,   0,   0);
moveto(216,   350,   49.6);  object(0x1bf,   90,   0,   0);
moveto(216,   363.4,   49.6);  object(0x1bf,   90,   0,   0);
moveto(216,   356.7,   49.6);  object(0x1bf,   90,   0,   0);
moveto(216,   366.95,   49.59);  object(0x1bf,   90,   0,   0);
moveto(224,   350,   49.6);  object(0x1bf,   90,   0,   0);
moveto(224,   363.4,   49.6);  object(0x1bf,   90,   0,   0);
moveto(224,   356.7,   49.6);  object(0x1bf,   90,   0,   0);
moveto(224,   366.95,   49.59);  object(0x1bf,   90,   0,   0);
moveto(200,   350,   56.3);  object(0x1bf,   90,   0,   0);
moveto(200,   363.4,   56.3);  object(0x1bf,   90,   0,   0);
moveto(200,   356.7,   56.3);  object(0x1bf,   90,   0,   0);
moveto(200,   366.95,   56.31);  object(0x1bf,   90,   0,   0);
moveto(208,   350,   56.3);  object(0x1bf,   90,   0,   0);
moveto(208,   363.4,   56.3);  object(0x1bf,   90,   0,   0);
moveto(208,   356.7,   56.3);  object(0x1bf,   90,   0,   0);
moveto(208,   366.95,   56.31);  object(0x1bf,   90,   0,   0);
moveto(216,   350,   56.3);  object(0x1bf,   90,   0,   0);
moveto(216,   363.4,   56.3);  object(0x1bf,   90,   0,   0);
moveto(216,   356.7,   56.3);  object(0x1bf,   90,   0,   0);
moveto(216,   366.95,   56.31);  object(0x1bf,   90,   0,   0);
moveto(224,   350,   56.3);  object(0x1bf,   90,   0,   0);
moveto(224,   363.4,   56.3);  object(0x1bf,   90,   0,   0);
moveto(224,   356.7,   56.3);  object(0x1bf,   90,   0,   0);
moveto(224,   366.95,   56.31);  object(0x1bf,   90,   0,   0);
moveto(204.01,   366.2,   53);  object(0x1bf,   0,   0,   90);
moveto(200,   362.12,   53);  object(0x1bf,   0,   0,   0);
moveto(200,   361.9,   51.2);  object(0x1c4,   0,   0,   0);
moveto(198.5,   354.7,   52);  object(0xcdb,   0,   0,   0);
moveto(203.5,   354.7,   52);  object(0xcdb,   0,   0,   0);
moveto(206,   350.7,   53);  object(0x1bf,   0,   0,   90);
moveto(206.2,   351.8,   49.7);  object(0xeff,   0,   0,   90);
move(-.5,   0,   0);  object(0xeff,   0,   0,   90);
moveto(200,   347.8,   49.7);  object(0xf36,   0,   0,   0);
moveto(205.39,   347.87,   50);  object(0x206,   0,   0,   90);
moveto(210.88,   366,   57.5);  object(0xf92,   315,   0,   0);
moveto(212.88,   407.65,   50);  object(0xf90,   90,   0,   0);
moveto(218.58,   407.65,   50);  object(0xf90,   90,   0,   0);
moveto(217.84,   412.66,   50);  object(0xf90,   90,   0,   90);
moveto(213.84,   412.66,   50);  object(0xf90,   90,   0,   90);
setfloat(09593410-0xBB80,   .939693,   -.241845,   .241845)
setfloat(09593420-0xBB80,   .34202,   .664463,   -.664463)
setfloat(09593430-0xBB80,   0,   .707107,   .707107)
setfloat(09593440-0xBB80,   212,   385,   52.6)
setshort(09593468-0xBB80,   0xfbe)
setfloat(095904d0-0xBB80,   -.984807753,   0,   -.173648178)
setfloat(095904e0-0xBB80,   .173648178,   0,   -.984807753)
setfloat(095904f0-0xBB80,   0,   -1,   0)
setfloat(09590500-0xBB80,   200.5,   347.8,   50.6)
setshort(09590528-0xBB80,   0xf03)
setfloat(0x08e2dbc0,   195.05,   360.08,   50.5);
setfloat(0x08e2db60,   194.60,   349.37,   50.5);
setfloat(0x08e2d800,   202.27,   347.92,   50.5);
setfloat(0x08e2d860,   197.63,   348.14,   50.5);
setchar(0x08e2dbf3,   0x00);
setchar(0x08e2dc10,   0xff);
setchar(0x08e2db93,   0x00);
setchar(0x08e2dbb0,   0xff);
setchar(0x08e2d833,   0x00);
setchar(0x08e2d850,   0xff);
setchar(0x08e2d893,   0x00);
setchar(0x08e2d8b0,   0xff);
setfloat(0996bf20,   223.39,   350.08,   51)
setshort(0996bf78,   0x001)
setfloat(0x08e2d8c0,   200.75,   351.5,   50);
setint(0x08e2d8d4,   0);
setchar(0x08e2d8dC,   0xff,   0xff);
setshort(0x08e2d8e6,   0x10f);
setchar(0x08e2d8f2,   0x0f);
setchar(0x08e2d8f3,   0x00);
setchar(0x08e2d910,   0xff);
setfloat(0x08e2d920,   212.73,   408,   52.14);
setint(0x08e2d934,   0);
setchar(0x08e2d93C,   0xff,   0xff);
setshort(0x08e2d946,   0x112);
setchar(0x08e2d952,   0x0f);
setchar(0x08e2d953,   0x00);
setchar(0x08e2d970,   0xff);
setfloat(0x08e2d980,   212.73,   409,   52.14);
setint(0x08e2d994,   0);
setchar(0x08e2d99C,   0xff,   0xff);
setshort(0x08e2d9a6,   0x119);
setchar(0x08e2d9b2,   0x0f);
setchar(0x08e2d9b3,   0x00);
setchar(0x08e2d9d0,   0xff);
setfloat(0x08e2d9e0,   212.73,   410,   52.14);
setint(0x08e2d9f4,   0);
setchar(0x08e2d9fC,   0xff,   0xff);
setshort(0x08e2da06,   0x113);
setchar(0x08e2da12,   0x0f);
setchar(0x08e2da13,   0x00);
setchar(0x08e2da30,   0xff);
setfloat(0x08e2da40,   212.73,   411,   52.14);
setint(0x08e2da54,   0);
setchar(0x08e2da5C,   0xff,   0xff);
setshort(0x08e2da66,   0x117);
setchar(0x08e2da72,   0x0f);
setchar(0x08e2da73,   0x00);
setchar(0x08e2da90,   0xff);
setfloat(0x08e2daa0,   215.9,   412.62,   52.14);
setint(0x08e2dab4,   0);
setchar(0x08e2dabC,   0xff,   0xff);
setshort(0x08e2dac6,   0x11f);
setchar(0x08e2dad2,   0x0f);
setchar(0x08e2dad3,   0x00);
setchar(0x08e2daf0,   0xff);
setfloat(0x08e2db00,   218.65,   410.21,   52.14);
setint(0x08e2db14,   0);
setchar(0x08e2db1C,   0xff,   0xff);
setshort(0x08e2db26,   0x111);
setchar(0x08e2db32,   0x01);
setchar(0x08e2db33,   0x00);
setchar(0x08e2db50,   0xff);
setint(0x08e2db74,   0);
setchar(0x08e2db7C,   0xff,   0xff);
setshort(0x08e2db86,   0xea9);
setchar(0x08e2db92,   0x01);
teleport(200,   315,   65)

setfloat(08B89E40,  272,  359,  51) 
setchar(08B89E30,  1) 
setfloat(08B89E80,  211.91,  387.30,  49.8) 
setchar(08B89E70,  1) 
setfloat(08B89Ec0,  214.2,  387.44,  49.8) 
setchar(08B89Eb0,  1) 
setfloat(08B89F00,  214.83,  385.1,  49.8) 
setchar(08B89Ef0,  1) 
setfloat(08B89F40,  213.03,  388.72,  49.8) 
setchar(08B89F30,  1) 
setfloat(08B89F80,  210.65,  385.54,  49.8) 
setchar(08B89F70,  1) 
setfloat(08B89Fc0,  213.09,  389.21,  49.8) 
setchar(08B89Fb0,  1) 
setfloat(08B8a000,  213.19,  387.21,  49.8) 
setchar(08B89Ff0,  1) 
setfloat(08B8a040,  216.34,  388.24,  49.8) 
setchar(08B8a030,  1) 
setfloat(08B8a080,  201.59,  385.3,  49.8) 
setchar(08B8a070,  1) 
setfloat(08B8a0c0,  211.34,  382.95,  49.8) 
setchar(08B8a0b0,  1) 
setfloat(08B8a100,  214.90,  388.48,  49.8) 
setchar(08B8a0f0,  1) 
setfloat(08B8a140,  216.14,  386.68,  49.8) 
setchar(08B8a130,  1) 
setfloat(08B8a180,  213.50,  383.05,  54.6) 
setchar(08B8a170,  1) 
setfloat(08B8a1c0,  207.97,  384.66,  51.1) 
setchar(08B8a1b0,  1) 
setfloat(08B8a200,  217.97,  381.76,  53.75) 
setchar(08B8a1f0,  1) 

moveto(457.43,   -762.89,   15.35); object(0x0259,   0,   90,   122);
move(-0.18,   -0.29,   0.50); object(0x0228,   0,   195,   122);
move(0.00,   0.00,   0.00); object(0x0209,   0,   195,   122);
move(-0.13,   -0.05,   0.80); object(0x0209,   0,   180,   122);
move(0.00,   0.00,   1.00); object(0x0209,   0,   180,   122);
move(0.00,   0.00,   0.00); object(0x0228,   0,   180,   122);
move(-0.90,   -0.01,   0.80); object(0x0213,   0,   90,   3);
move(-0.40,   0.03,   0.00); object(0x0213,   0,   270,   2);
move(-0.80,   0.03,   -0.80); object(0x0209,   0,   180,   2);
move(0.00,   0.00,   0.00); object(0x0228,   0,   180,   2);
move(0.00,   0.00,   -1.00); object(0x0209,   0,   180,   2);
move(-0.10,   0.26,   -0.70); object(0x0209,   0,   195,   27);
move(0.00,   0.00,   0.00); object(0x0228,   0,   195,   27);
move(-0.21,   0.35,   -0.50); object(0x0259,   0,   90,   62);
move(1.39,   -0.54,   3.30); object(0x0214,   0,   180,   81);
move(1.33,   1.69,   -10.30); object(0x0207,   0,   0,   62);
move(-1.40,   -0.66,   -13.80); object(0x0237,   0,   0,   62);
move(0.04,   -1.03,   24.40); object(0x022B,   0,   0,   238);
move(0.13,   0.02,   1.60); object(0x0214,   0,   90,   182);
move(0.59,   0.09,   0.00); object(0x024E,   0,   0,   187);
move(-1.42,   0.07,   0.00); object(0x024E,   0,   0,   177);
move(1.48,   -0.45,   -0.20); object(0x0213,   0,   95,   357);
move(-1.53,   0.12,   0.00); object(0x0213,   0,   265,   357);
move(-1.51,   -0.02,   -0.30); object(0x0209,   0,   240,   357);
move(0.00,   0.00,   0.00); object(0x0228,   0,   240,   357);
move(4.64,   0.06,   -0.10); object(0x0209,   0,   240,   177);
move(0.00,   0.00,   0.00); object(0x0228,   0,   240,   177);
move(0.49,   0.07,   -0.70); object(0x0209,   0,   200,   177);
move(-5.63,   -0.18,   0.00); object(0x0209,   0,   200,   347);
move(-0.10,   -0.01,   -0.90); object(0x0209,   0,   175,   347);
move(0.00,   0.00,   0.00); object(0x0228,   0,   175,   347);
move(5.81,   0.79,   0.50); object(0x0209,   90,   0,   358);
move(0.00,   0.00,   0.00); object(0x0228,   90,   0,   358);
move(0.05,   0.80,   0.00); object(0x0259,   90,   0,   178);
move(-6.00,   -1.59,   -1.20); object(0x0259,   20,   0,   98);
move(6.01,   1.77,   1.10); object(0x0240,   0,   75,   88);
move(-0.03,   0.41,   0.50); object(0x0240,   0,   0,   88);
move(-0.04,   -0.85,   0.00); object(0x0240,   0,   0,   88);
move(0.00,   0.00,   0.20); object(0x0240,   0,   0,   88);
move(0.04,   0.83,   0.00); object(0x0240,   0,   0,   88);
move(-0.01,   -0.29,   -0.50); object(0x0240,   0,   0,   88);
move(0.05,   0.99,   0.50); object(0x0240,   0,   0,   88);
move(0.00,   0.00,   -0.30); object(0x0240,   0,   0,   88);
move(-0.02,   -0.43,   0.60); object(0x0240,   0,   0,   88);
move(0.03,   0.59,   -1.00); object(0x0240,   0,   90,   88);
move(0.02,   0.43,   0.60); object(0x0240,   0,   0,   88);
move(0.04,   0.88,   0.00); object(0x0240,   0,   0,   88);
move(0.02,   0.43,   0.00); object(0x0126,   0,   0,   88);
move(0.00,   0.00,   -0.20); object(0x0126,   0,   0,   88);
move(-3.15,   -4.50,   0.90); object(0x0213,   0,   0,   1);
move(0.00,   0.00,   1.50); object(0x0FA2,   0,   180,   1);
move(0.00,   0.00,   0.00); object(0x0FA2,   0,   180,   1);
move(22.69,   -29.16,   -5.50); object(0x025E,   0,   0,   183);
move(-22.64,   29.04,   5.90); object(0x023B,   0,   0,   89);
move(0.60,   -0.04,   0.50); object(0x0226,   0,   160,   169);
move(-0.60,   0.04,   0.00); object(0x0226,   0,   200,   169);
move(-0.03,   -0.05,   -0.30); object(0x0240,   0,   0,   272);
move(0.20,   -0.01,   0.00); object(0x0240,   0,   0,   272);
move(0.10,   -0.00,   0.00); object(0x0240,   0,   0,   272);
move(0.20,   -0.01,   0.00); object(0x0240,   0,   0,   272);
move(0.20,   -0.01,   0.00); object(0x0240,   0,   0,   272);
move(-0.10,   0.00,   0.20); object(0x0240,   0,   0,   272);
move(-0.60,   0.02,   0.00); object(0x0240,   0,   0,   272);
teleport(456.50,   -756.05,   16.16);

setshort(0x992FDC0,   0x20,   0x20,   0x20,   0x20,   0x72,   0x6f,   0x62,   0x6f,   0x74);
setchar(0x945aff1,   0x50);
setchar(0x945aff0,   0x34);
setshort(0x9442430,   250);
setfloat(0x944242c,   1.075);
setfloat(0x945af78,   0.55);
setfloat(0x945aff4,   0.00213);
setfloat(0x945b028,   1.0625);
setfloat(0x945af90,   -0.1875);
setfloat(0x945af94,   -0.05);
sethex(0x945b040,   0x23,   0x09,   0x02,   0x05);
setchar(0x967E6FC,   0xFF,   0xFF,   0x00);
sethex(0x944fb24,   0xFF,   0xFF,   0x00);
sethex(0x944fb14,   0xFF,   0x00,   0xFF);
setint(0x8E38A38,   159);
sethex(0x8E38A5E,   0x01,   0x00);
teleport(292.22,   -440.37,   26.02);
setchar(pplayer + 0xB84,   0x00);

moveto(-973.84,  -981.71,  11.98);  object(0x0FAA,  340,  0,  270); 
move(-8.84,  -0.04,  3.80);  object(0x0FAA,  335,  0,  270); 
move(-7.88,  0.01,  4.30);  object(0x0FAA,  330,  0,  270); 
move(-6.62,  -0.06,  4.10);  object(0x01BF,  305,  0,  90); 
move(-5.52,  -0.03,  3.50);  object(0x01BF,  300,  0,  90); 
move(-5.56,  -0.03,  2.80);  object(0x01BF,  295,  0,  90); 
move(-5.96,  -0.04,  2.40);  object(0x01BF,  290,  0,  90); 
move(-6.56,  -0.09,  1.40);  object(0x01BF,  275,  0,  90); 
move(-5.99,  -0.03,  0.30);  object(0x01BF,  270,  0,  90); 
move(-6.35,  -0.03,  -0.80);  object(0x01BF,  255,  0,  90); 
move(-6.09,  -0.03,  -2.80);  object(0x01BF,  235,  0,  90); 
move(-4.77,  -0.02,  -4.40);  object(0x01BF,  220,  0,  90); 
move(-3.52,  -0.02,  -5.50);  object(0x01BF,  205,  0,  90); 
move(-3.36,  -0.02,  -4.30);  object(0x01BF,  230,  0,  90); 
move(-3.11,  -0.01,  -2.00);  object(0x01BF,  245,  0,  90); 
move(-3.85,  -0.02,  -1.00);  object(0x01BF,  260,  0,  90); 
move(-5.43,  -0.02,  -0.60);  object(0x01BF,  270,  0,  90); 
move(-5.50,  -0.03,  0.40);  object(0x01BF,  280,  0,  90); 
move(-5.13,  -0.02,  1.30);  object(0x01BF,  290,  0,  90); 
move(-4.65,  -0.02,  2.10);  object(0x01BF,  300,  0,  90); 
move(-4.38,  -0.02,  3.40);  object(0x01BF,  315,  0,  90); 
move(-3.41,  -0.02,  4.00);  object(0x01BF,  325,  0,  90); 
move(-3.27,  -0.02,  5.60);  object(0x01BF,  335,  0,  90); 
move(-2.04,  -0.01,  5.50);  object(0x01BF,  345,  0,  90); 
move(-0.78,  -0.00,  5.20);  object(0x01BF,  0,  0,  90); 
move(-0.60,  -0.00,  6.50);  object(0x01BF,  350,  0,  90); 
move(-1.96,  -0.01,  6.10);  object(0x01BF,  335,  0,  90); 
move(-3.55,  -0.02,  5.50);  object(0x01BF,  320,  0,  90); 
move(-4.91,  -0.02,  4.50);  object(0x01BF,  305,  0,  90); 
move(-5.64,  -0.03,  2.90);  object(0x01BF,  290,  0,  90); 
move(-6.24,  -0.03,  1.70);  object(0x01BF,  280,  0,  90); 
move(-6.18,  -0.03,  0.50);  object(0x01BF,  270,  0,  90); 
move(-6.64,  -0.03,  -0.60);  object(0x01BF,  260,  0,  90); 
move(-6.15,  -0.03,  -2.30);  object(0x01BF,  240,  0,  90); 
move(-5.28,  -0.02,  -4.00);  object(0x01BF,  225,  0,  90); 
move(-4.06,  -0.02,  -5.30);  object(0x01BF,  210,  0,  90); 
move(-2.81,  -0.01,  -6.10);  object(0x01BF,  200,  0,  90); 
move(-2.23,  -0.01,  -6.10);  object(0x01BF,  200,  0,  90); 
move(-2.18,  -0.01,  -6.00);  object(0x01BF,  200,  0,  90); 
move(-2.55,  -0.01,  -4.90);  object(0x01BF,  215,  0,  90); 
move(-3.07,  -0.01,  -3.70);  object(0x01BF,  225,  0,  90); 
move(-4.15,  -0.02,  -2.80);  object(0x01BF,  250,  0,  90); 
move(-5.19,  -0.02,  -1.40);  object(0x01BF,  260,  0,  90); 
move(-5.16,  -0.02,  -0.50);  object(0x01BF,  270,  0,  90); 
move(-6.11,  -0.02,  0.00);  object(0x01BF,  270,  0,  90); 
move(-5.30,  -0.02,  0.70);  object(0x01BF,  285,  0,  90); 
move(-5.47,  -0.02,  2.20);  object(0x01BF,  300,  0,  90); 
move(-4.71,  -0.02,  3.90);  object(0x01BF,  320,  0,  90); 
move(-5.06,  -0.02,  4.20);  object(0x01BF,  300,  0,  90); 
move(-5.94,  -0.03,  2.10);  object(0x01BF,  280,  0,  90); 
move(-6.64,  -0.03,  0.60);  object(0x01BF,  270,  0,  90); 
move(-6.84,  -0.03,  0.00);  object(0x01BF,  270,  0,  90); 
move(-6.39,  -0.03,  -0.90);  object(0x01BF,  255,  0,  90); 
move(-5.92,  -0.03,  -2.80);  object(0x01BF,  235,  0,  90); 
move(-4.84,  -0.02,  -4.50);  object(0x01BF,  220,  0,  90); 
move(-3.55,  -0.02,  -4.20);  object(0x01BF,  220,  0,  90); 
move(-3.93,  -0.02,  -3.70);  object(0x01BF,  235,  0,  90); 
move(-4.41,  -0.02,  -2.40);  object(0x01BF,  250,  0,  90); 
move(-5.65,  -0.02,  -1.10);  object(0x01BF,  270,  0,  90); 
move(-6.89,  -0.04,  0.00);  object(0x01BF,  270,  0,  90); 
move(-6.16,  -0.04,  0.00);  object(0x01BF,  270,  0,  90); 
move(-4.37,  -0.03,  0.00);  object(0x01BF,  270,  0,  90); 
move(-8.70,  -0.15,  0.00);  object(0x0FAA,  0,  0,  90); 
move(-4.71,  0.11,  0.20);  object(0x0FAA,  5,  0,  90); 
move(-7.74,  -0.01,  1.30);  object(0x0FAA,  15,  0,  90); 
move(-6.59,  -14.01,  2.20);  object(0x0FAA,  30,  0,  90); 
move(-1.76,  14.19,  1.10);  object(0x0FAA,  30,  0,  90); 
move(-7.77,  0.35,  5.40);  object(0x0FAA,  40,  0,  94); 
move(-5.09,  0.85,  5.30);  object(0x0FAA,  50,  0,  104); 
move(-4.47,  1.38,  7.90);  object(0x0FAA,  70,  0,  113); 
move(-2.03,  0.55,  8.30);  object(0x0FAA,  85,  0,  111); 
move(0.20,  -0.08,  10.10);  object(0x0FAA,  100,  0,  111); 
move(3.36,  -1.29,  9.90);  object(0x0FAA,  120,  0,  111); 
move(6.29,  -2.42,  8.80);  object(0x0FAA,  135,  0,  111); 
move(8.44,  -3.12,  5.60);  object(0x0FAA,  160,  0,  110); 
move(9.04,  -3.09,  3.00);  object(0x0FAA,  165,  0,  106); 
move(10.06,  -2.67,  1.30);  object(0x0FAA,  180,  0,  103); 
move(10.10,  -1.16,  -0.90);  object(0x0FAA,  190,  0,  94); 
move(7.79,  -0.33,  -2.20);  object(0x0FAA,  205,  0,  90); 
move(9.06,  0.10,  -5.70);  object(0x0FAA,  220,  0,  90); 
move(7.09,  0.00,  -7.70);  object(0x0FAA,  235,  0,  90); 
move(2.86,  -0.07,  -8.80);  object(0x0FAA,  270,  0,  92); 
move(-2.80,  0.04,  -9.30);  object(0x0FAA,  55,  0,  270); 
move(-7.26,  -0.08,  -7.20);  object(0x0FAA,  35,  0,  270); 
move(-8.71,  -0.10,  -4.70);  object(0x0FAA,  20,  0,  270); 
move(-10.35,  -0.02,  -3.80);  object(0x0FAA,  20,  0,  270); 
move(-9.17,  0.05,  -2.50);  object(0x0FAA,  10,  0,  270); 
move(-10.93,  0.18,  -0.80);  object(0x0FAA,  0,  0,  270); 
move(-10.32,  -0.11,  -0.10);  object(0x0FAA,  0,  0,  270); 
move(-9.07,  0.27,  -0.90);  object(0x0FAA,  10,  0,  270); 
move(-10.40,  -0.06,  -3.70);  object(0x0FAA,  30,  0,  270); 
move(-9.99,  -0.06,  -5.20);  object(0x0FAA,  25,  0,  270); 
move(-10.31,  -0.12,  -4.30);  object(0x0FAA,  20,  0,  269); 
move(-10.10,  -0.22,  -3.70);  object(0x0FAA,  20,  0,  268); 
move(-7.58,  0.20,  -1.70);  object(0x0FAA,  5,  0,  279); 
move(-10.20,  1.13,  -2.30);  object(0x0FAA,  340,  0,  96); 
move(-14.24,  -5.73,  -1.00);  object(0x0FAA,  340,  0,  96); 
move(7.68,  6.53,  -1.40);  object(0x0FAA,  340,  0,  96); 
move(79.85,  148.77,  2.54);  object(0x0FAA,  340,  0,  176); 
teleport(-988.84,  -976.71,  11.98) 

setchar(pplayer + 0x034C,   0x0C); 

//BUILD FLOOR 
moveto(272.15,  -422.6,  220); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(8,  0.00,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(8,  0.00,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(8,  0.00,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
//BUILD WALL 1 
moveto(268.15,  -422.6,  224); object(0x01BF,  0,  90,  90); 
move(0.00,  6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  0.00,  8); object(0x01BF,  0,  90,  90); 
move(0.00,  -6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  -6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  -6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  -6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  -6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  -6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  -6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  -6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  -6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  -6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  -6.7,  0.00); object(0x01BF,  0,  90,  90); 
//BUILD WALL 2 
moveto(300.15,  -422.6,  224); object(0x01BF,  0,  90,  90); 
move(0.00,  6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  0.00,  8); object(0x01BF,  0,  90,  90); 
move(0.00,  -6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  -6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  -6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  -6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  -6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  -6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  -6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  -6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  -6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  -6.7,  0.00); object(0x01BF,  0,  90,  90); 
move(0.00,  -6.7,  0.00); object(0x01BF,  0,  90,  90); 
//BUILD WALL 3 
moveto(272.15,  -425.95,  223.35); object(0x01BF,  0,  0,  180); 
move(24,  00,  0.00); object(0x01BF,  0,  0,  180); 
move(0.00,  0.00,  6.7); object(0x01BF,  0,  0,  180); 
move(-24,  00,  0.00); object(0x01BF,  0,  0,  180); 
//BUILD WALL 4 
moveto(272.15,  -345.55,  223.35); object(0x01BF,  0,  0,  180); 
move(8,  00,  0.00); object(0x01BF,  0,  0,  180); 
move(8,  00,  0.00); object(0x01BF,  0,  0,  180); 
move(8,  00,  0.00); object(0x01BF,  0,  0,  180); 
move(0.00,  0.00,  6.7); object(0x01BF,  0,  0,  180); 
move(-8,  00,  0.00); object(0x01BF,  0,  0,  180); 
move(-8,  00,  0.00); object(0x01BF,  0,  0,  180); 
move(-8,  00,  0.00); object(0x01BF,  0,  0,  180); 
//BUILD ROOF 
moveto(272.15,  -422.6,  233.4); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(8,  0.00,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(8,  0.00,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(8,  0.00,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -26.8,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
move(0.00,  -6.7,  0.00); object(0x01BF,  90,  0,  180); 
//RAMP 
moveto(296.15,  -355.0,  231.74); object(0x01BF,  300,  0,  180); 
move(0.00,  -5.91,  -3.38); object(0x01BF,  300,  0,  180); 
move(0.00,  -5.91,  -3.38); object(0x01BF,  300,  0,  180); 
move(0.00,  -5.91,  -3.38); object(0x01BF,  300,  0,  180); 
//PLANE AT BACK 
moveto(283.38,  -362.48,  224.38);  object(0x0FBE,  0,  0,  213); 
//TELEPORT - AIR APPROACH 
teleport(296.93,   -353.33,   252.28); 

teleport(218.57,  -484.23,  26.17);

teleport(135.13,  -1129.87,  50.97);

teleport(593.00,  -788.99,  2.32);

teleport(274.45,  -499.05,  36.28);

teleport(919.81,  -481.98,  -14.11);

teleport(-1172.64,  361.07,  60.31);

moveto(1650.68,   -371.12,   39.84); object(0x01BF,   90,   0,   38);
move(-3.93,   -5.07,   0.00); object(0x01BF,   90,   0,   38);
move(-3.64,   2.82,   0.00); object(0x01BF,   90,   0,   38);
move(3.83,   5.15,   0.00); object(0x01BF,   90,   0,   217);
move(3.83,   5.08,   0.00); object(0x01BF,   90,   0,   217);
move(3.82,   -2.80,   0.00); object(0x01BF,   90,   0,   216);
move(3.54,   -2.62,   0.00); object(0x01BF,   90,   0,   216);
move(-4.02,   -5.46,   0.00); object(0x01BF,   90,   0,   216);
move(-3.70,   -5.03,   0.00); object(0x01BF,   90,   0,   216);
move(3.65,   -1.76,   3.30); object(0x01BF,   180,   0,   126);
move(4.67,   6.49,   0.00); object(0x01BF,   180,   0,   126);
move(2.10,   2.92,   0.00); object(0x01BF,   180,   0,   126);
move(-0.79,   5.47,   0.00); object(0x01BF,   180,   0,   37);
move(-6.08,   4.57,   0.00); object(0x01BF,   180,   0,   37);
move(-1.20,   0.90,   0.00); object(0x01BF,   180,   0,   37);
move(-5.62,   -0.65,   0.00); object(0x01BF,   180,   0,   307);
move(-4.56,   -5.95,   0.00); object(0x01BF,   180,   0,   307);
move(-2.43,   -3.17,   0.00); object(0x01BF,   180,   0,   307);
move(1.55,   -6.56,   -1.70); object(0x01F3,   0,   0,   38);
move(5.70,   -4.40,   0.00); object(0x01F3,   0,   0,   38);
move(3.10,   18.18,   4.80); object(0x01BF,   270,   0,   217);
move(6.22,   -4.71,   0.00); object(0x01BF,   270,   0,   217);
move(1.28,   -0.97,   0.00); object(0x01BF,   270,   0,   217);
move(-3.58,   -4.76,   0.00); object(0x01BF,   270,   0,   217);
move(-6.31,   4.75,   0.00); object(0x01BF,   270,   0,   217);
move(-1.12,   0.84,   0.00); object(0x01BF,   270,   0,   217);
move(-4.00,   -5.31,   -0.10); object(0x01BF,   270,   0,   217);
move(6.31,   -4.75,   0.00); object(0x01BF,   270,   0,   217);
move(1.21,   -0.92,   0.00); object(0x01BF,   270,   0,   216);
move(-3.36,   -4.73,   -1.20); object(0x01BF,   245,   0,   37);
move(-7.73,   5.86,   0.00); object(0x01BF,   245,   0,   37);
move(3.67,   -2.78,   0.00); object(0x01BF,   245,   0,   37);
move(5.60,   6.38,   2.70); object(0x01BF,   245,   0,   36);
move(3.61,   4.83,   1.30); object(0x01BF,   90,   0,   217);
move(-4.63,   3.49,   0.00); object(0x01BF,   90,   0,   217);
move(7.67,   -5.78,   0.00); object(0x01BF,   90,   0,   217);
move(3.00,   3.98,   0.00); object(0x01BF,   90,   0,   217);
move(-5.19,   3.91,   0.00); object(0x01BF,   90,   0,   217);
move(-2.55,   1.93,   0.00); object(0x01BF,   90,   0,   217);
move(3.38,   -17.44,   1.30); object(0x01BF,   90,   160,   126);
move(-11.74,   8.67,   0.00); object(0x01BF,   90,   160,   126);
move(16.29,   -2.47,   -1.30); object(0x01BF,   90,   180,   307);
move(2.14,   2.80,   0.00); object(0x01BF,   90,   180,   307);
move(-14.75,   4.59,   0.00); object(0x01BF,   90,   180,   308);
move(3.41,   4.31,   0.00); object(0x01BF,   90,   180,   308);
move(-10.58,   -15.12,   2.60); object(0x01BF,   90,   180,   215);
move(5.66,   -3.95,   0.00); object(0x01BF,   90,   180,   215);
move(5.33,   -3.72,   0.00); object(0x01BF,   90,   180,   215);
move(-3.34,   6.92,   0.00); object(0x01BF,   90,   180,   36);
move(0.18,   -9.28,   1.80); object(0x01F3,   175,   180,   216);
move(-8.13,   5.82,   0.00); object(0x01F3,   175,   180,   216);
move(-0.30,   1.33,   0.00); object(0x01F3,   175,   180,   35);
move(8.23,   -5.69,   0.00); object(0x01F3,   175,   180,   35);
move(9.40,   -9.85,   -56.80); object(0x01F3,   180,   180,   10);
move(-4.01,   5.26,   55.50); object(0x01F0,   180,   180,   125);
move(1.76,   2.55,   0.00); object(0x01F0,   180,   180,   125);
move(7.26,   20.98,   -2.20); object(0x01F1,   90,   180,   39);
move(3.82,   -2.96,   -0.90); object(0x01F0,   180,   180,   39);
move(-11.74,   9.49,   0.00); object(0x01F0,   180,   180,   39);
move(-8.00,   -12.96,   3.00); object(0x01F0,   180,   180,   308);
move(-9.05,   -1.60,   -0.20); object(0x01F0,   180,   180,   308);
move(1.89,   2.46,   0.00); object(0x01F0,   180,   180,   308);
move(7.60,   12.70,   -53.80); object(0x020F,   180,   180,   37);
move(1.92,   -13.90,   43.80); object(0x020C,   180,   180,   215);
move(-0.01,   -0.00,   -0.70); object(0x021C,   180,   180,   216);
move(8.61,   9.34,   -0.60); object(0x021C,   180,   180,   265);
move(-0.57,   0.40,   0.00); object(0x021C,   180,   180,   265);
move(-0.82,   0.57,   0.00); object(0x021C,   180,   180,   265);
move(-0.41,   0.29,   0.00); object(0x021C,   180,   180,   265);
move(-0.57,   0.40,   0.00); object(0x021C,   180,   180,   265);
move(-0.49,   0.34,   0.00); object(0x021C,   180,   180,   265);
move(-0.49,   0.34,   0.00); object(0x021C,   180,   180,   265);
move(-0.49,   0.34,   0.00); object(0x021C,   180,   180,   265);
move(-0.49,   0.34,   0.00); object(0x021C,   180,   180,   265);
move(-0.66,   0.46,   0.00); object(0x021C,   180,   180,   265);
move(-0.57,   0.39,   0.00); object(0x021C,   180,   180,   265);
move(0.23,   -0.86,   0.90); object(0x0115,   180,   180,   20);
move(1.36,   0.15,   -0.20); object(0x0119,   180,   180,   20);
move(0.65,   -0.87,   0.10); object(0x011D,   180,   180,   25);
move(0.90,   -0.64,   0.00); object(0x011F,   180,   180,   25);
move(1.71,   -1.22,   0.00); object(0x0120,   180,   180,   25);
move(-4.57,   -9.21,   11.10); object(0x021A,   180,   180,   316);
move(1.31,   2.07,   -9.90); object(0x020A,   180,   180,   301);
move(3.50,   -6.59,   -1.20); object(0x0F35,   180,   180,   36);
move(-13.16,   6.26,   -0.20); object(0x0F34,   180,   180,   217);
move(2.41,   3.15,   0.00); object(0x0F34,   180,   180,   218);
move(1.81,   2.33,   0.00); object(0x0F34,   180,   180,   218);
move(-0.98,   -1.02,   2.10); object(0x0F34,   180,   180,   219);
move(2.92,   -0.84,   0.00); object(0x0F34,   180,   180,   180);
move(14.69,   -8.28,   -22.70); object(0x0E4E,   180,   180,   305);
move(-1.21,   3.20,   2.30); object(0x0E4F,   180,   180,   315);
teleport(1643.57,   -377.06,   41.02)
setfloat(0x95918B0,   0,   -1,   0);
setfloat(0x95918C0,   1,   0,   0);
setfloat(0x95918D0,   0,   0,   1);
setfloat(0x95918E0,   119.97,   -1512.77,   215.98);
setshort(0x9591908,   0x16b);
setfloat(0x9591910,   0,   -1,   0);
setfloat(0x9591920,   1,   0,   0);
setfloat(0x9591930,   0,   0,   1);
setfloat(0x9591940,   124.57,   -1512.77,   215.98);
setshort(0x9591968,   0x16b);
setfloat(0x9591970,   0,   1,   0);
setfloat(0x9591980,   -1,   0,   0);
setfloat(0x9591990,   0,   0,   1);
setfloat(0x95919A0,   72.20,   -1507.88,   215.98);
setshort(0x95919C8,   0x16b);
setfloat(0x95919D0,   0,   1,   0);
setfloat(0x95919E0,   -1,   0,   0);
setfloat(0x95919F0,   0,   0,   1);
setfloat(0x9591A00,   67.83,   -1507.88,   215.98);
setshort(0x9591A28,   0x16b);
setfloat(0x9591A30,   1,   0,   0);
setfloat(0x9591A40,   0,   1,   0);
setfloat(0x9591A50,   0,   0,   1);
setfloat(0x9591A60,   126.55,   -1539.63,   216.98);
setshort(0x9591A88,   0xcd7);
setfloat(0x9591A90,   1,   0,   0);
setfloat(0x9591AA0,   0,   1,   0);
setfloat(0x9591AB0,   0,   0,   1);
setfloat(0x9591AC0,   78.80,   -1530.77,   216.98);
setshort(0x9591AE8,   0xcd7);
setfloat(0x9591AF0,   1,   0,   0);
setfloat(0x9591B00,   0,   1,   0);
setfloat(0x9591B10,   0,   0,   1);
setfloat(0x9591B20,   74.77,   -1530.77,   216.98);
setshort(0x9591B48,   0xcd7);
setfloat(0x9591B50,   1,   0,   0);
setfloat(0x9591B60,   0,   1,   0);
setfloat(0x9591B70,   0,   0,   1);
setfloat(0x9591B80,   70.77,   -1530.77,   216.98);
setshort(0x9591BA8,   0xcd7);
setfloat(0x9591C70,   1,   0,   0);
setfloat(0x9591C80,   0,   1,   0);
setfloat(0x9591C90,   0,   0,   1);
setfloat(0x9591CA0,   66.77,   -1530.77,   216.98);
setshort(0x9591CC8,   0xcd7);
setfloat(0x9591CD0,   1,   0,   0);
setfloat(0x9591CE0,   0,   1,   0);
setfloat(0x9591CF0,   0,   0,   1);
setfloat(0x9591D00,   62.77,   -1530.77,   216.98);
setshort(0x9591D28,   0xcd7);
setfloat(0x9591D30,   1,   0,   0);
setfloat(0x9591D40,   0,   1,   0);
setfloat(0x9591D50,   0,   0,   1);
setfloat(0x9591D60,   58.77,   -1530.77,   216.98);
setshort(0x9591D88,   0xcd7);
setfloat(0x9591D90,   1,   0,   0);
setfloat(0x9591DA0,   0,   1,   0);
setfloat(0x9591DB0,   0,   0,   1);
setfloat(0x9591DC0,   54.77,   -1530.77,   216.98);
setshort(0x9591DE8,   0xcd7);
setfloat(0x9591DF0,   1,   0,   0);
setfloat(0x9591E00,   0,   1,   0);
setfloat(0x9591E10,   0,   0,   1);
setfloat(0x9591E20,   60.23,   -1488.82,   216.98);
setshort(0x9591E48,   0x251);
setfloat(0x9591EB0,   1,   0,   0);
setfloat(0x9591EC0,   0,   1,   0);
setfloat(0x9591ED0,   0,   0,   1);
setfloat(0x9591EE0,   78.91,   -1529.72,   216.98);
setshort(0x9591F08,   0x251);
setfloat(0x9591F10,   1,   0,   0);
setfloat(0x9591F20,   0,   1,   0);
setfloat(0x9591F30,   0,   0,   1);
setfloat(0x9591F40,   75.10,   -1530.02,   216.98);
setshort(0x9591F68,   0x251);
setfloat(0x9591F70,   1,   0,   0);
setfloat(0x9591F80,   0,   1,   0);
setfloat(0x9591F90,   0,   0,   1);
setfloat(0x9591FA0,   70.94,   -1530.10,   216.98);
setshort(0x9591FC8,   0x251);
setfloat(0x9591FD0,   1,   0,   0);
setfloat(0x9591FE0,   0,   1,   0);
setfloat(0x9591FF0,   0,   0,   1);
setfloat(0x9592000,   66.73,   -1530.10,   216.98);
setshort(0x9592028,   0x251);
setfloat(0x9592030,   1,   0,   0);
setfloat(0x9592040,   0,   1,   0);
setfloat(0x9592050,   0,   0,   1);
setfloat(0x9592060,   62.84,   -1530.10,   216.98);
setshort(0x9592088,   0x251);
setfloat(0x9592090,   1,   0,   0);
setfloat(0x95920A0,   0,   1,   0);
setfloat(0x95920B0,   0,   0,   1);
setfloat(0x95920C0,   58.67,   -1530.10,   216.98);
setshort(0x95920E8,   0x251);
setfloat(0x95920F0,   1,   0,   0);
setfloat(0x9592100,   0,   1,   0);
setfloat(0x9592110,   0,   0,   1);
setfloat(0x9592120,   58.67,   -1530.1,   216.98);
setshort(0x9592148,   0x251);
setfloat(0x95916D0,   0,   -1,   0);
setfloat(0x95916E0,   1,   0,   0);
setfloat(0x95916F0,   0,   0,   1);
setfloat(0x9591700,   76.71,   -1530.64,   216.98);
setshort(0x9591728,   0xe4e);
setfloat(0x9591730,   0,   -1,   0);
setfloat(0x9591740,   1,   0,   0);
setfloat(0x9591750,   0,   0,   1);
setfloat(0x9591760,   68.79,   -1530.64,   216.98);
setshort(0x9591788,   0xe4e);
setfloat(0x9591790,   0,   -1,   0);
setfloat(0x95917A0,   1,   0,   0);
setfloat(0x95917B0,   0,   0,   1);
setfloat(0x95917C0,   64.77,   -1530.64,   216.98);
setshort(0x95917E8,   0xe4e);
setfloat(0x95917F0,   0,   -1,   0);
setfloat(0x9591800,   1,   0,   0);
setfloat(0x9591810,   0,   0,   1);
setfloat(0x9591820,   60.71,   -1530.64,   216.98);
setshort(0x9591848,   0xe4e);
setfloat(0x95916D0,   0,   1,   0);
setfloat(0x95916E0,   -1,   0,   0);
setfloat(0x95916F0,   0,   0,   1);
setfloat(0x9591700,   72.84,   -1530.64,   216.98);
setshort(0x9591728,   0xe4f);
setfloat(0x9591730,   0,   1,   0);
setfloat(0x9591740,   -1,   0,   0);
setfloat(0x9591750,   0,   0,   1);
setfloat(0x9591760,   81.07,   -1530.64,   216.98);
setshort(0x9591788,   0xe4f);
setfloat(0x9591790,   0,   1,   0);
setfloat(0x95917A0,   -1,   0,   0);
setfloat(0x95917B0,   0,   0,   1);
setfloat(0x95917C0,   81.07,   -1526.66,   216.98);
setshort(0x95917E8,   0xe4f);
setfloat(0x95917F0,   0,   1,   0);
setfloat(0x9591800,   -1,   0,   0);
setfloat(0x9591810,   0,   0,   1);
setfloat(0x9591820,   81.07,   -1522.66,   216.98);
setshort(0x9591848,   0xe4f);
setfloat(0x9591850,   0,   1,   0);
setfloat(0x9591860,   -1,   0,   0);
setfloat(0x9591870,   0,   0,   1);
setfloat(0x9591880,   81.07,   -1518.66,   216.98);
setshort(0x95918A8,   0xe4f);
setfloat(0x95918B0,   0,   1,   0);
setfloat(0x95918C0,   -1,   0,   0);
setfloat(0x95918D0,   0,   0,   1);
setfloat(0x95918E0,   81.07,   -1514.66,   216.98);
setshort(0x9591908,   0xe4f);
setfloat(0x9591910,   0,   1,   0);
setfloat(0x9591920,   -1,   0,   0);
setfloat(0x9591930,   0,   0,   1);
setfloat(0x9591940,   81.07,   -1510.66,   216.98);
setshort(0x9591968,   0xe4f);
setfloat(0x9591970,   0,   1,   0);
setfloat(0x9591980,   -1,   0,   0);
setfloat(0x9591990,   0,   0,   1);
setfloat(0x95919A0,   81.07,   -1506.66,   216.98);
setshort(0x95919C8,   0xe4f);
setfloat(0x95919D0,   0,   1,   0);
setfloat(0x95919E0,   -1,   0,   0);
setfloat(0x95919F0,   0,   0,   1);
setfloat(0x9591A00,   81.07,   -1502.66,   216.98);
setshort(0x9591A28,   0xe4f);
setfloat(0x9591A30,   0,   1,   0);
setfloat(0x9591A40,   -1,   0,   0);
setfloat(0x9591A50,   0,   0,   1);
setfloat(0x9591A60,   81.07,   -1498.66,   216.98);
setshort(0x9591A88,   0xe4f);
setfloat(0x9591A90,   0,   1,   0);
setfloat(0x9591AA0,   -1,   0,   0);
setfloat(0x9591AB0,   0,   0,   1);
setfloat(0x9591AC0,   81.07,   -1494.66,   216.98);
setshort(0x9591AE8,   0xe4f);
setfloat(0x9591C10,   0,   1,   0);
setfloat(0x9591C20,   -1,   0,   0);
setfloat(0x9591C30,   0,   0,   1);
setfloat(0x9591C40,   81.07,   -1482.66,   216.98);
setshort(0x9591C68,   0xe4f);
setfloat(0x9591C70,   0,   1,   0);
setfloat(0x9591C80,   -1,   0,   0);
setfloat(0x9591C90,   0,   0,   1);
setfloat(0x9591CA0,   76.70,   -1530.82,   216.98);
setshort(0x9591CC8,   0xe4f);
setfloat(0x9591CD0,   0,   1,   0);
setfloat(0x9591CE0,   -1,   0,   0);
setfloat(0x9591CF0,   0,   0,   1);
setfloat(0x9591D00,   68.79,   -1530.82,   216.98);
setshort(0x9591D28,   0xe4f);
setfloat(0x9591D30,   0,   1,   0);
setfloat(0x9591D40,   -1,   0,   0);
setfloat(0x9591D50,   0,   0,   1);
setfloat(0x9591D60,   64.79,   -1530.82,   216.98);
setshort(0x9591D88,   0xe4f);
setfloat(0x9591D90,   0,   1,   0);
setfloat(0x9591DA0,   -1,   0,   0);
setfloat(0x9591DB0,   0,   0,   1);
setfloat(0x9591DC0,   60.79,   -1530.82,   216.98);
setshort(0x9591DE8,   0xe4f);
setfloat(0x9591DF0,   0,   1,   0);
setfloat(0x9591E00,   -1,   0,   0);
setfloat(0x9591E10,   0,   0,   1);
setfloat(0x9591E20,   56.79,   -1530.82,   216.98);
setshort(0x9591E48,   0xe4f);
teleport(99.57,   -1504.74,   216.98)
moveto(286.80,   -456.46,   26.72); object(0x01BF,   0,   0,   271);
move(-0.38,   9.36,   0.00); object(0x01BF,   0,   0,   271);
move(18.70,   -21.95,   -1.00); object(0x01BF,   35,   0,   190);
move(-0.49,   -3.03,   4.70); object(0x01BF,   35,   0,   190);
move(-1.14,   -5.21,   3.10); object(0x01BF,   85,   0,   190);
move(-8.33,   0.62,   0.00); object(0x01BF,   85,   0,   279);
move(-4.38,   2.33,   1.40); object(0x01BF,   85,   0,   275);
move(-0.53,   -3.84,   1.80); object(0x01BF,   45,   0,   185);
move(0.40,   -6.19,   1.50); object(0x01BF,   95,   0,   174);
move(0.71,   -6.87,   -0.70); object(0x01BF,   95,   0,   174);
move(0.61,   -5.86,   0.00); object(0x01BF,   85,   0,   174);
move(0.48,   -4.63,   0.80); object(0x01BF,   45,   0,   174);
move(0.48,   -4.71,   4.80); object(0x01BF,   45,   0,   174);
move(0.55,   -5.96,   2.60); object(0x01BF,   85,   0,   175);
move(0.69,   -5.83,   0.60); object(0x01BF,   85,   0,   174);
move(7.69,   1.54,   0.00); object(0x01BF,   85,   0,   77);
move(2.32,   -6.24,   0.20); object(0x01BF,   85,   0,   176);
move(7.89,   0.10,   -0.40); object(0x01BF,   90,   0,   82);
move(0.27,   -7.03,   0.00); object(0x01BF,   90,   0,   173);
move(0.80,   -6.62,   0.00); object(0x01BF,   90,   0,   173);
move(0.74,   -6.06,   0.00); object(0x01BF,   90,   0,   173);
move(0.86,   -7.08,   0.00); object(0x01BF,   90,   0,   173);
move(0.89,   -7.34,   0.00); object(0x01BF,   90,   0,   173);
move(0.67,   -5.51,   0.00); object(0x01BF,   90,   0,   173);
move(0.69,   -5.72,   0.00); object(0x01BF,   90,   0,   173);
move(0.69,   -5.66,   0.00); object(0x01BF,   90,   0,   173);
move(0.50,   -5.20,   0.00); object(0x01BF,   90,   0,   175);
move(0.46,   -5.51,   0.00); object(0x01BF,   90,   0,   175);
move(0.43,   -5.21,   0.00); object(0x01BF,   90,   0,   175);
move(0.54,   -6.54,   0.00); object(0x01BF,   90,   0,   175);
move(0.40,   -4.90,   0.00); object(0x01BF,   90,   0,   175);
move(0.38,   -4.66,   0.00); object(0x01BF,   90,   0,   175);
move(0.48,   -5.92,   0.00); object(0x01BF,   90,   0,   175);
move(0.48,   -5.91,   0.00); object(0x01BF,   90,   0,   175);
move(0.46,   -5.59,   0.00); object(0x01BF,   90,   0,   175);
move(-6.78,   -0.11,   0.00); object(0x01BF,   90,   0,   265);
move(-5.52,   -0.52,   0.00); object(0x01BF,   90,   0,   265);
move(-5.34,   -0.51,   0.00); object(0x01BF,   90,   0,   265);
move(-5.99,   -0.57,   0.00); object(0x01BF,   90,   0,   265);
move(-6.68,   -0.63,   0.00); object(0x01BF,   90,   0,   265);
move(1.34,   -6.85,   0.00); object(0x01BF,   90,   0,   173);
move(0.27,   -6.70,   0.00); object(0x01BF,   90,   0,   174);
move(-6.85,   0.06,   -0.90); object(0x01BF,   105,   0,   264);
move(-6.88,   0.13,   -1.70); object(0x01BF,   105,   0,   264);
move(-5.89,   -0.85,   -2.80); object(0x01BF,   125,   0,   263);
move(-4.52,   -0.59,   -3.20); object(0x01BF,   125,   0,   263);
move(-4.62,   -0.60,   -3.40); object(0x01BF,   125,   0,   263);
move(-6.69,   0.75,   0.50); object(0x01BF,   70,   0,   265);
move(-5.84,   0.22,   2.30); object(0x01BF,   70,   0,   266);
move(-6.87,   -0.26,   1.30); object(0x01BF,   95,   0,   84);
move(-6.61,   -0.93,   -0.10); object(0x01BF,   95,   0,   264);
move(-4.03,   -0.45,   -0.40); object(0x01BF,   95,   0,   264);
move(3.10,   7.72,   0.00); object(0x01BF,   95,   0,   346);
move(-1.61,   5.91,   -0.40); object(0x01BF,   95,   0,   346);
move(-1.39,   5.54,   -0.30); object(0x01BF,   95,   0,   346);
move(-1.55,   5.99,   -0.60); object(0x01BF,   95,   0,   345);
move(-6.01,   -4.24,   -0.30); object(0x01BF,   95,   0,   267);
move(-6.02,   -0.13,   -0.10); object(0x01BF,   95,   0,   89);
move(-1.86,   -1.88,   0.00); object(0x01BF,   145,   0,   90);
move(-4.44,   0.19,   3.20); object(0x01BF,   90,   0,   265);
move(-7.01,   -1.24,   0.40); object(0x01BF,   90,   0,   262);
move(-6.81,   -0.93,   0.00); object(0x01BF,   90,   0,   265);
move(-7.40,   -0.46,   0.00); object(0x01BF,   90,   0,   267);
move(-6.17,   0.33,   0.00); object(0x01BF,   90,   0,   273);
move(-5.94,   0.31,   0.00); object(0x01BF,   90,   0,   273);
move(-5.82,   0.30,   0.00); object(0x01BF,   90,   0,   273);
move(-5.08,   0.26,   0.00); object(0x01BF,   90,   0,   273);
move(-6.16,   0.31,   0.00); object(0x01BF,   90,   0,   273);
move(-6.61,   0.33,   0.00); object(0x01BF,   90,   0,   273);
move(-6.63,   0.49,   0.00); object(0x01BF,   90,   0,   277);
move(-6.77,   0.86,   0.00); object(0x01BF,   90,   0,   277);
move(-6.90,   0.81,   0.00); object(0x01BF,   90,   0,   277);
move(-0.10,   -6.68,   0.00); object(0x01BF,   90,   0,   198);
move(-1.92,   -4.69,   0.00); object(0x01BF,   90,   0,   200);
move(-2.04,   -5.50,   0.00); object(0x01BF,   90,   0,   200);
move(-2.06,   -5.55,   0.00); object(0x01BF,   90,   0,   200);
move(-1.57,   -4.24,   0.00); object(0x01BF,   90,   0,   200);
move(-1.95,   -5.33,   0.00); object(0x01BF,   90,   0,   200);
move(-1.83,   -4.80,   -0.10); object(0x01BF,   90,   0,   19);
move(-1.56,   -5.48,   -1.60); object(0x01BF,   65,   0,   21);
move(-1.73,   -4.43,   -3.30); object(0x01BF,   55,   0,   21);
move(-1.97,   -5.05,   -2.00); object(0x01BF,   90,   0,   21);
move(-2.77,   -6.33,   0.00); object(0x01BF,   90,   0,   18);
move(-2.26,   -6.03,   0.00); object(0x01BF,   90,   0,   19);
move(-1.92,   -5.63,   0.00); object(0x01BF,   90,   0,   0);
move(0.20,   -4.00,   0.60); object(0x01BF,   110,   0,   359);
move(0.03,   -4.42,   1.50); object(0x01BF,   110,   0,   359);
move(0.31,   -4.72,   1.60); object(0x01BF,   110,   0,   357);
move(-0.21,   -0.04,   1.50); object(0x01BF,   130,   0,   355);
move(0.28,   -3.73,   3.70); object(0x01BF,   130,   0,   354);
move(0.44,   -4.45,   4.10); object(0x01BF,   130,   0,   354);
move(0.16,   -4.11,   3.80); object(0x01BF,   130,   0,   359);
move(-0.04,   -3.97,   3.40); object(0x01BF,   130,   0,   356);
move(0.77,   -6.07,   2.30); object(0x01BF,   95,   0,   355);
move(0.59,   -6.34,   0.80); object(0x01BF,   95,   0,   355);
move(0.48,   -5.22,   0.00); object(0x01BF,   95,   0,   355);
move(-6.10,   -0.61,   0.40); object(0x01BF,   95,   0,   71);
move(-5.16,   -1.81,   0.40); object(0x01BF,   95,   0,   71);
move(-6.35,   -2.22,   0.10); object(0x01BF,   90,   0,   71);
move(-6.46,   -2.26,   0.00); object(0x01BF,   90,   0,   71);
move(-6.11,   -2.11,   0.00); object(0x01BF,   90,   0,   73);
move(-7.28,   -2.22,   0.00); object(0x01BF,   90,   0,   73);
move(-6.43,   -1.97,   0.00); object(0x01BF,   90,   0,   73);
move(-0.68,   7.94,   0.00); object(0x01BF,   90,   0,   162);
move(-2.11,   6.69,   0.00); object(0x01BF,   90,   0,   162);
move(-2.04,   6.47,   0.00); object(0x01BF,   90,   0,   162);
move(-1.31,   4.18,   0.00); object(0x01BF,   90,   0,   167);
move(-0.60,   5.39,   0.00); object(0x01BF,   90,   0,   186);
move(0.35,   3.37,   0.00); object(0x01BF,   90,   0,   186);
move(0.62,   5.77,   0.00); object(0x01BF,   90,   0,   185);
move(3.94,   0.48,   0.00); object(0x01BF,   90,   0,   273);
move(5.58,   -0.33,   0.00); object(0x01BF,   90,   0,   273);
move(5.99,   -0.35,   0.00); object(0x01BF,   90,   0,   273);
move(5.43,   -0.32,   0.00); object(0x01BF,   90,   0,   273);
move(5.48,   -0.32,   0.00); object(0x01BF,   90,   0,   273);
move(5.49,   -0.32,   0.00); object(0x01BF,   90,   0,   273);
move(6.00,   -0.35,   0.00); object(0x01BF,   90,   0,   273);
move(6.93,   -0.40,   0.00); object(0x01BF,   90,   0,   273);
move(5.15,   -0.30,   1.20); object(0x01BF,   120,   0,   273);
move(4.85,   -0.28,   1.20); object(0x01BF,   90,   0,   273);
move(6.12,   -0.36,   0.00); object(0x01BF,   90,   0,   273);
move(7.89,   -0.46,   0.00); object(0x01BF,   90,   0,   273);
move(6.99,   -0.40,   0.00); object(0x01BF,   90,   0,   273);
move(7.52,   -0.43,   0.00); object(0x01BF,   90,   0,   273);
move(1.21,   -0.17,   0.00); object(0x01BF,   90,   0,   272);
move(6.90,   -0.21,   0.00); object(0x01BF,   90,   0,   272);
move(5.03,   -0.14,   0.00); object(0x01BF,   90,   0,   272);
move(6.93,   -0.19,   0.00); object(0x01BF,   90,   0,   272);
move(6.93,   0.42,   0.00); object(0x01BF,   90,   0,   185);
move(0.43,   5.02,   -0.20); object(0x01BF,   90,   0,   185);
move(0.40,   4.91,   0.00); object(0x01BF,   90,   0,   185);
move(0.38,   4.72,   -2.50); object(0x01BF,   40,   0,   185);
move(0.40,   4.90,   -3.50); object(0x01BF,   55,   0,   185);
move(0.20,   2.60,   -5.10); object(0x01BF,   0,   0,   185);
move(0.00,   0.00,   -6.60); object(0x01BF,   0,   0,   185);
move(0.00,   0.00,   -6.70); object(0x01BF,   0,   0,   185);
move(0.09,   1.03,   -6.00); object(0x01BF,   60,   0,   185);
move(0.42,   5.11,   -2.00); object(0x01BF,   90,   0,   185);
move(0.20,   2.45,   0.00); object(0x01BF,   0,   0,   185);
move(3.74,   -1.99,   0.00); object(0x01BF,   0,   0,   274);
move(-7.43,   0.04,   -0.40); object(0x01BF,   0,   0,   95);
teleport(305.42,   -460.73,   24.16);

setchar(0x945b2c2,   0x6);
setchar(0x945b2c1,   0x45);
setchar(0x945b2c0,   0x34);
setshort(0x94428e0,   250);
setfloat(0x94428dc,   1.58000);
setfloat(0x945b240,   9622);
setfloat(0x945b248,   1.21000);
setfloat(0x945b300,   0.51900);
setfloat(0x945b304,   -0.14999);
setfloat(0x945b308,   0.54000);
setfloat(0x945b2cc,   1.86533);
setfloat(0x945b2d0,   1.86533);
setfloat(0x945b2c4,   0.00940);
setfloat(0x945b2e0,   0.95000);
setfloat(0x945b2e4,   0.00000);
setfloat(0x945b2e8,   47.00000);
setfloat(0x945b2f8,   1.10000);
setfloat(0x945b2fc,   0.09500);
setfloat(0x945b314,   0.67600);
setfloat(0x945b30c,   0.00000);
setfloat(0x945b260,   0.00000);
setfloat(0x945b264,   0.00000);
setfloat(0x945b268,   -0.49999);
setfloat(0x945b2ec,   0.86750);
setfloat(0x945b2f0,   0.51800);
setfloat(0x945b24c,   0.00000);
sethex(0x945b310,   0x83,   0xe1,   0x00,   0x07);
sethex(0x967E6FC,   0x00,   0x00,   0xFF);
sethex(0x944faf0,   0xff,   0xff,   0x00);
sethex(0x944faf4,   0xff,   0x00,   0xff);
setint(0x8E38A38,   162);
setchar(0x8E38A5C,   100,   101);
sethex(0x8E38A5E,   0x01,   0x00);
teleport(292.22,   -440.37,   26.02);
setchar(pplayer + 0xB84,   0x00);

moveto(-1274.40,  -558.78,  11.22);  object(0x01BF,  70,  0,  259);
move(-4.56,  -1.27,  1.80);  object(0x01BF,  70,  355,  613);
move(-4.52,  -2.02,  1.80);  object(0x01BF,  70,  350,  608);
move(-4.39,  -2.54,  1.80);  object(0x01BF,  70,  345,  603);
move(-4.51,  -3.36,  1.60);  object(0x01BF,  70,  340,  598);
move(-3.89,  -3.66,  1.80);  object(0x01BF,  70,  335,  594);
move(-3.71,  -4.46,  1.90);  object(0x01BF,  70,  330,  587);
move(-2.91,  -4.77,  1.70);  object(0x01BF,  70,  325,  582);
move(-2.51,  -4.71,  1.50);  object(0x01BF,  70,  320,  577);
move(-1.66,  -4.89,  1.20);  object(0x01BF,  70,  315,  572);
move(-1.22,  -5.33,  1.20);  object(0x01BF,  70,  310,  567);
move(-0.65,  -4.34,  0.90);  object(0x01BF,  70,  305,  562);
move(-0.17,  -5.47,  1.00);  object(0x01BF,  70,  300,  557);
move(0.39,  -4.39,  0.70);  object(0x01BF,  70,  295,  552);
move(0.73,  -4.54,  0.60);  object(0x01BF,  70,  290,  547);
move(1.34,  -4.96,  0.50);  object(0x01BF,  70,  285,  542);
move(1.52,  -4.13,  0.30);  object(0x01BF,  70,  280,  537);
move(2.13,  -4.34,  0.20);  object(0x01BF,  70,  275,  532);
move(3.29,  -4.60,  0.00);  object(0x01BF,  70,  270,  519);
move(4.75,  -3.22,  0.30);  object(0x01BF,  70,  270,  489);
move(5.55,  -0.61,  0.40);  object(0x01BF,  70,  270,  467);
move(5.67,  1.81,  0.50);  object(0x01BF,  70,  270,  438);
move(3.73,  3.81,  0.60);  object(0x01BF,  70,  270,  412);
move(0.00,  0.00,  0.00);  object(0x01BF,  70,  270,  412);
move(1.22,  5.60,  0.60);  object(0x01BF,  70,  270,  376);
move(-1.43,  4.68,  0.60);  object(0x01BF,  70,  270,  352);
move(-3.40,  3.67,  0.60);  object(0x01BF,  70,  270,  328);
move(-4.11,  2.19,  1.00);  object(0x01BF,  70,  270,  303);
move(-4.93,  -0.06,  0.60);  object(0x01BF,  70,  270,  276);
move(-4.89,  -2.65,  0.80);  object(0x01BF,  70,  270,  608);
move(-3.20,  -4.75,  0.80);  object(0x01BF,  70,  270,  579);
move(-0.60,  -5.01,  0.80);  object(0x01BF,  70,  270,  554);
move(1.91,  -4.79,  0.80);  object(0x01BF,  70,  270,  522);
move(2.91,  -3.24,  -0.10);  object(0x01BF,  70,  270,  492);
move(1.48,  -0.87,  0.00);  object(0x01BF,  70,  270,  483);
move(5.68,  -0.35,  0.30);  object(0x01BF,  70,  270,  471);
move(5.55,  1.71,  0.40);  object(0x01BF,  70,  270,  440);
move(3.72,  3.52,  0.70);  object(0x01BF,  70,  270,  412);
move(1.40,  5.25,  0.30);  object(0x01BF,  70,  270,  376);
move(-1.20,  5.14,  0.60);  object(0x01BF,  70,  270,  355);
move(-3.42,  3.91,  0.60);  object(0x01BF,  70,  270,  328);
move(-4.06,  2.25,  0.70);  object(0x01BF,  70,  270,  304);
move(-5.58,  -0.32,  0.80);  object(0x01BF,  70,  270,  279);
move(-4.48,  -1.99,  0.00);  object(0x01BF,  70,  270,  610);
move(-3.14,  -4.44,  0.80);  object(0x01BF,  70,  270,  579);
move(-0.67,  -4.81,  1.00);  object(0x01BF,  70,  270,  560);
move(-314.01,  -346.51,  -33.57);  object(0x01BF,  235,  0,  270);
move(-4.56,  -0.01,  3.80);  object(0x01BF,  225,  0,  270);
move(-3.54,  -0.01,  4.30);  object(0x01BF,  215,  0,  270);
move(-2.66,  -0.01,  4.70);  object(0x01BF,  205,  0,  270);
move(-1.90,  -0.00,  5.10);  object(0x01BF,  195,  0,  270);
move(-1.00,  -0.00,  5.70);  object(0x01BF,  185,  0,  270);
move(0.00,  0.00,  5.60);  object(0x01BF,  175,  0,  270);
move(0.94,  0.00,  5.40);  object(0x01BF,  165,  0,  270);
move(1.93,  0.00,  5.20);  object(0x01BF,  155,  0,  270);
move(2.74,  0.01,  4.60);  object(0x01BF,  145,  0,  270);
move(3.20,  0.01,  4.00);  object(0x01BF,  135,  0,  270);
move(3.43,  0.02,  3.00);  object(0x01BF,  125,  0,  270);
move(4.10,  0.02,  2.40);  object(0x01BF,  115,  0,  270);
move(4.91,  0.02,  1.70);  object(0x01BF,  105,  0,  270);
move(5.13,  -0.00,  0.80);  object(0x01BF,  85,  0,  450);
move(5.63,  0.06,  0.20);  object(0x01BF,  90,  0,  449);
teleport(-1229,  -554,  11.11);

setshort(0x992FE9E,   0x4c,   0x69,   0x76,   0x65,   0x20,   0x54,   0x69,   0x72,   0x65);
setchar(0x945bc22,   0x1);
setchar(0x945bc21,   0x45);
setchar(0x945bc20,   0x52);
setshort(0x94433d0,   250);
setfloat(0x94433cc,   3);
setfloat(0x945bba0,   100);
setfloat(0x945bba8,   1);
setfloat(0x945bc60,   0.28);
setfloat(0x945bc64,   -0.07999);
setfloat(0x945bc68,   0.5);
setfloat(0x945bc2c,   0.43333);
setfloat(0x945bc30,   0.43333);
setfloat(0x945bc24,   0.0032);
setfloat(0x945bc40,   0.5);
setfloat(0x945bc44,   0);
setfloat(0x945bc48,   25);
setfloat(0x945bc58,   1.6);
setfloat(0x945bc5c,   0.1);
setfloat(0x945bc74,   0.2);
setfloat(0x945bc6c,   0);
setfloat(0x945bbc0,   0);
setfloat(0x945bbc4,   0.05);
setfloat(0x945bbc8,   -0.29999);
setchar(0x945bbd0,   70);
setfloat(0x945bc4c,   0.75);
setfloat(0x945bc50,   0.48);
setfloat(0x945bbac,   0);
sethex(0x945bc70,   0x10,   0x01,   0x00,   0x04);
sethex(0x944fb54,   0x00,   0x00,   0x00);
sethex(0x944faf4,   0xDB,   0x0D,   0x08);
setint(0x8E38A38,   169);
setchar(0x8E38A5C,   125,   101);
sethex(0x8E38A5E,   0x01,   0x00);
teleport(292.22,   -440.37,   26.02);
setchar(pplayer + 0xB84,   0x00);

setint(pplayer + 0x05f0,  100); // (int) handgun ammo loaded 
setint(pplayer + 0x05f4,  200); // (int) handgun ammo total 
setint(pplayer + 0x060c,  100); // (int) shotgun ammo loaded 
setint(pplayer + 0x0610,  200); // (int) shotgun ammo total 
setint(pplayer + 0x0628,  100); // (int) smg ammo loaded 
setint(pplayer + 0x062c,  200); // (int) smg ammo total 
setint(pplayer + 0x0644,  100); // (int) assault rifle ammo loaded 
setint(pplayer + 0x0648,  200); // (int) assault rifle ammo total 
setint(pplayer + 0x0660,  100); // (int) minigun ammo loaded 
setint(pplayer + 0x0664,  200); // (int) minigun ammo total 
setint(pplayer + 0x0664,  200); // (int) rocket launcher ammo total 
setint(pplayer + 0x067c,  100); // (int) sniper rifle ammo loaded 
setint(pplayer + 0x0680,  200); // (int) sniper rifle ammo total 

setshort(0x993015C,  0x56,  0x61,  0x6c,  0x69,  0x61,  0x6e,  0x74);
setchar(0x945da22,  0x5);
setchar(0x945da21,  0x50);
setchar(0x945da20,  0x52);
setshort(0x9446f30,  250);
setfloat(0x9446f2c,  0.720);
setfloat(0x945d9a0,  800);
setfloat(0x945d9a8,  1.2);
setfloat(0x945da60,  0.09);
setfloat(0x945da64,  -0.64000);
setfloat(0x945da68,  0.750);
setfloat(0x945da2c,  0.76000);
setfloat(0x945da30,  0.76000);
setfloat(0x945da24,  0.0040);
setfloat(0x945da40,  0.55);
setfloat(0x945da44,  0);
setfloat(0x945da48,  35);
setfloat(0x945da58,  0.85);
setfloat(0x945da5c,  0.3);
setfloat(0x945da74,  0);
setfloat(0x945da6c,  0);
setfloat(0x945d9c0,  0);
setfloat(0x945d9c4,  0.0001);
setfloat(0x945d9c8,  0);
setchar(0x945d9d0,  103);
setfloat(0x945da4c,  0.82);
setfloat(0x945da50,  0.51);
setfloat(0x945d9ac,  0.6);
sethex(0x945da70,  0x02,  0x01,  0x01,  0x03);
setchar(0x967E6FC,  0xFF,  0x10,  0x00);
sethex(0x944fb3c,  0x00,  0xF3,  0x00);
sethex(0x944fb1c,  0x00,  0xF3,  0x00);
setint(0x8E38A38,  207);
setchar(0x8E38A5C,  119,  111);
sethex(0x8E38A5E,  0x01,  0x00);
teleport(292.22,  -440.37,  26.02);
setchar(pplayer + 0xB84,  0x00);

moveto(-857.12,   -870.78,   13.36);  object(0x01BF,   0,   0,   90);
move(0.03,   -7.90,   0.00);  object(0x01BF,   0,   0,   90);
move(0.03,   -7.60,   0.00);  object(0x01BF,   0,   0,   90);
move(0.03,   -7.70,   0.00);  object(0x01BF,   0,   0,   90);
move(0.03,   -8.00,   0.00);  object(0x01BF,   0,   0,   90);
move(0.03,   -7.80,   0.00);  object(0x01BF,   0,   0,   90);
move(0.03,   -7.80,   0.00);  object(0x01BF,   0,   0,   90);
move(0.03,   -7.80,   0.00);  object(0x01BF,   0,   0,   90);
move(0.00,   0.00,   6.50);  object(0x01BF,   0,   0,   90);
move(-0.03,   8.00,   0.00);  object(0x01BF,   0,   0,   90);
move(-0.03,   7.90,   0.00);  object(0x01BF,   0,   0,   90);
move(-0.03,   7.80,   0.00);  object(0x01BF,   0,   0,   90);
move(-0.03,   7.80,   0.00);  object(0x01BF,   0,   0,   90);
move(-0.03,   7.60,   0.00);  object(0x01BF,   0,   0,   90);
move(-0.03,   7.90,   0.00);  object(0x01BF,   0,   0,   90);
move(-0.03,   7.60,   0.00);  object(0x01BF,   0,   0,   90);
move(-4.12,   3.49,   -6.60);  object(0x01BF,   0,   355,   0);
move(1.10,   0.00,   0.00);  object(0x01BF,   0,   355,   0);
move(-2.20,   -1.54,   -17.25);  object(0x01BD,   0,   0,   40);
move(-0.29,   -0.67,   7.00);  object(0x01BD,   0,   0,   40);
move(-5.54,   2.28,   10.30);  object(0x01BF,   0,   305,   359);
move(-6.10,   -0.09,   1.00);  object(0x01BF,   0,   205,   359);
move(-4.50,   -0.07,   -1.20);  object(0x01BF,   0,   0,   359);
move(6.40,   0.09,   0.00);  object(0x01BF,   0,   0,   359);
move(5.90,   0.09,   0.00);  object(0x01BF,   0,   0,   359);
move(-20.30,   -0.30,   0.00);  object(0x01BF,   0,   0,   359);
move(-2.94,   -3.93,   0.00);  object(0x01BF,   0,   155,   82);
move(0.70,   -5.05,   -1.60);  object(0x01BF,   275,   155,   82);
move(0.68,   -6.17,   1.50);  object(0x01BF,   0,   0,   82);
move(0.95,   -7.46,   0.00);  object(0x01BF,   0,   0,   90);
move(0.09,   -8.00,   0.00);  object(0x01BF,   0,   0,   90);
move(0.09,   -7.40,   0.00);  object(0x01BF,   0,   0,   90);
move(0.08,   -7.00,   0.00);  object(0x01BF,   335,   320,   90);
move(2.06,   -10.05,   0.00);  object(0x01BF,   30,   320,   92);
move(-0.24,   -7.19,   0.00);  object(0x01BF,   0,   180,   92);
move(-0.24,   1.05,   0.00);  object(0x01BF,   0,   180,   90);
move(4.30,   -4.36,   0.00);  object(0x01BF,   0,   230,   1);
move(6.20,   -0.08,   0.00);  object(0x01BF,   0,   105,   1);
move(6.50,   -0.08,   0.00);  object(0x01BF,   0,   225,   1);
move(7.04,   1.14,   0.00);  object(0x01BF,   330,   180,   333);
move(0.83,   60.70,   3.40);  object(0x01BF,   270,   180,   86);
move(0.58,   -7.48,   0.00);  object(0x01BF,   270,   180,   86);
move(-0.57,   -7.13,   0.00);  object(0x01BF,   270,   180,   78);
move(-0.21,   -5.06,   0.00);  object(0x01BF,   270,   180,   51);
move(-0.24,   -6.00,   0.00);  object(0x01BF,   270,   180,   38);
move(-3.34,   -1.18,   0.00);  object(0x01BF,   270,   180,   38);
move(-1.62,   1.62,   0.00);  object(0x01BF,   270,   180,   79);
move(-0.25,   3.32,   0.00);  object(0x01BF,   270,   180,   112);
move(1.00,   4.93,   0.00);  object(0x01BF,   270,   180,   123);
move(1.60,   6.49,   0.00);  object(0x01BF,   270,   180,   123);
move(0.35,   5.04,   0.00);  object(0x01BF,   270,   180,   123);
move(-1.60,   5.36,   0.00);  object(0x01BF,   270,   180,   141);
move(-10.41,   -61.30,   -4.10);  object(0x01BF,   180,   180,   183);
move(-0.05,   -0.16,   6.40);  object(0x01BF,   180,   180,   183);
move(6.89,   -0.32,   0.00);  object(0x01BF,   180,   180,   183);
move(5.64,   2.95,   -6.20);  object(0x01BF,   140,   105,   172);
move(-12.40,   3.89,   0.00);  object(0x01BF,   140,   105,   171);
move(7.16,   16.90,   0.00);  object(0x01BF,   140,   95,   14);
move(-3.92,   12.45,   -1.70);  object(0x01BF,   140,   40,   66);
move(10.75,   21.18,   0.50);  object(0x01BF,   140,   40,   356);
move(-7.70,   -0.53,   0.00);  object(0x01BF,   140,   325,   304);
move(-4.11,   -5.69,   -1.00);  object(0x021C,   0,   0,   55);
move(-1.31,   1.29,   0.00);  object(0x021C,   0,   0,   34);
move(1.20,   -0.64,   0.00);  object(0x021C,   0,   0,   34);
move(9.48,   -6.42,   0.00);  object(0x021C,   0,   0,   55);
move(-18.17,   0.09,   0.00);  object(0x021C,   0,   0,   55);
move(17.95,   -32.24,   -0.50);  object(0x021C,   0,   0,   55);
move(4.46,   21.43,   7.00);  object(0x021C,   0,   0,   55);
move(-3.96,   10.04,   -22.32);  object(0x003A,   0,   0,   87);
move(0.09,   0.02,   22.60);  object(0x09F9,   0,   0,   87);
move(-10.56,   -0.42,   -6.60);  object(0x09F9,   0,   0,   87);
move(10.35,   -14.12,   -0.10);  object(0x09F9,   0,   0,   87);
move(3.60,   -1.91,   1.00);  object(0x0F90,   155,   0,   102);
move(1.40,   22.40,   0.00);  object(0x0F90,   155,   0,   102);
move(-0.38,   2.80,   6.50);  object(0x0F90,   155,   0,   87);
move(-0.01,   0.20,   0.00);  object(0x0F90,   155,   0,   87);
move(-0.01,   0.10,   0.00);  object(0x0F90,   155,   0,   87);
move(-0.01,   0.10,   0.00);  object(0x0F90,   155,   0,   87);
move(-16.73,   -25.26,   -8.00);  object(0x0F90,   0,   0,   87);
move(0.01,   -0.20,   0.00);  object(0x0F90,   0,   0,   87);
move(0.01,   -0.20,   0.00);  object(0x0F90,   0,   0,   87);
moveto(-869.17,   -888.01,   10.11);  object(0x0F90,   0,   0,   99);
move(3.77,   1.41,   0.10);  object(0x0F90,   0,   0,   99);
move(-4.31,   -0.82,   6.20);  object(0x0F90,   0,   0,   99);
move(0.11,   0.93,   0.00);  object(0x0F90,   0,   0,   99);
move(0.11,   0.98,   0.00);  object(0x0F90,   0,   0,   99);
move(0.19,   1.12,   0.00);  object(0x0F90,   0,   0,   99);
move(0.29,   1.14,   0.00);  object(0x0F90,   0,   0,   99);
move(0.33,   1.78,   0.00);  object(0x0F90,   0,   0,   99);
move(0.27,   1.37,   0.00);  object(0x0F90,   0,   0,   99);
move(0.24,   1.62,   0.00);  object(0x0F90,   0,   0,   99);
move(-0.12,   1.89,   0.00);  object(0x0F90,   0,   0,   99);
move(-0.14,   1.22,   0.00);  object(0x0F90,   0,   0,   99);
move(0.14,   1.46,   0.00);  object(0x0F90,   0,   0,   99);
move(-1.08,   2.46,   0.00);  object(0x0F90,   0,   0,   74);
move(1.17,   -5.91,   0.00);  object(0x0F90,   0,   0,   4);
move(-1.59,   -0.18,   0.00);  object(0x0F90,   0,   0,   4);
move(-1.49,   -0.17,   -0.60);  object(0x0F90,   340,   0,   4);
move(1.05,   -7.42,   -4.60);  object(0x0F90,   295,   0,   353);
move(0.37,   -1.54,   5.10);  object(0x0F90,   0,   0,   353);
move(-1.85,   0.21,   0.00);  object(0x0F90,   0,   0,   353);
teleport(-857.12,   -870.78,   13.36);
setfloat(08B89E40,   -873.78 ,   -880.85 ,   11.11);
setchar(08B89E30,   1);
setfloat(08B89E80,   -867.26 ,   -875.95 ,   15.29);
setchar(08B89E70,   1);
setfloat(08B89EC0,   -860.65 ,   -883.48 ,   17.59);
setchar(08B89EB0,   1);

setchar(0x09b688de,  3);
setchar(0x09b67f4e,  1);
setchar(0x09b6803e,  1);
setchar(0x09b6806e,  1);
setchar(0x09b5e2fe,  1);
setchar(0x09b5e3ee,  1);
setchar(0x09b5d1de,  0);
setchar(0x09b5d2fe,  0);
setchar(0x09b5d32e,  0);
setchar(0x09b5b4fe,  0);
setchar(0x09b5b61e,  0);
setchar(0x09b5725e,  2);
setchar(0x09b60b0a,  1);
setchar(0x09b60b09,  21);
setchar(0x09b60b39,  21);
setchar(0x09b60b3a,  1);
setchar(0x09b60bc9,  21);
setchar(0x09b60bca,  1);
setchar(0x09b60bf9,  21);
setchar(0x09b60bfa,  1);
setchar(0x09b60e0e,  6);
setchar(0x09b60e3e,  6);

setfloat(pcar + 0x3d4,   1.6);
setfloat(pcar + 0x404,   1.6);
setfloat(pcar + 0x434,   1.6);
setfloat(pcar + 0x464,   1.6);
setchar(pcar + 0x438,   0,   1,   1,   0);
setchar(pcar + 0x3d8,   0,   1,   1,   0);
setchar(pcar + 0x408,   0,   1,   1,   0);
setchar(pcar + 0x468,   0,   1,   1,   0); 

setshort(0x992FEE2,   0x20,   0x42,   0x4d,   0x57,   0x20,   0x4d,   0x35,   0x20,   0x68,   0x61,   0x6d,   0x61,   0x6e,   0x6e);
setchar(0x945bd12,   0x5);
setchar(0x945bd11,   0x50);
setchar(0x945bd10,   0x34);
setshort(0x9443880,   250);
setfloat(0x944387c,   0.85);
setfloat(0x945bc90,   5500);
setfloat(0x945bc98,   1.9);
setfloat(0x945bd50,   0.25);
setfloat(0x945bd54,   -0.025);
setfloat(0x945bd58,   0.5);
setfloat(0x945bd1c,   1.1);
setfloat(0x945bd20,   1.1);
setfloat(0x945bd14,   0.00325);
setfloat(0x945bd30,   0.575);
setfloat(0x945bd34,   0);
setfloat(0x945bd38,   48.125);
setfloat(0x945bd48,   1.25);
setfloat(0x945bd4c,   0.49375);
setfloat(0x945bd64,   0.25);
setfloat(0x945bd5c,   0);
setfloat(0x945bcb0,   0);
setfloat(0x945bcb4,   -0.19999);
setfloat(0x945bcb8,   -0.23999);
setchar(0x945bcc0,   70);
setfloat(0x945bd3c,   0.9);
setfloat(0x945bd40,   0.48);
setfloat(0x945bc9c,   0.52632);
sethex(0x945bd60,   0x82,   0x81,   0x00,   0x04);
setchar(0x967E6FC,   0xFF,   0x00,   0x00);
sethex(0x944fb4c,   0xFF,   0xFF,   0x00);
sethex(0x944fb0c,   0xFF,   0x00,   0xFF);
setint(0x8E38A38,   172);
sethex(0x8E38A5E,   0x01,   0x00);
teleport(292.22,   -440.37,   26.02);
setchar(pplayer + 0xB84,   0x00);

// Gun Flash
sethex(0x967CA14,   0x00,   0xFF,   0x30);
// Gun Flash (No Animation)
sethex(0x967CAA8,   0x00,   0xFF,   0x50);
// Gun Smoke
sethex(0x967CB3C,   0x00,   0xFF,   0x90);
// Gun Smoke 2
sethex(0x967CBD0,   0x00,   0xFF,   0x90);
// Sparks from bullets
sethex(0x967C168,   0x00,   0x20,   0xFF);
// Spark Size
sethex(0x967c163,   0x42);
// Sparks from cars and tires
sethex(0x967C1FC,   0x00,   0xFF,   0x20);
// Spark Size
sethex(0x967C1F7,   0x41);
// Bullet Hit Smoke
sethex(0x967E8B8,   0x00,   0xE0,   0xE0);
// Flamethrower flame
setchar(0x967C980,   0x00,   0x90,   0x30);
// Exaust Color
setchar(0x967E6FC,   0xFF,   0x50,   0x20);
// Smoke from tire when tire is leaving a black mark (hard to notice)
setchar(0x967E790,   0x00,   0x00,   0xFF);
// Smoke when you do a burnout (changes only the shade,   not the colors)
setchar(0x967E7EA,   0x00);
// Fire Hydrant color,   All hex values below here were found by Vettefan88 and theY4Kman
sethex(0x967F03C,   0xCC,   0x00,   0x00);
// Fire Hydrant color 2
sethex(0x967DC94,   0xFF,   0x00,   0x00);
// Dust from car color
sethex(0x967DF77,   0xFF,   0xFF,   0xFF);
// Rocket smoke color
sethex(0x967EB9C,   0x00,   0xCC,   0xFF);
// Ferry Chimney smoke color
sethex(0x967EF14,   0xCC,   0x33,   0x00);
// Engine smoke color 1
sethex(0x967E134,   0x00,   0xFF,   0xCC);
// Engine smoke color 2
sethex(0x967E1C8,   0x00,   0xFF,   0xCC);
// Engine smoke color 3
sethex(0x967E25C,   0x00,   0xFF,   0xCC);
// Engine fire color
sethex(0x0967D104,   0x00,   0xFF,   0xCC);
// General fire color
sethex(0x0967C8EC,   0x66,   0xFF,   0xCC);
// Blood color 1
sethex(0x967C4E0,   0x00,   0x00,   0xFF);
// Blood color 2
sethex(0x967C574,   0x00,   0x00,   0xFF);
// Blood Spurt
sethex(0x967C608,   0x00,   0x00,   0xFF);
// Dirt from tire color
sethex(0x967C308,   0xFF,   0xFF,   0xCC)
// Raindrop
sethex(0x967D510,   0xFF,   0x00,   0x59);
// Small Raindrop
sethex(0x967D5A4,   0xFF,   0x00,   0x59);
// Rain Splash
sethex(0x967D638,   0xFF,   0x00,   0x59);
// Big Row of Rain Splash
sethex(0x967D6CC,   0xFF,   0x00,   0x59);
// Rain Splash Up
sethex(0x967D760,   0xFF,   0x00,   0x59);
// Water Spray
sethex(0x967D7F4,   0xFF,   0x00,   0x59);
// Car Splash
sethex(0x967DAD8,   0xFF,   0x00,   0x59);
// Boat Splash
sethex(0x967DB6C,   0xFF,   0x00,   0x59);
// Jet Thrust from Boat
sethex(0x967DC00,   0xFF,   0x00,   0x59);
// Ped Splash
sethex(0x967DE50,   0xFF,   0x00,   0x59);
// Medium Explosion
sethex(0x967D888,   0x00,   0xCC,   0xFF);
// Large Explosion
sethex(0x967D91C,   0x00,   0xCC,   0xFF);
// Medium Fast Explosion
sethex(0x967D9B0,   0x00,   0xCC,   0xFF);
// Large Fast Explosion
sethex(0x967DA44,   0x00,   0xCC,   0xFF);
// Extinguish Steam
sethex(0x967DDBC,   0xCC,   0xFF,   0xFF);
//Moltov Center Flame -edited from Zywolf's moltov cheat
setchar(0x967D104,   0xFF,   0x00,   0xFF);
setchar(0x967D11B,   0x44);
// Pimped Diablo,   handles like a Yakuza Stinger
setshort(0x992FF36,   0x44,   0x69,   0x61,   0x62,   0x6c,   0x6f,   0x20,   0x53,   0x6f,   0x67,   0x67,   0x73,   0x74,   0x65,   0x72);
sethex(0x945c6c1,   0x01);
setchar(0x945c672,   0x5);
setchar(0x945c671,   0x50);
setchar(0x945c670,   0x34);
setshort(0x9443d30,   254);
setfloat(0x9443d2c,   0.9);
setfloat(0x945c5f0,   1700);
setfloat(0x945c5f8,   0.8);
setfloat(0x945c6b0,   0.35);
setfloat(0x945c6b4,   -0.2);
setfloat(0x945c6b8,   0.5);
setfloat(0x945c67c,   1.00933);
setfloat(0x945c680,   1.00933);
setfloat(0x945c674,   0.00128);
setfloat(0x945c690,   0.52);
setfloat(0x945c694,   0);
setfloat(0x945c698,   35);
setfloat(0x945c6a8,   1.5);
setfloat(0x945c6ac,   0.1);
setfloat(0x945c6c4,   0.25);
setfloat(0x945c6bc,   0.95);
setfloat(0x945c610,   0);
setfloat(0x945c614,   -0.2);
setfloat(0x945c618,   -0.25);
setchar(0x945c620,   70);
setfloat(0x945c69c,   0.8);
setfloat(0x945c6a0,   0.53);
setfloat(0x945c5fc,   0.0);
sethex(0x944fb40,   0x00,   0x00,   0x00);
sethex(0x944fb20,   0x00,   0x00,   0x00);
setint(0x8E38A38,   175);
sethex(0x8E38A5E,   0x01,   0x00);
//car drive on water
setchar(0x08b33e32,   1);
//bloody footprint
setchar(pplayer + 0x198,   0x40);
//max ammo
setint(pplayer + 0x05f0,   100);
setint(pplayer + 0x05f4,   9999);
setint(pplayer + 0x060c,   100);
setint(pplayer + 0x0610,   9999);
setint(pplayer + 0x0628,   100);
setint(pplayer + 0x062c,   9999);
setint(pplayer + 0x0644,   100);
setint(pplayer + 0x0648,   9999);
setint(pplayer + 0x0660,   100);
setint(pplayer + 0x0664,   9999);
setint(pplayer + 0x0664,   9999);
setint(pplayer + 0x067c,   100);
setint(pplayer + 0x0680,   9999);
setint(pplayer + 0x000005D8,   9999);
//all peds boody WB
setchar(099542b0+0x167-cb0,   0xf)
setchar(099542b0+0x167-0x1960,   0xf)
setchar(099542b0+0x167-0x2610,   0xf)
setchar(099542b0+0x167-0x32c0,   0xf)
setchar(099542b0+0x167-0x3F70,   0xf)
setchar(099542b0+0x167-0x4c20,   0xf)
setchar(099542b0+0x167-0x58d0,   0xf)
setchar(099542b0+0x167,   0xf)
setchar(0994b720+0x167,   0x5)
setchar(0994d080+0x167,   0xf)
setchar(0994dd30+0x167,   0xf)
setchar(0995ce40+0x167,   0xf)
setchar(099542b0+0x167+cb0,   0xf)
setchar(099542b0+0x167+0x1960,   0xf)
setchar(099542b0+0x167+0x2610,   0xf)
setchar(099542b0+0x167+0x32c0,   0xf)
setchar(099542b0+0x167+0x3F70,   0xf)
setchar(099542b0+0x167+0x4c20,   0xf)
setchar(099542b0+0x167+0x58d0,   0xf)
setchar(099542b0+0x167+0x6580,   0xf)
setchar(099542b0+0x167+0x7230,   0xf)
setchar(099542b0+0x167+0x7ee0,   0xf)
setchar(099542b0+0x167+0x8b90,   0xf)
setchar(099542b0+0x167+0x9840,   0xf)
setchar(099542b0+0x167+104f0,   0xf)
setchar(099542b0+0x167+0xb1a0,   0xf)
setchar(099542b0+0x167+0xbe50,   0xf)
setchar(099542b0+0x167+0xcb00,   0xf)
setchar(099542b0+0x167+0xd7b0,   0xf)
setchar(099542b0+0x167+0xe460,   0xf)
setchar(099542b0+0x167+0xf110,   0xf)
setchar(099542b0+0x167+0xfdc0,   0xf)
setchar(099542b0+0x167+0x10a70,   0xf)
setchar(099542b0+0x167+0x11720,   0xf)
setchar(099542b0+0x167+0x123d0,   0xf)
setchar(099542b0+0x167+0x13080,   0xf)
setchar(099542b0+0x167+0x13d30,   0xf)
setchar(099542b0+0x167+0x149e0,   0xf)
setchar(099542b0+0x167+0x15690,   0xf)
setchar(099542b0+0x167+0x16340,   0xf)
setchar(099542b0+0x167+0x16ff0,   0xf)
setchar(099542b0+0x167+0x17ca0,   0xf)
setchar(099542b0+0x167+0x18950,   0xf)
setchar(099542b0+0x167+0x19600,   0xf)
setchar(099542b0+0x167+0x1a2b0,   0xf)
setchar(099542b0+0x167+0x1af60,   0xf)
setchar(099542b0+0x167+0x1bc10,   0xf)
setchar(099542b0+0x167+0x1c8c0,   0xf)
setchar(099542b0+0x167+0x1d570,   0xf)
setchar(099542b0+0x167+0x1e220,   0xf)
setchar(099542b0+0x167+0x1eed0,   0xf)
setchar(099542b0+0x167+0x1fb80,   0xf)
setchar(099542b0+0x167+0x20830,   0xf)
setchar(099542b0+0x167+0x214e0,   0xf)
setchar(099542b0+0x167+0x22190,   0xf)
setchar(099542b0+0x167+0x22e40,   0xf)
setchar(099542b0+0x167+0x23af0,   0xf)
setchar(099542b0+0x167+0x247a0,   0xf)
setchar(099542b0+0x167+0x25450,   0xf)
setchar(099542b0+0x167+0x26100,   0xf)
//ped bloody foot
setchar(099542b0+0x168-cb0,   0x40)
setchar(099542b0+0x168-0x1960,   0x40)
setchar(099542b0+0x168-0x2610,   0x40)
setchar(099542b0+0x168-0x32c0,   0x40)
setchar(099542b0+0x168-0x3F70,   0x40)
setchar(099542b0+0x168-0x4c20,   0x40)
setchar(099542b0+0x168-0x58d0,   0x40)
setchar(099542b0+0x168,   0x40)
setchar(0994b720+0x168,   0x40)
setchar(0994d080+0x168,   0x40)
setchar(0994dd30+0x168,   0x40)
setchar(099542b0+0x168+cb0,   0x40)
setchar(099542b0+0x168+0x1960,   0x40)
setchar(099542b0+0x168+0x2610,   0x40)
setchar(099542b0+0x168+0x32c0,   0x40)
setchar(099542b0+0x168+0x3F70,   0x40)
setchar(099542b0+0x168+0x4c20,   0x40)
setchar(099542b0+0x168+0x58d0,   0x40)
setchar(099542b0+0x168+0x6580,   0x40)
setchar(099542b0+0x168+0x7230,   0x40)
setchar(099542b0+0x168+0x7ee0,   0x40)
setchar(099542b0+0x168+0x8b90,   0x40)
setchar(099542b0+0x168+0x9840,   0x40)
setchar(099542b0+0x168+104f0,   0x40)
setchar(099542b0+0x168+0xb1a0,   0x40)
setchar(099542b0+0x168+0xbe50,   0x40)
setchar(099542b0+0x168+0xcb00,   0x40)
setchar(099542b0+0x168+0xd7b0,   0x40)
setchar(099542b0+0x168+0xe460,   0x40)
setchar(099542b0+0x168+0xf110,   0x40)
setchar(099542b0+0x168+0xfdc0,   0x40)
setchar(099542b0+0x168+0x10a70,   0x40)
setchar(099542b0+0x168+0x11720,   0x40)
setchar(099542b0+0x168+0x123d0,   0x40)
setchar(099542b0+0x168+0x13080,   0x40)
setchar(099542b0+0x168+0x13d30,   0x40)
setchar(099542b0+0x168+0x149e0,   0x40)
setchar(099542b0+0x168+0x15690,   0x40)
setchar(099542b0+0x168+0x16340,   0x40)
setchar(099542b0+0x168+0x16ff0,   0x40)
setchar(099542b0+0x168+0x17ca0,   0x40)
setchar(099542b0+0x168+0x18950,   0x40)
setchar(099542b0+0x168+0x19600,   0x40)
setchar(099542b0+0x168+0x1a2b0,   0x40)
setchar(099542b0+0x168+0x1af60,   0x40)
setchar(099542b0+0x168+0x1bc10,   0x40)
setchar(099542b0+0x168+0x1c8c0,   0x40)
setchar(099542b0+0x168+0x1d570,   0x40)
setchar(099542b0+0x168+0x1e220,   0x40)
setchar(099542b0+0x168+0x1eed0,   0x40)
setchar(099542b0+0x168+0x1fb80,   0x40)
setchar(099542b0+0x168+0x20830,   0x40)
setchar(099542b0+0x168+0x214e0,   0x40)
setchar(099542b0+0x168+0x22190,   0x40)
setchar(099542b0+0x168+0x22e40,   0x40)
setchar(099542b0+0x168+0x23af0,   0x40)
setchar(099542b0+0x168+0x247a0,   0x40)
setchar(099542b0+0x168+0x25450,   0x40)
setchar(099542b0+0x168+0x26100,   0x40)
//always bleeding
setchar(pplayer + 0x197,   0x0F);
//Peds have Weapons - by Sousanator
setchar(0x8B564D8,   1);
//Super Punch
setchar(pplayer + 0x0bb3,   0x01);
//fireball lifespan
setint(0x967C960,   5000);
//Staunton Marquee Text mod-teleport to 248.68,   -658.68,   26.02 to see it
setchar(0x08B586C8,   0x53,   0x2e,   0x4f,   0x2e,   0x47,   0x2e,   0x20,   0x69,   0x73,   0x20,   0x74,   0x68,   0x65,   0x20,   0x62,   0x65,   0x73,   0x74,   0x20,   0x6d,   0x6f,   0x64,   0x64,   0x65,   0x72,   0x20,   0x65,   0x76,   0x65,   0x72,   0x21,   0x20,   0x53,   0x6f,   0x20,   0x63,   0x68,   0x65,   0x63,   0x6b,   0x20,   0x79,   0x6f,   0x73,   0x65,   0x6c,   0x66,   0x20,   0x66,   0x6f,   0x6f,   0x6c,   0x21);

setchar(0x08b5e090,   66,   6);

setfloat(0x8E55530,   -73,   -931,   26.50);
moveto(-72.85,   -944.33,   26.36); object(0x01E4,   0,   0,   178);
move(-8.69,   -0.36,   0.00); object(0x01E4,   0,   0,   178);
move(-4.28,   4.17,   0.00); object(0x01E4,   0,   0,   271);
move(0.23,   8.90,   0.00); object(0x01E4,   0,   0,   271);
move(0.51,   8.98,   0.20); object(0x01E4,   0,   0,   270);
move(4.31,   4.21,   0.00); object(0x01E4,   0,   0,   0);
move(8.90,   -0.01,   0.00); object(0x01E4,   0,   0,   0);
move(8.70,   -0.01,   0.00); object(0x01E4,   0,   0,   0);
move(4.34,   -4.14,   -0.20); object(0x01E4,   0,   0,   92);
move(-0.28,   -8.80,   0.00); object(0x01E4,   0,   0,   92);
move(-0.28,   -8.70,   0.00); object(0x01E4,   0,   0,   92);
move(-4.84,   -3.97,   0.00); object(0x01E4,   0,   0,   178);
move(-17.24,   -0.73,   3.00); object(0x01E4,   0,   0,   178);
move(8.59,   0.30,   0.00); object(0x01E4,   0,   0,   178);
move(8.89,   0.31,   0.00); object(0x01E4,   0,   0,   178);
move(4.40,   4.53,   0.00); object(0x01E4,   0,   0,   93);
move(0.49,   8.59,   0.00); object(0x01E4,   0,   0,   93);
move(0.50,   8.79,   0.00); object(0x01E4,   0,   0,   93);
move(-4.41,   4.02,   0.00); object(0x01E4,   0,   0,   2);
move(-8.70,   0.26,   0.00); object(0x01E4,   0,   0,   2);
move(-9.00,   0.27,   0.00); object(0x01E4,   0,   0,   2);
move(-4.82,   -4.34,   0.00); object(0x01E4,   0,   0,   270);
move(0.08,   -8.90,   0.00); object(0x01E4,   0,   0,   270);
move(0.08,   -9.20,   0.00); object(0x01E4,   0,   0,   270);
//other part
moveto(-73.00,   -937.85,   26.77); object(0x0251,   0,   0,   180);
move(-2.42,   0.62,   0.00); object(0x0251,   0,   0,   209);
move(-2.23,   2.54,   0.00); object(0x0251,   0,   0,   248);
move(-0.31,   2.45,   0.00); object(0x0251,   0,   0,   277);
move(0.54,   3.45,   0.00); object(0x0251,   0,   0,   317);
move(3.55,   1.95,   0.00); object(0x0251,   0,   0,   2);
move(4.45,   -1.32,   0.00); object(0x0251,   0,   0,   52);
move(1.27,   -4.42,   0.00); object(0x0251,   0,   0,   105);
move(-0.85,   -3.21,   0.00); object(0x0251,   0,   0,   139);
setfloat(0x09D5e240,   150)
sethex(0x99D4492,   0xFF);
sethex(0x99D44D6,   0x00);
sethex(0x99D4546,   0xFF);
sethex(0x99D45A6,   0xFF);
sethex(0x99D456A,   0xFF);
sethex(0x99D44AE,   0xFF);
sethex(0x99D467B,   0xFF);
sethex(0x99D46EA,   0xFF);
sethex(0x99D46AA,   0xFF);
sethex(0x99D473A,   0xFF);

moveto(200.78,   -993.72,   121.76); object(0x01BF,   55,   0,   180);
move(0.05,   -6.20,   1.90); object(0x01BF,   270,   0,   358);
move(3.44,   0.96,   2.40); object(0x01BF,   0,   0,   88);
move(-7.06,   -0.65,   0.00); object(0x01BF,   0,   0,   265);
move(3.49,   0.31,   3.20); object(0x01BF,   270,   0,   356);
move(-0.01,   2.89,   -5.71); object(0x0239,   0,   0,   181);
move(0.00,   0.02,   2.30); object(0x0239,   0,   0,   181);
move(0.54,   -5.96,   2.70); object(0x01F3,   0,   0,   182);
move(-0.02,   -0.46,   -5.54); object(0x01F3,   0,   0,   176);
teleport(202.07,   -987.66,   121.16);

setfloat(0x08B833DC,   30); 
setfloat(0x08B83374,   30); 
setfloat(0x08B834EC,   -2); 
setchar(0x08B834F0,   0x06,   0xA0,   0xF6,   0xBC); 

setchar(0x09D419A2,   0xFF);

setshort(0x992FDD4,   0x20,   0x45,   0x73,   0x6f,   0x67,   0x65,   0x65);
setchar(0x945b0e2,   0x5);
setchar(0x945b0e1,   0x50);
setchar(0x945b0e0,   0x34);
setshort(0x94425c0,   254);
setfloat(0x94425bc,   0.92);
setfloat(0x945b060,   2000);
setfloat(0x945b068,   0.85);
setfloat(0x945b120,   0.45);
setfloat(0x945b124,   -0.2);
setfloat(0x945b128,   0.65);
setfloat(0x945b0ec,   1.11733);
setfloat(0x945b0f0,   1.11733);
setfloat(0x945b0e4,   0.00264);
setfloat(0x945b100,   0.52);
setfloat(0x945b104,   0);
setfloat(0x945b108,   35);
setfloat(0x945b118,   1.6);
setfloat(0x945b11c,   0.11);
setfloat(0x945b134,   0.15);
setfloat(0x945b12c,   0.3);
setfloat(0x945b080,   0);
setfloat(0x945b084,   -0.05);
setfloat(0x945b088,   -0.2);
setchar(0x945b090,   70);
setfloat(0x945b10c,   0.8);
setfloat(0x945b110,   0.55);
setfloat(0x945b06c,   0);
sethex(0x945b130,   0x83,   0x81,   0x00,   0x05);
sethex(0x944fb04,   0x29,   0x6B,   0xC5);
sethex(0x944fb24,   0x53,   0x93,   0xFD);
setint(0x8E38A38,   160);
setchar(0x8E38A5C,   105,   113);
sethex(0x8E38A5E,   0x01,   0x00);
teleport(292.22,   -440.37,   26.02);
setchar(0x08b33e32,   1);

setshort(0x992FD86,   0x53,   0x6f,   0x67,   0x61,   0x6e,   0x74,   0x20,   0x42,   0x65,   0x61,   0x73,   0x74);
setchar(0x945ad22,   0x4);
setchar(0x945ad21,   0x44);
setchar(0x945ad20,   0x34);
setshort(0x9441df0,   254);
setfloat(0x9441dec,   0.3);
setfloat(0x945aca0,   1000);
setfloat(0x945aca8,   1.6);
setfloat(0x945ad60,   0.45);
setfloat(0x945ad64,   -0.5);
setfloat(0x945ad68,   0.45);
setfloat(0x945ad2c,   0.75);
setfloat(0x945ad30,   0.75);
setfloat(0x945ad24,   0.0024);
setfloat(0x945ad40,   0.5);
setfloat(0x945ad44,   0);
setfloat(0x945ad48,   35);
setfloat(0x945ad58,   1.2);
setfloat(0x945ad5c,   0.07);
setfloat(0x945ad74,   0.38);
setfloat(0x945ad6c,   0);
setfloat(0x945acc0,   0);
setfloat(0x945acc4,   -0);
setfloat(0x945acc8,   -0.3);
setchar(0x945acd0,   80);
setfloat(0x945ad4c,   1.2);
setfloat(0x945ad50,   0.5);
setfloat(0x945acac,   0);
sethex(0x945ad70,   0x18,   0xa9,   0x00,   0x05);
sethex(0x944fb18,   0xC9,   0x15,   0x15);
sethex(0x944fb50,   0xFB,   0x5B,   0x29);
setint(0x8E38AE8,   155);
setchar(0x8E38A5C,   110,   124);
sethex(0x8E38B0E,   0x01,   0x00);
teleport(-789.61,   300.62,   49.05);
setchar(0x08b33e32,   1);

setshort(0x992FD36,   0x53,   0x4f,   0x47,   0x20,   0x20,   0x41,   0x65,   0x6f,   0x6e);
setchar(0x945a872,   0x5);
setchar(0x945a871,   0x50);
setchar(0x945a870,   0x46);
setshort(0x9441620,   254);
setfloat(0x944161c,   0.9);
setfloat(0x945a7f0,   2000);
setfloat(0x945a7f8,   0.8);
setfloat(0x945a8b0,   0.45);
setfloat(0x945a8b4,   -0.05);
setfloat(0x945a8b8,   0.5);
setfloat(0x945a87c,   1);
setfloat(0x945a880,   1);
setfloat(0x945a874,   0.0022);
setfloat(0x945a890,   0.6);
setfloat(0x945a894,   0);
setfloat(0x945a898,   35);
setfloat(0x945a8a8,   0.8);
setfloat(0x945a8ac,   0.4);
setfloat(0x945a8c4,   0.36);
setfloat(0x945a8bc,   0);
setfloat(0x945a810,   0);
setfloat(0x945a814,   0);
setfloat(0x945a818,   -0.25);
setchar(0x945a820,   70);
setfloat(0x945a89c,   0.88);
setfloat(0x945a8a0,   0.6);
setfloat(0x945a7fc,   0);
sethex(0x945a8c0,   0x01,   0x81,   0x00,   0x05);
sethex(0x944fb50,   0x29,   0x6B,   0xC5);
sethex(0x944fb30,   0x29,   0x6B,   0xC5);
setint(0x8E38A38,   150);
setchar(0x8E38A5C,   124,   116);
sethex(0x8E38A5E,   0x01,   0x00);
teleport(292.22,   -440.37,   26.02);
setchar(0x08b33e32,   1);

setshort(0x992FD86,   0x20,   0x20,   0x20,   0x20,   0x4c,   0x61,   0x6e,   0x64,   0x62,   0x6f,   0x61,   0x74);
setchar(0x945ad22,   0x4);
setchar(0x945ad21,   0x44);
setchar(0x945ad20,   0x34);
setshort(0x9441df0,   254);
setfloat(0x9441dec,   0.01);
setfloat(0x945aca0,   1000);
setfloat(0x945aca8,   1.0);
//upper limit
setfloat(0x945ad60,   0.6);
//lower limit
setfloat(0x945ad64,   -0.68);
setfloat(0x945ad68,   0.5);
setfloat(0x945ad2c,   0.75);
setfloat(0x945ad30,   0.75);
setfloat(0x945ad24,   0.002);
setfloat(0x945ad40,   0.5);
setfloat(0x945ad44,   0);
setfloat(0x945ad48,   35);
//force
setfloat(0x945ad58,   1.2);
//damp lvl
setfloat(0x945ad5c,   0.5);
setfloat(0x945ad74,   0.38);
setfloat(0x945ad6c,   0);
setfloat(0x945acc0,   0);
setfloat(0x945acc4,   0);
setfloat(0x945acc8,   -0.5);
setchar(0x945acd0,   80);
setfloat(0x945ad4c,   1.0);
setfloat(0x945ad50,   0.5);
setfloat(0x945acac,   0);
sethex(0x945ad70,   0x18,   0xa9,   0x00,   0x05);
sethex(0x944fb44,   0xFF,   0x0D,   0x08);
sethex(0x944fb50,   0x77,   0x35,   0x39);
setint(0x8E38AE8,   155);
setchar(0x8E38B0C,   106,   116);
sethex(0x8E38B0E,   0x01,   0x00);
teleport(-789.61,   300.62,   49.05);
setchar(0x08b33e32,   1);

setshort(0x99450E2,   0x59,   0x4b,   0x5a,   0x2d,   0x38,   0x30,   0x30);
setchar(0x945d482,   0x5);
setchar(0x945d481,   0x50);
setchar(0x945d480,   0x52);
setshort(0x9446c10,   255);
setfloat(0x9446c0c,   0.67);
setfloat(0x945d400,   450);
setfloat(0x945d408,   1.8);
setfloat(0x945d4c0,   0.25);
setfloat(0x945d4c4,   -0.159);
setfloat(0x945d4c8,   0.5);
setfloat(0x945d48c,   1.5);
setfloat(0x945d490,   1.5);
setfloat(0x945d484,   0.0085);
setfloat(0x945d4a0,   0.5);
setfloat(0x945d4a4,   0.005);
setfloat(0x945d4a8,   50);
setfloat(0x945d4b8,   0.75);
setfloat(0x945d4bc,   0.18);
setfloat(0x945d4d4,   0);
setfloat(0x945d4cc,   0);
setfloat(0x945d420,   0);
setfloat(0x945d424,   0.05);
setfloat(0x945d428,   -0.09);
setchar(0x945d430,   103);
setfloat(0x945d4ac,   1.3);
setfloat(0x945d4b0,   0.48);
setfloat(0x945d40c,   0);
sethex(0x945d4d0,   0x02,   0x81,   0x01,   0x05);
sethex(0x944fb24,   0x45,   0x50,   0x65);
sethex(0x944fb0c,   0x60,   0x05,   0x05);
setint(0x8E38A38,   205);
setchar(0x8E38A5C,   113,   107);
sethex(0x8E38A5E,   0x01,   0x00);
teleport(292.22,   -440.37,   26.02);

setshort(0x992FE5C,   0x53,   0x6f,   0x67,   0x6f);
setchar(0x945b772,   0x1);
setchar(0x945b771,   0x50);
setchar(0x945b770,   0x34);
setshort(0x9442c00,   254);
setfloat(0x9442bfc,   1.4);
setfloat(0x945b6f0,   2000);
setfloat(0x945b6f8,   0.9);
setfloat(0x945b7b0,   0.60);
setfloat(0x945b7b4,   -0.11);
setfloat(0x945b7b8,   0.5);
setfloat(0x945b77c,   1.50);
setfloat(0x945b780,   1.50);
setfloat(0x945b774,   0.01);
setfloat(0x945b790,   0.55);
setfloat(0x945b794,   0);
setfloat(0x945b798,   45);
setfloat(0x945b7a8,   1.2);
setfloat(0x945b7ac,   0.09);
setfloat(0x945b7c4,   0.5);
setfloat(0x945b7bc,   0);
setfloat(0x945b710,   0);
setfloat(0x945b714,   0.3);
setfloat(0x945b718,   -0.3);
setchar(0x945b720,   75);
setfloat(0x945b79c,   0.9);
setfloat(0x945b7a0,   0.5);
setfloat(0x945b6fc,   0);
sethex(0x945b7c0,   0x00,   0x81,   0x04,   0x05);
setchar(0x967E6FC,   0xFF,   0x00,   0x00);
sethex(0x944fb04,   0xFF,   0xFF,   0x00);
sethex(0x944fb58,   0xFF,   0x00,   0xFF);
setint(0x8E38A38,   164);
sethex(0x8E38A5E,   0x01,   0x00);
teleport(292.22,   -440.37,   26.02);

setfloat(0x8b834f4,   400);

//Deimos SP
setfloat(0x945cc88,   0);
setfloat(0x945cd2c,   0);
//Landstalker
setfloat(0x9459718,   0);
setfloat(0x94597bc,   0);
//Idaho
setfloat(0x9459808,   0);
setfloat(0x94598ac,   0);
//Stinger
setfloat(0x94598f8,   0);
setfloat(0x945999c,   0);
//Linerunner
setfloat(0x94599e8,   0);
setfloat(0x9459a8c,   0);
//Perenial
setfloat(0x9459ad8,   0);
setfloat(0x9459b7c,   0);
//Sentinel
setfloat(0x9459bc8,   0);
setfloat(0x9459c6c,   0);
//Patriot
setfloat(0x9459cb8,   0);
setfloat(0x9459d5c,   0);
//Firetruck
setfloat(0x9459da8,   0);
setfloat(0x9459e4c,   0);
//Trashmaster
setfloat(0x9459e98,   0);
setfloat(0x9459f3c,   0);
//Stretch
setfloat(0x9459f88,   0);
setfloat(0x945a02c,   0);
//Manana
setfloat(0x945a078,   0);
setfloat(0x945a11c,   0);
//Infernus
setfloat(0x945a168,   0);
setfloat(0x945a20c,   0);
//Blista
setfloat(0x945c148,   0);
setfloat(0x945c1ec,   0);
//Pony
setfloat(0x945a258,   0);
setfloat(0x945a2fc,   0);
//Mule
setfloat(0x945a348,   0);
setfloat(0x945a3ec,   0);
//Cheetah
setfloat(0x945a438,   0);
setfloat(0x945a4dc,   0);
//Ambulance
setfloat(0x945a528,   0);
setfloat(0x945a5cc,   0);
//FBI Cruiser
setfloat(0x945a618,   0);
setfloat(0x945a6bc,   0);
//Moonbeam
setfloat(0x945a708,   0);
setfloat(0x945a7ac,   0);
//Esperanto
setfloat(0x945a7f8,   0);
setfloat(0x945a89c,   0);
//Taxi
setfloat(0x945a8e8,   0);
setfloat(0x945a98c,   0);
//Kuruma-
setfloat(0x945a9d8,   0);
setfloat(0x945aa7c,   0);
//Bobcat
setfloat(0x945aac8,   0);
setfloat(0x945ab6c,   0);
//Mr Whoopee
setfloat(0x945abb8,   0);
setfloat(0x945ac5c,   0);
//BF Injection
//setfloat(0x945aca8,   0);
//setfloat(0x945ad4c,   0);
//Hearse
setfloat(0x9459ad8,   0);
setfloat(0x9459b7c,   0);
//Police
setfloat(0x945ad98,   0);
setfloat(0x945ae3c,   0);
//Enforcer
setfloat(0x945ae88,   0);
setfloat(0x945af2c,   0);
//Securicar
setfloat(0x945af78,   0);
setfloat(0x945b01c,   0);
//Banshee
setfloat(0x945b068,   0);
setfloat(0x945b10c,   0);
//Bus
setfloat(0x945b158,   0);
setfloat(0x945b1fc,   0);
//Rhino
setfloat(0x945b248,   0);
setfloat(0x945b2ec,   0);
//Barracks OL
setfloat(0x945b338,   0);
setfloat(0x945b3dc,   0);
//Coach
setfloat(0x945b7e8,   0);
setfloat(0x945b88c,   0);
//Cabbie
setfloat(0x945b8d8,   0);
setfloat(0x945b97c,   0);
//Stallion
setfloat(0x945b9c8,   0);
setfloat(0x945ba6c,   0);
//Rumpo
setfloat(0x945bab8,   0);
setfloat(0x945bb5c,   0);
//Triad Fish Van
setfloat(0x945c238,   0);
setfloat(0x945c2dc,   0);
//Mr Wongs
setfloat(0x945c328,   0);
setfloat(0x945c3cc,   0);
//Leone Sentinel
setfloat(0x945bc98,   0);
setfloat(0x945bd3c,   0);
//Yardie Lobo
setfloat(0x945c418,   0);
setfloat(0x945c4bc,   0);
//Yakuza Stinger
setfloat(0x945c508,   0);
setfloat(0x945c5ac,   0);
//Diablo Stallion
setfloat(0x945c5f8,   0);
setfloat(0x945c69c,   0);
//Cartel Cruiser
setfloat(0x945c6e8,   0);
setfloat(0x945c78c,   0);
//Hoods Rumpo XL
setfloat(0x945c7d8,   0);
setfloat(0x945c87c,   0);
//Panlantic
setfloat(0x945c8c8,   0);
setfloat(0x945c96c,   0);
//Flatbed
setfloat(0x945bf68,   0);
setfloat(0x945c00c,   0);
//Yankee
setfloat(0x945c058,   0);
setfloat(0x945c0fc,   0);
//Bickle 76
setfloat(0x945c9b8,   0);
setfloat(0x945ca5c,   0);
//Toyz
setfloat(0x945a258,   0);
setfloat(0x945a2fc,   0);
//Campaign Rumpo
setfloat(0x945caa8,   0);
setfloat(0x945cb4c,   0);
//Ballot Van
setfloat(0x945cb98,   0);
setfloat(0x945cc3c,   0);
//Hellenbach GT
setfloat(0x945cd78,   0);
setfloat(0x945ce1c,   0);
//Phobos VT
setfloat(0x945ce68,   0);
setfloat(0x945cf0c,   0);
//V8 Ghost
setfloat(0x945cf58,   0);
setfloat(0x945cffc,   0);
//Thunder-Rodd
setfloat(0x945d138,   0);
setfloat(0x945d1dc,   0);
//Sindacco Argento
setfloat(0x945d228,   0);
setfloat(0x945d2cc,   0);
//Forelli Exsess
setfloat(0x945d318,   0);
setfloat(0x945d3bc,   0);
//Angel
setfloat(0x945d6d8,   0);
setfloat(0x945d77c,   0);
//Pizzaboy
setfloat(0x945d4f8,   0);
setfloat(0x945d59c,   0);
//Noodleboy
setfloat(0x945d4f8,   0);
setfloat(0x945d59c,   0);
//PCJ-600
setfloat(0x945d408,   0);
setfloat(0x945d4ac,   0);
//Faggio
setfloat(0x945d4f8,   0);
setfloat(0x945d59c,   0);
//Freeway
setfloat(0x945d9a8,   0);
setfloat(0x945da4c,   0);
//Avenger
setfloat(0x945d8b8,   0);
setfloat(0x945d95c,   0);
//Manchez
setfloat(0x945d7c8,   0);
setfloat(0x945d86c,   0);
//Sanchez
setfloat(0x945d5e8,   0);
setfloat(0x945d68c,   0);
//RC Bandit
setfloat(0x945bba8,   0);
setfloat(0x945bc4c,   0);
//Sogant Beast
setshort(0x992FD86,   0x53,   0x6f,   0x67,   0x61,   0x6e,   0x74,   0x20,   0x42,   0x65,   0x61,   0x73,   0x74);
setchar(0x945ad22,   0x4);
setchar(0x945ad21,   0x44);
setchar(0x945ad20,   0x34);
setshort(0x9441df0,   254);
setfloat(0x9441dec,   0.25);
setfloat(0x945aca0,   1000);
setfloat(0x945aca8,   1.6);
setfloat(0x945ad60,   0.4);
setfloat(0x945ad64,   -0.5);
setfloat(0x945ad68,   0.5);
setfloat(0x945ad2c,   0.75);
setfloat(0x945ad30,   0.75);
setfloat(0x945ad24,   0.002);
setfloat(0x945ad40,   0.5);
setfloat(0x945ad44,   0);
setfloat(0x945ad48,   35);
setfloat(0x945ad58,   1.2);
setfloat(0x945ad5c,   0.07);
setfloat(0x945ad74,   0.38);
setfloat(0x945ad6c,   0);
setfloat(0x945acc0,   0);
setfloat(0x945acc4,   0);
setfloat(0x945acc8,   -0.5);
setchar(0x945acd0,   80);
setfloat(0x945ad4c,   1.222);
setfloat(0x945ad50,   0.5);
setfloat(0x945acac,   0);
sethex(0x945ad70,   0x18,   0xa9,   0x00,   0x05);
sethex(0x944faf8,   0xFB,   0x1A,   0x1A);
sethex(0x944fb2c,   0x97,   0x10,   0x10);
setint(0x8E38AE8,   155);
setchar(0x8E38B0C,   106,   116);
sethex(0x8E38B0E,   0x01,   0x00);
teleport(-789.61,   300.62,   49.05);
setchar(0x08b33e32,   1);

//by S.O.G.
setchar(0x944F960,   0x77,   0x36,   0x1B);//000-ORANGE
setchar(0x944F964,   0xFF,   0x77,   0x36);//001-ORANGE
setchar(0x944F968,   0xFF,   0xBB,   0x77);//002-YELLOW
setchar(0x944F96C,   0x77,   0xFF,   0x36);//003-GREEN
setchar(0x944F974,   0x36,   0x77,   0x1B);//004-GREEN
setchar(0x944F970,   0x36,   0xFF,   0x77);//005-GREEN
setchar(0x944F978,   0x1B,   0x77,   0x36);//006-GREEN
setchar(0x944F97C,   0x36,   0x77,   0xFF);//007-BLUE
setchar(0x944F980,   0x36,   0x1B,   0x77);//008-BLUE
setchar(0x944F984,   0x1B,   0x36,   0x77);//009-BLUE
setchar(0x944F988,   0x77,   0x36,   0xFF);//010-PURPLE
setchar(0x944F98C,   0xFF,   0x36,   0x77);//011-PINK
setchar(0x944F990,   0x77,   0x1B,   0x36);//012-PINK
setchar(0x944F994,   0xFF,   0x00,   0x36);//013-PINKRED
setchar(0x944F998,   0xFF,   0x36,   0x00);//014-ORANGE
setchar(0x944F9A0,   0x36,   0xFF,   0x00);//015-GREEN
setchar(0x944F99C,   0x00,   0xFF,   0x36);//016-GREEN
setchar(0x944F9A4,   0x00,   0x36,   0xFF);//017-BLUE
setchar(0x944F9A8,   0x36,   0x00,   0xFF);//018-BLUEPURPLE
setchar(0x944F9AC,   0xFF,   0xFF,   0x77);//019
setchar(0x944F9B0,   0xFF,   0xFF,   0x36);//020
setchar(0x944F9B4,   0xFF,   0xFF,   0x1B);//021
setchar(0x944F9B8,   0xFF,   0x77,   0xFF);//022
setchar(0x944F9BC,   0xFF,   0x36,   0xFF);//023
setchar(0x944F9C0,   0xFF,   0x1B,   0xFF);//024
setchar(0x944F9C4,   0x77,   0xFF,   0xFF);//025
setchar(0x944F9C8,   0x36,   0xFF,   0xFF);//026
setchar(0x944F9CC,   0x1B,   0xFF,   0xFF);//027
setchar(0x944F9D0,   128,   191,   255);//028
setchar(0x944F9D4,   128,   255,   191);//029
setchar(0x944F9D8,   191,   128,   255);//030
setchar(0x944F9DC,   191,   255,   128);//031
setchar(0x944F9E0,   255,   191,   128);//032
setchar(0x944F9E4,   255,   128,   191);//033
setchar(0x944F9E8,   32,   128,   223);// 034
setchar(0x944F9EC,   32,   223,   128);// 035
setchar(0x944F9F0,   128,   223,   32);// 036
setchar(0x944F9F4,   128,   32,   223);// 037
setchar(0x944F9F8,   223,   128,   32);// 038
setchar(0x944F9FC,   223,   32,   128);// 039[/code] 

//Taxi
setfloat(0x945a8e0,   -200);
//Cabbie
setfloat(0x945b8d0,   -200);
//Demos SP
setfloat(0x945cc80,   -200);
//Landstalker
setfloat(0x9459710,   -200);
//Idaho
setfloat(0x9459800,   -200);
//Stinger
setfloat(0x94598f0,   -200);
//Linerunner
setfloat(0x94599e0,   -200);
//Perenial
setfloat(0x9459ad0,   -200);
//Sentinal
setfloat(0x9459bc0,   -200);
//Patriot
setfloat(0x9459cb0,   -200);
//Firetruck
setfloat(0x9459da0,   -200);
//Trashmaster
setfloat(0x9459e90,   -200);
//stretch
setfloat(0x9459f80,   -200);
//Manana
setfloat(0x945a070,   -200);
//Blista
setfloat(0x945c140,   -200);
//Infern
setfloat(0x945a160,   -200);
//Pony
setfloat(0x945a250,   -200);
//Mule
setfloat(0x945a340,   -200);
//Cheetah
setfloat(0x945a430,   -200);
//Ambulance
setfloat(0x945a520,   -200);
//FBI
setfloat(0x945a610,   -200);
//Moonbeam
setfloat(0x945a700,   -200);
//Esperanto
setfloat(0x945a7f0,   -200);
//Kurma
setfloat(0x945a9d0,   -200);
//Bobcat
setfloat(0x945aac0,   -200);
//Mr Whoope
setfloat(0x945abb0,   -200);
//BF
setfloat(0x945aca0,   -200);
//Hearse
setfloat(0x945aad0,   -200);
//Police
setfloat(0x945ad90,   -200);
//Enforcer
setfloat(0x945ae80,   -200);
//Securicar
setfloat(0x945af70,   -200);
//Banshee
setfloat(0x945b060,   -200);
//Bus
setfloat(0x945b150,   -200);
//Rhino
setfloat(0x945b240,   -200);
//Barracks OL
setfloat(0x945b330,   -200);
//Coach
setfloat(0x945b7e0,   -200);
//Stallion
setfloat(0x945b9c0,   -200);
//Rumpo
setfloat(0x945bab0,   -200);
//TriadFish
setfloat(0x945c230,   -200);
//Mr Wongs
setfloat(0x945c320,   -200);
//Leone Sentinel
setfloat(0x945bc90,   -200);
//Yardie Lobo
setfloat(0x945c410,   -200);
//Yakuza Stinger
setfloat(0x945c500,   1400);
//Diablo Stallion
setfloat(0x945c5f0,   -200);
//Cartel Cruiser
setfloat(0x945c6e0,   2000);
//Hoods Rumpo
setfloat(0x945c7d0,   -200);
//Panlantic
setfloat(0x945c8c0,   -200);
//Flatbed
setfloat(0x945bf60,   -200);
//Yankee
setfloat(0x945c050,   -200);
//Bickle
setfloat(0x945c9b0,   -200);
//Toyz
setfloat(0x945a250,   -200);
//Campaign Rumpo
setfloat(0x945caa0,   -200);
//Ballot Van
setfloat(0x945cb90,   -200);
//Hellenback GT
setfloat(0x945cd70,   -200);
//Phobos VT
setfloat(0x945ce60,   -200);
//V8 Ghost
setfloat(0x945cf50,   -200);
//BarracksOLrepeat
setfloat(0x945b330,   -200);
//ThunderRodd
setfloat(0x945d130,   -200);
//Sindacco Argento
setfloat(0x945d220,   -200);
//Forelli Exsess
setfloat(0x945d310,   -200);
//Angel
setfloat(0x945d6d0,   -200);
//Pizzaboy
setfloat(0x945d4f0,   -200);
//Noodleboy
setfloat(0x945d4f0,   -200);
//PCJ600
setfloat(0x945d400,   500);
//Faggio
setfloat(0x945d4f0,   -200);
//Freeway
setfloat(0x945d9a0,   -200);
//Avenger
setfloat(0x945d8b0,   -200);
//Manchez
setfloat(0x945d7c0,   -200);
//Sanchez
setfloat(0x945d5e0,   -200);
//Created by S.O.G.
setshort(0x99450E2,   0x53,   0x4f,   0x47,   0x2d,   0x36,   0x30,   0x30);


