#cheat Stadium Base v1
//ID: 14078
//Score: 44
//Author: penguinsrule
//Category: Location Mods
//Description: This is a large mod where a 1/3 of the stadium is cornered of with an access ramp and their more to come with tool
//Image: http://telmaz.no-ip.info:3249/screen9.bmp
//Time: 03/07/2006 01:06:09
//Working: Yes
//created by penguinsrule
moveto(-58.34, 48.13, 14.87);  object(0x0F01, 90, 0, 329);
move(2.93, -4.83, 0.00);  object(0x0F01, 90, 0, 329);
move(3.46, -5.72, 0.00);  object(0x0F01, 90, 0, 329);
move(3.20, -5.28, 0.00);  object(0x0F01, 90, 0, 329);
move(3.85, -6.34, 0.00);  object(0x0F01, 90, 0, 329);
move(3.83, -6.32, 0.00);  object(0x0F01, 90, 0, 329);
move(-36.45, 14.22, 0.00);  object(0x0F01, 90, 0, 329);
move(3.44, -5.68, 0.00);  object(0x0F01, 90, 0, 329);
move(3.32, -5.49, 0.00);  object(0x0F01, 90, 0, 329);
move(3.75, -6.19, 0.00);  object(0x0F01, 90, 0, 329);
move(3.63, -5.99, 0.00);  object(0x0F01, 90, 0, 329);
move(2.43, -4.01, 0.00);  object(0x0F01, 90, 0, 329);
move(-35.04, 11.90, 0.00);  object(0x0F01, 90, 0, 329);
move(3.89, -6.42, 0.00);  object(0x0F01, 90, 0, 329);
move(3.61, -5.96, 0.00);  object(0x0F01, 90, 0, 329);
move(3.58, -5.90, 0.00);  object(0x0F01, 90, 0, 329);
move(3.66, -6.03, 0.00);  object(0x0F01, 90, 0, 329);
move(0.00, 0.00, 0.00);  object(0x0F01, 90, 0, 329);
move(-27.72, 5.03, 0.00);  object(0x0F01, 90, 0, 329);
move(3.48, -5.75, 0.00);  object(0x0F01, 90, 0, 329);
move(3.40, -5.60, 0.00);  object(0x0F01, 90, 0, 329);
move(3.04, -5.02, 0.00);  object(0x0F01, 90, 0, 329);
move(-8.98, -5.44, 0.00);  object(0x0F01, 90, 0, 329);
move(-1.31, 2.16, 0.00);  object(0x0F01, 90, 0, 329);
move(73.96, 77.08, 0.00);  object(0x0F01, 90, 0, 329);
move(3.65, -6.02, 0.00);  object(0x0F01, 90, 0, 329);
move(3.58, -5.90, 0.00);  object(0x0F01, 90, 0, 329);
move(3.70, -6.11, 0.00);  object(0x0F01, 90, 0, 329);
move(3.67, -6.06, 0.00);  object(0x0F01, 90, 0, 329);
move(9.52, 30.60, 0.00);  object(0x0F01, 90, 0, 329);
move(3.40, -5.61, 0.00);  object(0x0F01, 90, 0, 329);
move(3.57, -5.89, 0.00);  object(0x0F01, 90, 0, 329);
move(3.73, -6.15, 0.00);  object(0x0F01, 90, 0, 329);
move(4.19, 2.54, 0.00);  object(0x0F01, 90, 0, 329);
moveto(-37.20, 12.88, 14.93);  object(0x0F01, 90, 0, 329);
move(2.95, -4.92, 0.00);  object(0x0F01, 90, 0, 329);
move(3.14, -5.24, 0.00);  object(0x0F01, 90, 0, 329);
move(3.41, -5.69, 0.00);  object(0x0F01, 90, 0, 329);
move(3.53, -5.88, 0.00);  object(0x0F01, 90, 0, 329);
move(4.28, -7.13, 0.00);  object(0x0F01, 90, 0, 329);
move(4.19, -6.98, 0.00);  object(0x0F01, 90, 0, 329);
move(-1.09, 1.82, 0.00);  object(0x0F01, 90, 0, 329);
move(-4.13, 6.89, 0.00);  object(0x0F01, 90, 0, 329);
move(-36.43, 14.85, 0.00);  object(0x0F01, 90, 0, 329);
move(3.52, -5.86, 0.00);  object(0x0F01, 90, 0, 329);
move(3.35, -5.59, 0.00);  object(0x0F01, 90, 0, 329);
move(3.35, -5.59, 0.00);  object(0x0F01, 90, 0, 329);
move(3.59, -5.98, 0.00);  object(0x0F01, 90, 0, 329);
move(3.11, -5.18, 0.00);  object(0x0F01, 90, 0, 329);
move(3.56, -5.94, 0.00);  object(0x0F01, 90, 0, 329);
move(-41.60, 21.34, 0.00);  object(0x0F01, 90, 0, 329);
move(3.44, -5.15, 0.00);  object(0x0F01, 90, 0, 329);
move(3.39, -5.65, 0.00);  object(0x0F01, 90, 0, 329);
move(3.46, -5.76, 0.00);  object(0x0F01, 90, 0, 329);
move(3.43, -5.71, 0.00);  object(0x0F01, 90, 0, 329);
move(3.57, -5.95, 0.00);  object(0x0F01, 90, 0, 329);
move(3.57, -5.95, 0.00);  object(0x0F01, 90, 0, 329);
moveto(-99.51, -24.89, 14.97);  object(0x0F01, 90, 0, 329);
move(-8.61, -5.28, 0.00);  object(0x0F01, 90, 0, 329);
move(-0.87, -7.39, 0.00);  object(0x0F01, 90, 0, 329);
move(12.88, 7.89, 0.00);  object(0x0F01, 90, 0, 329);
moveto(-100.22, -25.12, 14.59);  object(0x01BF, 265, 0, 338);
move(6.79, -9.51, 0.60);  object(0x0F01, 90, 0, 329);
move(2.99, -5.00, 0.00);  object(0x0F01, 90, 0, 329);
move(3.08, -5.14, 0.00);  object(0x0F01, 90, 0, 329);
move(3.12, -5.22, 0.00);  object(0x0F01, 90, 0, 329);
move(2.43, -4.07, 0.00);  object(0x0F01, 90, 0, 329);
move(2.28, -3.81, 0.00);  object(0x0F01, 90, 0, 329);
move(-30.82, 12.95, 0.00);  object(0x0F01, 90, 0, 329);
move(1.49, -5.99, 0.00);  object(0x0F01, 90, 0, 329);
move(3.10, -5.18, 0.00);  object(0x0F01, 90, 0, 329);
move(1.03, -6.78, 0.00);  object(0x0F01, 90, 0, 329);
move(-4.72, -2.82, 0.00);  object(0x0F01, 90, 0, 329);
move(8.24, -2.86, 0.00);  object(0x0F01, 90, 0, 329);
move(-8.32, -4.98, 0.00);  object(0x0F01, 90, 0, 329);
move(112.22, 64.27, 0.00);  object(0x0F01, 90, 0, 329);
move(-3.66, 6.12, 0.00);  object(0x0F01, 90, 0, 329);
move(-3.29, 5.50, 0.00);  object(0x0F01, 90, 0, 329);
move(-3.74, 6.25, 0.00);  object(0x0F01, 90, 0, 329);
move(-3.85, 6.44, 0.00);  object(0x0F01, 90, 0, 329);
move(-3.74, 6.26, 0.00);  object(0x0F01, 90, 0, 329);
move(-3.45, 5.76, 0.00);  object(0x0F01, 90, 0, 329);
moveto(0.63, 38.59, 15.15);  object(0x0F01, 90, 0, 329);
move(4.92, -2.78, 0.00);  object(0x0F01, 90, 0, 329);
move(2.60, -4.36, 0.00);  object(0x0F01, 90, 0, 329);
move(4.05, -6.77, 0.00);  object(0x0F01, 90, 0, 329);
move(3.26, -5.45, 0.00);  object(0x0F01, 90, 0, 329);
move(2.68, -4.48, 0.00);  object(0x0F01, 90, 0, 329);
move(2.84, -4.75, 0.00);  object(0x0F01, 90, 0, 329);
move(3.36, -5.62, 0.00);  object(0x0F01, 90, 0, 329);
move(-3.96, 46.61, 0.00);  object(0x0F01, 90, 0, 329);
move(2.89, -4.83, 0.00);  object(0x0F01, 90, 0, 329);
move(3.09, -5.17, 0.00);  object(0x0F01, 90, 0, 329);
move(2.58, -3.34, 0.00);  object(0x0F01, 90, 0, 329);
move(4.40, -4.25, 0.00);  object(0x0F01, 90, 0, 329);
move(2.89, -4.84, 0.00);  object(0x0F01, 90, 0, 329);
move(2.75, -4.60, 0.00);  object(0x0F01, 90, 0, 329);
move(2.54, -4.25, 0.00);  object(0x0F01, 90, 0, 329);
move(4.28, -3.65, 0.00);  object(0x0F01, 90, 0, 329);
move(-2.80, 9.18, 0.00);  object(0x0F01, 90, 0, 329);
move(0.66, -1.10, 0.00);  object(0x0F01, 90, 0, 329);
moveto(84.45, 63.80, 16.42);  object(0x0204, 270, 350, 181);
move(0.09, 3.82, 0.00);  object(0x0204, 270, 350, 181);
move(-14.09, -3.73, 2.40);  object(0x0204, 270, 350, 181);
move(0.09, 3.88, 0.00);  object(0x0204, 270, 350, 181);
move(-14.16, -3.63, 2.50);  object(0x0204, 270, 350, 181);
move(0.08, 3.78, 0.00);  object(0x0204, 270, 350, 181);
move(-14.78, -3.59, 2.60);  object(0x0204, 270, 350, 181);
move(0.08, 3.97, 0.00);  object(0x0204, 270, 350, 181);
move(-13.68, -3.77, 2.40);  object(0x0204, 270, 350, 181);
move(0.08, 4.10, 0.00);  object(0x0204, 270, 350, 181);
move(-13.80, -3.57, 2.40);  object(0x0204, 270, 350, 181);
move(0.05, 3.73, 0.00);  object(0x0204, 270, 350, 181);
move(-13.15, -3.57, 2.30);  object(0x0204, 270, 350, 181);
move(0.05, 3.74, 0.00);  object(0x0204, 270, 350, 181);
move(-9.41, 1.88, 1.30);  object(0x0204, 270, 0, 91);
move(-4.07, 0.01, 0.00);  object(0x0204, 270, 0, 91);
move(-3.61, 0.01, 0.00);  object(0x0204, 270, 0, 91);
move(-9.22, -1.13, 1.30);  object(0x0204, 270, 350, 181);
move(0.06, 3.64, 0.00);  object(0x0204, 270, 350, 181);
move(-13.66, -3.52, 2.40);  object(0x0204, 270, 350, 181);
move(0.06, 3.91, 0.00);  object(0x0204, 270, 350, 181);
move(-13.36, -3.76, 2.30);  object(0x0204, 270, 350, 181);
move(0.06, 3.85, 0.00);  object(0x0204, 270, 350, 181);
move(-9.44, -5.32, 1.30);  object(0x0204, 270, 0, 91);
move(-4.05, 0.05, 0.00);  object(0x0204, 270, 0, 91);
move(-3.92, 0.05, 0.00);  object(0x0204, 270, 0, 91);
move(7.82, -13.60, 0.60);  object(0x0204, 270, 355, 91);
move(-4.07, 0.05, 0.00);  object(0x0204, 270, 355, 91);
move(3.90, -14.65, 0.60);  object(0x0204, 270, 0, 91);
move(-4.07, 0.06, 0.00);  object(0x0204, 270, 0, 91);
move(4.33, -14.75, -1.30);  object(0x0204, 270, 10, 87);
move(-4.61, 0.11, 0.00);  object(0x0204, 270, 10, 91);
move(1.40, -0.01, 0.00);  object(0x0204, 270, 10, 91);
move(2.54, -14.51, -2.50);  object(0x0204, 270, 10, 91);
move(-4.13, 0.02, 0.00);  object(0x0204, 270, 10, 91);
move(3.85, -13.61, -2.40);  object(0x0204, 270, 10, 91);
move(-4.04, 0.01, 0.00);  object(0x0204, 270, 10, 91);
move(3.82, -14.45, -2.50);  object(0x0204, 270, 10, 91);
move(-4.06, 0.02, 0.00);  object(0x0204, 270, 10, 91);
move(3.98, -12.42, -2.20);  object(0x0204, 270, 10, 91);
move(-4.18, 0.02, 0.00);  object(0x0204, 270, 10, 91);
move(-1.10, -8.95, -1.20);  object(0x0204, 270, 0, 1);
move(-0.09, -3.88, 0.00);  object(0x0204, 270, 0, 1);
move(-0.09, -3.97, 0.00);  object(0x0204, 270, 0, 1);
move(-14.70, 0.33, -1.30);  object(0x0204, 270, 350, 1);
move(0.07, 3.21, 0.00);  object(0x0204, 270, 350, 1);
moveto(-96.71, -38.01, 26.25);  object(0x0204, 270, 0, 1);
move(-0.04, -3.57, 0.00);  object(0x0204, 270, 0, 1);
move(-0.04, -3.58, 0.00);  object(0x0204, 270, 0, 1);
move(-4.65, 16.42, -1.30);  object(0x0204, 270, 10, 271);
move(3.76, -0.05, 0.00);  object(0x0204, 270, 10, 271);
move(-3.57, 13.55, -2.40);  object(0x0204, 270, 10, 271);
move(3.82, -0.05, 0.00);  object(0x0204, 270, 10, 271);
move(-3.73, 13.44, -2.40);  object(0x0204, 270, 10, 271);
move(3.99, -0.05, 0.00);  object(0x0204, 270, 10, 271);
move(1.07, 8.45, -1.20);  object(0x0204, 270, 0, 181);
move(0.04, 3.39, 0.00);  object(0x0204, 270, 0, 181);
move(0.04, 3.25, 0.00);  object(0x0204, 270, 0, 181);
move(14.46, -3.22, -0.60);  object(0x0204, 270, 355, 181);
move(0.03, 2.73, 0.00);  object(0x0204, 270, 355, 181);
move(14.46, -3.22, -1.17);  object(0x0204, 270, 355, 181);
move(0.03, 2.73, 0.00);  object(0x0204, 270, 355, 181);
moveto(-95.25, -2.18, 20.83);  object(0x01EE, 0, 10, 271);
move(-0.49, -8.87, 1.60);  object(0x01EE, 0, 10, 271);
move(-0.12, -8.70, 1.60);  object(0x01EE, 0, 10, 271);
move(-0.11, -8.20, 1.40);  object(0x01EE, 0, 10, 271);
move(-0.11, -7.90, 1.20);  object(0x01EE, 0, 10, 271);
move(-7.77, -4.17, 0.10);  object(0x01EE, 0, 0, 91);
move(0.20, 11.30, -1.10);  object(0x01EE, 0, 350, 91);
move(0.02, 8.81, -1.60);  object(0x01EE, 0, 350, 90);
move(-0.03, 8.80, -1.50);  object(0x01EE, 0, 350, 90);
move(-0.03, 8.20, -1.50);  object(0x01EE, 0, 350, 90);
move(0.69, 8.87, -1.50);  object(0x01EE, 0, 350, 93);
moveto(-94.97, 4.83, 18.79);  object(0x01EF, 0, 0, 1);
move(5.95, -0.20, 0.20);  object(0x01F0, 0, 0, 271);
move(1.57, 3.86, 0.60);  object(0x01EE, 0, 5, 1);
move(8.80, -0.20, -0.90);  object(0x01EE, 0, 5, 1);
move(8.40, -0.19, -0.60);  object(0x01EE, 0, 5, 1);
move(-18.76, -44.56, 8.40);  object(0x01F0, 0, 0, 91);
move(-0.30, 0.50, 0.00);  object(0x01EF, 0, 0, 180);
move(-14.75, -0.20, -0.30);  object(0x01F0, 0, 0, 91);
move(34.10, 50.01, -8.10);  object(0x01EE, 0, 5, 1);
move(-17.59, 0.43, 1.40);  object(0x01EE, 0, 5, 1);
move(9.00, -0.22, -0.70);  object(0x01EE, 0, 5, 1);
move(-15.23, 0.68, 0.70);  object(0x01EE, 0, 0, 181);
move(4.40, 0.00, -0.60);  object(0x01F0, 0, 0, 181);
moveto(-103.39, -46.97, 26.99);  object(0x01EE, 0, 0, 1);
move(8.10, -0.16, 0.00);  object(0x01EE, 0, 0, 1);
move(8.30, -0.14, 0.30);  object(0x01EE, 0, 350, 1);
move(12.40, -0.24, 2.10);  object(0x01EE, 0, 0, 1);
move(7.40, -0.14, -0.60);  object(0x01F0, 0, 0, 1);
move(3.40, -0.07, 0.00);  object(0x01F0, 0, 0, 1);
move(-15.20, 0.30, -0.60);  object(0x01F0, 0, 350, 1);
move(17.99, 0.65, 1.20);  object(0x01EE, 0, 0, 271);
move(0.24, 12.00, 0.20);  object(0x01EE, 0, 350, 271);
move(0.18, 8.90, 1.60);  object(0x01EE, 0, 350, 271);
move(0.18, 8.90, 1.60);  object(0x01EE, 0, 350, 271);
move(0.18, 8.70, 1.50);  object(0x01EE, 0, 350, 271);
move(0.17, 8.60, 1.50);  object(0x01EE, 0, 350, 271);
move(0.17, 8.60, 1.50);  object(0x01EE, 0, 350, 271);
moveto(-82.36, -40.60, 27.50);  object(0x01EF, 0, 10, 181);
move(-0.00, -0.01, 0.00);  object(0x01EF, 0, 350, 1);
move(7.29, 4.71, 1.20);  object(0x01EF, 0, 0, 1);
move(-0.01, -0.74, 0.00);  object(0x01F0, 0, 0, 91);
move(6.66, 7.98, 2.00);  object(0x01EE, 0, 10, 91);
move(0.17, 9.20, 1.60);  object(0x01EE, 0, 10, 91);
move(0.16, 9.00, 1.60);  object(0x01EE, 0, 10, 91);
move(-0.04, 9.20, 1.40);  object(0x01EE, 0, 10, 91);
move(0.16, 9.00, 1.80);  object(0x01EE, 0, 10, 91);
move(0.16, 8.70, 1.40);  object(0x01EE, 0, 10, 91);
move(0.15, 7.95, 1.40);  object(0x01EE, 0, 10, 92);
move(0.23, 8.10, 1.40);  object(0x01EE, 0, 10, 92);
move(0.25, 8.90, 0.00);  object(0x01EE, 0, 0, 92);
move(-0.28, 8.63, 0.00);  object(0x01EE, 0, 0, 91);
move(0.02, 9.30, -0.80);  object(0x01EE, 0, 355, 91);
moveto(-60.26, 17.44, 38.65);  object(0x01EE, 0, 350, 271);
move(0.06, 8.20, 1.50);  object(0x01EE, 0, 350, 271);
move(0.06, 8.60, 1.20);  object(0x01EE, 0, 0, 271);
move(0.06, 8.40, 0.00);  object(0x01EE, 0, 0, 271);
move(0.78, 8.39, 0.00);  object(0x01EE, 0, 5, 271);
move(0.06, 8.30, -0.90);  object(0x01EE, 0, 0, 271);
move(-11.82, 2.63, -0.90);  object(0x01F0, 0, 0, 1);
move(-0.23, 7.23, 0.80);  object(0x01EE, 0, 0, 91);
move(0.19, 7.00, -0.70);  object(0x01EF, 0, 0, 91);
move(6.52, -0.35, -0.10);  object(0x01EF, 0, 0, 181);
move(6.10, -0.11, 0.00);  object(0x01EF, 0, 0, 181);
move(7.70, -0.15, -0.80);  object(0x01EE, 0, 350, 181);
move(8.72, -0.19, -1.50);  object(0x01EE, 0, 350, 181);
move(8.86, -0.15, -1.50);  object(0x01EE, 0, 350, 184);
move(8.68, -0.54, -1.60);  object(0x01EE, 0, 350, 184);
moveto(48.12, 17.58, 17.73);  object(0x0F01, 0, 0, 329);
move(-21.15, -12.86, 0.00);  object(0x0F01, 0, 0, 329);
move(-21.15, -12.57, 0.00);  object(0x0F01, 0, 0, 329);
move(-21.06, -12.52, 0.00);  object(0x0F01, 0, 0, 329);
move(-21.03, -12.40, 0.00);  object(0x0F01, 0, 0, 330);
move(-18.48, -10.85, 0.00);  object(0x0F01, 0, 0, 329);
move(-26.31, -16.00, 0.00);  object(0x0F01, 0, 0, 329);
move(-21.39, -12.74, 0.00);  object(0x0F01, 0, 0, 331);
move(-7.17, -3.98, 0.00);  object(0x0F01, 0, 0, 331);
move(-1.84, -1.02, 7.00);  object(0x0F01, 0, 0, 331);
move(21.33, 11.84, 0.00);  object(0x0F01, 0, 0, 331);
move(20.81, 11.55, 0.00);  object(0x0F01, 0, 0, 331);
move(20.95, 11.96, 0.00);  object(0x0F01, 0, 0, 329);
move(18.42, 11.09, 0.00);  object(0x0F01, 0, 0, 329);
move(10.80, 6.50, 0.00);  object(0x0F01, 0, 0, 329);
move(16.62, 10.00, 0.00);  object(0x0F01, 0, 0, 329);
move(11.05, 6.65, 0.00);  object(0x0F01, 0, 0, 329);
move(10.97, 6.60, 0.00);  object(0x0F01, 0, 0, 329);
move(18.85, 11.34, 0.00);  object(0x0F01, 0, 0, 329);
move(12.85, 7.74, 0.00);  object(0x0F01, 0, 0, 329);
moveto(-111.31, -77.85, 30.77);  object(0x0F01, 0, 0, 329);
move(17.13, 10.32, 0.70);  object(0x0F01, 0, 0, 329);
move(20.30, 12.23, 0.00);  object(0x0F01, 0, 0, 329);
move(22.23, 11.69, 0.00);  object(0x0F01, 0, 0, 329);
move(20.33, 12.18, 0.00);  object(0x0F01, 0, 0, 329);
move(20.40, 12.22, 0.00);  object(0x0F01, 0, 0, 329);
move(20.23, 12.16, 0.00);  object(0x0F01, 0, 0, 329);
move(20.14, 12.11, 0.00);  object(0x0F01, 0, 0, 329);
move(21.17, 12.73, 0.00);  object(0x0F01, 0, 0, 329);
move(0.00, 0.00, -7.40);  object(0x0F01, 0, 0, 329);
move(0.01, -0.02, -5.80);  object(0x0F01, 0, 0, 329);
moveto(-111.31, -77.85, 30.77);  object(0x0F01, 0, 0, 329);
move(17.13, 10.32, 0.70);  object(0x0F01, 0, 0, 329);
move(20.30, 12.23, 0.00);  object(0x0F01, 0, 0, 329);
move(22.23, 11.69, 0.00);  object(0x0F01, 0, 0, 329);
move(20.33, 12.18, 0.00);  object(0x0F01, 0, 0, 329);
move(20.40, 12.22, 0.00);  object(0x0F01, 0, 0, 329);
move(20.23, 12.16, 0.00);  object(0x0F01, 0, 0, 329);
move(20.14, 12.11, 0.00);  object(0x0F01, 0, 0, 329);
move(21.17, 12.73, 0.00);  object(0x0F01, 0, 0, 329);
move(0.00, 0.00, -7.40);  object(0x0F01, 0, 0, 329);
move(0.01, -0.02, -5.80);  object(0x0F01, 0, 0, 329);
moveto(-109.29, -77.01, 37.99);  object(0x0F01, 0, 0, 329);
move(20.84, 12.31, 0.00);  object(0x0F01, 0, 0, 329);
move(17.57, 10.61, 0.00);  object(0x0F01, 0, 0, 325);
move(20.84, 12.31, 0.00);  object(0x0F01, 0, 0, 329);
move(17.57, 10.61, 0.00);  object(0x0F01, 0, 0, 325);
move(20.84, 12.31, 0.00);  object(0x0F01, 0, 0, 329);
move(17.57, 10.61, 0.00);  object(0x0F01, 0, 0, 325);
move(20.84, 12.31, 0.00);  object(0x0F01, 0, 0, 329);
move(17.57, 10.61, 0.00);  object(0x0F01, 0, 0, 325);
moveto(-57.95, 68.40, 39.90);  object(0x01EE, 0, 10, 1);
move(8.40, -0.16, -1.50);  object(0x01EE, 0, 10, 1);
move(8.35, -0.29, -1.30);  object(0x01EE, 0, 10, 1);
move(8.60, -0.13, -1.50);  object(0x01EE, 0, 10, 1);
move(22.48, 10.94, -2.60);  object(0x01EE, 0, 0, 182);
move(11.38, -8.21, -1.40);  object(0x01EE, 0, 350, 182);
move(8.62, -0.23, -1.70);  object(0x01EE, 0, 350, 181);
move(8.70, -0.19, -1.30);  object(0x01EE, 0, 350, 181);
move(10.40, -0.08, -1.90);  object(0x01EE, 0, 350, 181);
move(9.00, -0.20, -1.50);  object(0x01EE, 0, 350, 181);
move(9.20, -0.20, -1.60);  object(0x01EE, 0, 350, 181);
move(9.10, -0.20, -1.60);  object(0x01EE, 0, 350, 181);
move(8.80, -0.19, -1.60);  object(0x01EE, 0, 350, 181);
move(2.30, -0.05, -0.60);  object(0x01EE, 0, 10, 1);
move(6.49, -7.28, -0.90);  object(0x01EE, 0, 350, 181);
move(-9.10, 0.16, 1.60);  object(0x01EE, 0, 350, 181);
move(-8.90, 0.15, 1.60);  object(0x01EE, 0, 350, 181);
move(-9.60, 0.17, 1.80);  object(0x01EE, 0, 350, 181);
move(-9.30, 0.16, 1.40);  object(0x01EE, 0, 350, 181);
move(-8.60, 0.15, 1.50);  object(0x01EE, 0, 350, 181);
move(-9.36, 0.16, 1.70);  object(0x01EE, 0, 350, 181);
moveto(-17.69, 77.99, 32.37);  object(0x01F0, 0, 0, 91);
move(11.57, -6.42, 0.00);  object(0x01EF, 0, 0, 271);
move(-18.89, -3.76, 1.30);  object(0x01EF, 0, 10, 1);
move(7.50, 6.86, -1.40);  object(0x01EF, 0, 350, 181);
move(15.82, -11.41, -0.10);  object(0x01EE, 0, 10, 1);
move(-14.79, 0.30, 0.70);  object(0x01EE, 0, 0, 1);
move(9.20, -0.22, -0.70);  object(0x01F0, 0, 0, 1);
move(0.78, 14.73, 0.20);  object(0x01F0, 0, 0, 181);
move(86.82, -8.62, -14.40);  object(0x01EE, 0, 10, 1);
move(-0.12, -7.30, -0.10);  object(0x01EE, 0, 10, 1);
teleport(98.20, 6.25, 16.02)

#cheat Rashon125's Car Showroom Loaded
//ID: 14057
//Score: 52
//Author: rashon125
//Category: Location Mods
//Description: If you don't download lots of cheats at Cheatsync, you might have enough space to download all the features of my car showroom. It even has the teleport built-in. Use my other showroom cheats so it can work perfect set. Only 19kb.
//Image: http://i70.photobucket.com/albums/i97/rashon125/RashonsShowroomright.jpg
//Time: 02/07/2006 22:05:30
//Working: Yes
//Use only if you have enough cheat memory
//Have Fun!
//First Floor
moveto(101.17, -1632.19, 28.37);  object(0x01BF, 0, 0, 90);
move(0.03, -8.02, 0.00);  object(0x01BF, 0, 0, 89);
move(-0.01, -7.80, 0.00);  object(0x01BF, 0, 0, 91);
move(0.04, -7.84, 0.00);  object(0x01BF, 0, 0, 89);
move(0.13, -6.85, 0.00);  object(0x01BF, 0, 0, 90);
move(0.08, -7.93, 0.00);  object(0x01BF, 0, 0, 89);
move(0.08, -7.99, 0.00);  object(0x01BF, 0, 0, 89);
move(-3.34, -3.78, 0.00);  object(0x01BF, 0, 0, 184);
move(-8.06, 0.39, 0.00);  object(0x01BF, 0, 0, 181);
move(-7.34, 0.64, 0.00);  object(0x01BF, 0, 0, 190);
move(-7.79, 0.95, 0.00);  object(0x01BF, 0, 0, 185);
move(-7.55, 2.32, 0.00);  object(0x01BF, 0, 0, 208);
move(-6.62, 3.98, 0.00);  object(0x01BF, 0, 0, 214);
move(-6.48, 4.66, 0.00);  object(0x01BF, 0, 0, 218);
move(-6.20, 4.91, 0.00);  object(0x01BF, 0, 0, 219);
move(-6.18, 5.36, 0.00);  object(0x01BF, 0, 0, 45);
move(-4.83, 5.29, 0.00);  object(0x01BF, 0, 0, 232);
move(-0.60, 6.25, 0.00);  object(0x01BF, 0, 0, 295);
move(4.27, 7.28, 0.00);  object(0x01BF, 0, 0, 301);
move(4.29, 6.78, 0.00);  object(0x01BF, 0, 0, 303);
move(30.49, 2.14, -2.30);  object(0x01BF, 255, 0, 193);
move(-1.41, -5.29, 1.60);  object(0x01BF, 255, 0, 193);
move(-1.99, -5.73, 1.60);  object(0x01BF, 255, 0, 193);
move(-1.36, -6.03, 0.60);  object(0x01BF, 90, 0, 10);
move(-7.56, 1.03, 0.00);  object(0x01BF, 90, 0, 7);
move(-7.92, 0.55, 0.00);  object(0x01BF, 90, 0, 4);
move(-7.78, 0.51, 0.00);  object(0x01BF, 90, 0, 3);
move(0.06, -6.64, 0.00);  object(0x01BF, 90, 0, 358);
move(18.55, -19.43, -1.40);  object(0x01BF, 0, 0, 295);
move(3.26, 7.07, 0.00);  object(0x01BF, 0, 0, 294);
move(2.95, 7.44, 0.00);  object(0x01BF, 0, 0, 292);
move(5.00, 8.54, 0.00);  object(0x01BF, 245, 0, 282);
move(19.28, -8.67, 0.00);  object(0x01BF, 0, 0, 185);
move(-18.79, 2.34, 0.00);  object(0x01BF, 0, 0, 16);
move(19.18, 27.27, 0.00);  object(0x01BF, 0, 0, 179);
move(-45.90, -1.13, 0.00);  object(0x01BF, 0, 0, 166);
move(3.64, -23.29, 1.50);  object(0x01BF, 90, 0, 181);
move(12.81, 26.07, -1.10);  object(0x01BF, 0, 0, 182);
move(-15.11, -16.34, 1.10);  object(0x01EF, 0, 0, 4);
move(-7.80, 0.15, 0.00);  object(0x01EF, 0, 0, 0);
move(-0.16, -6.14, 1.10);  object(0x01EF, 0, 0, 269);
move(6.40, -5.98, 0.00);  object(0x01EF, 0, 0, 182);
move(6.51, 0.36, 0.10);  object(0x01EF, 0, 0, 175);
move(0.86, 3.23, 0.00);  object(0x020F, 0, 0, 111);
move(0.09, -1.89, 0.20);  object(0x020F, 0, 0, 129);
move(49.94, 23.23, -0.90);  object(0x025D, 0, 0, 151);
move(-71.94, -6.08, 0.00);  object(0x025D, 0, 0, 225);
move(-6.26, 1.79, -2.00);  object(0x01BF, 0, 0, 280);
move(-4.80, -3.56, 0.00);  object(0x01BF, 0, 0, 2);
move(-2.87, 4.04, 0.00);  object(0x01BF, 0, 0, 106);
move(3.47, -0.38, 3.30);  object(0x01BF, 90, 0, 106);
move(1.59, 8.00, -1.40);  object(0x01BF, 90, 20, 270);
//Second Floor (Roof)
moveto(97.14, -1628.34, 35.27);  object(0x01BF, 0, 0, 179);
move(4.05, -4.03, -0.20);  object(0x01BF, 0, 0, 263);
move(-0.03, -7.46, 0.00);  object(0x01BF, 0, 0, 271);
move(-0.51, -7.80, 0.00);  object(0x01BF, 0, 0, 275);
move(0.49, -7.89, 0.10);  object(0x01BF, 0, 0, 268);
move(0.39, -7.18, 0.00);  object(0x01BF, 0, 0, 269);
move(0.37, -8.59, 0.00);  object(0x01BF, 0, 0, 278);
move(-0.69, -7.87, 0.00);  object(0x01BF, 0, 0, 274);
move(-10.54, -2.76, -0.10);  object(0x01BF, 0, 0, 1);
move(6.80, -0.04, 0.00);  object(0x01BF, 0, 0, 358);
move(-14.82, 0.82, 0.00);  object(0x01BF, 0, 0, 9);
move(-7.72, 1.84, 0.00);  object(0x01BF, 0, 0, 10);
move(-7.87, 1.45, 0.00);  object(0x01BF, 0, 0, 16);
move(-6.30, 3.93, 0.00);  object(0x01BF, 0, 0, 34);
move(-7.20, 4.60, 0.00);  object(0x01BF, 0, 0, 40);
move(-6.08, 4.02, 0.00);  object(0x01BF, 0, 0, 39);
move(-5.63, 6.06, 0.00);  object(0x01BF, 0, 0, 49);
move(-4.47, 5.29, 0.00);  object(0x01BF, 0, 0, 52);
move(-0.43, 6.82, 0.00);  object(0x01BF, 0, 0, 119);
move(4.68, 6.49, -0.20);  object(0x01BF, 0, 0, 130);
move(3.69, 6.67, 0.00);  object(0x01BF, 0, 0, 120);
move(5.76, 4.39, 0.00);  object(0x01BF, 0, 0, 332);
move(45.55, -28.66, 0.20);  object(0x01BF, 0, 0, 185);
move(-30.89, -13.97, 0.00);  object(0x01BF, 0, 0, 291);
move(3.65, 7.08, 0.00);  object(0x01BF, 0, 0, 299);
move(19.18, 7.66, 0.00);  object(0x01BF, 0, 0, 181);
move(-7.66, -0.50, 0.00);  object(0x01BF, 0, 0, 177);
move(-6.42, -1.89, 0.00);  object(0x01BF, 0, 0, 153);
move(-7.00, -0.48, 0.00);  object(0x01BF, 0, 0, 211);
move(-7.25, 2.93, 0.00);  object(0x01BF, 0, 0, 193);
move(-17.01, 1.74, 0.00);  object(0x01BF, 0, 0, 169);
move(6.50, -3.17, -3.60);  object(0x01BF, 245, 0, 184);
move(-0.71, -5.32, 3.20);  object(0x01BF, 55, 0, 184);
move(7.52, -1.85, 0.00);  object(0x01BF, 90, 0, 197);
move(6.37, -2.09, 0.00);  object(0x01BF, 90, 0, 108);
move(26.68, 39.40, 0.50);  object(0x01BF, 0, 0, 178);
move(-30.71, 1.35, 0.00);  object(0x01BF, 0, 0, 187);
move(7.62, -1.29, 0.00);  object(0x01BF, 0, 0, 193);
move(7.32, -2.55, 0.00);  object(0x01BF, 0, 0, 200);
move(6.88, -0.68, 0.00);  object(0x01BF, 0, 0, 163);
move(17.04, -45.82, 2.90);  object(0x01BF, 90, 0, 94);
move(-7.05, 0.02, 0.00);  object(0x01BF, 90, 0, 93);
move(-6.67, 0.44, 0.00);  object(0x01BF, 90, 0, 94);
move(-7.33, 1.37, 0.00);  object(0x01BF, 90, 0, 94);
move(-6.29, 0.95, 0.00);  object(0x01BF, 90, 0, 92);
move(24.73, 3.26, 0.10);  object(0x01BF, 90, 0, 81);
move(-5.70, 1.24, 0.00);  object(0x01BF, 90, 0, 81);
move(-5.67, 1.06, 0.00);  object(0x01BF, 90, 0, 81);
move(-6.01, 1.13, -0.20);  object(0x01BF, 90, 0, 81);
move(-5.91, -1.41, 0.00);  object(0x01BF, 90, 0, 106);
move(23.55, 5.34, 0.00);  object(0x01BF, 90, 0, 5);
move(-6.93, 0.85, 0.00);  object(0x01BF, 90, 0, 282);
move(-6.42, 0.60, 0.00);  object(0x01BF, 90, 0, 281);
move(-4.57, -0.77, 0.00);  object(0x01BF, 90, 0, 271);
move(-12.97, 0.82, 0.00);  object(0x01BF, 90, 0, 41);
move(-5.18, 2.05, 0.00);  object(0x01BF, 90, 0, 15);
move(4.36, -6.93, 0.00);  object(0x01BF, 90, 0, 108);
move(-4.49, 0.69, 0.00);  object(0x01BF, 90, 0, 97);
move(-4.50, 2.54, 0.00);  object(0x01BF, 90, 0, 116);
move(-2.97, 5.35, 0.00);  object(0x01BF, 90, 0, 183);
move(-2.54, -2.43, 0.00);  object(0x01BF, 90, 0, 111);
move(-2.09, 1.23, 0.00);  object(0x01BF, 90, 0, 224);
move(10.68, 29.05, 0.00);  object(0x01BF, 90, 0, 14);
move(-6.62, -2.50, 0.00);  object(0x01BF, 90, 0, 359);
move(-11.25, -17.49, 0.00);  object(0x01BF, 90, 0, 235);
move(16.91, 13.51, 0.00);  object(0x01BF, 90, 0, 14);
move(-1.31, -6.53, 0.00);  object(0x01BF, 90, 0, 15);
move(-2.31, -6.26, 0.00);  object(0x01BF, 90, 0, 19);
move(13.22, 17.36, 0.00);  object(0x01BF, 90, 0, 14);
move(7.68, -1.58, 0.00);  object(0x01BF, 90, 0, 9);
move(-30.23, -9.23, 0.00);  object(0x01BF, 90, 0, 311);
move(3.32, 5.90, 0.00);  object(0x01BF, 90, 0, 284);
move(3.54, 4.16, 0.00);  object(0x01BF, 90, 0, 344);
move(18.93, 0.05, 0.00);  object(0x01BF, 90, 0, 28);
move(-3.46, -6.42, 0.00);  object(0x01BF, 90, 0, 29);
move(-2.14, 0.40, 0.00);  object(0x01BF, 90, 0, 353);
move(-1.37, -5.83, 0.00);  object(0x01BF, 90, 0, 352);
move(-1.77, -7.73, 0.00);  object(0x01BF, 90, 0, 28);
move(14.09, 12.74, 0.00);  object(0x01BF, 90, 0, 346);
move(7.03, 6.06, 0.00);  object(0x01BF, 90, 0, 334);
move(0.98, -6.10, 0.00);  object(0x01BF, 90, 0, 317);
move(6.29, 8.55, 0.00);  object(0x01BF, 90, 0, 341);
move(-0.12, -6.48, 0.00);  object(0x01BF, 90, 0, 342);
move(-0.18, -6.84, 0.00);  object(0x01BF, 90, 0, 342);
move(-16.21, 3.76, 0.00);  object(0x01BF, 90, 0, 356);
move(-1.94, -6.84, 0.00);  object(0x01BF, 90, 0, 356);
move(-5.74, -4.73, 0.00);  object(0x01BF, 90, 0, 304);
move(5.43, -3.41, 0.00);  object(0x01BF, 90, 0, 125);
move(-5.44, 8.21, 0.00);  object(0x01BF, 90, 0, 250);
move(2.89, -8.08, 0.00);  object(0x01BF, 90, 0, 200);
move(5.19, 15.18, 0.00);  object(0x01BF, 90, 0, 272);
move(-0.79, -8.59, 0.00);  object(0x01BF, 90, 0, 260);
move(-0.55, -6.17, 0.00);  object(0x01BF, 90, 0, 230);
move(6.26, 2.45, 0.00);  object(0x01BF, 90, 0, 232);
move(0.52, 7.42, 0.00);  object(0x01BF, 90, 0, 274);
move(0.58, 7.30, 0.00);  object(0x01BF, 90, 0, 281);
move(2.57, 3.28, 0.00);  object(0x01BF, 90, 0, 247);
move(5.94, 1.73, 0.00);  object(0x01BF, 90, 0, 262);
move(5.58, 0.91, 0.00);  object(0x01BF, 90, 0, 256);
move(4.12, -0.12, 0.00);  object(0x01BF, 90, 0, 259);
move(-10.44, -21.09, 0.00);  object(0x01BF, 90, 0, 192);
move(8.14, -0.69, 0.00);  object(0x01BF, 90, 0, 186);
move(1.66, 4.62, 0.00);  object(0x01BF, 90, 0, 183);
move(-0.31, 5.86, 0.00);  object(0x01BF, 90, 0, 191);
move(0.32, 4.15, 0.00);  object(0x01BF, 90, 0, 68);
move(-8.15, -8.10, 0.00);  object(0x01BF, 90, 0, 150);
move(-0.51, 6.48, 0.00);  object(0x01BF, 90, 0, 143);
move(-4.85, -6.87, 0.00);  object(0x01BF, 90, 0, 144);
move(0.12, 6.31, 0.00);  object(0x01BF, 90, 0, 9);
move(0.72, -26.79, 0.00);  object(0x01BF, 90, 0, 259);
move(3.69, -0.61, 0.00);  object(0x01BF, 90, 0, 259);
move(-17.00, 2.83, 0.00);  object(0x01BF, 90, 0, 258);
move(4.05, 2.29, 0.00);  object(0x01BF, 90, 0, 30);
move(4.56, 4.75, 0.00);  object(0x01BF, 90, 0, 306);
move(5.08, -2.21, 0.00);  object(0x01BF, 90, 0, 31);
move(5.05, 0.35, 0.00);  object(0x01BF, 90, 0, 174);
move(6.68, -0.14, 0.00);  object(0x01BF, 90, 0, 4);
move(-3.26, -5.43, 0.00);  object(0x01BF, 90, 0, 356);
//weapon spawns
//brass knuckles
setfloat(0x08e2d800, 57.15, -1654.00, 31.15);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//chisel
setfloat(0x08e2d860, 54.57, -1654.37, 31, 15);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//hockey stick
setfloat(0x08e2d8c0, 51.16, -1654.48, 31.15);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
//nightstick
setfloat(0x08e2d920, 47.73, -1654.33, 31.05);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
//butcher knife
setfloat(0x08e2d980, 47.73, -1654.33, 32.05);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
//baseball bat
setfloat(0x08e2d9e0, 45.10, -1654.26, 31.05);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
//fire axe
setfloat(0x08e2da40, 44.54, -1650.88, 31.05);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
//meat cleaver
setfloat(0x08e2daa0, 45.62, -1645.52, 31.05);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
//machete
setfloat(0x08e2db00, 47.63, -1644.42, 31.05);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
//katana
setfloat(0x08E2DB60, 50.49, -1644.39, 31.05);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
//chainsaw
setfloat(0x08E2DBC0, 55.05, -1644.41, 31.05);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
//Grenade
setfloat(0x08E2DC20, 40.49, -1644.33, 26.11);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0x1, 0x1);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
//Remote Grenade
setfloat(0x08E2DC80, 41.63, -1642.23, 26.12);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0x1, 0x1);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
//Molotovs
setfloat(0x08E2DD40, 42.80, -1639.58, 26.13);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0x1, 0x1);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
//Pistol
setfloat(0x08E2DDA0, 43.81, -1637.78, 26.14);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0x1, 0x1);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
//Colt Python
setfloat(0x08E2DE00, 44.70, -1636.65, 26.14);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0x1, 0x1);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
//AK-47
setfloat(0x08E2DF80, 45.83, -1634.99, 26.14);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0x1, 0x1);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
//M4
setfloat(0x08E2DFE0, 46.82, -1633.57, 26.14);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0x1, 0x1);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
//Chromed Shotgun
setfloat(0x08E2DE60, 48.21, -1632.54, 26.15);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0x1, 0x1);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
//Spaz Shotgun
setfloat(0x08E2DEC0, 49.72, -1631.64, 26.15);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0x1, 0x1);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
//Combat Shotgun
setfloat(0x08E2DF20, 51.55, -1631.17, 26.15);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0x1, 0x1);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
//Tec-9
setfloat(0x08E2E040, 94.11, -1630.45, 26.15);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0x1, 0x1);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
//Micro SMG
setfloat(0x08E2E0A0, 96.43, -1629.93, 26.16);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0x1, 0x1);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
//Mac 10
setfloat(0x08E2E100, 98.39, -1630.02, 26.16);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0x1, 0x1);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
//MP5
setfloat(0x08E2E160, 99.64, -1632.39, 26.15);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0x1, 0x1);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
//Rocket Launcher
setfloat(0x08E2E280, 99.13, -1635.44, 26.14);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0x1, 0x1);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
//Flame Thrower
setfloat(0x08E2E2E0, 99.75, -1638.02, 26.14);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0x1, 0x1);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
//M60
setfloat(0x08E2E340, 99.81, -1640.61, 26.13);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0x1, 0x1);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
//Sniper Rifle
setfloat(0x08E2E1C0, 99.88, -1643.29, 26.12);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0x1, 0x1);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
//LS Sniper Rifle
setfloat(0x08E2E220, 99.95, -1646.24, 26.12);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0x1, 0x1);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
//Deimos SP
setchar(0x8E4EB20, 130);
setchar(0x8E4EB20 + 0x18, 0x01);
setfloat(0x8E4EB24, 93.56, -1661.96, 26.08, 90);
//Phobos VT
setchar(0x8E4EAF4, 186);
setchar(0x8E4EAF4 + 0x18, 0x01);
setfloat(0x8E4EAF8, 93.67, -1668.33, 26.06, 90);
//Banshee
setchar(0x8E4EA9C, 160);
setchar(0x8E4EA9C + 0x18, 0x01);
setfloat(0x8E4EAA0, 95.48, -1675.22, 26.05, 90);
//Hellenbach GT
setchar(0x08E4Ec54, 185);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, 89.43, -1676.26, 26.04, 180);
//Stinger
setchar(0x08E4Ecd8, 133);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, 82.09, -1675.97, 26.04, 180);
//Infernus
setchar(0x08E4Ec28, 142);
setchar(0x08E4Ec28 + 0x18, 0x01);
setfloat(0x08E4Ec2c, 75.22, -1674.56, 26.04, 180);
//V8 Ghost
setchar(0x08E4Eba4, 187);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 75.15, -1667.31, 27.44, 90);
//Cheetah
setchar(0x08E4Ebfc, 146);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 77.68, -1662.38, 26.09, 90);
//Leone Sentinel
setchar(0x08E4Ebfc, 172);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 63.53, -1663.76, 26.06, 180);
//Diablo Stallion
setchar(0x08E4E9EC, 175);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 55.83, -1662.34, 26.07, 180);
//Hoods Rumpo XL
setchar(0x08E4Ea44, 177);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 49.39, -1656.94, 26.08, 180);
//Yardie Lobo
setchar(0x08E4Ea70, 173);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, 43.87, -1651.64, 26.09, 180);
//Yakuza Stinger
setchar(0x08E4Eac8, 174);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 47.11, -1642.49, 26.79, 90);
//Sindacco Argento
setchar(0x08E4Eb78, 190);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 53.04, -1644.30, 26.79, 90);
//Cartel Cruiser
setchar(0x08E4Ea18, 176);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 57.38, -1645.32, 26.80, 90);
//Forelli Excess
setchar(0x8E4EB4C, 191);
setchar(0x8E4EB4C + 0x18, 0x01);
setfloat(0x8E4EB50, 61.64, -1645.66, 26.79, 90);
//Angel
setchar(0x08E4E9EC, 202);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 28.49, -1634.53, 26.13, 0);
//PCJ-600
setchar(0x08E4Ea44, 205);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 24.56, -1634.48, 26.13, 0);
//Freeway
setchar(0x08E4Ea70, 207);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, 27.33, -1634.43, 26.79, 0);
//Sanchez
setchar(0x08E4Eac8, 210);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 25.75, -1634.58, 26.79, 0);
//Avenger
setchar(0x08E4Eb78, 208);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 25.75, -1634.06, 26.16, 0);
//Manchez
setchar(0x08E4Ea18, 209);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 19.91, -1631.96, 26.16, 0);
//Hunter, Dodo, Mavericks next to showroom
moveto(-0.62, -1641.88, 26.66);  object(0x01BF, 300, 0, 107);
move(0.19, 0.41, 0.00);  object(0x01BF, 300, 0, 103);
move(-4.59, 1.37, 2.60);  object(0x01BF, 300, 0, 111);
move(-5.14, 2.10, 1.60);  object(0x01BF, 90, 0, 108);
move(-6.36, 1.93, 0.00);  object(0x01BF, 90, 0, 107);
move(8.56, 5.14, 0.00);  object(0x01BF, 90, 0, 108);
move(-6.31, 2.08, 0.00);  object(0x01BF, 90, 0, 108);
move(-7.62, -5.58, 0.00);  object(0x01BF, 90, 0, 109);
move(2.27, 7.19, 0.00);  object(0x01BF, 90, 0, 107);
move(-6.10, 1.90, 0.00);  object(0x01BF, 90, 0, 107);
move(-2.34, -7.34, 0.00);  object(0x01BF, 90, 0, 108);
move(-5.07, 2.92, 0.00);  object(0x01BF, 90, 0, 107);
move(1.84, 6.18, 0.00);  object(0x01BF, 90, 0, 106);
move(-5.97, 1.67, -1.90);  object(0x01BF, 60, 0, 106);
move(-3.52, 0.89, -2.20);  object(0x01BF, 60, 0, 103);
//Hunter
setchar(0x08E4Ea18, 213);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, -16.23, -1631.09, 32.10, 0);
//Dodo
setchar(08E4Ed88, 164);
setchar(08E4Ed88 + 0x18, 0x01);
setfloat(08E4Ed8c, -27.11, -1627.33, 32.10, 0);
//Maverick
setchar(0x08E4E9C0, 214);
setfloat(0x08E4E9C4, 272.15, -422.6, 26.02);
setfloat(0x08E4E9D0, 0);
//Police Maverick
setchar(0x08E4E9C0, 214);
setfloat(0x08E4E9C4, -50.34, -1614.54, 26.15);
setfloat(0x08E4E9D0, 0);
teleport(82.94, -1623.88, 26.17)
off()

#cheat GOTHAM V0.1
//ID: 13980
//Score: 114
//Author: emcp
//Category: Location Mods
//Description: its a batcave with run way helipad jeti(for boats) and a vechiles
//including the BATMOBILE BATCHOPTER BATPLANE as well as the new BATBOAT(MUST WAIT A WHILE FOR DODO AND HUNTER 
//this cheat also includes a bat porter to teleport you to the batcave at anyti
//Image: none
//Time: 01/07/2006 16:08:15
//Working: Yes
//AUTHORS
//emcp and penguinsrule
//DISCRIPTION
//its a batcave with run way helipad jeti(for boats) and a vechiles
//including the BATMOBILE BATCHOPTER BATPLANE BATBOAT and the new BATBIKE
//its facing dukin dounaughts in portland in the cave its been extened for use
//this also make it dark and peds have weapons and petty crimes happen to make it look like gotham
//thanks to penguinsrule for is huge help on this project
moveto(788.85, -1031.98, 8.34);  object(0x01BF, 0, 0, 93);
move(3.00, 0.02, 5.00);  object(0x01BF, 55, 0, 91);
move(-3.04, -7.12, -5.10);  object(0x01BF, 0, 0, 91);
move(1.08, -6.64, -1.00);  object(0x01BF, 0, 0, 74);
move(2.93, -7.17, 0.00);  object(0x01BF, 0, 0, 63);
move(3.42, -6.79, 0.70);  object(0x01BF, 0, 0, 63);
move(4.01, -6.73, 0.70);  object(0x01BF, 0, 0, 55);
move(4.96, -5.34, 0.00);  object(0x01BF, 0, 0, 41);
move(6.00, -5.13, 0.80);  object(0x01BF, 0, 0, 41);
move(5.85, -5.00, 0.00);  object(0x01BF, 0, 0, 41);
move(6.00, -5.13, 0.00);  object(0x01BF, 0, 0, 41);
move(4.69, -4.05, 0.00);  object(0x01BF, 0, 0, 41);
move(12.95, -8.76, -0.70);  object(0x01BF, 0, 0, 9);
move(4.47, -0.60, 0.00);  object(0x01BF, 0, 0, 6);
move(3.31, 3.80, 0.00);  object(0x01BF, 0, 0, 265);
move(-56.58, 57.19, 4.40);  object(0x01BF, 60, 0, 91);
move(0.76, -6.62, -0.10);  object(0x01BF, 60, 0, 75);
move(2.48, -6.56, 0.00);  object(0x01BF, 60, 0, 63);
move(3.73, -6.13, 0.00);  object(0x01BF, 60, 0, 58);
move(4.09, -6.65, 0.00);  object(0x01BF, 60, 0, 58);
move(4.91, -5.08, 0.00);  object(0x01BF, 60, 0, 47);
move(5.77, -4.66, 0.00);  object(0x01BF, 60, 0, 44);
move(5.54, -5.20, 0.00);  object(0x01BF, 60, 0, 44);
move(5.68, -4.85, 0.00);  object(0x01BF, 60, 0, 42);
move(4.53, -3.78, 0.00);  object(0x01BF, 60, 0, 42);
move(5.91, -5.39, 0.00);  object(0x01BF, 60, 0, 42);
move(5.60, -2.32, 0.00);  object(0x01BF, 60, 0, 6);
move(4.80, 0.55, 0.50);  object(0x01BF, 60, 0, 271);
move(-0.65, -1.36, 0.00);  object(0x01BF, 60, 0, 4);
move(-4.95, 6.32, 1.10);  object(0x01BF, 90, 0, 43);
move(-5.79, 5.42, 0.10);  object(0x01BF, 90, 0, 42);
move(-5.78, 5.01, 0.00);  object(0x01BF, 90, 0, 43);
move(-5.78, 4.99, 0.00);  object(0x01BF, 90, 0, 44);
move(-5.69, 5.48, 0.00);  object(0x01BF, 90, 0, 44);
move(-6.02, 4.34, 0.00);  object(0x01BF, 90, 0, 35);
move(-4.22, 5.42, 0.00);  object(0x01BF, 90, 0, 53);
move(-4.63, 6.31, 0.00);  object(0x01BF, 90, 0, 55);
move(-3.07, 6.06, 0.00);  object(0x01BF, 90, 0, 76);
move(-2.10, 7.56, 0.00);  object(0x01BF, 90, 0, 73);
move(15.93, -80.08, -9.10);  object(0x01BF, 90, 0, 40);
move(-4.33, -5.06, 0.00);  object(0x01BF, 90, 0, 40);
move(-4.03, -4.75, 0.00);  object(0x01BF, 90, 0, 40);
move(-3.99, -4.70, 0.00);  object(0x01BF, 90, 0, 40);
move(-3.66, -4.30, 0.00);  object(0x01BF, 90, 0, 40);
move(-4.34, -5.12, 0.00);  object(0x01BF, 90, 0, 40);
move(-4.39, -5.23, 0.00);  object(0x01BF, 90, 0, 40);
move(-4.24, -5.04, 0.00);  object(0x01BF, 90, 0, 40);
move(-3.75, -4.50, 0.00);  object(0x01BF, 90, 0, 40);
move(-4.39, -5.26, 0.00);  object(0x01BF, 90, 0, 40);
move(-3.59, -4.35, 0.00);  object(0x01BF, 90, 0, 40);
move(-3.74, -4.54, 0.00);  object(0x01BF, 90, 0, 40);
move(-4.18, -5.05, 0.00);  object(0x01BF, 90, 0, 39);
move(-4.29, -5.23, 0.00);  object(0x01BF, 90, 0, 39);
move(-4.09, -5.03, 0.00);  object(0x01BF, 90, 0, 39);
//bridge and fence
moveto(836.93, -1106.50, 0.64);  object(0x01E4, 270, 0, 42);
move(2.75, -2.26, 0.00);  object(0x01E4, 270, 335, 39);
move(6.36, -4.76, 3.70);  object(0x01E4, 270, 335, 36);
move(5.91, -4.28, 3.40);  object(0x01E4, 270, 335, 35);
move(5.58, -3.88, 3.20);  object(0x01E4, 270, 335, 35);
move(6.91, -4.77, 1.90);  object(0x01E4, 270, 0, 35);
move(6.14, -1.98, 0.00);  object(0x01E4, 270, 0, 2);
move(8.55, -0.33, 0.00);  object(0x01E4, 270, 0, 2);
move(8.72, -0.29, -0.80);  object(0x01E4, 270, 350, 180);
move(-1.49, -5.16, 2.54);  object(0x01BF, 0, 0, 90);
move(-0.07, 10.80, 0.00);  object(0x01BF, 0, 0, 90);
move(0.02, 7.80, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.05, 7.90, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.05, 7.60, 0.00);  object(0x01BF, 0, 0, 90);
move(4.07, 3.52, 0.00);  object(0x01BF, 0, 0, 180);
move(7.90, -0.02, 0.00);  object(0x01BF, 0, 0, 180);
move(-8.23, -41.55, -0.20);  object(0x01BF, 0, 0, 179);
move(7.69, 0.37, 0.00);  object(0x01BF, 0, 0, 356);
move(4.18, 37.35, 0.00);  object(0x01BF, 0, 0, 90);
move(0.02, -7.50, 0.00);  object(0x01BF, 0, 0, 90);
move(0.02, -7.80, 0.00);  object(0x01BF, 0, 0, 90);
move(0.02, -7.70, 0.00);  object(0x01BF, 0, 0, 90);
move(0.01, -7.36, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -3.30, 0.00);  object(0x01BF, 0, 0, 270);
move(-100.90, 170.25, -9.36);  object(0x01F3, 0, 0, 86);
move(-4.81, 3.90, 0.00);  object(0x01F3, 0, 0, 352);
//bridge railing
moveto(883.39, -1127.48, 12.82);  object(0x01F0, 0, 10, 0);
move(0.02, -2.91, 0.00);  object(0x01F0, 0, 10, 0);
move(-3.16, 2.91, 0.00);  object(0x01F0, 0, 0, 1);
move(-0.14, -2.81, 0.00);  object(0x01F0, 0, 0, 1);
move(-3.70, 0.05, 0.00);  object(0x01F0, 0, 0, 1);
move(0.30, 2.99, 0.00);  object(0x01F0, 0, 0, 3);
move(-42.24, 24.50, -12.10);  object(0x01F0, 0, 0, 123);
move(2.53, -2.14, 0.00);  object(0x01F0, 0, 0, 221);
moveto(839.84, -1107.38, 0.62);  object(0x01F0, 0, 0, 222);
move(3.05, -2.29, 1.50);  object(0x01F0, 0, 25, 218);
move(2.85, -2.04, 1.50);  object(0x01F0, 0, 25, 218);
move(2.77, -2.14, 1.80);  object(0x01F0, 0, 25, 218);
move(2.84, -1.96, 1.70);  object(0x01F0, 0, 25, 216);
move(2.92, -2.27, 1.60);  object(0x01F0, 0, 25, 216);
move(3.15, -1.95, 1.80);  object(0x01F0, 0, 25, 216);
move(3.31, -2.41, 1.80);  object(0x01F0, 0, 25, 216);
move(-21.55, 12.00, -11.40);  object(0x01F0, 0, 335, 38);
move(2.89, -2.09, 1.80);  object(0x01F0, 0, 335, 37);
move(3.13, -2.16, 1.80);  object(0x01F0, 0, 335, 37);
move(2.80, -2.10, 1.50);  object(0x01F0, 0, 335, 37);
move(2.72, -2.04, 1.60);  object(0x01F0, 0, 335, 37);
move(2.43, -1.74, 1.50);  object(0x01F0, 0, 335, 33);
move(2.72, -1.80, 1.30);  object(0x01F0, 0, 335, 36);
move(4.02, -2.87, 2.40);  object(0x01F0, 0, 0, 36);
move(1.75, 2.52, 0.00);  object(0x01F0, 0, 0, 34);
move(3.24, -2.18, 0.00);  object(0x01F0, 0, 0, 34);
move(-1.61, -2.59, 0.00);  object(0x01F0, 0, 0, 34);
move(9.60, 0.45, 0.00);  object(0x01F0, 0, 0, 2);
move(-4.20, 0.13, 0.00);  object(0x01F0, 0, 0, 2);
move(4.31, -3.14, 0.00);  object(0x01F0, 0, 0, 2);
move(-3.40, 0.10, 0.00);  object(0x01F0, 0, 0, 2);
move(-2.90, 0.09, 0.00);  object(0x01F0, 0, 0, 2);
//lights
moveto(757.16, -1193.27, 6.42);  object(0x020F, 0, 0, 310);
move(7.53, 8.82, 0.00);  object(0x020F, 0, 0, 310);
move(8.63, 10.11, 0.00);  object(0x020F, 0, 0, 310);
move(11.52, 14.35, 0.00);  object(0x020F, 0, 0, 310);
move(8.17, 9.58, 0.00);  object(0x020F, 0, 0, 310);
move(12.25, 14.78, 0.00);  object(0x020F, 0, 0, 310);
move(8.24, 9.66, 0.00);  object(0x020F, 0, 0, 310);
move(-5.84, 4.96, 0.10);  object(0x020F, 0, 0, 130);
move(-7.82, -8.97, 0.00);  object(0x020F, 0, 0, 130);
move(-12.20, -14.44, 0.00);  object(0x020F, 0, 0, 130);
move(-8.68, -10.48, -0.20);  object(0x020F, 0, 0, 130);
move(-11.66, -14.38, 0.00);  object(0x020F, 0, 0, 130);
move(-7.89, -9.17, 0.00);  object(0x020F, 0, 0, 121);
move(-8.71, -10.27, 0.00);  object(0x020F, 0, 0, 121);
move(81.60, 72.70, -5.10);  object(0x020F, 0, 0, 6);
move(5.65, 6.13, 0.00);  object(0x020F, 0, 0, 6);
move(62.92, 12.30, 11.00);  object(0x020F, 0, 0, 49);
move(-11.52, 0.29, 0.00);  object(0x020F, 0, 0, 346);
move(11.84, -38.48, 0.00);  object(0x020F, 0, 0, 171);
move(-14.27, -1.75, 0.00);  object(0x020F, 0, 0, 187);
//pcj-600
setchar(0x08E4Ebfc, 205);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 798.98, -985.91, 4.90, 0);
//infernus
setchar(0x08E4Ecd8, 142);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, 844.87, -1097.70, 6.37, 52);
//boat
setchar(0x08E4Eb78, 194);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 836.76, -1114.54, 1.93, 135);
//dodo
setchar(08E4Ed88, 164);
setchar(08E4Ed88 + 0x18, 0x01);
setfloat(08E4Ed8c, 817.20, -1115.67, 7.00, 135);
//hunter
setchar(0x08E4Ea18, 213);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 894.76, -1123.52, 13.93, 180);
//batplane
setshort(0x992FE5C, 0x20, 0x62, 0x61, 0x74);
setchar(0x945b772, 0x6);
setfloat(0x9442bfc, 0.725);
setfloat(0x945b77c, 1.175);
setfloat(0x945b780, 1.175);
setfloat(0x945b774, 0.00438);
setfloat(0x945b6fc, 0);
sethex(0x945b7c0, 0x00, 0x81, 0x04, 0x00);
sethex(0x944fb2c, 0xFF, 0xFF, 0x00);
sethex(0x944fb24, 0xFF, 0x00, 0xFF);
setchar(pplayer + 0xB84, 0x00);
//bat bike
setshort(0x99450E2, 0x62, 0x61, 0x74, 0x62, 0x69, 0x6b, 0x65);
setshort(0x9446c10, 250);
setfloat(0x9446c0c, 1.025);
setfloat(0x945d48c, 1.375);
setfloat(0x945d490, 1.375);
setfloat(0x945d484, 0.00487);
setfloat(0x945d40c, 0);
sethex(0x945d4d0, 0x02, 0x81, 0x01, 0x07);
sethex(0x944fb14, 0x00, 0x00, 0x00);
sethex(0x944fb24, 0xFF, 0xFF, 0xFF);
setchar(pplayer + 0xB84, 0x00);
//batcar
sethex(0x945a231, 0x01);
setchar(0x945a1e2, 0x5);
setchar(0x945a1e1, 0x50);
setchar(0x945a1e0, 0x46);
setshort(0x94409a0, 250);
setfloat(0x944099c, 1.45);
setfloat(0x945a160, 1400);
setfloat(0x945a168, 0.8);
setfloat(0x945a220, 0.25);
setfloat(0x945a224, -0.09999);
setfloat(0x945a228, 0.5);
setfloat(0x945a1ec, 1.525);
setfloat(0x945a1f0, 1.525);
setfloat(0x945a1e4, 0.00275);
setfloat(0x945a200, 0.51);
setfloat(0x945a204, 0);
setfloat(0x945a208, 40);
setfloat(0x945a218, 1.2);
setfloat(0x945a21c, 0.19);
setfloat(0x945a234, 0.37);
setfloat(0x945a22c, 0.6);
setfloat(0x945a180, 0);
setfloat(0x945a184, -0.29999);
setfloat(0x945a188, -0.19999);
setchar(0x945a190, 70);
setfloat(0x945a20c, 0.9);
setfloat(0x945a210, 0.5);
setfloat(0x945a16c, 1.02857);
sethex(0x944fb54, 0x00, 0x00, 0x00);
sethex(0x944fb0c, 0x00, 0x00, 0x00);
setint(0x8E38A38, 142);
setchar(0x8E38A5C, 125, 107);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
teleport(795.90, -965.89, 4.90);
//peds have weps
setchar(0x08B564D8, 1)
//petty crime
setchar(0x8B562F2, 1)
//time
setchar(0x08b5e090, 02, 30);
teleport(795.90, -965.89, 4.90);

#cheat Fort Trenton
//ID: 13935
//Score: 33
//Author: Noru
//Category: Location Mods
//Description: Creates a old small base on staunton island. Make sure you get the Teleport code as well. Turn on the code and wait 3-4 seconds then teleport to it
//Image: none
//Time: 30/06/2006 14:31:28
//Working: Yes
//by Noru
moveto(76.04, -322.61, 18.57);  object(0x1002, 0, 0, 55);
move(0.08, -7.40, 0.00);  object(0x1003, 180, 0, 0);
move(-0.11, -4.13, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.20, 15.77, 0.00);  object(0x01BF, 0, 0, 270);
move(-4.05, -3.81, 0.00);  object(0x01BF, 0, 0, 182);
move(-7.93, 0.21, 0.00);  object(0x01BF, 0, 0, 182);
move(8.12, -8.50, 0.00);  object(0x01BF, 0, 0, 359);
move(-3.79, -4.03, 0.00);  object(0x01BF, 0, 0, 269);
move(0.21, -7.84, 0.00);  object(0x01BF, 0, 0, 269);
move(-3.45, 7.85, -1.40);  object(0x0F97, 0, 0, 270);
move(0.44, 3.65, 1.40);  object(0x01BF, 0, 0, 359);
move(0.14, -7.35, 0.00);  object(0x01BF, 0, 0, 182);
move(-0.35, -3.81, -1.30);  object(0x0F95, 0, 0, 273);
move(0.50, -3.49, 1.30);  object(0x01BF, 0, 0, 181);
move(-4.08, 10.28, -2.20);  object(0x01E4, 0, 0, 91);
move(-0.02, -5.70, 0.00);  object(0x01E4, 0, 0, 91);
move(3.29, -0.45, 3.10);  object(0x01BF, 90, 0, 90);
move(-0.03, 8.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-4.84, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(0.03, -8.00, 0.00);  object(0x01BF, 90, 0, 90);
move(5.26, -0.61, 2.30);  object(0x0F97, 0, 0, 272);
move(-0.11, 7.40, -0.10);  object(0x0F95, 0, 0, 270);
move(0.34, -3.58, 3.50);  object(0x01BF, 0, 0, 3);
move(-0.15, 7.25, 0.00);  object(0x01BF, 0, 0, 0);
move(6.77, 0.46, 0.00);  object(0x01BF, 0, 0, 359);
move(3.87, -3.91, 0.00);  object(0x01BF, 0, 0, 91);
move(-0.03, 16.04, 0.00);  object(0x01BF, 0, 0, 91);
move(-3.77, -3.91, 0.00);  object(0x01BF, 0, 0, 181);
move(-7.92, 0.25, 0.00);  object(0x01BF, 0, 0, 183);
move(1.49, -23.52, -0.10);  object(0x01BF, 0, 0, 181);
move(2.71, 3.91, 0.00);  object(0x01BF, 0, 0, 269);
move(-0.21, 6.91, 0.00);  object(0x01BF, 0, 0, 269);
move(-3.37, -6.83, -1.10);  object(0x01BF, 90, 0, 270);
move(-0.21, 7.82, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.12, 7.93, 0.00);  object(0x01BF, 90, 0, 270);
move(6.94, -0.52, 0.00);  object(0x01BF, 90, 0, 90);
move(-13.58, -7.31, 0.00);  object(0x01BF, 90, 0, 270);
move(0.22, -8.02, 0.00);  object(0x01BF, 90, 0, 270);
move(2.00, -6.99, -6.50);  object(0x01BF, 90, 330, 269);
move(-0.05, -7.10, -4.00);  object(0x01BF, 90, 330, 269);
move(1.63, 14.67, 7.48);  object(0x01E4, 0, 0, 90);
move(-0.04, 5.80, 0.00);  object(0x01E4, 0, 0, 90);
move(-4.21, 5.52, -1.30);  object(0x01F0, 0, 0, 90);
move(-0.05, -3.36, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.05, -3.36, 0.00);  object(0x01F0, 0, 0, 90);
move(0.06, -3.34, 0.00);  object(0x01F0, 0, 0, 90);
move(3.59, 10.21, 0.00);  object(0x01F0, 0, 0, 179);
move(-3.91, -0.52, 0.40);  object(0x020F, 0, 0, 100);
move(0.24, -2.13, 0.00);  object(0x020F, 0, 0, 100);
move(-0.20, -2.29, 0.00);  object(0x020F, 0, 0, 100);
move(0.15, -2.62, 0.00);  object(0x020F, 0, 0, 100);
move(-0.21, -2.29, 0.00);  object(0x020F, 0, 0, 100);
move(0.08, -2.22, 0.00);  object(0x020F, 0, 0, 100);
move(-0.10, -3.00, 0.00);  object(0x020F, 0, 0, 100);
move(4.64, -4.90, -1.80);  object(0x01BF, 0, 0, 91);
move(-0.20, -8.04, 0.00);  object(0x01BF, 0, 0, 91);
move(-4.19, -3.80, 0.00);  object(0x01BF, 0, 0, 1);
move(-7.93, 0.15, 0.00);  object(0x01BF, 0, 0, 1);
move(8.62, 35.42, 5.80);  object(0x01BF, 90, 0, 90);
move(0.85, -22.01, 0.00);  object(0x01BF, 90, 0, 358);
move(0.28, -6.50, 0.00);  object(0x01BF, 90, 0, 358);
move(0.23, -3.35, 1.20);  object(0x01BF, 0, 0, 355);
move(-7.29, -0.27, 0.00);  object(0x01BF, 0, 0, 2);
move(6.38, -2.29, -3.70);  object(0x01BF, 90, 0, 358);
move(-7.92, -0.28, 0.00);  object(0x01BF, 90, 0, 358);
move(1.41, 18.90, 2.50);  object(0x01BF, 90, 0, 90);
move(-0.11, 8.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.12, 7.82, 0.00);  object(0x01BF, 90, 0, 90);
move(-3.30, 0.10, -3.20);  object(0x01BF, 0, 0, 90);
move(0.24, -7.73, -0.10);  object(0x01BF, 0, 0, 88);
move(0.43, -7.61, 0.00);  object(0x01BF, 0, 0, 88);
move(2.96, -8.46, 3.30);  object(0x01BF, 90, 0, 89);
move(0.29, -7.82, 0.00);  object(0x01BF, 90, 0, 89);
move(-2.96, 8.32, -3.40);  object(0x01BF, 0, 0, 89);
move(0.31, -7.81, 0.00);  object(0x01BF, 0, 0, 89);
move(-0.09, -0.40, -5.90);  object(0x01BF, 0, 0, 90);
move(-0.04, 7.96, 0.00);  object(0x01BF, 0, 0, 88);
move(-0.35, 8.03, 0.00);  object(0x01BF, 0, 0, 87);
move(-0.40, 7.92, 0.00);  object(0x01BF, 0, 0, 87);
move(-0.44, 7.89, 0.00);  object(0x01BF, 0, 0, 88);
move(1.06, 3.73, 6.10);  object(0x01BF, 0, 0, 355);
move(7.47, 0.79, 0.00);  object(0x01BF, 0, 0, 355);
move(-4.55, -0.35, -5.90);  object(0x01BF, 0, 0, 355);
move(6.04, 0.20, 0.00);  object(0x01BF, 0, 0, 2);
move(-0.78, 3.31, 2.50);  object(0x01BF, 0, 0, 87);
move(0.00, 0.00, 6.50);  object(0x01BF, 0, 0, 87);
move(-0.44, -3.89, -2.00);  object(0x01BF, 0, 0, 0);
move(0.00, 0.02, -6.80);  object(0x01BF, 0, 0, 3);
move(4.56, -28.00, 6.42);  object(0x01BF, 0, 0, 91);
move(0.08, -4.70, 0.00);  object(0x01BF, 0, 0, 91);
move(-0.53, -2.96, 0.60);  object(0x020F, 0, 0, 176);
move(-1.62, -0.01, 0.00);  object(0x020F, 0, 0, 176);
move(-2.01, -0.11, 0.00);  object(0x020F, 0, 0, 176);
move(-2.42, -0.05, 0.00);  object(0x020F, 0, 0, 176);
move(-2.33, -0.02, 0.00);  object(0x020F, 0, 0, 176);
move(-3.92, 25.60, -5.70);  object(0x0210, 0, 0, 266);
move(12.03, -6.22, -0.80);  object(0x0228, 0, 0, 124);
move(-11.34, -10.68, 0.70);  object(0x020D, 0, 0, 177);
move(14.39, 4.82, -0.10);  object(0x0251, 0, 0, 58);
move(-0.86, 4.16, 0.00);  object(0x0251, 0, 0, 223);
move(-2.37, 4.92, -0.60);  object(0x09F9, 0, 0, 102);
move(-4.55, -2.18, -0.50);  object(0x0114, 90, 190, 224);
move(-5.18, 13.36, 1.40);  object(0x0CD1, 0, 0, 359);
move(0.11, -2.98, 0.00);  object(0x0CD1, 0, 0, 0);
move(40.49, 0.33, -1.30);  object(0x0EB0, 0, 0, 0);
move(-0.02, 1.81, 0.00);  object(0x0EB0, 0, 0, 0);
move(-0.03, 1.70, 0.00);  object(0x0EB0, 0, 0, 0);
move(-0.01, 1.81, 0.00);  object(0x0EB0, 0, 0, 0);
move(-0.01, 1.51, 0.00);  object(0x0EB0, 0, 0, 0);
move(-2.75, -10.41, 0.00);  object(0x0DC0, 0, 0, 106);
move(-7.88, 0.86, 0.00);  object(0x0DC0, 0, 0, 106);
move(8.71, 10.72, 0.00);  object(0x0DC0, 0, 0, 277);
move(-10.66, -1.19, 0.00);  object(0x0DC0, 0, 0, 277);
move(-1.09, -10.34, 0.20);  object(0x0ED3, 0, 0, 181);
move(5.30, 11.72, 0.20);  object(0x0215, 0, 0, 181);
move(1.10, 0.15, 0.00);  object(0x0215, 0, 0, 181);
move(1.20, -0.02, -0.10);  object(0x021C, 0, 0, 181);
move(-0.71, -0.70, 0.00);  object(0x021C, 0, 0, 181);
move(-1.90, -0.21, 0.00);  object(0x021C, 0, 0, 181);
move(-6.12, -1.48, 0.90);  object(0x0216, 0, 300, 181);
move(8.91, 4.55, -0.50);  object(0x021E, 0, 0, 181);
moveto(54.50, -355.35, 15.17);  object(0x020B, 0, 0, 180);
move(-3.59, 2.53, 0.00);  object(0x020B, 0, 0, 180);
move(8.08, -4.34, 0.00);  object(0x020B, 0, 0, 180);
move(2.37, 3.27, 1.30);  object(0x0ED8, 0, 0, 90);
moveto(60.19, -361.20, 15.57);  object(0x0ED2, 0, 0, 140);
setfloat(0x09997788, -100);
setchar(0x8E4EA70, 163);
setchar(0x8E4EA70 + 0x18, 0x01);
setfloat(0x8E4EA74, 93.69, -334.27, 16.17, 0);
setchar(0x8E4EA9C, 163);
setchar(0x8E4EA9C + 0x18, 0x01);
setfloat(0x8E4EAA0, 95.13, -312.23, 16.17, 180);
setchar(0x8E4EAC8, 208);
setchar(0x8E4EAC8 + 0x18, 0x01);
setfloat(0x8E4EACC, 90.28, -334.26, 16.17, 0);
setchar(0x8E4EAF4, 202);
setchar(0x8E4EAF4 + 0x18, 0x01);
setfloat(0x8E4EAF8, 86.85, -334.39, 16.17, 0);
setchar(0x8E4EB20, 203);
setchar(0x8E4EB20 + 0x18, 0x01);
setfloat(0x8E4EB24, 85.17, -334.20, 16.17, 0);
setchar(0x8E4EB4C, 204);
setchar(0x8E4EB4C + 0x18, 0x01);
setfloat(0x8E4EB50, 83.82, -333.81, 16.17, 0);
setchar(0x8E4EC80, 205);
setchar(0x8E4EC80 + 0x18, 0x01);
setfloat(0x8E4EC84, 82.18, -333.78, 16.17, 0);
setchar(0x8E4EBA4, 209);
setchar(0x8E4EBA4 + 0x18, 0x01);
setfloat(0x8E4EBA8, 82.18, -333.78, 16.17, 0);
setfloat(0x08E2DCE0, 72.63, -323.85, 16.17);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x10f);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
setfloat(0x08E2DD40, 70.08, -323.70, 16.17);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
setfloat(0x08E2DDA0, 66.59, -323.52, 16.17);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
setfloat(0x08E2DE00, 60.54, -346.08, 16.17);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
setfloat(0x08E2DE60, 57.80, -346.29, 16.17);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
setfloat(0x08E2DEC0, 58.38, -331.16, 20.65);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
setfloat(0x08E2DF20, 60.37, -330.82, 20.65);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0xff, 0xff);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
setfloat(0x08E2DF80, 64.90, -329.83, 20.65);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0xff, 0xff);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
setfloat(0x08E2DFE0, 50.32, -329.56, 16.17);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0xff, 0xff);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
setfloat(0x08E2E040, 54.80, -325.20, 16.17);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0xff, 0xff);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
setfloat(0x08E2E0A0, 87.11, -319.11, 16.17);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
setfloat(0x08E2E100, 78.13, -318.19, 16.17);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0xff, 0xff);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
setfloat(0x08E2E160, 66.35, -329.77, 16.17);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
setfloat(0x08E2E1C0, 64.48, -332.42, 20.71);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
setfloat(0x08E2E220, 66.71, -336.58, 20.71);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0xff, 0xff);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
setfloat(0x08E2E280, 66.54, -343.87, 20.81);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0xff, 0xff);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
setfloat(0x08E2E3A0, 64.58, -341.19, 16.31);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0xff, 0xff);
setshort(0x08E2E3C6, 0x122);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
setshort(09172b7e, 0x0e61)
setfloat(09172b70, 9, 8, 2)
moveto(54.40, -354.95, 16.17); object(0x0227, 0, 0, 270);
off()

#cheat StauntonIsland Carshop2
//ID: 13930
//Score: 36
//Author: KEI(Japanese)
//Category: Location Mods
//Description: This is a carshop with V8 GHOST...
//Image: none
//Time: 30/06/2006 12:09:21
//Working: Yes
moveto(192.61, -1548.83, 27.62);  object(0x0246, 0, 0, 93);
move(-5.92, 0.29, 0.00);  object(0x0246, 0, 0, 93);
move(-5.91, 0.28, 0.00);  object(0x0246, 0, 0, 93);
move(-7.67, 0.07, 0.10);  object(0x0CD7, 0, 0, 1);
move(0.00, 0.00, 5.00);  object(0x0CD7, 0, 0, 1);
move(1.73, 0.09, 2.00);  object(0x0F92, 90, 0, 359);
move(-0.30, -0.13, -6.50);  object(0x0F91, 90, 0, 359);
move(3.40, 0.06, 0.00);  object(0x0F91, 90, 0, 359);
move(5.71, -0.29, 0.00);  object(0x0F91, 90, 0, 354);
move(6.01, -0.27, 0.00);  object(0x0F91, 90, 0, 354);
move(-13.50, -0.25, 3.10);  object(0x0F91, 0, 0, 79);
move(0.08, 0.83, -2.90);  object(0x01A8, 0, 0, 92);
move(-1.50, -0.02, 0.00);  object(0x0F91, 90, 0, 167);
move(22.79, 6.97, 2.30);  object(0x0CD7, 0, 0, 63);
move(-2.00, 4.04, -3.00);  object(0x0246, 0, 0, 333);
move(-2.72, 5.37, 0.00);  object(0x0246, 0, 0, 333);
move(1.32, -2.70, 0.00);  object(0x0F91, 90, 0, 58);
move(2.68, -5.28, 0.00);  object(0x0F91, 90, 0, 63);
move(1.38, -2.74, -1.00);  object(0x01E6, 0, 0, 183);
move(-24.32, -2.88, -1.70);  object(0x0F36, 0, 0, 103);
move(0.96, 3.64, 0.00);  object(0x0F36, 0, 0, 103);
move(2.65, 3.27, 0.00);  object(0x0FC5, 0, 0, 345);
move(17.97, -8.14, 1.44);  object(0x0ED8, 0, 0, 89);
move(-14.25, 7.01, -0.60);  object(0x01C3, 90, 0, 345);
move(4.00, 1.08, 0.00);  object(0x01C3, 90, 0, 340);
move(4.82, 1.71, 0.00);  object(0x01C3, 90, 0, 330);
move(-8.48, -4.06, -1.30);  object(0x01C3, 0, 0, 346);
move(-0.72, 2.60, 0.00);  object(0x01C3, 0, 0, 346);
move(3.94, 0.97, 0.00);  object(0x01C3, 0, 0, 341);
move(0.87, -2.46, 0.00);  object(0x01C3, 0, 0, 341);
move(5.10, 1.82, 0.00);  object(0x01C3, 0, 0, 329);
move(-1.38, 2.32, 0.00);  object(0x01C3, 0, 0, 329);
move(-9.54, -4.47, 0.50);  object(0x1004, 0, 0, 77);
move(2.73, 0.67, 0.00);  object(0x1004, 0, 0, 238);
move(0.97, 0.07, 0.00);  object(0x1004, 0, 0, 56);
move(3.42, 1.05, 0.00);  object(0x1004, 0, 0, 246);
move(1.92, 0.66, 0.00);  object(0x1004, 0, 0, 61);
move(2.53, 1.41, 0.00);  object(0x1004, 0, 0, 221);
move(10.24, -16.38, -3.00);  object(0x0F9F, 0, 0, 251);
move(-13.13, 17.14, 2.80);  object(0x0F04, 0, 0, 191);
move(6.73, -8.94, 0.80);  object(0x0259, 0, 0, 268);
move(-0.02, 1.37, 0.00);  object(0x0259, 0, 0, 278);
move(-0.08, -0.71, 0.00);  object(0x0259, 0, 0, 273);
move(-0.75, 5.55, -0.00);  object(0x0257, 0, 0, 332);
move(-18.84, 15.20, 2.30);  object(0x025C, 0, 0, 245);
move(2.70, -15.61, -2.20);  object(0x0213, 0, 0, 347);
move(14.01, 6.31, -0.10);  object(0x0228, 0, 0, 350);
teleport(176.51, -1552.08, 26.16);
// STINGER
setchar(0x08E4E9C0, 133);
setfloat(0x08E4E9C4, 182.85, -1544.34, 26.16);
setfloat(0x08E4E9D0, 248);
// V8 GHOST
setchar(0x08E4E9C0, 187);
setfloat(0x08E4E9C4, 189.84, -1543.03, 26.16);
setfloat(0x08E4E9D0, 100);

#cheat The Hidden Cave V.2
//ID: 13910
//Score: 46
//Author: bob108
//Category: Location Mods
//Description: The hidden cave is where youll be if you use this cheat by me. Pirates once used this cave as a hide out and now its your turn. More stuff now has Weapons, Huntwer (Mabey) and a loading platform. Modify it if you want.
//Image: none
//Time: 30/06/2006 00:58:41
//Working: Yes
moveto(1542.75, -199.53, 28.35);  object(0x01BF, 90, 0, 111);
move(2.13, 5.61, 0.00);  object(0x01BF, 90, 0, 111);
move(-4.80, -12.62, 0.00);  object(0x01BF, 90, 0, 111);
move(-4.36, 1.66, 0.00);  object(0x01BF, 90, 0, 111);
move(2.56, 6.73, 0.00);  object(0x01BF, 90, 0, 111);
move(2.66, 7.01, 0.00);  object(0x01BF, 90, 0, 111);
move(-1.12, 3.74, 0.00);  object(0x01BF, 90, 0, 111);
move(-1.75, 3.98, 0.00);  object(0x01BF, 90, 0, 111);
move(-2.59, -6.82, 0.00);  object(0x01BF, 90, 0, 111);
move(-2.51, -5.73, 0.00);  object(0x01BF, 90, 0, 111);
move(-2.63, -6.81, 0.00);  object(0x01BF, 90, 0, 111);
move(2.55, -9.03, 0.00);  object(0x01BF, 90, 0, 111);
move(-4.46, 1.72, 0.00);  object(0x01BF, 90, 0, 111);
move(14.75, 10.81, 1.28);  object(0x01BF, 65, 0, 113);
move(4.40, -1.83, 2.40);  object(0x01BF, 65, 0, 113);
move(-11.83, 19.80, -3.90);  object(0x01BF, 90, 0, 112);
move(-2.77, -6.97, 0.00);  object(0x01BF, 90, 0, 112);
move(-2.66, -6.69, 0.00);  object(0x01BF, 90, 0, 112);
move(-2.00, -5.02, 0.00);  object(0x01BF, 90, 0, 112);
move(-2.64, -5.40, 0.00);  object(0x01BF, 90, 0, 113);
move(-2.27, -5.45, 0.00);  object(0x01BF, 90, 0, 113);
//Hunter
setchar(0x08E4E9C0, 213);
setfloat(0x08E4E9C4, 1533.82, -192.45, 31.63);
setfloat(0x08E4E9D0, 0);
//Hand Grenade
setfloat(0x08e2d800, 1581.87, -240.35, 36.80);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x999999999999999999, 0x999999999999999999);
setshort(0x08e2d826, 0x10E);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
//Moltov
setfloat(0x08e2d800, 1576.82, -235.00, 39.87);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x999999999999999999, 0x999999999999999999);
setshort(0x08e2d826, 0x110);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
//AK
setfloat(0x08e2d800, 1587.67, -216.78, 38.10);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x999999999999999999, 0x999999999999999999);
setshort(0x08e2d826, 0x114);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
//Rocket Launcher
setfloat(0x08e2d800, 1572.10, -207.67, 42.74);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x999999999999999999, 0x999999999999999999);
setshort(0x08e2d826, 0x11F);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
//Remote Det
setfloat(0x08e2d800, 1552.91, -220.55, 43.77);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x999999999999999999, 0x999999999999999999);
setshort(0x08e2d826, 0x123);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
teleport(1557.57, -209.48, 39.47);

#cheat Runway Street Race (V.2)
//ID: 13846
//Score: 51
//Author: wm123
//Category: Location Mods
//Description: This version has hopefuly fixed the ped spawn and put it into 1 cheat.
//Image: none
//Time: 28/06/2006 16:07:46
//Working: Yes
moveto(-1559.67, -960.05, 9.82);  object(0x01BF, 90, 0, 270);
move(0.07, -7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(0.07, -7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -5.80, 0.00);  object(0x01BF, 90, 0, 270);
move(0.04, -4.50, 0.00);  object(0x01BF, 90, 0, 270);
move(786.95, 0.17, 0.30);  object(0x01BF, 90, 0, 91);
move(0.16, 7.10, 0.00);  object(0x01BF, 90, 0, 91);
move(0.15, 6.60, 0.00);  object(0x01BF, 90, 0, 91);
move(0.16, 7.30, 0.00);  object(0x01BF, 90, 0, 91);
move(0.11, 4.90, 0.00);  object(0x01BF, 90, 0, 91);
move(-773.73, 44.50, 5.20);  object(0x01BF, 0, 0, 91);
move(0.07, 7.90, 0.00);  object(0x01BF, 0, 0, 91);
move(-3.25, 0.03, 3.40);  object(0x01BF, 90, 0, 91);
move(-0.07, -7.80, 0.00);  object(0x01BF, 90, 0, 91);
move(-5.10, 0.04, -2.50);  object(0x01BF, 40, 0, 91);
move(5.09, 3.96, 3.90);  object(0x0251, 0, 0, 94);
move(-0.02, -0.20, -4.50);  object(0x0251, 0, 0, 97);
move(2.18, 0.29, 0.80);  object(0x01BF, 0, 0, 91);
move(-0.46, 0.01, 0.00);  object(0x01BF, 0, 0, 91);
move(-0.42, 0.00, 0.00);  object(0x01BF, 0, 0, 91);
move(-0.45, 0.01, 0.00);  object(0x01BF, 0, 0, 91);
move(-9.43, -101.72, -5.20);  object(0x01E4, 0, 0, 169);
move(-8.64, -1.67, 0.00);  object(0x01E4, 0, 0, 169);
move(-7.91, 1.69, 0.00);  object(0x01E4, 0, 0, 214);
move(-7.40, 4.95, 0.00);  object(0x01E4, 0, 0, 214);
move(-7.40, 4.95, 0.00);  object(0x01E4, 0, 0, 214);
move(-7.21, 4.87, 0.00);  object(0x01E4, 0, 0, 214);
move(-4.26, 6.64, 0.00);  object(0x01E4, 0, 0, 261);
move(-1.39, 8.38, 0.00);  object(0x01E4, 0, 0, 261);
move(-1.44, 8.68, 0.00);  object(0x01E4, 0, 0, 261);
move(-1.44, 8.68, 0.00);  object(0x01E4, 0, 0, 261);
move(-1.41, 8.48, 0.00);  object(0x01E4, 0, 0, 261);
move(-0.63, 8.75, 0.00);  object(0x01E4, 0, 0, 271);
move(0.17, 8.90, 0.00);  object(0x01E4, 0, 0, 271);
move(0.17, 8.80, 0.00);  object(0x01E4, 0, 0, 271);
move(0.17, 8.70, 0.00);  object(0x01E4, 0, 0, 271);
move(42.36, -8.62, 0.00);  object(0x0204, 0, 0, 0);
move(18.82, -7.93, 0.00);  object(0x0204, 0, 0, 90);
move(-7.53, 7.70, -0.90);  object(0x021C, 0, 0, 357);
move(1.50, 0.08, 0.00);  object(0x021C, 0, 0, 357);
move(1.60, 0.08, 0.00);  object(0x021C, 0, 0, 357);
move(-2.67, -0.75, -0.10);  object(0x021C, 0, 0, 353);
move(1.49, 0.18, 0.00);  object(0x021C, 0, 0, 353);
move(2.14, 0.64, 0.00);  object(0x021C, 0, 0, 353);
move(-2.29, 16.02, 2.90);  object(0x0239, 0, 0, 3);
move(48.58, -4.68, -2.40);  object(0x025B, 0, 0, 310);
move(12.74, -10.71, 0.00);  object(0x025B, 0, 0, 310);
move(9.27, 11.02, 0.00);  object(0x025B, 0, 0, 310);
move(-40.10, -9.58, 0.00);  object(0x025B, 0, 0, 310);
move(1.13, 31.08, 0.00);  object(0x025B, 0, 0, 310);
move(-12.36, -14.55, 0.00);  object(0x025B, 0, 0, 310);
move(18.25, -0.79, 0.00);  object(0x025B, 0, 0, 310);
move(3.83, -6.39, -1.20);  object(0x0268, 0, 0, 85);
move(-4.58, 17.59, 0.00);  object(0x0268, 0, 0, 18);
move(5.19, -34.07, 0.00);  object(0x0268, 0, 0, 104);
move(-21.41, 3.07, 0.00);  object(0x0268, 0, 0, 17);
move(21.75, -97.85, 0.00);  object(0x0268, 0, 0, 160);
move(-39.83, 21.00, 0.00);  object(0x0268, 0, 0, 199);
move(-37.57, 15.99, 0.00);  object(0x0268, 0, 0, 265);
move(115.22, 51.92, 0.00);  object(0x0268, 0, 0, 83);
move(21.72, 15.97, 0.00);  object(0x0268, 0, 0, 44);
move(18.66, -12.37, 0.00);  object(0x0268, 0, 0, 125);
move(35.92, -5.45, 0.00);  object(0x0268, 0, 0, 58);
move(2.30, 19.77, 0.00);  object(0x0268, 0, 0, 346);
move(-86.15, -23.55, 1.70);  object(0x0271, 0, 0, 89);
move(-107.19, -11.72, -0.40);  object(0x0369, 0, 0, 269);
move(0.10, -4.50, 0.00);  object(0x0369, 0, 0, 269);
move(0.13, -5.70, 0.00);  object(0x0369, 0, 0, 269);
move(0.11, -4.60, 0.00);  object(0x0369, 0, 0, 269);
move(0.12, -5.00, 0.00);  object(0x0369, 0, 0, 269);
move(0.12, -5.10, 0.00);  object(0x0369, 0, 0, 269);
move(0.06, -2.80, 0.00);  object(0x0369, 0, 0, 269);
//car 1
setchar(0x08E4E9C0, 131);
setchar(0x08E4E9C0 + 0x18, 0x01);
setfloat(0x08E4E9C4, -1511.81, -997.48, 10.60);
//phobos
setchar(0x08E4Ea18, 186);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, -1487.18, -942.67, 10.82);
//stinger
setchar(0x08E4Ea44, 133);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, -1548.75, -997.95, 10.60);
//banshee
setchar(0x08E4Ea9c, 160);
setchar(0x08E4Ea9c + 0x18, 0x01);
setfloat(0x08E4Eaa0, -1579.48, -996.27, 10.60);
setchar(0x08b5e090, 00, 30);
setchar(08B59B3C, 0x80)
#off
setchar(08B59B3C, 0x50)
setchar(pcar + 0x2A0, 06);
#off
setchar(pcar + 0x2A0, 09);
setfloat(099542b0-cb0, -1551.33, 1010.95, 10.60);
setfloat(099542b0-0x1960, -1551.33, 1010.95, 10.60);
setfloat(099542b0-0x2610, -1551.33, 1010.95, 10.60);
setfloat(099542b0-0x32c0, -1551.33, 1010.95, 10.60);
setfloat(099542b0-0x3F70, -1551.33, 1010.95, 10.60);
setfloat(099542b0-0x4c20, -1551.33, 1010.95, 10.60);
setfloat(099542b0-0x58d0, -1551.33, 1010.95, 10.60);
setfloat(099542b0, -1551.33, 1010.95, 10.60);
setfloat(0994c3d0, -1551.33, 1010.95, 10.60);
setfloat(0994dd30, -1551.33, 1010.95, 10.60);
setfloat(099542b0+cb0, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x1960, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x2610, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x32c0, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x3F70, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x4c20, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x58d0, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x6580, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x7230, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x7ee0, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x8b90, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x9840, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0xa4f0, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0xb1a0, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0xbe50, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0xcb00, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0xd7b0, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0xe460, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0xf110, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0xfdc0, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x10a70, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x11720, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x123d0, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x13080, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x13d30, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x149e0, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x15690, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x16340, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x16ff0, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x17ca0, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x18950, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x19600, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x1a2b0, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x1af60, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x1bc10, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x1c8c0, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x1d570, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x1e220, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x1eed0, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x1fb80, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x20830, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x214e0, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x22190, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x22e40, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x23af0, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x247a0, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x25450, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x26100, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x26db0, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x27a60, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x28710, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x293c0, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x2a070, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x2ad20, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x2b9d0, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x2c680, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x2d330, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x2dfe0, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x2ec90, -1551.33, 1010.95, 10.60);
setfloat(099542b0+0x2f940, -1551.33, 1010.95, 10.60);
off()
setfloat(099542b0-cb0, -1551.33, -1010.95, 10.60);
setfloat(099542b0-0x1960, -1551.33, -1010.95, 10.60);
setfloat(099542b0-0x2610, -1551.33, -1010.95, 10.60);
setfloat(099542b0-0x32c0, -1551.33, -1010.95, 10.60);
setfloat(099542b0-0x3F70, -1551.33, -1010.95, 10.60);
setfloat(099542b0-0x4c20, -1551.33, -1010.95, 10.60);
setfloat(099542b0-0x58d0, -1551.33, -1010.95, 10.60);
setfloat(099542b0, -1551.33, -1010.95, 10.60);
setfloat(0994c3d0, -1551.33, -1010.95, 10.60);
setfloat(0994dd30, -1551.33, -1010.95, 10.60);
setfloat(099542b0+cb0, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x1960, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x2610, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x32c0, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x3F70, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x4c20, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x58d0, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x6580, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x7230, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x7ee0, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x8b90, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x9840, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0xa4f0, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0xb1a0, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0xbe50, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0xcb00, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0xd7b0, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0xe460, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0xf110, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0xfdc0, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x10a70, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x11720, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x123d0, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x13080, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x13d30, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x149e0, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x15690, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x16340, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x16ff0, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x17ca0, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x18950, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x19600, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x1a2b0, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x1af60, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x1bc10, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x1c8c0, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x1d570, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x1e220, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x1eed0, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x1fb80, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x20830, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x214e0, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x22190, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x22e40, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x23af0, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x247a0, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x25450, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x26100, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x26db0, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x27a60, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x28710, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x293c0, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x2a070, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x2ad20, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x2b9d0, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x2c680, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x2d330, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x2dfe0, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x2ec90, -1551.33, -1010.95, 10.60);
setfloat(099542b0+0x2f940, -1551.33, -1010.95, 10.60);
off()
setfloat(099542b0-cb0, -1520.33, -937.95, 10.87);
setfloat(099542b0-0x1960, -1520.33, -937.95, 10.87);
setfloat(099542b0-0x2610, -1520.33, -937.95, 10.87);
setfloat(099542b0-0x32c0, -1520.33, -937.95, 10.87);
setfloat(099542b0-0x3F70, -1520.33, -937.95, 10.87);
setfloat(099542b0-0x4c20, -1520.33, -937.95, 10.87);
setfloat(099542b0-0x58d0, -1520.33, -937.95, 10.87);
setfloat(099542b0, -1520.33, -937.95, 10.87);
setfloat(0994c3d0, -1520.33, -937.95, 10.87);
setfloat(0994dd30, -1520.33, -937.95, 10.87);
setfloat(099542b0+cb0, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x1960, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x2610, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x32c0, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x3F70, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x4c20, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x58d0, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x6580, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x7230, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x7ee0, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x8b90, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x9840, -1520.33, -937.95, 10.87);
setfloat(099542b0+0xa4f0, -1520.33, -937.95, 10.87);
setfloat(099542b0+0xb1a0, -1520.33, -937.95, 10.87);
setfloat(099542b0+0xbe50, -1520.33, -937.95, 10.87);
setfloat(099542b0+0xcb00, -1520.33, -937.95, 10.87);
setfloat(099542b0+0xd7b0, -1520.33, -937.95, 10.87);
setfloat(099542b0+0xe460, -1520.33, -937.95, 10.87);
setfloat(099542b0+0xf110, -1520.33, -937.95, 10.87);
setfloat(099542b0+0xfdc0, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x10a70, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x11720, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x123d0, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x13080, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x13d30, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x149e0, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x15690, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x16340, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x16ff0, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x17ca0, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x18950, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x19600, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x1a2b0, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x1af60, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x1bc10, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x1c8c0, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x1d570, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x1e220, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x1eed0, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x1fb80, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x20830, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x214e0, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x22190, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x22e40, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x23af0, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x247a0, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x25450, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x26100, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x26db0, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x27a60, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x28710, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x293c0, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x2a070, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x2ad20, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x2b9d0, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x2c680, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x2d330, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x2dfe0, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x2ec90, -1520.33, -937.95, 10.87);
setfloat(099542b0+0x2f940, -1520.33, -937.95, 10.87);
off()
teleport(-1559.67, -960.05, 9.82)

#cheat Multistory car park + Jetty + 2xhelipad
//ID: 13841
//Score: 66
//Author: penguinsrule
//Category: Location Mods
//Description: A 3 multi story car park with a jetty to the right for boats and 2 helipads
//Image: http://telmaz.no-ip.info:3249/screen5.bmp
//Time: 28/06/2006 13:43:10
//Working: Yes
//created by penguinsrule
moveto(-1087.13, 338.83, 2.92);  object(0x01BF, 90, 0, 90);
move(0.03, -7.80, 0.00);  object(0x01BF, 90, 0, 90);
move(0.03, -7.80, 0.00);  object(0x01BF, 90, 0, 90);
move(0.03, -8.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.18, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.03, 8.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.03, 8.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.03, 7.60, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.71, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(0.03, -7.80, 0.00);  object(0x01BF, 90, 0, 90);
move(0.03, -7.80, 0.00);  object(0x01BF, 90, 0, 90);
move(0.03, -8.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.70, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.03, 8.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.00, 7.77, 0.00);  object(0x01BF, 90, 0, 92);
move(0.14, 7.89, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.86, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(0.03, -7.70, 0.00);  object(0x01BF, 90, 0, 90);
move(0.03, -7.60, 0.00);  object(0x01BF, 90, 0, 90);
move(0.03, -8.30, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.00, 0.70, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.03, 7.30, 0.70);  object(0x01BF, 90, 10, 90);
move(-0.03, 7.80, 1.40);  object(0x01BF, 90, 10, 90);
move(-0.03, 7.70, 1.40);  object(0x01BF, 90, 10, 90);
move(23.28, 8.08, -3.50);  object(0x01BF, 90, 0, 90);
move(-6.55, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.64, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.24, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.91, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
moveto(-1087.13, 338.83, 7.12);  object(0x01BF, 90, 0, 90);
move(0.03, -7.80, 0.00);  object(0x01BF, 90, 0, 90);
move(0.03, -7.80, 0.00);  object(0x01BF, 90, 0, 90);
move(0.03, -8.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.18, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.03, 8.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.03, 8.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.03, 7.60, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.71, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(0.03, -7.80, 0.00);  object(0x01BF, 90, 0, 90);
move(0.03, -7.80, 0.00);  object(0x01BF, 90, 0, 90);
move(0.03, -8.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.70, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.03, 8.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.00, 7.77, 0.00);  object(0x01BF, 90, 0, 92);
move(0.14, 7.89, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.80, -23.5, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.03, 7.30, 0.70);  object(0x01BF, 90, 10, 90);
move(-0.03, 7.80, 1.40);  object(0x01BF, 90, 10, 90);
move(-0.03, 7.70, 1.40);  object(0x01BF, 90, 10, 90);
move(23.28, 8.08, -3.50);  object(0x01BF, 90, 0, 90);
move(-6.55, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.64, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.24, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.91, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
moveto(-1087.13, 338.83, 11.32);  object(0x01BF, 90, 0, 90);
move(0.03, -7.80, 0.00);  object(0x01BF, 90, 0, 90);
move(0.03, -7.80, 0.00);  object(0x01BF, 90, 0, 90);
move(0.03, -8.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.18, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.03, 8.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.03, 8.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.03, 7.60, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.71, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(0.03, -7.80, 0.00);  object(0x01BF, 90, 0, 90);
move(0.03, -7.80, 0.00);  object(0x01BF, 90, 0, 90);
move(0.03, -8.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.70, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.03, 8.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.00, 7.77, 0.00);  object(0x01BF, 90, 0, 92);
move(0.14, 7.89, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.80, -23.5, 0.00);  object(0x01BF, 90, 0, 90);
move(23.28, 8.08, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.55, 22.75, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.64, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.24, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.91, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
teleport(-1103.02, 271.08, 3.74)
moveto(-1087.16, 346.11, 11.31);  object(0x01BF, 270, 0, 270);
move(-0.68, 4.28, -5.00);  object(0x01BF, 180, 0, 180);
move(-8.00, -0.07, 0.00);  object(0x01BF, 180, 0, 180);
move(-7.60, -0.06, 0.00);  object(0x01BF, 180, 0, 180);
move(-6.30, -0.05, 0.00);  object(0x01BF, 180, 0, 180);
move(0.00, 0.00, 1.80);  object(0x01BF, 0, 0, 180);
move(6.20, 0.05, 0.00);  object(0x01BF, 0, 0, 180);
move(7.60, 0.06, 0.00);  object(0x01BF, 0, 0, 180);
move(8.10, 0.07, 0.00);  object(0x01BF, 0, 0, 180);
move(3.99, -3.88, -2.00);  object(0x01BF, 180, 0, 270);
move(0.05, -7.70, 0.00);  object(0x01BF, 180, 0, 270);
move(0.05, -7.90, 0.00);  object(0x01BF, 180, 0, 270);
move(0.05, -7.90, 0.00);  object(0x01BF, 180, 0, 270);
move(0.05, -7.70, 0.00);  object(0x01BF, 180, 0, 270);
move(0.00, 0.00, 2.00);  object(0x01BF, 0, 0, 270);
move(-0.05, 7.70, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.05, 7.80, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.05, 7.70, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.05, 8.00, 0.00);  object(0x01BF, 0, 0, 270);
move(-29.89, -0.30, -1.90);  object(0x01BF, 180, 0, 90);
move(0.08, -7.70, 0.00);  object(0x01BF, 180, 0, 90);
move(0.07, -7.20, 0.00);  object(0x01BF, 180, 0, 90);
move(0.08, -7.70, 0.00);  object(0x01BF, 180, 0, 90);
move(0.07, -7.50, 0.00);  object(0x01BF, 180, 0, 90);
move(0.01, -0.80, 0.00);  object(0x01BF, 180, 0, 90);
move(0.00, 0.00, 1.90);  object(0x01BF, 0, 0, 90);
move(-0.00, 0.40, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.08, 7.90, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.08, 7.90, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.07, 7.00, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.08, 7.80, 0.00);  object(0x01BF, 0, 0, 90);
moveto(-1095.70, 309.25, 2.92);  object(0x01BF, 90, 0, 0);
move(-0.01, -5.43, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.01, -5.45, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.01, -5.23, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.01, -6.00, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.01, -5.94, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.08, -4.65, 0.00);  object(0x01BF, 90, 0, 0);
move(0.04, -5.51, 0.00);  object(0x01BF, 90, 0, 0);
move(0.09, -6.66, -0.30);  object(0x01BF, 85, 0, 0);
move(8.04, 46.88, 3.40);  object(0x01BF, 180, 0, 0);
move(-16.00, 0.01, 0.00);  object(0x01BF, 180, 0, 0);
move(-5.80, 0.01, 0.00);  object(0x01BF, 180, 0, 0);
move(0.00, 0.00, 2.00);  object(0x01BF, 0, 0, 0);
move(5.70, -0.01, 0.00);  object(0x01BF, 0, 0, 0);
move(16.10, 0.02, 0.00);  object(0x01BF, 0, 0, 0);
moveto(-1095.21, 311.43, 7.30);  object(0x01F0, 0, 0, 0);
move(-3.50, -0.02, 0.00);  object(0x01F0, 0, 0, 0);
moveto(-1099.65, 274.05, 3.00);  object(0x01F0, 0, 0, 90);
moveto(-1099.65, 277.80, 3.04);  object(0x01F0, 0, 0, 90);
move(-0.04, 3.70, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.04, 3.90, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.04, 3.90, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.04, 3.90, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.04, 3.90, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.04, 3.90, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.04, 3.90, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.04, 3.90, 0.00);  object(0x01F0, 0, 0, 90);
moveto(-1099.76, 308.73, 3.00);  object(0x01F0, 0, 0, 270);
move(7.77, -34.75, 0.10);  object(0x01F0, 0, 0, 90);
move(-0.04, 3.60, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.04, 3.60, 0.00);  object(0x01F0, 0, 0, 90)
move(-0.04, 3.60, 0.00);  object(0x01F0, 0, 0, 90)
move(-0.04, 3.60, 0.00);  object(0x01F0, 0, 0, 90)
move(-0.04, 3.60, 0.00);  object(0x01F0, 0, 0, 90)
move(-0.04, 3.60, 0.00);  object(0x01F0, 0, 0, 90)
move(-0.04, 3.60, 0.00);  object(0x01F0, 0, 0, 90)
move(-0.04, 3.60, 0.00);  object(0x01F0, 0, 0, 90)
move(-0.04, 3.60, 0.00);  object(0x01F0, 0, 0, 90)
moveto(-1083.74, 312.04, 12.10);  object(0x01EE, 0, 0, 270);
move(-0.04, 8.30, 0.00);  object(0x01EE, 0, 0, 270);
move(-0.04, 8.23, 0.00);  object(0x01EE, 0, 0, 271);
move(0.01, 8.50, 0.00);  object(0x01EE, 0, 0, 271);
move(-0.22, 13.38, -0.70);  object(0x01F0, 0, 0, 180);
move(0.19, -6.26, 0.00);  object(0x01EF, 0, 0, 270);
move(-3.60, 6.19, 0.00);  object(0x01EF, 0, 0, 180);
move(-6.60, -0.00, 0.00);  object(0x01EF, 0, 0, 180);
move(-6.50, -0.00, 0.00);  object(0x01EF, 0, 0, 180);
move(-6.50, -0.00, 0.00);  object(0x01EF, 0, 0, 180);
move(-6.67, -0.20, 0.00);  object(0x01EF, 0, 0, 90);
move(0.04, -8.00, 0.00);  object(0x01EF, 0, 0, 90);
move(0.04, -6.37, 0.00);  object(0x01EF, 0, 0, 90);
move(0.34, -6.50, 0.00);  object(0x01EF, 0, 0, 90);
move(0.04, -6.70, 0.00);  object(0x01EF, 0, 0, 90);
move(0.04, -6.90, 0.10);  object(0x01F0, 0, 0, 90);
move(-0.07, -4.37, 0.00);  object(0x01EF, 0, 0, 0);
move(6.50, 0.02, 0.00);  object(0x01EF, 0, 0, 0);
move(6.50, 0.02, 0.00);  object(0x01EF, 0, 0, 0);
move(6.70, 0.02, 0.00);  object(0x01EF, 0, 0, 0);
move(6.40, 0.11, 0.00);  object(0x01F0, 0, 0, 0);
move(2.91, 0.19, 0.40);  object(0x020F, 0, 0, 318);
move(-29.16, 0.17, 0.00);  object(0x020F, 0, 0, 350);
move(-0.23, 38.27, 0.00);  object(0x020F, 0, 0, 82);
move(29.69, 0.13, 0.00);  object(0x020F, 0, 0, 165);
moveto(-1088.11, 309.70, 2.90);  object(0x01BF, 270, 0, 359);
move(0.70, 0.02, 0.00);  object(0x01BF, 270, 0, 359);
move(4.93, 0.62, 0.00);  object(0x01BF, 270, 0, 270);
move(0.06, 7.80, -0.70);  object(0x01BF, 270, 10, 270);
move(-1.36, -0.01, 0.00);  object(0x01BF, 180, 0, 270);
move(-0.07, 7.80, 0.00);  object(0x01BF, 180, 0, 270);
move(-0.06, 7.60, -1.10);  object(0x01BF, 180, 0, 270);
move(3.90, -8.62, 0.40);  object(0x01BF, 90, 0, 180);
move(4.40, -0.04, 0.00);  object(0x01BF, 90, 0, 180);
move(0.10, 12.36, 0.00);  object(0x01BF, 90, 0, 180);
move(-5.30, 0.04, 0.00);  object(0x01BF, 90, 0, 180);
move(-3.00, 4.00, 0.00);  object(0x01BF, 180, 0, 270);
move(-0.06, 5.20, 0.00);  object(0x01BF, 180, 0, 270);
move(1.52, -14.85, 0.00);  object(0x01BF, 90, 0, 270);
move(3.05, -0.46, -3.30);  object(0x01BF, 0, 0, 270);
move(-8.49, -24.77, 1.50);  object(0x01BF, 0, 0, 0);
move(4.70, -0.03, 0.00);  object(0x01BF, 0, 0, 0);
move(-12.10, 0.08, 0.00);  object(0x01BF, 0, 0, 0);
move(-0.70, 0.00, 0.00);  object(0x01BF, 0, 0, 0);
move(-8.87, 4.87, 0.00);  object(0x01BF, 0, 0, 0);
move(1.40, -0.01, 0.00);  object(0x01BF, 0, 0, 0);
move(-6.10, 0.04, 0.00);  object(0x01BF, 0, 0, 0);
move(9.84, -1.01, 0.00);  object(0x01BF, 0, 0, 90);
move(-13.76, 5.05, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.09, 7.90, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.09, 7.90, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.08, 7.20, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.09, 7.90, 0.00);  object(0x01BF, 0, 0, 90);
move(4.01, 3.60, 0.00);  object(0x01BF, 0, 0, 180);
move(7.90, 0.04, 0.00);  object(0x01BF, 0, 0, 180);
move(7.80, 0.04, 0.00);  object(0x01BF, 0, 0, 180);
move(6.40, 0.03, 0.00);  object(0x01BF, 0, 0, 180);
move(7.24, -9.55, -1.60);  object(0x01BF, 0, 0, 180);
move(4.70, 0.02, 0.00);  object(0x01BF, 0, 0, 180);
move(3.79, -3.25, -0.50);  object(0x01BF, 0, 90, 270);
move(0.14, -12.40, 0.00);  object(0x01BF, 0, 90, 270);
move(-4.08, -3.33, 0.50);  object(0x01BF, 0, 0, 180);
move(-0.03, 6.34, 0.00);  object(0x01BF, 0, 0, 180);
move(-0.00, 6.25, 0.00);  object(0x01BF, 0, 0, 0);
move(-3.08, -23.82, 1.60);  object(0x01BF, 0, 0, 270);
move(-0.05, 6.90, -0.80);  object(0x01BF, 0, 10, 270);
move(-12.38, -10.90, 4.30);  object(0x01F0, 0, 0, 358);
move(3.60, 0.14, 0.00);  object(0x01F0, 0, 0, 358);
move(3.60, 0.14, 0.00);  object(0x01F0, 0, 0, 358);
move(3.46, 0.01, 0.00);  object(0x01F0, 0, 0, 304);
move(1.53, 3.23, -0.20);  object(0x01F0, 0, 0, 270);
move(-0.04, 4.20, 0.00);  object(0x01F0, 0, 10, 270);
move(-0.04, 4.00, -0.70);  object(0x01F0, 0, 10, 270);
move(3.64, 3.66, -0.50);  object(0x01F0, 0, 0, 180);
move(0.46, -0.08, -0.10);  object(0x01F0, 0, 0, 0);
move(2.70, 0.08, -0.10);  object(0x01F0, 0, 0, 270);
move(-0.00, 3.20, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.01, 9.10, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.00, 3.20, 0.00);  object(0x01F0, 0, 0, 270);
moveto(-1091.72, 265.26, 3.47);  object(0x020F, 0, 0, 269);
move(-8.25, -0.22, -0.20);  object(0x020F, 0, 0, 269);
move(8.13, 41.50, 0.50);  object(0x020F, 0, 0, 293);
move(12.44, 0.03, 0.00);  object(0x020F, 0, 0, 293);
move(7.35, 15.43, -1.70);  object(0x020F, 0, 0, 293);
move(0.01, 15.08, 0.00);  object(0x020F, 0, 0, 264);
moveto(-1087.66, 311.35, 10.50);  object(0x01BF, 0, 0, 0);
move(3.94, 3.86, 0.00);  object(0x01BF, 0, 0, 270);
move(-3.93, 7.00, 2.10);  object(0x01BF, 110, 0, 359);
move(-7.18, -7.31, 0.00);  object(0x01BF, 110, 0, 268);
move(7.72, 0.43, 1.20);  object(0x01BF, 90, 0, 270);
move(-1.17, -0.11, 0.00);  object(0x01BF, 90, 0, 270);
moveto(-1117.97, 342.75, 13.19);  object(0x01E4, 270, 335, 180);
move(-7.30, -0.06, 3.40);  object(0x01E4, 270, 335, 180);
move(-7.50, -0.06, 3.50);  object(0x01E4, 270, 335, 180);
move(-5.90, -0.05, 2.70);  object(0x01E4, 270, 335, 180);
move(-5.62, 2.85, 1.90);  object(0x01E4, 270, 0, 270);
move(3.01, 0.21, 1.50);  object(0x01E4, 270, 20, 270);
move(0.02, -7.70, 2.80);  object(0x01E4, 270, 20, 270);
move(-2.70, 13.03, -4.40);  object(0x01E4, 270, 0, 180);
move(2.93, -21.50, 5.90);  object(0x01E4, 270, 0, 270);
move(-1.84, -2.44, 0.00);  object(0x01F0, 0, 0, 0);
move(-3.50, 0.22, 0.00);  object(0x01F0, 0, 0, 0);
move(6.75, -0.29, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.03, 3.50, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.28, 3.83, -0.10);  object(0x01F0, 0, 20, 270);
move(-0.01, 3.90, -1.50);  object(0x01F0, 0, 20, 270);
move(-0.01, 3.20, -1.10);  object(0x01F0, 0, 20, 270);
move(-0.01, 3.10, -1.10);  object(0x01F0, 0, 20, 270);
move(-0.01, 2.80, -1.10);  object(0x01F0, 0, 20, 270);
move(0.12, 3.09, -0.60);  object(0x01F0, 0, 0, 222);
move(-2.36, 2.19, 0.00);  object(0x01F0, 0, 0, 180);
move(-0.42, -8.17, -0.30);  object(0x01F0, 0, 0, 270);
move(0.02, -6.40, 4.30);  object(0x01F0, 0, 20, 270);
move(-0.01, 3.70, -1.40);  object(0x01F0, 0, 20, 270);
move(-0.01, 4.00, -1.40);  object(0x01F0, 0, 20, 270);
move(0.09, -4.53, -1.40);  object(0x01F0, 0, 0, 180);
move(0.00, 0.00, -0.20);  object(0x01F0, 0, 25, 0);
move(3.50, 0.02, -1.60);  object(0x01F0, 0, 25, 0);
move(3.50, 0.02, -1.50);  object(0x01F0, 0, 25, 0);
move(3.50, 0.02, -1.60);  object(0x01F0, 0, 25, 0);
move(3.60, 0.02, -1.80);  object(0x01F0, 0, 25, 0);
move(3.60, 0.02, -1.50);  object(0x01F0, 0, 25, 0);
move(3.70, 0.02, -1.80);  object(0x01F0, 0, 25, 0);
move(3.50, 0.02, -1.60);  object(0x01F0, 0, 25, 0);
move(2.65, 3.05, -1.30);  object(0x01F0, 0, 335, 180);
move(-3.70, 0.00, 1.60);  object(0x01F0, 0, 335, 180);
move(-3.50, 0.00, 1.60);  object(0x01F0, 0, 335, 180);
move(-3.60, 0.00, 1.70);  object(0x01F0, 0, 335, 180);
move(-3.70, 0.00, 1.80);  object(0x01F0, 0, 335, 180);
move(-3.80, 0.00, 1.80);  object(0x01F0, 0, 335, 180);
move(-3.40, 0.00, 1.60);  object(0x01F0, 0, 335, 180);
move(-3.10, -0.07, 1.30);  object(0x01F0, 0, 335, 180);
move(-2.90, -9.96, 7.40);  object(0x01F0, 0, 0, 270);
move(-0.04, 3.80, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.04, 3.70, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.04, 3.90, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.04, 4.10, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.04, 3.80, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.04, 4.10, 0.00);  object(0x01F0, 0, 0, 270);
move(-3.45, -30.79, -0.10);  object(0x01F0, 0, 0, 0);
move(-3.60, -0.02, 0.00);  object(0x01F0, 0, 0, 0);
move(-3.70, -0.02, 0.00);  object(0x01F0, 0, 0, 0);
move(-3.70, -0.02, 0.00);  object(0x01F0, 0, 0, 0);
move(17.43, -0.39, 0.50);  object(0x020F, 0, 0, 34);
move(-0.12, 25.54, -5.90);  object(0x020F, 0, 0, 275);

#cheat MY!! SHOW!! ROOM!!!!
//ID: 13834
//Score: 99
//Author: lilfrk12006
//Category: Location Mods
//Description: its a costum show room all built up with my pmg cars regular cars and every weapon spawn in the game has 3 floors a tele so no need to have to look for it and its all down in the old gta 3 hide out!!!!! on 2nd island
//Image: http://img478.imageshack.us/img478/2310/showroom5kl.png
//Time: 28/06/2006 07:15:05
//Working: Yes
//BY:LILFRK12006
moveto(146.35, -470.17, 16.93);  object(0x01BF, 90, 0, 91);
move(-6.75, 0.08, 0.00);  object(0x01BF, 90, 0, 91);
move(0.19, 7.92, 0.00);  object(0x01BF, 90, 0, 91);
move(6.49, 3.86, 0.10);  object(0x01BF, 90, 0, 90);
move(-6.74, 0.56, 0.00);  object(0x01BF, 90, 0, 90);
move(-7.36, -0.97, -1.00);  object(0x01BF, 90, 345, 359);
move(-10.74, -0.69, -0.70);  object(0x01BF, 90, 25, 359);
move(-6.35, 0.05, 3.00);  object(0x01BF, 90, 25, 359);
move(-7.40, -0.08, 1.60);  object(0x01BF, 90, 0, 359);
move(0.13, -6.71, 0.00);  object(0x01BF, 90, 0, 359);
move(0.10, -6.61, 0.00);  object(0x01BF, 90, 0, 359);
move(-8.15, -0.26, 0.00);  object(0x01BF, 90, 0, 359);
move(-0.27, 6.65, 0.00);  object(0x01BF, 90, 0, 359);
move(-0.11, 6.72, 0.00);  object(0x01BF, 90, 0, 359);
move(5.14, -6.96, 0.08);  object(0x01BF, 90, 0, 177);
move(0.08, -6.75, 0.00);  object(0x01BF, 90, 0, 177);
move(-0.43, 13.44, 0.00);  object(0x01BF, 90, 0, 178);
move(-12.29, -0.08, 0.00);  object(0x01BF, 90, 0, 178);
move(0.13, -6.62, 0.00);  object(0x01BF, 90, 0, 178);
move(0.24, -6.72, 0.00);  object(0x01BF, 90, 0, 178);
move(0.69, 13.01, 3.40);  object(0x01BF, 90, 15, 92);
move(-0.25, -7.52, -1.00);  object(0x01BF, 90, 0, 92);
move(-0.27, -7.82, 0.00);  object(0x01BF, 90, 0, 92);
move(7.26, 4.95, -1.30);  object(0x01BF, 90, 20, 2);
move(34.87, 24.45, 10.30);  object(0x01BF, 90, 0, 359);
move(0.04, -6.62, 0.00);  object(0x01BF, 90, 0, 359);
move(0.18, -6.63, 0.00);  object(0x01BF, 90, 0, 359);
move(-7.79, -0.22, 0.00);  object(0x01BF, 90, 0, 180);
move(-0.02, 6.73, 0.00);  object(0x01BF, 90, 0, 180);
move(0.10, 6.72, 0.00);  object(0x01BF, 90, 0, 180);
move(-7.71, 0.02, 0.01);  object(0x01BF, 90, 0, 183);
move(-0.17, -6.65, 0.00);  object(0x01BF, 90, 0, 183);
move(-0.29, -6.93, 0.30);  object(0x01BF, 90, 0, 178);
move(-0.14, 3.66, 0.00);  object(0x01BF, 90, 0, 183);
move(-6.74, 9.21, -0.30);  object(0x01BF, 90, 0, 180);
move(-7.93, -0.00, 0.00);  object(0x01BF, 90, 0, 180);
move(-7.91, -0.06, 0.00);  object(0x01BF, 90, 0, 180);
move(-7.81, -0.06, -0.70);  object(0x01BF, 90, 10, 179);
move(4.60, -5.81, -1.10);  object(0x01BF, 90, 10, 1);
move(7.69, -0.09, -1.40);  object(0x01BF, 90, 10, 1);
move(7.79, -0.14, -1.20);  object(0x01BF, 90, 10, 1);
move(6.82, -0.10, -1.20);  object(0x01BF, 90, 10, 1);
move(6.79, -0.19, -1.20);  object(0x01BF, 90, 10, 2);
moveto(100.53, -452.94, 28.12);  object(0x01BF, 270, 355, 181);
move(26.17, -6.67, 3.20);  object(0x01BF, 270, 355, 178);
move(-0.15, 3.32, 0.00);  object(0x01BF, 270, 355, 181);
move(-7.46, 6.12, 0.10);  object(0x01BF, 275, 0, 0);
move(22.60, 4.71, 0.00);  object(0x01BF, 270, 0, 89);
move(0.27, -8.52, 0.00);  object(0x01BF, 270, 0, 88);
move(0.09, -4.69, 0.00);  object(0x01BF, 270, 0, 88);
move(-0.41, 9.84, 0.00);  object(0x01BF, 270, 0, 86);
move(6.42, 2.01, 0.00);  object(0x01BF, 270, 0, 86);
move(0.26, -7.71, 0.00);  object(0x01BF, 270, 0, 86);
moveto(132.56, -470.53, 15.88);  object(0x01BF, 90, 15, 182);
move(0.33, 5.19, 0.00);  object(0x01BF, 90, 15, 182);
move(-0.53, 0.74, -0.20);  object(0x01BF, 95, 15, 182);
//Lights
moveto(111.44, -465.01, 20.50);  object(0x020F, 0, 0, 271);
moveto(111.48, -466.20, 20.50);  object(0x020F, 0, 0, 269);
move(0.02, -1.10, 0.00);  object(0x020F, 0, 0, 269);
move(0.02, -1.10, 0.00);  object(0x020F, 0, 0, 269);
move(0.02, -1.50, 0.00);  object(0x020F, 0, 0, 269);
move(0.02, -1.50, 0.00);  object(0x020F, 0, 0, 269);
moveto(111.48, -463.76, 20.53);  object(0x020F, 0, 0, 271);
move(-22.70, -4.20, 10.20);  object(0x020F, 0, 0, 268);
move(0.02, 1.40, 0.00);  object(0x020F, 0, 0, 271);
moveto(88.80, -465.30, 30.73);  object(0x020F, 0, 0, 270);
move(0.16, 4.44, 0.00);  object(0x020F, 0, 0, 270);
move(-0.02, 1.80, 0.00);  object(0x020F, 0, 0, 270);
move(-0.02, 1.70, 0.00);  object(0x020F, 0, 0, 270);
move(-0.02, 1.60, 0.00);  object(0x020F, 0, 0, 270);
moveto(88.87, -462.20, 30.69);  object(0x020F, 0, 0, 267);
move(0.09, -1.70, 0.00);  object(0x020F, 0, 0, 267);
moveto(139.01, -456.13, 25.09);  object(0x020F, 0, 0, 132);
move(2.80, 5.34, 0.00);  object(0x020F, 0, 0, 70);
move(-2.20, -0.04, 0.00);  object(0x020F, 0, 0, 70);
move(-1.86, -0.07, 0.00);  object(0x020F, 0, 0, 74);
move(-1.66, -0.02, 0.00);  object(0x020F, 0, 0, 67);
move(14.41, 12.69, 2.10);  object(0x020F, 265, 0, 5);
move(-1.96, 0.02, 0.00);  object(0x020F, 265, 0, 5);
move(-1.98, -0.06, 0.00);  object(0x020F, 265, 0, 5);
move(-52.19, -22.26, -9.00);  object(0x020F, 265, 0, 270);
move(-0.07, -1.11, 0.00);  object(0x020F, 265, 0, 273);
move(-0.21, -0.99, 0.00);  object(0x020F, 265, 0, 271);
move(4.18, 11.75, 0.00);  object(0x020F, 265, 0, 1);
move(1.02, -0.09, 0.00);  object(0x020F, 265, 0, 0);
move(1.14, 0.12, 0.00);  object(0x020F, 265, 0, 359);
//Fencing
moveto(115.08, -460.05, 31.90);  object(0x01F0, 0, 0, 90);
move(0.01, 3.50, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.00, 3.50, 0.00);  object(0x01F0, 0, 0, 90);
move(-6.75, 2.83, -0.30);  object(0x01F0, 0, 0, 0);
move(-3.62, 0.03, 0.00);  object(0x01F0, 0, 0, 0);
move(-3.60, -0.11, 0.00);  object(0x01F0, 0, 0, 0);
move(-3.62, 0.03, 0.00);  object(0x01F0, 0, 0, 1);
move(-3.71, 0.04, 0.00);  object(0x01F0, 0, 0, 1);
move(-3.41, 0.00, 0.00);  object(0x01F0, 0, 0, 1);
moveto(111.99, -450.28, 31.64);  object(0x01F0, 0, 0, 0);
move(3.12, -12.87, 0.20);  object(0x01F0, 0, 0, 356);
move(3.59, 0.19, 0.00);  object(0x01F0, 0, 0, 359);
move(3.48, 0.07, 0.00);  object(0x01F0, 0, 0, 0);
move(3.56, -0.03, 0.00);  object(0x01F0, 0, 5, 0);
move(3.63, 0.13, -0.20);  object(0x01F0, 0, 0, 0);
move(3.74, 0.10, 0.00);  object(0x01F0, 0, 0, 0);
move(3.67, 0.02, 0.00);  object(0x01F0, 0, 0, 0);
move(3.90, 0.08, 0.00);  object(0x01F0, 0, 0, 359);
//Reg. Cars
//phobos
setchar(0x08E4Ea18, 186);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 49.48, -447.04, 30.98, 200);
//stinger
setchar(0x08E4Ea44, 133);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 142.45, -448.82, 25.08, 198);
//yardie lobo
setchar(0x08E4Ea70, 173);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, 74.88, -446.66, 30.97, 200);
//banshee
setchar(0x08E4Ea9c, 160);
setchar(0x08E4Ea9c + 0x18, 0x01);
setfloat(0x08E4Eaa0, 63.94, -446.94, 30.98, 200);
//hellenbach
setchar(0x08E4Eac8, 185);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 133.76, -453.12, 25.08, 0);
//thunder-rodd
setchar(0x08E4Eaf4, 189);
setchar(0x08E4Eaf4 + 0x18, 0x01);
setfloat(0x08E4Eaf8, 94.26, -460.71, 15.53, 180);
//deimos
setchar(0x08E4Eb20, 130);
setchar(0x08E4Eb20 + 0x18, 0x01);
setfloat(0x08E4Eb24, 100.35, -467.78, 15.54, 280);
//angel
setchar(0x08E4Eb4c, 202);
setchar(0x08E4Eb4c + 0x18, 0x01);
setfloat(0x08E4Eb50, 84.94, -464.56, 30.87, 10);
//cheetah
setchar(0x08E4Eb78, 146);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 121.06, -77.07, 15.43, 250);
//pcj 600
setchar(0x08E4Eba4, 205);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 85.67, -458.68, 30.90, 10);
//Bickle
setchar(0x08E4Ec28, 181);
setchar(0x08E4Ec28 + 0x18, 0x01);
setfloat(0x08E4Ec2c, 45.89, -464.72, 30.98, 5);
//leone sentinel
setchar(0x08E4Ec54, 172);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, 54.59, -66.12, 30.95, 5);
//infernus
setchar(0x08E4Ec80, 142);
setchar(0x08E4Ec80 + 0x18, 0x01);
setfloat(0x08E4Ec84, 92.59, -468.77, 15.52, 280);
//stretch
setchar(0x08E4Ecac, 140);
setchar(0x08E4Ecac + 0x18, 0x01);
setfloat(0x08E4Ecb0, 66.13, -466.05, 30.90, 5);
//pmg cars
//m4
setshort(0x99450E2, 0x20, 0x20, 0x20, 0x20, 0x20, 0x4d, 0x34);
setchar(0x945d482, 0x5);
setchar(0x945d481, 0x50);
setchar(0x945d480, 0x34);
setshort(0x9446c10, 250);
setfloat(0x9446c0c, 1.175);
setfloat(0x945d400, 500);
setfloat(0x945d408, 1.6);
setfloat(0x945d4c0, 0.15);
setfloat(0x945d4c4, -0.15999);
setfloat(0x945d4c8, 0.5);
setfloat(0x945d48c, 0.97867);
setfloat(0x945d490, 0.97867);
setfloat(0x945d484, 0.00475);
setfloat(0x945d4a0, 0.5);
setfloat(0x945d4a4, 0);
setfloat(0x945d4a8, 35);
setfloat(0x945d4b8, 0.85);
setfloat(0x945d4bc, 0.15);
setfloat(0x945d4d4, 0);
setfloat(0x945d4cc, 0);
setfloat(0x945d420, 0);
setfloat(0x945d424, 0.05);
setfloat(0x945d428, -0.08999);
setchar(0x945d430, 103);
setfloat(0x945d4ac, 0.9);
setfloat(0x945d4b0, 0.48);
setfloat(0x945d40c, 0.6);
sethex(0x945d4d0, 0x03, 0x01, 0x01, 0x07);
setchar(0x967E6FC, 0x00, 0xFF, 0x00);
sethex(0x944fb04, 0x79, 0xD1, 0x47);
sethex(0x944fb3c, 0xFF, 0xFF, 0xFF);
setint(0x8E38A38, 205);
setchar(0x8E38A5C, 105, 119);
sethex(0x8E38A5E, 0x01, 0x00);
//m3 limo
setshort(0x992FC96, 0x4d, 0x33, 0x20, 0x4c, 0x49, 0x4d, 0x4f);
setchar(0x945a002, 0x5);
setchar(0x945a001, 0x44);
setchar(0x945a000, 0x34);
setshort(0x9440680, 250);
setfloat(0x944067c, 0.75);
setfloat(0x9459f80, 2000);
setfloat(0x9459f88, 0.6);
setfloat(0x945a040, 0.35);
setfloat(0x945a044, -1);
setfloat(0x945a048, 0.5);
setfloat(0x945a00c, 1.275);
setfloat(0x945a010, 1.275);
setfloat(0x945a004, 0.0045);
setfloat(0x945a020, 0.4);
setfloat(0x945a024, 0);
setfloat(0x945a028, 45);
setfloat(0x945a038, 1.1);
setfloat(0x945a03c, 0.07);
setfloat(0x945a054, 0.2);
setfloat(0x945a04c, 0);
setfloat(0x9459fa0, 0);
setfloat(0x9459fa4, 0);
setfloat(0x9459fa8, -1);
setchar(0x9459fb0, -1);
setfloat(0x945a02c, 0.8);
setfloat(0x945a030, 0.5);
setfloat(0x9459f8c, 0);
sethex(0x945a050, 0x02, 0xc1, 0x00, 0x07);
setchar(0x967E6FC, 0x00, 0x00, 0xFF);
sethex(0x944fb50, 0x54, 0xD5, 0xF2);
sethex(0x944faf4, 0x54, 0xD5, 0xF2);
setint(0x8E38A38, 140);
setchar(0x8E38A5C, 124, 101);
sethex(0x8E38A5E, 0x01, 0x00);
//earth-quake!!
setshort(0x99300B2, 0x65, 0x61, 0x72, 0x74, 0x68, 0x2d, 0x71, 0x75, 0x61, 0x6b, 0x65, 0x21);
setchar(0x945d1b2, 0x6);
setchar(0x945d1b0, 0x34);
setshort(0x9445310, 250);
setfloat(0x944530c, 0.75);
setfloat(0x945d130, 1450);
setfloat(0x945d1f4, -0.001);
setfloat(0x945d1bc, 3.5);
setfloat(0x945d1c0, 3.5);
setfloat(0x945d1b4, 0.12);
setfloat(0x945d1d8, 55);
setfloat(0x945d1e8, 1.21875);
setfloat(0x945d158, -1.15);
setchar(0x945d160, 0);
setfloat(0x945d13c, 0);
sethex(0x945d200, 0x83, 0x81, 0x00, 0x07);
setchar(0x967E6FC, 0x00, 0xFF, 0x00);
sethex(0x944fb34, 0x00, 0x00, 0x00);
sethex(0x944fb4c, 0x00, 0x00, 0x00);
setint(0x8E38A38, 189);
setchar(0x8E38A5C, 117, 123);
sethex(0x8E38A5E, 0x01, 0xFF);
//Weps.
setfloat(0x08e2d800, 149.45, -444.37, 32.60);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
setfloat(0x08E2E400, 149.52, -445.13, 32.60);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x124);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, 149.83, -446.54, 32.60);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
setfloat(0x08e2d8c0, 149.20, -448.45, 32.60);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, 148.67, -449.69, 32.60);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, 147.84, -451.18, 32.60);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, 146.86, -453.56, 32.60);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, 145.72, -455.87, 32.60);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
setfloat(0x08e2daa0, 144.82, -457.93, 32.60);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
setfloat(0x08e2db00, 143.99, -459.80, 32.60);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
setfloat(0x08E2DB60, 143.38, -461.57, 32.60);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
setfloat(0x08E2DBC0, 141.70, -461.95, 32.60);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
setfloat(0x08E2DC20, 140.14, -462.02, 32.60);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
setfloat(0x08E2DC80, 138.19, -462, 32.60);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
setfloat(0x08E2DCE0, 136.58, -462.02, 32.60);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x10f);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
setfloat(0x08E2DD40, 135.43, -461.99, 32.60);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
setfloat(0x08E2DDA0, 134.08, -462.08, 32.60);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
setfloat(0x08E2DE00, 132.36, -462.36, 32.60);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
setfloat(0x08E2DE60, 130.63, -462.14, 32.60);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
setfloat(0x08E2DEC0, 128.99, -462.21, 32.60);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
setfloat(0x08E2DF20, 126.59, -462.33, 32.60);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0xff, 0xff);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
setfloat(0x08E2DF80, 147.97, -443.84, 32.60);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0xff, 0xff);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
setfloat(0x08E2DFE0, 145.49, -443.94, 32.60);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0xff, 0xff);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
setfloat(0x08E2E040, 143.50, -443.99, 32.60);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0xff, 0xff);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
setfloat(0x08E2E0A0, 141.68, -443.96, 32.60);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
setfloat(0x08E2E100, 139.02, -443.91, 32.60);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0xff, 0xff);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
setfloat(0x08E2E160, 136.95, -443.93, 32.60);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
setfloat(0x08E2E1C0, 134.90, -444, 32.60);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
setfloat(0x08E2E220, 133.23, -444, 32.60);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0xff, 0xff);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
setfloat(0x08E2E280, 130.85, -444, 32.60);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0xff, 0xff);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
setfloat(0x08E2E2E0, 129.01, -444, 32.60);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0xff, 0xff);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
setfloat(0x08E2E340, 127.04, -444, 32.60);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0xff, 0xff);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
setfloat(0x08E2E3A0, 124.35, -444, 32.60);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0xff, 0xff);
setshort(0x08E2E3C6, 0x122);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
setfloat(0x08E2E460, 121.79, -444, 32.60);
setint(0x08E2E474, 0);
setchar(0x08E2E47C, 0xff, 0xff);
setshort(0x08E2E486, 0x22e);
setchar(0x08E2E492, 0x0f);
setchar(0x08E2E493, 0x00);
setchar(0x08E2D4B0, 0xff);
setfloat(0x08E2E4C0, 119.10, -444, 32.60);
setint(0x08E2E4D4, 0);
setchar(0x08E2E4DC, 0xff, 0xff);
setshort(0x08E2E4E6, 0x24b);
setchar(0x08E2E4F2, 0x0f);
setchar(0x08E2E4F3, 0x00);
setchar(0x08E2D510, 0xff);
//tele
teleport(187.77, -473.53, 26.00);
off()

#cheat Half Way hut by bob108
//ID: 14316
//Score: 42
//Author: bob108
//Category: Location Mods
//Description: Has weapons, trees, seats, rooms, lights and extra rooms. Great for vacations, hideaways and escapes. Best yet from bob108
//Image: C:\WINDOWS\Desktop\video1.gif
//Time: 07/07/2006 08:14:50
//Working: Yes
moveto(511.18, -641.05, 44.92);  object(0x01BF, 90, 0, 90);
move(0.05, -7.50, 0.00);  object(0x01BF, 90, 0, 90);
move(0.05, -7.50, 0.00);  object(0x01BF, 90, 0, 90);
move(0.05, -7.50, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.12, -0.04, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.05, 7.70, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.04, 5.60, -25.90);  object(0x01BF, 90, 0, 90);
move(0.00, 0.00, 2.00);  object(0x01BF, 90, 0, 90);
move(0.00, 0.00, 3.10);  object(0x01BF, 90, 0, 90);
move(0.00, 0.00, 1.50);  object(0x01BF, 90, 0, 90);
move(-0.01, -1.49, 4.70);  object(0x01BF, 90, 0, 107);
move(-1.30, 4.78, 0.00);  object(0x01BF, 90, 0, 48);
move(-154.67, -60.34, 17.89);  object(0x01BF, 90, 0, 90);
move(-0.03, 7.70, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.03, 7.70, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.03, 7.70, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.78, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(0.03, -7.60, 0.00);  object(0x01BF, 90, 0, 90);
move(0.03, -7.60, 0.00);  object(0x01BF, 90, 0, 90);
move(0.02, -4.50, 0.00);  object(0x01BF, 90, 0, 90);
move(0.02, -6.40, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.73, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.02, 7.30, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.03, 7.60, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.02, 6.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.02, 5.40, 0.00);  object(0x01BF, 90, 0, 90);
move(14.74, -23.28, 3.56);  object(0x01BF, 0, 0, 269);
move(-0.07, 3.70, 0.00);  object(0x01BF, 0, 0, 269);
move(-0.24, 13.80, 0.00);  object(0x01BF, 0, 0, 269);
move(-0.13, 7.50, 0.00);  object(0x01BF, 0, 0, 269);
move(-17.48, -2.68, -0.40);  object(0x01BF, 0, 0, 89);
move(0.10, -4.50, 0.00);  object(0x01BF, 0, 0, 89);
move(0.32, -14.10, 0.00);  object(0x01BF, 0, 0, 89);
move(0.11, -4.60, 0.00);  object(0x01BF, 0, 0, 89);
move(2.23, -6.69, 0.00);  object(0x01BF, 0, 0, 186);
moveto(349.58, -707.56, 54.79);  object(0x01BF, 90, 0, 90);
move(-0.07, 7.50, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.06, 5.90, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.06, 6.40, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.06, 6.60, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.02, -26.22, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.09, 7.30, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.09, 7.40, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.06, 5.30, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.09, 7.20, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.04, -4.68, 0.00);  object(0x01BF, 90, 0, 90);
move(0.09, -7.70, 0.00);  object(0x01BF, 90, 0, 90);
move(0.09, -7.50, 0.00);  object(0x01BF, 90, 0, 90);
move(0.09, -7.60, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.07, 11.14, -7.70);  object(0x01BF, 75, 0, 90);
move(-5.27, -0.05, -1.50);  object(0x01BF, 75, 0, 90);
move(-4.41, -0.04, -1.20);  object(0x01BF, 75, 0, 90);
move(-5.73, -0.06, -1.60);  object(0x01BF, 75, 0, 90);
move(-5.94, -0.04, -1.60);  object(0x01BF, 75, 0, 90);
move(-5.83, -0.04, -1.60);  object(0x01BF, 75, 0, 90);
move(-6.03, -0.05, -1.60);  object(0x01BF, 75, 0, 90);
move(-5.84, -0.05, -1.60);  object(0x01BF, 75, 0, 90);
move(-6.50, -0.05, -1.70);  object(0x01BF, 75, 0, 90);
move(-6.46, -0.05, -1.70);  object(0x01BF, 75, 0, 90);
move(-6.10, -0.04, -1.60);  object(0x01BF, 75, 0, 90);
move(-6.25, -0.05, -1.70);  object(0x01BF, 75, 0, 90);
moveto(261.86, -697.05, 28.02);  object(0x01BF, 75, 0, 90);
move(-6.00, 0.04, -1.60);  object(0x01BF, 75, 0, 90);
move(-5.58, 0.01, -1.50);  object(0x01BF, 75, 0, 90);
move(104.65, 0.51, 23.30);  object(0x01BF, 90, 0, 267);
moveto(403.35, -697.17, 48.80);  object(0x01BF, 90, 0, 91);
move(-42.95, 0.95, -0.70);  object(0x01BF, 90, 0, 268);
move(0.45, -7.21, 0.00);  object(0x01BF, 90, 0, 267);
move(0.45, -7.38, 0.00);  object(0x01BF, 90, 0, 267);
move(5.40, 0.33, 0.00);  object(0x01BF, 90, 0, 267);
move(-0.47, 7.78, 0.00);  object(0x01BF, 90, 0, 267);
move(-0.45, 7.38, 0.00);  object(0x01BF, 90, 0, 267);
move(-5.64, 5.97, 0.00);  object(0x01BF, 90, 0, 267);
move(-0.34, 5.69, 0.00);  object(0x01BF, 90, 0, 267);
move(5.89, -4.15, 0.00);  object(0x01BF, 90, 0, 267);
move(-0.27, 4.49, 0.00);  object(0x01BF, 90, 0, 267);
move(-8.60, -1.73, 3.00);  object(0x01BF, 0, 0, 87);
move(0.19, -4.20, 0.00);  object(0x01BF, 0, 0, 87);
move(0.68, -14.59, 0.00);  object(0x01BF, 0, 0, 87);
move(0.34, -7.29, 0.00);  object(0x01BF, 0, 0, 87);
move(11.77, 0.56, 0.10);  object(0x01BF, 0, 0, 265);
move(-0.59, 7.28, 0.00);  object(0x01BF, 0, 0, 265);
move(-0.58, 7.08, 0.00);  object(0x01BF, 0, 0, 265);
move(-0.60, 7.38, 0.00);  object(0x01BF, 0, 0, 265);
move(-0.37, 4.58, 0.00);  object(0x01BF, 0, 0, 265);
move(-6.61, -26.81, 3.10);  object(0x01BF, 90, 0, 87);
move(-0.39, 7.49, 0.00);  object(0x01BF, 90, 0, 87);
move(-0.39, 7.39, 0.00);  object(0x01BF, 90, 0, 87);
move(-0.38, 7.19, 0.00);  object(0x01BF, 90, 0, 87);
move(-0.30, 5.69, 0.00);  object(0x01BF, 90, 0, 87);
move(7.11, -27.60, 0.00);  object(0x01BF, 90, 0, 264);
move(-0.77, 7.56, 0.00);  object(0x01BF, 90, 0, 264);
move(-0.73, 7.16, 0.00);  object(0x01BF, 90, 0, 264);
move(-0.55, 5.47, 0.00);  object(0x01BF, 90, 0, 264);
move(-0.70, 6.96, 0.00);  object(0x01BF, 90, 0, 264);
moveto(354.75, -702.26, 50.10);  object(0x01BF, 50, 0, 177);
move(0.14, -3.05, 2.70);  object(0x01BF, 50, 0, 176);
move(-0.09, -5.78, 2.00);  object(0x01BF, 90, 0, 177);
//
setfloat(0x08e2d800, 337.42, -702.95, 49.39);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x122)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//
setfloat(0x08E2E400, 337.82, -706.29, 49.39);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x11f);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
//
setfloat(0x08e2d860, 338.41, -711.74, 49.39);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x11e)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//
setfloat(0x08e2d8c0, 342.42, -709.78, 49.39);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x118);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
//
setfloat(0x08e2d920, 346.58, -709.80, 49.39, 0);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x114);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
//
setfloat(0x08e2d980, 349.89, -706.45, 49.39);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x113);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
//
setfloat(0x08e2d9e0, 350.08, -701.76, 49.39);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x104);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
//
setfloat(0x08e2da40, 349.96, -691.97, 49.39);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x10e);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
//
setfloat(0x08e2daa0, 350.07, -687.34, 49.39);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x124);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
//
setfloat(0x08e2db00, 349.95, -682.43, 49.39);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x117);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
//
setfloat(0x08E2DB60, 346.07, -682.10, 49.39);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x121);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
//
setfloat(0x08E2DBC0, 342.05, -682.83, 49.39);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10c);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
//
setfloat(0x08E2DC20, 337.59, -683.16, 49.39);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x10b);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
//
setfloat(0x08E2DC80, 336.71, -686.88, 49.39);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x110);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
//
setfloat(0x08E2DCE0, 336.55, -690.45, 49.39);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x11c);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
//
moveto(332.08, -692.80, 47.59);  object(0x020F, 0, 0, 86);
move(-3.56, 0.07, -1.10);  object(0x020F, 0, 0, 86);
move(-4.86, -0.11, -1.20);  object(0x020F, 0, 0, 86);
move(-4.70, -0.09, -1.30);  object(0x020F, 0, 0, 85);
move(-5.93, -0.04, -1.70);  object(0x020F, 0, 0, 90);
move(-5.94, -0.01, -1.60);  object(0x020F, 0, 0, 90);
move(-5.58, -0.01, -1.40);  object(0x020F, 0, 0, 90);
move(-5.93, -0.01, -1.60);  object(0x020F, 0, 0, 90);
move(-6.72, -0.02, -1.80);  object(0x020F, 0, 0, 90);
move(-6.49, -0.11, -1.90);  object(0x020F, 0, 0, 90);
move(-5.55, -0.01, -1.30);  object(0x020F, 0, 0, 90);
move(-6.49, -0.01, -1.60);  object(0x020F, 0, 0, 90);
move(-5.81, -0.13, -1.70);  object(0x020F, 0, 0, 102);
move(-6.95, -0.01, -1.90);  object(0x020F, 0, 0, 120);
//
moveto(406.60, -697.38, 51.96);  object(0x01BF, 0, 0, 271);
move(-77.59, -2.97, -5.00);  object(0x020F, 0, 0, 90);
move(-5.06, -0.06, -1.50);  object(0x020F, 0, 0, 90);
move(-4.83, -0.05, -1.50);  object(0x020F, 0, 0, 90);
move(-5.67, -0.06, -1.50);  object(0x020F, 0, 0, 90);
move(-5.47, -0.06, -1.60);  object(0x020F, 0, 0, 90);
move(-5.85, -0.07, -1.40);  object(0x020F, 0, 0, 90);
move(-6.23, -0.07, -1.80);  object(0x020F, 0, 0, 90);
move(-5.92, 0.03, -1.50);  object(0x020F, 0, 0, 90);
move(-6.75, -0.08, -1.70);  object(0x020F, 0, 0, 90);
move(-6.14, -0.07, -1.80);  object(0x020F, 0, 0, 90);
move(-6.59, -0.07, -1.70);  object(0x020F, 0, 0, 90);
move(-6.17, 0.23, -1.50);  object(0x020F, 0, 0, 90);
move(-7.10, -0.01, -2.10);  object(0x020F, 0, 0, 94);
//
moveto(334.42, -710.69, 55.22);  object(0x020F, 0, 0, 96);
move(-0.00, 1.84, 0.00);  object(0x020F, 0, 0, 90);
move(-0.01, 1.90, 0.00);  object(0x020F, 0, 0, 90);
move(-0.01, 1.90, 0.00);  object(0x020F, 0, 0, 90);
move(-0.01, 1.90, 0.00);  object(0x020F, 0, 0, 90);
move(-0.01, 2.10, 0.00);  object(0x020F, 0, 0, 90);
move(-0.01, 2.40, 0.00);  object(0x020F, 0, 0, 90);
move(-0.01, 2.40, 0.00);  object(0x020F, 0, 0, 90);
move(-0.01, 2.40, 0.00);  object(0x020F, 0, 0, 90);
move(-0.01, 2.40, 0.00);  object(0x020F, 0, 0, 90);
move(-0.01, 2.60, 0.00);  object(0x020F, 0, 0, 90);
move(-0.01, 2.20, 0.00);  object(0x020F, 0, 0, 90);
move(-0.07, 2.86, 0.00);  object(0x020F, 0, 0, 90);
move(16.92, 0.70, 0.20);  object(0x020F, 0, 0, 320);
move(0.11, -3.28, 0.00);  object(0x020F, 0, 0, 320);
move(-0.18, -3.50, -0.10);  object(0x020F, 0, 0, 298);
move(0.19, -2.89, 0.10);  object(0x020F, 0, 0, 91);
move(0.15, -3.42, 0.00);  object(0x020F, 0, 0, 292);
move(0.35, -3.63, 0.00);  object(0x020F, 0, 0, 270);
move(0.04, -4.20, 0.00);  object(0x020F, 0, 0, 270);
move(0.03, -3.80, 0.00);  object(0x020F, 0, 0, 270);
//
moveto(368.96, -702.64, 54.78);  object(0x020F, 0, 0, 270);
move(0.02, -3.20, 0.00);  object(0x020F, 0, 0, 270);
move(0.02, -3.60, 0.00);  object(0x020F, 0, 0, 270);
move(0.03, -3.80, 0.00);  object(0x020F, 0, 0, 270);
move(-0.27, 14.30, 0.00);  object(0x020F, 0, 0, 270);
move(-0.40, 3.60, 0.20);  object(0x020F, 0, 0, 270);
move(-0.05, 3.52, 0.00);  object(0x020F, 0, 0, 260);
move(-0.48, 3.85, 0.00);  object(0x020F, 0, 0, 261);
move(-0.32, 3.72, 0.00);  object(0x020F, 0, 0, 277);
move(-10.86, 1.26, -0.20);  object(0x020F, 0, 0, 40);
move(0.17, -3.23, 0.00);  object(0x020F, 0, 0, 41);
move(0.16, -3.49, 0.00);  object(0x020F, 0, 0, 41);
move(0.29, -3.77, 0.00);  object(0x020F, 0, 0, 34);
move(0.09, -4.50, 0.00);  object(0x020F, 0, 0, 34);
move(0.35, -5.89, 0.00);  object(0x020F, 0, 0, 166);
//
moveto(408.05, -696.26, 49.12);  object(0x0208, 0, 0, 102);
move(-73.74, 5.22, 3.30);  object(0x023F, 0, 0, 88);
move(-0.22, 2.68, 0.00);  object(0x023F, 0, 0, 95);
move(0.20, 2.39, 0.00);  object(0x023F, 0, 0, 95);
move(-0.16, 1.82, 0.00);  object(0x023F, 0, 0, 95);
move(0.39, -18.26, 0.00);  object(0x023F, 0, 0, 90);
move(0.02, -2.10, 0.00);  object(0x023F, 0, 0, 90);
move(0.02, -2.50, 0.00);  object(0x023F, 0, 0, 90);
move(0.02, -2.00, 0.00);  object(0x023F, 0, 0, 90);
move(30.97, 22.37, 1.95);  object(0x0269, 0, 0, 285);
move(0.26, -6.91, 0.60);  object(0x0271, 0, 0, 225);
move(-0.08, -6.28, 0.30);  object(0x025B, 0, 0, 292);
teleport(248.65, -697.56, 26.02);
off();

#cheat Car Park at Shoreside Vale v1.1
//ID: 14341
//Score: 59
//Author: rashon125
//Category: Location Mods
//Description: This structured car park includes the Rhino, FBI Cruiser, Yakuza Stinger, and Leone Sentinel. Get the teleporter off of Cheatsync. Get it while it lasts! Picture soon!
//Image: http://i70.photobucket.com/albums/i97/rashon125/CarParkShoresideValePicture.jpg
//Time: 07/07/2006 21:05:58
//Working: Yes
moveto(-239.89, 269.96, 5.08); object(0x01BF, 0, 0, 270);
move(0.00, 7.60, 0.00); object(0x01BF, 0, 0, 270);
move(0.00, 7.70, 0.00); object(0x01BF, 0, 0, 270);
move(0.00, 7.60, 0.00); object(0x01BF, 0, 0, 270);
move(0.00, 7.30, 0.00); object(0x01BF, 0, 0, 270);
move(0.00, 7.30, 0.00); object(0x01BF, 0, 0, 270);
move(3.13, -29.43, -1.80); object(0x01BF, 270, 345, 270);
moveto(-236.70, 285.42, 5.30); object(0x01BF, 270, 345, 270);
move(-0.02, 7.40, 2.00); object(0x01BF, 270, 345, 270);
move(-0.02, 7.70, 1.00); object(0x01BF, 270, 0, 270);
move(-0.02, 7.10, 0.00); object(0x01BF, 270, 0, 270);
move(6.68, 0.02, 0.00); object(0x01BF, 270, 0, 270);
move(0.02, -7.90, 0.00); object(0x01BF, 270, 0, 270);
move(0.02, -7.70, 0.00); object(0x01BF, 270, 0, 270);
move(0.02, -7.90, 0.00); object(0x01BF, 270, 0, 270);
move(0.02, -8.00, 0.00); object(0x01BF, 270, 0, 270);
move(-6.46, -6.16, 0.00); object(0x01BF, 270, 0, 270);
move(6.47, 0.06, 0.00); object(0x01BF, 270, 0, 270);
move(6.14, 0.06, 0.00); object(0x01BF, 270, 0, 270);
move(-0.07, 7.60, 0.00); object(0x01BF, 270, 0, 270);
move(-0.07, 7.70, 0.00); object(0x01BF, 270, 0, 270);
move(-0.07, 7.70, 0.00); object(0x01BF, 270, 0, 270);
move(-0.07, 7.80, 0.00); object(0x01BF, 270, 0, 270);
move(-0.06, 6.60, 0.00); object(0x01BF, 270, 0, 270);
move(5.77, 0.06, 0.00); object(0x01BF, 270, 0, 270);
move(0.07, -7.80, 0.00); object(0x01BF, 270, 0, 270);
move(0.08, -8.00, 0.00); object(0x01BF, 270, 0, 270);
move(0.07, -7.60, 0.00); object(0x01BF, 270, 0, 270);
move(0.07, -7.70, 0.00); object(0x01BF, 270, 0, 270);
move(0.06, -6.30, 0.00); object(0x01BF, 270, 0, 270);
move(-21.75, -0.21, 3.00); object(0x01BF, 0, 0, 270);
moveto(-236.51, 277.63, 9.26); object(0x01BF, 270, 15, 90);
move(-0.07, 7.30, 2.00); object(0x01BF, 270, 15, 90);
move(-3.26, -7.13, 0.00); object(0x01BF, 0, 0, 90);
move(-0.07, 7.50, 0.00); object(0x01BF, 0, 0, 90);
move(-0.06, 6.70, 0.00); object(0x01BF, 0, 0, 90);
move(-0.06, 6.40, 0.00); object(0x01BF, 0, 0, 90);
moveto(-236.56, 291.78, 13.08); object(0x01BF, 270, 345, 270);
move(-0.00, 1.30, 0.30); object(0x01BF, 270, 345, 270);
move(-3.44, 13.19, -2.10); object(0x01BF, 0, 0, 270);
move(-0.00, 1.30, 0.00); object(0x01BF, 0, 0, 270);
move(3.35, -6.79, 3.10); object(0x01BF, 270, 0, 270);
move(-0.02, 6.70, 0.00); object(0x01BF, 270, 0, 270);
move(5.79, 0.02, 0.00); object(0x01BF, 270, 0, 270);
move(0.81, -7.60, 0.00); object(0x01BF, 270, 0, 270);
move(0.03, -7.70, 0.00); object(0x01BF, 270, 0, 270);
move(0.03, -7.90, 0.00); object(0x01BF, 270, 0, 270);
move(0.02, -6.30, 0.00); object(0x01BF, 270, 0, 270);
move(-6.48, -7.72, 0.00); object(0x01BF, 270, 0, 270);
move(6.69, 0.02, 0.00); object(0x01BF, 270, 0, 270);
move(6.12, 0.02, 0.00); object(0x01BF, 270, 0, 270);
move(-0.03, 7.60, 0.00); object(0x01BF, 270, 0, 270);
move(-0.03, 7.90, 0.00); object(0x01BF, 270, 0, 270);
move(-0.03, 7.40, 0.00); object(0x01BF, 270, 0, 270);
move(-0.02, 6.50, 0.00); object(0x01BF, 270, 0, 270);
move(-1.22, 7.70, 0.00); object(0x01BF, 270, 0, 270);
move(6.65, 0.02, 0.00); object(0x01BF, 270, 0, 270);
move(0.03, -7.70, 0.00); object(0x01BF, 270, 0, 270);
move(0.03, -7.60, 0.00); object(0x01BF, 270, 0, 270);
move(0.03, -7.70, 0.00); object(0x01BF, 270, 0, 270);
move(0.03, -7.50, 0.00); object(0x01BF, 270, 0, 270);
move(0.02, -6.60, 0.00); object(0x01BF, 270, 0, 270);
moveto(-229.76, 266.26, 5.36); object(0x01BF, 0, 0, 359);
move(0.09, -0.05, 5.90); object(0x01BF, 0, 0, 0);
move(7.40, -0.01, -6.00); object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 6.00); object(0x01BF, 0, 0, 0);
move(1.60, -0.00, 0.00); object(0x01BF, 0, 0, 0);
move(1.90, -0.00, 0.00); object(0x01BF, 0, 0, 0);
move(0.00, 0.00, -6.10); object(0x01BF, 0, 0, 0);
move(-17.13, 45.31, 0.00); object(0x01BF, 0, 0, 180);
move(-0.00, -0.13, 6.00); object(0x01BF, 0, 0, 180);
move(7.90, -0.03, 0.00); object(0x01BF, 0, 0, 180);
move(7.00, -0.02, -5.90); object(0x01BF, 0, 0, 180);
move(0.70, -0.00, 5.80); object(0x01BF, 0, 0, 180);
move(1.30, -0.00, 0.00); object(0x01BF, 0, 0, 180);
move(0.00, 0.00, -5.80); object(0x01BF, 0, 0, 180);
move(3.91, -3.97, 0.00); object(0x01BF, 0, 0, 270);
move(0.00, 0.00, 5.80); object(0x01BF, 0, 0, 270);
move(0.08, -7.40, 0.00); object(0x01BF, 0, 0, 270);
move(0.08, -7.70, 0.00); object(0x01BF, 0, 0, 270);
move(0.08, -7.80, 0.00); object(0x01BF, 0, 0, 270);
move(0.08, -7.80, 0.00); object(0x01BF, 0, 0, 270);
move(0.07, -6.50, 0.00); object(0x01BF, 0, 0, 270);
move(0.00, 0.00, -5.70); object(0x01BF, 0, 0, 270);
move(-0.08, 7.70, 0.00); object(0x01BF, 0, 0, 270);
move(-0.08, 7.91, 0.00); object(0x01BF, 0, 0, 270);
move(-0.07, 8.00, 0.00); object(0x01BF, 0, 0, 270);
move(-0.06, 6.40, 0.00); object(0x01BF, 0, 0, 270);
move(31.82, 25.74, -5.00); object(0x01BF, 270, 0, 2);
move(-0.33, -11.58, 0.00); object(0x01BF, 270, 0, 2);
move(-6.07, 11.68, 0.00); object(0x01BF, 270, 0, 2);
move(-0.19, -6.73, 0.00); object(0x01BF, 270, 0, 2);
move(-0.14, -4.80, 0.00); object(0x01BF, 270, 0, 2);
move(3.09, 14.82, -3.30); object(0x01BF, 0, 0, 2);
move(3.60, -0.10, 0.00); object(0x01BF, 0, 0, 2);
move(-2.47, -8.51, -0.10); object(0x01BF, 0, 0, 270);
move(2.19, 2.15, 0.10); object(0x01BF, 0, 0, 2);
move(-0.21, -5.34, 0.00); object(0x01BF, 0, 0, 2);
move(-3.79, -6.48, 0.00); object(0x01BF, 0, 0, 180);
move(3.86, -0.01, 0.00); object(0x01BF, 0, 0, 181);
move(3.89, 3.09, -0.70); object(0x01BF, 0, 270, 270);
move(0.17, 11.80, 0.00); object(0x01BF, 0, 270, 270);
moveto(-214.89, 302.52, 15.28); object(0x01EE, 0, 0, 271);
move(-0.06, -8.80, 0.00); object(0x01EE, 0, 0, 271);
move(-0.06, -8.80, 0.00); object(0x01EE, 0, 0, 271);
move(-0.06, -8.20, 0.00); object(0x01EE, 0, 0, 271);
move(-0.06, -9.00, 0.00); object(0x01EE, 0, 0, 271);
move(-7.32, -1.25, 0.00); object(0x01EE, 0, 0, 0);
move(-8.30, -0.06, 0.00); object(0x01EE, 0, 0, 0);
move(-8.50, -0.06, 0.00); object(0x01EE, 0, 0, 0);
move(-0.67, 7.66, 0.00); object(0x01EE, 0, 0, 90);
move(-0.01, 8.50, 0.00); object(0x01EE, 0, 0, 90);
move(-0.01, 8.50, 0.00); object(0x01EE, 0, 0, 90);
move(-0.01, 8.90, 0.00); object(0x01EE, 0, 0, 90);
move(-0.01, 9.30, 0.00); object(0x01EE, 0, 0, 90);
move(8.03, 2.12, 0.00); object(0x01EE, 0, 0, 180);
move(8.10, 0.03, 0.00); object(0x01EE, 0, 0, 180);
move(8.20, 0.03, 0.00); object(0x01EE, 0, 0, 180);
move(28.32, -0.33, -14.20); object(0x01EE, 0, 0, 0);
move(7.44, 18.06, 0.00); object(0x01EE, 0, 0, 180);
move(-0.23, -18.13, -0.60); object(0x01EF, 0, 0, 270);
move(-0.06, 12.30, -0.20); object(0x01EF, 0, 0, 270);
move(-34.98, -12.07, 14.80); object(0x020F, 0, 0, 298);
move(0.00, -44.68, 0.00); object(0x020F, 0, 0, 7);
move(-24.53, 0.01, 0.00); object(0x020F, 0, 0, 358);
move(0.06, 44.58, 0.00); object(0x020F, 0, 0, 46);
move(59.30, -0.02, -14.30); object(0x020F, 0, 0, 76);
move(0.42, 18.22, 0.00); object(0x020F, 0, 0, 299);
move(-35.40, -4.47, 2.20); object(0x020F, 0, 0, 249);
move(-0.06, -10.70, 0.00); object(0x020F, 0, 0, 249);
move(-6.44, 11.39, 0.00); object(0x020F, 0, 0, 249);
move(-6.31, -0.12, 0.00); object(0x020F, 0, 0, 249);
move(-7.83, -0.04, 0.00); object(0x020F, 0, 0, 249);
move(-8.97, -5.38, 0.00); object(0x020F, 0, 0, 249);
move(1.61, -4.95, 0.00); object(0x020F, 0, 0, 249);
moveto(-239.74, 266.17, 8.49); object(0x01EF, 0, 0, 0);
//Patriot
setchar(0x08E4Ebfc, 137);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, -222.84, 269.41, 3.12, 90);
//Deimos SP
setchar(0x08E4Ebfc, 130);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, -222.84, 274.41, 3.12, 90);
//Stinger
setchar(0x08E4Ea44, 133);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, -222.84, 279.41, 3.12, 90);
//Cheetah
setchar(0x08E4Ea70, 146);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, -222.84, 284.41, 3.12, 90);
//Hellenbach GT
setchar(0x08E4Eac8, 185);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, -222.84, 288.41, 3.12, 90);
//Phobos VT
setchar(0x08E4Eb78, 186);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, -222.84, 292.41, 3.12, 90);
//V8 Ghost
setchar(0x08E4Ebd0, 187);
setchar(0x08E4Ebd0 + 0x18, 0x01);
setfloat(0x08E4Ebd4, -222.84, 296.41, 3.12, 90);
//Infernus
setchar(0x08E4Ea18, 142);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, -222.84, 300.41, 3.12, 90);
//BF Injection
setchar(0x8E4EB4C, 155);
setchar(0x8E4EB4C + 0x18, 0x01);
setfloat(0x8E4EB50, -222.84, 320.39, 3.12, 90);
//Rhino Tank
setchar(0x8E4EB20, 162);
setchar(0x8E4EB20 + 0x18, 0x01);
setfloat(0x8E4EB24, -234.84, 308.41, 3.12, 270);
//Enforcer
setchar(0x8E4EAF4, 158);
setchar(0x8E4EAF4 + 0x18, 0x01);
setfloat(0x8E4EAF8, -234.84, 303.41, 3.12, 270);
//FBI Cruiser
setchar(0x8E4EA9C, 148);
setchar(0x8E4EA9C + 0x18, 0x01);
setfloat(0x8E4EAA0, -234.84, 298.41, 3.12, 270);
//Police Car
setchar(0x08E4Ec54, 157);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, -234.84, 293.41, 3.12, 270);
//Angel
setchar(0x08E4Ecd8, 202);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, -228.00, 319.87, 3.12, 180);
//PCJ-600
setchar(0x08E4Ec28, 205);
setchar(0x08E4Ec28 + 0x18, 0x01);
setfloat(0x08E4Ec2c, -1154.84, 321.87, 3.12, 180);
//Freeway
setchar(08E4Ee0c, 207);
setchar(08E4Ee0c + 0x18, 0x01);
setfloat(08E4Ee10, -228.00, 322.87, 3.12, 180);
//Sanchez
setchar(08E4Ede0, 210);
setchar(08E4Ede0 + 0x18, 0x01);
setfloat(08E4Ede4, -228.00, 319.87, 3.12, 165);
//Leone Sentinel
setchar(0x08E4E9c0, 172);
setchar(0x08E4E9c0 + 0x18, 0x01);
setfloat(0x08E4E9c4, -219.67, 262.76, 3.12, 90);
//Yakuza Stinger
setchar(0x08E4Ecac, 174);
setchar(0x08E4Ecac + 0x18, 0x01);
setfloat(0x08E4Ecb0, -219.67, 256.76, 3.12, 90);
//Diablo Stallion
setchar(0x08E4Eba4, 175);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, -219.67, 248.76, 3.12, 90);
//Yardie Lobo
setchar(08E4Ed88, 173);
setchar(08E4Ed88 + 0x18, 0x01);
setfloat(08E4Ed8c, -219.67, 243.76, 3.12, 90);
//boat
//Speeder Boat
setchar(08E4Ed04, 194);
setchar(08E4Ed04 + 0x18, 0x01);
setfloat(08E4Ed08, -1072.73, 321.00, 1.60, 180);
off()

#cheat Rapid Respon Bridge Base
//ID: 14371
//Score: 44
//Author: penguinsrule
//Category: Location Mods
//Description: This is rapids respons old bridge base at the staunton ramp between staunton and portland.
//2 level complex
//Image: http://telmaz.no-ip.info:3249/screen13.bmp
//Time: 08/07/2006 12:53:36
//Working: Yes
//emcp idear
//created by penguinsrule
moveto(530.39, -942.57, 39.57);  object(0x01BF, 255, 0, 90);
move(-0.04, 6.30, 0.00);  object(0x01BF, 255, 0, 90);
move(-5.95, -0.04, -1.90);  object(0x01BF, 250, 0, 90);
move(0.04, -6.30, 0.00);  object(0x01BF, 250, 0, 90);
move(-4.04, -0.02, -1.50);  object(0x01BF, 250, 0, 90);
move(-0.04, 6.40, 0.00);  object(0x01BF, 250, 0, 90);
move(-5.70, -0.03, -2.10);  object(0x01BF, 250, 0, 90);
move(0.04, -6.40, 0.00);  object(0x01BF, 250, 0, 90);
move(-6.54, -0.04, -1.20);  object(0x01BF, 270, 0, 90);
move(-0.05, 7.70, 0.00);  object(0x01BF, 270, 0, 90);
move(-0.05, 7.40, 0.00);  object(0x01BF, 270, 0, 90);
move(0.14, -22.69, 0.00);  object(0x01BF, 270, 0, 90);
move(-6.10, -0.04, 0.00);  object(0x01BF, 270, 0, 90);
move(-0.05, 7.80, 0.00);  object(0x01BF, 270, 0, 90);
move(-0.04, 7.20, 0.00);  object(0x01BF, 270, 0, 90);
move(-0.05, 7.80, 0.00);  object(0x01BF, 270, 0, 90);
move(12.71, 0.06, 0.00);  object(0x01BF, 270, 0, 270);
move(0.09, -22.86, 0.00);  object(0x01BF, 270, 0, 270);
move(6.02, -0.08, 0.00);  object(0x01BF, 270, 0, 270);
move(6.64, 0.03, 0.00);  object(0x01BF, 270, 0, 270);
move(6.47, 0.03, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.04, 7.90, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.03, 6.70, 0.00);  object(0x01BF, 270, 0, 270);
move(-13.22, 8.34, 0.00);  object(0x01BF, 270, 0, 270);
move(6.01, 0.03, 0.00);  object(0x01BF, 270, 0, 270);
move(5.62, 0.03, 0.00);  object(0x01BF, 270, 0, 270);
move(1.65, 0.01, 0.00);  object(0x01BF, 270, 0, 270);
move(0.00, -0.90, 0.00);  object(0x01BF, 270, 0, 270);
move(-6.63, -14.30, -0.50);  object(0x01BF, 260, 0, 90);
move(-0.08, 7.30, 0.00);  object(0x01BF, 260, 0, 90);
move(-6.52, -0.08, -1.50);  object(0x01BF, 255, 0, 90);
move(0.08, -7.20, 0.00);  object(0x01BF, 255, 0, 90);
move(-6.02, -0.07, -1.70);  object(0x01BF, 255, 0, 90);
move(-0.08, 7.10, 0.00);  object(0x01BF, 255, 0, 90);
move(-6.91, -0.08, -0.80);  object(0x01BF, 270, 0, 90);
move(0.08, -6.90, 0.00);  object(0x01BF, 270, 0, 90);
move(-5.80, -0.09, 0.00);  object(0x01BF, 270, 0, 90);
move(-0.05, 6.90, 0.00);  object(0x01BF, 270, 0, 90);
move(-0.06, 7.90, 0.00);  object(0x01BF, 270, 0, 90);
move(0.16, -22.49, 0.00);  object(0x01BF, 270, 0, 90);
move(6.21, 0.03, 0.00);  object(0x01BF, 270, 0, 270);
move(5.61, 0.07, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.09, 7.60, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.09, 7.50, 0.00);  object(0x01BF, 270, 0, 270);
move(-6.12, 7.33, 0.00);  object(0x01BF, 270, 0, 270);
move(6.29, -0.02, 0.00);  object(0x01BF, 270, 0, 270);
move(6.31, 0.07, 0.00);  object(0x01BF, 270, 0, 270);
move(0.09, -7.90, 0.00);  object(0x01BF, 270, 0, 270);
move(0.09, -7.60, 0.00);  object(0x01BF, 270, 0, 270);
move(0.08, -7.00, 0.00);  object(0x01BF, 270, 0, 270);
move(5.56, 0.07, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.04, 7.92, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.04, 6.90, 0.00);  object(0x01BF, 270, 0, 270);
move(6.30, 0.04, 0.00);  object(0x01BF, 270, 0, 270);
move(0.05, -7.80, 0.00);  object(0x01BF, 270, 0, 270);
move(0.05, -7.60, 0.00);  object(0x01BF, 270, 0, 270);
move(0.04, -6.90, 0.00);  object(0x01BF, 270, 0, 270);
move(1.49, 0.01, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.05, 7.70, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.05, 7.50, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.04, 7.00, 0.00);  object(0x01BF, 270, 0, 270);
move(6.50, -10.96, 0.00);  object(0x01BF, 270, 0, 270);
move(-3.05, -7.92, 3.10);  object(0x01BF, 180, 0, 270);
move(0.00, 0.00, 5.50);  object(0x01BF, 180, 0, 270);
move(-0.04, 7.10, 0.00);  object(0x01BF, 180, 0, 270);
move(-0.04, 6.70, 0.00);  object(0x01BF, 180, 0, 270);
move(-0.03, 5.50, 0.00);  object(0x01BF, 180, 0, 270);
move(0.00, 0.00, -5.50);  object(0x01BF, 180, 0, 270);
move(0.02, -3.40, 0.00);  object(0x01BF, 180, 0, 270);
move(0.12, -19.50, 0.00);  object(0x01BF, 180, 0, 270);
move(0.00, 0.00, 5.50);  object(0x01BF, 180, 0, 270);
move(-4.11, 0.34, 3.10);  object(0x01BF, 90, 0, 0);
move(-7.50, 0.04, 0.00);  object(0x01BF, 90, 0, 0);
moveto(517.51, -950.78, 40.05);  object(0x01BF, 270, 0, 0);
move(-7.80, 0.06, 0.00);  object(0x01BF, 270, 0, 0);
move(-6.80, 0.05, 0.00);  object(0x01BF, 270, 0, 0);
move(22.20, -0.18, 0.00);  object(0x01BF, 270, 0, 0);
move(7.90, -0.06, 0.00);  object(0x01BF, 270, 0, 0);
moveto(533.12, -954.26, 36.75);  object(0x01BF, 0, 0, 1);
move(-7.27, 0.04, 0.00);  object(0x01BF, 0, 0, 0);
move(-7.90, 0.04, 0.00);  object(0x01BF, 0, 0, 0);
move(-7.80, 0.04, 0.00);  object(0x01BF, 0, 0, 0);
move(-7.30, 0.04, 0.00);  object(0x01BF, 0, 0, 0);
move(0.00, 0.00, -5.30);  object(0x01BF, 0, 0, 0);
move(8.00, -0.04, 0.00);  object(0x01BF, 0, 0, 0);
move(7.60, -0.04, 0.00);  object(0x01BF, 0, 0, 0);
move(7.50, -0.04, 0.00);  object(0x01BF, 0, 0, 0);
move(7.30, -0.04, 0.00);  object(0x01BF, 0, 0, 0);
move(-34.23, 4.22, 4.60);  object(0x01BF, 0, 0, 90);
move(-0.03, 7.30, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.04, 7.90, 0.00);  object(0x01BF, 0, 0, 90);
move(0.03, 7.08, -0.10);  object(0x01BF, 0, 0, 90);
move(0.00, 0.00, -4.10);  object(0x01BF, 0, 0, 90);
move(0.04, -7.50, 0.00);  object(0x01BF, 0, 0, 90);
move(0.04, -7.30, 0.00);  object(0x01BF, 0, 0, 90);
move(0.04, -7.30, 0.00);  object(0x01BF, 0, 0, 90);
move(4.10, 25.70, -0.10);  object(0x01BF, 0, 0, 180);
move(7.60, 0.03, 0.00);  object(0x01BF, 0, 0, 180);
move(7.40, 0.03, 0.00);  object(0x01BF, 0, 0, 180);
move(7.70, 0.03, 0.00);  object(0x01BF, 0, 0, 180);
move(7.00, 0.03, 0.00);  object(0x01BF, 0, 0, 180);
move(-0.00, 0.48, 5.00);  object(0x01BF, 0, 0, 180);
move(-7.40, -0.03, 0.00);  object(0x01BF, 0, 0, 180);
move(-7.90, -0.03, -0.10);  object(0x01BF, 0, 0, 180);
move(-7.50, -0.03, -0.20);  object(0x01BF, 0, 0, 180);
move(-7.10, -0.03, -0.23);  object(0x01BF, 0, 0, 180);
moveto(542.94, -942.50, 29.05);  object(0x020F, 0, 0, 284);
move(0.35, 7.56, 0.00);  object(0x020F, 0, 0, 296);
moveto(543.36, -942.16, 29.11);  object(0x01EE, 0, 0, 270);
move(-0.13, 7.44, -0.50);  object(0x01EF, 0, 0, 180);
move(-0.01, -7.76, -0.20);  object(0x01EF, 0, 0, 180);
move(-6.16, 3.44, 7.80);  object(0x01BF, 0, 0, 91);
move(0.00, 0.70, 0.00);  object(0x01BF, 0, 0, 91);
off()

#cheat Alcatraz
//ID: 14689
//Score: 87
//Author: ciaran06
//Category: Location Mods
//Description: This mod has:
//
//*10 jail cells
//*An armory
//*A work shop
//*2 gaurd towers
//*Homes for the gaurds
//Image: http://img483.imageshack.us/img483/4042/screen24ao.png
//Time: 14/07/2006 17:27:31
//Working: Yes
//By Ciaran06
moveto(-1079.99, -1659.96, 1.56);  object(0x01BF, 270, 0, 260);
move(-1.36, 7.68, 0.00);  object(0x01BF, 270, 0, 260);
move(-1.40, 7.88, 0.00);  object(0x01BF, 270, 0, 260);
move(-1.38, 7.78, 0.00);  object(0x01BF, 270, 0, 260);
move(-1.40, 7.88, 0.00);  object(0x01BF, 270, 0, 260);
move(-1.40, 7.88, 0.00);  object(0x01BF, 270, 0, 260);
move(-1.38, 7.78, 0.00);  object(0x01BF, 270, 0, 260);
move(-1.40, 7.88, 0.00);  object(0x01BF, 270, 0, 260);
move(6.55, 1.16, 0.00);  object(0x01BF, 270, 0, 260);
move(-13.03, -2.43, 0.00);  object(0x01BF, 270, 0, 79);
move(-1.52, 7.65, 0.00);  object(0x01BF, 270, 0, 79);
move(6.24, 1.22, 0.00);  object(0x01BF, 270, 0, 259);
move(6.68, 1.31, 0.00);  object(0x01BF, 270, 0, 259);
move(11.14, -62.53, 0.00);  object(0x01BF, 270, 0, 261);
move(-1.28, 7.90, 0.00);  object(0x01BF, 270, 0, 261);
move(6.59, 1.06, 0.00);  object(0x01BF, 270, 0, 261);
move(1.28, -7.90, 0.00);  object(0x01BF, 270, 0, 261);
move(6.40, 1.03, 0.00);  object(0x01BF, 270, 0, 261);
move(-1.26, 7.80, 0.00);  object(0x01BF, 270, 0, 261);
move(6.59, 1.06, 0.00);  object(0x01BF, 270, 0, 261);
move(1.28, -7.90, 0.00);  object(0x01BF, 270, 0, 261);
move(5.92, 0.96, 0.00);  object(0x01BF, 270, 0, 261);
move(-1.26, 7.80, 0.00);  object(0x01BF, 270, 0, 261);
move(-36.95, -14.11, 0.00);  object(0x01BF, 270, 0, 81);
move(-1.22, 7.80, 0.00);  object(0x01BF, 270, 0, 81);
move(-6.03, -0.95, 0.00);  object(0x01BF, 270, 0, 81);
move(1.24, -7.90, 0.00);  object(0x01BF, 270, 0, 81);
move(-6.39, -1.00, 0.00);  object(0x01BF, 270, 0, 81);
move(-1.22, 7.80, 0.00);  object(0x01BF, 270, 0, 81);
move(-6.48, -1.02, 0.00);  object(0x01BF, 270, 0, 81);
move(1.22, -7.80, 0.00);  object(0x01BF, 270, 0, 81);
move(-6.64, -1.04, 0.00);  object(0x01BF, 270, 0, 81);
move(-1.26, 7.90, 0.00);  object(0x01BF, 270, 0, 81);
move(2.47, -15.35, 0.00);  object(0x01BF, 270, 0, 80);
move(6.70, 0.87, 0.00);  object(0x01BF, 270, 0, 80);
move(6.40, 1.12, 0.00);  object(0x01BF, 270, 0, 80);
move(6.50, 0.90, 0.00);  object(0x01BF, 270, 0, 80);
move(5.90, 0.98, 0.00);  object(0x01BF, 270, 0, 80);
move(6.49, 1.30, 0.00);  object(0x01BF, 270, 0, 260);
move(6.40, 1.23, 0.00);  object(0x01BF, 270, 0, 260);
move(6.60, 1.15, 0.00);  object(0x01BF, 270, 0, 260);
move(6.30, 1.21, 0.00);  object(0x01BF, 270, 0, 260);
move(6.50, 0.81, 0.00);  object(0x01BF, 270, 0, 260);
move(6.00, 0.86, 0.00);  object(0x01BF, 270, 0, 260);
move(-28.74, 15.25, 4.10);  object(0x01BF, 270, 270, 83);
move(-13.13, -2.41, 0.00);  object(0x01BF, 270, 270, 83);
move(16.83, -0.46, -0.10);  object(0x01BF, 270, 270, 171);
move(-2.73, -3.70, 0.00);  object(0x01BF, 270, 270, 260);
move(-3.69, 2.70, 0.00);  object(0x01BF, 270, 270, 349);
move(-13.01, -2.25, 0.00);  object(0x01BF, 270, 270, 349);
move(3.77, -2.67, 0.00);  object(0x01BF, 270, 270, 260);
move(2.64, 3.77, 0.00);  object(0x01BF, 270, 270, 170);
move(9.93, 1.51, 4.00);  object(0x01BF, 270, 180, 261);
move(-13.14, -2.47, 0.00);  object(0x01BF, 270, 180, 262);
move(12.56, 5.64, -3.23);  object(0x01BF, 270, 90, 78);
move(-12.90, -2.62, 0.10);  object(0x01BF, 270, 90, 78);
move(1.65, 0.13, 4.00);  object(0x0114, 340, 0, 253);
move(-2.59, -0.51, 0.00);  object(0x0114, 340, 0, 235);
move(16.14, 3.25, 0.00);  object(0x0114, 340, 0, 237);
move(-2.27, -0.47, 0.00);  object(0x0114, 340, 0, 219);
move(5.22, -3.61, -8.30);  object(0x0215, 0, 0, 186);
move(-0.37, 2.41, 0.00);  object(0x0215, 0, 0, 186);
move(1.51, -1.08, 0.00);  object(0x0215, 0, 0, 165);
move(1.12, 2.40, 0.00);  object(0x0215, 0, 0, 165);
move(-2.33, -0.05, 0.00);  object(0x0215, 0, 0, 176);
move(23.38, -18.15, 2.50);  object(0x01BF, 0, 0, 172);
move(-7.67, -1.33, 0.00);  object(0x01BF, 0, 0, 168);
move(-54.50, -9.06, 0.00);  object(0x01BF, 0, 0, 166);
move(7.48, 1.65, 0.00);  object(0x01BF, 0, 0, 170);
move(7.63, 1.36, 0.00);  object(0x01BF, 0, 0, 170);
move(31.93, 4.52, 0.00);  object(0x01BF, 0, 0, 167);
moveto(-1069.06, -1669.77, 4.64);  object(0x01BF, 0, 0, 171);
move(-17.41, -1.96, -0.10);  object(0x01BF, 0, 0, 171);
move(4.85, 0.69, 3.60);  object(0x01BF, 0, 0, 171);
move(7.79, 1.28, 0.00);  object(0x01BF, 0, 0, 171);
moveto(-1113.46, -1671.87, 3.34);  object(0x01F3, 0, 0, 261);
move(-1.45, 9.82, 0.00);  object(0x01F3, 0, 0, 261);
move(-0.45, 3.38, 0.00);  object(0x01F3, 0, 0, 261);
move(3.97, 5.28, 0.00);  object(0x01F3, 0, 0, 351);
move(10.03, 1.56, 0.00);  object(0x01F3, 0, 0, 351);
move(6.65, 1.12, 0.00);  object(0x01F3, 0, 0, 351);
move(50.05, -9.64, 0.00);  object(0x01F3, 0, 0, 82);
move(-1.25, 9.45, 0.00);  object(0x01F3, 0, 0, 82);
move(-0.70, 3.27, 0.00);  object(0x01F3, 0, 0, 82);
move(-5.13, 3.57, -0.10);  object(0x01F3, 0, 0, 349);
move(-8.79, -1.56, 0.00);  object(0x01F3, 0, 0, 349);
move(-8.28, -1.65, 0.00);  object(0x01F3, 0, 0, 349);
move(-8.57, -26.85, -1.70);  object(0x01BF, 270, 0, 350);
move(1.15, -6.37, 0.00);  object(0x01BF, 270, 0, 350);
move(1.17, -6.45, 0.00);  object(0x01BF, 270, 0, 350);
move(1.07, -5.92, 0.00);  object(0x01BF, 270, 0, 350);
move(-7.87, -1.43, 0.00);  object(0x01BF, 270, 0, 350);
move(-7.87, -1.43, 0.00);  object(0x01BF, 270, 0, 350);
move(1.11, -6.12, 0.00);  object(0x01BF, 270, 0, 350);
move(1.10, -6.07, 0.00);  object(0x01BF, 270, 0, 350);
move(7.58, 1.37, 0.00);  object(0x01BF, 270, 0, 350);
move(7.67, 1.39, 0.00);  object(0x01BF, 270, 0, 350);
move(7.77, 1.41, 0.00);  object(0x01BF, 270, 0, 350);
move(7.67, 1.39, 0.00);  object(0x01BF, 270, 0, 350);
move(7.58, 1.37, 0.00);  object(0x01BF, 270, 0, 350);
move(7.58, 1.37, 0.00);  object(0x01BF, 270, 0, 350);
move(7.67, 1.39, 0.00);  object(0x01BF, 270, 0, 350);
move(7.77, 1.41, 0.00);  object(0x01BF, 270, 0, 350);
move(1.05, -5.78, 0.00);  object(0x01BF, 270, 0, 350);
move(-7.77, -1.41, 0.00);  object(0x01BF, 270, 0, 350);
move(-7.67, -1.39, 0.00);  object(0x01BF, 270, 0, 350);
move(-7.58, -1.37, 0.00);  object(0x01BF, 270, 0, 350);
move(-7.58, -1.37, 0.00);  object(0x01BF, 270, 0, 350);
move(-7.77, -1.41, 0.00);  object(0x01BF, 270, 0, 350);
move(-7.67, -1.39, 0.00);  object(0x01BF, 270, 0, 350);
move(-7.67, -1.39, 0.00);  object(0x01BF, 270, 0, 350);
move(-7.58, -1.37, 0.00);  object(0x01BF, 270, 0, 350);
move(1.03, -5.66, 0.00);  object(0x01BF, 270, 0, 350);
move(7.58, 1.37, 0.00);  object(0x01BF, 270, 0, 350);
move(7.58, 1.37, 0.00);  object(0x01BF, 270, 0, 350);
move(7.77, 1.41, 0.00);  object(0x01BF, 270, 0, 350);
move(7.58, 1.37, 0.00);  object(0x01BF, 270, 0, 350);
move(7.58, 1.37, 0.00);  object(0x01BF, 270, 0, 350);
move(7.48, 1.35, 0.00);  object(0x01BF, 270, 0, 350);
move(7.77, 1.41, 0.00);  object(0x01BF, 270, 0, 350);
move(7.67, 1.39, 0.00);  object(0x01BF, 270, 0, 350);
move(1.16, -6.39, 0.00);  object(0x01BF, 270, 0, 350);
move(-7.77, -1.42, 0.00);  object(0x01BF, 270, 0, 350);
move(-7.67, -1.40, 0.00);  object(0x01BF, 270, 0, 350);
move(-7.77, -1.42, 0.00);  object(0x01BF, 270, 0, 350);
move(-7.67, -1.40, 0.00);  object(0x01BF, 270, 0, 350);
move(-7.58, -1.38, 0.00);  object(0x01BF, 270, 0, 350);
move(-7.28, -1.33, 0.00);  object(0x01BF, 270, 0, 350);
move(-7.77, -1.42, 0.00);  object(0x01BF, 270, 0, 350);
move(-7.58, -1.38, 0.00);  object(0x01BF, 270, 0, 350);
moveto(-1072.87, -1676.03, 2.72);  object(0x01BF, 0, 0, 265);
move(-0.62, 1.85, 1.90);  object(0x01BF, 0, 0, 260);
move(1.14, -7.72, 0.00);  object(0x01BF, 0, 0, 260);
move(1.50, -7.69, 0.00);  object(0x01BF, 0, 0, 260);
move(0.51, -1.66, 0.00);  object(0x01BF, 0, 0, 260);
move(-2.99, -4.58, 0.00);  object(0x01BF, 0, 0, 351);
move(-7.72, -1.56, 0.00);  object(0x01BF, 0, 0, 349);
move(0.18, 22.36, 0.00);  object(0x01BF, 0, 0, 79);
move(1.40, -7.60, 0.00);  object(0x01BF, 0, 0, 79);
move(0.42, -3.78, 0.00);  object(0x01BF, 0, 0, 79);
move(-3.00, -4.65, 0.00);  object(0x01BF, 0, 0, 171);
move(-7.61, -1.13, 0.00);  object(0x01BF, 0, 0, 173);
move(-3.53, -4.34, 0.00);  object(0x01BF, 0, 0, 82);
move(0.94, -6.76, 0.00);  object(0x01BF, 0, 0, 82);
move(8.01, 1.24, 0.00);  object(0x01BF, 0, 0, 258);
moveto(-1090.92, -1711.05, 4.72);  object(0x01BF, 0, 0, 80);
move(1.35, -7.28, 0.00);  object(0x01BF, 0, 0, 80);
move(1.38, -7.48, 0.00);  object(0x01BF, 0, 0, 80);
move(4.68, -3.11, 0.00);  object(0x01BF, 0, 0, 349);
move(7.47, 1.39, 0.00);  object(0x01BF, 0, 0, 349);
move(7.47, 1.39, 0.00);  object(0x01BF, 0, 0, 349);
move(7.57, 1.41, 0.00);  object(0x01BF, 0, 0, 349);
move(7.37, 1.37, 0.00);  object(0x01BF, 0, 0, 349);
move(7.66, 1.43, 0.00);  object(0x01BF, 0, 0, 349);
move(7.47, 1.39, 0.00);  object(0x01BF, 0, 0, 349);
move(7.57, 1.41, 0.00);  object(0x01BF, 0, 0, 349);
move(7.57, 1.41, 0.00);  object(0x01BF, 0, 0, 349);
move(3.42, 4.70, 0.00);  object(0x01BF, 0, 0, 261);
move(-1.19, 7.41, 0.00);  object(0x01BF, 0, 0, 261);
move(-5.68, 11.85, 0.00);  object(0x01BF, 0, 0, 171);
move(-7.31, -1.14, 0.00);  object(0x01BF, 0, 0, 171);
move(-7.11, -1.11, 0.00);  object(0x01BF, 0, 0, 171);
move(-7.66, -1.54, 0.00);  object(0x01BF, 0, 0, 171);
move(-7.78, -1.43, 0.00);  object(0x01BF, 0, 0, 171);
move(-7.75, -1.57, 0.00);  object(0x01BF, 0, 0, 171);
move(-7.91, -1.21, 0.00);  object(0x01BF, 0, 0, 171);
move(-7.62, -1.16, 0.00);  object(0x01BF, 0, 0, 171);
move(60.49, 6.00, -3.20);  object(0x01BF, 270, 0, 260);
move(6.00, 1.04, 0.00);  object(0x01BF, 270, 0, 260);
move(6.38, 1.10, 0.00);  object(0x01BF, 270, 0, 260);
move(6.35, 1.10, 0.00);  object(0x01BF, 270, 0, 260);
move(6.47, 1.12, 0.00);  object(0x01BF, 270, 0, 260);
move(-23.93, -8.14, 3.10);  object(0x01BF, 180, 0, 352);
move(7.62, 1.11, 0.00);  object(0x01BF, 180, 0, 352);
move(7.58, 1.55, 0.00);  object(0x01BF, 180, 0, 351);
move(7.70, 1.25, 0.00);  object(0x01BF, 180, 0, 351);
move(-24.08, 4.19, 0.00);  object(0x01BF, 180, 0, 171);
move(7.71, 1.18, 0.00);  object(0x01BF, 180, 0, 171);
move(-0.30, -0.05, 0.00);  object(0x01BF, 180, 0, 171);
move(7.71, 1.18, 0.00);  object(0x01BF, 180, 0, 171);
move(7.88, 1.43, 0.00);  object(0x01BF, 180, 0, 171);
moveto(-1084.76, -1725.16, 3.82);  object(0x0F97, 0, 0, 349);
move(6.69, 1.00, 0.00);  object(0x0F97, 0, 0, 348);
move(6.72, 1.64, 0.00);  object(0x0F97, 0, 0, 348);
move(6.62, 1.42, 0.00);  object(0x0F97, 0, 0, 349);
move(6.70, 1.29, 0.00);  object(0x0F97, 0, 0, 349);
move(6.84, 1.19, 0.00);  object(0x0F97, 0, 0, 349);
move(6.64, 1.15, 0.00);  object(0x0F97, 0, 0, 349);
move(6.88, 0.74, 0.00);  object(0x0F97, 0, 0, 349);
move(6.83, 1.46, 0.00);  object(0x0F97, 0, 0, 349);
move(6.88, 1.27, 0.00);  object(0x0F97, 0, 0, 349);
move(-20.61, -2.27, -0.80);  object(0x0251, 0, 0, 353);
move(-13.06, -2.78, 0.00);  object(0x0251, 0, 0, 353);
move(-15.72, -23.33, 0.00);  object(0x0251, 290, 0, 343);
move(-11.70, 19.02, 0.00);  object(0x0251, 0, 0, 9);
moveto(-1084.59, -1721.43, 2.92);  object(0x01E0, 0, 0, 170);
move(8.68, 1.46, 0.00);  object(0x01E0, 0, 0, 170);
move(8.39, 1.99, -0.10);  object(0x01E0, 0, 0, 166);
move(8.33, 1.93, 0.00);  object(0x01E0, 0, 0, 167);
move(8.10, 1.34, 0.00);  object(0x01E0, 0, 0, 167);
move(8.18, 1.43, 0.00);  object(0x01E0, 0, 0, 172);
move(8.42, 1.29, 0.00);  object(0x01E0, 0, 0, 172);
move(8.61, 1.35, 0.00);  object(0x01E0, 0, 0, 172);
move(3.94, 0.71, 0.00);  object(0x01E0, 0, 0, 172);
moveto(-1023.50, -1703.91, 1.62);  object(0x0F36, 0, 0, 109);
move(-21.20, 3.81, -0.10);  object(0x0F36, 0, 0, 28);
move(-12.38, -3.14, 0.00);  object(0x0F36, 0, 0, 281);
move(68.71, 11.82, -0.02);  object(0x01BF, 270, 0, 259);
move(-1.44, 7.57, 0.00);  object(0x01BF, 270, 0, 259);
move(-1.46, 7.66, 0.00);  object(0x01BF, 270, 0, 259);
move(-1.42, 7.47, 0.00);  object(0x01BF, 270, 0, 259);
move(-1.49, 7.86, 0.00);  object(0x01BF, 270, 0, 259);
move(-1.49, 7.86, 0.00);  object(0x01BF, 270, 0, 259);
move(-1.49, 7.86, 0.00);  object(0x01BF, 270, 0, 259);
move(-1.48, 7.76, 0.00);  object(0x01BF, 270, 0, 259);
move(6.19, 1.17, 0.00);  object(0x01BF, 270, 0, 259);
move(1.48, -7.76, 0.00);  object(0x01BF, 270, 0, 259);
move(1.46, -7.66, 0.00);  object(0x01BF, 270, 0, 259);
move(1.48, -7.76, 0.00);  object(0x01BF, 270, 0, 259);
move(1.49, -7.86, 0.00);  object(0x01BF, 270, 0, 259);
move(1.44, -7.57, 0.00);  object(0x01BF, 270, 0, 259);
move(1.46, -7.66, 0.00);  object(0x01BF, 270, 0, 259);
move(1.48, -7.76, 0.00);  object(0x01BF, 270, 0, 259);
move(-4.86, -8.97, 0.00);  object(0x01BF, 270, 0, 259);
move(1.44, -7.57, 0.00);  object(0x01BF, 270, 0, 259);
move(1.46, -7.66, 0.00);  object(0x01BF, 270, 0, 259);
move(1.46, -7.66, 0.00);  object(0x01BF, 270, 0, 259);
move(1.48, -7.76, 0.00);  object(0x01BF, 270, 0, 259);
move(6.38, 1.21, 0.00);  object(0x01BF, 270, 0, 259);
move(1.44, -7.57, 0.00);  object(0x01BF, 270, 0, 259);
move(1.46, -7.66, 0.00);  object(0x01BF, 270, 0, 259);
move(-7.82, 6.21, 0.00);  object(0x01BF, 270, 0, 79);
move(1.51, -7.85, 0.00);  object(0x01BF, 270, 0, 79);
move(-6.69, -1.29, 0.00);  object(0x01BF, 270, 0, 79);
move(-1.51, 7.85, 0.00);  object(0x01BF, 270, 0, 79);
move(-1.26, 7.80, 0.00);  object(0x01BF, 270, 0, 79);
move(1.63, 96.29, 0.00);  object(0x01BF, 270, 0, 258);
move(1.73, -7.81, 0.00);  object(0x01BF, 270, 0, 258);
move(1.40, -7.68, 0.00);  object(0x01BF, 270, 0, 258);
move(1.65, -7.73, 0.00);  object(0x01BF, 270, 0, 258);
move(1.25, -7.71, 0.00);  object(0x01BF, 270, 0, 258);
move(1.37, -7.79, 0.00);  object(0x01BF, 270, 0, 258);
move(1.73, -7.81, 0.00);  object(0x01BF, 270, 0, 258);
move(1.42, -7.78, 0.00);  object(0x01BF, 270, 0, 258);
move(6.29, 1.39, 0.00);  object(0x01BF, 270, 0, 258);
move(-1.70, 7.71, 0.00);  object(0x01BF, 270, 0, 258);
move(-1.75, 7.91, 0.00);  object(0x01BF, 270, 0, 258);
move(-1.68, 7.62, 0.00);  object(0x01BF, 270, 0, 258);
move(-1.66, 7.52, 0.00);  object(0x01BF, 270, 0, 258);
move(-1.70, 7.71, 0.00);  object(0x01BF, 270, 0, 258);
move(-1.68, 7.62, 0.00);  object(0x01BF, 270, 0, 258);
move(-1.72, 7.81, 0.00);  object(0x01BF, 270, 0, 258);
move(14.95, -53.26, 3.20);  object(0x01BF, 180, 0, 258);
move(-1.70, 7.74, 0.00);  object(0x01BF, 180, 0, 258);
move(-1.63, 7.65, 0.00);  object(0x01BF, 180, 0, 258);
move(-1.67, 7.63, 0.00);  object(0x01BF, 180, 0, 258);
move(-1.71, 7.63, 0.00);  object(0x01BF, 180, 0, 258);
move(-1.76, 7.82, 0.00);  object(0x01BF, 180, 0, 258);
move(-1.60, 7.45, 0.00);  object(0x01BF, 180, 0, 258);
move(-1.70, 7.63, 0.00);  object(0x01BF, 180, 0, 258);
move(-4.62, 3.27, 0.00);  object(0x01BF, 180, 0, 170);
move(-7.56, -1.54, 0.00);  object(0x01BF, 180, 0, 169);
move(-11.51, -6.16, 0.00);  object(0x01BF, 180, 0, 78);
move(1.55, -7.08, 0.00);  object(0x01BF, 180, 0, 77);
move(1.38, -7.54, 0.00);  object(0x01BF, 180, 0, 82);
move(1.34, -7.58, 0.00);  object(0x01BF, 180, 0, 79);
move(1.44, -7.59, 0.00);  object(0x01BF, 180, 0, 79);
move(1.45, -7.69, 0.00);  object(0x01BF, 180, 0, 79);
move(1.45, -7.80, 0.00);  object(0x01BF, 180, 0, 79);
moveto(-969.19, -1691.75, 4.72);  object(0x01BF, 0, 0, 349);
move(-7.59, -1.60, 0.00);  object(0x01BF, 0, 0, 350);
move(1.80, -31.26, 0.00);  object(0x01BF, 0, 0, 166);
move(-13.73, -2.84, 0.00);  object(0x01BF, 0, 0, 166);
move(-2.02, -4.64, 0.00);  object(0x01BF, 0, 0, 79);
move(1.43, -7.60, 0.00);  object(0x01BF, 0, 0, 79);
move(1.48, -7.79, 0.00);  object(0x01BF, 0, 0, 79);
move(4.54, -2.86, 0.00);  object(0x01BF, 0, 0, 351);
move(6.62, 1.16, 0.00);  object(0x01BF, 0, 0, 351);
move(5.05, 1.31, 0.00);  object(0x01BF, 0, 0, 351);
move(2.91, 4.44, 0.00);  object(0x01BF, 0, 0, 259);
move(-1.53, 7.78, 0.00);  object(0x01BF, 0, 0, 259);
move(-1.54, 7.67, 0.00);  object(0x01BF, 0, 0, 259);
move(-15.60, -2.62, 3.40);  object(0x01BF, 270, 0, 168);
move(7.78, 1.58, 0.00);  object(0x01BF, 270, 0, 168);
move(4.07, 0.71, 0.00);  object(0x01BF, 270, 0, 168);
move(-10.34, -8.60, 0.00);  object(0x01BF, 270, 0, 349);
move(7.65, 1.61, 0.00);  object(0x01BF, 270, 0, 349);
move(3.94, 1.12, 0.00);  object(0x01BF, 270, 0, 349);
move(1.47, -6.62, 0.00);  object(0x01BF, 270, 0, 349);
move(-7.78, -1.53, 0.00);  object(0x01BF, 270, 0, 349);
move(-4.12, -0.88, 0.00);  object(0x01BF, 270, 0, 349);
move(0.72, -4.08, 0.00);  object(0x01BF, 270, 0, 350);
move(7.27, 1.46, 0.00);  object(0x01BF, 270, 0, 350);
move(4.89, 1.05, 0.00);  object(0x01BF, 270, 0, 350);
moveto(-976.39, -1748.57, 4.38);  object(0x0F91, 0, 0, 79);
move(-0.26, 0.70, 0.00);  object(0x0F91, 0, 0, 79);
move(-0.24, 0.64, 0.00);  object(0x0F91, 0, 0, 79);
move(-10.73, 3.90, 0.00);  object(0x0F91, 0, 0, 171);
move(0.36, 0.13, 0.00);  object(0x0F91, 0, 0, 171);
move(0.53, 0.19, 0.00);  object(0x0F91, 0, 0, 171);
move(14.18, -3.90, 0.10);  object(0x0114, 0, 0, 1);
move(-1.53, -0.49, 0.00);  object(0x0114, 0, 0, 1);
move(-1.65, -0.72, 0.00);  object(0x0114, 0, 0, 1);
move(-1.57, -0.15, 0.00);  object(0x0114, 0, 0, 1);
move(-1.28, -0.56, 0.00);  object(0x0114, 0, 0, 1);
move(-7.92, 1.29, 0.00);  object(0x0117, 0, 0, 70);
move(-0.41, 1.13, 0.00);  object(0x0117, 0, 0, 70);
move(0.27, 1.15, 0.00);  object(0x0117, 0, 0, 70);
move(-0.39, 0.92, 0.00);  object(0x0117, 0, 0, 70);
move(-0.34, 0.94, 0.10);  object(0x0119, 0, 0, 70);
move(-0.27, 0.75, 0.00);  object(0x0119, 0, 0, 70);
move(0.12, 1.00, 0.00);  object(0x0119, 0, 0, 70);
move(-0.07, 1.04, 0.00);  object(0x0119, 0, 0, 70);
move(6.59, -9.06, 0.60);  object(0x024B, 0, 0, 6);
move(-1.94, -0.30, 0.00);  object(0x024B, 0, 0, 6);
move(-1.54, -0.26, 0.00);  object(0x024B, 0, 0, 6);
moveto(-998.43, -1632.68, 3.92);  object(0x01BF, 40, 0, 351);
move(-0.62, 3.79, 4.30);  object(0x01BF, 45, 0, 350);
move(-0.97, 5.44, 2.20);  object(0x01BF, 90, 0, 350);
move(-1.02, 5.81, 0.00);  object(0x01BF, 90, 0, 169);
move(-1.21, 6.35, 0.00);  object(0x01BF, 90, 0, 168);
move(5.51, 0.54, 1.80);  object(0x01BF, 55, 0, 80);
move(4.30, 0.79, 3.00);  object(0x01BF, 55, 0, 80);
move(4.75, 0.78, 3.40);  object(0x01BF, 55, 0, 80);
move(4.83, 0.81, 3.60);  object(0x01BF, 55, 0, 80);
move(5.16, 0.86, 1.40);  object(0x01BF, 90, 0, 259);
move(1.46, -7.56, 0.00);  object(0x01BF, 90, 0, 259);
move(6.58, 1.27, 0.00);  object(0x01BF, 90, 0, 259);
move(-1.52, 7.85, 0.00);  object(0x01BF, 90, 0, 259);
move(-1.48, 7.66, 0.00);  object(0x01BF, 90, 0, 259);
move(6.38, 1.24, 0.00);  object(0x01BF, 90, 0, 259);
move(1.50, -7.75, 0.00);  object(0x01BF, 90, 0, 259);
move(1.48, -7.66, 0.00);  object(0x01BF, 90, 0, 259);
move(1.50, -7.75, 0.00);  object(0x01BF, 90, 0, 259);
move(1.46, -7.56, 0.00);  object(0x01BF, 90, 0, 259);
move(-7.63, 8.01, 0.00);  object(0x01BF, 90, 0, 79);
move(1.83, -9.02, 0.00);  object(0x01BF, 90, 0, 79);
move(-1.31, 6.47, 0.00);  object(0x01BF, 90, 0, 79);
move(-6.71, 31.66, 0.00);  object(0x01BF, 90, 0, 76);
move(-1.97, 7.65, 0.00);  object(0x01BF, 90, 0, 76);
move(-1.95, 7.55, 0.00);  object(0x01BF, 90, 0, 76);
move(24.07, -51.04, 0.00);  object(0x01BF, 90, 0, 259);
move(-1.47, 7.76, 0.00);  object(0x01BF, 90, 0, 259);
move(-1.45, 7.66, 0.00);  object(0x01BF, 90, 0, 259);
move(-1.47, 7.76, 0.00);  object(0x01BF, 90, 0, 259);
move(-1.45, 7.66, 0.00);  object(0x01BF, 90, 0, 259);
move(-8.38, 6.25, 0.00);  object(0x01BF, 90, 0, 259);
move(-1.63, 7.83, 0.00);  object(0x01BF, 90, 0, 259);
move(-1.95, 7.37, 0.00);  object(0x01BF, 90, 0, 259);
move(6.57, 1.25, 0.00);  object(0x01BF, 90, 0, 259);
move(1.47, -7.76, 0.00);  object(0x01BF, 90, 0, 259);
move(1.84, -7.59, 0.00);  object(0x01BF, 90, 0, 259);
move(-2.30, 12.52, -0.72);  object(0x0FA5, 0, 0, 80);
move(-9.38, -1.68, -0.30);  object(0x0FA5, 0, 0, 80);
move(10.67, -19.12, 0.20);  object(0x0FA5, 0, 0, 80);
move(-8.22, -1.47, 0.00);  object(0x0FA5, 0, 0, 80);
move(13.42, -20.40, 0.20);  object(0x0FA5, 0, 0, 80);
move(-8.34, -1.49, -0.20);  object(0x0FA5, 0, 0, 80);
moveto(-954.05, -1697.78, 3.92);  object(0x0E36, 0, 0, 126);
move(-58.37, 47.00, -12.50);  object(0x0F35, 0, 0, 63);
move(1.39, -7.22, 3.60);  object(0x0F35, 0, 0, 297);
move(13.72, 5.91, 7.40);  object(0x0F35, 0, 0, 349);
move(2.66, -14.10, 0.00);  object(0x0F35, 0, 0, 349);
move(1.61, -12.69, 0.00);  object(0x0F35, 0, 0, 349);
move(5.35, 1.05, 0.00);  object(0x0F35, 0, 0, 349);
move(-2.17, 12.57, 0.00);  object(0x0F35, 0, 0, 349);
move(-2.63, 14.11, 0.00);  object(0x0F35, 0, 0, 349);
move(17.95, 0.69, 0.30);  object(0x0CCD, 0, 0, 71);
move(-1.54, 7.11, 0.00);  object(0x0CCD, 0, 0, 71);
move(-1.30, 6.14, 0.00);  object(0x0CCD, 0, 0, 76);
move(4.70, -21.11, 0.00);  object(0x0CCD, 0, 0, 76);
move(2.09, -8.77, 0.00);  object(0x0CCD, 0, 0, 76);
move(1.43, -8.02, 0.00);  object(0x0CCD, 0, 0, 76);
move(1.76, -6.79, 0.00);  object(0x0CCD, 0, 0, 76);
setfloat(0x08e2d800, -972.46, -1743.29, 2.68);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1, 0x1);
setshort(0x08e2d826, 0x11F);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, -982.80, -1746.63, 2.68);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1, 0x1);
setshort(0x08e2d826, 0x118);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, -981.76, -1733.64, 2.68);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1, 0x1);
setshort(0x08e2d826, 0x114);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
teleport(-1090.09, -1601.44, 2.74);

#cheat Cliff Side Home V2
//ID: 14674
//Score: 37
//Author: raigov222
//Category: Location Mods
//Description: The second version of my cliff side house. Mainly visual and pmg improvments.
//Posibbly my last code. enjoy =)
//--WARNING--This is a very large construction. Haveing other constuctions active may crash your game.
//Image: none
//Time: 14/07/2006 06:35:46
//Working: Yes
moveto(1433, -257, 50); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
moveto(1460.83, -243.15, 50.80);  object(0x01F1, 270, 0, 270);
move(0.00, -16.10, 0.00);  object(0x01F1, 270, 0, 270);
move(0.00, 8.20, 0.00);  object(0x01F1, 270, 0, 270);
move(-9.51, -9.15, 0.00);  object(0x01F1, 270, 0, 0);
move(8.59, 26.41, 0.00);  object(0x01F1, 270, 0, 180);
move(0.70, -0.23, -0.20);  object(0x020F, 0, 0, 180);
move(-7.10, -0.02, 0.00);  object(0x020F, 0, 0, 180);
move(7.07, -5.98, 0.00);  object(0x020F, 0, 0, 270);
move(0.05, -6.70, 0.00);  object(0x020F, 0, 0, 270);
move(0.05, -6.60, 0.00);  object(0x020F, 0, 0, 270);
move(-0.03, -6.50, 0.00);  object(0x020F, 0, 0, 270);
move(-7.58, -0.07, 0.00);  object(0x020F, 0, 0, 0);
move(1.17, 3.16, 0.00);  object(0x0257, 0, 0, 181);
move(0.18, 19.78, 0.00);  object(0x0257, 0, 0, 181);
move(2.78, 2.28, -0.10);  object(0x0257, 0, 0, 270);
move(-0.14, -24.72, 0.00);  object(0x0257, 0, 0, 90);
moveto(1459.54, -240.85, 50.81);  object(0x0ECF, 0, 0, 270);
move(0.01, -0.80, 0.00);  object(0x0ECF, 0, 0, 270);
move(-0.00, -0.40, -0.40);  object(0x0ECB, 0, 270, 270);
move(-0.60, -0.01, 0.00);  object(0x0ECB, 0, 270, 270);
move(-0.02, 1.60, 0.00);  object(0x0ECB, 0, 270, 270);
move(0.59, 0.01, 0.00);  object(0x0ECB, 0, 270, 270);
move(-1.37, -0.32, 0.50);  object(0x0F03, 90, 0, 60);
move(0.95, -0.09, 0.00);  object(0x0F74, 90, 0, 55);
move(0.06, -0.70, 0.00);  object(0x0F75, 0, 0, 310);
move(-0.96, -0.08, 0.00);  object(0x0F76, 0, 0, 310);
moveto(1456.97, -241.15, 50.16);  object(0x1004, 0, 0, 130);
moveto(1433.01, -236.68, 54.50);  object(0x01BF, 270, 0, 180);
move(7.93, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(7.93, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(7.93, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(0.00, -6.7, 0.00);  object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(0.00, -6.7, 0.00);  object(0x01BF, 270, 0, 180);
move(7.93, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(15.86, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(0.00, -6.7, 0.00);  object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
moveto(1432.79, -256.87, 52.18);  object(0x0F95, 0, 0, 0);
move(7.30, -0.04, 0.00);  object(0x0F8B, 0, 0, 0);
move(8.90, -0.05, 0.00);  object(0x0F96, 0, 0, 0);
move(0.10, 19.79, 0.00);  object(0x0F98, 0, 0, 180);
move(-7.10, 0.04, 0.00);  object(0x0F99, 0, 0, 180);
move(-9.18, 0.03, 0.00);  object(0x0F9A, 0, 0, 180);
//Seperators
moveto(1438.25, -237.43, 50.38);  object(0x01BF, 0, 270, 90);
move(-1.90, 0.01, 0.00);  object(0x01BF, 0, 270, 90);
move(9.05, -0.01, 0.00);  object(0x01BF, 0, 270, 90);
move(-0.10, -19.37, 0.00);  object(0x01BF, 0, 270, 270);
move(-1.50, 0.01, 0.00);  object(0x01BF, 0, 270, 270);
move(-7.30, 0.03, 0.00);  object(0x01BF, 0, 270, 270);
moveto(1433.25, -260.68, 51.10);  object(0x01BF, 0, 0, 0);
move(8.00, 0.05, 0.00);  object(0x01BF, 0, 0, 0);
move(7.30, -0.13, 0.00);  object(0x01BF, 0, 0, 0);
moveto(1429.14, -237.04, 50.94);  object(0x01BF, 0, 0, 90);
move(3.93, 3.77, 0.00);  object(0x01BF, 0, 0, 180);
move(8.00, -0.00, 0.00);  object(0x01BF, 0, 0, 180);
move(8.00, -0.00, 0.00);  object(0x01BF, 0, 0, 180);
move(3.89, -3.96, 0.00);  object(0x01BF, 0, 0, 270);
move(0.08, -13.10, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -8.00, 0.00);  object(0x01BF, 0, 0, 270);
move(-3.94, -3.88, 0.00);  object(0x01BF, 0, 0, 0);
move(-7.90, -0.01, 0.00);  object(0x01BF, 0, 0, 0);
move(-8.00, 0.00, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.09, 3.86, 0.00);  object(0x01BF, 0, 0, 90);
move(0.02, 13.30, 0.00);  object(0x01BF, 0, 0, 90);
moveto(1433.21, -262.43, 52.01);  object(0x045C, 0, 0, 269);
move(8.01, -0.00, 0.00);  object(0x045C, 0, 0, 269);
move(8.01, -0.00, 0.00);  object(0x045C, 0, 0, 269);
moveto(1433.38, -262.40, 48.88);  object(0x045C, 180, 0, 271);
move(8.01, -0.00, 0.00);  object(0x045C, 180, 0, 271);
move(8.01, -0.00, 0.00);  object(0x045C, 180, 0, 271);
moveto(1428.96, -237.21, 51.86);  object(0x045C, 0, 0, 359);
move(0.00, 0.00, -3.13);  object(0x045C, 180, 0, 1);
move(0.00, -8.01, 0.00);  object(0x045C, 180, 0, 1);
move(0.00, 0.00, 3.13);  object(0x045C, 0, 0, 359);
moveto(1428.89, -258.33, 52.09);  object(0x045C, 0, 0, 359);
move(0.00, 0.00, -3.13);  object(0x045C, 180, 0, 1);
moveto(1449.07, -233.08, 51.78);  object(0x045C, 0, 0, 89);
move(0.00, 0.00, -3.13);  object(0x045C, 180, 0, 91);
move(-8.01, 0.00, 0.00);  object(0x045C, 180, 0, 91);
move(-8.01, 0.00, 0.00);  object(0x045C, 180, 0, 91);
move(0.00, 0.00, 3.13);  object(0x045C, 0, 0, 89);
move(8.01, 0.00, 0.00);  object(0x045C, 0, 0, 89);
moveto(1453.14, -237.13, 51.81);  object(0x045C, 0, 0, 179);
move(0.08, -13.25, 0.00);  object(0x045C, 0, 0, 179);
move(0.00, -7.91, 0.00);  object(0x045C, 0, 0, 179);
move(0.00, 0.00, -3.13);  object(0x045C, 180, 0, 181);
move(0.00, 8.01, 0.00);  object(0x045C, 180, 0, 181);
move(0.00, 13.25, 0.00);  object(0x045C, 180, 0, 181);
moveto(1452.41, -248.22, 54.61);  object(0x01C3, 270, 10, 180);
move(-1.50, -0.01, -0.50);  object(0x01C3, 270, 20, 180);
move(-1.40, -0.01, -0.50);  object(0x01C3, 270, 20, 180);
move(-1.40, -0.01, -0.50);  object(0x01C3, 270, 20, 180);
move(-1.20, -0.01, -0.50);  object(0x01C3, 270, 20, 180);
move(-1.30, -0.01, -0.50);  object(0x01C3, 270, 20, 180);
move(-1.30, -0.01, -0.50);  object(0x01C3, 270, 20, 180);
move(-1.40, -0.01, -0.50);  object(0x01C3, 270, 20, 180);
move(-1.50, -0.01, -0.50);  object(0x01C3, 270, 20, 180);
move(-1.50, -0.01, -0.50);  object(0x01C3, 270, 20, 180);
move(-1.30, -0.01, -0.50);  object(0x01C3, 270, 20, 180);
moveto(1429.32, -234.66, 55.41);  object(0x01F1, 270, 0, 90);
move(0.10, -15.60, 0.00);  object(0x01F1, 270, 0, 90);
move(0.79, -9.58, 0.00);  object(0x01F1, 270, 0, 0);
move(20.40, 0.04, 0.00);  object(0x01F1, 270, 0, 0);
move(-10.20, -0.02, 0.00);  object(0x01F1, 270, 0, 0);
move(19.91, 1.04, 0.00);  object(0x01F1, 270, 0, 270);
move(-0.02, 15.30, 0.00);  object(0x01F1, 270, 0, 270);
move(-0.85, 9.68, 0.00);  object(0x01F1, 270, 0, 180);
move(-20.60, -0.17, 0.00);  object(0x01F1, 270, 0, 180);
move(10.30, 0.08, 0.00);  object(0x01F1, 270, 0, 180);
moveto(1429.39, -243.63, 54.63);  object(0x01EF, 0, 0, 90);
move(30.85, -6.39, 0.00);  object(0x01EF, 0, 0, 270);
moveto(1425.72, -251.44, 49.95);  object(0x01BF, 90, 0, 90);
move(-6.67, 0.02, -0.60);  object(0x01BF, 80, 0, 90);
moveto(1429.08, -257.26, 50.93);  object(0x01BF, 0, 0, 90);
move(-0.05, 2.14, 2.58);  object(0x1002, 0, 0, 145);
move(-0.05, 7.50, 0.00);  object(0x1002, 0, 0, 210);
moveto(1433.08, -240.78, 50.14);  object(0x0239, 0, 0, 180);
move(8.50, -0.04, 0.00);  object(0x0239, 0, 0, 0);
move(7.00, -0.03, 0.00);  object(0x0239, 0, 0, 0);
move(0.69, -12.48, 0.00);  object(0x0239, 0, 0, 180);
move(-9.40, 0.05, 0.00);  object(0x0239, 0, 0, 0);
move(-6.60, -0.01, 0.00);  object(0x0239, 0, 0, 180);
moveto(1437.92, -253.20, 51.34);  object(0x0D0A, 0, 0, 180);
move(-2.80, 0.00, 0.00);  object(0x0D0A, 0, 0, 45);
move(15.90, -0.00, 0.00);  object(0x0D0A, 0, 0, 45);
move(-4.25, 12.22, 0.00);  object(0x0D0A, 0, 0, 220);
move(-8.24, 0.03, 0.00);  object(0x0D0A, 0, 0, 345);
move(-3.60, 0.22, 0.00);  object(0x0D0A, 0, 0, 345);
move(2.54, 3.95, -0.10);  object(0x0251, 0, 0, 180);
move(11.02, -9.82, 3.24);  object(0x01F0, 0, 0, 180);
move(4.10, -0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(-7.94, -3.51, 0.00);  object(0x01F0, 0, 0, 90);
move(0.01, 3.31, 0.00);  object(0x01F0, 0, 0, 90);
move(4.77, -6.98, 0.00);  object(0x01F0, 0, 0, 0);
move(-4.20, -0.02, 0.00);  object(0x01F0, 0, 0, 0);
moveto(1419.02, -271.36, 48.01);  object(0x01BF, 270, 0, 180);
move(8.00, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(0.00, -6.66, 0.00);  object(0x01BF, 270, 0, 180);
move(-8.00, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(12.01, 6.64, -3.10);  object(0x01BF, 180, 270, 270);
move(0.02, -6.60, 0.00);  object(0x01BF, 180, 270, 270);
move(-3.24, -3.43, 0.00);  object(0x01BF, 180, 270, 0);
move(-6.70, -0.03, 0.00);  object(0x01BF, 180, 270, 0);
moveto(1422.41, -301.09, 48.78);  object(0x01BF, 255, 0, 14);
move(1.30, 5.17, 2.00);  object(0x01BF, 245, 0, 14);
move(1.21, 4.84, 2.90);  object(0x01BF, 235, 0, 14);
setfloat(0x08e2d800, 1431, -256, 55.70);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
setfloat(0x08E2E400, 1433, -256, 55.70);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x124);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, 1435, -256, 55.70);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
setfloat(0x08e2d8c0, 1437, -256, 55.70);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, 1439, -256, 55.70);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, 1441, -256, 55.70);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, 1443, -256, 55.70);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, 1445, -256, 55.70);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
setfloat(0x08e2daa0, 1447, -256, 55.70);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
setfloat(0x08e2db00, 1449, -256, 55.70);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
setfloat(0x08E2DB60, 1451, -256, 55.70);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
setfloat(0x08E2DBC0, 1453, -256, 55.70);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
setfloat(0x08E2DC20, 1455, -256, 55.70);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
setfloat(0x08E2DC80, 1457, -256, 55.70);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
setfloat(0x08E2DCE0, 1431, -236, 55.70);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x10f);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
setfloat(0x08E2DD40, 1433, -236, 55.70);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
setfloat(0x08E2DDA0, 1435, -236, 55.70);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
setfloat(0x08E2DE00, 1437, -236, 55.70);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
setfloat(0x08E2DE60, 1439, -236, 55.70);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
setfloat(0x08E2DEC0, 1441, -236, 55.70);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
setfloat(0x08E2DF20, 1443, -236, 55.70);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0xff, 0xff);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
setfloat(0x08E2DF80, 1445, -236, 55.70);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0xff, 0xff);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
setfloat(0x08E2DFE0, 1447, -236, 55.70);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0xff, 0xff);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
setfloat(0x08E2E040, 1449, -236, 55.70);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0xff, 0xff);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
setfloat(0x08E2E0A0, 1451, -236, 55.70);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
setfloat(0x08E2E100, 1453, -236, 55.70);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0xff, 0xff);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
setfloat(0x08E2E160, 1455, -236, 55.70);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
setfloat(0x08E2E1C0, 1457, -236, 55.70);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
setfloat(0x08E2E220, 1431, -242, 55.70);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0xff, 0xff);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
setfloat(0x08E2E280, 1431, -244, 55.70);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0xff, 0xff);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
setfloat(0x08E2E2E0, 1431, -246, 55.70);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0xff, 0xff);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
setfloat(0x08E2E340, 1431, -248, 55.70);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0xff, 0xff);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
setfloat(0x08E2E3A0, 1431, -250, 55.70);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0xff, 0xff);
setshort(0x08E2E3C6, 0x122);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
setfloat(0x08E2E460, 1431, -252, 55.70);
setint(0x08E2E474, 0);
setchar(0x08E2E47C, 0xff, 0xff);
setshort(0x08E2E486, 0x22e);
setchar(0x08E2E492, 0x0f);
setchar(0x08E2E493, 0x00);
setchar(0x08E2D4B0, 0xff);
setfloat(0x08E2E4C0, 1431, -254, 55.70);
setint(0x08E2E4D4, 0);
setchar(0x08E2E4DC, 0xff, 0xff);
setshort(0x08E2E4E6, 0x24b);
setchar(0x08E2E4F2, 0x0f);
setchar(0x08E2E4F3, 0x00);
setchar(0x08E2D510, 0xff);
setint(0x08b89acc, 99999999);
setint(0x08b89ad0, 99999999);
setchar(0x08E4Eaf4, 189);
setchar(0x08E4Eaf4 + 0x18, 0x01);
setfloat(0x08E4Eaf8, 1401, -230, 51, 315);
setchar(0x08E4Eac8, 185);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 1402, -235, 51, 315);
setchar(0x08E4E9EC, 137);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 1403, -240, 51, 315);
setchar(0x08E4E9c0, 142);
setchar(0x08E4E9c0 + 0x18, 0x01);
setfloat(0x08E4E9c4, 1403, -245, 51, 315);
setchar(0x08E4Eba4, 205);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 1402, -250, 51, 315);
setchar(08E4Ecd8, 213);
setchar(08E4Ecd8 + 0x18, 0x01);
setfloat(08E4Ecdc, 1420, -271, 50, 67);
setchar(0x945cdf2, 0x4);
setchar(0x945cdf1, 0x50);
setchar(0x945cdf0, 0x52);
setshort(0x9444cd0, 250);
setfloat(0x9444ccc, 0.9489);
setfloat(0x945cd70, 3700);
setfloat(0x945cd78, 0.925);
setfloat(0x945ce30, 0.2875);
setfloat(0x945ce34, -0.275);
setfloat(0x945ce38, 0.4125);
setfloat(0x945cdfc, 1.55);
setfloat(0x945ce00, 1.55);
setfloat(0x945cdf4, 0.00363);
setfloat(0x945ce10, 0.7125);
setfloat(0x945ce14, 0);
setfloat(0x945ce18, 42.5);
setfloat(0x945ce28, 1.125);
setfloat(0x945ce2c, 0.11875);
setfloat(0x945ce44, 0.15);
setfloat(0x945ce3c, 0.4125);
setfloat(0x945cd90, 0);
setfloat(0x945cd94, 0.1);
setfloat(0x945cd98, -0.425);
setchar(0x945cda0, 10);
setfloat(0x945ce1c, 0.9125);
setfloat(0x945ce20, 0.45375);
setfloat(0x945cd7c, 0.007);
sethex(0x945ce40, 0x83, 0x81, 0x00, 0x07);
sethex(0x944fb40, 0x00, 0x00, 0x00);
sethex(0x944fb3c, 0xFF, 0x00, 0x00);
setint(0x8E38A38, 185);
setchar(0x8E38A5C, 120, 119);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(0x945a1e2, 0x5);
setchar(0x945a1e1, 0x50);
setchar(0x945a1e0, 0x34);
setshort(0x94409a0, 250);
setfloat(0x944099c, 0.90);
setfloat(0x945a160, 900);
setfloat(0x945a168, 1.35);
setfloat(0x945a220, 0.25);
setfloat(0x945a224, -0.225);
setfloat(0x945a228, 0.5);
setfloat(0x945a1ec, 1.4);
setfloat(0x945a1f0, 1.4);
setfloat(0x945a1e4, 0.00462);
setfloat(0x945a200, 0.51);
setfloat(0x945a204, 0);
setfloat(0x945a208, 40);
setfloat(0x945a218, 2.15625);
setfloat(0x945a21c, 0.19);
setfloat(0x945a234, 0.37);
setfloat(0x945a22c, 0.6);
setfloat(0x945a180, 0);
setfloat(0x945a184, -0.29999);
setfloat(0x945a188, -0.475);
setchar(0x945a190, 70);
setfloat(0x945a20c, 0.95625);
setfloat(0x945a210, 0.5);
setfloat(0x945a16c, 1.02857);
sethex(0x945a230, 0x03, 0x81, 0x20, 0x04);
sethex(0x944fb20, 0xCA, 0xDA, 0xCF);
sethex(0x944fb50, 0xCA, 0xDA, 0xCF);
setint(0x8E38A38, 142);
setchar(0x8E38A5C, 112, 124);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(0x945d1b2, 0x6);
setchar(0x945d1b1, 0x50);
setchar(0x945d1b0, 0x52);
setshort(0x9445310, 250);
setfloat(0x944530c, 0.725);
setfloat(0x945d130, 1400);
setfloat(0x945d138, 1.4);
setfloat(0x945d1f0, 0.2);
setfloat(0x945d1f4, -0.0125);
setfloat(0x945d1f8, 0.4);
setfloat(0x945d1bc, 1.2);
setfloat(0x945d1c0, 1.2);
setfloat(0x945d1b4, 0.0065);
setfloat(0x945d1d0, 0.45);
setfloat(0x945d1d4, 0);
setfloat(0x945d1d8, 40);
setfloat(0x945d1e8, 1.1);
setfloat(0x945d1ec, 0.075);
setfloat(0x945d204, 0.2);
setfloat(0x945d1fc, 0.3);
setfloat(0x945d150, 0);
setfloat(0x945d154, 0.3);
setfloat(0x945d158, -0.29999);
setchar(0x945d160, 75);
setfloat(0x945d1dc, 0.8);
setfloat(0x945d1e0, 0.45);
setfloat(0x945d13c, 0.85714);
sethex(0x945d200, 0x02, 0x81, 0x00, 0x06);
sethex(0x944fb34, 0x00, 0x00, 0x00);
sethex(0x944fb48, 0x00, 0x00, 0x00);
setint(0x8E38A38, 189);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(0x9459d32, 0x5);
setchar(0x9459d31, 0x50);
setchar(0x9459d30, 0x34);
setshort(0x94401d0, 250);
setfloat(0x94401cc, 1.6);
setfloat(0x9459cb0, 2500);
setfloat(0x9459cb8, 0.75);
setfloat(0x9459d70, 0.35);
setfloat(0x9459d74, -.7);
setfloat(0x9459d78, 0.5);
setfloat(0x9459d3c, 1);
setfloat(0x9459d40, 1);
setfloat(0x9459d34, 0.001);
setfloat(0x9459d50, 0.5);
setfloat(0x9459d54, 0);
setfloat(0x9459d58, 25);
setfloat(0x9459d68, 1.5);
setfloat(0x9459d6c, 1);
setfloat(0x9459d84, 0.28);
setfloat(0x9459d7c, 0);
setfloat(0x9459cd0, 0);
setfloat(0x9459cd4, 0);
setfloat(0x9459cd8, -1);
setchar(0x9459ce0, 80);
setfloat(0x9459d5c, 0.92);
setfloat(0x9459d60, 0.5);
setfloat(0x9459cbc, 0);
sethex(0x9459d80, 0x83, 0xc1, 0x00, 0x04);
sethex(0x944fb58, 0x00, 0x00, 0x00);
sethex(0x944fb48, 0xFF, 0xAA, 0x01);
setint(0x8E38A38, 137);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(0x945d482, 0x5);
setchar(0x945d481, 0x50);
setchar(0x945d480, 0x52);
setshort(0x9446c10, 255);
setfloat(0x9446c0c, 0.67);
setfloat(0x945d400, 500);
setfloat(0x945d408, 1.6);
setfloat(0x945d4c0, 0.15);
setfloat(0x945d4c4, -0.15999);
setfloat(0x945d4c8, 0.5);
setfloat(0x945d48c, 0.97867);
setfloat(0x945d490, 0.97867);
setfloat(0x945d484, 0.004);
setfloat(0x945d4a0, 0.5);
setfloat(0x945d4a4, 0);
setfloat(0x945d4a8, 35);
setfloat(0x945d4b8, 0.85);
setfloat(0x945d4bc, 0.15);
setfloat(0x945d4d4, 0);
setfloat(0x945d4cc, 0);
setfloat(0x945d420, 0);
setfloat(0x945d424, 0.05);
setfloat(0x945d428, -0.08999);
setchar(0x945d430, 103);
setfloat(0x945d4ac, 0.9);
setfloat(0x945d4b0, 0.48);
setfloat(0x945d40c, 0.6);
sethex(0x945d4d0, 0x02, 0x01, 0x01, 0x00);
sethex(0x944fb28, 0x6D, 0xFF, 0x00);
sethex(0x944fb2c, 0x77, 0xFF, 0x00);
setfloat(0x945d404, 850);
setint(0x8E38A38, 205);
sethex(0x8E38A5E, 0x01, 0x00);
off();

#cheat HCH V.2 - Hidden Cave Hideout Version 2
//ID: 14653
//Score: 81
//Author: Mathijsjuh332
//Category: Location Mods
//Description: Now bigger, better and more stuff. Just check the video!!!!! You will spawn into the cave. If you want to get out just teleport to somewhere else.
//Have Fun!!!
//
//Image: http://file01.uploaddump.nl/~file01/uploads/kkpemwmeopeca-video2.gif
//Time: 13/07/2006 14:35:45
//Working: Yes
moveto(1552.47, -211.16, 41.74);  object(0x01BF, 0, 0, 292);
move(2.98, 7.42, 0.00);  object(0x01BF, 0, 0, 292);
move(-5.09, -12.34, -0.10);  object(0x01BF, 0, 0, 292);
move(7.11, 16.83, 0.00);  object(0x01BF, 0, 0, 293);
move(-4.87, -11.68, 6.80);  object(0x01BF, 0, 0, 292);
move(3.00, 7.44, 0.00);  object(0x01BF, 0, 0, 292);
move(1.89, 4.31, 0.00);  object(0x01BF, 0, 0, 292);
move(-7.04, -16.94, 0.00);  object(0x01BF, 0, 0, 292);
move(0.00, 0.00, 6.80);  object(0x01BF, 0, 0, 292);
move(2.55, 5.10, 0.00);  object(0x01BF, 0, 0, 292);
move(2.85, 7.29, 0.00);  object(0x01BF, 0, 0, 292);
move(1.85, 4.44, 0.00);  object(0x01BF, 0, 0, 292);
move(-8.95, -20.62, -0.20);  object(0x01BF, 0, 0, 291);
move(0.00, 0.00, -6.80);  object(0x01BF, 0, 0, 291);
move(0.00, 0.00, -1.80);  object(0x01BF, 0, 0, 291);
move(11.51, 25.09, 8.80);  object(0x01BF, 0, 0, 301);
move(-0.02, 0.01, -6.70);  object(0x01BF, 0, 0, 301);
move(0.00, 0.00, -6.80);  object(0x01BF, 0, 0, 301);
move(-11.51, -25.06, 0.00);  object(0x01BF, 0, 0, 291);
move(3.92, 9.27, 8.20);  object(0x01BF, 0, 0, 293);
move(-1.39, -3.21, 0.00);  object(0x01BF, 0, 0, 293);
move(4.30, 10.56, 0.00);  object(0x01BF, 0, 0, 293);
move(1.79, 4.13, 0.00);  object(0x01BF, 0, 0, 293);
move(-8.39, -20.23, 0.00);  object(0x01BF, 0, 0, 291);
move(49.08, -28.52, -24.24);  object(0x01F0, 0, 0, 310);
move(4.61, 5.30, 0.00);  object(0x01F0, 0, 0, 310);
move(-2.33, -2.62, 0.00);  object(0x01F0, 0, 0, 310);
move(17.74, -11.23, -31.92);  object(0x021C, 0, 0, 139);
move(-55.47, 46.50, 45.70);  object(0x025B, 0, 0, 33);
move(-1.69, -2.85, 0.00);  object(0x025B, 0, 0, 209);
move(-0.63, -5.11, 0.40);  object(0x0271, 350, 0, 196);
move(6.17, 10.81, 0.00);  object(0x0271, 0, 350, 354);
move(37.57, -32.33, -13.90);  object(0x0271, 350, 0, 317);
move(-6.51, -7.52, 0.00);  object(0x0271, 350, 0, 305);
move(1.35, 1.90, 0.70);  object(0x0257, 0, 340, 220);
move(2.95, 3.47, 0.00);  object(0x0257, 0, 340, 220);
move(14.14, -15.99, -24.30);  object(0x0FDE, 0, 0, 313);
move(-40.90, 39.76, 35.99);  object(0x025B, 0, 5, 31);
move(14.41, -15.75, -4.60);  object(0x025B, 0, 10, 35);
move(-15.21, -0.56, 6.70);  object(0x0257, 355, 350, 190);
move(5.25, -0.13, -3.40);  object(0x0257, 355, 350, 185);
move(-2.45, 0.16, 1.80);  object(0x0257, 355, 350, 178);
move(-10.19, 19.90, -0.40);  object(0x0271, 0, 350, 219);
move(10.07, -17.63, 0.00);  object(0x0271, 355, 350, 183);
move(8.33, 3.35, -4.10);  object(0x0271, 355, 350, 251);
move(8.41, -8.75, -4.44);  object(0x0FAA, 340, 0, 310);
move(2.12, 0.69, 1.00);  object(0x0257, 340, 0, 311);
move(-1.99, -3.33, 0.10);  object(0x0257, 20, 350, 126);
move(1.41, 1.18, 4.50);  object(0x025B, 0, 15, 35);
move(-4.70, -4.35, -1.40);  object(0x01E4, 290, 10, 132);
teleport(1555.22, -209.35, 39.43);

#cheat HOUSE 4!!!!!!!!
//ID: 14785
//Score: 41
//Author: sam lynch
//Category: Location Mods
//Description: 4TH version of my house series.(there might be a 5th if people download it 20 times)
//Image: none
//Time: 15/07/2006 20:42:45
//Working: Yes
//BUILD THE FLOOR
moveto(272.15, -422.6, 90); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
//BUILD WALL 1
moveto(268.15, -422.6, 94); object(0x01BF, 0, 90, 90);
move(0.00, 6.7, 0.00); object(0x01BF, 0, 90, 90);
move(0.00, 6.7, 0.00); object(0x01BF, 0, 90, 90);
move(0.00, 0.00, 8); object(0x01BF, 0, 90, 90);
move(0.00, -6.7, 0.00); object(0x01BF, 0, 90, 90);
move(0.00, -6.7, 0.00); object(0x01BF, 0, 90, 90);
move(0.00, 0.00, 8); object(0x01BF, 0, 90, 90);
move(0.00, 6.7, 0.00); object(0x01BF, 0, 90, 90);
move(0.00, 6.7, 0.00); object(0x01BF, 0, 90, 90);
//BUILD WALL 2
moveto(292.15, -422.6, 94); object(0x01BF, 0, 90, 90);
move(0.00, 6.7, 0.00); object(0x01BF, 0, 90, 90);
move(0.00, 6.7, 0.00); object(0x01BF, 0, 90, 90);
move(0.00, 0.00, 8); object(0x01BF, 0, 90, 90);
move(0.00, -6.7, 0.00); object(0x01BF, 0, 90, 90);
move(0.00, -6.7, 0.00); object(0x01BF, 0, 90, 90);
move(0.00, 0.00, 8); object(0x01BF, 0, 90, 90);
move(0.00, 6.7, 0.00); object(0x01BF, 0, 90, 90);
move(0.00, 6.7, 0.00); object(0x01BF, 0, 90, 90);
//BUILD WALL 3
moveto(272.15, -425.95, 93.35); object(0x01BF, 0, 0, 180);
move(8, 00, 0.00); object(0x01BF, 0, 0, 180);
move(8, 00, 0.00); object(0x01BF, 0, 0, 180);
move(0.00, 0.00, 6.7); object(0x01BF, 0, 0, 180);
move(-8, 00, 0.00); object(0x01BF, 0, 0, 180);
move(-8, 00, 0.00); object(0x01BF, 0, 0, 180);
move(0.00, 0.00, 6.7); object(0x01BF, 0, 0, 180);
move(8, 00, 0.00); object(0x01BF, 0, 0, 180);
move(8, 00, 0.00); object(0x01BF, 0, 0, 180);
//BUILD WALL 4
moveto(272.15, -405.85, 93.35); object(0x01BF, 0, 0, 180);
move(8, 00, 0.00); object(0x01BF, 0, 0, 180);
move(8, 00, 0.00); object(0x01BF, 0, 0, 180);
move(0.00, 0.00, 6.7); object(0x01BF, 0, 0, 180);
move(-8, 00, 0.00); object(0x01BF, 0, 0, 180);
move(-8, 00, 0.00); object(0x01BF, 0, 0, 180);
move(0.00, 0.00, 6.7); object(0x01BF, 0, 0, 180);
move(8, 00, 0.00); object(0x01BF, 0, 0, 180);
move(8, 00, 0.00); object(0x01BF, 0, 0, 180);
//BUILD ROOF
moveto(272.15, -422.6, 110.1); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
teleport(272.15, -422.6, 110);

#cheat New police station
//ID: 13808
//Score: 60
//Author: wm123
//Category: Location Mods
//Description: Here is the new police station-Ofices, Lots of cells, 3 shooting ranges
//Image: none
//Time: 27/06/2006 19:39:08
//Working: Yes
moveto(302.39, -520.29, 37.82);  object(0x01BF, 0, 0, 1);
move(0.00, 0.00, 0.00);  object(0x01BF, 0, 0, 1);
move(-0.06, -11.80, 0.00);  object(0x01BF, 0, 0, 1);
move(-0.23, -10.59, 0.00);  object(0x01BF, 0, 0, 1);
move(0.20, -9.23, 0.00);  object(0x01BF, 0, 0, 1);
move(-6.28, 26.80, -5.80);  object(0x01E4, 0, 0, 88);
move(2.67, 0.45, 5.50);  object(0x01E0, 0, 0, 89);
move(0.13, -7.10, 0.00);  object(0x01E0, 0, 0, 89);
move(-0.41, -11.13, 0.00);  object(0x01E0, 0, 0, 89);
move(4.18, 20.53, 2.80);  object(0x01BF, 90, 0, 359);
move(0.03, -5.45, 0.00);  object(0x01BF, 90, 0, 359);
move(0.16, -6.57, 0.00);  object(0x01BF, 90, 0, 359);
move(0.14, -5.87, 0.00);  object(0x01BF, 90, 0, 359);
move(-0.46, -5.76, 0.00);  object(0x01BF, 90, 0, 359);
move(0.06, -2.68, 0.00);  object(0x01BF, 90, 0, 359);
move(-6.81, 28.50, -2.50);  object(0x01BF, 0, 0, 181);
move(-3.34, -3.99, -2.80);  object(0x01BF, 0, 0, 88);
move(-3.15, 0.03, 1.80);  object(0x01BF, 55, 0, 89);
move(4.65, 0.11, 3.30);  object(0x01BF, 55, 0, 89);
move(6.03, 0.20, 1.90);  object(0x01BF, 90, 0, 88);
move(3.50, 0.13, 0.00);  object(0x01BF, 90, 0, 88);
move(-4.08, -9.43, 4.90);  object(0x0FAA, 180, 0, 179);
move(2.60, 0.07, 0.00);  object(0x0FAA, 180, 0, 179);
move(1.46, -3.34, -4.40);  object(0x021C, 180, 0, 41);
move(0.40, -0.50, 2.10);  object(0x021C, 180, 0, 49);
move(-0.99, -0.06, 0.00);  object(0x021C, 180, 0, 49);
move(-4.51, -0.61, -2.20);  object(0x021C, 0, 0, 6);
move(0.00, 0.00, 0.70);  object(0x021C, 0, 0, 6);
move(0.00, 0.00, 0.70);  object(0x021C, 0, 0, 6);
move(0.00, 0.00, 0.80);  object(0x021C, 0, 0, 6);
move(0.00, 0.00, 0.90);  object(0x021C, 0, 0, 6);
move(2.27, 0.02, -2.20);  object(0x0251, 0, 0, 357);
move(0.00, 0.00, 2.60);  object(0x0251, 0, 0, 357);
move(1.56, -0.00, -10.10);  object(0x025B, 0, 0, 41);
move(-6.22, 11.16, 0.00);  object(0x025B, 0, 0, 41);
move(-0.70, -3.57, 0.00);  object(0x025B, 0, 0, 41);
move(-17.86, 24.05, -0.90);  object(0x0268, 15, 0, 289);
move(0.40, 4.11, 0.00);  object(0x0268, 0, 0, 300);
move(8.10, 4.85, 0.00);  object(0x0268, 0, 0, 12);
move(-2.99, -3.66, 0.00);  object(0x0268, 0, 0, 302);
move(7.79, 3.32, 0.00);  object(0x0268, 0, 0, 27);
move(-2.79, -5.49, 0.00);  object(0x0268, 0, 0, 27);
move(-4.07, -2.50, 0.00);  object(0x0268, 0, 0, 328);
move(-3.94, 6.38, 0.00);  object(0x0268, 0, 0, 328);
move(8.91, -7.64, 0.00);  object(0x0268, 0, 0, 36);
move(-6.94, -2.40, 0.00);  object(0x0268, 0, 0, 295);
move(0.75, 1.52, 0.80);  object(0x025B, 0, 0, 302);
move(4.97, 8.09, 0.00);  object(0x025B, 0, 0, 302);
move(-7.33, -11.93, 0.00);  object(0x0251, 0, 0, 302);
move(9.21, -14.25, -0.10);  object(0x021C, 0, 0, 302);
move(14.48, 2.21, 0.50);  object(0x021C, 0, 0, 75);
move(-8.89, -30.25, 0.80);  object(0x01BF, 0, 0, 154);
move(-6.99, -3.46, 0.00);  object(0x01BF, 0, 0, 154);
move(-6.90, -3.42, 0.00);  object(0x01BF, 0, 0, 154);
move(-6.99, -3.46, 0.00);  object(0x01BF, 0, 0, 154);
move(0.32, 0.40, 0.00);  object(0x0211, 0, 0, 154);
move(8.44, 4.30, 0.00);  object(0x0211, 0, 0, 153);
move(9.70, 4.97, 0.00);  object(0x0211, 0, 0, 153);
move(-4.36, -2.59, -0.10);  object(0x021C, 0, 0, 162);
move(0.00, 0.00, 1.90);  object(0x021C, 0, 0, 162);
move(12.40, 18.94, 5.20);  object(0x01E0, 0, 0, 359);
move(-26.30, -10.02, -2.60);  object(0x0FAA, 90, 0, 268);
move(-0.14, 5.10, 0.00);  object(0x0FAA, 90, 0, 268);
move(-0.14, 5.20, 0.00);  object(0x0FAA, 90, 0, 268);
move(0.84, 0.07, 5.80);  object(0x0FAA, 180, 0, 268);
move(0.17, -5.00, 0.00);  object(0x0FAA, 180, 0, 268);
move(0.18, -5.20, 0.00);  object(0x0FAA, 180, 0, 268);
move(-0.78, -0.14, 2.20);  object(0x0FB0, 180, 0, 269);
move(-0.07, 2.70, 0.00);  object(0x0FB0, 180, 0, 269);
move(-0.08, 2.80, 0.00);  object(0x0FB0, 180, 0, 269);
move(-0.09, 3.40, 0.00);  object(0x0FB0, 180, 0, 269);
teleport(302.39, -520.29, 37.82);

