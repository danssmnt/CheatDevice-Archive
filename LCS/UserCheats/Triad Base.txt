#cheat triad base
moveto(874.00,-539.59,16.37);  object(0x01BF,0,0,0);
move(8.00,0.00,0.00);  object(0x01BF,0,0,0);
move(7.70,0.00,0.00);  object(0x01BF,0,0,0);
move(3.40,0.00,0.00);  object(0x01BF,0,0,0);
move(3.81,-4.09,0.00);  object(0x01BF,0,0,90);
move(0.01,-7.80,0.00);  object(0x01BF,0,0,90);
move(0.00,-2.50,0.00);  object(0x01BF,0,0,90);
move(-4.00,-4.12,0.00);  object(0x01BF,0,0,180);
move(-8.00,0.00,0.00);  object(0x01BF,0,0,180);
move(-8.00,0.00,0.00);  object(0x01BF,0,0,180);
move(1.40,0.00,0.00);  object(0x01BF,0,0,180);
move(-8.06,14.26,0.00);  object(0x01BF,0,0,270);
move(0.03,-4.10,0.00);  object(0x01BF,0,0,270);
move(3.64,-10.16,0.00);  object(0x01BF,0,0,180);
move(8.07,14.31,-0.50);  object(0x01BF,270,330,0);
move(3.80,-0.01,2.20);  object(0x01BF,270,330,0);
move(6.84,0.20,1.90);  object(0x01BF,270,0,270);
move(1.09,0.01,0.00);  object(0x01BF,270,0,270);
move(0.05,-7.60,0.00);  object(0x01BF,270,0,270);
move(0.02,-3.00,0.00);  object(0x01BF,270,0,270);
move(-6.30,-0.04,0.00);  object(0x01BF,270,0,90);
move(-0.01,3.20,0.00);  object(0x01BF,270,0,90);
move(-6.52,-0.01,0.00);  object(0x01BF,270,0,90);
move(0.01,-3.20,0.00);  object(0x01BF,270,0,90);
move(-2.14,10.79,0.00);  object(0x01BF,270,0,90);
move(-4.67,0.40,0.00);  object(0x01BF,270,0,0);
move(-0.03,-6.13,0.00);  object(0x01BF,270,0,0);
move(0.03,-5.66,0.00);  object(0x01BF,270,0,0);
move(18.93,15.28,2.50);  object(0x01BF,180,0,0);
move(-7.70,0.00,0.00);  object(0x01BF,180,0,0);
move(-7.60,0.00,0.00);  object(0x01BF,180,0,0);
move(-3.60,0.00,0.00);  object(0x01BF,180,0,0);
move(18.99,-18.35,0.00);  object(0x01BF,180,0,180);
move(-7.80,-0.05,0.00);  object(0x01BF,180,0,180);
move(-7.80,-0.05,0.00);  object(0x01BF,180,0,180);
move(-3.50,-0.02,0.00);  object(0x01BF,180,0,180);
moveto(899.35,-554.61,19.95);  object(0x01BF,270,0,0);
move(-2.46,11.22,2.50);  object(0x01BF,180,0,270);
move(0.03,-3.80,0.00);  object(0x01BF,180,0,270);
move(-28.96,-7.48,-2.50);  object(0x01BF,90,0,180);
move(2.28,10.95,2.70);  object(0x01BF,0,0,90);
move(0.03,-3.70,0.00);  object(0x01BF,0,0,90);
move(23.29,3.88,3.20);  object(0x01BF,270,0,90);
move(0.02,-7.68,0.00);  object(0x01BF,270,0,90);
move(0.02,-2.90,0.00);  object(0x01BF,270,0,90);
move(-6.72,-0.05,0.00);  object(0x01BF,270,0,90);
move(-0.08,7.80,0.00);  object(0x01BF,270,0,90);
move(-0.03,2.90,0.00);  object(0x01BF,270,0,90);
move(-6.60,-0.07,0.00);  object(0x01BF,270,0,90);
move(0.08,-7.70,0.00);  object(0x01BF,270,0,90);
move(0.03,-2.90,0.00);  object(0x01BF,270,0,90);
move(-5.62,-0.06,0.00);  object(0x01BF,270,0,90);
move(-0.00,7.90,0.00);  object(0x01BF,270,0,90);
move(-0.03,2.70,0.00);  object(0x01BF,270,0,90);
move(-0.88,-0.01,0.00);  object(0x01BF,270,0,90);
move(0.08,-7.90,0.00);  object(0x01BF,270,0,90);
move(0.03,-2.60,0.00);  object(0x01BF,270,0,90);
moveto(863.96,-557.96,20.13);  object(0x01EF,0,0,0);
move(0.05,6.43,0.00);  object(0x01EF,0,0,90);
move(-0.03,0.07,0.00);  object(0x01EF,0,0,0);
move(39.28,-6.44,0.00);  object(0x01EF,0,0,180);
move(-0.01,6.34,0.00);  object(0x01EF,0,0,90);
move(0.11,0.24,0.00);  object(0x01EF,0,0,180);
setchar(0x8E4EB20, 170);
setchar(0x8E4EB20 + 0x18, 0x01);
setfloat(0x8E4EB24, 891.34, -543.7, 14.97, 90);
setchar(0x8E4EAF4, 171);
setchar(0x8E4EAF4 + 0x18, 0x01);
setfloat(0x8E4EAF8, 891.34, -548.7, 14.97, 90);
setchar(0x8E4EA9C, 170);
setchar(0x8E4EA9C + 0x18, 0x01);
setfloat(0x8E4EAA0, 891.34, -553.7, 14.97, 90);
setchar(0x08E4Ec54, 171);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, 873.69, -545.25, 14.97, 180);
setfloat(0x08e2d800, 890.44, -556.17, 21.15);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x10a)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
setfloat(0x08E2E400, 888.44, -556.17, 21.15);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x10a);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, 886.44, -556.17, 21.15);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x112)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
setfloat(0x08e2d8c0, 884.44, -556.17, 21.15);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x112);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, 882.44, -556.17, 21.15);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x11d);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, 880.44, -556.17, 21.15);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x11d);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, 878.44, -556.17, 21.15);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x119);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, 876.44, -556.17, 21.15);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x119);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
teleport(884.00,-545.59,16.37)