#cheat SSV SafeHouse Garage Car 1 Type Mod (Dodo)
//ID: 4510
//Score: 11
//Author: Skiller
//Category: Garage Codes
//Description: Replace Car 1 With Dodo
//Image: none
//Time: 03/02/2006 13:52:00
//Working: Yes
//SubCategory: SSV SafeHouse Garage
setint(0x08e38ae8, 164);


#cheat Staunton Safehouse Garage Car 1 Type Mod (Dodo)
//ID: 4756
//Score: 15
//Author: Skiller
//Category: Garage Codes
//Description: Replace Car 1 With Dodo
//Image: none
//Time: 03/02/2006 13:52:00
//Working: Yes
//SubCategory: Staunton Safehouse Garage
setint(0x08E38A38, 164);


#cheat All Cars Act Like dodo
//ID: 4090
//Score: 208
//Author: TeamOverload
//Category: Vehicle
//Description: All Cars Act Like dodo
//Image: none
//Time: 18/01/2006 18:04:00
//Working: Yes
setchar(pcar + 0x058, 0xA4);
//ADePSP: You need to get in and out of a Dodo before you activate this cheat...
//edited by ADePSP on 25/02/2006 18:15:17

#cheat Sky Airstrip Tunnel
//ID: 19280
//Score: 45
//Author: Original
//Category: Location Mods
//Description: This is a cheat where a Sky Airstrip Tunnel will be spawned, you can land dodos here and its great. 
//
//*comes with teleport.
//Image: none
//Time: 19/01/2007 22:45:05
//Working: Yes
moveto(272.15, -422.6, 90); object(0x01BF, -0, 0, 90);
move(2.37, 0.00, -5.72); object(0x01BF, -45, 0, 90);
move(5.72, 0.00, -2.37); object(0x01BF, -90, 0, 90);
move(5.72, 0.00, 2.37); object(0x01BF, -135, 0, 90);
move(2.37, 0.00, 5.72); object(0x01BF, -180, 0, 90);
move(-2.37, 0.00, 5.72); object(0x01BF, -225, 0, 90);
move(-5.72, 0.00, 2.37); object(0x01BF, -270, 0, 90);
move(-5.72, 0.00, -2.37); object(0x01BF, -315, 0, 90);
move(-2.37, 8, -5.72); object(0x01BF, -0, 0, 90);
move(2.37, 0.00, -5.72); object(0x01BF, -45, 0, 90);
move(5.72, 0.00, -2.37); object(0x01BF, -90, 0, 90);
move(5.72, 0.00, 2.37); object(0x01BF, -135, 0, 90);
move(2.37, 0.00, 5.72); object(0x01BF, -180, 0, 90);
move(-2.37, 0.00, 5.72); object(0x01BF, -225, 0, 90);
move(-5.72, 0.00, 2.37); object(0x01BF, -270, 0, 90);
move(-5.72, 0.00, -2.37); object(0x01BF, -315, 0, 90);
move(-2.37, 8, -5.72); object(0x01BF, -0, 0, 90);
move(2.37, 0.00, -5.72); object(0x01BF, -45, 0, 90);
move(5.72, 0.00, -2.37); object(0x01BF, -90, 0, 90);
move(5.72, 0.00, 2.37); object(0x01BF, -135, 0, 90);
move(2.37, 0.00, 5.72); object(0x01BF, -180, 0, 90);
move(-2.37, 0.00, 5.72); object(0x01BF, -225, 0, 90);
move(-5.72, 0.00, 2.37); object(0x01BF, -270, 0, 90);
move(-5.72, 0.00, -2.37); object(0x01BF, -315, 0, 90);
move(-2.37, 8, -5.72); object(0x01BF, -0, 0, 90);
move(2.37, 0.00, -5.72); object(0x01BF, -45, 0, 90);
move(5.72, 0.00, -2.37); object(0x01BF, -90, 0, 90);
move(5.72, 0.00, 2.37); object(0x01BF, -135, 0, 90);
move(2.37, 0.00, 5.72); object(0x01BF, -180, 0, 90);
move(-2.37, 0.00, 5.72); object(0x01BF, -225, 0, 90);
move(-5.72, 0.00, 2.37); object(0x01BF, -270, 0, 90);
move(-5.72, 0.00, -2.37); object(0x01BF, -315, 0, 90);
move(-2.37, 8, -5.72); object(0x01BF, -0, 0, 90);
move(2.37, 0.00, -5.72); object(0x01BF, -45, 0, 90);
move(5.72, 0.00, -2.37); object(0x01BF, -90, 0, 90);
move(5.72, 0.00, 2.37); object(0x01BF, -135, 0, 90);
move(2.37, 0.00, 5.72); object(0x01BF, -180, 0, 90);
move(-2.37, 0.00, 5.72); object(0x01BF, -225, 0, 90);
move(-5.72, 0.00, 2.37); object(0x01BF, -270, 0, 90);
move(-5.72, 0.00, -2.37); object(0x01BF, -315, 0, 90);
move(-2.37, 8, -5.72); object(0x01BF, -0, 0, 90);
move(2.37, 0.00, -5.72); object(0x01BF, -45, 0, 90);
move(5.72, 0.00, -2.37); object(0x01BF, -90, 0, 90);
move(5.72, 0.00, 2.37); object(0x01BF, -135, 0, 90);
move(2.37, 0.00, 5.72); object(0x01BF, -180, 0, 90);
move(-2.37, 0.00, 5.72); object(0x01BF, -225, 0, 90);
move(-5.72, 0.00, 2.37); object(0x01BF, -270, 0, 90);
move(-5.72, 0.00, -2.37); object(0x01BF, -315, 0, 90);
move(-2.37, 8, -5.72); object(0x01BF, -0, 0, 90);
move(2.37, 0.00, -5.72); object(0x01BF, -45, 0, 90);
move(5.72, 0.00, -2.37); object(0x01BF, -90, 0, 90);
move(5.72, 0.00, 2.37); object(0x01BF, -135, 0, 90);
move(2.37, 0.00, 5.72); object(0x01BF, -180, 0, 90);
move(-2.37, 0.00, 5.72); object(0x01BF, -225, 0, 90);
move(-5.72, 0.00, 2.37); object(0x01BF, -270, 0, 90);
move(-5.72, 0.00, -2.37); object(0x01BF, -315, 0, 90);
move(-2.37, 8, -5.72); object(0x01BF, -0, 0, 90);
move(2.37, 0.00, -5.72); object(0x01BF, -45, 0, 90);
move(5.72, 0.00, -2.37); object(0x01BF, -90, 0, 90);
move(5.72, 0.00, 2.37); object(0x01BF, -135, 0, 90);
move(2.37, 0.00, 5.72); object(0x01BF, -180, 0, 90);
move(-2.37, 0.00, 5.72); object(0x01BF, -225, 0, 90);
move(-5.72, 0.00, 2.37); object(0x01BF, -270, 0, 90);
move(-5.72, 0.00, -2.37); object(0x01BF, -315, 0, 90);
move(-2.37, 8, -5.72); object(0x01BF, -0, 0, 90);
move(2.37, 0.00, -5.72); object(0x01BF, -45, 0, 90);
move(5.72, 0.00, -2.37); object(0x01BF, -90, 0, 90);
move(5.72, 0.00, 2.37); object(0x01BF, -135, 0, 90);
move(2.37, 0.00, 5.72); object(0x01BF, -180, 0, 90);
move(-2.37, 0.00, 5.72); object(0x01BF, -225, 0, 90);
move(-5.72, 0.00, 2.37); object(0x01BF, -270, 0, 90);
move(-5.72, 0.00, -2.37); object(0x01BF, -315, 0, 90);
move(-2.37, 8, -5.72); object(0x01BF, -0, 0, 90);
move(2.37, 0.00, -5.72); object(0x01BF, -45, 0, 90);
move(5.72, 0.00, -2.37); object(0x01BF, -90, 0, 90);
move(5.72, 0.00, 2.37); object(0x01BF, -135, 0, 90);
move(2.37, 0.00, 5.72); object(0x01BF, -180, 0, 90);
move(-2.37, 0.00, 5.72); object(0x01BF, -225, 0, 90);
move(-5.72, 0.00, 2.37); object(0x01BF, -270, 0, 90);
move(-5.72, 0.00, -2.37); object(0x01BF, -315, 0, 90);
move(-2.37, 8, -5.72); object(0x01BF, -0, 0, 90);
move(2.37, 0.00, -5.72); object(0x01BF, -45, 0, 90);
move(5.72, 0.00, -2.37); object(0x01BF, -90, 0, 90);
move(5.72, 0.00, 2.37); object(0x01BF, -135, 0, 90);
move(2.37, 0.00, 5.72); object(0x01BF, -180, 0, 90);
move(-2.37, 0.00, 5.72); object(0x01BF, -225, 0, 90);
move(-5.72, 0.00, 2.37); object(0x01BF, -270, 0, 90);
move(-5.72, 0.00, -2.37); object(0x01BF, -315, 0, 90);
move(-2.37, 8, -5.72); object(0x01BF, -0, 0, 90);
move(2.37, 0.00, -5.72); object(0x01BF, -45, 0, 90);
move(5.72, 0.00, -2.37); object(0x01BF, -90, 0, 90);
move(5.72, 0.00, 2.37); object(0x01BF, -135, 0, 90);
move(2.37, 0.00, 5.72); object(0x01BF, -180, 0, 90);
move(-2.37, 0.00, 5.72); object(0x01BF, -225, 0, 90);
move(-5.72, 0.00, 2.37); object(0x01BF, -270, 0, 90);
move(-5.72, 0.00, -2.37); object(0x01BF, -315, 0, 90);
move(-2.37, 8, -5.72); object(0x01BF, -0, 0, 90);
move(2.37, 0.00, -5.72); object(0x01BF, -45, 0, 90);
move(5.72, 0.00, -2.37); object(0x01BF, -90, 0, 90);
move(5.72, 0.00, 2.37); object(0x01BF, -135, 0, 90);
move(2.37, 0.00, 5.72); object(0x01BF, -180, 0, 90);
move(-2.37, 0.00, 5.72); object(0x01BF, -225, 0, 90);
move(-5.72, 0.00, 2.37); object(0x01BF, -270, 0, 90);
move(-5.72, 0.00, -2.37); object(0x01BF, -315, 0, 90);
move(-2.37, 8, -5.72); object(0x01BF, -0, 0, 90);
move(2.37, 0.00, -5.72); object(0x01BF, -45, 0, 90);
move(5.72, 0.00, -2.37); object(0x01BF, -90, 0, 90);
move(5.72, 0.00, 2.37); object(0x01BF, -135, 0, 90);
move(2.37, 0.00, 5.72); object(0x01BF, -180, 0, 90);
move(-2.37, 0.00, 5.72); object(0x01BF, -225, 0, 90);
move(-5.72, 0.00, 2.37); object(0x01BF, -270, 0, 90);
move(-5.72, 0.00, -2.37); object(0x01BF, -315, 0, 90);
move(-2.37, 8, -5.72); object(0x01BF, -0, 0, 90);
move(2.37, 0.00, -5.72); object(0x01BF, -45, 0, 90);
move(5.72, 0.00, -2.37); object(0x01BF, -90, 0, 90);
move(5.72, 0.00, 2.37); object(0x01BF, -135, 0, 90);
move(2.37, 0.00, 5.72); object(0x01BF, -180, 0, 90);
move(-2.37, 0.00, 5.72); object(0x01BF, -225, 0, 90);
move(-5.72, 0.00, 2.37); object(0x01BF, -270, 0, 90);
move(-5.72, 0.00, -2.37); object(0x01BF, -315, 0, 90);
move(-2.37, 8, -5.72); object(0x01BF, -0, 0, 90);
move(2.37, 0.00, -5.72); object(0x01BF, -45, 0, 90);
move(5.72, 0.00, -2.37); object(0x01BF, -90, 0, 90);
move(5.72, 0.00, 2.37); object(0x01BF, -135, 0, 90);
move(2.37, 0.00, 5.72); object(0x01BF, -180, 0, 90);
move(-2.37, 0.00, 5.72); object(0x01BF, -225, 0, 90);
move(-5.72, 0.00, 2.37); object(0x01BF, -270, 0, 90);
move(-5.72, 0.00, -2.37); object(0x01BF, -315, 0, 90);
move(-2.37, 8, -5.72); object(0x01BF, -0, 0, 90);
move(2.37, 0.00, -5.72); object(0x01BF, -45, 0, 90);
move(5.72, 0.00, -2.37); object(0x01BF, -90, 0, 90);
move(5.72, 0.00, 2.37); object(0x01BF, -135, 0, 90);
move(2.37, 0.00, 5.72); object(0x01BF, -180, 0, 90);
move(-2.37, 0.00, 5.72); object(0x01BF, -225, 0, 90);
move(-5.72, 0.00, 2.37); object(0x01BF, -270, 0, 90);
move(-5.72, 0.00, -2.37); object(0x01BF, -315, 0, 90);
move(-2.37, 8, -5.72); object(0x01BF, -0, 0, 90);
move(2.37, 0.00, -5.72); object(0x01BF, -45, 0, 90);
move(5.72, 0.00, -2.37); object(0x01BF, -90, 0, 90);
move(5.72, 0.00, 2.37); object(0x01BF, -135, 0, 90);
move(2.37, 0.00, 5.72); object(0x01BF, -180, 0, 90);
move(-2.37, 0.00, 5.72); object(0x01BF, -225, 0, 90);
move(-5.72, 0.00, 2.37); object(0x01BF, -270, 0, 90);
move(-5.72, 0.00, -2.37); object(0x01BF, -315, 0, 90);
move(-2.37, 8, -5.72); object(0x01BF, -0, 0, 90);
move(2.37, 0.00, -5.72); object(0x01BF, -45, 0, 90);
move(5.72, 0.00, -2.37); object(0x01BF, -90, 0, 90);
move(5.72, 0.00, 2.37); object(0x01BF, -135, 0, 90);
move(2.37, 0.00, 5.72); object(0x01BF, -180, 0, 90);
move(-2.37, 0.00, 5.72); object(0x01BF, -225, 0, 90);
move(-5.72, 0.00, 2.37); object(0x01BF, -270, 0, 90);
move(-5.72, 0.00, -2.37); object(0x01BF, -315, 0, 90);
move(-2.37, 8, -5.72); object(0x01BF, -0, 0, 90);
move(2.37, 0.00, -5.72); object(0x01BF, -45, 0, 90);
move(5.72, 0.00, -2.37); object(0x01BF, -90, 0, 90);
move(5.72, 0.00, 2.37); object(0x01BF, -135, 0, 90);
move(2.37, 0.00, 5.72); object(0x01BF, -180, 0, 90);
move(-2.37, 0.00, 5.72); object(0x01BF, -225, 0, 90);
move(-5.72, 0.00, 2.37); object(0x01BF, -270, 0, 90);
move(-5.72, 0.00, -2.37); object(0x01BF, -315, 0, 90);
move(-2.37, 8, -5.72); object(0x01BF, -0, 0, 90);
move(2.37, 0.00, -5.72); object(0x01BF, -45, 0, 90);
move(5.72, 0.00, -2.37); object(0x01BF, -90, 0, 90);
move(5.72, 0.00, 2.37); object(0x01BF, -135, 0, 90);
move(2.37, 0.00, 5.72); object(0x01BF, -180, 0, 90);
move(-2.37, 0.00, 5.72); object(0x01BF, -225, 0, 90);
move(-5.72, 0.00, 2.37); object(0x01BF, -270, 0, 90);
move(-5.72, 0.00, -2.37); object(0x01BF, -315, 0, 90);
move(-2.37, 8, -5.72); object(0x01BF, -0, 0, 90);
move(2.37, 0.00, -5.72); object(0x01BF, -45, 0, 90);
move(5.72, 0.00, -2.37); object(0x01BF, -90, 0, 90);
move(5.72, 0.00, 2.37); object(0x01BF, -135, 0, 90);
move(2.37, 0.00, 5.72); object(0x01BF, -180, 0, 90);
move(-2.37, 0.00, 5.72); object(0x01BF, -225, 0, 90);
move(-5.72, 0.00, 2.37); object(0x01BF, -270, 0, 90);
move(-5.72, 0.00, -2.37); object(0x01BF, -315, 0, 90);
move(-2.37, 8, -5.72); object(0x01BF, -0, 0, 90);
move(2.37, 0.00, -5.72); object(0x01BF, -45, 0, 90);
move(5.72, 0.00, -2.37); object(0x01BF, -90, 0, 90);
move(5.72, 0.00, 2.37); object(0x01BF, -135, 0, 90);
move(2.37, 0.00, 5.72); object(0x01BF, -180, 0, 90);
move(-2.37, 0.00, 5.72); object(0x01BF, -225, 0, 90);
move(-5.72, 0.00, 2.37); object(0x01BF, -270, 0, 90);
move(-5.72, 0.00, -2.37); object(0x01BF, -315, 0, 90);
move(-2.37, 8, -5.72); object(0x01BF, -0, 0, 90);
move(2.37, 0.00, -5.72); object(0x01BF, -45, 0, 90);
move(5.72, 0.00, -2.37); object(0x01BF, -90, 0, 90);
move(5.72, 0.00, 2.37); object(0x01BF, -135, 0, 90);
move(2.37, 0.00, 5.72); object(0x01BF, -180, 0, 90);
move(-2.37, 0.00, 5.72); object(0x01BF, -225, 0, 90);
move(-5.72, 0.00, 2.37); object(0x01BF, -270, 0, 90);
move(-5.72, 0.00, -2.37); object(0x01BF, -315, 0, 90);
move(-2.37, 8, -5.72); object(0x01BF, -0, 0, 90);
move(2.37, 0.00, -5.72); object(0x01BF, -45, 0, 90);
move(5.72, 0.00, -2.37); object(0x01BF, -90, 0, 90);
move(5.72, 0.00, 2.37); object(0x01BF, -135, 0, 90);
move(2.37, 0.00, 5.72); object(0x01BF, -180, 0, 90);
move(-2.37, 0.00, 5.72); object(0x01BF, -225, 0, 90);
move(-5.72, 0.00, 2.37); object(0x01BF, -270, 0, 90);
move(-5.72, 0.00, -2.37); object(0x01BF, -315, 0, 90);
teleport(272.15, -422.6, 110);

#cheat Police Survival Course
//ID: 17963
//Score: 113
//Author: Ultimate Cheat Maker
//Category: Environment
//Description: This is my police survival course where there are guns with unlimited ammo, 10 cars, heli+helipad, climbing frame, school buses, crash site, obstacle course, dodo, REC area, garage and much more!!!
//*Includes teleport
//Image: none
//Time: 04/10/2006 21:33:04
//Working: Yes
moveto(1658.09, -347.91, -4.15); object(0x01BF, 270, 0, 117);
move(-4.73, 1.90, 4.50); object(0x0204, 270, 0, 207);
move(-9.40, 6.70, 0.00); object(0x0204, 270, 0, 221);
move(-10.56, 9.33, 0.00); object(0x0204, 270, 0, 42);
move(-10.73, 9.35, 0.00); object(0x0204, 270, 0, 42);
move(-9.50, 7.16, 0.30); object(0x0204, 270, 5, 32);
move(-8.62, 6.50, 1.20); object(0x0204, 270, 5, 32);
move(-8.38, 6.32, 1.10); object(0x0204, 270, 5, 32);
move(-8.32, 5.40, 0.80); object(0x0204, 270, 5, 32);
move(-12.04, 2.97, 0.00); object(0x0204, 270, 355, 355);
move(-10.60, -0.14, -1.00); object(0x0204, 270, 355, 355);
move(-9.79, -0.93, -0.50); object(0x0204, 270, 0, 355);
move(-14.09, -0.86, 0.00); object(0x0204, 270, 0, 355);
move(-11.49, -0.84, 0.00); object(0x0204, 270, 0, 355);
move(-4.60, -0.02, 0.00); object(0x0204, 270, 0, 355);
setshort(0x992FDFE, 0x20, 0x4c, 0x69, 0x6f, 0x6e);
setshort(0x94428e0, 252);
setfloat(0x94428dc, 2.025);
setfloat(0x945b240, 5837.5);
setfloat(0x945b248, 1.625);
setfloat(0x945b300, 0.5375);
setfloat(0x945b304, -0.4625);
setfloat(0x945b308, 0.525);
setfloat(0x945b2cc, 1.675);
setfloat(0x945b2d0, 1.675);
setfloat(0x945b2c4, 0.00788);
setfloat(0x945b2e4, 0.5);
setfloat(0x945b2e8, 23.75);
setfloat(0x945b2f8, 1.3125);
setfloat(0x945b2fc, 0.25625);
setfloat(0x945b314, 0.87);
setfloat(0x945b30c, 0.4875);
setfloat(0x945b268, 0.025);
setchar(0x945b270, 71);
setfloat(0x945b2ec, 0.85);
sethex(0x945b310, 0x02, 0x40, 0x00, 0x04);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb28, 0xFF, 0xFF, 0x00);
sethex(0x944fb24, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 162);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
//weapon 1
setfloat(0x08e2d800, 275.00, 314.00, -3);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x10e)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//weapon 2
setfloat(0x08E2E400, 275.00, 314.00, -3);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x10f);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
//weapon 3
setfloat(0x08e2d860, 275.00, 314.00, -3);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x110)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//weapon 4
setfloat(0x08e2d8c0, 275.00, 314.00, -3);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x118);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
//weapon 5
setfloat(0x08e2d920, 275.00, 314.00, -3, 0);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x11b);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
//weapon 6
setfloat(0x08e2d980, 275.00, 314.00, -3);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x11c);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
//weapon 7
setfloat(0x08e2d9e0, 275.00, 314.00, -3);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x119);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
//weapon 8
setfloat(0x08e2da40, 275.00, 314.00, -3);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x11a);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
//weapon 9
setfloat(0x08e2daa0, 275.00, 314.00, -3);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x11f);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
//weapon 10
setfloat(0x08e2db00, 275.00, 314.00, -3);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x121);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
//weapon 11
setfloat(0x08E2DB60, 275.00, 314.00, -3);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x122);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
//weapon 12
setfloat(0x08E2DBC0, 275.00, 314.00, -3);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x115);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
//weapon 13
setfloat(0x08E2DC20, 275.00, 314.00, -3);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x116);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
//weapon 14
setfloat(0x08E2DC80, 275.00, 314.00, -3);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x117);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
//weapon 15
setfloat(0x08E2DCE0, 275.00, 314.00, -3);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x114);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
//weapon 16
setfloat(0x08E2DD40, 275.00, 314.00, -3);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x113);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
//weapon 17
setfloat(0x08E2DDA0, 275.00, 314.00, -3);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
//weapon 18
setfloat(0x08E2DE00, 275.00, 314.00, -3);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x104);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
//weapon 19
setfloat(0x08E2DE60, 275.00, 314.00, -3);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x104);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
//weapon 20
setfloat(0x08E2DEC0, 275.00, 314.00, -3);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x104);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
//weapon 21
setfloat(0x08E2DF20, 275.00, 314.00, -3);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0xff, 0xff);
setshort(0x08E2DF46, 0x104);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
//weapon 22
setfloat(0x08E2DF80, 275.00, 314.00, -3);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0xff, 0xff);
setshort(0x08E2DFA6, 0x104);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
//weapon 23
setfloat(0x08E2DFE0, 275.00, 314.00, -3);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0xff, 0xff);
setshort(0x08E2E006, 0x104);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
//weapon 24
setfloat(0x08E2E040, 275.00, 314.00, -3);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0xff, 0xff);
setshort(0x08E2E066, 0x104);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
//weapon 25
setfloat(0x08E2E0A0, 275.00, 314.00, -3);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x104);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
//weapon 26
setfloat(0x08E2E100, 275.00, 314.00, -3);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0xff, 0xff);
setshort(0x08E2E126, 0x104);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
//weapon 27
setfloat(0x08E2E160, 275.00, 314.00, -3);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x104);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
//weapon 28
setfloat(0x08E2E1C0, 275.00, 314.00, -3);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x104);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
//weapon 29
setfloat(0x08E2E220, 275.00, 314.00, -3);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0xff, 0xff);
setshort(0x08E2E246, 0x104);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
//weapon 30
setfloat(0x08E2E280, 275.00, 314.00, -3);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0xff, 0xff);
setshort(0x08E2E2A6, 0x104);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
//weapon 31
setfloat(0x08E2E2E0, 275.00, 314.00, -3);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0xff, 0xff);
setshort(0x08E2E306, 0x104);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
//weapon 32
setfloat(0x08E2E340, 275.00, 314.00, -3);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0xff, 0xff);
setshort(0x08E2E366, 0x104);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
//weapon 33
setfloat(0x08E2E3A0, 275.00, 314.00, -3);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0xff, 0xff);
setshort(0x08E2E3C6, 0x104);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
//weapon 34
setfloat(0x08E2E460, 275.00, 314.00, -3);
setint(0x08E2E474, 0);
setchar(0x08E2E47C, 0xff, 0xff);
setshort(0x08E2E486, 0x104);
setchar(0x08E2E492, 0x0f);
setchar(0x08E2E493, 0x00);
setchar(0x08E2D4B0, 0xff);
//weapon 35
setfloat(0x08E2E4C0, 275.00, 314.00, -3);
setint(0x08E2E4D4, 0);
setchar(0x08E2E4DC, 0xff, 0xff);
setshort(0x08E2E4E6, 0x104);
setchar(0x08E2E4F2, 0x0f);
setchar(0x08E2E4F3, 0x00);
setchar(0x08E2D510, 0xff);
//weapon 36
setfloat(0x08E2DDA0, 275.00, 314.00, -3);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x104);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
off()
//Created Using Pickup Creator
//By RASAL
setfloat(0x08e2d800, 272.15, -422.6, 26.02);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1000000, 0x1000000);
setshort(0x08e2d826, 0x111);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
//Created Using Pedestrian Spawner
//By RASAL
setfloat(099542b0-cb0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0-0x1960, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0-0x2610, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0-0x32c0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0-0x3F70, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0-0x4c20, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0-0x58d0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0, 399.43000000000006, 2726.8, 26.02);
setfloat(0994c3d0, 399.43000000000006, 2726.8, 26.02);
setfloat(0994dd30, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+cb0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x1960, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x2610, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x32c0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x3F70, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x4c20, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x58d0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x6580, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x7230, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x7ee0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x8b90, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x9840, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0xa4f0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0xb1a0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0xbe50, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0xcb00, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0xd7b0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0xe460, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0xf110, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0xfdc0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x10a70, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x11720, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x123d0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x13080, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x13d30, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x149e0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x15690, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x16340, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x16ff0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x17ca0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x18950, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x19600, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x1a2b0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x1af60, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x1bc10, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x1c8c0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x1d570, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x1e220, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x1eed0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x1fb80, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x20830, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x214e0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x22190, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x22e40, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x23af0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x247a0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x25450, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x26100, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x26db0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x27a60, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x28710, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x293c0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x2a070, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x2ad20, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x2b9d0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x2c680, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x2d330, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x2dfe0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x2ec90, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x2f940, 399.43000000000006, 2726.8, 26.02);

#cheat Portland Airport
//ID: 17810
//Score: 164
//Author: Ultimate Cheat Maker
//Category: Environment
//Description: Now new on GTA LCS the portland Airport!!! Located near the scrap-yard!!! This cheat includes; 3 Dodo's, runway, helipad, 4 helicopters, 5 cars, gates, entrance area, ticket booth, carpark, 999 forces, fire engine garage, police station, hospital and more
//Image: none
//Time: 30/09/2006 10:42:50
//Working: Yes
moveto(1433, -257, 50); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
moveto(1460.83, -243.15, 50.80); object(0x01F1, 270, 0, 270);
move(0.00, -16.10, 0.00); object(0x01F1, 270, 0, 270);
move(0.00, 8.20, 0.00); object(0x01F1, 270, 0, 270);
move(-9.51, -9.15, 0.00); object(0x01F1, 270, 0, 0);
move(8.59, 26.41, 0.00); object(0x01F1, 270, 0, 180);
move(0.70, -0.23, -0.20); object(0x020F, 0, 0, 180);
move(-7.10, -0.02, 0.00); object(0x020F, 0, 0, 180);
move(7.07, -5.98, 0.00); object(0x020F, 0, 0, 270);
move(0.05, -6.70, 0.00); object(0x020F, 0, 0, 270);
move(0.05, -6.60, 0.00); object(0x020F, 0, 0, 270);
move(-0.03, -6.50, 0.00); object(0x020F, 0, 0, 270);
move(-7.58, -0.07, 0.00); object(0x020F, 0, 0, 0);
move(1.17, 3.16, 0.00); object(0x0257, 0, 0, 181);
move(0.18, 19.78, 0.00); object(0x0257, 0, 0, 181);
move(2.78, 2.28, -0.10); object(0x0257, 0, 0, 270);
move(-0.14, -24.72, 0.00); object(0x0257, 0, 0, 90);
moveto(1459.54, -240.85, 50.81); object(0x0ECF, 0, 0, 270);
move(0.01, -0.80, 0.00); object(0x0ECF, 0, 0, 270);
move(-0.00, -0.40, -0.40); object(0x0ECB, 0, 270, 270);
move(-0.60, -0.01, 0.00); object(0x0ECB, 0, 270, 270);
move(-0.02, 1.60, 0.00); object(0x0ECB, 0, 270, 270);
move(0.59, 0.01, 0.00); object(0x0ECB, 0, 270, 270);
move(-1.37, -0.32, 0.50); object(0x0F03, 90, 0, 60);
move(0.95, -0.09, 0.00); object(0x0F74, 90, 0, 55);
move(0.06, -0.70, 0.00); object(0x0F75, 0, 0, 310);
move(-0.96, -0.08, 0.00); object(0x0F76, 0, 0, 310);
moveto(1456.97, -241.15, 50.16); object(0x1004, 0, 0, 130);
moveto(1433.01, -236.68, 54.50); object(0x01BF, 270, 0, 180);
move(7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 270, 0, 180);
move(7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(15.86, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
moveto(1432.79, -256.87, 52.18); object(0x0F95, 0, 0, 0);
move(7.30, -0.04, 0.00); object(0x0F8B, 0, 0, 0);
move(8.90, -0.05, 0.00); object(0x0F96, 0, 0, 0);
move(0.10, 19.79, 0.00); object(0x0F98, 0, 0, 180);
move(-7.10, 0.04, 0.00); object(0x0F99, 0, 0, 180);
move(-9.18, 0.03, 0.00); object(0x0F9A, 0, 0, 180);
//Seperators
moveto(1438.25, -237.43, 50.38); object(0x01BF, 0, 270, 90);
move(-1.90, 0.01, 0.00); object(0x01BF, 0, 270, 90);
move(9.05, -0.01, 0.00); object(0x01BF, 0, 270, 90);
move(-0.10, -19.37, 0.00); object(0x01BF, 0, 270, 270);
move(-1.50, 0.01, 0.00); object(0x01BF, 0, 270, 270);
move(-7.30, 0.03, 0.00); object(0x01BF, 0, 270, 270);
moveto(1433.25, -260.68, 51.10); object(0x01BF, 0, 0, 0);
move(8.00, 0.05, 0.00); object(0x01BF, 0, 0, 0);
move(7.30, -0.13, 0.00); object(0x01BF, 0, 0, 0);
moveto(1429.14, -237.04, 50.94); object(0x01BF, 0, 0, 90);
move(3.93, 3.77, 0.00); object(0x01BF, 0, 0, 180);
move(8.00, -0.00, 0.00); object(0x01BF, 0, 0, 180);
move(8.00, -0.00, 0.00); object(0x01BF, 0, 0, 180);
move(3.89, -3.96, 0.00); object(0x01BF, 0, 0, 270);
move(0.08, -13.10, 0.00); object(0x01BF, 0, 0, 270);
move(0.01, -8.00, 0.00); object(0x01BF, 0, 0, 270);
move(-3.94, -3.88, 0.00); object(0x01BF, 0, 0, 0);
move(-7.90, -0.01, 0.00); object(0x01BF, 0, 0, 0);
move(-8.00, 0.00, 0.00); object(0x01BF, 0, 0, 0);
move(-4.09, 3.86, 0.00); object(0x01BF, 0, 0, 90);
move(0.02, 13.30, 0.00); object(0x01BF, 0, 0, 90);
moveto(1433.21, -262.43, 52.01); object(0x045C, 0, 0, 269);
move(8.01, -0.00, 0.00); object(0x045C, 0, 0, 269);
move(8.01, -0.00, 0.00); object(0x045C, 0, 0, 269);
moveto(1433.38, -262.40, 48.88); object(0x045C, 180, 0, 271);
move(8.01, -0.00, 0.00); object(0x045C, 180, 0, 271);
move(8.01, -0.00, 0.00); object(0x045C, 180, 0, 271);
moveto(1428.96, -237.21, 51.86); object(0x045C, 0, 0, 359);
move(0.00, 0.00, -3.13); object(0x045C, 180, 0, 1);
move(0.00, -8.01, 0.00); object(0x045C, 180, 0, 1);
move(0.00, 0.00, 3.13); object(0x045C, 0, 0, 359);
moveto(1428.89, -258.33, 52.09); object(0x045C, 0, 0, 359);
move(0.00, 0.00, -3.13); object(0x045C, 180, 0, 1);
moveto(1449.07, -233.08, 51.78); object(0x045C, 0, 0, 89);
move(0.00, 0.00, -3.13); object(0x045C, 180, 0, 91);
move(-8.01, 0.00, 0.00); object(0x045C, 180, 0, 91);
move(-8.01, 0.00, 0.00); object(0x045C, 180, 0, 91);
move(0.00, 0.00, 3.13); object(0x045C, 0, 0, 89);
move(8.01, 0.00, 0.00); object(0x045C, 0, 0, 89);
moveto(1453.14, -237.13, 51.81); object(0x045C, 0, 0, 179);
move(0.08, -13.25, 0.00); object(0x045C, 0, 0, 179);
move(0.00, -7.91, 0.00); object(0x045C, 0, 0, 179);
move(0.00, 0.00, -3.13); object(0x045C, 180, 0, 181);
move(0.00, 8.01, 0.00); object(0x045C, 180, 0, 181);
move(0.00, 13.25, 0.00); object(0x045C, 180, 0, 181);
moveto(1452.41, -248.22, 54.61); object(0x01C3, 270, 10, 180);
move(-1.50, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.40, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.40, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.20, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.30, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.30, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.40, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.50, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.50, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.30, -0.01, -0.50); object(0x01C3, 270, 20, 180);
moveto(1429.32, -234.66, 55.41); object(0x01F1, 270, 0, 90);
move(0.10, -15.60, 0.00); object(0x01F1, 270, 0, 90);
move(0.79, -9.58, 0.00); object(0x01F1, 270, 0, 0);
move(20.40, 0.04, 0.00); object(0x01F1, 270, 0, 0);
move(-10.20, -0.02, 0.00); object(0x01F1, 270, 0, 0);
move(19.91, 1.04, 0.00); object(0x01F1, 270, 0, 270);
move(-0.02, 15.30, 0.00); object(0x01F1, 270, 0, 270);
move(-0.85, 9.68, 0.00); object(0x01F1, 270, 0, 180);
move(-20.60, -0.17, 0.00); object(0x01F1, 270, 0, 180);
move(10.30, 0.08, 0.00); object(0x01F1, 270, 0, 180);
moveto(1429.39, -243.63, 54.63); object(0x01EF, 0, 0, 90);
move(30.85, -6.39, 0.00); object(0x01EF, 0, 0, 270);
moveto(1425.72, -251.44, 49.95); object(0x01BF, 90, 0, 90);
move(-6.67, 0.02, -0.60); object(0x01BF, 80, 0, 90);
moveto(1429.08, -257.26, 50.93); object(0x01BF, 0, 0, 90);
move(-0.05, 2.14, 2.58); object(0x1002, 0, 0, 145);
move(-0.05, 7.50, 0.00); object(0x1002, 0, 0, 210);
moveto(1433.08, -240.78, 50.14); object(0x0239, 0, 0, 180);
move(8.50, -0.04, 0.00); object(0x0239, 0, 0, 0);
move(7.00, -0.03, 0.00); object(0x0239, 0, 0, 0);
move(0.69, -12.48, 0.00); object(0x0239, 0, 0, 180);
move(-9.40, 0.05, 0.00); object(0x0239, 0, 0, 0);
move(-6.60, -0.01, 0.00); object(0x0239, 0, 0, 180);
moveto(1437.92, -253.20, 51.34); object(0x0D0A, 0, 0, 180);
move(-2.80, 0.00, 0.00); object(0x0D0A, 0, 0, 45);
move(15.90, -0.00, 0.00); object(0x0D0A, 0, 0, 45);
move(-4.25, 12.22, 0.00); object(0x0D0A, 0, 0, 220);
move(-8.24, 0.03, 0.00); object(0x0D0A, 0, 0, 345);
move(-3.60, 0.22, 0.00); object(0x0D0A, 0, 0, 345);
move(2.54, 3.95, -0.10); object(0x0251, 0, 0, 180);
move(11.02, -9.82, 3.24); object(0x01F0, 0, 0, 180);
move(4.10, -0.02, 0.00); object(0x01F0, 0, 0, 180);
move(-7.94, -3.51, 0.00); object(0x01F0, 0, 0, 90);
move(0.01, 3.31, 0.00); object(0x01F0, 0, 0, 90);
move(4.77, -6.98, 0.00); object(0x01F0, 0, 0, 0);
move(-4.20, -0.02, 0.00); object(0x01F0, 0, 0, 0);
moveto(1419.02, -271.36, 48.01); object(0x01BF, 270, 0, 180);
move(8.00, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(0.00, -6.66, 0.00); object(0x01BF, 270, 0, 180);
move(-8.00, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(12.01, 6.64, -3.10); object(0x01BF, 180, 270, 270);
move(0.02, -6.60, 0.00); object(0x01BF, 180, 270, 270);
move(-3.24, -3.43, 0.00); object(0x01BF, 180, 270, 0);
move(-6.70, -0.03, 0.00); object(0x01BF, 180, 270, 0);
moveto(1422.41, -301.09, 48.78); object(0x01BF, 255, 0, 14);
move(1.30, 5.17, 2.00); object(0x01BF, 245, 0, 14);
move(1.21, 4.84, 2.90); object(0x01BF, 235, 0, 14);
setfloat(0x08e2d800, 1431, -256, 55.70);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
setfloat(0x08E2E400, 1433, -256, 55.70);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x124);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, 1435, -256, 55.70);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
setfloat(0x08e2d8c0, 1437, -256, 55.70);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, 1439, -256, 55.70);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, 1441, -256, 55.70);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, 1443, -256, 55.70);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, 1445, -256, 55.70);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
setfloat(0x08e2daa0, 1447, -256, 55.70);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
setfloat(0x08e2db00, 1449, -256, 55.70);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
setfloat(0x08E2DB60, 1451, -256, 55.70);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
setfloat(0x08E2DBC0, 1453, -256, 55.70);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
setfloat(0x08E2DC20, 1455, -256, 55.70);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
setfloat(0x08E2DC80, 1457, -256, 55.70);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
setfloat(0x08E2DCE0, 1431, -236, 55.70);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x10f);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
setfloat(0x08E2DD40, 1433, -236, 55.70);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
setfloat(0x08E2DDA0, 1435, -236, 55.70);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
setfloat(0x08E2DE00, 1437, -236, 55.70);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
setfloat(0x08E2DE60, 1439, -236, 55.70);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
setfloat(0x08E2DEC0, 1441, -236, 55.70);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
setfloat(0x08E2DF20, 1443, -236, 55.70);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0xff, 0xff);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
setfloat(0x08E2DF80, 1445, -236, 55.70);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0xff, 0xff);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
setfloat(0x08E2DFE0, 1447, -236, 55.70);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0xff, 0xff);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
setfloat(0x08E2E040, 1449, -236, 55.70);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0xff, 0xff);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
setfloat(0x08E2E0A0, 1451, -236, 55.70);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
setfloat(0x08E2E100, 1453, -236, 55.70);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0xff, 0xff);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
setfloat(0x08E2E160, 1455, -236, 55.70);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
setfloat(0x08E2E1C0, 1457, -236, 55.70);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
setfloat(0x08E2E220, 1431, -242, 55.70);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0xff, 0xff);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
setfloat(0x08E2E280, 1431, -244, 55.70);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0xff, 0xff);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
setfloat(0x08E2E2E0, 1431, -246, 55.70);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0xff, 0xff);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
setfloat(0x08E2E340, 1431, -248, 55.70);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0xff, 0xff);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
setfloat(0x08E2E3A0, 1431, -250, 55.70);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0xff, 0xff);
setshort(0x08E2E3C6, 0x122);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
setfloat(0x08E2E460, 1431, -252, 55.70);
setint(0x08E2E474, 0);
setchar(0x08E2E47C, 0xff, 0xff);
setshort(0x08E2E486, 0x22e);
setchar(0x08E2E492, 0x0f);
setchar(0x08E2E493, 0x00);
setchar(0x08E2D4B0, 0xff);
setfloat(0x08E2E4C0, 1431, -254, 55.70);
setint(0x08E2E4D4, 0);
setchar(0x08E2E4DC, 0xff, 0xff);
setshort(0x08E2E4E6, 0x24b);
setchar(0x08E2E4F2, 0x0f);
setchar(0x08E2E4F3, 0x00);
setchar(0x08E2D510, 0xff);
setint(0x08b89acc, 99999999);
setint(0x08b89ad0, 99999999);
setchar(0x08E4Eaf4, 189);
setchar(0x08E4Eaf4 + 0x18, 0x01);
setfloat(0x08E4Eaf8, 1401, -230, 51, 315);
setchar(0x08E4Eac8, 185);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 1402, -235, 51, 315);
setchar(0x08E4E9EC, 137);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 1403, -240, 51, 315);
setchar(0x08E4E9c0, 142);
setchar(0x08E4E9c0 + 0x18, 0x01);
setfloat(0x08E4E9c4, 1403, -245, 51, 315);
setchar(0x08E4Eba4, 205);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 1402, -250, 51, 315);
setchar(08E4Ecd8, 213);
setchar(08E4Ecd8 + 0x18, 0x01);
setfloat(08E4Ecdc, 1420, -271, 50, 67);
setchar(0x945cdf2, 0x4);
setchar(0x945cdf1, 0x50);
setchar(0x945cdf0, 0x52);
setshort(0x9444cd0, 250);
setfloat(0x9444ccc, 0.9489);
setfloat(0x945cd70, 3700);
setfloat(0x945cd78, 0.925);
setfloat(0x945ce30, 0.2875);
setfloat(0x945ce34, -0.275);
setfloat(0x945ce38, 0.4125);
setfloat(0x945cdfc, 1.55);
setfloat(0x945ce00, 1.55);
setfloat(0x945cdf4, 0.00363);
setfloat(0x945ce10, 0.7125);
setfloat(0x945ce14, 0);
setfloat(0x945ce18, 42.5);
setfloat(0x945ce28, 1.125);
setfloat(0x945ce2c, 0.11875);
setfloat(0x945ce44, 0.15);
setfloat(0x945ce3c, 0.4125);
setfloat(0x945cd90, 0);
setfloat(0x945cd94, 0.1);
setfloat(0x945cd98, -0.425);
setchar(0x945cda0, 10);
setfloat(0x945ce1c, 0.9125);
setfloat(0x945ce20, 0.45375);
setfloat(0x945cd7c, 0.007);
sethex(0x945ce40, 0x83, 0x81, 0x00, 0x07);
sethex(0x944fb40, 0x00, 0x00, 0x00);
sethex(0x944fb3c, 0xFF, 0x00, 0x00);
setint(0x8E38A38, 185);
setchar(0x8E38A5C, 120, 119);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(0x945a1e2, 0x5);
setchar(0x945a1e1, 0x50);
setchar(0x945a1e0, 0x34);
setshort(0x94409a0, 250);
setfloat(0x944099c, 0.90);
setfloat(0x945a160, 900);
setfloat(0x945a168, 1.35);
setfloat(0x945a220, 0.25);
setfloat(0x945a224, -0.225);
setfloat(0x945a228, 0.5);
setfloat(0x945a1ec, 1.4);
setfloat(0x945a1f0, 1.4);
setfloat(0x945a1e4, 0.00462);
setfloat(0x945a200, 0.51);
setfloat(0x945a204, 0);
setfloat(0x945a208, 40);
setfloat(0x945a218, 2.15625);
setfloat(0x945a21c, 0.19);
setfloat(0x945a234, 0.37);
setfloat(0x945a22c, 0.6);
setfloat(0x945a180, 0);
setfloat(0x945a184, -0.29999);
setfloat(0x945a188, -0.475);
setchar(0x945a190, 70);
setfloat(0x945a20c, 0.95625);
setfloat(0x945a210, 0.5);
setfloat(0x945a16c, 1.02857);
sethex(0x945a230, 0x03, 0x81, 0x20, 0x04);
sethex(0x944fb20, 0xCA, 0xDA, 0xCF);
sethex(0x944fb50, 0xCA, 0xDA, 0xCF);
setint(0x8E38A38, 142);
setchar(0x8E38A5C, 112, 124);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(0x945d1b2, 0x6);
setchar(0x945d1b1, 0x50);
setchar(0x945d1b0, 0x52);
setshort(0x9445310, 250);
setfloat(0x944530c, 0.725);
setfloat(0x945d130, 1400);
setfloat(0x945d138, 1.4);
setfloat(0x945d1f0, 0.2);
setfloat(0x945d1f4, -0.0125);
setfloat(0x945d1f8, 0.4);
setfloat(0x945d1bc, 1.2);
setfloat(0x945d1c0, 1.2);
setfloat(0x945d1b4, 0.0065);
setfloat(0x945d1d0, 0.45);
setfloat(0x945d1d4, 0);
setfloat(0x945d1d8, 40);
setfloat(0x945d1e8, 1.1);
setfloat(0x945d1ec, 0.075);
setfloat(0x945d204, 0.2);
setfloat(0x945d1fc, 0.3);
setfloat(0x945d150, 0);
setfloat(0x945d154, 0.3);
setfloat(0x945d158, -0.29999);
setchar(0x945d160, 75);
setfloat(0x945d1dc, 0.8);
setfloat(0x945d1e0, 0.45);
setfloat(0x945d13c, 0.85714);
sethex(0x945d200, 0x02, 0x81, 0x00, 0x06);
sethex(0x944fb34, 0x00, 0x00, 0x00);
sethex(0x944fb48, 0x00, 0x00, 0x00);
setint(0x8E38A38, 189);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(0x9459d32, 0x5);
setchar(0x9459d31, 0x50);
setchar(0x9459d30, 0x34);
setshort(0x94401d0, 250);
setfloat(0x94401cc, 1.6);
setfloat(0x9459cb0, 2500);
setfloat(0x9459cb8, 0.75);
setfloat(0x9459d70, 0.35);
setfloat(0x9459d74, -.7);
setfloat(0x9459d78, 0.5);
setfloat(0x9459d3c, 1);
setfloat(0x9459d40, 1);
setfloat(0x9459d34, 0.001);
setfloat(0x9459d50, 0.5);
setfloat(0x9459d54, 0);
setfloat(0x9459d58, 25);
setfloat(0x9459d68, 1.5);
setfloat(0x9459d6c, 1);
setfloat(0x9459d84, 0.28);
setfloat(0x9459d7c, 0);
setfloat(0x9459cd0, 0);
setfloat(0x9459cd4, 0);
setfloat(0x9459cd8, -1);
setchar(0x9459ce0, 80);
setfloat(0x9459d5c, 0.92);
setfloat(0x9459d60, 0.5);
setfloat(0x9459cbc, 0);
sethex(0x9459d80, 0x83, 0xc1, 0x00, 0x04);
sethex(0x944fb58, 0x00, 0x00, 0x00);
sethex(0x944fb48, 0xFF, 0xAA, 0x01);
setint(0x8E38A38, 137);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(0x945d482, 0x5);
setchar(0x945d481, 0x50);
setchar(0x945d480, 0x52);
setshort(0x9446c10, 255);
setfloat(0x9446c0c, 0.67);
setfloat(0x945d400, 500);
setfloat(0x945d408, 1.6);
setfloat(0x945d4c0, 0.15);
setfloat(0x945d4c4, -0.15999);
setfloat(0x945d4c8, 0.5);
setfloat(0x945d48c, 0.97867);
setfloat(0x945d490, 0.97867);
setfloat(0x945d484, 0.004);
setfloat(0x945d4a0, 0.5);
setfloat(0x945d4a4, 0);
setfloat(0x945d4a8, 35);
setfloat(0x945d4b8, 0.85);
setfloat(0x945d4bc, 0.15);
setfloat(0x945d4d4, 0);
setfloat(0x945d4cc, 0);
setfloat(0x945d420, 0);
setfloat(0x945d424, 0.05);
setfloat(0x945d428, -0.08999);
setchar(0x945d430, 103);
setfloat(0x945d4ac, 0.9);
setfloat(0x945d4b0, 0.48);
setfloat(0x945d40c, 0.6);
sethex(0x945d4d0, 0x02, 0x01, 0x01, 0x00);
sethex(0x944fb28, 0x6D, 0xFF, 0x00);
sethex(0x944fb2c, 0x77, 0xFF, 0x00);
setfloat(0x945d404, 850);
setint(0x8E38A38, 205);
sethex(0x8E38A5E, 0x01, 0x00);
off();
moveto(298.50, -475.50, 37.82); object(0x01BF, 270, 0, 88);
move(-7.16, -0.20, 0.10); object(0x01BF, 270, 0, 88);
move(-6.03, -0.17, 0.00); object(0x01BF, 270, 0, 88);
move(-5.80, -0.16, 0.00); object(0x01BF, 270, 0, 88);
move(-6.67, -0.18, 0.00); object(0x01BF, 270, 0, 88);
move(-2.90, -0.07, 0.00); object(0x01BF, 270, 0, 88);
move(27.73, 0.79, 0.10); object(0x01BF, 270, 0, 271);
move(4.03, -0.00, 0.00); object(0x01BF, 270, 0, 271);
move(6.47, -0.00, 0.00); object(0x01BF, 270, 0, 271);
move(5.82, -0.00, 0.00); object(0x01BF, 270, 0, 271);
move(-26.51, 7.36, -0.10); object(0x01BF, 270, 0, 269);
move(5.16, 0.10, 0.00); object(0x01BF, 270, 0, 269);
move(4.26, 0.09, 0.00); object(0x01BF, 270, 0, 269);
move(0.00, 0.00, 0.10); object(0x01BF, 270, 0, 269);
move(3.10, 0.06, 0.00); object(0x01BF, 270, 0, 269);
move(3.21, 0.07, 0.00); object(0x01BF, 270, 0, 269);
move(4.00, 0.08, 0.00); object(0x01BF, 270, 0, 269);
move(-18.86, 6.61, 0.00); object(0x01BF, 270, 0, 273);
move(2.32, -4.51, 0.00); object(0x01BF, 270, 0, 212);
move(2.30, 4.23, 0.00); object(0x01BF, 270, 0, 271);
move(5.31, -0.11, 0.00); object(0x01BF, 270, 0, 271);
move(3.80, -0.08, 0.00); object(0x01BF, 270, 0, 271);
move(5.62, -0.12, 0.00); object(0x01BF, 270, 0, 271);
move(-19.09, 6.50, 0.00); object(0x01BF, 270, 0, 275);
move(1.14, -0.29, 0.00); object(0x01BF, 270, 0, 271);
move(4.04, -0.02, 0.00); object(0x01BF, 270, 0, 271);
move(3.55, -0.02, 0.00); object(0x01BF, 270, 0, 271);
move(3.19, -0.02, 0.00); object(0x01BF, 270, 0, 271);
move(2.42, -0.01, 0.00); object(0x01BF, 270, 0, 271);
move(3.45, -0.02, 0.00); object(0x01BF, 270, 0, 271);
move(-18.86, 6.85, 0.00); object(0x01BF, 270, 0, 270);
move(4.14, 0.01, 0.00); object(0x01BF, 270, 0, 270);
move(4.83, 0.01, 0.00); object(0x01BF, 270, 0, 270);
move(4.89, 0.01, 0.00); object(0x01BF, 270, 0, 270);
move(4.28, 0.01, 0.00); object(0x01BF, 270, 0, 270);
move(-3.03, -0.01, 0.00); object(0x01BF, 270, 0, 270);
move(1.84, 0.01, 0.00); object(0x01BF, 270, 0, 270);
move(1.84, 0.01, 0.00); object(0x01BF, 270, 0, 270);
move(-18.38, 6.05, 0.00); object(0x01BF, 270, 0, 272);
move(4.29, -0.13, 0.00); object(0x01BF, 270, 0, 272);
move(3.89, -0.12, 0.00); object(0x01BF, 270, 0, 272);
move(4.84, -0.15, 0.00); object(0x01BF, 270, 0, 272);
move(4.42, -0.13, 0.00); object(0x01BF, 270, 0, 272);
move(2.21, -0.07, 0.00); object(0x01BF, 270, 0, 272);
move(-17.91, 7.51, 0.00); object(0x01BF, 270, 0, 269);
move(4.69, 0.11, 0.00); object(0x01BF, 270, 0, 269);
move(3.17, 0.07, 0.00); object(0x01BF, 270, 0, 269);
move(3.91, -1.01, 0.00); object(0x01BF, 270, 0, 269);
move(-0.07, 2.80, 0.00); object(0x01BF, 270, 0, 269);
move(-11.32, 1.03, 0.00); object(0x01BF, 270, 0, 269);
move(3.88, 0.09, 0.00); object(0x01BF, 270, 0, 269);
move(2.04, 0.05, 0.00); object(0x01BF, 270, 0, 269);
move(-7.36, -0.17, 0.00); object(0x01BF, 270, 0, 269);
move(15.03, 0.35, 0.00); object(0x01BF, 270, 0, 269);
move(2.24, 0.05, 0.00); object(0x01BF, 270, 0, 269);
move(0.20, -1.29, 0.00); object(0x01BF, 270, 0, 254);
move(0.48, -1.63, 0.00); object(0x01BF, 270, 0, 254);
move(3.39, -5.51, 0.00); object(0x01BF, 270, 0, 101);
move(-16.89, -41.74, -1.30); object(0x01BF, 250, 0, 357);
move(2.77, -5.44, -1.20); object(0x01BF, 250, 0, 27);
move(-2.50, 1.26, -0.40); object(0x01BF, 250, 0, 357);
move(13.50, 56.50, 5.00); object(0x01BF, 180, 0, 0);
#off
move(0.00, 0.00, 3.60); object(0x01BF, 180, 0, 0);
move(0.00, 0.00, 3.30); object(0x01BF, 180, 0, 0);
move(0.00, 0.00, 3.80); object(0x01BF, 180, 0, 0);
move(0.00, 0.00, 3.60); object(0x01BF, 180, 0, 0);
move(9.81, -44.42, -13.60); object(0x01BF, 180, 0, 90);
move(-0.19, -0.96, 0.00); object(0x01BF, 180, 0, 91);
move(0.00, 0.00, 4.50); object(0x01BF, 180, 0, 91);
move(0.32, 1.57, 0.00); object(0x01BF, 180, 0, 91);
move(-4.18, -5.38, -4.50); object(0x01BF, 180, 0, 180);
move(0.00, 0.00, 4.60); object(0x01BF, 180, 0, 180);
move(-6.92, -0.02, -4.50); object(0x01BF, 180, 0, 180);
move(0.00, 0.00, 4.60); object(0x01BF, 180, 0, 180);
move(-7.73, 0.00, -4.70); object(0x01BF, 180, 0, 180);
move(0.00, 0.00, 4.70); object(0x01BF, 180, 0, 180);
move(-7.95, -0.11, 0.00); object(0x01BF, 180, 0, 180);
move(-4.88, -0.00, -4.60); object(0x01BF, 180, 0, 180);
move(0.00, 0.00, 4.60); object(0x01BF, 180, 0, 180);
move(-6.84, -0.15, 0.00); object(0x01BF, 180, 0, 180);
move(0.05, 0.25, -4.00); object(0x01BF, 180, 0, 180);
move(-6.57, 0.12, 0.60); object(0x01BF, 180, 0, 181);
move(0.00, 0.00, 3.40); object(0x01BF, 180, 0, 181);
move(-4.13, 3.85, -4.10); object(0x01BF, 180, 0, 269);
move(0.00, 0.00, 4.10); object(0x01BF, 180, 0, 269);
move(11.68, 3.93, -7.60); object(0x01BF, 90, 0, 265);
move(2.30, -0.21, 0.00); object(0x01BF, 90, 0, 265);
move(-7.51, 0.28, 0.00); object(0x01BF, 90, 0, 265);
move(-3.49, -0.19, 0.00); object(0x01BF, 90, 0, 265);
move(0.96, -8.04, 1.30); object(0x01BF, 0, 0, 187);
#off
setfloat(0x08e2d800, 307.98, -436.38, 39.20);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1000000, 0x1000000);
setshort(0x08e2d826, 0x11C);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, 308.77, -440.28, 39.20);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1000000, 0x1000000);
setshort(0x08e2d826, 0x102);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, 308.77, -444.21, 39.20);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1000000, 0x1000000);
setshort(0x08e2d826, 0x109);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, 308.66, -447.42, 39.20);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1000000, 0x1000000);
setshort(0x08e2d826, 0x111);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, 308.41, -450.84, 39.20);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1000000, 0x1000000);
setshort(0x08e2d826, 0x118);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, 308.50, -450.58, 39.20);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1000000, 0x1000000);
setshort(0x08e2d826, 0x117);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setchar(0x08E4E9C0, 209);
setfloat(0x08E4E9C4, 272.41, -448.04, 39.10);
setfloat(0x08E4E9D0, 0);
#off
moveto(-214.68, 58.13, -1.02); object(0x01F3, 0, 0, 276);
move(-24.92, -14.45, 1.00); object(0x0270, 0, 0, 174);
move(-5.44, 3.94, -0.20); object(0x0270, 0, 0, 257);
move(9.88, 1.09, 0.00); object(0x0270, 0, 0, 91);
move(-5.01, 5.01, 0.00); object(0x0270, 0, 0, 0);
move(-11.30, -2.71, -0.20); object(0x0270, 0, 0, 147);
move(3.07, 3.23, 0.00); object(0x0270, 0, 0, 92);
move(-0.39, 5.29, 0.00); object(0x0270, 0, 0, 41);
move(8.57, 2.85, 0.00); object(0x0270, 0, 0, 99);
move(-4.61, -4.83, 0.00); object(0x0270, 0, 0, 179);
move(15.97, 21.37, 0.00); object(0x0270, 0, 0, 296);
move(-3.12, -4.40, 0.00); object(0x0270, 0, 0, 259);
move(-0.53, -4.41, 0.00); object(0x0270, 0, 0, 225);
move(-11.06, 0.28, 0.00); object(0x0270, 0, 0, 300);
move(-2.21, -6.42, 0.00); object(0x0270, 0, 0, 250);
move(-15.54, -4.57, -0.05); object(0x0270, 0, 0, 136);
move(2.72, 2.66, 0.00); object(0x0270, 0, 0, 136);
move(4.48, 6.50, 0.00); object(0x0270, 0, 0, 65);
move(3.87, -5.60, 0.00); object(0x0270, 0, 0, 113);
move(25.38, -12.91, 2.12); object(0x0257, 0, 0, 305);
move(-7.00, 3.49, 0.00); object(0x0257, 0, 0, 288);
move(-1.75, -3.72, -0.40); object(0x0257, 0, 0, 255);
move(2.28, -4.22, 0.00); object(0x0257, 0, 0, 204);
move(-9.54, -0.34, 0.00); object(0x0257, 0, 0, 242);
move(-1.74, 6.25, 0.00); object(0x0257, 0, 0, 308);
move(18.31, 5.86, 0.16); object(0x026C, 0, 0, 309);
move(3.70, 4.03, -0.40); object(0x026C, 0, 0, 0);
move(0.00, 12.50, -1.00); object(0x026C, 0, 0, 0);
move(-2.42, 3.17, 0.00); object(0x026C, 0, 0, 1);
move(-3.15, -3.12, -0.40); object(0x026C, 0, 0, 301);
move(-0.57, -3.89, 0.00); object(0x026C, 0, 0, 255);
move(4.16, -4.25, 0.00); object(0x026C, 0, 0, 189);
move(-5.96, -3.34, 0.00); object(0x026C, 0, 0, 211);
move(23.36, -0.69, -0.16); object(0x027C, 0, 0, 24);
move(4.10, -1.86, -0.30); object(0x027C, 0, 0, 24);
move(-7.51, 5.23, 0.00); object(0x027C, 0, 0, 24);
move(-3.29, 3.08, 0.00); object(0x027C, 0, 0, 4);
move(-2.78, 5.81, 0.00); object(0x027C, 0, 0, 71);
move(-3.12, 8.27, 0.00); object(0x027C, 0, 0, 356);
move(11.83, -41.12, 2.51); object(0x0369, 270, 180, 214);
move(-4.61, 3.24, 0.00); object(0x0369, 270, 180, 215);
move(-5.00, 3.45, 0.00); object(0x0369, 270, 180, 215);
move(-4.70, 3.17, 0.00); object(0x0369, 270, 180, 215);
move(-4.53, 3.01, 0.10); object(0x0369, 270, 180, 216);
move(74.66, -112.25, 15.17); object(0x01BF, 270, 85, 111);
move(5.30, -2.19, 0.00); object(0x01BF, 270, 85, 111);
move(3.95, 1.90, 0.00); object(0x01BF, 270, 270, 17);
move(2.07, 5.66, 0.00); object(0x01BF, 270, 270, 19);
move(-1.50, 4.72, 0.00); object(0x01BF, 270, 270, 299);
move(-4.12, 2.09, 0.00); object(0x01BF, 270, 270, 296);
move(-5.01, -1.35, 0.00); object(0x01BF, 270, 270, 211);
move(-3.90, -5.39, 0.14); object(0x01BF, 100, 90, 232);
move(11.03, 1.78, 3.80); object(0x01BF, 90, 0, 123);
move(-1.35, -5.57, 0.00); object(0x01BF, 90, 0, 117);
move(-5.46, 1.27, 0.00); object(0x01BF, 90, 0, 99);
move(2.28, 5.23, 0.00); object(0x01BF, 90, 0, 124);
move(-4.13, -4.21, 0.00); object(0x01BF, 90, 0, 123);
move(10.88, 1.62, 3.00); object(0x01BF, 0, 0, 121);
move(-2.70, -4.41, 0.00); object(0x01BF, 0, 0, 128);
move(1.62, 9.94, 0.00); object(0x01BF, 0, 0, 29);
move(-6.08, -1.50, -0.20); object(0x01BF, 0, 0, 322);
move(-2.04, -5.82, 0.00); object(0x01BF, 0, 0, 262);
move(2.84, 1.52, 3.10); object(0x01BF, 265, 0, 254);
move(0.83, -1.72, 0.00); object(0x01BF, 265, 0, 309);
move(3.05, 4.43, 0.20); object(0x01BF, 265, 0, 296);
move(-6.53, -16.77, -10.14); object(0x01BF, 265, 210, 101);
move(1.57, 7.09, 3.20); object(0x01BF, 265, 210, 111);
move(1.84, 12.15, -3.86); object(0x021C, 200, 205, 348);
move(1.28, -0.41, 0.00); object(0x021C, 200, 205, 5);
move(0.99, 0.17, 0.00); object(0x021C, 200, 205, 13);
move(2.94, -0.57, 0.00); object(0x021C, 200, 205, 39);
move(-0.95, 1.13, 0.00); object(0x021C, 200, 205, 22);
move(-1.92, 1.06, 0.00); object(0x021C, 200, 205, 356);
move(-0.70, 0.25, 0.00); object(0x021C, 200, 205, 348);
move(-1.48, -0.01, 0.00); object(0x021C, 200, 205, 331);
move(-1.41, -0.44, 0.00); object(0x021C, 200, 205, 314);
move(-60.70, 88.90, -14.41); object(0x01E0, 270, 180, 211);
move(-7.15, 4.59, 0.00); object(0x01E0, 270, 180, 212);
move(-7.07, 4.34, 0.30); object(0x01E0, 270, 180, 211);
move(-6.82, 4.57, -0.15); object(0x01E0, 270, 180, 215);

#cheat dodo
//ID: 17709
//Score: 58
//Author: Zachman34
//Category: Vehicle
//Description: its a cool dodo
//Image: none
//Time: 25/09/2006 02:27:24
//Working: Yes
setshort(0x992FE5C, 0x23, 0x7a, 0x61, 0x63);
setchar(0x945b772, 0x6);
setchar(0x945b771, 0x44);
setshort(0x9442c00, 254);
setfloat(0x9442bfc, 1.05);
sethex(0x945b7c0, 0x03, 0x80, 0x04, 0x07);
setchar(0x967E6FC, 0xFF, 0x10, 0x00);
sethex(0x944fb3c, 0xFF, 0xFF, 0x00);
sethex(0x944fb0c, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 164);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);

#cheat Ski Ramp PLUS skyport
//ID: 17292
//Score: 127
//Author: zachattackgta
//Category: Location Mods
//Description: Ski ramp/sky port
//**1548 feet in the air**
//**MASSIVE STUNTS**
//**So incredibly fun**
//**My best cheat yet**
//**great for dodos to**
//**TELEPORT INCLUDED**
//
//Image: http://img242.imageshack.us/my.php?image=screen1rw4.png
//Time: 10/09/2006 20:08:39
//Working: Yes
moveto(-816.24, -380.95, 540.97);  object(0x01BF, 90, 0, 269);
move(4.81, 0.08, 0.00);  object(0x01BF, 90, 0, 269);
move(-0.10, 5.90, 0.00);  object(0x01BF, 90, 0, 269);
move(-4.71, 0.01, 0.00);  object(0x01BF, 90, 0, 269);
move(-0.19, 6.80, 0.00);  object(0x01BF, 90, 0, 269);
move(4.87, 0.13, 0.00);  object(0x01BF, 90, 0, 269);
move(0.00, 0.00, 0.00);  object(0x01BF, 90, 0, 269);
move(5.49, 0.15, 0.00);  object(0x01BF, 90, 0, 269);
move(0.19, -6.90, 0.00);  object(0x01BF, 90, 0, 269);
move(0.16, -6.00, 0.00);  object(0x01BF, 90, 0, 269);
move(3.13, 0.09, 2.30);  object(0x01BF, 0, 0, 269);
move(-0.15, 6.60, 0.00);  object(0x01BF, 0, 0, 269);
move(-0.15, 6.80, 0.00);  object(0x01BF, 0, 0, 269);
move(0.00, 0.00, 5.10);  object(0x01BF, 0, 0, 269);
move(0.13, -5.80, 0.00);  object(0x01BF, 0, 0, 269);
move(0.17, -7.60, 0.00);  object(0x01BF, 0, 0, 269);
move(-3.20, -0.07, 2.90);  object(0x01BF, 270, 0, 269);
move(-0.16, 7.30, 0.00);  object(0x01BF, 270, 0, 269);
move(-0.14, 6.10, 0.00);  object(0x01BF, 270, 0, 269);
move(-5.18, -0.16, 0.00);  object(0x01BF, 270, 0, 268);
move(0.35, -7.39, 0.00);  object(0x01BF, 270, 0, 267);
move(0.18, -6.12, 0.00);  object(0x01BF, 270, 0, 269);
move(-5.54, -0.10, 0.00);  object(0x01BF, 270, 0, 269);
move(-0.11, 6.30, 0.00);  object(0x01BF, 270, 0, 269);
move(-0.12, 7.12, 0.00);  object(0x01BF, 270, 0, 268);
move(-3.08, -0.20, -7.90);  object(0x01BF, 180, 0, 270);
move(-0.65, -6.87, 0.00);  object(0x01BF, 180, 0, 270);
move(1.29, -6.95, 0.00);  object(0x01BF, 180, 0, 270);
move(-0.12, 7.65, 0.00);  object(0x01BF, 180, 0, 270);
move(0.00, 0.00, 4.80);  object(0x01BF, 180, 0, 270);
move(-0.13, -7.82, 0.00);  object(0x01BF, 180, 0, 270);
move(-0.44, 14.10, 0.00);  object(0x01BF, 180, 0, 270);
move(8.13, 6.20, -8.60);  object(0x01BF, 115, 0, 357);
move(-4.09, -0.22, 0.00);  object(0x01BF, 115, 0, 357);
move(8.59, 0.45, 0.00);  object(0x01BF, 115, 0, 357);
move(-0.28, 5.39, -2.50);  object(0x01BF, 115, 0, 357);
move(-3.99, -0.21, 0.00);  object(0x01BF, 115, 0, 357);
move(-4.59, -0.24, 0.00);  object(0x01BF, 115, 0, 357);
move(-0.29, 5.57, -2.60);  object(0x01BF, 115, 0, 357);
move(4.09, 0.22, 0.00);  object(0x01BF, 115, 0, 357);
move(4.59, 0.24, 0.00);  object(0x01BF, 115, 0, 357);
move(-0.32, 6.03, -2.80);  object(0x01BF, 115, 0, 357);
move(-4.09, -0.22, 0.00);  object(0x01BF, 115, 0, 357);
move(-4.59, -0.24, 0.00);  object(0x01BF, 115, 0, 357);
move(-0.30, 5.73, -2.70);  object(0x01BF, 115, 0, 357);
move(8.59, 0.45, 0.00);  object(0x01BF, 115, 0, 357);
move(-3.99, -0.21, 0.00);  object(0x01BF, 115, 0, 357);
move(-0.31, 5.90, -2.70);  object(0x01BF, 115, 0, 357);
move(-4.59, -0.24, 0.00);  object(0x01BF, 115, 0, 357);
move(8.59, 0.45, 0.00);  object(0x01BF, 115, 0, 357);
move(-0.31, 5.88, -2.80);  object(0x01BF, 115, 0, 357);
move(-4.89, -0.26, 0.00);  object(0x01BF, 115, 0, 357);
move(-3.79, -0.20, 0.00);  object(0x01BF, 115, 0, 357);
move(-0.25, 4.73, -2.20);  object(0x01BF, 115, 0, 357);
move(3.89, 0.20, 0.00);  object(0x01BF, 115, 0, 357);
move(4.79, 0.25, 0.00);  object(0x01BF, 115, 0, 357);
move(-0.32, 6.03, -2.80);  object(0x01BF, 115, 0, 357);
move(-6.49, -0.34, 0.00);  object(0x01BF, 115, 0, 357);
move(-2.20, -0.12, 0.00);  object(0x01BF, 115, 0, 357);
move(-0.20, 3.81, -1.60);  object(0x01BF, 110, 0, 357);
move(5.19, 0.27, 0.00);  object(0x01BF, 110, 0, 357);
move(3.59, 0.19, 0.00);  object(0x01BF, 110, 0, 357);
move(-0.06, 1.08, -0.20);  object(0x01BF, 100, 0, 357);
move(-4.89, -0.26, 0.00);  object(0x01BF, 100, 0, 357);
move(-3.79, -0.20, 0.00);  object(0x01BF, 100, 0, 357);
move(-0.10, 1.90, 0.00);  object(0x01BF, 95, 0, 357);
move(3.69, 0.19, 0.00);  object(0x01BF, 95, 0, 357);
move(5.09, 0.27, 0.00);  object(0x01BF, 95, 0, 357);
move(-0.10, 1.89, 0.00);  object(0x01BF, 85, 0, 357);
move(-4.29, -0.23, 0.00);  object(0x01BF, 85, 0, 357);
move(-4.59, -0.24, 0.00);  object(0x01BF, 85, 0, 357);
move(-0.10, 1.90, 0.30);  object(0x01BF, 75, 0, 357);
move(3.00, 0.16, 0.00);  object(0x01BF, 75, 0, 357);
move(5.79, 0.30, 0.00);  object(0x01BF, 75, 0, 357);
move(-0.07, 1.30, 0.40);  object(0x01BF, 70, 0, 357);
move(-5.09, -0.27, 0.00);  object(0x01BF, 70, 0, 357);
move(-3.89, -0.21, 0.00);  object(0x01BF, 70, 0, 357);
move(-0.02, 0.40, 0.00);  object(0x01BF, 55, 0, 357);
move(3.89, 0.20, 0.00);  object(0x01BF, 55, 0, 357);
move(5.19, 0.27, 0.00);  object(0x01BF, 55, 0, 357);
move(-9.61, -77.84, 24.99);  object(0x01BF, 0, 0, 91);
move(0.03, 5.90, 5.80);  object(0x01BF, 0, 0, 91);
move(1.85, 0.93, 3.00);  object(0x01BF, 90, 0, 89);
move(11.62, -0.19, -10.30);  object(0x01BF, 90, 0, 269);
moveto(-804.63, -364.62, 543.35);  object(0x01BF, 0, 0, 358);
move(0.07, 0.06, 4.30);  object(0x01BF, 0, 0, 359);
move(-0.28, -1.26, 0.10);  object(0x01BF, 0, 0, 359);
move(-5.50, -0.09, 2.60);  object(0x01BF, 0, 0, 359);
move(-7.80, -0.13, 0.10);  object(0x01BF, 0, 0, 359);
move(0.00, 0.00, -5.80);  object(0x01BF, 0, 0, 359);
move(13.09, 0.71, -0.10);  object(0x01BF, 0, 0, 359);
move(-1.25, -18.65, -0.10);  object(0x01BF, 0, 0, 0);
move(-5.20, -0.01, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.00, -0.01, 0.00);  object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 4.00);  object(0x01BF, 0, 0, 0);
move(5.40, 0.01, 0.00);  object(0x01BF, 0, 0, 0);
move(3.60, 0.01, 0.00);  object(0x01BF, 0, 0, 0);
move(-10.32, 11.42, -7.60);  object(0x01BF, 270, 0, 0);
move(0.01, -5.50, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.03, -3.72, 0.00);  object(0x01BF, 270, 0, 358);
teleport(-812.15, -375.06, 541.61);

#cheat Dodo
//ID: 17097
//Score: 53
//Author: MIDGE
//Category: Vehicle
//Description: spawns one dodo in the staunton garage. It's name is poop(just a heads up ;)
//Image: http://i13.photobucket.com/albums/a251/ZLeiberick/screen2-8.jpg
//Time: 05/09/2006 23:34:18
//Working: Yes
setshort(0x992FE5C, 0x70, 0x6f, 0x6f, 0x70);
setchar(0x945b772, 0x2);
setchar(0x945b770, 0x52);
setshort(0x9442c00, 250);
setfloat(0x9442bfc, 0.60);
setfloat(0x945b6f8, 1.325);
setfloat(0x945b7b4, -0.5375);
setfloat(0x945b77c, 1.15);
setfloat(0x945b780, 1.15);
setfloat(0x945b774, 0.0075);
sethex(0x945b7c0, 0x83, 0x81, 0x04, 0x05);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb54, 0x00, 0x00, 0x00);
sethex(0x944fb20, 0x00, 0x00, 0xFE);
setint(0x8E38A38, 164);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);

#cheat Airport Vehicle place
//ID: 16927
//Score: 116
//Author: stephenson2
//Category: Location Mods
//Description: An airport base with a hunter, cheetah, hot rod, infernus and a dodo.  located at the helipad on the far side of the airport.
//Image: none
//Time: 01/09/2006 16:50:35
//Working: Yes
setchar(0x08E4E9C0, 213);
setfloat(0x08E4E9C4, -1787.65, 2893.54, 26.02);
setfloat(0x08E4E9D0, 0);
setchar(0x08E4E9C0, 140);
setfloat(0x08E4E9C4, --1787.65, 2933.24, 26.02);
setfloat(0x08E4E9D0, 0);
setchar(0x08E4E9C0, 142);
setfloat(0x08E4E9C4, ---1765.18, 2925.3, 26.02);
setfloat(0x08E4E9D0, 0);
setchar(0x08E4E9C0, 146);
setfloat(0x08E4E9C4, -1765.18, 2901.48, 26.02);
setfloat(0x08E4E9D0, 0);
setchar(0x08E4E9C0, 164);
setfloat(0x08E4E9C4, -1765.18, 2957.06, 26.02);
setfloat(0x08E4E9D0, 0);
setchar(0x08E4E9C0, 185);
setfloat(0x08E4E9C4, -1757.69, 2877.66, 26.02);
setfloat(0x08E4E9D0, 0);
teleport(-1727.73, 2901.48, 26.02);

#cheat Dakotas best cheatpack ever (part 1)
//ID: 16505
//Score: 61
//Author: dakota
//Category: Misc
//Description: look at the code and you will see why its the best...it has all my pmg cars + some that are only on this cheatpack a mansion and a dodo in the garage and all the weapons
//Image: none
//Time: 17/08/2006 19:06:24
//Working: Yes
//LIGHTS AND SALVATORES OFFICE
moveto(1444.03, -166.76, 53.72); object(0x0FF6, 0, 0, 93);
moveto(1386.10, -278.68, 52.47); object(0x020F, 0, 0, 91);
move(-0.94, -10.67, -3.50); object(0x020F, 0, 0, 121);
move(41.03, 100.60, 3.65); object(0x020F, 0, 0, 32);
move(-1.72, -10.36, 0.00); object(0x020F, 0, 0, 337);
move(4.68, 34.23, 5.00); object(0x020F, 0, 0, 109);
move(-0.72, -11.70, 0.00); object(0x020F, 0, 0, 119);
move(0.28, -6.06, -2.60); object(0x020F, 0, 0, 102);
move(-13.09, -3.17, -5.40); object(0x020F, 0, 0, 334);
move(-11.70, 4.73, 0.00); object(0x020F, 0, 0, 334);
move(13.01, 31.23, 3.70); object(0x020F, 0, 0, 146);
move(-13.27, -5.45, -0.50); object(0x020F, 0, 0, 211);
move(-4.29, -12.57, -2.50); object(0x020F, 0, 0, 113);
move(83.85, -37.71, 7.20); object(0x020F, 0, 0, 239);
move(3.74, 18.22, 0.00); object(0x020F, 0, 0, 239);
move(3.08, 16.76, 0.00); object(0x020F, 0, 0, 239);
move(-17.60, 4.49, 0.00); object(0x020F, 0, 0, 239);
move(-25.09, 5.00, 0.00); object(0x020F, 0, 0, 238);
move(15.01, -44.99, 0.00); object(0x020F, 0, 0, 348);
move(-26.65, 23.87, -3.00); object(0x020F, 0, 0, 113);
//PMG CARS
//BMW M3 GTR
setshort(0x992FEE2, 0x20, 0x20, 0x20, 0x20, 0x42, 0x4d, 0x57, 0x20, 0x4d, 0x33, 0x20, 0x47, 0x54, 0x52);
setchar(0x945bd12, 0x6);
setchar(0x945bd11, 0x44);
setshort(0x9443880, 250);
setfloat(0x944387c, 0.83);
setfloat(0x945bc90, 3000);
setfloat(0x945bc98, 1.500);
setfloat(0x945bd50, 0.20);
setfloat(0x945bd54, -0.0625);
setfloat(0x945bd58, 0.40);
setfloat(0x945bd1c, 4);
setfloat(0x945bd20, 4);
setfloat(0x945bd14, 0.0035);
setfloat(0x945bd30, 0.60);
setfloat(0x945bd38, 36);
setfloat(0x945bd48, 0.75);
setfloat(0x945bd4c, 0.125);
setfloat(0x945bcb4, 0.0125);
setfloat(0x945bcb8, -0.425);
setfloat(0x945bd3c, 0.90000);
setfloat(0x945bd40, 0.43875);
sethex(0x945bd60, 0x00, 0x81, 0x00, 0x05);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb4c, 0xFF, 0xFF, 0x00);
sethex(0x944fb24, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 172);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//SUPERCHARGED CHEVY CAMARO CONVERTIBLE 1969
setshort(0x992FE80, 0x20, 0x47, 0x41, 0x4e, 0x47, 0x53, 0x54, 0x41);
setchar(0x945ba42, 0x5);
setshort(0x94430b0, 250);
setfloat(0x94430ac, 0.82);
setfloat(0x945b9c0, 5000);
setfloat(0x945b9c8, 1.55);
setfloat(0x945ba80, 0.2);
setfloat(0x945ba84, -0.15);
setfloat(0x945ba88, 0.425);
setfloat(0x945ba4c, 4);
setfloat(0x945ba50, 4);
setfloat(0x945ba44, 0.00337);
setfloat(0x945ba60, 0.5);
setfloat(0x945ba68, 36.875);
setfloat(0x945ba78, 1.46875);
setfloat(0x945b9e4, 0);
setfloat(0x945b9e8, -0.4125);
setchar(0x945b9f0, 13);
setfloat(0x945ba6c, 0.9);
setfloat(0x945ba70, 0.44625);
setfloat(0x945b9cc, 0.5);
sethex(0x945ba90, 0x80, 0x89, 0x00, 0x03);
setchar(0x967E6FC, 0xFF, 0x00, 0xFF);
sethex(0x944fb2c, 0x54, 0xD5, 0xF2);
sethex(0x944fb50, 0x03, 0x00, 0x11);
setint(0x8E38A38, 167);
setchar(0x8E38A5C, 115, 124);
sethex(0x8E38A5E, 0x01, 0xFF);
setchar(pplayer + 0xB84, 0x00);
//FORD SHELBY COBRA GT 500
setshort(0x993002A, 0x53, 0x48, 0x45, 0x4c, 0x42, 0x59, 0x20, 0x47, 0x54, 0x20, 0x35, 0x30, 0x30);
setchar(0x945cdf2, 0x5);
setshort(0x9444cd0, 250);
setfloat(0x9444ccc, 0.775);
setfloat(0x945cd70, 3000);
setfloat(0x945cd78, 1.7);
setfloat(0x945ce30, 0.2625);
setfloat(0x945ce34, -0.0875);
setfloat(0x945cdfc, 2.8);
setfloat(0x945ce00, 2.8);
setfloat(0x945cdf4, 0.00313);
setfloat(0x945ce10, 0.6625);
setfloat(0x945ce18, 35);
setfloat(0x945ce2c, 0.08125);
setfloat(0x945cd98, -0.3875);
setfloat(0x945ce20, 0.45);
sethex(0x945ce40, 0x80, 0x81, 0x00, 0x05);
setchar(0x967E6FC, 0xFF, 0xFF, 0x00);
sethex(0x944fb48, 0xFF, 0xFF, 0x00);
sethex(0x944fb40, 0x00, 0x00, 0x00);
setint(0x8E38A38, 185);
setchar(0x8E38A5C, 122, 120);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//SUPERCHARGED 2006 DODGE VIPER RT 10
setshort(0x992FDD4, 0x20, 0x20, 0x56, 0x49, 0x50, 0x45, 0x52);
setfloat(0x94425bc, 0.82);
setfloat(0x945b060, 3000);
setfloat(0x945b068, 1.5);
setfloat(0x945b120, 0.2625);
setfloat(0x945b124, -0.1);
setfloat(0x945b0ec, 3.5);
setfloat(0x945b0f0, 3.5);
setfloat(0x945b0e4, 0.00325);
setfloat(0x945b100, 0.6625);
setfloat(0x945b11c, 0.21875);
setfloat(0x945b088, -0.425);
setfloat(0x945b10c, 0.90);
setfloat(0x945b110, 0.45);
sethex(0x945b130, 0x80, 0xa1, 0x00, 0x05);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb5c, 0xB3, 0x01, 0x00);
sethex(0x944fb48, 0x00, 0x00, 0x00);
setint(0x8E38A38, 160);
setchar(0x8E38A5C, 127, 122);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//TOYOTA TUNDRA
setshort(0x992FD62, 0x4d, 0x41, 0x44, 0x44, 0x4f, 0x47);
setchar(0x945ab42, 0x5);
setchar(0x945ab41, 0x44);
setchar(0x945ab40, 0x52);
setshort(0x9441ad0, 250);
setfloat(0x9441acc, 0.825);
setfloat(0x945aac0, 1800);
setfloat(0x945aac8, 1.075);
setfloat(0x945ab80, 0.2);
setfloat(0x945ab84, -0.1);
setfloat(0x945ab88, 0.4);
setfloat(0x945ab4c, 2.5);
setfloat(0x945ab50, 2.5);
setfloat(0x945ab44, 0.00313);
setfloat(0x945ab60, 0.5);
setfloat(0x945ab64, 0);
setfloat(0x945ab68, 35);
setfloat(0x945ab78, 1.59375);
setfloat(0x945ab7c, 0.1375);
setfloat(0x945ab94, 0.26);
setfloat(0x945ab8c, 0);
setfloat(0x945aae0, 0);
setfloat(0x945aae4, 0.025);
setfloat(0x945aae8, -0.4);
setchar(0x945aaf0, 75);
setfloat(0x945ab6c, 0.90625);
setfloat(0x945ab70, 0.45);
setfloat(0x945aacc, 0.23529);
sethex(0x945ab90, 0x82, 0x8b, 0x00, 0x05);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb54, 0x00, 0x00, 0x00);
sethex(0x944fafc, 0xFF, 0x0D, 0x08);
setint(0x8E38A38, 153);
setchar(0x8E38A5C, 125, 103);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//convertible limo
setchar(0x945a002, 0x6);
setchar(0x945a000, 0x34);
setshort(0x9440680, 254);
setfloat(0x944067c, 2.4);
setfloat(0x9459f80, 1750);
setfloat(0x9459f88, 10000000);
setfloat(0x945a040, 3.79);
setfloat(0x945a044, 2.42);
setfloat(0x945a00c, 2);
setfloat(0x945a010, 2);
setfloat(0x945a004, 0.00338);
setfloat(0x945a028, 45);
setfloat(0x945a038, 3);
setfloat(0x945a03c, 0.01875);
setfloat(0x945a04c, 1);
setchar(0x9459fb0, 83);
setfloat(0x945a02c, 10);
setfloat(0x945a030, 10000000);
sethex(0x945a050, 0x03, 0x81, 0x00, 0x04);
sethex(0x944fb00, 0xFF, 0xFF, 0xFF);
sethex(0x944fb30, 0xFF, 0xFF, 0xFF);
setint(0x8E38A38, 140);
setchar(0x8E38A5C, 104, 116);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pcar + 0x000006CC, 1);
setchar(pcar + 0x000006C8, 1);
setchar(pcar + 0x000006D4, 1);
setfloat(pcar + 0x3d8, 1);
setfloat(pcar + 0x400, 0, -1.26, 1);
setfloat(pcar + 0x438, 1);
//Nitro
setchar(0x967E6F8, 0x00);
setchar(0x967E6FC, 0xfff00, 0x80, 0x00);
setchar(0x967E820, 0x00cc33);
setchar(0x967E824, 0x33, 0x15, 0x00);
setchar(0x967E6F8, 0x00);
setchar(0x967E6FC, 0xFF, 0x40, 0x00);
setchar(0x967E820, 0x00);
setchar(0x967E824, 0xFF, 0x25, 0x00);
sethex(0x967E6C8, 0xFF);
#off
setchar(0x967E6F8, 0x04);
setchar(0x967E6FC, 0x00, 0x00, 0x00);
setchar(0x967E820, 0x04);
setchar(0x967E824, 0x00, 0x00, 0x00);
sethex(0x967E6C8, 0x01);
//sweet A$$ police car
setshort(0x992FDA0, 0x20, 0x20, 0x46, 0x75, 0x7a, 0x7a);
setchar(0x945ae12, 0x6);
setshort(0x9442110, 254);
setfloat(0x944210c, 2.5);
setfloat(0x945ad90, 1200);
setfloat(0x945ad98, 1.75);
setfloat(0x945ae50, 3.75);
setfloat(0x945ae54, 2.555555);
setfloat(0x945ae58, 0.50);
setfloat(0x945ae1c, 5);
setfloat(0x945ae20, 5);
setfloat(0x945ae14, 0.00013);
setfloat(0x945ae38, 45);
setfloat(0x945ae4c, 0.1);
setfloat(0x945ae5c, 999);
setfloat(0x945adb4, 0.3375);
setfloat(0x945ae3c, 9999999999999999999999999999999999999999999999);
setfloat(0x945ae40, 9999);
setfloat(0x945ad9c
sethex(0x945ae60, 0x03, 0x91, 0x00, 0x04);
sethex(0x944fb2c, 0xFF, 0xFF, 0x00);
sethex(0x944fb3c, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 157);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//sweet FBI car
setshort(0x992FD0C, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x61, 0x74, 0x74, 0x61, 0x6b);
setchar(0x945a692, 0x6);
setchar(0x945a690, 0x34);
setshort(0x9441300, 254);
setfloat(0x94412fc, 4);
setfloat(0x945a610, 1220);
setfloat(0x945a618, 999);
setfloat(0x945a6d4, 4.1999);
setfloat(0x945a69c, 5);
setfloat(0x945a6a0, 5);
setfloat(0x945a694, 0.0005);
setfloat(0x945a6b0, 0.3875);
setfloat(0x945a6b8, 45);
setfloat(0x945a6cc, .12345678912345678912345678123456789);
setfloat(0x945a6dc, 1232345);
setfloat(0x945a6bc, 999);
setfloat(0x945a6c0, 999);
setfloat(0x945a61c
sethex(0x945a6e0, 0x03, 0x81, 0x00, 0x04);
sethex(0x944fb4c, 0xFF, 0xFF, 0x00);
sethex(0x944fb1c, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 148);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//Knight Rider
setshort(0x99417F4, 0x6e, 0x69, 0x74, 0x65, 0x72, 0x69, 0x64, 0x65, 0x72);
setchar(0x945cd02, 0x6);
setchar(0x945cd00, 0x34);
setfloat(0x943f6dc, 3);
setfloat(0x945cc80, 1200);
setfloat(0x945cc88, 99999999);
setfloat(0x945cd40, 6);
setfloat(0x945cd44, 3.15);
setfloat(0x945cd48, 0.9625);
setfloat(0x945cd0c, 99999999);
setfloat(0x945cd10, 99999999);
setfloat(0x945cd04, 0.00013);
setfloat(0x945cd20, 2);
setfloat(0x945cd24, 56);
setfloat(0x945cd28, 40);
setfloat(0x945cd3c, 0.4875);
setfloat(0x945cd4c, 0.9875);
setfloat(0x945cca4, 0);
setfloat(0x945cd2c, 99999999);
setfloat(0x945cd30, 99999999);
setfloat(0x945cc8c, 999999999);
sethex(0x945cd50, 0x03, 0xa1, 0x00, 0x04);
sethex(0x944fb30, 0x00, 0x00, 0x00);
sethex(0x944faf8, 0x00, 0x00, 0x00);
setint(0x8E38A38, 130);
setchar(0x8E38A5C, 116, 102);
sethex(0x8E38A5E, 0x01, 0xFF);
setchar(pplayer + 0xB84, 0x00);
//dakota rules
teleport(248.68, -658.68, 26.02);
setchar(0x08B586C8, 0x41, 0x44, 0x45, 0x50, 0x53, 0x50, 0x20, 0x53, 0x49, 0x4D, 0x50, 0x4C, 0x59, 0x20, 0x4B, 0x49, 0x43, 0x4B, 0x53, 0x20, 0x41, 0x53, 0x53);
//DRAGSTER
setshort(0x992FC48, 0x20, 0x43, 0x72, 0x75, 0x73, 0x69, 0x65, 0x72);
setchar(0x9459c42, 0xa);
setfloat(0x944003c, 2.00);
setfloat(0x9459bc0, 1000);
setfloat(0x9459bc8, 999);
setfloat(0x9459c84, 2);
setfloat(0x9459c4c, 99999999);
setfloat(0x9459c50, 99999999);
setfloat(0x9459c60, 0.9875);
setfloat(0x9459c68, 26.25);
setfloat(0x9459c78, 2.375);
setfloat(0x9459c7c, 9999);
setfloat(0x9459c8c, 999);
setfloat(0x9459be4, -999);
setfloat(0x9459c6c, 999);
setfloat(0x9459c70, 999);
setfloat(0x9459bcc, 99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999);
sethex(0x9459c90, 0x03, 0x81, 0x00, 0x07);
sethex(0x944fb10, 0xFF, 0xFF, 0xFF);
sethex(0x944fb00, 0xFF, 0xFF, 0xFF);
setint(0x8E38AE8, 136);
setchar(0x8E38B0C, 108, 104);
sethex(0x8E38B0E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//Tiny
setshort(0x992FCDE, 0x74, 0x69, 0x6e, 0x79);
setchar(0x945a3c2, 0xa);
setchar(0x945a3c1, 0x50);
setchar(0x945a3c0, 0x34);
setshort(0x9440e50, 250);
setfloat(0x9440e4c, 10);
setfloat(0x945a348, 1.95);
setfloat(0x945a400, 12);
setfloat(0x945a404, 10.75);
setfloat(0x945a408, 0.725);
setfloat(0x945a3cc, 120);
setfloat(0x945a3d0, 120);
setfloat(0x945a3f8, 2.5);
setfloat(0x945a3fc, 0.49375);
setfloat(0x945a3ec, 1);
setfloat(0x945a3f0, 0.6);
setfloat(0x945a34c, 0);
sethex(0x945a410, 0x83, 0xc5, 0x00, 0x04);
sethex(0x944fb54, 0xFF, 0xFF, 0xFF);
sethex(0x944fb4c, 0x02, 0x00, 0xFF);
setint(0x8E38AE8, 145);
setchar(0x8E38B0C, 125, 123);
sethex(0x8E38B0E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//kawisaki ninja
setshort(0x99450E2, 0x20, 0x6b, 0x69, 0x6c, 0x6c, 0x65, 0x72);
setchar(0x945d482, 0xa);
setchar(0x945d481, 0x44);
setchar(0x945d480, 0x34);
setshort(0x9446c10, 250);
setfloat(0x9446c0c, 5);
setfloat(0x945d408, 1.95);
setfloat(0x945d4c0, 3);
setfloat(0x945d4c4, 5.5);
setfloat(0x945d48c, 180);
setfloat(0x945d490, 180);
setfloat(0x945d484, 0.00337);
setfloat(0x945d4a8, 49.375);
setfloat(0x945d4bc, 0.41875);
setfloat(0x945d4cc, 3);
setfloat(0x945d424, -0.4875);
setfloat(0x945d4ac, 0.975);
setfloat(0x945d4b0, 0.58875);
setfloat(0x945d40c, 99999999);
sethex(0x945d4d0, 0x83, 0x81, 0x01, 0x04);
sethex(0x944fafc, 0x00, 0x00, 0x00);
sethex(0x944fb38, 0x02, 0xFB, 0x02);
setint(0x8E38AE8, 205);
setchar(0x8E38B0C, 103, 118);
sethex(0x8E38B0E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//new company
setshort(0x992FD36, 0x20, 0x20, 0x44, 0x26, 0x4a, 0x20, 0x63, 0x61, 0x72);
setchar(0x945a872, 0x6);
setchar(0x945a870, 0x34);
setshort(0x9441620, 254);
setfloat(0x944161c, 4);
setfloat(0x945a7f0, 1600);
setfloat(0x945a8b4, -0.5);
setfloat(0x945a87c, 120);
setfloat(0x945a880, 120);
setfloat(0x945a8c4, 0.39);
setfloat(0x945a8bc, 4);
setfloat(0x945a7fc, 999999999);
sethex(0x945a8c0, 0x03, 0xa1, 0x00, 0x04);
sethex(0x944fb50, 0x00, 0xFB, 0x02);
sethex(0x944faf4, 0x00, 0xFB, 0x02);
setint(0x8E38988, 150);
setchar(0x8E389AC, 124, 101);
sethex(0x8E389AE, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//swe????oth
setshort(0x992FD70, 0x73, 0x77, 0x65, 0x65, 0x74, 0x74, 0x6f, 0x6f, 0x74, 0x68);
setchar(0x945ac32, 0xa);
setchar(0x945ac31, 0x50);
setchar(0x945ac30, 0x34);
setshort(0x9441c60, 255);
setfloat(0x9441c5c, 40);
setfloat(0x945abb0, 800);
setfloat(0x945abb8, 99);
setfloat(0x945ac70, 50);
setfloat(0x945ac74, 50);
setfloat(0x945ac78, 1);
setfloat(0x945ac3c, 300);
setfloat(0x945ac40, 300);
setfloat(0x945ac34, 1);
setfloat(0x945ac54, 5);
setfloat(0x945ac58, 47.5);
setfloat(0x945ac68, 2.5);
setfloat(0x945ac6c, 0.3625);
setfloat(0x945abd4, -19);
setchar(0x945abe0, 110);
setfloat(0x945ac5c, 99);
setfloat(0x945ac60, 99);
setfloat(0x945abbc, 9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999);
sethex(0x945ac80, 0x83, 0x45, 0x00, 0x05);
sethex(0x944faf4, 0xFF, 0x0D, 0x08);
sethex(0x944fb40, 0xFF, 0xFF, 0xFF);
setint(0x8E38A38, 154);
setchar(0x8E38A5C, 101, 120);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//the lowrider
setshort(0x992FF00, 0x72, 0x69, 0x64, 0x69, 0x6e, 0x20, 0x64, 0x69, 0x72, 0x74, 0x79);
setchar(0x945c492, 0x6);
setchar(0x945c490, 0x34);
setshort(0x9443a10, 250);
setfloat(0x9443a0c, 3);
setfloat(0x945c410, 1112);
setfloat(0x945c418, 88);
setfloat(0x945c4d0, 0.6125);
setfloat(0x945c4d4, 6);
setfloat(0x945c4d8, -0.001);
setfloat(0x945c49c, 78);
setfloat(0x945c4a0, 78);
setfloat(0x945c494, 0.0000192);
setfloat(0x945c4b0, 0.9875);
setfloat(0x945c4b4, 0.425);
setfloat(0x945c4b8, 50);
setfloat(0x945c4c8, 2.5);
setfloat(0x945c4cc, 10);
setfloat(0x945c4dc, 555);
setfloat(0x945c4bc, 1);
setfloat(0x945c4c0, 13);
setfloat(0x945c41c, 99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999);
sethex(0x945c4e0, 0x83, 0xa1, 0x00, 0x04);
sethex(0x944fb5c, 0xFF, 0xFF, 0x00);
sethex(0x944fb04, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 173);
sethex(0x8E38A5E, 0x01, 0x00);
setfloat(pcar + 0x3d8, 1);
setfloat(pcar + 0x400, 0, -1.26, 1);
setfloat(pcar + 0x438, 1);
setfloat(pcar + 0x460, 0, -1.26, 1);
setchar(pcar + 0x000006CC, 1);
setchar(pcar + 0x000006C8, 1);
setchar(pcar + 0x000006D4, 1);
setchar(pcar + 0x000006D0, 1);//
//cool linerunner
setshort(0x982FC1E, 0x89, 0x69, 0x6d, 0x10, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72);
sethex(0x9459ab1, 0x01);
setchar(0x9459a62, 0x6);
setchar(0x9459a61, 0x44);
setchar(0x9459a60, 0x34);
setshort(0x943fd20, 250);
setfloat(0x943fd1c, 1.20);
setfloat(0x94599e0, 4600);
setfloat(0x94599e8, 1.3);
setfloat(0x9459aa0, 0.2875);
setfloat(0x9459aa4, -0.075);
setfloat(0x9459aa8, 0.5);
setfloat(0x9459a6c, 1.35);
setfloat(0x9459a70, 1.35);
setfloat(0x9459a64, 0.00513);
setfloat(0x9459a80, 0.725);
setfloat(0x9459a84, 0);
setfloat(0x9459a88, 41.25);
setfloat(0x9459a98, 1.03125);
setfloat(0x9459a9c, 0.19375);
setfloat(0x9459ab4, 0.65);
setfloat(0x9459aac, 0);
setfloat(0x9459a00, 0);
setfloat(0x9459a04, 0);
setfloat(0x9459a08, -0.19999);
setchar(0x9459a10, 116);
setfloat(0x9459a8c, 0.65);
setfloat(0x9459a90, 0.4);
setfloat(0x94599ec, 0.13158);
setchar(0x967E6FC, 0xFF, 0x00, 0xFF);
sethex(0x944faf4, 0x00, 0x00, 0x00);
sethex(0x944fb14, 0x06, 0x00, 0xFF);
setint(0x8E38A38, 134);
setchar(0x8E38A5C, 101, 109);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//Heart Attack
setshort(0x992FCF8, 0x68, 0x61, 0x72, 0x74, 0x61, 0x74, 0x74, 0x61, 0x6b);
setchar(0x945a5a2, 0x6);
setchar(0x945a5a1, 0x50);
setshort(0x9441170, 254);
setfloat(0x944116c, 25);
setfloat(0x945a520, 1200);
setfloat(0x945a528, 50);
setfloat(0x945a5e0, 34);
setfloat(0x945a5e4, 28);
setfloat(0x945a5e8, 1);
setfloat(0x945a5ac, 125);
setfloat(0x945a5b0, 125);
setfloat(0x945a5a4, 0.00237);
setfloat(0x945a5c0, 0.9);
setfloat(0x945a5c8, 49.375);
setfloat(0x945a5d8, 4);
setfloat(0x945a5dc, 0.46875);
setfloat(0x945a5ec, 3);
setfloat(0x945a5cc, 400);
setfloat(0x945a5d0, 9999);
setfloat(0x945a52c, 9999999999999999999999999999999999999999999999999999999999999999999999);
sethex(0x945a5f0, 0xa3, 0x89, 0x00, 0x04);
sethex(0x944fb1c, 0xFF, 0xFF, 0x00);
sethex(0x944fb54, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 147);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//Holy !@*$
setchar(0x945b3b2, 0xa);
setshort(0x9442a70, 254);
setfloat(0x9442a6c, 99999999999999999999);
setfloat(0x945b330, 10000);
setfloat(0x945b3f0, 1.00);
setfloat(0x945b3f4, 9999999999999999999999999);
setfloat(0x945b3f8, 0.5875);
setfloat(0x945b3bc, 9999999999);
setfloat(0x945b3c0, 9999999999);
setfloat(0x945b3b4, 0.00013);
setfloat(0x945b3d0, 0.275);
setfloat(0x945b3d8, 38.125);
setfloat(0x945b3e8, 0);
setfloat(0x945b3ec, 0.49375);
setfloat(0x945b3fc, 0.9875);
setfloat(0x945b33c, 99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999);
sethex(0x945b400, 0x23, 0xe1, 0x00, 0x04);
sethex(0x944faf8, 0xFF, 0xFF, 0x00);
sethex(0x944fb04, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 163);
sethex(0x8E38A5E, 0x01, 0xFF);
setchar(pplayer + 0xB84, 0x00);
//lowrider sentile
setshort(0x992FC48, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x61, 0x72);
setchar(0x9459c41, 0x45);
setchar(0x9459c40, 0x34);
setfloat(0x944003c, 1.60);
setfloat(0x9459bc0, 1500);
setfloat(0x9459bc8, 1.075);
setfloat(0x9459c80, 0.525);
setfloat(0x9459c84, -0.01);
setfloat(0x9459c4c, 1.85);
setfloat(0x9459c50, 1.85);
setfloat(0x9459c44, 0.0005);
setfloat(0x9459c60, 0.65);
setfloat(0x9459c64, 0.425);
setfloat(0x9459c78, 2.46875);
setfloat(0x9459c8c, 0.9875);
setchar(0x9459bf0, 91);
setfloat(0x9459c6c, 0.775);
setfloat(0x9459c70, 0.51);
setfloat(0x9459bcc, 999999999999999999999999999999999999999999999999999999999999);
sethex(0x9459c90, 0x83, 0x81, 0x00, 0x04);
sethex(0x944fb2c, 0xCA, 0xC6, 0xC7);
sethex(0x944fb44, 0xCA, 0xC6, 0xC7);
setint(0x8E38AE8, 136);
setchar(0x8E38B0C, 115, 121);
sethex(0x8E38B0E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//!!!ALL WEAPONS!!!
//weapon 1
setfloat(0x08e2d800, 275.00, 314.00, -3);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//weapon 2
setfloat(0x08E2E400, 275.00, 314.00, -3);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x104);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
//weapon 3
setfloat(0x08e2d860, 275.00, 314.00, -3);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x105)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//weapon 4
setfloat(0x08e2d8c0, 275.00, 314.00, -3);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x106);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
//weapon 5
setfloat(0x08e2d920, 275.00, 314.00, -3, 0);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x107);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
//weapon 6
setfloat(0x08e2d980, 275.00, 314.00, -3);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x108);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
//weapon 7
setfloat(0x08e2d9e0, 275.00, 314.00, -3);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x109);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
//weapon 8
setfloat(0x08e2da40, 275.00, 314.00, -3);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x10a);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
//weapon 9
setfloat(0x08e2daa0, 275.00, 314.00, -3);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10b);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
//weapon 10
setfloat(0x08e2db00, 275.00, 314.00, -3);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10c);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
//weapon 11
setfloat(0x08E2DB60, 275.00, 314.00, -3);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10d);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
//weapon 12
setfloat(0x08E2DBC0, 275.00, 314.00, -3);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10e);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
//weapon 13
setfloat(0x08E2DC20, 275.00, 314.00, -3);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x10f);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
//weapon 14
setfloat(0x08E2DC80, 275.00, 314.00, -3);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x110);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
//weapon 15
setfloat(0x08E2DCE0, 275.00, 314.00, -3);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x112);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
//weapon 16
setfloat(0x08E2DD40, 275.00, 314.00, -3);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x113);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
//weapon 17
setfloat(0x08E2DDA0, 275.00, 314.00, -3);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x114);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
//weapon 18
setfloat(0x08E2DE00, 275.00, 314.00, -3);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x115);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
//weapon 19
setfloat(0x08E2DE60, 275.00, 314.00, -3);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x116);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
//weapon 20
setfloat(0x08E2DEC0, 275.00, 314.00, -3);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x117);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
//weapon 21
setfloat(0x08E2DF20, 275.00, 314.00, -3);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0xff, 0xff);
setshort(0x08E2DF46, 0x118);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
//weapon 22
setfloat(0x08E2DF80, 275.00, 314.00, -3);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0xff, 0xff);
setshort(0x08E2DFA6, 0x119);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
//weapon 23
setfloat(0x08E2DFE0, 275.00, 314.00, -3);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0xff, 0xff);
setshort(0x08E2E006, 0x11a);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
//weapon 24
setfloat(0x08E2E040, 275.00, 314.00, -3);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0xff, 0xff);
setshort(0x08E2E066, 0x11b);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
//weapon 25
setfloat(0x08E2E0A0, 275.00, 314.00, -3);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x11c);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
//weapon 26
setfloat(0x08E2E100, 275.00, 314.00, -3);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0xff, 0xff);
setshort(0x08E2E126, 0x11d);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
//weapon 27
setfloat(0x08E2E160, 275.00, 314.00, -3);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x11f);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
//weapon 28
setfloat(0x08E2E1C0, 275.00, 314.00, -3);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x122);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
//weapon 29
setfloat(0x08E2E220, 275.00, 314.00, -3);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0xff, 0xff);
setshort(0x08E2E246, 0x124);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
//weapon 30
setfloat(0x08E2E280, 275.00, 314.00, -3);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0xff, 0xff);
setshort(0x08E2E2A6, 0x22e);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
//weapon 31
setfloat(0x08E2E2E0, 275.00, 315.00, -3);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0xff, 0xff);
setshort(0x08E2E306, 0x24b);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
//weapon 32
setfloat(0x08E2E340, 275.00, 315.00, -3);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0xff, 0xff);
setshort(0x08E2E366, 0x104);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
//weapon 33
setfloat(0x08E2E3A0, 275.00, 314.00, -3);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0xff, 0xff);
setshort(0x08E2E3C6, 0x104);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
//weapon 34
setfloat(0x08E2E460, 275.00, 314.00, -3);
setint(0x08E2E474, 0);
setchar(0x08E2E47C, 0xff, 0xff);
setshort(0x08E2E486, 0x104);
setchar(0x08E2E492, 0x0f);
setchar(0x08E2E493, 0x00);
setchar(0x08E2D4B0, 0xff);
//weapon 35
setfloat(0x08E2E4C0, 275.00, 314.00, -3);
setint(0x08E2E4D4, 0);
setchar(0x08E2E4DC, 0xff, 0xff);
setshort(0x08E2E4E6, 0x104);
setchar(0x08E2E4F2, 0x0f);
setchar(0x08E2E4F3, 0x00);
setchar(0x08E2D510, 0xff);
//weapon 36
setfloat(0x08E2DDA0, 275.00, 315.00, -3);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x104);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
off()

#cheat Mansion Extenstion
//ID: 16249
//Score: 250
//Author: penguinsrule
//Category: Location Mods
//Description: This is an addon to sals mansion, it has 1 maverick, 1 dodo, 11 weapons, 2 leone sentinels, 2 pcj600, bansee, speeder, boat yard, weapons shack and walk way down tp the beach
//Image: http://telmaz.no-ip.info:3249/pictures/telsalv1.gif
//Time: 09/08/2006 17:01:16
//Working: Yes
moveto(1524.42, -257.85, -2.01);  object(0x01BF, 0, 0, 190);
move(7.05, -1.32, 0.00);  object(0x01BF, 0, 0, 190);
move(7.29, -1.25, 0.00);  object(0x01BF, 0, 0, 190);
move(0.57, 3.32, 3.30);  object(0x01BF, 90, 0, 190);
move(-7.49, 1.28, 0.00);  object(0x01BF, 90, 0, 190);
move(-7.88, 1.35, 0.00);  object(0x01BF, 90, 0, 190);
move(8.74, 3.64, 0.00);  object(0x01BF, 90, 0, 190);
move(-7.59, 1.30, 0.00);  object(0x01BF, 90, 0, 190);
move(2.19, 6.24, 0.00);  object(0x01BF, 90, 0, 190);
move(7.59, -1.30, 0.00);  object(0x01BF, 90, 0, 190);
move(5.91, -1.01, 0.00);  object(0x01BF, 90, 0, 190);
move(-12.84, 5.51, -3.20);  object(0x01BF, 0, 0, 190);
move(7.43, -1.29, -0.10);  object(0x01BF, 0, 0, 190);
move(5.91, -1.03, 0.00);  object(0x01BF, 0, 0, 190);
move(-4.76, -8.98, 0.00);  object(0x01BF, 0, 0, 280);
move(3.26, -2.54, 0.00);  object(0x01BF, 0, 0, 190);
move(0.29, 5.14, 0.00);  object(0x01BF, 0, 0, 190);
move(4.34, 2.52, -0.70);  object(0x01BF, 0, 270, 280);
move(-1.57, -11.50, 0.00);  object(0x01BF, 0, 270, 280);
moveto(1524.32, -254.48, 2.27);  object(0x01BF, 270, 20, 10);
move(-7.19, 1.23, 2.60);  object(0x01BF, 270, 20, 10);
moveto(1510.33, -251.91, 7.41);  object(0x01BF, 270, 20, 13);
moveto(1503.02, -250.54, 9.74);  object(0x01BF, 270, 15, 10);
moveto(1502.90, -247.26, 6.46);  object(0x01BF, 0, 15, 10);
move(-1.13, -6.29, 0.00);  object(0x01BF, 0, 15, 10);
move(8.48, 4.88, -2.30);  object(0x01BF, 0, 20, 10);
move(-1.33, -6.04, 0.00);  object(0x01BF, 0, 20, 10);
move(6.98, -1.23, -2.50);  object(0x01BF, 0, 20, 10);
move(1.07, 6.04, 0.00);  object(0x01BF, 0, 20, 10);
moveto(1522.95, -250.97, -0.43);  object(0x01BF, 0, 340, 190);
move(-1.63, -5.95, -0.00);  object(0x01BF, 0, 20, 10);
moveto(1457.10, -201.75, 54.83);  object(0x01E4, 270, 15, 270);
move(0.19, -8.71, 1.10);  object(0x01E4, 270, 0, 90);
move(5.17, -2.62, -2.50);  object(0x01E4, 270, 35, 0);
move(7.20, -0.05, -5.00);  object(0x01E4, 270, 35, 0);
move(6.70, -0.05, -4.70);  object(0x01E4, 270, 35, 0);
move(6.90, -0.05, -4.90);  object(0x01E4, 270, 35, 0);
move(6.90, -0.05, -4.80);  object(0x01E4, 270, 35, 0);
move(7.20, -0.05, -5.00);  object(0x01E4, 270, 35, 0);
move(7.20, -0.05, -5.00);  object(0x01E4, 270, 35, 0);
move(6.60, -0.05, -4.60);  object(0x01E4, 270, 35, 0);
move(7.00, -0.05, -4.90);  object(0x01E4, 270, 35, 0);
move(-3.79, 1.32, 3.50);  object(0x01EE, 0, 35, 0);
move(-6.50, 0.05, 4.60);  object(0x01EE, 0, 35, 0);
move(-6.60, 0.05, 4.60);  object(0x01EE, 0, 35, 0);
move(-6.71, 0.05, 4.70);  object(0x01EE, 0, 35, 0);
move(-6.60, 0.05, 4.50);  object(0x01EE, 0, 35, 0);
move(-6.70, 0.05, 4.60);  object(0x01EE, 0, 35, 0);
move(-6.70, 0.05, 4.60);  object(0x01EE, 0, 35, 0);
move(-6.70, 0.05, 4.80);  object(0x01EE, 0, 35, 0);
move(-7.50, 0.05, 5.30);  object(0x01EE, 0, 35, 0);
move(53.98, -3.32, -37.70);  object(0x01EE, 0, 35, 0);
move(-6.80, 0.05, 4.80);  object(0x01EE, 0, 35, 0);
move(-6.90, 0.05, 4.80);  object(0x01EE, 0, 35, 0);
move(-7.00, 0.05, 4.80);  object(0x01EE, 0, 35, 0);
move(-6.70, 0.05, 4.70);  object(0x01EE, 0, 35, 0);
move(-6.60, 0.05, 4.60);  object(0x01EE, 0, 35, 0);
move(-6.51, 0.05, 4.60);  object(0x01EE, 0, 35, 0);
move(-6.70, 0.05, 4.70);  object(0x01EE, 0, 35, 0);
move(-6.80, 0.05, 4.80);  object(0x01EE, 0, 35, 0);
move(-4.71, 0.03, 0.00);  object(0x01F0, 0, 0, 0);
move(3.15, 8.71, 0.00);  object(0x01EF, 0, 0, 90);
move(-2.97, -0.82, 0.70);  object(0x01EE, 0, 0, 90);
move(2.62, 0.62, -0.40);  object(0x01EF, 0, 15, 270);
move(-2.94, -0.02, 0.00);  object(0x01EF, 0, 15, 270);
moveto(1533.57, -241.13, 2.07);  object(0x01EE, 0, 0, 190);
move(7.98, -1.42, 0.00);  object(0x01EE, 0, 0, 190);
move(3.78, -0.71, -0.70);  object(0x01F0, 0, 0, 190);
move(-1.43, -6.35, 0.00);  object(0x01EF, 0, 0, 280);
move(-1.42, -11.42, 0.00);  object(0x01EF, 0, 0, 280);
move(-7.19, 1.23, 0.60);  object(0x01EE, 0, 0, 10);
move(-8.07, 1.45, 0.00);  object(0x01EE, 0, 0, 10);
move(-1.38, 0.25, 0.00);  object(0x01EE, 0, 0, 190);
move(0.12, 0.01, 0.20);  object(0x01EE, 0, 340, 190);
move(-7.78, 1.34, 2.90);  object(0x01EE, 0, 340, 190);
move(-8.14, 1.56, 3.00);  object(0x01EE, 0, 345, 192);
move(11.23, 4.41, -3.50);  object(0x01EE, 0, 20, 10);
move(-1.58, 0.27, 0.60);  object(0x01EE, 0, 340, 190);
move(-40.17, 47.93, 49.40);  object(0x01E4, 270, 345, 10);
move(8.43, -1.07, -0.10);  object(0x01E4, 270, 15, 10);
move(-3.27, 1.76, 1.60);  object(0x01EE, 0, 15, 10);
move(-0.47, -2.78, 0.00);  object(0x01EE, 0, 15, 10);
moveto(1483.84, -201.94, 55.70);  object(0x01EF, 0, 15, 190);
move(-0.42, -2.64, 0.00);  object(0x01EF, 0, 15, 190);
moveto(1499.60, -169.71, 56.17);  object(0x01BF, 0, 0, 90);
move(4.51, 3.84, 0.00);  object(0x01BF, 0, 0, 180);
move(7.50, -0.04, 0.00);  object(0x01BF, 0, 0, 180);
move(7.50, -0.04, 0.00);  object(0x01BF, 0, 0, 180);
move(4.22, -4.02, 0.00);  object(0x01BF, 0, 0, 90);
move(-3.21, -0.10, 3.30);  object(0x01BF, 270, 0, 90);
move(-6.22, -0.00, 0.00);  object(0x01BF, 270, 0, 90);
move(-6.06, -0.00, 0.00);  object(0x01BF, 270, 0, 90);
move(-4.26, 0.24, 0.00);  object(0x01BF, 270, 0, 90);
moveto(1503.64, -165.84, 56.10);  object(0x01BF, 0, 0, 180);
move(-0.72, -3.92, 3.30);  object(0x01BF, 270, 0, 90);
setchar(0x08E4Ebfc, 172);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 1406.60, -169.22, 50.90, 268);
setchar(0x08E4E9EC, 172);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 1409.33, -161.32, 52.25, 257);
setchar(0x08E4Ea44, 205);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 1417.04, -158.81, 52.56, 180);
setchar(0x08E4Ecd8, 205);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, 1420.96, -159.04, 52.54, 180);
setchar(0x08E4Eac8, 214);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 1498.34, -183.89, 54.57, 270);
setchar(0x08E4Eb78, 164);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 1498.34, -196.58, 54.46, 270);
setchar(0x08E4Ea18, 194);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 1541.64, -251.80, 1.60, 270);
setchar(0x08E4Ec54, 160);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, 1442.58, -188.79, 50.31, 0);
setfloat(0x08e2d800, 1502.03, -170.75, 54.92);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff);
setshort(0x08e2d826, 0x112);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08E2E400, 1504.03, -170.75, 54.92);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x112);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, 1506.03, -170.75, 54.92);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff);
setshort(0x08e2d886, 0x11a);
setchar(0x08e2d892, 0x0f);
setchar(0x08e2d893, 0x00);
setchar(0x08e2d8b0, 0xff);
setfloat(0x08e2d8c0, 1508.03, -170.75, 54.92);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x11a);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, 1510.03, -170.75, 54.92);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x108);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, 1512.03, -170.75, 54.92);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x108);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, 1514.03, -170.75, 54.92);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x114);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, 1516.03, -170.75, 54.92);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x114);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
setfloat(0x08e2daa0, 1518.03, -170.75, 54.92);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x115);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
setfloat(0x08e2db00, 1520.03, -170.75, 54.92);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x115);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
setfloat(0x08E2DCE0, 1539.41, -247.47, 2.47);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x121);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
teleport(1428.56, -184.22, 50.60);

#cheat Under Ground Base
//ID: 16091
//Score: 152
//Author: penguinsrule
//Category: Location Mods
//Description: This is a base on the end of the abandoned tunnel. Has 28 weapons+4 cars+dodo+hunter
//Image: http://telmaz.no-ip.info:3249/pictures/telunderv1.gif
//Time: 05/08/2006 22:14:30
//Working: Yes
moveto(342.22, -80.47, -12.32);  object(0x01BF, 270, 0, 155);
move(-7.13, -3.40, 0.00);  object(0x01BF, 270, 0, 155);
move(8.57, 3.32, 2.96);  object(0x01BF, 180, 0, 65);
move(-12.94, -6.09, 0.00);  object(0x01BF, 180, 0, 65);
move(2.87, 2.20, -3.00);  object(0x01BF, 90, 0, 155);
move(6.60, 1.72, 6.30);  object(0x01BF, 90, 0, 155);
move(-5.79, -2.74, 0.00);  object(0x01BF, 90, 0, 155);
move(0.00, 0.00, 0.00);  object(0x01BF, 90, 0, 155);
move(8.27, -2.95, -0.80);  object(0x01BF, 75, 0, 334);
move(-5.49, -2.66, 0.00);  object(0x01BF, 75, 0, 334);
move(8.70, -2.57, -1.30);  object(0x01BF, 90, 10, 65);
move(-6.11, -2.62, 0.00);  object(0x01BF, 90, 10, 64);
move(-0.44, -0.22, 0.00);  object(0x01BF, 90, 10, 64);
move(3.38, -6.91, -1.40);  object(0x01BF, 90, 10, 65);
move(6.31, 2.87, 0.10);  object(0x01BF, 90, 350, 245);
move(-18.64, 21.14, 0.00);  object(0x01BF, 0, 0, 290);
move(12.98, 5.75, 0.00);  object(0x01BF, 0, 0, 290);
move(-10.08, -7.03, -3.00);  object(0x01BF, 270, 0, 290);
move(2.66, 7.22, 0.00);  object(0x01BF, 270, 0, 290);
move(0.73, 1.97, 0.00);  object(0x01BF, 270, 0, 290);
move(3.34, -1.12, 0.00);  object(0x01BF, 270, 0, 110);
move(-1.34, -3.66, 0.00);  object(0x01BF, 270, 0, 110);
move(-4.66, -7.74, 6.30);  object(0x01BF, 270, 0, 155);
move(5.64, 2.58, 0.00);  object(0x01BF, 270, 0, 155);
move(-5.67, 0.34, 0.00);  object(0x01BF, 270, 0, 200);
move(2.10, 5.68, 0.00);  object(0x01BF, 270, 0, 200);
move(1.97, -0.73, 0.00);  object(0x01BF, 270, 0, 200);
move(1.67, 4.52, 0.00);  object(0x01BF, 270, 0, 200);
move(-1.97, 0.73, 0.00);  object(0x01BF, 270, 0, 200);
move(-4.68, -1.06, -3.30);  object(0x01BF, 180, 0, 110);
move(0.51, 1.41, 0.00);  object(0x01BF, 180, 0, 110);
move(14.79, -0.70, 0.00);  object(0x01BF, 180, 0, 198);
move(-17.09, 5.65, 0.00);  object(0x01BF, 180, 0, 198);
move(-2.19, 5.02, 0.00);  object(0x01BF, 180, 0, 290);
move(2.66, 7.33, 0.00);  object(0x01BF, 180, 0, 290);
move(1.11, -8.99, -3.00);  object(0x01BF, 90, 0, 200);
move(6.94, -2.56, 0.00);  object(0x01BF, 90, 0, 200);
move(7.13, -2.63, 0.00);  object(0x01BF, 90, 0, 200);
move(2.53, -0.93, 0.00);  object(0x01BF, 90, 0, 200);
move(-14.43, 12.01, 0.00);  object(0x01BF, 90, 0, 200);
move(7.32, -2.70, 0.00);  object(0x01BF, 90, 0, 200);
move(7.32, -2.70, 0.00);  object(0x01BF, 90, 0, 200);
move(1.69, -0.62, 0.00);  object(0x01BF, 90, 0, 200);
move(-14.69, 12.60, 1.70);  object(0x01BF, 90, 335, 290);
move(-2.19, 4.00, 1.30);  object(0x01BF, 0, 0, 110);
move(2.52, 7.07, 0.00);  object(0x01BF, 0, 0, 110);
move(1.73, -5.36, 1.50);  object(0x01BF, 270, 335, 290);
move(2.66, 6.14, 1.70);  object(0x01BF, 270, 0, 200);
move(-4.43, -12.62, -6.20);  object(0x01BF, 270, 0, 200);
move(7.25, -2.60, 0.00);  object(0x01BF, 270, 0, 200);
move(7.34, -2.64, 0.00);  object(0x01BF, 270, 0, 200);
move(1.79, -0.64, 0.00);  object(0x01BF, 270, 0, 200);
move(-14.31, 11.05, 0.00);  object(0x01BF, 270, 0, 200);
move(7.34, -2.64, 0.00);  object(0x01BF, 270, 0, 200);
move(7.34, -2.64, 0.00);  object(0x01BF, 270, 0, 200);
move(1.41, -0.51, 0.00);  object(0x01BF, 270, 0, 200);
move(-14.06, 11.44, 0.00);  object(0x01BF, 270, 0, 200);
move(7.15, -2.57, 0.00);  object(0x01BF, 270, 0, 200);
move(7.44, -2.67, 0.00);  object(0x01BF, 270, 0, 200);
move(1.51, -0.54, 0.00);  object(0x01BF, 270, 0, 200);
move(-15.05, 8.99, 2.90);  object(0x01BF, 180, 0, 200);
move(7.44, -2.67, 0.00);  object(0x01BF, 180, 0, 200);
move(7.25, -2.60, 0.00);  object(0x01BF, 180, 0, 200);
move(1.51, -0.54, 0.00);  object(0x01BF, 180, 0, 200);
move(-10.28, 1.86, 3.30);  object(0x01BF, 90, 0, 20);
move(7.43, -2.69, 0.00);  object(0x01BF, 90, 0, 20);
move(2.07, -0.75, 0.00);  object(0x01BF, 90, 0, 20);
move(-2.12, -5.85, 0.00);  object(0x01BF, 90, 0, 20);
move(-7.24, 2.62, 0.00);  object(0x01BF, 90, 0, 20);
move(-2.26, 0.82, 0.00);  object(0x01BF, 90, 0, 20);
move(-2.11, -5.82, 0.00);  object(0x01BF, 90, 0, 20);
move(8.27, -2.99, 0.00);  object(0x01BF, 90, 0, 20);
move(-0.94, 0.34, 0.00);  object(0x01BF, 90, 0, 20);
move(1.97, -0.71, 0.00);  object(0x01BF, 90, 0, 20);
move(-17.27, 1.64, 0.00);  object(0x01BF, 90, 0, 20);
move(7.24, -2.62, 0.00);  object(0x01BF, 90, 0, 20);
move(7.43, -2.69, 0.00);  object(0x01BF, 90, 0, 20);
move(1.13, -0.41, 0.00);  object(0x01BF, 90, 0, 20);
move(-19.04, -2.76, 0.00);  object(0x01BF, 90, 0, 200);
move(7.33, -2.68, 0.00);  object(0x01BF, 90, 0, 200);
move(7.42, -2.71, 0.00);  object(0x01BF, 90, 0, 200);
move(1.88, -0.69, 0.00);  object(0x01BF, 90, 0, 200);
move(0.48, 2.73, 0.00);  object(0x01BF, 90, 0, 200);
move(-7.22, 2.67, 0.00);  object(0x01BF, 90, 0, 200);
move(-7.04, 2.60, 0.00);  object(0x01BF, 90, 0, 200);
move(-1.78, 0.66, 0.00);  object(0x01BF, 90, 0, 200);
move(19.04, -8.98, -3.10);  object(0x01BF, 180, 0, 290);
move(2.65, 7.44, 0.00);  object(0x01BF, 180, 0, 290);
move(2.55, 7.16, 0.00);  object(0x01BF, 180, 0, 290);
move(2.38, 6.69, 0.00);  object(0x01BF, 180, 0, 290);
move(0.00, 0.00, 6.20);  object(0x01BF, 180, 0, 290);
move(-2.61, -7.35, 0.00);  object(0x01BF, 180, 0, 290);
move(-2.58, -7.25, 0.00);  object(0x01BF, 180, 0, 290);
move(-2.28, -6.41, 0.00);  object(0x01BF, 180, 0, 290);
move(-5.17, -2.64, 0.00);  object(0x01BF, 180, 0, 200);
move(-16.27, 5.89, 0.00);  object(0x01BF, 180, 0, 200);
move(-2.15, 4.90, 0.00);  object(0x01BF, 180, 0, 110);
move(2.75, 7.41, 0.00);  object(0x01BF, 180, 0, 110);
move(2.71, 7.31, 0.00);  object(0x01BF, 180, 0, 110);
move(2.43, 6.56, 0.00);  object(0x01BF, 180, 0, 110);
move(11.63, -29.00, 3.20);  object(0x01BF, 270, 0, 200);
move(-7.23, 2.65, 0.00);  object(0x01BF, 270, 0, 200);
move(-6.76, 2.48, 0.00);  object(0x01BF, 270, 0, 200);
move(-2.07, 0.76, 0.00);  object(0x01BF, 270, 0, 200);
move(2.12, 5.76, 0.00);  object(0x01BF, 270, 0, 200);
move(7.32, -2.69, 0.00);  object(0x01BF, 270, 0, 200);
move(7.51, -2.76, 0.00);  object(0x01BF, 270, 0, 200);
move(1.13, -0.41, 0.00);  object(0x01BF, 270, 0, 200);
move(2.11, 5.74, 0.00);  object(0x01BF, 270, 0, 200);
move(-7.32, 2.69, 0.00);  object(0x01BF, 270, 0, 200);
move(-7.23, 2.65, 0.00);  object(0x01BF, 270, 0, 200);
move(-1.31, 0.48, 0.00);  object(0x01BF, 270, 0, 200);
move(2.16, 5.87, 0.00);  object(0x01BF, 270, 0, 200);
move(7.32, -2.69, 0.00);  object(0x01BF, 270, 0, 200);
move(7.23, -2.65, 0.00);  object(0x01BF, 270, 0, 200);
move(1.13, -0.41, 0.00);  object(0x01BF, 270, 0, 200);
move(1.91, 5.21, 0.00);  object(0x01BF, 270, 0, 200);
move(-7.13, 2.62, 0.00);  object(0x01BF, 270, 0, 200);
move(-7.23, 2.65, 0.00);  object(0x01BF, 270, 0, 200);
move(-1.13, 0.41, 0.00);  object(0x01BF, 270, 0, 200);
move(1.03, 2.81, -3.40);  object(0x01BF, 0, 0, 200);
move(7.42, -2.72, 0.00);  object(0x01BF, 0, 0, 200);
move(7.04, -2.59, 0.00);  object(0x01BF, 0, 0, 200);
move(1.03, -0.38, 0.00);  object(0x01BF, 0, 0, 200);
move(-23.09, -25.52, -2.10);  object(0x01EE, 0, 0, 110);
move(-2.80, -7.93, 0.10);  object(0x01EE, 0, 0, 110);
move(10.02, -1.42, -0.20);  object(0x01EE, 0, 0, 290);
move(3.16, -6.89, 0.20);  object(0x01EE, 0, 0, 245);
move(3.46, -7.43, -2.00);  object(0x01EE, 0, 345, 245);
move(3.55, -7.61, -1.40);  object(0x01EE, 0, 350, 245);
move(-22.68, 15.79, 3.40);  object(0x01EE, 0, 0, 65);
move(3.51, -7.63, -0.30);  object(0x01EE, 0, 15, 65);
move(3.69, -7.44, -2.00);  object(0x01EE, 0, 10, 65);
setchar(0x08E4Ebfc, 131);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 342.63, -90.08, -12.23, 25);
setchar(0x08E4E9EC, 137);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 346.84, -98.39, -13.39, 25);
setchar(0x08E4Ea44, 142);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 350.84, -106.41, -15.27, 25);
setchar(0x08E4Eac8, 213);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 342.89, -95.41, -7.09, 20);
setchar(0x08E4Eb78, 164);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 353.33, -118.03, -10.57, 280);
setchar(0x08E4Eba4, 130);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 354.92, -114.90, -16.54, 25);
setfloat(0x08e2d800, 350.69, 68.76, -11.28);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
setfloat(0x08E2E400, 351.76, -65.75, -11.28);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x104);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, 352.83, -62.74, -11.28);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x105)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
setfloat(0x08e2d8c0, 353.90, -59.73, -11.28);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x106);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, 354.76, -56.72, -11.28);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x107);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, 356.04, -53.71, -11.28);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x108);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, 357.11, 50.70, -11.28);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x109);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, 358.18, 47.69, -11.28);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x10a);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
setfloat(0x08e2daa0, 359.25, 44.68, -11.28);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10b);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
setfloat(0x08e2db00, 350.69, 68.76, -5.08);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10c);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
setfloat(0x08E2DB60, 351.76, -65.75, -5.08);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10d);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
setfloat(0x08E2DBC0, 352.83, -62.74, -5.08);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10e);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
setfloat(0x08E2DC20, 353.90, -59.73, -5.08);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x10f);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
setfloat(0x08E2DC80, 354.76, -56.72, -5.08);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x110);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
setfloat(0x08E2DCE0, 356.04, -53.71, -5.08);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x112);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
setfloat(0x08E2DD40, 357.11, 50.70, 5.08);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x113);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
setfloat(0x08E2DDA0, 358.18, 47.69, -5.08);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x114);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
setfloat(0x08E2DE00, 359.25, 44.68, -5.08);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x115);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
setfloat(0x08E2DE60, 330.65, -61.19, -5.08);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x116);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
setfloat(0x08E2DEC0, 331.67, -59.31, -5.08);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x117);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
setfloat(0x08E2DF20, 332.69, -56.30, -5.08);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0xff, 0xff);
setshort(0x08E2DF46, 0x118);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
setfloat(0x08E2DF80, 333.71, -53.29, -5.08);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0xff, 0xff);
setshort(0x08E2DFA6, 0x119);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
setfloat(0x08E2DFE0, 356.75, -43.58, -11.28);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0xff, 0xff);
setshort(0x08E2E006, 0x11a);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
setfloat(0x08E2E040, 353.87, -42.65, -11.28);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0xff, 0xff);
setshort(0x08E2E066, 0x11b);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
setfloat(0x08E2E0A0, 350.99, -41.72, -11.28);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x11c);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
setfloat(0x08E2E100, 348.11, -40.79, -11.28);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0xff, 0xff);
setshort(0x08E2E126, 0x11d);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
setfloat(0x08E2E160, 345.23, -39.86, -11.28);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x11e);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
setfloat(0x08E2E1C0, 342.35, -38.93, -11.28);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x11f);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
teleport(352.16, -117.95, -16.74)

#cheat TONY'S PRIVATE PENTHOUSE BETA V2
//ID: 15651
//Score: 171
//Author: art_m11
//Category: Location Mods
//Description: THIS AWESOME CHEAT
//WILL CREATE
//A PENTHOUSE
//WIT IT'S OWN
//CAFE,LIGHTS,
//DODO, HUNTER,
//GAS STATION
//AND 3 DEAD
//FBI GUYS
//AT THE TOP OF ONE OF THE HIGHEST BUILDINGS
//IN GTA:LCS!
//THIS IS ONE OF MY BEST CHEATS,
//TRY IT OUT!
//
//Image: http://i55.photobucket.com/albums/g154/artur_album/pent.jpg
//Time: 29/07/2006 17:44:53
//Working: Yes
moveto(197.58, -990.66, 120.36);  object(0x020F, 0, 0, 90);
move(-0.01, 1.50, 0.00);  object(0x020F, 0, 0, 90);
move(-0.01, 1.60, 0.00);  object(0x020F, 0, 0, 90);
move(-0.01, 1.80, 0.00);  object(0x020F, 0, 0, 90);
move(-0.02, 1.90, 0.00);  object(0x020F, 0, 0, 90);
move(-0.01, 1.80, 0.00);  object(0x020F, 0, 0, 90);
move(0.05, 1.70, 0.00);  object(0x020F, 0, 0, 90);
move(-0.01, 1.60, 0.00);  object(0x020F, 0, 0, 90);
move(-0.02, 1.90, 0.00);  object(0x020F, 0, 0, 90);
move(-0.01, 1.80, 0.00);  object(0x020F, 0, 0, 90);
move(-0.02, 1.90, 0.00);  object(0x020F, 0, 0, 90);
move(-0.02, 1.90, 0.00);  object(0x020F, 0, 0, 90);
move(-0.02, 2.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.03, 2.20, 0.00);  object(0x020F, 0, 0, 90);
move(-0.02, 2.10, 0.00);  object(0x020F, 0, 0, 90);
move(-0.02, 2.10, 0.00);  object(0x020F, 0, 0, 90);
move(-0.02, 2.20, 0.00);  object(0x020F, 0, 0, 90);
move(-0.02, 2.20, 0.00);  object(0x020F, 0, 0, 90);
move(-0.02, 2.00, 0.00);  object(0x020F, 0, 0, 90);
move(-0.02, 2.00, 0.00);  object(0x020F, 0, 0, 90);
move(0.02, 1.73, 0.00);  object(0x020F, 0, 0, 180);
move(1.70, -0.01, 0.00);  object(0x020F, 0, 0, 180);
move(2.00, -0.01, 0.00);  object(0x020F, 0, 0, 180);
move(2.00, 0.08, 0.00);  object(0x020F, 0, 0, 180);
move(2.20, -0.01, 0.00);  object(0x020F, 0, 0, 180);
move(2.20, -0.01, 0.00);  object(0x020F, 0, 0, 180);
move(2.20, -0.01, 0.00);  object(0x020F, 0, 0, 180);
move(2.20, -0.01, 0.00);  object(0x020F, 0, 0, 180);
move(2.00, -0.01, 0.00);  object(0x020F, 0, 0, 180);
move(2.30, -0.02, 0.00);  object(0x020F, 0, 0, 180);
move(2.00, -0.01, 0.00);  object(0x020F, 0, 0, 180);
move(2.30, -0.02, 0.00);  object(0x020F, 0, 0, 180);
move(2.10, -0.01, 0.00);  object(0x020F, 0, 0, 180);
move(2.20, -0.01, 0.00);  object(0x020F, 0, 0, 180);
move(2.00, -0.01, 0.00);  object(0x020F, 0, 0, 180);
move(2.20, -0.01, 0.00);  object(0x020F, 0, 0, 180);
move(2.10, -0.01, 0.00);  object(0x020F, 0, 0, 180);
move(2.10, -0.01, 0.00);  object(0x020F, 0, 0, 180);
move(2.40, -0.02, 0.00);  object(0x020F, 0, 0, 180);
move(-0.03, -2.24, 0.00);  object(0x020F, 0, 0, 270);
move(0.03, -2.40, 0.00);  object(0x020F, 0, 0, 270);
move(0.02, -2.10, 0.00);  object(0x020F, 0, 0, 270);
move(0.02, -2.00, 0.00);  object(0x020F, 0, 0, 270);
move(0.02, -2.10, 0.00);  object(0x020F, 0, 0, 270);
move(0.03, -2.40, 0.00);  object(0x020F, 0, 0, 270);
move(0.03, -2.30, 0.00);  object(0x020F, 0, 0, 270);
move(0.03, -2.30, 0.00);  object(0x020F, 0, 0, 270);
move(0.03, -2.50, 0.00);  object(0x020F, 0, 0, 270);
move(0.02, -2.20, 0.00);  object(0x020F, 0, 0, 270);
move(0.03, -2.40, 0.00);  object(0x020F, 0, 0, 270);
move(0.03, -2.40, 0.00);  object(0x020F, 0, 0, 270);
move(0.03, -2.30, 0.00);  object(0x020F, 0, 0, 270);
move(0.03, -2.40, 0.00);  object(0x020F, 0, 0, 270);
move(0.02, -2.10, 0.00);  object(0x020F, 0, 0, 270);
move(0.02, -1.90, 0.00);  object(0x020F, 0, 0, 270);
move(0.02, -1.90, 0.00);  object(0x020F, 0, 0, 270);
move(-2.38, -0.12, 0.00);  object(0x020F, 0, 0, 0);
move(-2.50, -0.02, 0.00);  object(0x020F, 0, 0, 0);
move(-2.50, -0.02, 0.00);  object(0x020F, 0, 0, 0);
move(-2.40, -0.02, 0.00);  object(0x020F, 0, 0, 0);
move(-2.50, -0.02, 0.00);  object(0x020F, 0, 0, 0);
move(-2.70, -0.02, 0.00);  object(0x020F, 0, 0, 0);
move(-2.50, -0.02, 0.00);  object(0x020F, 0, 0, 0);
move(-2.80, -0.02, 0.00);  object(0x020F, 0, 0, 0);
move(-2.80, -0.02, 0.00);  object(0x020F, 0, 0, 0);
move(-3.00, -0.03, 0.00);  object(0x020F, 0, 0, 0);
move(-3.00, -0.03, 0.00);  object(0x020F, 0, 0, 0);
move(-2.80, -0.02, 0.00);  object(0x020F, 0, 0, 0);
move(-2.60, -0.02, 0.00);  object(0x020F, 0, 0, 0);
move(-2.10, -0.02, 0.00);  object(0x020F, 0, 0, 0);
move(-0.96, 1.73, 0.20);  object(0x0257, 0, 0, 2);
move(0.94, 5.86, 0.40);  object(0x025B, 0, 0, 2);
move(0.26, 5.31, 0.00);  object(0x025B, 0, 0, 3);
move(-0.14, 5.23, 0.00);  object(0x025B, 0, 0, 0);
move(0.66, 4.20, -0.10);  object(0x025B, 0, 0, 185);
move(7.01, -18.56, 0.90);  object(0x025C, 0, 0, 87);
move(2.50, -0.52, -2.40);  object(0x0224, 0, 0, 190);
move(-5.35, -0.22, -0.10);  object(0x0224, 0, 0, 196);
move(-1.43, 28.45, 1.30);  object(0x09F9, 0, 0, 341);
move(-3.51, -6.22, -0.10);  object(0x023B, 0, 0, 357);
move(-0.10, 1.81, 0.00);  object(0x023B, 0, 0, 357);
//HELICOPTER SPAWNS
//HUNTER
setchar(0x08E4Eba4, 213);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 223.27, -983.72, 121.16);
//MAVERICK
setchar(0x08E4Ebd0, 214);
setchar(0x08E4Ebd0 + 0x18, 0x01);
setfloat(0x08E4Ebd4, 221.74, -972.85, 121.16);
//PLANE
//DODO
setchar(0x08E4Eb4c, 164);
setchar(0x08E4Eb4c + 0x18, 0x01);
setfloat(0x08E4Eb50, 222.62, -961.32, 121.16);
teleport(206.90, -988.07, 121.16);

#cheat >>>TONY'S PRIVATE MANSION
//ID: 15559
//Score: 213
//Author: art_m11
//Category: Location Mods
//Description: THIS  AWESOME CHEAT
//WILL SPAWN 
//8 REALLY GREAT PMG CARS
//NEAR SAL'S HOUSE!
//IT WILL ALSO
//CREATE 
//SALVATORES OFFICE
//AND YOU'LL BE ABLE TO WALK INSIDE!
//+ 
//GARAGE DOOR WILL BE OPEN
//AND THERE WILL BE A DODO IN THE GARAGE!
//YOU MUST TRY IT OUT!
//Image: http://i55.photobucket.com/albums/g154/artur_album/fc014d22.jpg
//Time: 27/07/2006 18:55:22
//Working: Yes
//LIGHTS AND SALVATORES OFFICE
moveto(1444.03, -166.76, 54.72);  object(0x0FF6, 0, 0, 93);
moveto(1386.10, -278.68, 52.47);  object(0x020F, 0, 0, 91);
move(-0.94, -10.67, -3.50);  object(0x020F, 0, 0, 121);
move(41.03, 100.60, 3.65);  object(0x020F, 0, 0, 32);
move(-1.72, -10.36, 0.00);  object(0x020F, 0, 0, 337);
move(4.68, 34.23, 5.00);  object(0x020F, 0, 0, 109);
move(-0.72, -11.70, 0.00);  object(0x020F, 0, 0, 119);
move(0.28, -6.06, -2.60);  object(0x020F, 0, 0, 102);
move(-13.09, -3.17, -5.40);  object(0x020F, 0, 0, 334);
move(-11.70, 4.73, 0.00);  object(0x020F, 0, 0, 334);
move(13.01, 31.23, 3.70);  object(0x020F, 0, 0, 146);
move(-13.27, -5.45, -0.50);  object(0x020F, 0, 0, 211);
move(-4.29, -12.57, -2.50);  object(0x020F, 0, 0, 113);
move(83.85, -37.71, 7.20);  object(0x020F, 0, 0, 239);
move(3.74, 18.22, 0.00);  object(0x020F, 0, 0, 239);
move(3.08, 16.76, 0.00);  object(0x020F, 0, 0, 239);
move(-17.60, 4.49, 0.00);  object(0x020F, 0, 0, 239);
move(-25.09, 5.00, 0.00);  object(0x020F, 0, 0, 238);
move(15.01, -44.99, 0.00);  object(0x020F, 0, 0, 348);
move(-26.65, 23.87, -3.00);  object(0x020F, 0, 0, 113);
//PMG CARS
//BMW M3 GTR
setshort(0x992FEE2, 0x20, 0x20, 0x20, 0x20, 0x42, 0x4d, 0x57, 0x20, 0x4d, 0x33, 0x20, 0x47, 0x54, 0x52);
setchar(0x945bd12, 0x6);
setchar(0x945bd11, 0x44);
setshort(0x9443880, 250);
setfloat(0x944387c, 0.83);
setfloat(0x945bc90, 3000);
setfloat(0x945bc98, 1.500);
setfloat(0x945bd50, 0.20);
setfloat(0x945bd54, -0.0625);
setfloat(0x945bd58, 0.40);
setfloat(0x945bd1c, 4);
setfloat(0x945bd20, 4);
setfloat(0x945bd14, 0.0035);
setfloat(0x945bd30, 0.60);
setfloat(0x945bd38, 36);
setfloat(0x945bd48, 0.75);
setfloat(0x945bd4c, 0.125);
setfloat(0x945bcb4, 0.0125);
setfloat(0x945bcb8, -0.425);
setfloat(0x945bd3c, 0.90000);
setfloat(0x945bd40, 0.43875);
sethex(0x945bd60, 0x00, 0x81, 0x00, 0x05);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb4c, 0xFF, 0xFF, 0x00);
sethex(0x944fb24, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 172);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//SUPERCHARGED CHEVY CAMARO CONVERTIBLE 1969
setshort(0x992FE80, 0x20, 0x47, 0x41, 0x4e, 0x47, 0x53, 0x54, 0x41);
setchar(0x945ba42, 0x5);
setshort(0x94430b0, 250);
setfloat(0x94430ac, 0.82);
setfloat(0x945b9c0, 5000);
setfloat(0x945b9c8, 1.55);
setfloat(0x945ba80, 0.2);
setfloat(0x945ba84, -0.15);
setfloat(0x945ba88, 0.425);
setfloat(0x945ba4c, 4);
setfloat(0x945ba50, 4);
setfloat(0x945ba44, 0.00337);
setfloat(0x945ba60, 0.5);
setfloat(0x945ba68, 36.875);
setfloat(0x945ba78, 1.46875);
setfloat(0x945b9e4, 0);
setfloat(0x945b9e8, -0.4125);
setchar(0x945b9f0, 13);
setfloat(0x945ba6c, 0.9);
setfloat(0x945ba70, 0.44625);
setfloat(0x945b9cc, 0.5);
sethex(0x945ba90, 0x80, 0x89, 0x00, 0x03);
setchar(0x967E6FC, 0xFF, 0x00, 0xFF);
sethex(0x944fb2c, 0x54, 0xD5, 0xF2);
sethex(0x944fb50, 0x03, 0x00, 0x11);
setint(0x8E38A38, 167);
setchar(0x8E38A5C, 115, 124);
sethex(0x8E38A5E, 0x01, 0xFF);
setchar(pplayer + 0xB84, 0x00);
//FORD SHELBY COBRA GT 500
setshort(0x993002A, 0x53, 0x48, 0x45, 0x4c, 0x42, 0x59, 0x20, 0x47, 0x54, 0x20, 0x35, 0x30, 0x30);
setchar(0x945cdf2, 0x5);
setshort(0x9444cd0, 250);
setfloat(0x9444ccc, 0.775);
setfloat(0x945cd70, 3000);
setfloat(0x945cd78, 1.7);
setfloat(0x945ce30, 0.2625);
setfloat(0x945ce34, -0.0875);
setfloat(0x945cdfc, 2.8);
setfloat(0x945ce00, 2.8);
setfloat(0x945cdf4, 0.00313);
setfloat(0x945ce10, 0.6625);
setfloat(0x945ce18, 35);
setfloat(0x945ce2c, 0.08125);
setfloat(0x945cd98, -0.3875);
setfloat(0x945ce20, 0.45);
sethex(0x945ce40, 0x80, 0x81, 0x00, 0x05);
setchar(0x967E6FC, 0xFF, 0xFF, 0x00);
sethex(0x944fb48, 0xFF, 0xFF, 0x00);
sethex(0x944fb40, 0x00, 0x00, 0x00);
setint(0x8E38A38, 185);
setchar(0x8E38A5C, 122, 120);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//SUPERCHARGED 2006 DODGE VIPER RT 10
setshort(0x992FDD4, 0x20, 0x20, 0x56, 0x49, 0x50, 0x45, 0x52);
setfloat(0x94425bc, 0.82);
setfloat(0x945b060, 3000);
setfloat(0x945b068, 1.5);
setfloat(0x945b120, 0.2625);
setfloat(0x945b124, -0.1);
setfloat(0x945b0ec, 3.5);
setfloat(0x945b0f0, 3.5);
setfloat(0x945b0e4, 0.00325);
setfloat(0x945b100, 0.6625);
setfloat(0x945b11c, 0.21875);
setfloat(0x945b088, -0.425);
setfloat(0x945b10c, 0.90);
setfloat(0x945b110, 0.45);
sethex(0x945b130, 0x80, 0xa1, 0x00, 0x05);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb5c, 0xB3, 0x01, 0x00);
sethex(0x944fb48, 0x00, 0x00, 0x00);
setint(0x8E38A38, 160);
setchar(0x8E38A5C, 127, 122);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//TOYOTA TUNDRA
setshort(0x992FD62, 0x4d, 0x41, 0x44, 0x44, 0x4f, 0x47);
setchar(0x945ab42, 0x5);
setchar(0x945ab41, 0x44);
setchar(0x945ab40, 0x52);
setshort(0x9441ad0, 250);
setfloat(0x9441acc, 0.825);
setfloat(0x945aac0, 1800);
setfloat(0x945aac8, 1.075);
setfloat(0x945ab80, 0.2);
setfloat(0x945ab84, -0.1);
setfloat(0x945ab88, 0.4);
setfloat(0x945ab4c, 2.5);
setfloat(0x945ab50, 2.5);
setfloat(0x945ab44, 0.00313);
setfloat(0x945ab60, 0.5);
setfloat(0x945ab64, 0);
setfloat(0x945ab68, 35);
setfloat(0x945ab78, 1.59375);
setfloat(0x945ab7c, 0.1375);
setfloat(0x945ab94, 0.26);
setfloat(0x945ab8c, 0);
setfloat(0x945aae0, 0);
setfloat(0x945aae4, 0.025);
setfloat(0x945aae8, -0.4);
setchar(0x945aaf0, 75);
setfloat(0x945ab6c, 0.90625);
setfloat(0x945ab70, 0.45);
setfloat(0x945aacc, 0.23529);
sethex(0x945ab90, 0x82, 0x8b, 0x00, 0x05);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb54, 0x00, 0x00, 0x00);
sethex(0x944fafc, 0xFF, 0x0D, 0x08);
setint(0x8E38A38, 153);
setchar(0x8E38A5C, 125, 103);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//A$$PERANTO

#cheat Perfect Dodo v2
//ID: 14788
//Score: 63
//Author: almost219
//Category: Vehicle
//Description: near indestructuble, perfect handling dodo that spawns at stuanton garage
//Image: none
//Time: 15/07/2006 21:16:25
//Working: Yes
setchar(0x945b772, 0x3);
setshort(0x9442c00, 250);
setfloat(0x9442bfc, .7);
setfloat(0x945b6f8, 9);
setfloat(0x945b77c, .88888);
setfloat(0x945b780, .88888);
setfloat(0x945b774, .001);
setfloat(0x945b790, 0.5);
setfloat(0x945b798, 99);
setfloat(0x945b79c, 1);
setfloat(0x945b7a0, 1);
setfloat(0x945b6fc, 0);
sethex(0x945b7c0, 0x00, 0x81, 0x06, 0x05);
setchar(0x967E6FC, 0x00, 0xFF, 0x00);
sethex(0x944fb54, 0xFF, 0xFF, 0x00);
sethex(0x944faf8, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 164);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);

#cheat Perfect Dodo
//ID: 14731
//Score: 68
//Author: almost219
//Category: Vehicle
//Description: a dodo that has enhanced flying technique to fly perfect and sorta like a helicopter
//Image: none
//Time: 15/07/2006 04:43:39
//Working: Yes
setshort(0x992FE5C, 0x53, 0x74, 0x72, 0x65, 0x74, 0x63, 0x68);
setchar(0x945b771, 0x45);
setfloat(0x945b6f8, 9);
setfloat(0x945b77c, 1);
setfloat(0x945b780, 1);
setfloat(0x945b774, .00050);
setfloat(0x945b798, 99);
setfloat(0x945b79c, 1);
setfloat(0x945b7a0, 9);
setfloat(0x945b6fc, 0);
sethex(0x945b7c0, 0x3a, 0xe7, 0x06, 0x00);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb34, 0xFF, 0xFF, 0x00);
sethex(0x944fb0c, 0xFF, 0x00, 0xFF);
setchar(pplayer + 0xB84, 0x00);

#cheat Hunter, Dodo, and Mavericks at Rashon's Showroom
//ID: 14009
//Score: 262
//Author: rashon125
//Category: Vehicle
//Description: This spawns the Hunter, Dodo, Maverick, and Police Maverick helicopters right next to my showroom.
//Image: http://i70.photobucket.com/albums/i97/rashon125/HunterAndDodo.jpg
//Time: 01/07/2006 20:06:01
//Working: Yes
moveto(-0.62, -1641.88, 26.66);  object(0x01BF, 300, 0, 107);
move(0.19, 0.41, 0.00);  object(0x01BF, 300, 0, 103);
move(-4.59, 1.37, 2.60);  object(0x01BF, 300, 0, 111);
move(-5.14, 2.10, 1.60);  object(0x01BF, 90, 0, 108);
move(-6.36, 1.93, 0.00);  object(0x01BF, 90, 0, 107);
move(8.56, 5.14, 0.00);  object(0x01BF, 90, 0, 108);
move(-6.31, 2.08, 0.00);  object(0x01BF, 90, 0, 108);
move(-7.62, -5.58, 0.00);  object(0x01BF, 90, 0, 109);
move(2.27, 7.19, 0.00);  object(0x01BF, 90, 0, 107);
move(-6.10, 1.90, 0.00);  object(0x01BF, 90, 0, 107);
move(-2.34, -7.34, 0.00);  object(0x01BF, 90, 0, 108);
move(-5.07, 2.92, 0.00);  object(0x01BF, 90, 0, 107);
move(1.84, 6.18, 0.00);  object(0x01BF, 90, 0, 106);
move(-5.97, 1.67, -1.90);  object(0x01BF, 60, 0, 106);
move(-3.52, 0.89, -2.20);  object(0x01BF, 60, 0, 103);
//Hunter
setchar(0x08E4Ea18, 213);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, -16.23, -1631.09, 32.10, 0);
//Dodo
setchar(08E4Ed88, 164);
setchar(08E4Ed88 + 0x18, 0x01);
setfloat(08E4Ed8c, -27.11, -1627.33, 32.10, 0);
//Maverick
setchar(0x08E4E9C0, 214);
setfloat(0x08E4E9C4, 272.15, -422.6, 26.02);
setfloat(0x08E4E9D0, 0);
//Police Maverick
setchar(0x08E4E9C0, 214);
setfloat(0x08E4E9C4, -50.34, -1614.54, 26.15);
setfloat(0x08E4E9D0, 0);
off()

#cheat GOTHAM V0.1
//ID: 13980
//Score: 144
//Author: emcp
//Category: Location Mods
//Description: its a batcave with run way helipad jeti(for boats) and a vechiles
//including the BATMOBILE BATCHOPTER BATPLANE as well as the new BATBOAT(MUST WAIT A WHILE FOR DODO AND HUNTER 
//this cheat also includes a bat porter to teleport you to the batcave at anyti
//Image: none
//Time: 01/07/2006 16:08:15
//Working: Yes
//AUTHORS
//emcp and penguinsrule
//DISCRIPTION
//its a batcave with run way helipad jeti(for boats) and a vechiles
//including the BATMOBILE BATCHOPTER BATPLANE BATBOAT and the new BATBIKE
//its facing dukin dounaughts in portland in the cave its been extened for use
//this also make it dark and peds have weapons and petty crimes happen to make it look like gotham
//thanks to penguinsrule for is huge help on this project
moveto(788.85, -1031.98, 8.34);  object(0x01BF, 0, 0, 93);
move(3.00, 0.02, 5.00);  object(0x01BF, 55, 0, 91);
move(-3.04, -7.12, -5.10);  object(0x01BF, 0, 0, 91);
move(1.08, -6.64, -1.00);  object(0x01BF, 0, 0, 74);
move(2.93, -7.17, 0.00);  object(0x01BF, 0, 0, 63);
move(3.42, -6.79, 0.70);  object(0x01BF, 0, 0, 63);
move(4.01, -6.73, 0.70);  object(0x01BF, 0, 0, 55);
move(4.96, -5.34, 0.00);  object(0x01BF, 0, 0, 41);
move(6.00, -5.13, 0.80);  object(0x01BF, 0, 0, 41);
move(5.85, -5.00, 0.00);  object(0x01BF, 0, 0, 41);
move(6.00, -5.13, 0.00);  object(0x01BF, 0, 0, 41);
move(4.69, -4.05, 0.00);  object(0x01BF, 0, 0, 41);
move(12.95, -8.76, -0.70);  object(0x01BF, 0, 0, 9);
move(4.47, -0.60, 0.00);  object(0x01BF, 0, 0, 6);
move(3.31, 3.80, 0.00);  object(0x01BF, 0, 0, 265);
move(-56.58, 57.19, 4.40);  object(0x01BF, 60, 0, 91);
move(0.76, -6.62, -0.10);  object(0x01BF, 60, 0, 75);
move(2.48, -6.56, 0.00);  object(0x01BF, 60, 0, 63);
move(3.73, -6.13, 0.00);  object(0x01BF, 60, 0, 58);
move(4.09, -6.65, 0.00);  object(0x01BF, 60, 0, 58);
move(4.91, -5.08, 0.00);  object(0x01BF, 60, 0, 47);
move(5.77, -4.66, 0.00);  object(0x01BF, 60, 0, 44);
move(5.54, -5.20, 0.00);  object(0x01BF, 60, 0, 44);
move(5.68, -4.85, 0.00);  object(0x01BF, 60, 0, 42);
move(4.53, -3.78, 0.00);  object(0x01BF, 60, 0, 42);
move(5.91, -5.39, 0.00);  object(0x01BF, 60, 0, 42);
move(5.60, -2.32, 0.00);  object(0x01BF, 60, 0, 6);
move(4.80, 0.55, 0.50);  object(0x01BF, 60, 0, 271);
move(-0.65, -1.36, 0.00);  object(0x01BF, 60, 0, 4);
move(-4.95, 6.32, 1.10);  object(0x01BF, 90, 0, 43);
move(-5.79, 5.42, 0.10);  object(0x01BF, 90, 0, 42);
move(-5.78, 5.01, 0.00);  object(0x01BF, 90, 0, 43);
move(-5.78, 4.99, 0.00);  object(0x01BF, 90, 0, 44);
move(-5.69, 5.48, 0.00);  object(0x01BF, 90, 0, 44);
move(-6.02, 4.34, 0.00);  object(0x01BF, 90, 0, 35);
move(-4.22, 5.42, 0.00);  object(0x01BF, 90, 0, 53);
move(-4.63, 6.31, 0.00);  object(0x01BF, 90, 0, 55);
move(-3.07, 6.06, 0.00);  object(0x01BF, 90, 0, 76);
move(-2.10, 7.56, 0.00);  object(0x01BF, 90, 0, 73);
move(15.93, -80.08, -9.10);  object(0x01BF, 90, 0, 40);
move(-4.33, -5.06, 0.00);  object(0x01BF, 90, 0, 40);
move(-4.03, -4.75, 0.00);  object(0x01BF, 90, 0, 40);
move(-3.99, -4.70, 0.00);  object(0x01BF, 90, 0, 40);
move(-3.66, -4.30, 0.00);  object(0x01BF, 90, 0, 40);
move(-4.34, -5.12, 0.00);  object(0x01BF, 90, 0, 40);
move(-4.39, -5.23, 0.00);  object(0x01BF, 90, 0, 40);
move(-4.24, -5.04, 0.00);  object(0x01BF, 90, 0, 40);
move(-3.75, -4.50, 0.00);  object(0x01BF, 90, 0, 40);
move(-4.39, -5.26, 0.00);  object(0x01BF, 90, 0, 40);
move(-3.59, -4.35, 0.00);  object(0x01BF, 90, 0, 40);
move(-3.74, -4.54, 0.00);  object(0x01BF, 90, 0, 40);
move(-4.18, -5.05, 0.00);  object(0x01BF, 90, 0, 39);
move(-4.29, -5.23, 0.00);  object(0x01BF, 90, 0, 39);
move(-4.09, -5.03, 0.00);  object(0x01BF, 90, 0, 39);
//bridge and fence
moveto(836.93, -1106.50, 0.64);  object(0x01E4, 270, 0, 42);
move(2.75, -2.26, 0.00);  object(0x01E4, 270, 335, 39);
move(6.36, -4.76, 3.70);  object(0x01E4, 270, 335, 36);
move(5.91, -4.28, 3.40);  object(0x01E4, 270, 335, 35);
move(5.58, -3.88, 3.20);  object(0x01E4, 270, 335, 35);
move(6.91, -4.77, 1.90);  object(0x01E4, 270, 0, 35);
move(6.14, -1.98, 0.00);  object(0x01E4, 270, 0, 2);
move(8.55, -0.33, 0.00);  object(0x01E4, 270, 0, 2);
move(8.72, -0.29, -0.80);  object(0x01E4, 270, 350, 180);
move(-1.49, -5.16, 2.54);  object(0x01BF, 0, 0, 90);
move(-0.07, 10.80, 0.00);  object(0x01BF, 0, 0, 90);
move(0.02, 7.80, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.05, 7.90, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.05, 7.60, 0.00);  object(0x01BF, 0, 0, 90);
move(4.07, 3.52, 0.00);  object(0x01BF, 0, 0, 180);
move(7.90, -0.02, 0.00);  object(0x01BF, 0, 0, 180);
move(-8.23, -41.55, -0.20);  object(0x01BF, 0, 0, 179);
move(7.69, 0.37, 0.00);  object(0x01BF, 0, 0, 356);
move(4.18, 37.35, 0.00);  object(0x01BF, 0, 0, 90);
move(0.02, -7.50, 0.00);  object(0x01BF, 0, 0, 90);
move(0.02, -7.80, 0.00);  object(0x01BF, 0, 0, 90);
move(0.02, -7.70, 0.00);  object(0x01BF, 0, 0, 90);
move(0.01, -7.36, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -3.30, 0.00);  object(0x01BF, 0, 0, 270);
move(-100.90, 170.25, -9.36);  object(0x01F3, 0, 0, 86);
move(-4.81, 3.90, 0.00);  object(0x01F3, 0, 0, 352);
//bridge railing
moveto(883.39, -1127.48, 12.82);  object(0x01F0, 0, 10, 0);
move(0.02, -2.91, 0.00);  object(0x01F0, 0, 10, 0);
move(-3.16, 2.91, 0.00);  object(0x01F0, 0, 0, 1);
move(-0.14, -2.81, 0.00);  object(0x01F0, 0, 0, 1);
move(-3.70, 0.05, 0.00);  object(0x01F0, 0, 0, 1);
move(0.30, 2.99, 0.00);  object(0x01F0, 0, 0, 3);
move(-42.24, 24.50, -12.10);  object(0x01F0, 0, 0, 123);
move(2.53, -2.14, 0.00);  object(0x01F0, 0, 0, 221);
moveto(839.84, -1107.38, 0.62);  object(0x01F0, 0, 0, 222);
move(3.05, -2.29, 1.50);  object(0x01F0, 0, 25, 218);
move(2.85, -2.04, 1.50);  object(0x01F0, 0, 25, 218);
move(2.77, -2.14, 1.80);  object(0x01F0, 0, 25, 218);
move(2.84, -1.96, 1.70);  object(0x01F0, 0, 25, 216);
move(2.92, -2.27, 1.60);  object(0x01F0, 0, 25, 216);
move(3.15, -1.95, 1.80);  object(0x01F0, 0, 25, 216);
move(3.31, -2.41, 1.80);  object(0x01F0, 0, 25, 216);
move(-21.55, 12.00, -11.40);  object(0x01F0, 0, 335, 38);
move(2.89, -2.09, 1.80);  object(0x01F0, 0, 335, 37);
move(3.13, -2.16, 1.80);  object(0x01F0, 0, 335, 37);
move(2.80, -2.10, 1.50);  object(0x01F0, 0, 335, 37);
move(2.72, -2.04, 1.60);  object(0x01F0, 0, 335, 37);
move(2.43, -1.74, 1.50);  object(0x01F0, 0, 335, 33);
move(2.72, -1.80, 1.30);  object(0x01F0, 0, 335, 36);
move(4.02, -2.87, 2.40);  object(0x01F0, 0, 0, 36);
move(1.75, 2.52, 0.00);  object(0x01F0, 0, 0, 34);
move(3.24, -2.18, 0.00);  object(0x01F0, 0, 0, 34);
move(-1.61, -2.59, 0.00);  object(0x01F0, 0, 0, 34);
move(9.60, 0.45, 0.00);  object(0x01F0, 0, 0, 2);
move(-4.20, 0.13, 0.00);  object(0x01F0, 0, 0, 2);
move(4.31, -3.14, 0.00);  object(0x01F0, 0, 0, 2);
move(-3.40, 0.10, 0.00);  object(0x01F0, 0, 0, 2);
move(-2.90, 0.09, 0.00);  object(0x01F0, 0, 0, 2);
//lights
moveto(757.16, -1193.27, 6.42);  object(0x020F, 0, 0, 310);
move(7.53, 8.82, 0.00);  object(0x020F, 0, 0, 310);
move(8.63, 10.11, 0.00);  object(0x020F, 0, 0, 310);
move(11.52, 14.35, 0.00);  object(0x020F, 0, 0, 310);
move(8.17, 9.58, 0.00);  object(0x020F, 0, 0, 310);
move(12.25, 14.78, 0.00);  object(0x020F, 0, 0, 310);
move(8.24, 9.66, 0.00);  object(0x020F, 0, 0, 310);
move(-5.84, 4.96, 0.10);  object(0x020F, 0, 0, 130);
move(-7.82, -8.97, 0.00);  object(0x020F, 0, 0, 130);
move(-12.20, -14.44, 0.00);  object(0x020F, 0, 0, 130);
move(-8.68, -10.48, -0.20);  object(0x020F, 0, 0, 130);
move(-11.66, -14.38, 0.00);  object(0x020F, 0, 0, 130);
move(-7.89, -9.17, 0.00);  object(0x020F, 0, 0, 121);
move(-8.71, -10.27, 0.00);  object(0x020F, 0, 0, 121);
move(81.60, 72.70, -5.10);  object(0x020F, 0, 0, 6);
move(5.65, 6.13, 0.00);  object(0x020F, 0, 0, 6);
move(62.92, 12.30, 11.00);  object(0x020F, 0, 0, 49);
move(-11.52, 0.29, 0.00);  object(0x020F, 0, 0, 346);
move(11.84, -38.48, 0.00);  object(0x020F, 0, 0, 171);
move(-14.27, -1.75, 0.00);  object(0x020F, 0, 0, 187);
//pcj-600
setchar(0x08E4Ebfc, 205);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 798.98, -985.91, 4.90, 0);
//infernus
setchar(0x08E4Ecd8, 142);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, 844.87, -1097.70, 6.37, 52);
//boat
setchar(0x08E4Eb78, 194);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 836.76, -1114.54, 1.93, 135);
//dodo
setchar(08E4Ed88, 164);
setchar(08E4Ed88 + 0x18, 0x01);
setfloat(08E4Ed8c, 817.20, -1115.67, 7.00, 135);
//hunter
setchar(0x08E4Ea18, 213);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 894.76, -1123.52, 13.93, 180);
//batplane
setshort(0x992FE5C, 0x20, 0x62, 0x61, 0x74);
setchar(0x945b772, 0x6);
setfloat(0x9442bfc, 0.725);
setfloat(0x945b77c, 1.175);
setfloat(0x945b780, 1.175);
setfloat(0x945b774, 0.00438);
setfloat(0x945b6fc, 0);
sethex(0x945b7c0, 0x00, 0x81, 0x04, 0x00);
sethex(0x944fb2c, 0xFF, 0xFF, 0x00);
sethex(0x944fb24, 0xFF, 0x00, 0xFF);
setchar(pplayer + 0xB84, 0x00);
//bat bike
setshort(0x99450E2, 0x62, 0x61, 0x74, 0x62, 0x69, 0x6b, 0x65);
setshort(0x9446c10, 250);
setfloat(0x9446c0c, 1.025);
setfloat(0x945d48c, 1.375);
setfloat(0x945d490, 1.375);
setfloat(0x945d484, 0.00487);
setfloat(0x945d40c, 0);
sethex(0x945d4d0, 0x02, 0x81, 0x01, 0x07);
sethex(0x944fb14, 0x00, 0x00, 0x00);
sethex(0x944fb24, 0xFF, 0xFF, 0xFF);
setchar(pplayer + 0xB84, 0x00);
//batcar
sethex(0x945a231, 0x01);
setchar(0x945a1e2, 0x5);
setchar(0x945a1e1, 0x50);
setchar(0x945a1e0, 0x46);
setshort(0x94409a0, 250);
setfloat(0x944099c, 1.45);
setfloat(0x945a160, 1400);
setfloat(0x945a168, 0.8);
setfloat(0x945a220, 0.25);
setfloat(0x945a224, -0.09999);
setfloat(0x945a228, 0.5);
setfloat(0x945a1ec, 1.525);
setfloat(0x945a1f0, 1.525);
setfloat(0x945a1e4, 0.00275);
setfloat(0x945a200, 0.51);
setfloat(0x945a204, 0);
setfloat(0x945a208, 40);
setfloat(0x945a218, 1.2);
setfloat(0x945a21c, 0.19);
setfloat(0x945a234, 0.37);
setfloat(0x945a22c, 0.6);
setfloat(0x945a180, 0);
setfloat(0x945a184, -0.29999);
setfloat(0x945a188, -0.19999);
setchar(0x945a190, 70);
setfloat(0x945a20c, 0.9);
setfloat(0x945a210, 0.5);
setfloat(0x945a16c, 1.02857);
sethex(0x944fb54, 0x00, 0x00, 0x00);
sethex(0x944fb0c, 0x00, 0x00, 0x00);
setint(0x8E38A38, 142);
setchar(0x8E38A5C, 125, 107);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
teleport(795.90, -965.89, 4.90);
//peds have weps
setchar(0x08B564D8, 1)
//petty crime
setchar(0x8B562F2, 1)
//time
setchar(0x08b5e090, 02, 30);
teleport(795.90, -965.89, 4.90);

#cheat Team America Mt. Rushmore Base
//ID: 13388
//Score: 232
//Author: JT456
//Category: Location Mods
//Description: Team America's Mt. Rushmore Base including:
//*the heads of Mt. Rushmore. (e.g. Goerge Washington + Abraham Lincoln)
//*Helipad for my Team America Helicopter.
//*Garages for Team America 4x4, bikes and Spottwoode's Limo.
//*Runway for Dodos and Limo.
//Image: none
//Time: 20/06/2006 19:07:52
//Working: Yes
moveto(-360.58, 364.21, 86.08);  object(0x01BF, 220, 0, 260);
move(-5.08, -0.88, 4.00);  object(0x01BF, 245, 0, 260);
move(5.52, 0.96, -2.60);  object(0x01BF, 245, 0, 260);
move(5.87, 1.08, -3.30);  object(0x01BF, 235, 0, 258);
move(-16.69, -2.92, 8.40);  object(0x01BF, 245, 0, 260);
move(-4.86, -0.88, 2.30);  object(0x01BF, 245, 0, 260);
move(-5.05, -0.93, 2.40);  object(0x01BF, 245, 0, 260);
move(-5.79, -1.03, 2.70);  object(0x01BF, 245, 0, 260);
move(-6.05, -0.95, 2.60);  object(0x01BF, 245, 0, 260);
move(0.62, 0.03, 0.00);  object(0x01BF, 245, 0, 260);
move(-6.26, -1.04, 1.40);  object(0x01BF, 270, 0, 80);
move(-3.56, -2.01, 0.00);  object(0x01BF, 270, 0, 44);
move(-4.35, -4.48, 0.00);  object(0x01BF, 270, 0, 44);
move(-4.28, -3.31, 0.00);  object(0x01BF, 270, 0, 61);
move(-4.71, -1.47, 0.00);  object(0x01BF, 270, 0, 84);
move(-5.24, -0.47, 0.00);  object(0x01BF, 270, 0, 84);
move(-0.74, 6.96, 0.00);  object(0x01BF, 270, 0, 84);
move(-6.34, -0.70, 0.00);  object(0x01BF, 270, 0, 84);
move(0.74, -6.86, 0.00);  object(0x01BF, 270, 0, 84);
move(-0.73, 13.12, 1.00);  object(0x01BF, 290, 0, 174);
move(-0.55, 4.93, 1.80);  object(0x01BF, 290, 0, 174);
move(-0.54, 5.42, 2.00);  object(0x01BF, 290, 0, 174);
move(-0.58, 5.39, 2.00);  object(0x01BF, 290, 0, 174);
move(-0.62, 5.59, 2.10);  object(0x01BF, 290, 0, 174);
move(-0.57, 5.39, 2.00);  object(0x01BF, 290, 0, 174);
move(-0.59, 5.55, 2.00);  object(0x01BF, 290, 0, 174);
move(-0.68, 6.28, 1.10);  object(0x01BF, 270, 0, 174);
move(-0.76, 6.57, 0.00);  object(0x01BF, 270, 0, 174);
move(-0.65, 6.19, 0.00);  object(0x01BF, 270, 0, 174);
move(-0.74, 6.37, 0.00);  object(0x01BF, 270, 0, 174);
move(-0.73, 6.38, 0.00);  object(0x01BF, 270, 0, 174);
move(-0.62, 6.29, 0.00);  object(0x01BF, 270, 0, 174);
move(-0.71, 6.17, 0.00);  object(0x01BF, 270, 0, 174);
move(-0.37, 3.49, 0.40);  object(0x01BF, 290, 0, 174);
move(-0.58, 5.49, 2.00);  object(0x01BF, 290, 0, 174);
move(-0.64, 5.99, 2.20);  object(0x01BF, 290, 0, 174);
move(-0.63, 5.75, 2.10);  object(0x01BF, 290, 0, 174);
move(-0.62, 5.79, 2.10);  object(0x01BF, 290, 0, 174);
move(-0.70, 5.77, 2.10);  object(0x01BF, 290, 0, 174);
move(-0.61, 5.69, 2.10);  object(0x01BF, 290, 0, 174);
move(-0.64, 5.89, 2.20);  object(0x01BF, 290, 0, 174);
move(-0.69, 5.99, 2.20);  object(0x01BF, 290, 0, 174);
move(-0.59, 5.70, 2.10);  object(0x01BF, 290, 0, 174);
move(-0.67, 6.29, 2.30);  object(0x01BF, 290, 0, 174);
move(-0.57, 5.39, 1.90);  object(0x01BF, 290, 0, 174);
move(-0.45, 4.61, 1.70);  object(0x01BF, 290, 0, 174);
move(-0.81, 8.96, 8.50);  object(0x0FAA, 350, 180, 181);
move(-2.32, -7.88, -5.30);  object(0x01BF, 0, 195, 86);
move(5.19, 0.35, 0.00);  object(0x01BF, 0, 195, 86);
move(-2.23, -1.57, 3.00);  object(0x01BF, 270, 15, 89);
move(-3.17, 18.25, -0.10);  object(0x01BF, 0, 0, 270);
move(0.00, 7.61, 0.70);  object(0x01BF, 0, 350, 270);
move(0.03, 7.31, 1.30);  object(0x01BF, 0, 350, 270);
move(3.95, 3.58, 0.60);  object(0x01BF, 350, 0, 9);
move(3.77, -4.35, -0.70);  object(0x01BF, 0, 10, 92);
move(7.31, -0.73, 0.00);  object(0x01BF, 0, 10, 92);
move(-3.45, 4.37, 0.70);  object(0x01BF, 345, 0, 7);
move(7.67, -0.94, 0.00);  object(0x01BF, 345, 0, 7);
move(3.31, -4.25, -0.90);  object(0x01BF, 0, 15, 98);
move(-13.46, -16.75, -1.50);  object(0x01BF, 10, 0, 187);
move(7.85, -0.94, 0.00);  object(0x01BF, 10, 0, 187);
move(9.51, 15.43, 2.00);  object(0x01BF, 310, 0, 189);
move(0.82, 4.92, 4.20);  object(0x01BF, 310, 0, 189);
move(0.90, 5.26, 3.40);  object(0x01BF, 295, 0, 189);
move(1.61, 6.64, 1.40);  object(0x01BF, 270, 0, 98);
move(6.08, -0.86, 0.00);  object(0x01BF, 270, 0, 98);
move(5.94, -0.83, 0.00);  object(0x01BF, 270, 0, 98);
move(5.48, -0.77, 0.00);  object(0x01BF, 270, 0, 98);
move(5.88, -0.83, 0.00);  object(0x01BF, 270, 0, 98);
move(5.79, -0.83, 0.00);  object(0x01BF, 270, 0, 97);
move(-0.04, -0.07, 0.00);  object(0x01BF, 270, 0, 98);
move(5.77, -0.85, 0.00);  object(0x01BF, 270, 0, 98);
move(6.30, -0.93, 0.00);  object(0x01BF, 270, 0, 98);
move(1.07, 7.22, 0.00);  object(0x01BF, 270, 0, 98);
move(-5.70, 0.87, 0.00);  object(0x01BF, 270, 0, 279);
move(-6.19, 0.96, 0.00);  object(0x01BF, 270, 0, 279);
move(-6.20, 1.00, 0.00);  object(0x01BF, 270, 0, 278);
move(-5.45, 0.79, 0.00);  object(0x01BF, 270, 0, 278);
move(-5.22, 0.75, 0.00);  object(0x01BF, 270, 0, 278);
move(-6.26, 0.91, 0.00);  object(0x01BF, 270, 0, 278);
move(-6.32, 0.88, 0.00);  object(0x01BF, 270, 0, 278);
move(-6.11, 0.75, 0.00);  object(0x01BF, 270, 0, 278);
move(-0.98, -7.13, 0.00);  object(0x01BF, 270, 0, 278);
move(-6.15, 0.85, 0.00);  object(0x01BF, 270, 0, 278);
move(0.97, 7.03, 0.00);  object(0x01BF, 270, 0, 278);
move(-6.42, -2.27, 0.00);  object(0x01BF, 270, 0, 9);
move(-7.21, 1.14, 0.00);  object(0x01BF, 270, 0, 9);
move(0.35, 2.93, 2.20);  object(0x01BF, 0, 0, 10);
move(6.30, -1.12, 0.00);  object(0x01BF, 0, 0, 10);
move(-0.13, -6.44, 0.00);  object(0x01BF, 0, 0, 10);
move(-7.38, 1.32, 0.00);  object(0x01BF, 0, 0, 10);
move(-3.74, 4.05, 0.00);  object(0x01BF, 0, 0, 99);
move(3.48, -0.58, 3.20);  object(0x01BF, 90, 0, 99);
move(6.52, -1.09, 0.00);  object(0x01BF, 90, 0, 99);
move(2.04, -0.64, 0.00);  object(0x01BF, 90, 0, 98);
move(8.58, -11.42, -4.40);  object(0x01BF, 110, 0, 10);
move(-1.08, -5.99, 2.20);  object(0x01BF, 110, 0, 10);
move(-0.97, -6.26, 1.10);  object(0x01BF, 90, 0, 10);
move(-1.08, -6.02, 0.00);  object(0x01BF, 90, 0, 10);
move(5.78, -0.99, 0.00);  object(0x01BF, 90, 0, 10);
move(1.01, 5.83, 0.00);  object(0x01BF, 90, 0, 10);
move(12.44, -9.15, -53.40);  object(0x082B, 90, 0, 280);
move(-16.14, 6.94, 53.50);  object(0x0369, 90, 0, 280);
move(11.69, -5.99, -22.20);  object(0x0369, 70, 0, 280);
move(-22.92, -1.14, -10.00);  object(0x01B7, 0, 10, 285);
move(20.98, 12.05, 18.40);  object(0x01BF, 0, 345, 277);
move(-0.86, -7.32, 0.40);  object(0x01BF, 180, 355, 277);
move(0.97, 7.45, 1.80);  object(0x01BF, 180, 340, 278);
move(-2.00, -14.42, -2.50);  object(0x01BF, 180, 355, 278);
move(-3.80, -2.97, -1.40);  object(0x01BF, 170, 0, 6);
move(-29.47, 54.41, 24.00);  object(0x01BF, 180, 0, 262);
move(7.22, 1.05, 0.00);  object(0x01BF, 180, 0, 262);
move(-2.92, -4.39, 0.00);  object(0x01BF, 180, 0, 173);
move(-0.25, 1.98, -5.80);  object(0x01BF, 220, 0, 173);
move(0.53, 0.87, 6.20);  object(0x01BF, 180, 330, 93);
move(2.86, 1.23, 3.20);  object(0x01BF, 65, 0, 268);
move(1.86, 0.39, -1.50);  object(0x01BF, 40, 0, 268);
move(-7.95, -0.58, 1.70);  object(0x01BF, 115, 0, 268);
move(2.64, 0.56, 1.00);  object(0x01BF, 90, 0, 268);
move(-5.09, -1.08, -2.70);  object(0x01BF, 145, 0, 268);
move(5.23, -3.12, -0.80);  object(0x01BF, 180, 0, 174);
move(-2.55, 3.70, 0.60);  object(0x01BF, 270, 0, 292);
move(5.67, 0.62, 0.00);  object(0x01BF, 270, 0, 68);
move(-3.39, -1.81, -3.90);  object(0x01BF, 270, 0, 225);
move(4.22, 0.85, 3.50);  object(0x01BF, 270, 295, 167);
move(-8.48, -1.51, -0.10);  object(0x01BF, 270, 255, 177);
move(16.64, 2.29, -11.20);  object(0x01BF, 145, 180, 175);
move(0.30, -1.71, 5.90);  object(0x01BF, 180, 180, 175);
move(-5.60, 3.46, 0.50);  object(0x01BF, 205, 180, 266);
move(0.60, 0.05, -0.30);  object(0x01BF, 195, 180, 266);
move(0.70, 0.05, -0.30);  object(0x01BF, 190, 180, 266);
move(-1.50, -0.11, 1.20);  object(0x01BF, 215, 180, 266);
move(1.10, 0.08, 1.50);  object(0x01BF, 235, 180, 266);
move(3.99, 0.31, 1.40);  object(0x01BF, 270, 180, 266);
move(4.19, 0.32, -1.30);  object(0x01BF, 305, 180, 266);
move(1.20, 0.09, -1.60);  object(0x01BF, 320, 180, 266);
move(0.00, 0.00, -1.00);  object(0x01BF, 325, 180, 266);
move(-0.64, 0.47, 0.00);  object(0x01BF, 335, 180, 266);
move(-0.70, -0.05, -0.10);  object(0x01BF, 340, 180, 266);
move(-3.49, -4.18, 0.80);  object(0x01BF, 0, 135, 177);
move(-0.22, 0.70, 0.00);  object(0x01BF, 0, 135, 177);
move(-0.22, 2.49, 3.70);  object(0x01BF, 90, 0, 87);
move(0.08, -0.23, -5.10);  object(0x01BF, 180, 45, 264);
move(1.75, 0.47, 2.30);  object(0x01BF, 270, 0, 42);
move(-3.55, -0.17, 0.00);  object(0x01BF, 270, 0, 42);
move(1.54, -0.61, -3.80);  object(0x01BF, 270, 0, 40);
move(15.35, -0.50, -2.80);  object(0x01BF, 330, 0, 356);
move(0.24, -1.60, 6.10);  object(0x01BF, 0, 0, 356);
move(-1.46, 1.75, 2.10);  object(0x01BF, 320, 140, 326);
move(1.19, 0.14, 0.10);  object(0x01BF, 320, 140, 326);
move(1.40, 0.09, 0.00);  object(0x01BF, 320, 140, 326);
move(0.90, 0.06, 0.00);  object(0x01BF, 320, 140, 326);
move(7.94, 31.96, -12.90);  object(0x0237, 320, 140, 324);
move(-11.61, -33.42, 13.70);  object(0x0842, 130, 30, 266);
move(2.69, 0.17, 0.00);  object(0x0842, 130, 30, 266);
move(0.38, 0.05, -2.10);  object(0x01BF, 0, 310, 173);
move(-3.19, 0.29, 0.00);  object(0x01BF, 0, 310, 173);
move(0.00, 0.00, -1.70);  object(0x01BF, 5, 310, 173);
move(4.52, 0.16, 1.50);  object(0x01BF, 15, 310, 165);
move(-2.98, 1.70, -1.30);  object(0x01BF, 0, 310, 86);
move(13.91, -1.54, 1.40);  object(0x01BF, 0, 0, 357);
move(-0.13, 1.56, -6.10);  object(0x01BF, 30, 0, 176);
move(2.06, -0.54, 6.80);  object(0x01BF, 20, 140, 191);
move(-1.11, 0.05, -0.30);  object(0x01BF, 20, 140, 191);
move(-1.86, -0.15, 0.00);  object(0x01BF, 20, 140, 191);
move(-1.44, -0.09, 0.30);  object(0x01BF, 20, 140, 191);
move(-1.41, 0.10, 0.00);  object(0x01BF, 20, 140, 191);
move(-0.23, -0.12, 1.10);  object(0x01BF, 20, 140, 191);
move(3.78, 14.46, -2.00);  object(0x01BF, 180, 140, 142);
move(-2.33, -13.96, -0.46);  object(0x01BF, 180, 220, 178);
move(1.96, -0.51, 0.50);  object(0x01BF, 180, 220, 178);
move(-0.78, 0.52, -0.10);  object(0x01BF, 180, 220, 193);
move(2.36, -0.34, 0.00);  object(0x01BF, 180, 220, 166);
move(1.14, 0.03, 0.00);  object(0x01BF, 180, 220, 177);
move(-5.79, -0.33, -0.20);  object(0x01BF, 180, 220, 177);
move(2.61, 3.18, 1.90);  object(0x01BF, 95, 180, 137);
move(3.17, 0.11, 0.00);  object(0x01BF, 95, 180, 137);
move(-1.86, -0.85, -0.90);  object(0x01BF, 355, 45, 90);
move(-1.34, -0.21, -2.90);  object(0x01BF, 270, 0, 33);
moveto(-443.18, 539.56, 154.86);  object(0x01BF, 80, 0, 4);
move(7.36, -0.52, 0.00);  object(0x01BF, 80, 0, 4);
move(7.89, -0.70, 0.00);  object(0x01BF, 80, 0, 4);
move(-0.31, -5.87, -0.70);  object(0x01BF, 90, 0, 3);
move(-0.22, -5.18, 0.00);  object(0x01BF, 90, 0, 3);
move(-7.55, 0.45, 0.00);  object(0x01BF, 90, 0, 5);
move(-7.20, 0.63, -0.50);  object(0x01BF, 90, 350, 5);
move(0.18, 6.17, 0.40);  object(0x01BF, 85, 355, 5);
move(7.08, -1.94, 0.10);  object(0x01BF, 90, 0, 0);
move(-0.43, -10.89, -1.00);  object(0x01BF, 105, 0, 183);
move(7.79, -0.60, 0.00);  object(0x01BF, 105, 0, 183);
move(7.30, -0.51, 0.00);  object(0x01BF, 105, 0, 183);
move(0.16, 5.84, 0.90);  object(0x01BF, 90, 0, 7);
move(-22.12, -3.19, -0.80);  object(0x01BF, 90, 10, 188);
move(23.84, 18.69, 0.50);  object(0x01BF, 0, 0, 188);
move(-0.05, -14.49, 8.10);  object(0x01BF, 0, 0, 280);
move(0.00, 0.00, -4.40);  object(0x01BF, 0, 0, 280);
move(-4.68, -3.11, 4.50);  object(0x01BF, 0, 0, 11);
move(0.00, 0.00, -4.50);  object(0x01BF, 0, 0, 11);
move(-5.69, 1.12, 4.40);  object(0x01BF, 0, 0, 11);
move(0.00, 0.00, -4.80);  object(0x01BF, 0, 0, 11);
move(-3.16, 4.86, 4.70);  object(0x01BF, 0, 0, 101);
move(0.00, 0.00, -4.10);  object(0x01BF, 0, 0, 101);
move(0.84, 4.22, 4.20);  object(0x01BF, 0, 0, 101);
move(0.00, 0.00, -4.00);  object(0x01BF, 0, 0, 101);
move(4.51, 3.05, 0.00);  object(0x01BF, 0, 0, 188);
move(0.00, 0.00, 3.60);  object(0x01BF, 0, 0, 188);
move(5.65, -0.75, 0.40);  object(0x01BF, 0, 0, 188);
move(3.35, -4.44, 0.10);  object(0x01BF, 0, 0, 280);
move(0.75, -0.15, -3.60);  object(0x01BF, 15, 0, 277);
move(42.55, 13.92, 0.00);  object(0x01BF, 315, 0, 280);
move(-4.65, 0.81, -4.70);  object(0x01BF, 315, 0, 280);
move(9.65, 0.03, -18.80);  object(0x01BF, 315, 0, 79);
move(-13.66, 0.68, 14.70);  object(0x01BF, 315, 0, 280);
move(1.41, 7.67, 0.00);  object(0x01BF, 315, 0, 280);
move(3.80, -0.74, 4.00);  object(0x01BF, 315, 0, 280);
move(4.71, -0.83, 4.80);  object(0x01BF, 315, 0, 280);
move(-1.91, -7.78, 2.30);  object(0x01BF, 270, 0, 279);
move(1.26, 7.80, 0.00);  object(0x01BF, 270, 0, 279);
move(-5.82, 0.79, 0.00);  object(0x01BF, 270, 0, 98);
move(-12.45, 1.62, 0.00);  object(0x01BF, 270, 0, 98);
teleport(-348.12, 371.84, 84.51)

#cheat cool glass pipe
//ID: 13098
//Score: 95
//Author: swordfish
//Category: Pointless
//Description: teleports you to a cool glass pipe very fun to destroy or land a dodo in the uses are endless!
//Image: http://www.cheatsync.net/tools/mkobj/const_pipe_glass.jpg
//Time: 17/06/2006 15:21:20
//Working: Yes
moveto(272.15, -422.6, 90); object(0x0CDB, -0, 0, 90);
move(1.77, 0.00, -4.27); object(0x0CDB, -45, 0, 90);
move(4.27, 0.00, -1.77); object(0x0CDB, -90, 0, 90);
move(4.27, 0.00, 1.77); object(0x0CDB, -135, 0, 90);
move(1.77, 0.00, 4.27); object(0x0CDB, -180, 0, 90);
move(-1.77, 0.00, 4.27); object(0x0CDB, -225, 0, 90);
move(-4.27, 0.00, 1.77); object(0x0CDB, -270, 0, 90);
move(-4.27, 0.00, -1.77); object(0x0CDB, -315, 0, 90);
move(-1.77, 5, -4.27); object(0x0CDB, -0, 0, 90);
move(1.77, 0.00, -4.27); object(0x0CDB, -45, 0, 90);
move(4.27, 0.00, -1.77); object(0x0CDB, -90, 0, 90);
move(4.27, 0.00, 1.77); object(0x0CDB, -135, 0, 90);
move(1.77, 0.00, 4.27); object(0x0CDB, -180, 0, 90);
move(-1.77, 0.00, 4.27); object(0x0CDB, -225, 0, 90);
move(-4.27, 0.00, 1.77); object(0x0CDB, -270, 0, 90);
move(-4.27, 0.00, -1.77); object(0x0CDB, -315, 0, 90);
move(-1.77, 5, -4.27); object(0x0CDB, -0, 0, 90);
move(1.77, 0.00, -4.27); object(0x0CDB, -45, 0, 90);
move(4.27, 0.00, -1.77); object(0x0CDB, -90, 0, 90);
move(4.27, 0.00, 1.77); object(0x0CDB, -135, 0, 90);
move(1.77, 0.00, 4.27); object(0x0CDB, -180, 0, 90);
move(-1.77, 0.00, 4.27); object(0x0CDB, -225, 0, 90);
move(-4.27, 0.00, 1.77); object(0x0CDB, -270, 0, 90);
move(-4.27, 0.00, -1.77); object(0x0CDB, -315, 0, 90);
move(-1.77, 5, -4.27); object(0x0CDB, -0, 0, 90);
move(1.77, 0.00, -4.27); object(0x0CDB, -45, 0, 90);
move(4.27, 0.00, -1.77); object(0x0CDB, -90, 0, 90);
move(4.27, 0.00, 1.77); object(0x0CDB, -135, 0, 90);
move(1.77, 0.00, 4.27); object(0x0CDB, -180, 0, 90);
move(-1.77, 0.00, 4.27); object(0x0CDB, -225, 0, 90);
move(-4.27, 0.00, 1.77); object(0x0CDB, -270, 0, 90);
move(-4.27, 0.00, -1.77); object(0x0CDB, -315, 0, 90);
move(-1.77, 5, -4.27); object(0x0CDB, -0, 0, 90);
move(1.77, 0.00, -4.27); object(0x0CDB, -45, 0, 90);
move(4.27, 0.00, -1.77); object(0x0CDB, -90, 0, 90);
move(4.27, 0.00, 1.77); object(0x0CDB, -135, 0, 90);
move(1.77, 0.00, 4.27); object(0x0CDB, -180, 0, 90);
move(-1.77, 0.00, 4.27); object(0x0CDB, -225, 0, 90);
move(-4.27, 0.00, 1.77); object(0x0CDB, -270, 0, 90);
move(-4.27, 0.00, -1.77); object(0x0CDB, -315, 0, 90);
move(-1.77, 5, -4.27); object(0x0CDB, -0, 0, 90);
move(1.77, 0.00, -4.27); object(0x0CDB, -45, 0, 90);
move(4.27, 0.00, -1.77); object(0x0CDB, -90, 0, 90);
move(4.27, 0.00, 1.77); object(0x0CDB, -135, 0, 90);
move(1.77, 0.00, 4.27); object(0x0CDB, -180, 0, 90);
move(-1.77, 0.00, 4.27); object(0x0CDB, -225, 0, 90);
move(-4.27, 0.00, 1.77); object(0x0CDB, -270, 0, 90);
move(-4.27, 0.00, -1.77); object(0x0CDB, -315, 0, 90);
move(-1.77, 5, -4.27); object(0x0CDB, -0, 0, 90);
move(1.77, 0.00, -4.27); object(0x0CDB, -45, 0, 90);
move(4.27, 0.00, -1.77); object(0x0CDB, -90, 0, 90);
move(4.27, 0.00, 1.77); object(0x0CDB, -135, 0, 90);
move(1.77, 0.00, 4.27); object(0x0CDB, -180, 0, 90);
move(-1.77, 0.00, 4.27); object(0x0CDB, -225, 0, 90);
move(-4.27, 0.00, 1.77); object(0x0CDB, -270, 0, 90);
move(-4.27, 0.00, -1.77); object(0x0CDB, -315, 0, 90);
move(-1.77, 5, -4.27); object(0x0CDB, -0, 0, 90);
move(1.77, 0.00, -4.27); object(0x0CDB, -45, 0, 90);
move(4.27, 0.00, -1.77); object(0x0CDB, -90, 0, 90);
move(4.27, 0.00, 1.77); object(0x0CDB, -135, 0, 90);
move(1.77, 0.00, 4.27); object(0x0CDB, -180, 0, 90);
move(-1.77, 0.00, 4.27); object(0x0CDB, -225, 0, 90);
move(-4.27, 0.00, 1.77); object(0x0CDB, -270, 0, 90);
move(-4.27, 0.00, -1.77); object(0x0CDB, -315, 0, 90);
teleport(272.15, -422.6, 110);

#cheat Spawn in Hell when Wasted (Construction V2)
//ID: 11308
//Score: 57
//Author: Spwngebob
//Category: Location Mods
//Description: This time you can escape. Dodo V2 is Useless (So I deleted it) so jump off the end of the runway and you will spawn on the city.
//Image: none
//Time: 24/05/2006 18:07:06
//Working: Yes
moveto(258.64, -451.86, -51.06);  object(0x01BF, 90, 0, 269);
move(-6.76, -0.09, 0.00);  object(0x01BF, 90, 0, 89);
move(0.02, -0.71, 4.00);  object(0x01BF, 90, 90, 89);
move(-0.04, 1.59, 0.00);  object(0x01BF, 90, 90, 89);
move(0.00, -0.01, 8.00);  object(0x01BF, 90, 90, 89);
move(0.03, -1.60, 0.00);  object(0x01BF, 90, 90, 89);
move(6.60, 0.09, -7.80);  object(0x01BF, 90, 90, 269);
move(-0.00, 0.01, 7.80);  object(0x01BF, 90, 90, 270);
move(-0.02, 1.50, 0.00);  object(0x01BF, 90, 90, 270);
move(0.00, 0.00, -7.90);  object(0x01BF, 90, 90, 270);
move(3.21, -0.46, 0.00);  object(0x01BF, 0, 90, 270);
move(0.00, 0.00, 7.80);  object(0x01BF, 0, 90, 270);
move(-12.57, -0.50, -8.00);  object(0x01BF, 0, 90, 90);
move(0.00, 0.00, 7.90);  object(0x01BF, 0, 90, 90);
move(3.02, 0.00, 3.50);  object(0x01BF, 270, 180, 90);
move(6.81, 0.06, 0.00);  object(0x01BF, 270, 180, 270);
move(-0.15, -2.64, -3.70);  object(0x01BF, 0, 90, 1);
move(-6.60, 0.11, 0.00);  object(0x01BF, 0, 90, 1);
move(-0.45, -0.28, -8.00);  object(0x01BF, 180, 90, 1);
move(6.58, 0.51, 0.00);  object(0x01BF, 180, 90, 1);
move(0.29, 9.18, -1.40);  object(0x01BF, 90, 40, 88);
move(-6.71, -0.11, 0.00);  object(0x01BF, 90, 40, 88);
move(-0.80, 6.64, 2.50);  object(0x01BF, 90, 0, 88);
move(-0.31, 8.02, 0.00);  object(0x01BF, 90, 0, 88);
move(-0.26, 7.93, 0.00);  object(0x01BF, 90, 0, 88);
move(6.64, 0.14, 0.00);  object(0x01BF, 90, 0, 268);
move(0.09, -7.94, 0.00);  object(0x01BF, 90, 0, 268);
move(0.37, -7.61, 0.00);  object(0x01BF, 90, 0, 268);
move(-8.57, -7.41, -0.90);  object(0x01BF, 0, 90, 89);
move(-0.45, 6.64, 0.00);  object(0x01BF, 0, 90, 86);
move(-0.30, 6.63, 0.00);  object(0x01BF, 0, 90, 86);
move(-0.36, 6.52, 0.00);  object(0x01BF, 0, 90, 86);
move(13.22, -19.65, 0.00);  object(0x01BF, 0, 90, 265);
move(-0.59, 6.60, 0.00);  object(0x01BF, 0, 90, 265);
move(-0.56, 6.40, 0.00);  object(0x01BF, 0, 90, 265);
move(-0.59, 6.70, 0.00);  object(0x01BF, 0, 90, 265);
move(-4.96, -26.35, 7.70);  object(0x0FDE, 25, 0, 356);
setfloat(0x8E554B0, 259.38, -448.64, -49.88);
setfloat(0x8E55490, 259.38, -448.64, -49.88);
setfloat(0x8E554A0, 259.38, -448.64, -49.88);

#cheat dodo
//ID: 6137
//Score: 69
//Author: wolf
//Category: Vehicle
//Description:  Master Enchilada
//Image: none
//Time: 03/04/2006 20:03:17
//Working: Yes
setchar(0x08E4E9C0, 164);
setfloat(0x08E4E9C4, 280.61, -421.12, 68.04);
//edited by Fenn on 4/3/2006 12:54:18 PM


#cheat Teleport: SkyNet v2 (Air Approach)
//ID: 5354
//Score: 22
//Author: ADePSP
//Category: Teleport
//Description: Activeate SkyNet Cheat first, then get in a Dodo, get some speed up and see if you can land it in the base...
//Image: none
//Time: 28/02/2006 23:42:46
//Working: Yes
teleport(284.14, -644.44, 340.39);
//Aim towards the Stadium to find it...

//edited by ADePSP on 28/02/2006 23:42:25

#cheat Portland Safehouse Garage Car 1 Type Mod (Dodo)
//ID: 4346
//Score: 60
//Author: Skiller
//Category: Garage Codes
//Description: Replace Car 1 With Dodo
//Image: none
//Time: 03/02/2006 13:52:00
//Working: Yes
//SubCategory: Portland Safehouse Garage
setint(0x08e38988, 164);


#cheat Portland Safehouse Garage Car 2 Type Mod (Dodo)
//ID: 4428
//Score: 10
//Author: Skiller
//Category: Garage Codes
//Description: Replace Car 2 With Dodo
//Image: none
//Time: 03/02/2006 13:52:00
//Working: Yes
//SubCategory: Portland Safehouse Garage
setint(0x08e389b4, 164);


