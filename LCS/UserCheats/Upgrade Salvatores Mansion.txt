#cheat Leone Base
//ID: 16224
//Score: 155
//Author: penguinsrule
//Category: Location Mods
//Description: This is a leone gang base with 2 leone sentinels, bansee, pony, maverick on heli pad and 4 weapons.
//Image: http://telmaz.no-ip.info:3249/pictures/telleonev1.gif
//Time: 08/08/2006 16:42:21
//Working: Yes
moveto(1402.20, -334.97, 51.39);  object(0x01BF, 0, 0, 180);
move(7.70, 0.06, 0.00);  object(0x01BF, 0, 0, 180);
move(7.60, 0.06, 0.00);  object(0x01BF, 0, 0, 180);
move(-19.10, 3.98, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.06, 7.80, 0.00);  object(0x01BF, 0, 0, 270);
move(0.05, 7.60, 0.00);  object(0x01BF, 0, 0, 270);
move(0.08, 7.40, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.07, 7.60, 0.00);  object(0x01BF, 0, 0, 270);
move(3.23, -30.62, 3.30);  object(0x01BF, 270, 0, 270);
move(0.00, 8.00, 0.00);  object(0x01BF, 270, 0, 270);
move(0.00, 8.00, 0.00);  object(0x01BF, 270, 0, 270);
move(0.00, 7.90, 0.00);  object(0x01BF, 270, 0, 270);
move(0.00, 6.60, 0.00);  object(0x01BF, 270, 0, 270);
move(14.62, -34.19, 0.50);  object(0x01BF, 0, 45, 0);
move(-12.70, -0.07, 0.00);  object(0x01BF, 0, 315, 0);
move(4.40, 0.02, 1.80);  object(0x01BF, 0, 0, 0);
move(3.90, 0.02, 0.00);  object(0x01BF, 0, 0, 0);
move(9.77, 4.00, -5.60);  object(0x01BF, 0, 0, 90);
move(-0.05, 7.80, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.05, 7.80, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.05, 8.10, 0.00);  object(0x01BF, 0, 0, 90);
move(-19.05, 10.41, 0.00);  object(0x01BF, 0, 0, 0);
move(13.50, -0.02, 0.00);  object(0x01BF, 0, 0, 0);
move(1.60, -0.00, 0.00);  object(0x01BF, 0, 0, 0);
move(3.98, -3.96, 0.00);  object(0x01BF, 0, 0, 90);
move(-3.47, -6.00, -1.40);  object(0x01BF, 270, 330, 90);
move(0.04, -4.80, 2.80);  object(0x01BF, 270, 330, 90);
move(-9.83, -19.42, 1.90);  object(0x01BF, 270, 0, 270);
move(-0.05, 8.00, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.05, 7.90, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.04, 6.80, 0.00);  object(0x01BF, 270, 0, 270);
move(3.42, -10.28, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.04, 7.20, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.02, 3.00, 0.00);  object(0x01BF, 270, 0, 270);
move(6.71, 0.04, 0.00);  object(0x01BF, 270, 0, 270);
move(-4.29, -18.13, 0.00);  object(0x01BF, 270, 0, 270);
move(0.05, -7.80, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.04, -4.67, 0.00);  object(0x01BF, 270, 0, 265);
move(4.43, 0.47, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.05, 7.70, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.03, 4.30, 0.00);  object(0x01BF, 270, 0, 270);
move(-17.83, -12.13, 2.20);  object(0x01BF, 315, 0, 270);
move(-0.03, 7.20, 0.00);  object(0x01BF, 315, 0, 270);
move(-0.02, 7.80, 0.00);  object(0x01BF, 315, 0, 270);
move(0.03, 7.80, 0.00);  object(0x01BF, 315, 0, 270);
move(0.10, 7.50, 0.00);  object(0x01BF, 315, 0, 270);
move(1.02, -30.42, 1.30);  object(0x01BF, 315, 0, 270);
move(-0.04, 7.60, 0.00);  object(0x01BF, 315, 0, 270);
move(-0.04, 7.90, 0.00);  object(0x01BF, 315, 0, 270);
move(0.20, 7.90, 0.00);  object(0x01BF, 315, 0, 270);
move(-0.03, 7.00, 0.00);  object(0x01BF, 315, 0, 270);
move(6.16, -30.92, 2.20);  object(0x01BF, 90, 0, 180);
move(-0.02, 6.24, 0.00);  object(0x01BF, 90, 0, 180);
move(-0.02, 6.05, 0.00);  object(0x01BF, 90, 0, 180);
move(-0.02, 6.42, 0.00);  object(0x01BF, 90, 0, 180);
move(-0.02, 6.35, 0.00);  object(0x01BF, 90, 0, 180);
move(-0.02, 6.53, 0.00);  object(0x01BF, 90, 0, 180);
move(4.81, -31.00, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.40, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(5.80, -30.09, -2.20);  object(0x01BF, 45, 0, 270);
move(-0.05, 7.80, 0.00);  object(0x01BF, 45, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 45, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 45, 0, 270);
move(-0.04, 6.90, 0.00);  object(0x01BF, 45, 0, 270);
move(-1.95, 4.09, -2.80);  object(0x01BF, 0, 315, 180);
move(-12.60, 0.07, 0.00);  object(0x01BF, 0, 45, 180);
move(8.20, -0.04, 1.70);  object(0x01BF, 0, 0, 180);
move(-3.90, 0.02, 0.00);  object(0x01BF, 0, 0, 180);
move(11.36, -34.05, 0.00);  object(0x01BF, 45, 0, 270);
move(-0.05, 7.80, 0.00);  object(0x01BF, 45, 0, 270);
move(-0.05, 7.70, 0.00);  object(0x01BF, 45, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 45, 0, 270);
move(-0.04, 6.80, 0.00);  object(0x01BF, 45, 0, 270);
moveto(1399.80, -314.63, 69.93);  object(0x01E4, 270, 30, 270);
move(-0.03, 7.50, -4.30);  object(0x01E4, 270, 30, 270);
move(0.18, 7.55, -4.40);  object(0x01E4, 270, 330, 90);
setchar(0x08E4Ebfc, 214);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 1393.72, -302.72, 73.42, 0);
setchar(0x08E4E9EC, 160);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 1401.26, -306.21, 50.00, 0);
setchar(0x08E4Ea44, 172);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 1400.98, -329.42, 50.00, 0);
setchar(0x08E4Ecd8, 172);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, 1401.08, -318.16, 50.01, 0);
setchar(0x08E4Eac8, 144);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 1417.72, -325.01, 49.28, 0);
moveto(1400.00, -322.92, 72.19);  object(0x01E4, 270, 0, 270);
move(2.76, 27.85, -13.10);  object(0x01E4, 270, 0, 180);
move(8.00, -0.06, -2.60);  object(0x01E4, 270, 325, 180);
move(7.10, -0.05, -5.00);  object(0x01E4, 270, 325, 180);
move(1.70, -0.01, -1.20);  object(0x01E4, 270, 325, 180);
move(2.33, 1.76, -0.70);  object(0x01EE, 0, 325, 180);
moveto(1414.31, -293.67, 54.88);  object(0x01EE, 0, 325, 180);
move(-8.00, -0.06, 4.80);  object(0x01EE, 0, 0, 180);
move(-5.08, -9.87, 4.70);  object(0x01EE, 0, 30, 270);
move(0.03, -7.10, 4.10);  object(0x01EE, 0, 30, 270);
move(0.03, -6.90, 4.00);  object(0x01EE, 0, 30, 270);
move(0.11, -8.90, 0.40);  object(0x01EE, 0, 0, 270);
move(-3.17, -0.57, -0.60);  object(0x01F0, 0, 0, 0);
setfloat(0x08E2DC20, 1413.95, -332.69, 55.87 );
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x11a);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
setfloat(0x08E2E0A0, 1410.95, -332.69, 55.87);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x112);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
setfloat(0x08E2E1C0, 1407.95, -332.69, 55.87);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x108);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
setfloat(0x08E2E160, 1404.95, -332.69, 55.87);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x114);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
teleport(1383.33, -282.11, 49.82)

#cheat auto-spawn at sals house
//ID: 15864
//Score: 54
//Author: Kip-Kip
//Category: Teleport
//Description: it may not seem WOW ! but you'll wish you had downloaded it ..
//
//EDITED BY: magical trevor on 02/08/06 16:28:55
//Image: none
//Time: 02/08/2006 15:59:06
//Working: Yes
//Created Using Teleport Creator
//By RASAL
teleport(1552.89, 2012.2, 26.02);

#cheat Mansion Extenstion
//ID: 16249
//Score: 309
//Author: penguinsrule
//Category: Location Mods
//Description: This is an addon to sals mansion, it has 1 maverick, 1 dodo, 11 weapons, 2 leone sentinels, 2 pcj600, bansee, speeder, boat yard, weapons shack and walk way down tp the beach
//Image: http://telmaz.no-ip.info:3249/pictures/telsalv1.gif
//Time: 09/08/2006 17:01:16
//Working: Yes
moveto(1524.42, -257.85, -2.01);  object(0x01BF, 0, 0, 190);
move(7.05, -1.32, 0.00);  object(0x01BF, 0, 0, 190);
move(7.29, -1.25, 0.00);  object(0x01BF, 0, 0, 190);
move(0.57, 3.32, 3.30);  object(0x01BF, 90, 0, 190);
move(-7.49, 1.28, 0.00);  object(0x01BF, 90, 0, 190);
move(-7.88, 1.35, 0.00);  object(0x01BF, 90, 0, 190);
move(8.74, 3.64, 0.00);  object(0x01BF, 90, 0, 190);
move(-7.59, 1.30, 0.00);  object(0x01BF, 90, 0, 190);
move(2.19, 6.24, 0.00);  object(0x01BF, 90, 0, 190);
move(7.59, -1.30, 0.00);  object(0x01BF, 90, 0, 190);
move(5.91, -1.01, 0.00);  object(0x01BF, 90, 0, 190);
move(-12.84, 5.51, -3.20);  object(0x01BF, 0, 0, 190);
move(7.43, -1.29, -0.10);  object(0x01BF, 0, 0, 190);
move(5.91, -1.03, 0.00);  object(0x01BF, 0, 0, 190);
move(-4.76, -8.98, 0.00);  object(0x01BF, 0, 0, 280);
move(3.26, -2.54, 0.00);  object(0x01BF, 0, 0, 190);
move(0.29, 5.14, 0.00);  object(0x01BF, 0, 0, 190);
move(4.34, 2.52, -0.70);  object(0x01BF, 0, 270, 280);
move(-1.57, -11.50, 0.00);  object(0x01BF, 0, 270, 280);
moveto(1524.32, -254.48, 2.27);  object(0x01BF, 270, 20, 10);
move(-7.19, 1.23, 2.60);  object(0x01BF, 270, 20, 10);
moveto(1510.33, -251.91, 7.41);  object(0x01BF, 270, 20, 13);
moveto(1503.02, -250.54, 9.74);  object(0x01BF, 270, 15, 10);
moveto(1502.90, -247.26, 6.46);  object(0x01BF, 0, 15, 10);
move(-1.13, -6.29, 0.00);  object(0x01BF, 0, 15, 10);
move(8.48, 4.88, -2.30);  object(0x01BF, 0, 20, 10);
move(-1.33, -6.04, 0.00);  object(0x01BF, 0, 20, 10);
move(6.98, -1.23, -2.50);  object(0x01BF, 0, 20, 10);
move(1.07, 6.04, 0.00);  object(0x01BF, 0, 20, 10);
moveto(1522.95, -250.97, -0.43);  object(0x01BF, 0, 340, 190);
move(-1.63, -5.95, -0.00);  object(0x01BF, 0, 20, 10);
moveto(1457.10, -201.75, 54.83);  object(0x01E4, 270, 15, 270);
move(0.19, -8.71, 1.10);  object(0x01E4, 270, 0, 90);
move(5.17, -2.62, -2.50);  object(0x01E4, 270, 35, 0);
move(7.20, -0.05, -5.00);  object(0x01E4, 270, 35, 0);
move(6.70, -0.05, -4.70);  object(0x01E4, 270, 35, 0);
move(6.90, -0.05, -4.90);  object(0x01E4, 270, 35, 0);
move(6.90, -0.05, -4.80);  object(0x01E4, 270, 35, 0);
move(7.20, -0.05, -5.00);  object(0x01E4, 270, 35, 0);
move(7.20, -0.05, -5.00);  object(0x01E4, 270, 35, 0);
move(6.60, -0.05, -4.60);  object(0x01E4, 270, 35, 0);
move(7.00, -0.05, -4.90);  object(0x01E4, 270, 35, 0);
move(-3.79, 1.32, 3.50);  object(0x01EE, 0, 35, 0);
move(-6.50, 0.05, 4.60);  object(0x01EE, 0, 35, 0);
move(-6.60, 0.05, 4.60);  object(0x01EE, 0, 35, 0);
move(-6.71, 0.05, 4.70);  object(0x01EE, 0, 35, 0);
move(-6.60, 0.05, 4.50);  object(0x01EE, 0, 35, 0);
move(-6.70, 0.05, 4.60);  object(0x01EE, 0, 35, 0);
move(-6.70, 0.05, 4.60);  object(0x01EE, 0, 35, 0);
move(-6.70, 0.05, 4.80);  object(0x01EE, 0, 35, 0);
move(-7.50, 0.05, 5.30);  object(0x01EE, 0, 35, 0);
move(53.98, -3.32, -37.70);  object(0x01EE, 0, 35, 0);
move(-6.80, 0.05, 4.80);  object(0x01EE, 0, 35, 0);
move(-6.90, 0.05, 4.80);  object(0x01EE, 0, 35, 0);
move(-7.00, 0.05, 4.80);  object(0x01EE, 0, 35, 0);
move(-6.70, 0.05, 4.70);  object(0x01EE, 0, 35, 0);
move(-6.60, 0.05, 4.60);  object(0x01EE, 0, 35, 0);
move(-6.51, 0.05, 4.60);  object(0x01EE, 0, 35, 0);
move(-6.70, 0.05, 4.70);  object(0x01EE, 0, 35, 0);
move(-6.80, 0.05, 4.80);  object(0x01EE, 0, 35, 0);
move(-4.71, 0.03, 0.00);  object(0x01F0, 0, 0, 0);
move(3.15, 8.71, 0.00);  object(0x01EF, 0, 0, 90);
move(-2.97, -0.82, 0.70);  object(0x01EE, 0, 0, 90);
move(2.62, 0.62, -0.40);  object(0x01EF, 0, 15, 270);
move(-2.94, -0.02, 0.00);  object(0x01EF, 0, 15, 270);
moveto(1533.57, -241.13, 2.07);  object(0x01EE, 0, 0, 190);
move(7.98, -1.42, 0.00);  object(0x01EE, 0, 0, 190);
move(3.78, -0.71, -0.70);  object(0x01F0, 0, 0, 190);
move(-1.43, -6.35, 0.00);  object(0x01EF, 0, 0, 280);
move(-1.42, -11.42, 0.00);  object(0x01EF, 0, 0, 280);
move(-7.19, 1.23, 0.60);  object(0x01EE, 0, 0, 10);
move(-8.07, 1.45, 0.00);  object(0x01EE, 0, 0, 10);
move(-1.38, 0.25, 0.00);  object(0x01EE, 0, 0, 190);
move(0.12, 0.01, 0.20);  object(0x01EE, 0, 340, 190);
move(-7.78, 1.34, 2.90);  object(0x01EE, 0, 340, 190);
move(-8.14, 1.56, 3.00);  object(0x01EE, 0, 345, 192);
move(11.23, 4.41, -3.50);  object(0x01EE, 0, 20, 10);
move(-1.58, 0.27, 0.60);  object(0x01EE, 0, 340, 190);
move(-40.17, 47.93, 49.40);  object(0x01E4, 270, 345, 10);
move(8.43, -1.07, -0.10);  object(0x01E4, 270, 15, 10);
move(-3.27, 1.76, 1.60);  object(0x01EE, 0, 15, 10);
move(-0.47, -2.78, 0.00);  object(0x01EE, 0, 15, 10);
moveto(1483.84, -201.94, 55.70);  object(0x01EF, 0, 15, 190);
move(-0.42, -2.64, 0.00);  object(0x01EF, 0, 15, 190);
moveto(1499.60, -169.71, 56.17);  object(0x01BF, 0, 0, 90);
move(4.51, 3.84, 0.00);  object(0x01BF, 0, 0, 180);
move(7.50, -0.04, 0.00);  object(0x01BF, 0, 0, 180);
move(7.50, -0.04, 0.00);  object(0x01BF, 0, 0, 180);
move(4.22, -4.02, 0.00);  object(0x01BF, 0, 0, 90);
move(-3.21, -0.10, 3.30);  object(0x01BF, 270, 0, 90);
move(-6.22, -0.00, 0.00);  object(0x01BF, 270, 0, 90);
move(-6.06, -0.00, 0.00);  object(0x01BF, 270, 0, 90);
move(-4.26, 0.24, 0.00);  object(0x01BF, 270, 0, 90);
moveto(1503.64, -165.84, 56.10);  object(0x01BF, 0, 0, 180);
move(-0.72, -3.92, 3.30);  object(0x01BF, 270, 0, 90);
setchar(0x08E4Ebfc, 172);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 1406.60, -169.22, 50.90, 268);
setchar(0x08E4E9EC, 172);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 1409.33, -161.32, 52.25, 257);
setchar(0x08E4Ea44, 205);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 1417.04, -158.81, 52.56, 180);
setchar(0x08E4Ecd8, 205);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, 1420.96, -159.04, 52.54, 180);
setchar(0x08E4Eac8, 214);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 1498.34, -183.89, 54.57, 270);
setchar(0x08E4Eb78, 164);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 1498.34, -196.58, 54.46, 270);
setchar(0x08E4Ea18, 194);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 1541.64, -251.80, 1.60, 270);
setchar(0x08E4Ec54, 160);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, 1442.58, -188.79, 50.31, 0);
setfloat(0x08e2d800, 1502.03, -170.75, 54.92);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff);
setshort(0x08e2d826, 0x112);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08E2E400, 1504.03, -170.75, 54.92);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x112);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, 1506.03, -170.75, 54.92);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff);
setshort(0x08e2d886, 0x11a);
setchar(0x08e2d892, 0x0f);
setchar(0x08e2d893, 0x00);
setchar(0x08e2d8b0, 0xff);
setfloat(0x08e2d8c0, 1508.03, -170.75, 54.92);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x11a);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, 1510.03, -170.75, 54.92);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x108);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, 1512.03, -170.75, 54.92);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x108);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, 1514.03, -170.75, 54.92);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x114);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, 1516.03, -170.75, 54.92);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x114);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
setfloat(0x08e2daa0, 1518.03, -170.75, 54.92);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x115);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
setfloat(0x08e2db00, 1520.03, -170.75, 54.92);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x115);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
setfloat(0x08E2DCE0, 1539.41, -247.47, 2.47);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x121);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
teleport(1428.56, -184.22, 50.60);

#cheat ICE's CLIFF HANGER
//ID: 15423
//Score: 116
//Author: ice cold killer
//Category: Misc
//Description: the best creation to have come out of the ice collection yet. this has a patriot ,cheetah, pcj-600,sniping tower,rooms,all weapons, and a hunter
//Image: none
//Time: 24/07/2006 23:29:22
//Working: Yes
//By Raigov
//ENJOY! =)
teleport(1421, -241, 49.85);
//Floor
moveto(1433, -257, 50); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
//Door
moveto(1429.19, -237.29, 50.78); object(0x01BF, 0, 0, 90);
move(-3.06, -6.12, -2.10); object(0x01BF, 245, 0, 90);
//Gates
moveto(1428.86, -241.29, 53.91); object(0x1003, 0, 180, 206);
move(-0.06, -4.30, 0.00); object(0x1002, 0, 0, 156);
//Deck Stuff
moveto(1460.78, -259.39, 50.88); object(0x01F1, 270, 0, 270);
move(0.02, 16.30, 0.00); object(0x01F1, 270, 0, 270);
move(0.07, -6.90, -0.60); object(0x01F0, 0, 0, 270);
move(-0.03, 2.90, 0.00); object(0x01F0, 0, 0, 270);
move(-0.16, 13.51, 0.00); object(0x01F0, 0, 0, 180);
move(-4.40, -0.03, 0.00); object(0x01F0, 0, 0, 180);
move(2.09, 0.08, 0.00); object(0x01F0, 0, 0, 180);
move(-0.92, -26.64, 0.10); object(0x01F0, 0, 0, 0);
move(-4.40, -0.00, 0.00); object(0x01F0, 0, 0, 0);
move(2.30, -0.05, 0.00); object(0x01F0, 0, 0, 0);
move(-1.90, 0.59, 0.00); object(0x020F, 0, 0, 0);
move(7.00, 0.01, 0.00); object(0x020F, 0, 0, 0);
move(-0.04, 25.49, 0.00); object(0x020F, 0, 0, 247);
move(-7.00, 0.26, 0.00); object(0x020F, 0, 0, 180);
move(7.19, -19.49, 0.00); object(0x020F, 0, 0, 270);
move(-0.02, 6.50, 0.00); object(0x020F, 0, 0, 270);
move(-0.03, 6.90, 0.00); object(0x020F, 0, 0, 270);
move(-2.25, -16.24, 0.40); object(0x025B, 0, 0, 223);
move(-0.25, 19.81, 0.00); object(0x025B, 0, 0, 311);
move(-1.69, -13.03, -0.30); object(0x0257, 0, 0, 165);
move(0.26, 5.20, 0.00); object(0x0257, 0, 0, 195);
//Deck Stuff 2
moveto(1459.54, -240.85, 50.81); object(0x0ECF, 0, 0, 270);
move(0.01, -0.80, 0.00); object(0x0ECF, 0, 0, 270);
move(-0.00, -0.40, -0.40); object(0x0ECB, 0, 270, 270);
move(-0.60, -0.01, 0.00); object(0x0ECB, 0, 270, 270);
move(-0.02, 1.60, 0.00); object(0x0ECB, 0, 270, 270);
move(0.59, 0.01, 0.00); object(0x0ECB, 0, 270, 270);
move(-1.37, -0.32, 0.50); object(0x0F03, 90, 0, 60);
move(0.95, -0.09, 0.00); object(0x0F74, 90, 0, 55);
move(0.06, -0.70, 0.00); object(0x0F75, 0, 0, 310);
move(-0.96, -0.08, 0.00); object(0x0F76, 0, 0, 310);
//Chair
moveto(1456.97, -241.15, 50.16); object(0x1004, 0, 0, 130);
//Weapons
moveto(1458.81, -252.19, 50.17); object(0x0114, 270, 0, 284);
move(-0.54, 0.73, 0.00); object(0x0116, 270, 0, 180);
move(0.25, 0.57, 0.00); object(0x0119, 270, 0, 187);
move(0.83, -0.12, 0.00); object(0x011F, 270, 0, 118);
move(0.41, 1.25, 0.00); object(0x010D, 270, 0, 118);
move(-2.03, -2.16, 0.00); object(0x011E, 270, 0, 72);
//ramp
moveto(1454.39, -243.57, 54.61); object(0x0F25, 0, 0, 270);
//Roof
moveto(1433.01, -236.68, 54.50); object(0x01BF, 270, 0, 180);
move(7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(7.93, -0.01, 0.00); object(0x01BF, 270, 0, 180);
move(7.83, -0.05, 0.00); object(0x01BF, 270, 0, 180);
move(-0.01, -6.54, -0.02); object(0x01BF, 270, 0, 180);
move(-7.94, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(-7.83, 0.02, 0.00); object(0x01BF, 270, 0, 180);
move(-7.83, -0.08, 0.00); object(0x01BF, 270, 0, 180);
move(0.02, -6.67, 0.00); object(0x01BF, 270, 0, 180);
move(7.92, 0.03, 0.00); object(0x01BF, 270, 0, 180);
move(15.65, -0.02, 0.00); object(0x01BF, 270, 0, 180);
move(-0.05, -6.74, 0.00); object(0x01BF, 270, 0, 180);
move(-7.91, -0.12, 0.00); object(0x01BF, 270, 0, 180);
move(-7.93, 0.15, 0.00); object(0x01BF, 270, 0, 180);
move(-7.73, 0.08, 0.00); object(0x01BF, 270, 0, 180);
//Stairs
moveto(1445.85, -247.79, 51.61); object(0x0204, 270, 25, 180);
//Roof Rails
moveto(1430.14, -259.71, 55.14); object(0x01F1, 270, 0, 0);
move(20.70, -0.16, 0.00); object(0x01F1, 270, 0, 0);
move(-10.30, 0.08, 0.00); object(0x01F1, 270, 0, 0);
move(-11.39, 9.60, 0.00); object(0x01F1, 270, 0, 90);
move(-0.10, 15.70, 0.00); object(0x01F1, 270, 0, 90);
move(0.05, -8.00, 0.00); object(0x01F1, 270, 0, 90);
move(9.73, 9.04, 0.10); object(0x01F1, 270, 0, 180);
move(20.79, -0.15, 0.00); object(0x01F1, 270, 0, 180);
move(-10.50, -0.06, 0.00); object(0x01F1, 270, 0, 180);
move(11.36, -9.60, 0.00); object(0x01F1, 270, 0, 270);
move(0.04, -15.50, 0.00); object(0x01F1, 270, 0, 270);
move(-0.02, 7.70, 0.00); object(0x01F1, 270, 0, 270);
move(-0.59, -8.31, -0.30); object(0x020F, 0, 0, 242);
move(0.31, 25.14, 0.00); object(0x020F, 0, 0, 166);
move(-30.68, -25.00, 0.00); object(0x020F, 0, 0, 103);
move(-0.05, 25.38, 0.00); object(0x020F, 0, 0, 95);
move(23.32, -19.78, -0.10); object(0x020F, 0, 0, 135);
move(-8.13, 0.07, 0.00); object(0x020F, 0, 0, 237);
move(0.16, 6.99, 0.00); object(0x020F, 0, 0, 315);
move(7.99, 0.01, 0.00); object(0x020F, 0, 0, 49);
move(-7.12, 0.11, -0.20); object(0x01EF, 0, 0, 0);
move(-0.82, -6.80, 0.00); object(0x01EF, 0, 0, 270);
move(6.94, -0.33, 0.00); object(0x01EF, 0, 0, 180);
//Trim
moveto(1429.33, -255.24, 48.11); object(0x0204, 0, 0, 89);
move(-0.03, -6.66, -1.30); object(0x0204, 270, 270, 0);
move(7.41, 0.03, 7.40); object(0x0204, 270, 180, 0);
move(8.70, -0.06, 0.00); object(0x0204, 270, 180, 0);
move(7.51, -0.81, -7.40); object(0x0204, 270, 90, 0);
move(-3.10, -0.30, -13.80); object(0x0204, 270, 115, 0);
move(-4.29, -1.09, 19.30); object(0x0204, 180, 0, 0);
move(-8.80, -0.05, 0.00); object(0x0204, 180, 0, 0);
move(0.00, 0.00, -4.10); object(0x0204, 180, 0, 0);
move(8.90, 0.05, 0.00); object(0x0204, 180, 0, 0);
//Patch
moveto(1452.66, -237.65, 50.98); object(0x01BF, 0, 0, 270);
//Floor Interior
moveto(1449.19, -256.83, 52.17); object(0x0F95, 0, 0, 0);
move(-7.10, -0.01, 0.00); object(0x0F96, 0, 0, 0);
move(-9.50, -0.01, 0.00); object(0x0F97, 0, 0, 0);
move(0.28, 19.77, 0.00); object(0x0F98, 0, 0, 180);
move(7.20, 0.05, 0.00); object(0x0F99, 0, 0, 180);
move(8.80, -0.13, 0.00); object(0x0F9A, 0, 0, 270);
move(-3.51, -23.27, 0.00); object(0x0204, 0, 0, 0);
move(-8.73, 0.19, 0.00); object(0x0204, 0, 0, 0);
move(-7.44, 7.35, 0.00); object(0x0204, 0, 0, 90);
move(7.37, 19.48, 0.00); object(0x0204, 0, 0, 180);
move(8.92, -0.21, 0.00); object(0x0204, 0, 0, 180);
move(7.41, -19.43, 0.00); object(0x0204, 0, 0, 270);
move(-9.22, 15.57, -1.30); object(0x01BF, 0, 0, 90);
move(1.50, -0.15, 0.00); object(0x01BF, 0, 0, 90);
move(0.48, -19.45, -0.30); object(0x01BF, 0, 0, 90);
move(-7.10, 0.00, 0.00); object(0x01BF, 0, 0, 90);
move(-2.30, 0.00, 0.00); object(0x01BF, 0, 0, 90);
move(0.29, 19.58, 0.24); object(0x01BF, 0, 0, 90);
//Ineteior Xtras
moveto(1432.58, -253.09, 49.91); object(0x0239, 0, 0, 0);
move(9.20, 0.01, 0.00); object(0x0239, 0, 0, 0);
move(7.63, -0.01, 0.00); object(0x0239, 0, 0, 180);
move(-1.05, 12.48, 0.00); object(0x0239, 0, 0, 0);
move(-7.90, -0.06, 0.00); object(0x0239, 0, 0, 180);
move(-7.20, -0.03, 0.00); object(0x0239, 0, 0, 180);
move(1.92, -0.05, 1.21); object(0x0D0A, 0, 0, 328);
move(7.07, -0.07, 0.00); object(0x0D0A, 0, 0, 328);
move(4.26, 0.07, 0.00); object(0x0D0A, 0, 0, 268);
move(4.80, -12.33, 0.00); object(0x0D0A, 0, 0, 326);
move(-10.36, 1.34, 0.00); object(0x0D0A, 0, 0, 332);
move(-11.60, 0.30, 0.00); object(0x0D0A, 0, 0, 287);
//Heli Pad
moveto(1416.74, -270.95, 48.31); object(0x01BF, 90, 0, 180);
move(7.90, -0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.79, 0.00); object(0x01BF, 90, 0, 180);
move(-8.00, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(8.00, -13.46, 0.00); object(0x01BF, 90, 0, 180);
move(-8.00, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(10.74, 0.56, -0.80); object(0x01BF, 305, 0, 270);
move(-0.05, 12.40, 0.00); object(0x01BF, 305, 0, 270);
move(0.02, -6.10, 0.00); object(0x01BF, 305, 0, 270);
move(-2.77, -9.26, -0.40); object(0x01BF, 40, 0, 180);
move(-7.87, 0.87, -0.20); object(0x01BF, 40, 0, 180);
//weapon spawns
setfloat(0x08e2d800, 1431, -256, 55.70);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
setfloat(0x08E2E400, 1433, -256, 55.70);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x124);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, 1435, -256, 55.70);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
setfloat(0x08e2d8c0, 1437, -256, 55.70);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, 1439, -256, 55.70);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, 1441, -256, 55.70);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, 1443, -256, 55.70);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, 1445, -256, 55.70);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
setfloat(0x08e2daa0, 1447, -256, 55.70);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
setfloat(0x08e2db00, 1449, -256, 55.70);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
setfloat(0x08E2DB60, 1451, -256, 55.70);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
setfloat(0x08E2DBC0, 1453, -256, 55.70);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
setfloat(0x08E2DC20, 1455, -256, 55.70);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
setfloat(0x08E2DC80, 1457, -256, 55.70);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
setfloat(0x08E2DCE0, 1431, -236, 55.70);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x10f);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
setfloat(0x08E2DD40, 1433, -236, 55.70);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
setfloat(0x08E2DDA0, 1435, -236, 55.70);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
setfloat(0x08E2DE00, 1437, -236, 55.70);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
setfloat(0x08E2DE60, 1439, -236, 55.70);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
setfloat(0x08E2DEC0, 1441, -236, 55.70);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
setfloat(0x08E2DF20, 1443, -236, 55.70);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0xff, 0xff);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
setfloat(0x08E2DF80, 1445, -236, 55.70);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0xff, 0xff);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
setfloat(0x08E2DFE0, 1447, -236, 55.70);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0xff, 0xff);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
setfloat(0x08E2E040, 1449, -236, 55.70);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0xff, 0xff);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
setfloat(0x08E2E0A0, 1451, -236, 55.70);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
setfloat(0x08E2E100, 1453, -236, 55.70);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0xff, 0xff);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
setfloat(0x08E2E160, 1455, -236, 55.70);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
setfloat(0x08E2E1C0, 1457, -236, 55.70);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
setfloat(0x08E2E220, 1431, -242, 55.70);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0xff, 0xff);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
setfloat(0x08E2E280, 1431, -244, 55.70);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0xff, 0xff);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
setfloat(0x08E2E2E0, 1431, -246, 55.70);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0xff, 0xff);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
setfloat(0x08E2E340, 1431, -248, 55.70);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0xff, 0xff);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
setfloat(0x08E2E3A0, 1431, -250, 55.70);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0xff, 0xff);
setshort(0x08E2E3C6, 0x122);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
setfloat(0x08E2E460, 1431, -252, 55.70);
setint(0x08E2E474, 0);
setchar(0x08E2E47C, 0xff, 0xff);
setshort(0x08E2E486, 0x22e);
setchar(0x08E2E492, 0x0f);
setchar(0x08E2E493, 0x00);
setchar(0x08E2D4B0, 0xff);
setfloat(0x08E2E4C0, 1431, -254, 55.70);
setint(0x08E2E4D4, 0);
setchar(0x08E2E4DC, 0xff, 0xff);
setshort(0x08E2E4E6, 0x24b);
setchar(0x08E2E4F2, 0x0f);
setchar(0x08E2E4F3, 0x00);
setchar(0x08E2D510, 0xff);
//Spawn Cars
//Ultimate stunt pcj-600
setchar(0x945d482, 0x5);
setchar(0x945d481, 0x50);
setchar(0x945d480, 0x52);
setshort(0x9446c10, 255);
setfloat(0x9446c0c, 0.67);
setfloat(0x945d400, 500);
setfloat(0x945d408, 1.6);
setfloat(0x945d4c0, 0.15);
setfloat(0x945d4c4, -0.15999);
setfloat(0x945d4c8, 0.5);
setfloat(0x945d48c, 0.97867);
setfloat(0x945d490, 0.97867);
setfloat(0x945d484, 0.004);
setfloat(0x945d4a0, 0.5);
setfloat(0x945d4a4, 0);
setfloat(0x945d4a8, 35);
setfloat(0x945d4b8, 0.85);
setfloat(0x945d4bc, 0.15);
setfloat(0x945d4d4, 0);
setfloat(0x945d4cc, 0);
setfloat(0x945d420, 0);
setfloat(0x945d424, 0.05);
setfloat(0x945d428, -0.08999);
setchar(0x945d430, 103);
setfloat(0x945d4ac, 0.9);
setfloat(0x945d4b0, 0.48);
setfloat(0x945d40c, 0.6);
sethex(0x945d4d0, 0x02, 0x01, 0x01, 0x00);
sethex(0x944fb28, 0x6D, 0xFF, 0x00);
sethex(0x944fb2c, 0x77, 0xFF, 0x00);
setfloat(0x945d404, 850);
setint(0x8E38A38, 205);
sethex(0x8E38A5E, 0x01, 0x00);
//cheetah
setchar(0x08E4Eb78, 146);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 1402, -235, 50.80, 315);
//patriot
setchar(0x08E4E9EC, 137);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 1403, -240, 50.80, 315);
//infurnus
setchar(0x08E4E9c0, 142);
setchar(0x08E4E9c0 + 0x18, 0x01);
setfloat(0x08E4E9c4, 1403, -245, 50.80, 315);
//pcj 600
setchar(0x08E4Eba4, 205);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 1402, -250, 50.80, 315);
//hunter
setchar(08E4Ecd8, 213);
setchar(08E4Ecd8 + 0x18, 0x01);
setfloat(08E4Ecdc, 1420, -271, 50, 67);
//snipa tower
moveto(1434.41, -229.42, 48.06);  object(0x01BF, 270, 0, 272);
move(3.21, -0.12, 2.70);  object(0x01BF, 175, 0, 272);
move(0.31, 0.91, 4.50);  object(0x01BF, 75, 270, 197);
move(1.07, 5.48, 3.40);  object(0x01BF, 75, 270, 198);
move(0.00, 0.00, 3.20);  object(0x01BF, 75, 270, 198);
move(-5.06, -0.20, 3.60);  object(0x01BF, 270, 180, 4);
move(2.56, 1.91, -16.10);  object(0x01BF, 270, 180, 53);
move(2.44, -1.94, 1.50);  object(0x01BF, 270, 180, 121);
move(2.69, -3.39, 1.30);  object(0x01BF, 270, 180, 145);
move(-1.29, -2.14, 1.70);  object(0x01BF, 270, 180, 155);
move(6.57, 1.56, 0.50);  object(0x01BF, 270, 180, 182);
move(0.33, 4.71, 1.60);  object(0x01BF, 270, 180, 217);
move(-1.99, 5.97, 1.50);  object(0x01BF, 270, 180, 208);
move(7.88, 0.14, 1.60);  object(0x01BF, 270, 180, 143);
move(5.29, -6.22, 1.50);  object(0x01BF, 270, 180, 275);
move(-5.35, -4.19, 1.10);  object(0x01BF, 270, 180, 239);
move(-6.32, -2.09, 0.90);  object(0x01BF, 270, 180, 260);
move(-4.74, 1.58, 1.60);  object(0x01BF, 270, 155, 231);

#cheat Tele to cliff side house v2
//ID: 14675
//Score: 26
//Author: raigov222
//Category: Teleport
//Description: Tele to cliff side house v2
//Image: none
//Time: 14/07/2006 06:36:37
//Working: Yes
teleport(1421, -241, 49.85);
off();

#cheat Cliff Side Home V2
//ID: 14674
//Score: 43
//Author: raigov222
//Category: Location Mods
//Description: The second version of my cliff side house. Mainly visual and pmg improvments.
//Posibbly my last code. enjoy =)
//--WARNING--This is a very large construction. Haveing other constuctions active may crash your game.
//Image: none
//Time: 14/07/2006 06:35:46
//Working: Yes
moveto(1433, -257, 50); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
moveto(1460.83, -243.15, 50.80);  object(0x01F1, 270, 0, 270);
move(0.00, -16.10, 0.00);  object(0x01F1, 270, 0, 270);
move(0.00, 8.20, 0.00);  object(0x01F1, 270, 0, 270);
move(-9.51, -9.15, 0.00);  object(0x01F1, 270, 0, 0);
move(8.59, 26.41, 0.00);  object(0x01F1, 270, 0, 180);
move(0.70, -0.23, -0.20);  object(0x020F, 0, 0, 180);
move(-7.10, -0.02, 0.00);  object(0x020F, 0, 0, 180);
move(7.07, -5.98, 0.00);  object(0x020F, 0, 0, 270);
move(0.05, -6.70, 0.00);  object(0x020F, 0, 0, 270);
move(0.05, -6.60, 0.00);  object(0x020F, 0, 0, 270);
move(-0.03, -6.50, 0.00);  object(0x020F, 0, 0, 270);
move(-7.58, -0.07, 0.00);  object(0x020F, 0, 0, 0);
move(1.17, 3.16, 0.00);  object(0x0257, 0, 0, 181);
move(0.18, 19.78, 0.00);  object(0x0257, 0, 0, 181);
move(2.78, 2.28, -0.10);  object(0x0257, 0, 0, 270);
move(-0.14, -24.72, 0.00);  object(0x0257, 0, 0, 90);
moveto(1459.54, -240.85, 50.81);  object(0x0ECF, 0, 0, 270);
move(0.01, -0.80, 0.00);  object(0x0ECF, 0, 0, 270);
move(-0.00, -0.40, -0.40);  object(0x0ECB, 0, 270, 270);
move(-0.60, -0.01, 0.00);  object(0x0ECB, 0, 270, 270);
move(-0.02, 1.60, 0.00);  object(0x0ECB, 0, 270, 270);
move(0.59, 0.01, 0.00);  object(0x0ECB, 0, 270, 270);
move(-1.37, -0.32, 0.50);  object(0x0F03, 90, 0, 60);
move(0.95, -0.09, 0.00);  object(0x0F74, 90, 0, 55);
move(0.06, -0.70, 0.00);  object(0x0F75, 0, 0, 310);
move(-0.96, -0.08, 0.00);  object(0x0F76, 0, 0, 310);
moveto(1456.97, -241.15, 50.16);  object(0x1004, 0, 0, 130);
moveto(1433.01, -236.68, 54.50);  object(0x01BF, 270, 0, 180);
move(7.93, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(7.93, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(7.93, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(0.00, -6.7, 0.00);  object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(0.00, -6.7, 0.00);  object(0x01BF, 270, 0, 180);
move(7.93, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(15.86, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(0.00, -6.7, 0.00);  object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
moveto(1432.79, -256.87, 52.18);  object(0x0F95, 0, 0, 0);
move(7.30, -0.04, 0.00);  object(0x0F8B, 0, 0, 0);
move(8.90, -0.05, 0.00);  object(0x0F96, 0, 0, 0);
move(0.10, 19.79, 0.00);  object(0x0F98, 0, 0, 180);
move(-7.10, 0.04, 0.00);  object(0x0F99, 0, 0, 180);
move(-9.18, 0.03, 0.00);  object(0x0F9A, 0, 0, 180);
//Seperators
moveto(1438.25, -237.43, 50.38);  object(0x01BF, 0, 270, 90);
move(-1.90, 0.01, 0.00);  object(0x01BF, 0, 270, 90);
move(9.05, -0.01, 0.00);  object(0x01BF, 0, 270, 90);
move(-0.10, -19.37, 0.00);  object(0x01BF, 0, 270, 270);
move(-1.50, 0.01, 0.00);  object(0x01BF, 0, 270, 270);
move(-7.30, 0.03, 0.00);  object(0x01BF, 0, 270, 270);
moveto(1433.25, -260.68, 51.10);  object(0x01BF, 0, 0, 0);
move(8.00, 0.05, 0.00);  object(0x01BF, 0, 0, 0);
move(7.30, -0.13, 0.00);  object(0x01BF, 0, 0, 0);
moveto(1429.14, -237.04, 50.94);  object(0x01BF, 0, 0, 90);
move(3.93, 3.77, 0.00);  object(0x01BF, 0, 0, 180);
move(8.00, -0.00, 0.00);  object(0x01BF, 0, 0, 180);
move(8.00, -0.00, 0.00);  object(0x01BF, 0, 0, 180);
move(3.89, -3.96, 0.00);  object(0x01BF, 0, 0, 270);
move(0.08, -13.10, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -8.00, 0.00);  object(0x01BF, 0, 0, 270);
move(-3.94, -3.88, 0.00);  object(0x01BF, 0, 0, 0);
move(-7.90, -0.01, 0.00);  object(0x01BF, 0, 0, 0);
move(-8.00, 0.00, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.09, 3.86, 0.00);  object(0x01BF, 0, 0, 90);
move(0.02, 13.30, 0.00);  object(0x01BF, 0, 0, 90);
moveto(1433.21, -262.43, 52.01);  object(0x045C, 0, 0, 269);
move(8.01, -0.00, 0.00);  object(0x045C, 0, 0, 269);
move(8.01, -0.00, 0.00);  object(0x045C, 0, 0, 269);
moveto(1433.38, -262.40, 48.88);  object(0x045C, 180, 0, 271);
move(8.01, -0.00, 0.00);  object(0x045C, 180, 0, 271);
move(8.01, -0.00, 0.00);  object(0x045C, 180, 0, 271);
moveto(1428.96, -237.21, 51.86);  object(0x045C, 0, 0, 359);
move(0.00, 0.00, -3.13);  object(0x045C, 180, 0, 1);
move(0.00, -8.01, 0.00);  object(0x045C, 180, 0, 1);
move(0.00, 0.00, 3.13);  object(0x045C, 0, 0, 359);
moveto(1428.89, -258.33, 52.09);  object(0x045C, 0, 0, 359);
move(0.00, 0.00, -3.13);  object(0x045C, 180, 0, 1);
moveto(1449.07, -233.08, 51.78);  object(0x045C, 0, 0, 89);
move(0.00, 0.00, -3.13);  object(0x045C, 180, 0, 91);
move(-8.01, 0.00, 0.00);  object(0x045C, 180, 0, 91);
move(-8.01, 0.00, 0.00);  object(0x045C, 180, 0, 91);
move(0.00, 0.00, 3.13);  object(0x045C, 0, 0, 89);
move(8.01, 0.00, 0.00);  object(0x045C, 0, 0, 89);
moveto(1453.14, -237.13, 51.81);  object(0x045C, 0, 0, 179);
move(0.08, -13.25, 0.00);  object(0x045C, 0, 0, 179);
move(0.00, -7.91, 0.00);  object(0x045C, 0, 0, 179);
move(0.00, 0.00, -3.13);  object(0x045C, 180, 0, 181);
move(0.00, 8.01, 0.00);  object(0x045C, 180, 0, 181);
move(0.00, 13.25, 0.00);  object(0x045C, 180, 0, 181);
moveto(1452.41, -248.22, 54.61);  object(0x01C3, 270, 10, 180);
move(-1.50, -0.01, -0.50);  object(0x01C3, 270, 20, 180);
move(-1.40, -0.01, -0.50);  object(0x01C3, 270, 20, 180);
move(-1.40, -0.01, -0.50);  object(0x01C3, 270, 20, 180);
move(-1.20, -0.01, -0.50);  object(0x01C3, 270, 20, 180);
move(-1.30, -0.01, -0.50);  object(0x01C3, 270, 20, 180);
move(-1.30, -0.01, -0.50);  object(0x01C3, 270, 20, 180);
move(-1.40, -0.01, -0.50);  object(0x01C3, 270, 20, 180);
move(-1.50, -0.01, -0.50);  object(0x01C3, 270, 20, 180);
move(-1.50, -0.01, -0.50);  object(0x01C3, 270, 20, 180);
move(-1.30, -0.01, -0.50);  object(0x01C3, 270, 20, 180);
moveto(1429.32, -234.66, 55.41);  object(0x01F1, 270, 0, 90);
move(0.10, -15.60, 0.00);  object(0x01F1, 270, 0, 90);
move(0.79, -9.58, 0.00);  object(0x01F1, 270, 0, 0);
move(20.40, 0.04, 0.00);  object(0x01F1, 270, 0, 0);
move(-10.20, -0.02, 0.00);  object(0x01F1, 270, 0, 0);
move(19.91, 1.04, 0.00);  object(0x01F1, 270, 0, 270);
move(-0.02, 15.30, 0.00);  object(0x01F1, 270, 0, 270);
move(-0.85, 9.68, 0.00);  object(0x01F1, 270, 0, 180);
move(-20.60, -0.17, 0.00);  object(0x01F1, 270, 0, 180);
move(10.30, 0.08, 0.00);  object(0x01F1, 270, 0, 180);
moveto(1429.39, -243.63, 54.63);  object(0x01EF, 0, 0, 90);
move(30.85, -6.39, 0.00);  object(0x01EF, 0, 0, 270);
moveto(1425.72, -251.44, 49.95);  object(0x01BF, 90, 0, 90);
move(-6.67, 0.02, -0.60);  object(0x01BF, 80, 0, 90);
moveto(1429.08, -257.26, 50.93);  object(0x01BF, 0, 0, 90);
move(-0.05, 2.14, 2.58);  object(0x1002, 0, 0, 145);
move(-0.05, 7.50, 0.00);  object(0x1002, 0, 0, 210);
moveto(1433.08, -240.78, 50.14);  object(0x0239, 0, 0, 180);
move(8.50, -0.04, 0.00);  object(0x0239, 0, 0, 0);
move(7.00, -0.03, 0.00);  object(0x0239, 0, 0, 0);
move(0.69, -12.48, 0.00);  object(0x0239, 0, 0, 180);
move(-9.40, 0.05, 0.00);  object(0x0239, 0, 0, 0);
move(-6.60, -0.01, 0.00);  object(0x0239, 0, 0, 180);
moveto(1437.92, -253.20, 51.34);  object(0x0D0A, 0, 0, 180);
move(-2.80, 0.00, 0.00);  object(0x0D0A, 0, 0, 45);
move(15.90, -0.00, 0.00);  object(0x0D0A, 0, 0, 45);
move(-4.25, 12.22, 0.00);  object(0x0D0A, 0, 0, 220);
move(-8.24, 0.03, 0.00);  object(0x0D0A, 0, 0, 345);
move(-3.60, 0.22, 0.00);  object(0x0D0A, 0, 0, 345);
move(2.54, 3.95, -0.10);  object(0x0251, 0, 0, 180);
move(11.02, -9.82, 3.24);  object(0x01F0, 0, 0, 180);
move(4.10, -0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(-7.94, -3.51, 0.00);  object(0x01F0, 0, 0, 90);
move(0.01, 3.31, 0.00);  object(0x01F0, 0, 0, 90);
move(4.77, -6.98, 0.00);  object(0x01F0, 0, 0, 0);
move(-4.20, -0.02, 0.00);  object(0x01F0, 0, 0, 0);
moveto(1419.02, -271.36, 48.01);  object(0x01BF, 270, 0, 180);
move(8.00, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(0.00, -6.66, 0.00);  object(0x01BF, 270, 0, 180);
move(-8.00, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(12.01, 6.64, -3.10);  object(0x01BF, 180, 270, 270);
move(0.02, -6.60, 0.00);  object(0x01BF, 180, 270, 270);
move(-3.24, -3.43, 0.00);  object(0x01BF, 180, 270, 0);
move(-6.70, -0.03, 0.00);  object(0x01BF, 180, 270, 0);
moveto(1422.41, -301.09, 48.78);  object(0x01BF, 255, 0, 14);
move(1.30, 5.17, 2.00);  object(0x01BF, 245, 0, 14);
move(1.21, 4.84, 2.90);  object(0x01BF, 235, 0, 14);
setfloat(0x08e2d800, 1431, -256, 55.70);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
setfloat(0x08E2E400, 1433, -256, 55.70);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x124);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, 1435, -256, 55.70);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
setfloat(0x08e2d8c0, 1437, -256, 55.70);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, 1439, -256, 55.70);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, 1441, -256, 55.70);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, 1443, -256, 55.70);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, 1445, -256, 55.70);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
setfloat(0x08e2daa0, 1447, -256, 55.70);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
setfloat(0x08e2db00, 1449, -256, 55.70);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
setfloat(0x08E2DB60, 1451, -256, 55.70);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
setfloat(0x08E2DBC0, 1453, -256, 55.70);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
setfloat(0x08E2DC20, 1455, -256, 55.70);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
setfloat(0x08E2DC80, 1457, -256, 55.70);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
setfloat(0x08E2DCE0, 1431, -236, 55.70);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x10f);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
setfloat(0x08E2DD40, 1433, -236, 55.70);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
setfloat(0x08E2DDA0, 1435, -236, 55.70);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
setfloat(0x08E2DE00, 1437, -236, 55.70);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
setfloat(0x08E2DE60, 1439, -236, 55.70);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
setfloat(0x08E2DEC0, 1441, -236, 55.70);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
setfloat(0x08E2DF20, 1443, -236, 55.70);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0xff, 0xff);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
setfloat(0x08E2DF80, 1445, -236, 55.70);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0xff, 0xff);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
setfloat(0x08E2DFE0, 1447, -236, 55.70);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0xff, 0xff);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
setfloat(0x08E2E040, 1449, -236, 55.70);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0xff, 0xff);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
setfloat(0x08E2E0A0, 1451, -236, 55.70);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
setfloat(0x08E2E100, 1453, -236, 55.70);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0xff, 0xff);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
setfloat(0x08E2E160, 1455, -236, 55.70);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
setfloat(0x08E2E1C0, 1457, -236, 55.70);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
setfloat(0x08E2E220, 1431, -242, 55.70);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0xff, 0xff);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
setfloat(0x08E2E280, 1431, -244, 55.70);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0xff, 0xff);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
setfloat(0x08E2E2E0, 1431, -246, 55.70);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0xff, 0xff);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
setfloat(0x08E2E340, 1431, -248, 55.70);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0xff, 0xff);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
setfloat(0x08E2E3A0, 1431, -250, 55.70);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0xff, 0xff);
setshort(0x08E2E3C6, 0x122);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
setfloat(0x08E2E460, 1431, -252, 55.70);
setint(0x08E2E474, 0);
setchar(0x08E2E47C, 0xff, 0xff);
setshort(0x08E2E486, 0x22e);
setchar(0x08E2E492, 0x0f);
setchar(0x08E2E493, 0x00);
setchar(0x08E2D4B0, 0xff);
setfloat(0x08E2E4C0, 1431, -254, 55.70);
setint(0x08E2E4D4, 0);
setchar(0x08E2E4DC, 0xff, 0xff);
setshort(0x08E2E4E6, 0x24b);
setchar(0x08E2E4F2, 0x0f);
setchar(0x08E2E4F3, 0x00);
setchar(0x08E2D510, 0xff);
setint(0x08b89acc, 99999999);
setint(0x08b89ad0, 99999999);
setchar(0x08E4Eaf4, 189);
setchar(0x08E4Eaf4 + 0x18, 0x01);
setfloat(0x08E4Eaf8, 1401, -230, 51, 315);
setchar(0x08E4Eac8, 185);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 1402, -235, 51, 315);
setchar(0x08E4E9EC, 137);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 1403, -240, 51, 315);
setchar(0x08E4E9c0, 142);
setchar(0x08E4E9c0 + 0x18, 0x01);
setfloat(0x08E4E9c4, 1403, -245, 51, 315);
setchar(0x08E4Eba4, 205);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 1402, -250, 51, 315);
setchar(08E4Ecd8, 213);
setchar(08E4Ecd8 + 0x18, 0x01);
setfloat(08E4Ecdc, 1420, -271, 50, 67);
setchar(0x945cdf2, 0x4);
setchar(0x945cdf1, 0x50);
setchar(0x945cdf0, 0x52);
setshort(0x9444cd0, 250);
setfloat(0x9444ccc, 0.9489);
setfloat(0x945cd70, 3700);
setfloat(0x945cd78, 0.925);
setfloat(0x945ce30, 0.2875);
setfloat(0x945ce34, -0.275);
setfloat(0x945ce38, 0.4125);
setfloat(0x945cdfc, 1.55);
setfloat(0x945ce00, 1.55);
setfloat(0x945cdf4, 0.00363);
setfloat(0x945ce10, 0.7125);
setfloat(0x945ce14, 0);
setfloat(0x945ce18, 42.5);
setfloat(0x945ce28, 1.125);
setfloat(0x945ce2c, 0.11875);
setfloat(0x945ce44, 0.15);
setfloat(0x945ce3c, 0.4125);
setfloat(0x945cd90, 0);
setfloat(0x945cd94, 0.1);
setfloat(0x945cd98, -0.425);
setchar(0x945cda0, 10);
setfloat(0x945ce1c, 0.9125);
setfloat(0x945ce20, 0.45375);
setfloat(0x945cd7c, 0.007);
sethex(0x945ce40, 0x83, 0x81, 0x00, 0x07);
sethex(0x944fb40, 0x00, 0x00, 0x00);
sethex(0x944fb3c, 0xFF, 0x00, 0x00);
setint(0x8E38A38, 185);
setchar(0x8E38A5C, 120, 119);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(0x945a1e2, 0x5);
setchar(0x945a1e1, 0x50);
setchar(0x945a1e0, 0x34);
setshort(0x94409a0, 250);
setfloat(0x944099c, 0.90);
setfloat(0x945a160, 900);
setfloat(0x945a168, 1.35);
setfloat(0x945a220, 0.25);
setfloat(0x945a224, -0.225);
setfloat(0x945a228, 0.5);
setfloat(0x945a1ec, 1.4);
setfloat(0x945a1f0, 1.4);
setfloat(0x945a1e4, 0.00462);
setfloat(0x945a200, 0.51);
setfloat(0x945a204, 0);
setfloat(0x945a208, 40);
setfloat(0x945a218, 2.15625);
setfloat(0x945a21c, 0.19);
setfloat(0x945a234, 0.37);
setfloat(0x945a22c, 0.6);
setfloat(0x945a180, 0);
setfloat(0x945a184, -0.29999);
setfloat(0x945a188, -0.475);
setchar(0x945a190, 70);
setfloat(0x945a20c, 0.95625);
setfloat(0x945a210, 0.5);
setfloat(0x945a16c, 1.02857);
sethex(0x945a230, 0x03, 0x81, 0x20, 0x04);
sethex(0x944fb20, 0xCA, 0xDA, 0xCF);
sethex(0x944fb50, 0xCA, 0xDA, 0xCF);
setint(0x8E38A38, 142);
setchar(0x8E38A5C, 112, 124);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(0x945d1b2, 0x6);
setchar(0x945d1b1, 0x50);
setchar(0x945d1b0, 0x52);
setshort(0x9445310, 250);
setfloat(0x944530c, 0.725);
setfloat(0x945d130, 1400);
setfloat(0x945d138, 1.4);
setfloat(0x945d1f0, 0.2);
setfloat(0x945d1f4, -0.0125);
setfloat(0x945d1f8, 0.4);
setfloat(0x945d1bc, 1.2);
setfloat(0x945d1c0, 1.2);
setfloat(0x945d1b4, 0.0065);
setfloat(0x945d1d0, 0.45);
setfloat(0x945d1d4, 0);
setfloat(0x945d1d8, 40);
setfloat(0x945d1e8, 1.1);
setfloat(0x945d1ec, 0.075);
setfloat(0x945d204, 0.2);
setfloat(0x945d1fc, 0.3);
setfloat(0x945d150, 0);
setfloat(0x945d154, 0.3);
setfloat(0x945d158, -0.29999);
setchar(0x945d160, 75);
setfloat(0x945d1dc, 0.8);
setfloat(0x945d1e0, 0.45);
setfloat(0x945d13c, 0.85714);
sethex(0x945d200, 0x02, 0x81, 0x00, 0x06);
sethex(0x944fb34, 0x00, 0x00, 0x00);
sethex(0x944fb48, 0x00, 0x00, 0x00);
setint(0x8E38A38, 189);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(0x9459d32, 0x5);
setchar(0x9459d31, 0x50);
setchar(0x9459d30, 0x34);
setshort(0x94401d0, 250);
setfloat(0x94401cc, 1.6);
setfloat(0x9459cb0, 2500);
setfloat(0x9459cb8, 0.75);
setfloat(0x9459d70, 0.35);
setfloat(0x9459d74, -.7);
setfloat(0x9459d78, 0.5);
setfloat(0x9459d3c, 1);
setfloat(0x9459d40, 1);
setfloat(0x9459d34, 0.001);
setfloat(0x9459d50, 0.5);
setfloat(0x9459d54, 0);
setfloat(0x9459d58, 25);
setfloat(0x9459d68, 1.5);
setfloat(0x9459d6c, 1);
setfloat(0x9459d84, 0.28);
setfloat(0x9459d7c, 0);
setfloat(0x9459cd0, 0);
setfloat(0x9459cd4, 0);
setfloat(0x9459cd8, -1);
setchar(0x9459ce0, 80);
setfloat(0x9459d5c, 0.92);
setfloat(0x9459d60, 0.5);
setfloat(0x9459cbc, 0);
sethex(0x9459d80, 0x83, 0xc1, 0x00, 0x04);
sethex(0x944fb58, 0x00, 0x00, 0x00);
sethex(0x944fb48, 0xFF, 0xAA, 0x01);
setint(0x8E38A38, 137);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(0x945d482, 0x5);
setchar(0x945d481, 0x50);
setchar(0x945d480, 0x52);
setshort(0x9446c10, 255);
setfloat(0x9446c0c, 0.67);
setfloat(0x945d400, 500);
setfloat(0x945d408, 1.6);
setfloat(0x945d4c0, 0.15);
setfloat(0x945d4c4, -0.15999);
setfloat(0x945d4c8, 0.5);
setfloat(0x945d48c, 0.97867);
setfloat(0x945d490, 0.97867);
setfloat(0x945d484, 0.004);
setfloat(0x945d4a0, 0.5);
setfloat(0x945d4a4, 0);
setfloat(0x945d4a8, 35);
setfloat(0x945d4b8, 0.85);
setfloat(0x945d4bc, 0.15);
setfloat(0x945d4d4, 0);
setfloat(0x945d4cc, 0);
setfloat(0x945d420, 0);
setfloat(0x945d424, 0.05);
setfloat(0x945d428, -0.08999);
setchar(0x945d430, 103);
setfloat(0x945d4ac, 0.9);
setfloat(0x945d4b0, 0.48);
setfloat(0x945d40c, 0.6);
sethex(0x945d4d0, 0x02, 0x01, 0x01, 0x00);
sethex(0x944fb28, 0x6D, 0xFF, 0x00);
sethex(0x944fb2c, 0x77, 0xFF, 0x00);
setfloat(0x945d404, 850);
setint(0x8E38A38, 205);
sethex(0x8E38A5E, 0x01, 0x00);
off();

#cheat Cliff-Side House
//ID: 13322
//Score: 82
//Author: raigov222
//Category: Location Mods
//Description: Some people said i shouldent build my house on a cliff but screw them! I did it anyway! This house have every thing you could ever want! including all weapons, a hunter, and a great veiw of the light house! Take it! ITS FREAKIN SWEET!
//Image: none
//Time: 20/06/2006 03:17:27
//Working: Yes
//By Raigov
//ENJOY! =)
teleport(1421, -241, 49.85);
//Floor
moveto(1433, -257, 50); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
//Door
moveto(1429.19, -237.29, 50.78);  object(0x01BF, 0, 0, 90);
move(-3.06, -6.12, -2.10);  object(0x01BF, 245, 0, 90);
//Gates
moveto(1428.86, -241.29, 53.91);  object(0x1003, 0, 180, 206);
move(-0.06, -4.30, 0.00);  object(0x1002, 0, 0, 156);
//Deck Stuff
moveto(1460.78, -259.39, 50.88);  object(0x01F1, 270, 0, 270);
move(0.02, 16.30, 0.00);  object(0x01F1, 270, 0, 270);
move(0.07, -6.90, -0.60);  object(0x01F0, 0, 0, 270);
move(-0.03, 2.90, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.16, 13.51, 0.00);  object(0x01F0, 0, 0, 180);
move(-4.40, -0.03, 0.00);  object(0x01F0, 0, 0, 180);
move(2.09, 0.08, 0.00);  object(0x01F0, 0, 0, 180);
move(-0.92, -26.64, 0.10);  object(0x01F0, 0, 0, 0);
move(-4.40, -0.00, 0.00);  object(0x01F0, 0, 0, 0);
move(2.30, -0.05, 0.00);  object(0x01F0, 0, 0, 0);
move(-1.90, 0.59, 0.00);  object(0x020F, 0, 0, 0);
move(7.00, 0.01, 0.00);  object(0x020F, 0, 0, 0);
move(-0.04, 25.49, 0.00);  object(0x020F, 0, 0, 247);
move(-7.00, 0.26, 0.00);  object(0x020F, 0, 0, 180);
move(7.19, -19.49, 0.00);  object(0x020F, 0, 0, 270);
move(-0.02, 6.50, 0.00);  object(0x020F, 0, 0, 270);
move(-0.03, 6.90, 0.00);  object(0x020F, 0, 0, 270);
move(-2.25, -16.24, 0.40);  object(0x025B, 0, 0, 223);
move(-0.25, 19.81, 0.00);  object(0x025B, 0, 0, 311);
move(-1.69, -13.03, -0.30);  object(0x0257, 0, 0, 165);
move(0.26, 5.20, 0.00);  object(0x0257, 0, 0, 195);
//Deck Stuff 2
moveto(1459.54, -240.85, 50.81);  object(0x0ECF, 0, 0, 270);
move(0.01, -0.80, 0.00);  object(0x0ECF, 0, 0, 270);
move(-0.00, -0.40, -0.40);  object(0x0ECB, 0, 270, 270);
move(-0.60, -0.01, 0.00);  object(0x0ECB, 0, 270, 270);
move(-0.02, 1.60, 0.00);  object(0x0ECB, 0, 270, 270);
move(0.59, 0.01, 0.00);  object(0x0ECB, 0, 270, 270);
move(-1.37, -0.32, 0.50);  object(0x0F03, 90, 0, 60);
move(0.95, -0.09, 0.00);  object(0x0F74, 90, 0, 55);
move(0.06, -0.70, 0.00);  object(0x0F75, 0, 0, 310);
move(-0.96, -0.08, 0.00);  object(0x0F76, 0, 0, 310);
//Chair
moveto(1456.97, -241.15, 50.16);  object(0x1004, 0, 0, 130);
//Weapons
moveto(1458.81, -252.19, 50.17);  object(0x0114, 270, 0, 284);
move(-0.54, 0.73, 0.00);  object(0x0116, 270, 0, 180);
move(0.25, 0.57, 0.00);  object(0x0119, 270, 0, 187);
move(0.83, -0.12, 0.00);  object(0x011F, 270, 0, 118);
move(0.41, 1.25, 0.00);  object(0x010D, 270, 0, 118);
move(-2.03, -2.16, 0.00);  object(0x011E, 270, 0, 72);
//ramp
moveto(1454.39, -243.57, 54.61);  object(0x0F25, 0, 0, 270);
//Roof
moveto(1433.01, -236.68, 54.50);  object(0x01BF, 270, 0, 180);
move(7.93, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(7.93, -0.01, 0.00);  object(0x01BF, 270, 0, 180);
move(7.83, -0.05, 0.00);  object(0x01BF, 270, 0, 180);
move(-0.01, -6.54, -0.02);  object(0x01BF, 270, 0, 180);
move(-7.94, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(-7.83, 0.02, 0.00);  object(0x01BF, 270, 0, 180);
move(-7.83, -0.08, 0.00);  object(0x01BF, 270, 0, 180);
move(0.02, -6.67, 0.00);  object(0x01BF, 270, 0, 180);
move(7.92, 0.03, 0.00);  object(0x01BF, 270, 0, 180);
move(15.65, -0.02, 0.00);  object(0x01BF, 270, 0, 180);
move(-0.05, -6.74, 0.00);  object(0x01BF, 270, 0, 180);
move(-7.91, -0.12, 0.00);  object(0x01BF, 270, 0, 180);
move(-7.93, 0.15, 0.00);  object(0x01BF, 270, 0, 180);
move(-7.73, 0.08, 0.00);  object(0x01BF, 270, 0, 180);
//Stairs
moveto(1445.85, -247.79, 51.61);  object(0x0204, 270, 25, 180);
//Roof Rails
moveto(1430.14, -259.71, 55.14);  object(0x01F1, 270, 0, 0);
move(20.70, -0.16, 0.00);  object(0x01F1, 270, 0, 0);
move(-10.30, 0.08, 0.00);  object(0x01F1, 270, 0, 0);
move(-11.39, 9.60, 0.00);  object(0x01F1, 270, 0, 90);
move(-0.10, 15.70, 0.00);  object(0x01F1, 270, 0, 90);
move(0.05, -8.00, 0.00);  object(0x01F1, 270, 0, 90);
move(9.73, 9.04, 0.10);  object(0x01F1, 270, 0, 180);
move(20.79, -0.15, 0.00);  object(0x01F1, 270, 0, 180);
move(-10.50, -0.06, 0.00);  object(0x01F1, 270, 0, 180);
move(11.36, -9.60, 0.00);  object(0x01F1, 270, 0, 270);
move(0.04, -15.50, 0.00);  object(0x01F1, 270, 0, 270);
move(-0.02, 7.70, 0.00);  object(0x01F1, 270, 0, 270);
move(-0.59, -8.31, -0.30);  object(0x020F, 0, 0, 242);
move(0.31, 25.14, 0.00);  object(0x020F, 0, 0, 166);
move(-30.68, -25.00, 0.00);  object(0x020F, 0, 0, 103);
move(-0.05, 25.38, 0.00);  object(0x020F, 0, 0, 95);
move(23.32, -19.78, -0.10);  object(0x020F, 0, 0, 135);
move(-8.13, 0.07, 0.00);  object(0x020F, 0, 0, 237);
move(0.16, 6.99, 0.00);  object(0x020F, 0, 0, 315);
move(7.99, 0.01, 0.00);  object(0x020F, 0, 0, 49);
move(-7.12, 0.11, -0.20);  object(0x01EF, 0, 0, 0);
move(-0.82, -6.80, 0.00);  object(0x01EF, 0, 0, 270);
move(6.94, -0.33, 0.00);  object(0x01EF, 0, 0, 180);
//Trim
moveto(1429.33, -255.24, 48.11);  object(0x0204, 0, 0, 89);
move(-0.03, -6.66, -1.30);  object(0x0204, 270, 270, 0);
move(7.41, 0.03, 7.40);  object(0x0204, 270, 180, 0);
move(8.70, -0.06, 0.00);  object(0x0204, 270, 180, 0);
move(7.51, -0.81, -7.40);  object(0x0204, 270, 90, 0);
move(-3.10, -0.30, -13.80);  object(0x0204, 270, 115, 0);
move(-4.29, -1.09, 19.30);  object(0x0204, 180, 0, 0);
move(-8.80, -0.05, 0.00);  object(0x0204, 180, 0, 0);
move(0.00, 0.00, -4.10);  object(0x0204, 180, 0, 0);
move(8.90, 0.05, 0.00);  object(0x0204, 180, 0, 0);
//Patch
moveto(1452.66, -237.65, 50.98);  object(0x01BF, 0, 0, 270);
//Floor Interior
moveto(1449.19, -256.83, 52.17);  object(0x0F95, 0, 0, 0);
move(-7.10, -0.01, 0.00);  object(0x0F96, 0, 0, 0);
move(-9.50, -0.01, 0.00);  object(0x0F97, 0, 0, 0);
move(0.28, 19.77, 0.00);  object(0x0F98, 0, 0, 180);
move(7.20, 0.05, 0.00);  object(0x0F99, 0, 0, 180);
move(8.80, -0.13, 0.00);  object(0x0F9A, 0, 0, 270);
move(-3.51, -23.27, 0.00);  object(0x0204, 0, 0, 0);
move(-8.73, 0.19, 0.00);  object(0x0204, 0, 0, 0);
move(-7.44, 7.35, 0.00);  object(0x0204, 0, 0, 90);
move(7.37, 19.48, 0.00);  object(0x0204, 0, 0, 180);
move(8.92, -0.21, 0.00);  object(0x0204, 0, 0, 180);
move(7.41, -19.43, 0.00);  object(0x0204, 0, 0, 270);
move(-9.22, 15.57, -1.30);  object(0x01BF, 0, 0, 90);
move(1.50, -0.15, 0.00);  object(0x01BF, 0, 0, 90);
move(0.48, -19.45, -0.30);  object(0x01BF, 0, 0, 90);
move(-7.10, 0.00, 0.00);  object(0x01BF, 0, 0, 90);
move(-2.30, 0.00, 0.00);  object(0x01BF, 0, 0, 90);
move(0.29, 19.58, 0.24);  object(0x01BF, 0, 0, 90);
//Ineteior Xtras
moveto(1432.58, -253.09, 49.91);  object(0x0239, 0, 0, 0);
move(9.20, 0.01, 0.00);  object(0x0239, 0, 0, 0);
move(7.63, -0.01, 0.00);  object(0x0239, 0, 0, 180);
move(-1.05, 12.48, 0.00);  object(0x0239, 0, 0, 0);
move(-7.90, -0.06, 0.00);  object(0x0239, 0, 0, 180);
move(-7.20, -0.03, 0.00);  object(0x0239, 0, 0, 180);
move(1.92, -0.05, 1.21);  object(0x0D0A, 0, 0, 328);
move(7.07, -0.07, 0.00);  object(0x0D0A, 0, 0, 328);
move(4.26, 0.07, 0.00);  object(0x0D0A, 0, 0, 268);
move(4.80, -12.33, 0.00);  object(0x0D0A, 0, 0, 326);
move(-10.36, 1.34, 0.00);  object(0x0D0A, 0, 0, 332);
move(-11.60, 0.30, 0.00);  object(0x0D0A, 0, 0, 287);
//Heli Pad
moveto(1416.74, -270.95, 48.31);  object(0x01BF, 90, 0, 180);
move(7.90, -0.00, 0.00);  object(0x01BF, 90, 0, 180);
move(0.00, 6.79, 0.00);  object(0x01BF, 90, 0, 180);
move(-8.00, 0.00, 0.00);  object(0x01BF, 90, 0, 180);
move(8.00, -13.46, 0.00);  object(0x01BF, 90, 0, 180);
move(-8.00, 0.00, 0.00);  object(0x01BF, 90, 0, 180);
move(10.74, 0.56, -0.80);  object(0x01BF, 305, 0, 270);
move(-0.05, 12.40, 0.00);  object(0x01BF, 305, 0, 270);
move(0.02, -6.10, 0.00);  object(0x01BF, 305, 0, 270);
move(-2.77, -9.26, -0.40);  object(0x01BF, 40, 0, 180);
move(-7.87, 0.87, -0.20);  object(0x01BF, 40, 0, 180);
//weapon spawns
setfloat(0x08e2d800, 1431, -256, 55.70);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
setfloat(0x08E2E400, 1433, -256, 55.70);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x124);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, 1435, -256, 55.70);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
setfloat(0x08e2d8c0, 1437, -256, 55.70);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, 1439, -256, 55.70);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, 1441, -256, 55.70);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, 1443, -256, 55.70);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, 1445, -256, 55.70);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
setfloat(0x08e2daa0, 1447, -256, 55.70);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
setfloat(0x08e2db00, 1449, -256, 55.70);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
setfloat(0x08E2DB60, 1451, -256, 55.70);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
setfloat(0x08E2DBC0, 1453, -256, 55.70);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
setfloat(0x08E2DC20, 1455, -256, 55.70);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
setfloat(0x08E2DC80, 1457, -256, 55.70);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
setfloat(0x08E2DCE0, 1431, -236, 55.70);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x10f);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
setfloat(0x08E2DD40, 1433, -236, 55.70);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
setfloat(0x08E2DDA0, 1435, -236, 55.70);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
setfloat(0x08E2DE00, 1437, -236, 55.70);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
setfloat(0x08E2DE60, 1439, -236, 55.70);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
setfloat(0x08E2DEC0, 1441, -236, 55.70);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
setfloat(0x08E2DF20, 1443, -236, 55.70);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0xff, 0xff);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
setfloat(0x08E2DF80, 1445, -236, 55.70);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0xff, 0xff);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
setfloat(0x08E2DFE0, 1447, -236, 55.70);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0xff, 0xff);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
setfloat(0x08E2E040, 1449, -236, 55.70);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0xff, 0xff);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
setfloat(0x08E2E0A0, 1451, -236, 55.70);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
setfloat(0x08E2E100, 1453, -236, 55.70);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0xff, 0xff);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
setfloat(0x08E2E160, 1455, -236, 55.70);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
setfloat(0x08E2E1C0, 1457, -236, 55.70);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
setfloat(0x08E2E220, 1431, -242, 55.70);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0xff, 0xff);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
setfloat(0x08E2E280, 1431, -244, 55.70);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0xff, 0xff);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
setfloat(0x08E2E2E0, 1431, -246, 55.70);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0xff, 0xff);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
setfloat(0x08E2E340, 1431, -248, 55.70);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0xff, 0xff);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
setfloat(0x08E2E3A0, 1431, -250, 55.70);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0xff, 0xff);
setshort(0x08E2E3C6, 0x122);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
setfloat(0x08E2E460, 1431, -252, 55.70);
setint(0x08E2E474, 0);
setchar(0x08E2E47C, 0xff, 0xff);
setshort(0x08E2E486, 0x22e);
setchar(0x08E2E492, 0x0f);
setchar(0x08E2E493, 0x00);
setchar(0x08E2D4B0, 0xff);
setfloat(0x08E2E4C0, 1431, -254, 55.70);
setint(0x08E2E4D4, 0);
setchar(0x08E2E4DC, 0xff, 0xff);
setshort(0x08E2E4E6, 0x24b);
setchar(0x08E2E4F2, 0x0f);
setchar(0x08E2E4F3, 0x00);
setchar(0x08E2D510, 0xff);
//Spawn Cars
//Ultimate stunt pcj-600
setchar(0x945d482, 0x5);
setchar(0x945d481, 0x50);
setchar(0x945d480, 0x52);
setshort(0x9446c10, 255);
setfloat(0x9446c0c, 0.67);
setfloat(0x945d400, 500);
setfloat(0x945d408, 1.6);
setfloat(0x945d4c0, 0.15);
setfloat(0x945d4c4, -0.15999);
setfloat(0x945d4c8, 0.5);
setfloat(0x945d48c, 0.97867);
setfloat(0x945d490, 0.97867);
setfloat(0x945d484, 0.004);
setfloat(0x945d4a0, 0.5);
setfloat(0x945d4a4, 0);
setfloat(0x945d4a8, 35);
setfloat(0x945d4b8, 0.85);
setfloat(0x945d4bc, 0.15);
setfloat(0x945d4d4, 0);
setfloat(0x945d4cc, 0);
setfloat(0x945d420, 0);
setfloat(0x945d424, 0.05);
setfloat(0x945d428, -0.08999);
setchar(0x945d430, 103);
setfloat(0x945d4ac, 0.9);
setfloat(0x945d4b0, 0.48);
setfloat(0x945d40c, 0.6);
sethex(0x945d4d0, 0x02, 0x01, 0x01, 0x00);
sethex(0x944fb28, 0x6D, 0xFF, 0x00);
sethex(0x944fb2c, 0x77, 0xFF, 0x00);
setfloat(0x945d404, 850);
setint(0x8E38A38, 205);
sethex(0x8E38A5E, 0x01, 0x00);
//cheetah
setchar(0x08E4Eb78, 146);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 1402, -235, 50.80, 315);
//patriot
setchar(0x08E4E9EC, 137);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 1403, -240, 50.80, 315);
//infurnus
setchar(0x08E4E9c0, 142);
setchar(0x08E4E9c0 + 0x18, 0x01);
setfloat(0x08E4E9c4, 1403, -245, 50.80, 315);
//pcj 600
setchar(0x08E4Eba4, 205);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 1402, -250, 50.80, 315);
//hunter
setchar(08E4Ecd8, 213);
setchar(08E4Ecd8 + 0x18, 0x01);
setfloat(08E4Ecdc, 1420, -271, 50, 67);
off();

