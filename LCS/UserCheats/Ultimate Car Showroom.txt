#cheat Ultimate Car showroom V2 (BETA RELEASE)
//ID: 11789
//Score: 1175
//Author: vettefan88
//Category: Location Mods
//Description: Now in Version 2 BETA it Features:
//19 Cars Spawns.
//Every weapon spawn
//front gate removed
//Over 5 Floors!
//Observation Deck
//Built in PMG Cars
//
//The biggest car showroom to date!
//Image: http://img359.imageshack.us/img359/5479/screen134zk.png
//Time: 30/05/2006 00:29:54
//Working: Yes
moveto(34.17, -372.69, 23.13);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(6.60, -9.85, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(0.06, -7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(0.06, -7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(6.14, 0.04, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(-6.07, 7.76, 0.00);  object(0x01BF, 90, 0, 270);
move(11.99, -7.72, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.50, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(0.06, -7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(0.06, -7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(-5.78, 54.22, -0.90);  object(0x01BF, 75, 0, 270);
move(5.23, 0.05, -1.40);  object(0x01BF, 75, 0, 270);
move(5.97, 0.06, -1.60);  object(0x01BF, 75, 0, 270);
move(5.97, 0.06, -1.60);  object(0x01BF, 75, 0, 270);
move(4.88, -0.03, -1.30);  object(0x01BF, 75, 0, 270);
move(5.23, 0.05, -1.40);  object(0x01BF, 75, 0, 270);
move(-18.50, -6.52, 10.60);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(-3.90, 2.89, 2.44);  object(0x01BF, 90, 0, 180);
move(-7.80, -0.01, 0.00);  object(0x01BF, 90, 0, 180);
move(-7.80, -0.01, 0.00);  object(0x01BF, 90, 0, 180);
move(-4.10, -0.00, 0.00);  object(0x01BF, 90, 0, 180);
move(7.59, 6.43, 0.00);  object(0x01BF, 90, 0, 180);
move(7.80, 0.01, 0.00);  object(0x01BF, 90, 0, 180);
move(4.40, 0.00, 0.00);  object(0x01BF, 90, 0, 180);
move(-19.30, -0.02, 0.00);  object(0x01BF, 90, 0, 180);
move(26.90, 0.02, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, -6.48, 0.00);  object(0x01BF, 90, 0, 180);
move(6.60, -0.05, 0.00);  object(0x01BF, 90, 0, 180);
move(0.05, 6.51, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.16, 0.00);  object(0x01BF, 90, 0, 180);
move(-6.70, 0.05, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.31, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.33, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.17, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.41, 0.00);  object(0x01BF, 90, 0, 180);
move(0.03, 4.81, 0.00);  object(0x01BF, 90, 0, 180);
move(0.03, 3.62, 0.00);  object(0x01BF, 90, 0, 180);
move(6.51, -27.53, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.36, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.27, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.32, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 5.83, 0.00);  object(0x01BF, 90, 0, 180);
move(0.02, 2.74, 0.00);  object(0x01BF, 90, 0, 180);
move(7.36, -5.50, 0.00);  object(0x01BF, 90, 0, 180);
move(7.80, -0.05, 0.00);  object(0x01BF, 90, 0, 180);
move(6.10, -0.04, 0.00);  object(0x01BF, 90, 0, 180);
move(-13.56, 5.52, 0.00);  object(0x01BF, 90, 0, 180);
move(7.30, -0.05, 0.00);  object(0x01BF, 90, 0, 180);
move(6.20, -0.04, 0.00);  object(0x01BF, 90, 0, 180);
move(1.42, 3.31, 2.50);  object(0x0CDB, 180, 0, 180);
move(-5.00, 0.04, 0.00);  object(0x0CDB, 180, 0, 180);
move(-5.00, 0.04, 0.00);  object(0x0CDB, 180, 0, 180);
move(-5.00, 0.04, 0.00);  object(0x0CDB, 180, 0, 180);
move(-5.00, 0.04, 0.00);  object(0x0CDB, 180, 0, 180);
move(-4.90, 0.03, 0.00);  object(0x0CDB, 180, 0, 180);
move(-5.00, 0.04, 0.00);  object(0x0CDB, 180, 0, 180);
move(-2.68, -0.00, -2.20);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.40, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.40, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.40, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.40, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(-1.32, -3.35, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.40, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.40, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.30, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.30, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.40, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(-6.39, 3.78, -1.00);  object(0x01BF, 90, 10, 270);
move(-0.02, 7.30, -1.30);  object(0x01BF, 90, 10, 270);
move(-0.05, 7.37, -1.30);  object(0x01BF, 90, 10, 270);
move(-0.02, 4.10, -0.80);  object(0x01BF, 90, 10, 272);
move(23.45, 17.31, -0.40);  object(0x01F0, 0, 0, 180);
move(-3.30, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.40, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(42.75, -2.63, 6.98);  object(0x0CDB, 0, 0, 270);
move(0.06, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.06, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
//lights on third floor
moveto(56.48, -324.82, 28.51);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.00, 0.00);  object(0x020F, 0, 0, 90);
//other lights
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
//fourth floor
moveto(88.91, -328.42, 33.05);  object(0x01BF, 90, 0, 90);
move(-6.10, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.42, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.01, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.41, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-3.83, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(28.74, -6.85, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.31, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.51, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.55, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.35, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-3.04, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(0.00, -7.60, 0.00);  object(0x01BF, 90, 0, 90);
move(0.00, -7.60, 0.00);  object(0x01BF, 90, 0, 90);
move(0.00, -7.60, 0.00);  object(0x01BF, 90, 0, 90);
move(6.60, 14.95, -0.60);  object(0x01BF, 90, 10, 90);
move(0.0, -7.20, -1.30);  object(0x01BF, 90, 10, 90);
move(0.0, -7.30, -1.30);  object(0x01BF, 90, 10, 90);
move(0.0, -7.30, -1.30);  object(0x01BF, 90, 10, 90);
//railings
moveto(57.2, -324.82, 33.4);  object(0x01ef, 0, 0, 90);
move(0.00, -6.60, 0.00);  object(0x01ef, 0, 0, 90);
move(0.00, -6.60, 0.00);  object(0x01ef, 0, 0, 90);
move(0.00, -6.60, 0.00);  object(0x01ef, 0, 0, 90);
move(0.00, -6.60, 0.00);  object(0x01ef, 0, 0, 90);
move(0.00, -6.60, 0.00);  object(0x01f0, 0, 0, 90);
moveto(57.08, -361.11, 33.4);  object(0x01EF, 0, 0, 0);
//fourth floor addon + observation deck
moveto(88.89, -321.34, 33.03);  object(0x01BF, 90, 0, 90);
move(-6.30, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.39, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.20, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.22, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-3.65, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.48, 0.39, 0.80);  object(0x01BF, 105, 0, 90);
move(-5.98, -0.01, 1.60);  object(0x01BF, 105, 0, 90);
move(-6.61, -0.01, 0.80);  object(0x01BF, 90, 0, 90);
move(0.01, -7.40, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.05, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.01, 7.40, 0.00);  object(0x01BF, 90, 0, 90);
move(6.09, -14.69, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.18, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-4.89, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.01, 7.20, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.02, 8.70, 0.00);  object(0x01BF, 90, 0, 90);
move(13.86, -19.82, 0.20);  object(0x01EF, 0, 0, 270);
move(-0.00, 7.60, 0.00);  object(0x01EF, 0, 0, 270);
move(-6.43, -7.64, 0.00);  object(0x01EF, 0, 0, 0);
move(-5.70, 0.03, 0.00);  object(0x01EF, 0, 0, 0);
//remove the Front Gate
setfloat(0x09997788, -100);
//pimped cars
//monster hummer- Patriot
setshort(0x992FC5A, 0x20, 0x48, 0x75, 0x6d, 0x6d, 0x65, 0x72);
setchar(0x9459d32, 0x5);
setchar(0x9459d31, 0x50);
setchar(0x9459d30, 0x34);
setshort(0x94401d0, 250);
setfloat(0x94401cc, 1.6);
setfloat(0x9459cb0, 2500);
setfloat(0x9459cb8, 0.75);
setfloat(0x9459d70, 0.35);
setfloat(0x9459d74, -.7);
setfloat(0x9459d78, 0.5);
setfloat(0x9459d3c, 1);
setfloat(0x9459d40, 1);
setfloat(0x9459d34, 0.001);
setfloat(0x9459d50, 0.5);
setfloat(0x9459d54, 0);
setfloat(0x9459d58, 25);
setfloat(0x9459d68, 1.5);
setfloat(0x9459d6c, 1);
setfloat(0x9459d84, 0.28);
setfloat(0x9459d7c, 0);
setfloat(0x9459cd0, 0);
setfloat(0x9459cd4, 0);
setfloat(0x9459cd8, -1);
setchar(0x9459ce0, 80);
setfloat(0x9459d5c, 0.92);
setfloat(0x9459d60, 0.5);
setfloat(0x9459cbc, 0);
sethex(0x9459d80, 0x83, 0xc1, 0x00, 0x04);
//venom-banshee
setshort(0x992FDD4, 0x20, 0x20, 0x56, 0x65, 0x6e, 0x6f, 0x6d);
sethex(0x945b131, 0x01);
sethex(0x945b133, 0x02);
setchar(0x945b0e2, 0x8);
setchar(0x945b0e1, 0x50);
setchar(0x945b0e0, 0x52);
setshort(0x94425c0, 250);
setfloat(0x94425bc, 1);
setfloat(0x945b060, 1500);
setfloat(0x945b068, 0.85);
setfloat(0x945b120, 0.3);
setfloat(0x945b124, -0.15);
setfloat(0x945b128, 0.5);
setfloat(0x945b0ec, 5);
setfloat(0x945b0f0, 4);
setfloat(0x945b100, 0.52);
setfloat(0x945b104, 0);
setfloat(0x945b108, 34);
setfloat(0x945b118, 1.6);
setfloat(0x945b11c, 0.1);
setfloat(0x945b134, 0.15);
setfloat(0x945b12c, 0);
setfloat(0x945b080, 0);
setfloat(0x945b084, 0);
setfloat(0x945b088, -1);
setchar(0x945b090, 70);
setchar(0x967E6FC, 0x00, 187, 0x00);
//porsche
setshort(0x992FC0E, 0x50, 0x6f, 0x72, 0x73, 0x63, 0x68, 0x65);
setchar(0x9459972, 0x5);
setchar(0x9459971, 0x50);
setchar(0x9459970, 0x52);
setshort(0x943fb90, 250);
setfloat(0x943fb8c, 0.87);
setfloat(0x94598f8, 0.8);
setfloat(0x94599b0, 0.2);
setfloat(0x94599b4, -0.05);
setfloat(0x94599b8, 0.5);
setfloat(0x945997c, 1.5);
setfloat(0x9459980, 1.5);
setchar(0x8E38A58, 255);
setfloat(0x9459974, 0.00208);
setfloat(0x9459990, 0.52);
setfloat(0x9459994, 0);
setfloat(0x9459998, 25);
setfloat(0x94599a8, 1);
setfloat(0x94599ac, 0.2);
setfloat(0x94599c4, 0.4);
setfloat(0x94599bc, 1);
setfloat(0x9459910, 0);
setfloat(0x9459914, 0);
setfloat(0x9459918, -0.5);
setchar(0x9459920, 70);
setfloat(0x945999c, 0.92);
setfloat(0x94599a0, 0.48);
setfloat(0x94598fc, 0);
sethex(0x94599c0, 0x83, 0xa1, 0x00, 0x06);
setchar(0x967E6FC, 0x00, 0x00, 0xFF);
//car spawns
//landstalker
setchar(0x08E4E9C0, 131);
setchar(0x08E4E9C0 + 0x18, 0x01);
setfloat(0x08E4E9C4, 41.34, -369, 16.16, 300);
//patriot
setchar(0x08E4E9EC, 137);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 41.34, -364, 16.16, 300);
//phobos
setchar(0x08E4Ea18, 186);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 41.34, -359, 16.16, 300);
//stinger
setchar(0x08E4Ea44, 133);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 41.34, -354, 16.16, 300);
//yardie lobo
setchar(0x08E4Ea70, 173);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, 41.34, -349, 16.16, 300);
//banshee
setchar(0x08E4Ea9c, 160);
setchar(0x08E4Ea9c + 0x18, 0x01);
setfloat(0x08E4Eaa0, 41.34, -344, 16.16, 300);
//hellenbach
setchar(0x08E4Eac8, 185);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 41.34, -339, 16.16, 300);
//thunder-rodd
setchar(0x08E4Eaf4, 189);
setchar(0x08E4Eaf4 + 0x18, 0x01);
setfloat(0x08E4Eaf8, 41.34, -334, 16.16, 300);
//deimos
setchar(0x08E4Eb20, 130);
setchar(0x08E4Eb20 + 0x18, 0x01);
setfloat(0x08E4Eb24, 41.34, -329, 16.16, 300);
//angel
setchar(0x08E4Eb4c, 202);
setchar(0x08E4Eb4c + 0x18, 0x01);
setfloat(0x08E4Eb50, 55.34, -369, 16.16, 300);
//cheetah
setchar(0x08E4Eb78, 146);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 73.74, -352.51, 16.16, 270);
//pcj 600
setchar(0x08E4Eba4, 205);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 55.34, -359, 16.16, 300);
//yakuza stinger
setchar(0x08E4Ebd0, 174);
setchar(0x08E4Ebd0 + 0x18, 0x01);
setfloat(0x08E4Ebd4, 55.34, -354, 16.16, 300);
//diablo
setchar(0x08E4Ebfc, 175);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 55.34, -349, 16.16, 300);
//Bickle
setchar(0x08E4Ec28, 181);
setchar(0x08E4Ec28 + 0x18, 0x01);
setfloat(0x08E4Ec2c, 55.34, -344, 16.16, 300);
//leone sentinel
setchar(0x08E4Ec54, 172);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, 55.34, -339, 16.16, 300);
//infernus
setchar(0x08E4Ec80, 142);
setchar(0x08E4Ec80 + 0x18, 0x01);
setfloat(0x08E4Ec84, 55.34, -334, 16.16, 300);
//stretch
setchar(0x08E4Ecac, 140);
setchar(0x08E4Ecac + 0x18, 0x01);
setfloat(0x08E4Ecb0, 55.34, -329, 16.16, 300);
//police
setchar(0x08E4Ecd8, 157);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, 27.00, -365.41, 16.16, 270);
//weapon spawns
setfloat(0x08e2d800, 55.39, -326, 24.31);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
setfloat(0x08E2E400, 55.39, -328, 24.31);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x124);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, 55.39, -330, 24.31);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
setfloat(0x08e2d8c0, 55.39, -332, 24.31);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, 55.39, -334, 24.31);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, 55.39, -336, 24.31);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, 55.39, -338, 24.31);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, 55.39, -340, 24.31);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
setfloat(0x08e2daa0, 55.39, -342, 24.31);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
setfloat(0x08e2db00, 55.39, -344, 24.31);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
setfloat(0x08E2DB60, 55.39, -346, 24.31);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
setfloat(0x08E2DBC0, 55.39, -348, 24.31);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
setfloat(0x08E2DC20, 55.39, -350, 24.31);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
setfloat(0x08E2DC80, 55.39, -352, 24.31);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
setfloat(0x08E2DCE0, 55.39, -354, 24.31);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x10f);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
setfloat(0x08E2DD40, 55.39, -356, 24.31);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
setfloat(0x08E2DDA0, 55.39, -358, 24.31);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
setfloat(0x08E2DE00, 55.39, -360, 24.31);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
setfloat(0x08E2DE60, 55.39, -362, 24.31);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
setfloat(0x08E2DEC0, 55.39, -364, 24.31);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
setfloat(0x08E2DF20, 55.39, -366, 24.31);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0xff, 0xff);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
setfloat(0x08E2DF80, 55.39, -368, 24.31);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0xff, 0xff);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
setfloat(0x08E2DFE0, 55.39, -370, 24.31);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0xff, 0xff);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
setfloat(0x08E2E040, 55.39, -372, 24.31);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0xff, 0xff);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
setfloat(0x08E2E0A0, 55.39, -374, 24.31);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
setfloat(0x08E2E100, 55.39, -376, 24.31);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0xff, 0xff);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
setfloat(0x08E2E160, 53.39, -376, 24.31);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
setfloat(0x08E2E1C0, 51.39, -376, 24.31);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
setfloat(0x08E2E220, 49.39, -376, 24.31);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0xff, 0xff);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
setfloat(0x08E2E280, 47.39, -376, 24.31);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0xff, 0xff);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
setfloat(0x08E2E2E0, 45.39, -376, 24.31);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0xff, 0xff);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
setfloat(0x08E2E340, 43.39, -376, 24.31);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0xff, 0xff);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
setfloat(0x08E2E3A0, 41.39, -376, 24.31);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0xff, 0xff);
setshort(0x08E2E3C6, 0x122);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
setfloat(0x08E2E460, 39.39, -376, 24.31);
setint(0x08E2E474, 0);
setchar(0x08E2E47C, 0xff, 0xff);
setshort(0x08E2E486, 0x22e);
setchar(0x08E2E492, 0x0f);
setchar(0x08E2E493, 0x00);
setchar(0x08E2D4B0, 0xff);
setfloat(0x08E2E4C0, 37.39, -376, 24.31);
setint(0x08E2E4D4, 0);
setchar(0x08E2E4DC, 0xff, 0xff);
setshort(0x08E2E4E6, 0x24b);
setchar(0x08E2E4F2, 0x0f);
setchar(0x08E2E4F3, 0x00);
setchar(0x08E2D510, 0xff);
teleport(87.25, -323.25, 16.83);

#cheat Teleport to Deluxe Showroom
//ID: 12052
//Score: 117
//Author: vettefan88
//Category: Teleport
//Description: This will teleport you to the "Ultimate Car Showroom *Deluxe*
//Image: none
//Time: 02/06/2006 23:14:08
//Working: Yes
teleport(-1136.20, 23.19, 58.81);

#cheat Teleport to The Deluxe Garage
//ID: 12053
//Score: 145
//Author: vettefan88
//Category: Teleport
//Description: This will teleport you to the Garage section of the ultimate Car Showroom *Deluxe*
//Image: none
//Time: 02/06/2006 23:14:52
//Working: Yes
teleport(-1184.26, -18.84, 53.17);

#cheat Ultimate Car Showroom *DELUXE EDITION* V1
//ID: 12054
//Score: 454
//Author: vettefan88
//Category: Location Mods
//Description: This is the Deluxe version of the ultimate car showroom.
//Featuring 2 completely new buildings, including a Showroom, and Repair Garage.
//It has many Car Spawns, A bult in Pay & Spray, and Bomb Shop.
//The showroom has 3 floors and a heli-pad
//Image: none
//Time: 02/06/2006 23:17:03
//Working: Yes
moveto(-1079.79, 68.19, 62.20);  object(0x01BF, 90, 0, 90);
move(0.03, -8.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.62, 0.30, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.08, 7.70, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.57, -0.06, 0.00);  object(0x01BF, 90, 0, 90);
move(0.08, -7.90, 0.00);  object(0x01BF, 90, 0, 90);
move(-7.19, 8.53, -1.30);  object(0x01BF, 90, 20, 180);
move(-7.40, 0.05, -2.70);  object(0x01BF, 90, 20, 180);
move(7.89, -7.41, 4.02);  object(0x01BF, 90, 0, 90);
move(-6.65, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.72, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.03, 7.80, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.51, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.69, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.63, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.72, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.21, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(26.23, -7.70, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.74, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.73, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.67, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.99, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(32.71, -7.67, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.63, 0.01, 0.00);  object(0x01BF, 90, 0, 91);
move(-6.74, 0.18, 0.00);  object(0x01BF, 90, 0, 91);
move(-6.62, 0.04, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.13, -0.04, 0.00);  object(0x01BF, 90, 0, 90);
move(0.05, -8.00, 0.00);  object(0x01BF, 90, 0, 90);
move(0.05, -7.90, 0.00);  object(0x01BF, 90, 0, 90);
move(0.05, -7.80, 0.00);  object(0x01BF, 90, 0, 90);
move(0.02, -2.70, 0.00);  object(0x01BF, 90, 0, 90);
move(25.95, 18.27, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.56, 0.04, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.94, 0.18, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.27, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(19.72, -8.05, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.45, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.61, 0.33, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.27, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(0.03, -7.60, 0.00);  object(0x01BF, 90, 0, 90);
move(0.01, -3.10, 0.00);  object(0x01BF, 90, 0, 90);
move(6.03, 3.02, 0.00);  object(0x01BF, 90, 0, 90);
move(6.20, 0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(6.27, 0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-12.04, -3.04, 0.00);  object(0x01BF, 90, 0, 90);
move(6.44, 0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(5.96, 0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-9.50, 18.25, 0.00);  object(0x01BF, 90, 0, 90);
move(-22.70, 7.96, 0.00);  object(0x01BF, 90, 0, 90);
move(28.78, 1.53, 1.45);  object(0x01BF, 90, 340, 90);
move(0.07, -4.20, 1.50);  object(0x01BF, 90, 340, 90);
move(0.03, -3.80, 1.40);  object(0x01BF, 90, 340, 90);
move(0.01, -7.50, 1.30);  object(0x01BF, 90, 0, 90);
move(0.07, -7.90, 0.00);  object(0x01BF, 90, 0, 90);
move(0.04, -5.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.45, -0.05, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.07, 7.80, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.07, 7.80, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.07, 7.90, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.07, 7.80, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.30, -0.05, 0.00);  object(0x01BF, 90, 0, 90);
move(0.06, -7.60, 0.00);  object(0x01BF, 90, 0, 90);
move(0.06, -7.60, 0.00);  object(0x01BF, 90, 0, 90);
move(0.07, -7.90, 0.00);  object(0x01BF, 90, 0, 90);
move(0.06, -6.50, 0.00);  object(0x01BF, 90, 0, 90);
move(0.01, -1.60, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.77, 31.25, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.14, -0.05, 0.00);  object(0x01BF, 90, 0, 90);
move(-3.37, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(4.08, -7.61, -1.30);  object(0x01BF, 90, 20, 90);
move(-4.09, -0.05, 0.00);  object(0x01BF, 90, 20, 90);
//rails
moveto(-1144.75, 23.52, 66.57);  object(0x01EF, 0, 0, 0);
move(-4.20, -0.03, 0.00);  object(0x01EF, 0, 0, 0);
move(0.04, 6.34, 0.00);  object(0x01EF, 0, 0, 90);
move(-0.06, 6.20, 0.00);  object(0x01EF, 0, 0, 90);
move(-0.06, 6.10, 0.00);  object(0x01EF, 0, 0, 90);
move(-0.06, 6.30, 0.00);  object(0x01EF, 0, 0, 90);
move(-0.06, 6.10, 0.00);  object(0x01EF, 0, 0, 90);
move(10.63, -30.97, 0.00);  object(0x01EF, 0, 0, 270);
move(-0.01, 6.20, 0.00);  object(0x01EF, 0, 0, 270);
move(-0.01, 6.20, 0.00);  object(0x01EF, 0, 0, 270);
move(-0.01, 6.30, 0.00);  object(0x01EF, 0, 0, 270);
move(-0.01, 6.10, 0.00);  object(0x01EF, 0, 0, 270);
move(6.02, 5.35, 1.50);  object(0x01EF, 0, 0, 90);
move(0.08, -6.20, 0.00);  object(0x01EF, 0, 0, 90);
move(0.08, -6.20, 0.00);  object(0x01EF, 0, 0, 90);
move(0.08, -6.20, 0.00);  object(0x01EF, 0, 0, 90);
move(0.07, -5.80, 0.00);  object(0x01EF, 0, 0, 90);
move(-0.29, -6.33, 0.00);  object(0x01EF, 0, 0, 0);
move(6.20, -0.02, 0.00);  object(0x01EF, 0, 0, 0);
move(6.10, -0.02, 0.00);  object(0x01EF, 0, 0, 0);
move(-0.10, 0.60, -5.60);  object(0x01EF, 0, 0, 0);
move(-6.20, 0.02, 0.00);  object(0x01EF, 0, 0, 0);
move(-6.20, 0.02, 0.00);  object(0x01EF, 0, 0, 0);
move(-6.10, 0.02, 0.00);  object(0x01EF, 0, 0, 0);
move(-9.89, 37.92, 0.00);  object(0x01EF, 0, 0, 90);
move(-0.01, 6.10, 0.00);  object(0x01EF, 0, 0, 90);
move(-0.01, 5.30, 0.00);  object(0x01EF, 0, 0, 90);
move(6.08, 0.10, 0.00);  object(0x01EF, 0, 0, 180);
move(6.20, -0.03, 0.00);  object(0x01EF, 0, 0, 180);
move(6.10, -0.03, 0.00);  object(0x01EF, 0, 0, 180);
move(6.20, -0.03, 0.00);  object(0x01EF, 0, 0, 180);
move(6.10, -0.03, 0.00);  object(0x01EF, 0, 0, 180);
move(4.40, -0.02, 0.00);  object(0x01EF, 0, 0, 180);
move(3.80, -0.02, 0.00);  object(0x01EF, 0, 0, 180);
move(20.19, -0.78, 0.00);  object(0x01EF, 0, 0, 180);
move(6.30, -0.03, 0.00);  object(0x01EF, 0, 0, 180);
move(-61.41, -48.54, 4.10);  object(0x01EF, 0, 0, 0);
move(-4.10, -0.03, 0.00);  object(0x01EF, 0, 0, 0);
move(28.58, 22.85, 1.60);  object(0x01EF, 0, 0, 270);
move(-0.01, 6.20, 0.00);  object(0x01EF, 0, 0, 270);
move(-0.00, 2.90, 0.00);  object(0x01EF, 0, 0, 270);
move(0.06, 6.07, 0.00);  object(0x01EF, 0, 0, 180);
move(-6.10, -0.04, 0.00);  object(0x01EF, 0, 0, 180);
move(-6.30, -0.04, 0.00);  object(0x01EF, 0, 0, 180);
move(-6.10, -0.04, 0.00);  object(0x01EF, 0, 0, 180);
move(-3.90, -0.03, 0.00);  object(0x01EF, 0, 0, 180);
move(-6.17, -0.01, 0.00);  object(0x01EF, 0, 0, 90);
move(-0.10, -31.51, -1.60);  object(0x01EF, 0, 0, 90);
move(13.19, 24.42, 1.40);  object(0x01F0, 0, 0, 0);
move(-2.60, -0.00, 0.00);  object(0x01F0, 0, 0, 0);
move(34.91, 10.91, -5.60);  object(0x01EF, 0, 0, 180);
move(3.63, -0.04, 0.00);  object(0x01EF, 0, 0, 180);
move(-10.08, 0.13, 0.00);  object(0x01EF, 0, 0, 270);
move(-0.01, 1.50, 0.00);  object(0x01EF, 0, 0, 270);
//Repair shop
moveto(-1224.53, -16.28, 58.59);  object(0x01BF, 90, 0, 270);
move(0.10, -8.00, 0.00);  object(0x01BF, 90, 0, 270);
move(0.10, -7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(0.10, -7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(6.75, 0.08, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.10, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.10, 7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.10, 8.00, 0.00);  object(0x01BF, 90, 0, 270);
move(6.68, -23.71, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.04, 7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.04, 7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.93, 0.00);  object(0x01BF, 90, 0, 270);
move(6.31, 0.07, 0.00);  object(0x01BF, 90, 0, 270);
move(0.08, -7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(0.08, -7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.02, -7.77, 0.00);  object(0x01BF, 90, 0, 270);
move(6.51, 0.05, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.08, 7.83, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.08, 8.00, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.08, 7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(6.48, 0.06, 0.00);  object(0x01BF, 90, 0, 270);
move(0.08, -7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(0.08, -7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.92, 0.00);  object(0x01BF, 90, 0, 270);
move(6.63, 0.19, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.04, 7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.04, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.04, 7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(-6.71, 7.67, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.04, 7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(6.41, -1.47, 0.00);  object(0x01BF, 90, 0, 270);
move(0.04, -7.30, 0.00);  object(0x01BF, 90, 0, 270);
move(6.95, -23.66, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.03, 7.70, -1.00);  object(0x01BF, 90, 15, 270);
move(-0.03, 7.30, -2.00);  object(0x01BF, 90, 15, 270);
move(-0.02, 6.70, -1.80);  object(0x01BF, 90, 15, 270);
move(0.01, 6.35, -1.70);  object(0x01BF, 90, 15, 270);
move(-3.97, 0.57, 6.72);  object(0x01EF, 0, 0, 270);
move(0.02, -6.30, 0.00);  object(0x01EF, 0, 0, 270);
move(0.02, -6.30, 0.00);  object(0x01EF, 0, 0, 270);
move(0.02, -6.30, 0.00);  object(0x01EF, 0, 0, 270);
move(7.02, -13.30, 0.00);  object(0x01EF, 0, 0, 270);
move(-0.00, 1.10, 0.00);  object(0x01EF, 0, 0, 270);
move(-20.29, 32.37, 0.00);  object(0x01EF, 0, 0, 180);
move(-6.10, 0.00, 0.00);  object(0x01EF, 0, 0, 180);
move(-6.10, 0.00, 0.00);  object(0x01EF, 0, 0, 180);
move(-6.10, 0.00, 0.00);  object(0x01EF, 0, 0, 180);
move(-6.20, 0.00, 0.00);  object(0x01EF, 0, 0, 180);
move(-1.10, 0.00, 0.00);  object(0x01EF, 0, 0, 180);
//car spawns
//landstalker
setchar(08E4Eb78, 131);
setchar(08E4Eb78 + 0x18, 0x01);
setfloat(08E4Eb7c, -1134.07, 48.77, 58.78, 90);
//Linerunner
setchar(08E4Eba4, 134);
setchar(08E4eba4 + 0x18, 0x01);
setfloat(08E4Eba8, -1115.27, 45.67, 59.48, 180);
//bobcat
setchar(08E4Ebfc, 153);
setchar(08E4Ebfc + 0x18, 0x01);
setfloat(08E4ec00, -1135.40, 29.64, 58.50, 90);
//cartel cruiser
setchar(08E4Ec54, 176);
setchar(08E4Ec54 + 0x18, 0x01);
setfloat(08E4Ec58, -1144.86, 28.49, 67.51, 0);
//securicar
setchar(08E4Ec80, 159);
setchar(08E4Ec80 + 0x18, 0x01);
setfloat(08E4Ec84, -1118.17, 31.21, 59.04, 90);
//hunter
setchar(08E4Ecd8, 213);
setchar(08E4Ecd8 + 0x18, 0x01);
setfloat(08E4Ecdc, -1093.59, 35.83, 69.91, 45);
//Rc Bandit
setchar(08E4Ed04, 137);
setchar(08E4Ed04 + 0x18, 0x01);
setfloat(08E4Ed08, -1112.59, 41.01, 68.52, 90);
//diablo
setchar(08E4Ed88, 175);
setchar(08E4Ed88 + 0x18, 0x01);
setfloat(08E4Ed8c, 1187.36, -41.28, 52.73, 0);
//yardie
setchar(08E4Edb4, 173);
setchar(08E4Edb4 + 0x18, 0x01);
setfloat(08E4Edb8, -1199.13, -40.75, 52.83, 0);
//leone
setchar(08E4Ede0, 172);
setchar(08E4Ede0 + 0x18, 0x01);
setfloat(08E4Ede4, -1206.78, -9.69, 52.77, 180);
//hoods
setchar(08E4Ee0c, 177);
setchar(08E4Ee0c + 0x18, 0x01);
setfloat(08E4Ee10, -1112.59, 41.01, 68.52, 90);
off()

#cheat Ultimate Car showroom
//ID: 11409
//Score: 312
//Author: vettefan88
//Category: Location Mods
//Description: The ultimate car showroom in staunton.
//it's 3 floors, Featuring 19 vehicles, all weapon spawns, and pmg'd cars built into it.
//(be sure to get the teleport off of cheatsync)
//
//now removes the annoying front gate a relocates the weapons and some cars
//Image: http://img231.imageshack.us/img231/736/screen146gz.png
//Time: 25/05/2006 20:47:12
//Working: Yes
moveto(34.17, -372.69, 23.13);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(6.60, -9.85, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(0.06, -7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(0.06, -7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(6.14, 0.04, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(-6.07, 7.76, 0.00);  object(0x01BF, 90, 0, 270);
move(11.99, -7.72, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.50, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(0.06, -7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(0.06, -7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(-5.78, 54.22, -0.90);  object(0x01BF, 75, 0, 270);
move(5.23, 0.05, -1.40);  object(0x01BF, 75, 0, 270);
move(5.97, 0.06, -1.60);  object(0x01BF, 75, 0, 270);
move(5.97, 0.06, -1.60);  object(0x01BF, 75, 0, 270);
move(4.88, -0.03, -1.30);  object(0x01BF, 75, 0, 270);
move(5.23, 0.05, -1.40);  object(0x01BF, 75, 0, 270);
move(-18.50, -6.52, 10.60);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(-3.90, 2.89, 2.44);  object(0x01BF, 90, 0, 180);
move(-7.80, -0.01, 0.00);  object(0x01BF, 90, 0, 180);
move(-7.80, -0.01, 0.00);  object(0x01BF, 90, 0, 180);
move(-4.10, -0.00, 0.00);  object(0x01BF, 90, 0, 180);
move(7.59, 6.43, 0.00);  object(0x01BF, 90, 0, 180);
move(7.80, 0.01, 0.00);  object(0x01BF, 90, 0, 180);
move(4.40, 0.00, 0.00);  object(0x01BF, 90, 0, 180);
move(-19.30, -0.02, 0.00);  object(0x01BF, 90, 0, 180);
move(26.90, 0.02, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, -6.48, 0.00);  object(0x01BF, 90, 0, 180);
move(6.60, -0.05, 0.00);  object(0x01BF, 90, 0, 180);
move(0.05, 6.51, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.16, 0.00);  object(0x01BF, 90, 0, 180);
move(-6.70, 0.05, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.31, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.33, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.17, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.41, 0.00);  object(0x01BF, 90, 0, 180);
move(0.03, 4.81, 0.00);  object(0x01BF, 90, 0, 180);
move(0.03, 3.62, 0.00);  object(0x01BF, 90, 0, 180);
move(6.51, -27.53, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.36, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.27, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.32, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 5.83, 0.00);  object(0x01BF, 90, 0, 180);
move(0.02, 2.74, 0.00);  object(0x01BF, 90, 0, 180);
move(7.36, -5.50, 0.00);  object(0x01BF, 90, 0, 180);
move(7.80, -0.05, 0.00);  object(0x01BF, 90, 0, 180);
move(6.10, -0.04, 0.00);  object(0x01BF, 90, 0, 180);
move(-13.56, 5.52, 0.00);  object(0x01BF, 90, 0, 180);
move(7.30, -0.05, 0.00);  object(0x01BF, 90, 0, 180);
move(6.20, -0.04, 0.00);  object(0x01BF, 90, 0, 180);
move(1.42, 3.31, 2.50);  object(0x0CDB, 180, 0, 180);
move(-5.00, 0.04, 0.00);  object(0x0CDB, 180, 0, 180);
move(-5.00, 0.04, 0.00);  object(0x0CDB, 180, 0, 180);
move(-5.00, 0.04, 0.00);  object(0x0CDB, 180, 0, 180);
move(-5.00, 0.04, 0.00);  object(0x0CDB, 180, 0, 180);
move(-4.90, 0.03, 0.00);  object(0x0CDB, 180, 0, 180);
move(-5.00, 0.04, 0.00);  object(0x0CDB, 180, 0, 180);
move(-2.68, -0.00, -2.20);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.40, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.40, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.40, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.40, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(-1.32, -3.35, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.40, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.40, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.30, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.30, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.40, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(-6.39, 3.78, -1.00);  object(0x01BF, 90, 10, 270);
move(-0.02, 7.30, -1.30);  object(0x01BF, 90, 10, 270);
move(-0.05, 7.37, -1.30);  object(0x01BF, 90, 10, 270);
move(-0.02, 4.10, -0.80);  object(0x01BF, 90, 10, 272);
move(23.45, 17.31, -0.40);  object(0x01F0, 0, 0, 180);
move(-3.30, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.40, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(42.75, -2.63, 6.98);  object(0x0CDB, 0, 0, 270);
move(0.06, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.06, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
//row of lights on third floor
moveto(56.48, -324.82, 28.51);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
//remove the Front Gate
setfloat(0x09997788, -100);
//pimped cars
//monster hummer- Patriot
setshort(0x992FC5A, 0x20, 0x48, 0x75, 0x6d, 0x6d, 0x65, 0x72);
setchar(0x9459d32, 0x5);
setchar(0x9459d31, 0x50);
setchar(0x9459d30, 0x34);
setshort(0x94401d0, 250);
setfloat(0x94401cc, 1.6);
setfloat(0x9459cb0, 2500);
setfloat(0x9459cb8, 0.75);
setfloat(0x9459d70, 0.35);
setfloat(0x9459d74, -.7);
setfloat(0x9459d78, 0.5);
setfloat(0x9459d3c, 1);
setfloat(0x9459d40, 1);
setfloat(0x9459d34, 0.001);
setfloat(0x9459d50, 0.5);
setfloat(0x9459d54, 0);
setfloat(0x9459d58, 25);
setfloat(0x9459d68, 1.5);
setfloat(0x9459d6c, 1);
setfloat(0x9459d84, 0.28);
setfloat(0x9459d7c, 0);
setfloat(0x9459cd0, 0);
setfloat(0x9459cd4, 0);
setfloat(0x9459cd8, -1);
setchar(0x9459ce0, 80);
setfloat(0x9459d5c, 0.92);
setfloat(0x9459d60, 0.5);
setfloat(0x9459cbc, 0);
sethex(0x9459d80, 0x83, 0xc1, 0x00, 0x04);
//venom-banshee
setshort(0x992FDD4, 0x20, 0x20, 0x56, 0x65, 0x6e, 0x6f, 0x6d);
sethex(0x945b131, 0x01);
sethex(0x945b133, 0x02);
setchar(0x945b0e2, 0x8);
setchar(0x945b0e1, 0x50);
setchar(0x945b0e0, 0x52);
setshort(0x94425c0, 250);
setfloat(0x94425bc, 1);
setfloat(0x945b060, 1500);
setfloat(0x945b068, 0.85);
setfloat(0x945b120, 0.3);
setfloat(0x945b124, -0.15);
setfloat(0x945b128, 0.5);
setfloat(0x945b0ec, 5);
setfloat(0x945b0f0, 4);
setfloat(0x945b100, 0.52);
setfloat(0x945b104, 0);
setfloat(0x945b108, 34);
setfloat(0x945b118, 1.6);
setfloat(0x945b11c, 0.1);
setfloat(0x945b134, 0.15);
setfloat(0x945b12c, 0);
setfloat(0x945b080, 0);
setfloat(0x945b084, 0);
setfloat(0x945b088, -1);
setchar(0x945b090, 70);
setchar(0x967E6FC, 0x00, 187, 0x00);
//porsche
setshort(0x992FC0E, 0x50, 0x6f, 0x72, 0x73, 0x63, 0x68, 0x65);
setchar(0x9459972, 0x5);
setchar(0x9459971, 0x50);
setchar(0x9459970, 0x52);
setshort(0x943fb90, 250);
setfloat(0x943fb8c, 0.87);
setfloat(0x94598f8, 0.8);
setfloat(0x94599b0, 0.2);
setfloat(0x94599b4, -0.05);
setfloat(0x94599b8, 0.5);
setfloat(0x945997c, 1.5);
setfloat(0x9459980, 1.5);
setchar(0x8E38A58, 255);
setfloat(0x9459974, 0.00208);
setfloat(0x9459990, 0.52);
setfloat(0x9459994, 0);
setfloat(0x9459998, 25);
setfloat(0x94599a8, 1);
setfloat(0x94599ac, 0.2);
setfloat(0x94599c4, 0.4);
setfloat(0x94599bc, 1);
setfloat(0x9459910, 0);
setfloat(0x9459914, 0);
setfloat(0x9459918, -0.5);
setchar(0x9459920, 70);
setfloat(0x945999c, 0.92);
setfloat(0x94599a0, 0.48);
setfloat(0x94598fc, 0);
sethex(0x94599c0, 0x83, 0xa1, 0x00, 0x06);
setchar(0x967E6FC, 0x00, 0x00, 0xFF);
//car spawns
//landstalker
setchar(0x08E4E9C0, 131);
setchar(0x08E4E9C0 + 0x18, 0x01);
setfloat(0x08E4E9C4, 41.34, -369, 16.16, 300);
//patriot
setchar(0x08E4E9EC, 137);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 41.34, -364, 16.16, 300);
//phobos
setchar(0x08E4Ea18, 186);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 41.34, -359, 16.16, 300);
//stinger
setchar(0x08E4Ea44, 133);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 41.34, -354, 16.16, 300);
//yardie lobo
setchar(0x08E4Ea70, 173);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, 41.34, -349, 16.16, 300);
//banshee
setchar(0x08E4Ea9c, 160);
setchar(0x08E4Ea9c + 0x18, 0x01);
setfloat(0x08E4Eaa0, 41.34, -344, 16.16, 300);
//hellenbach
setchar(0x08E4Eac8, 185);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 41.34, -339, 16.16, 300);
//thunder-rodd
setchar(0x08E4Eaf4, 189);
setchar(0x08E4Eaf4 + 0x18, 0x01);
setfloat(0x08E4Eaf8, 41.34, -334, 16.16, 300);
//deimos
setchar(0x08E4Eb20, 130);
setchar(0x08E4Eb20 + 0x18, 0x01);
setfloat(0x08E4Eb24, 41.34, -329, 16.16, 300);
//angel
setchar(0x08E4Eb4c, 202);
setchar(0x08E4Eb4c + 0x18, 0x01);
setfloat(0x08E4Eb50, 55.34, -369, 16.16, 300);
//cheetah
setchar(0x08E4Eb78, 146);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 73.74, -352.51, 16.16, 0);
//pcj 600
setchar(0x08E4Eba4, 205);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 55.34, -359, 16.16, 300);
//yakuza stinger
setchar(0x08E4Ebd0, 174);
setchar(0x08E4Ebd0 + 0x18, 0x01);
setfloat(0x08E4Ebd4, 55.34, -354, 16.16, 300);
//diablo
setchar(0x08E4Ebfc, 175);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 55.34, -349, 16.16, 300);
//Bickle
setchar(0x08E4Ec28, 181);
setchar(0x08E4Ec28 + 0x18, 0x01);
setfloat(0x08E4Ec2c, 55.34, -344, 16.16, 300);
//leone sentinel
setchar(0x08E4Ec54, 172);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, 55.34, -339, 16.16, 300);
//infernus
setchar(0x08E4Ec80, 142);
setchar(0x08E4Ec80 + 0x18, 0x01);
setfloat(0x08E4Ec84, 55.34, -334, 16.16, 300);
//stretch
setchar(0x08E4Ecac, 140);
setchar(0x08E4Ecac + 0x18, 0x01);
setfloat(0x08E4Ecb0, 55.34, -329, 16.16, 300);
//police
setchar(0x08E4Ecd8, 157);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, 27.00, -365.41, 16.16, 0);
//weapon spawns
setfloat(0x08e2d800, 55.39, -326, 24.31);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
setfloat(0x08E2E400, 55.39, -328, 24.31);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x124);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, 55.39, -330, 24.31);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
setfloat(0x08e2d8c0, 55.39, -332, 24.31);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, 55.39, -334, 24.31);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, 55.39, -336, 24.31);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, 55.39, -338, 24.31);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, 55.39, -340, 24.31);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
setfloat(0x08e2daa0, 55.39, -342, 24.31);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
setfloat(0x08e2db00, 55.39, -344, 24.31);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
setfloat(0x08E2DB60, 55.39, -346, 24.31);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
setfloat(0x08E2DBC0, 55.39, -348, 24.31);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
setfloat(0x08E2DC20, 55.39, -350, 24.31);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
setfloat(0x08E2DC80, 55.39, -352, 24.31);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
setfloat(0x08E2DCE0, 55.39, -354, 24.31);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x10f);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
setfloat(0x08E2DD40, 55.39, -356, 24.31);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
setfloat(0x08E2DDA0, 55.39, -358, 24.31);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
setfloat(0x08E2DE00, 55.39, -360, 24.31);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
setfloat(0x08E2DE60, 55.39, -362, 24.31);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
setfloat(0x08E2DEC0, 55.39, -364, 24.31);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
setfloat(0x08E2DF20, 55.39, -366, 24.31);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0xff, 0xff);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
setfloat(0x08E2DF80, 55.39, -368, 24.31);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0xff, 0xff);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
setfloat(0x08E2DFE0, 55.39, -370, 24.31);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0xff, 0xff);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
setfloat(0x08E2E040, 55.39, -372, 24.31);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0xff, 0xff);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
setfloat(0x08E2E0A0, 55.39, -374, 24.31);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
setfloat(0x08E2E100, 55.39, -376, 24.31);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0xff, 0xff);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
setfloat(0x08E2E160, 53.39, -376, 24.31);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
setfloat(0x08E2E1C0, 51.39, -376, 24.31);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
setfloat(0x08E2E220, 49.39, -376, 24.31);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0xff, 0xff);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
setfloat(0x08E2E280, 47.39, -376, 24.31);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0xff, 0xff);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
setfloat(0x08E2E2E0, 45.39, -376, 24.31);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0xff, 0xff);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
setfloat(0x08E2E340, 43.39, -376, 24.31);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0xff, 0xff);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
setfloat(0x08E2E3A0, 41.39, -376, 24.31);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0xff, 0xff);
setshort(0x08E2E3C6, 0x122);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
setfloat(0x08E2E460, 39.39, -376, 24.31);
setint(0x08E2E474, 0);
setchar(0x08E2E47C, 0xff, 0xff);
setshort(0x08E2E486, 0x22e);
setchar(0x08E2E492, 0x0f);
setchar(0x08E2E493, 0x00);
setchar(0x08E2D4B0, 0xff);
setfloat(0x08E2E4C0, 37.39, -376, 24.31);
setint(0x08E2E4D4, 0);
setchar(0x08E2E4DC, 0xff, 0xff);
setshort(0x08E2E4E6, 0x24b);
setchar(0x08E2E4F2, 0x0f);
setchar(0x08E2E4F3, 0x00);
setchar(0x08E2D510, 0xff);
off()

