#cheat teleport to Parking meters!
//ID: 16320
//Score: 29
//Author: psphacker108
//Category: Teleport
//Description: thats right you heard it right theres parking meters in LCS Just like vice city!! Break them and money comes out!! tested WORKS email me ringlingfan108@googlemail.com
//Image: http://i66.photobucket.com/albums/h257/pspman108/screen1-9.jpg
//Time: 11/08/2006 22:19:44
//Working: Yes
//Created By PSPhacker108
teleport(86.62, -1466.50, 26.02);

#cheat MY!! SHOW!! ROOM!!!!
//ID: 13834
//Score: 99
//Author: lilfrk12006
//Category: Location Mods
//Description: its a costum show room all built up with my pmg cars regular cars and every weapon spawn in the game has 3 floors a tele so no need to have to look for it and its all down in the old gta 3 hide out!!!!! on 2nd island
//Image: http://img478.imageshack.us/img478/2310/showroom5kl.png
//Time: 28/06/2006 07:15:05
//Working: Yes
//BY:LILFRK12006
moveto(146.35, -470.17, 16.93);  object(0x01BF, 90, 0, 91);
move(-6.75, 0.08, 0.00);  object(0x01BF, 90, 0, 91);
move(0.19, 7.92, 0.00);  object(0x01BF, 90, 0, 91);
move(6.49, 3.86, 0.10);  object(0x01BF, 90, 0, 90);
move(-6.74, 0.56, 0.00);  object(0x01BF, 90, 0, 90);
move(-7.36, -0.97, -1.00);  object(0x01BF, 90, 345, 359);
move(-10.74, -0.69, -0.70);  object(0x01BF, 90, 25, 359);
move(-6.35, 0.05, 3.00);  object(0x01BF, 90, 25, 359);
move(-7.40, -0.08, 1.60);  object(0x01BF, 90, 0, 359);
move(0.13, -6.71, 0.00);  object(0x01BF, 90, 0, 359);
move(0.10, -6.61, 0.00);  object(0x01BF, 90, 0, 359);
move(-8.15, -0.26, 0.00);  object(0x01BF, 90, 0, 359);
move(-0.27, 6.65, 0.00);  object(0x01BF, 90, 0, 359);
move(-0.11, 6.72, 0.00);  object(0x01BF, 90, 0, 359);
move(5.14, -6.96, 0.08);  object(0x01BF, 90, 0, 177);
move(0.08, -6.75, 0.00);  object(0x01BF, 90, 0, 177);
move(-0.43, 13.44, 0.00);  object(0x01BF, 90, 0, 178);
move(-12.29, -0.08, 0.00);  object(0x01BF, 90, 0, 178);
move(0.13, -6.62, 0.00);  object(0x01BF, 90, 0, 178);
move(0.24, -6.72, 0.00);  object(0x01BF, 90, 0, 178);
move(0.69, 13.01, 3.40);  object(0x01BF, 90, 15, 92);
move(-0.25, -7.52, -1.00);  object(0x01BF, 90, 0, 92);
move(-0.27, -7.82, 0.00);  object(0x01BF, 90, 0, 92);
move(7.26, 4.95, -1.30);  object(0x01BF, 90, 20, 2);
move(34.87, 24.45, 10.30);  object(0x01BF, 90, 0, 359);
move(0.04, -6.62, 0.00);  object(0x01BF, 90, 0, 359);
move(0.18, -6.63, 0.00);  object(0x01BF, 90, 0, 359);
move(-7.79, -0.22, 0.00);  object(0x01BF, 90, 0, 180);
move(-0.02, 6.73, 0.00);  object(0x01BF, 90, 0, 180);
move(0.10, 6.72, 0.00);  object(0x01BF, 90, 0, 180);
move(-7.71, 0.02, 0.01);  object(0x01BF, 90, 0, 183);
move(-0.17, -6.65, 0.00);  object(0x01BF, 90, 0, 183);
move(-0.29, -6.93, 0.30);  object(0x01BF, 90, 0, 178);
move(-0.14, 3.66, 0.00);  object(0x01BF, 90, 0, 183);
move(-6.74, 9.21, -0.30);  object(0x01BF, 90, 0, 180);
move(-7.93, -0.00, 0.00);  object(0x01BF, 90, 0, 180);
move(-7.91, -0.06, 0.00);  object(0x01BF, 90, 0, 180);
move(-7.81, -0.06, -0.70);  object(0x01BF, 90, 10, 179);
move(4.60, -5.81, -1.10);  object(0x01BF, 90, 10, 1);
move(7.69, -0.09, -1.40);  object(0x01BF, 90, 10, 1);
move(7.79, -0.14, -1.20);  object(0x01BF, 90, 10, 1);
move(6.82, -0.10, -1.20);  object(0x01BF, 90, 10, 1);
move(6.79, -0.19, -1.20);  object(0x01BF, 90, 10, 2);
moveto(100.53, -452.94, 28.12);  object(0x01BF, 270, 355, 181);
move(26.17, -6.67, 3.20);  object(0x01BF, 270, 355, 178);
move(-0.15, 3.32, 0.00);  object(0x01BF, 270, 355, 181);
move(-7.46, 6.12, 0.10);  object(0x01BF, 275, 0, 0);
move(22.60, 4.71, 0.00);  object(0x01BF, 270, 0, 89);
move(0.27, -8.52, 0.00);  object(0x01BF, 270, 0, 88);
move(0.09, -4.69, 0.00);  object(0x01BF, 270, 0, 88);
move(-0.41, 9.84, 0.00);  object(0x01BF, 270, 0, 86);
move(6.42, 2.01, 0.00);  object(0x01BF, 270, 0, 86);
move(0.26, -7.71, 0.00);  object(0x01BF, 270, 0, 86);
moveto(132.56, -470.53, 15.88);  object(0x01BF, 90, 15, 182);
move(0.33, 5.19, 0.00);  object(0x01BF, 90, 15, 182);
move(-0.53, 0.74, -0.20);  object(0x01BF, 95, 15, 182);
//Lights
moveto(111.44, -465.01, 20.50);  object(0x020F, 0, 0, 271);
moveto(111.48, -466.20, 20.50);  object(0x020F, 0, 0, 269);
move(0.02, -1.10, 0.00);  object(0x020F, 0, 0, 269);
move(0.02, -1.10, 0.00);  object(0x020F, 0, 0, 269);
move(0.02, -1.50, 0.00);  object(0x020F, 0, 0, 269);
move(0.02, -1.50, 0.00);  object(0x020F, 0, 0, 269);
moveto(111.48, -463.76, 20.53);  object(0x020F, 0, 0, 271);
move(-22.70, -4.20, 10.20);  object(0x020F, 0, 0, 268);
move(0.02, 1.40, 0.00);  object(0x020F, 0, 0, 271);
moveto(88.80, -465.30, 30.73);  object(0x020F, 0, 0, 270);
move(0.16, 4.44, 0.00);  object(0x020F, 0, 0, 270);
move(-0.02, 1.80, 0.00);  object(0x020F, 0, 0, 270);
move(-0.02, 1.70, 0.00);  object(0x020F, 0, 0, 270);
move(-0.02, 1.60, 0.00);  object(0x020F, 0, 0, 270);
moveto(88.87, -462.20, 30.69);  object(0x020F, 0, 0, 267);
move(0.09, -1.70, 0.00);  object(0x020F, 0, 0, 267);
moveto(139.01, -456.13, 25.09);  object(0x020F, 0, 0, 132);
move(2.80, 5.34, 0.00);  object(0x020F, 0, 0, 70);
move(-2.20, -0.04, 0.00);  object(0x020F, 0, 0, 70);
move(-1.86, -0.07, 0.00);  object(0x020F, 0, 0, 74);
move(-1.66, -0.02, 0.00);  object(0x020F, 0, 0, 67);
move(14.41, 12.69, 2.10);  object(0x020F, 265, 0, 5);
move(-1.96, 0.02, 0.00);  object(0x020F, 265, 0, 5);
move(-1.98, -0.06, 0.00);  object(0x020F, 265, 0, 5);
move(-52.19, -22.26, -9.00);  object(0x020F, 265, 0, 270);
move(-0.07, -1.11, 0.00);  object(0x020F, 265, 0, 273);
move(-0.21, -0.99, 0.00);  object(0x020F, 265, 0, 271);
move(4.18, 11.75, 0.00);  object(0x020F, 265, 0, 1);
move(1.02, -0.09, 0.00);  object(0x020F, 265, 0, 0);
move(1.14, 0.12, 0.00);  object(0x020F, 265, 0, 359);
//Fencing
moveto(115.08, -460.05, 31.90);  object(0x01F0, 0, 0, 90);
move(0.01, 3.50, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.00, 3.50, 0.00);  object(0x01F0, 0, 0, 90);
move(-6.75, 2.83, -0.30);  object(0x01F0, 0, 0, 0);
move(-3.62, 0.03, 0.00);  object(0x01F0, 0, 0, 0);
move(-3.60, -0.11, 0.00);  object(0x01F0, 0, 0, 0);
move(-3.62, 0.03, 0.00);  object(0x01F0, 0, 0, 1);
move(-3.71, 0.04, 0.00);  object(0x01F0, 0, 0, 1);
move(-3.41, 0.00, 0.00);  object(0x01F0, 0, 0, 1);
moveto(111.99, -450.28, 31.64);  object(0x01F0, 0, 0, 0);
move(3.12, -12.87, 0.20);  object(0x01F0, 0, 0, 356);
move(3.59, 0.19, 0.00);  object(0x01F0, 0, 0, 359);
move(3.48, 0.07, 0.00);  object(0x01F0, 0, 0, 0);
move(3.56, -0.03, 0.00);  object(0x01F0, 0, 5, 0);
move(3.63, 0.13, -0.20);  object(0x01F0, 0, 0, 0);
move(3.74, 0.10, 0.00);  object(0x01F0, 0, 0, 0);
move(3.67, 0.02, 0.00);  object(0x01F0, 0, 0, 0);
move(3.90, 0.08, 0.00);  object(0x01F0, 0, 0, 359);
//Reg. Cars
//phobos
setchar(0x08E4Ea18, 186);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 49.48, -447.04, 30.98, 200);
//stinger
setchar(0x08E4Ea44, 133);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 142.45, -448.82, 25.08, 198);
//yardie lobo
setchar(0x08E4Ea70, 173);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, 74.88, -446.66, 30.97, 200);
//banshee
setchar(0x08E4Ea9c, 160);
setchar(0x08E4Ea9c + 0x18, 0x01);
setfloat(0x08E4Eaa0, 63.94, -446.94, 30.98, 200);
//hellenbach
setchar(0x08E4Eac8, 185);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 133.76, -453.12, 25.08, 0);
//thunder-rodd
setchar(0x08E4Eaf4, 189);
setchar(0x08E4Eaf4 + 0x18, 0x01);
setfloat(0x08E4Eaf8, 94.26, -460.71, 15.53, 180);
//deimos
setchar(0x08E4Eb20, 130);
setchar(0x08E4Eb20 + 0x18, 0x01);
setfloat(0x08E4Eb24, 100.35, -467.78, 15.54, 280);
//angel
setchar(0x08E4Eb4c, 202);
setchar(0x08E4Eb4c + 0x18, 0x01);
setfloat(0x08E4Eb50, 84.94, -464.56, 30.87, 10);
//cheetah
setchar(0x08E4Eb78, 146);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 121.06, -77.07, 15.43, 250);
//pcj 600
setchar(0x08E4Eba4, 205);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 85.67, -458.68, 30.90, 10);
//Bickle
setchar(0x08E4Ec28, 181);
setchar(0x08E4Ec28 + 0x18, 0x01);
setfloat(0x08E4Ec2c, 45.89, -464.72, 30.98, 5);
//leone sentinel
setchar(0x08E4Ec54, 172);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, 54.59, -66.12, 30.95, 5);
//infernus
setchar(0x08E4Ec80, 142);
setchar(0x08E4Ec80 + 0x18, 0x01);
setfloat(0x08E4Ec84, 92.59, -468.77, 15.52, 280);
//stretch
setchar(0x08E4Ecac, 140);
setchar(0x08E4Ecac + 0x18, 0x01);
setfloat(0x08E4Ecb0, 66.13, -466.05, 30.90, 5);
//pmg cars
//m4
setshort(0x99450E2, 0x20, 0x20, 0x20, 0x20, 0x20, 0x4d, 0x34);
setchar(0x945d482, 0x5);
setchar(0x945d481, 0x50);
setchar(0x945d480, 0x34);
setshort(0x9446c10, 250);
setfloat(0x9446c0c, 1.175);
setfloat(0x945d400, 500);
setfloat(0x945d408, 1.6);
setfloat(0x945d4c0, 0.15);
setfloat(0x945d4c4, -0.15999);
setfloat(0x945d4c8, 0.5);
setfloat(0x945d48c, 0.97867);
setfloat(0x945d490, 0.97867);
setfloat(0x945d484, 0.00475);
setfloat(0x945d4a0, 0.5);
setfloat(0x945d4a4, 0);
setfloat(0x945d4a8, 35);
setfloat(0x945d4b8, 0.85);
setfloat(0x945d4bc, 0.15);
setfloat(0x945d4d4, 0);
setfloat(0x945d4cc, 0);
setfloat(0x945d420, 0);
setfloat(0x945d424, 0.05);
setfloat(0x945d428, -0.08999);
setchar(0x945d430, 103);
setfloat(0x945d4ac, 0.9);
setfloat(0x945d4b0, 0.48);
setfloat(0x945d40c, 0.6);
sethex(0x945d4d0, 0x03, 0x01, 0x01, 0x07);
setchar(0x967E6FC, 0x00, 0xFF, 0x00);
sethex(0x944fb04, 0x79, 0xD1, 0x47);
sethex(0x944fb3c, 0xFF, 0xFF, 0xFF);
setint(0x8E38A38, 205);
setchar(0x8E38A5C, 105, 119);
sethex(0x8E38A5E, 0x01, 0x00);
//m3 limo
setshort(0x992FC96, 0x4d, 0x33, 0x20, 0x4c, 0x49, 0x4d, 0x4f);
setchar(0x945a002, 0x5);
setchar(0x945a001, 0x44);
setchar(0x945a000, 0x34);
setshort(0x9440680, 250);
setfloat(0x944067c, 0.75);
setfloat(0x9459f80, 2000);
setfloat(0x9459f88, 0.6);
setfloat(0x945a040, 0.35);
setfloat(0x945a044, -1);
setfloat(0x945a048, 0.5);
setfloat(0x945a00c, 1.275);
setfloat(0x945a010, 1.275);
setfloat(0x945a004, 0.0045);
setfloat(0x945a020, 0.4);
setfloat(0x945a024, 0);
setfloat(0x945a028, 45);
setfloat(0x945a038, 1.1);
setfloat(0x945a03c, 0.07);
setfloat(0x945a054, 0.2);
setfloat(0x945a04c, 0);
setfloat(0x9459fa0, 0);
setfloat(0x9459fa4, 0);
setfloat(0x9459fa8, -1);
setchar(0x9459fb0, -1);
setfloat(0x945a02c, 0.8);
setfloat(0x945a030, 0.5);
setfloat(0x9459f8c, 0);
sethex(0x945a050, 0x02, 0xc1, 0x00, 0x07);
setchar(0x967E6FC, 0x00, 0x00, 0xFF);
sethex(0x944fb50, 0x54, 0xD5, 0xF2);
sethex(0x944faf4, 0x54, 0xD5, 0xF2);
setint(0x8E38A38, 140);
setchar(0x8E38A5C, 124, 101);
sethex(0x8E38A5E, 0x01, 0x00);
//earth-quake!!
setshort(0x99300B2, 0x65, 0x61, 0x72, 0x74, 0x68, 0x2d, 0x71, 0x75, 0x61, 0x6b, 0x65, 0x21);
setchar(0x945d1b2, 0x6);
setchar(0x945d1b0, 0x34);
setshort(0x9445310, 250);
setfloat(0x944530c, 0.75);
setfloat(0x945d130, 1450);
setfloat(0x945d1f4, -0.001);
setfloat(0x945d1bc, 3.5);
setfloat(0x945d1c0, 3.5);
setfloat(0x945d1b4, 0.12);
setfloat(0x945d1d8, 55);
setfloat(0x945d1e8, 1.21875);
setfloat(0x945d158, -1.15);
setchar(0x945d160, 0);
setfloat(0x945d13c, 0);
sethex(0x945d200, 0x83, 0x81, 0x00, 0x07);
setchar(0x967E6FC, 0x00, 0xFF, 0x00);
sethex(0x944fb34, 0x00, 0x00, 0x00);
sethex(0x944fb4c, 0x00, 0x00, 0x00);
setint(0x8E38A38, 189);
setchar(0x8E38A5C, 117, 123);
sethex(0x8E38A5E, 0x01, 0xFF);
//Weps.
setfloat(0x08e2d800, 149.45, -444.37, 32.60);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
setfloat(0x08E2E400, 149.52, -445.13, 32.60);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x124);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, 149.83, -446.54, 32.60);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
setfloat(0x08e2d8c0, 149.20, -448.45, 32.60);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, 148.67, -449.69, 32.60);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, 147.84, -451.18, 32.60);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, 146.86, -453.56, 32.60);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, 145.72, -455.87, 32.60);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
setfloat(0x08e2daa0, 144.82, -457.93, 32.60);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
setfloat(0x08e2db00, 143.99, -459.80, 32.60);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
setfloat(0x08E2DB60, 143.38, -461.57, 32.60);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
setfloat(0x08E2DBC0, 141.70, -461.95, 32.60);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
setfloat(0x08E2DC20, 140.14, -462.02, 32.60);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
setfloat(0x08E2DC80, 138.19, -462, 32.60);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
setfloat(0x08E2DCE0, 136.58, -462.02, 32.60);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x10f);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
setfloat(0x08E2DD40, 135.43, -461.99, 32.60);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
setfloat(0x08E2DDA0, 134.08, -462.08, 32.60);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
setfloat(0x08E2DE00, 132.36, -462.36, 32.60);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
setfloat(0x08E2DE60, 130.63, -462.14, 32.60);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
setfloat(0x08E2DEC0, 128.99, -462.21, 32.60);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
setfloat(0x08E2DF20, 126.59, -462.33, 32.60);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0xff, 0xff);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
setfloat(0x08E2DF80, 147.97, -443.84, 32.60);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0xff, 0xff);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
setfloat(0x08E2DFE0, 145.49, -443.94, 32.60);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0xff, 0xff);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
setfloat(0x08E2E040, 143.50, -443.99, 32.60);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0xff, 0xff);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
setfloat(0x08E2E0A0, 141.68, -443.96, 32.60);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
setfloat(0x08E2E100, 139.02, -443.91, 32.60);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0xff, 0xff);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
setfloat(0x08E2E160, 136.95, -443.93, 32.60);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
setfloat(0x08E2E1C0, 134.90, -444, 32.60);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
setfloat(0x08E2E220, 133.23, -444, 32.60);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0xff, 0xff);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
setfloat(0x08E2E280, 130.85, -444, 32.60);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0xff, 0xff);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
setfloat(0x08E2E2E0, 129.01, -444, 32.60);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0xff, 0xff);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
setfloat(0x08E2E340, 127.04, -444, 32.60);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0xff, 0xff);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
setfloat(0x08E2E3A0, 124.35, -444, 32.60);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0xff, 0xff);
setshort(0x08E2E3C6, 0x122);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
setfloat(0x08E2E460, 121.79, -444, 32.60);
setint(0x08E2E474, 0);
setchar(0x08E2E47C, 0xff, 0xff);
setshort(0x08E2E486, 0x22e);
setchar(0x08E2E492, 0x0f);
setchar(0x08E2E493, 0x00);
setchar(0x08E2D4B0, 0xff);
setfloat(0x08E2E4C0, 119.10, -444, 32.60);
setint(0x08E2E4D4, 0);
setchar(0x08E2E4DC, 0xff, 0xff);
setshort(0x08E2E4E6, 0x24b);
setchar(0x08E2E4F2, 0x0f);
setchar(0x08E2E4F3, 0x00);
setchar(0x08E2D510, 0xff);
//tele
teleport(187.77, -473.53, 26.00);
off()

#cheat GTA 3 Classic car collection show room
//ID: 15843
//Score: 37
//Author: psphacker108
//Category: Pimp My Garage
//Description: THe GTA 3 classic car show room is here!! taken me almost a month to edit everything! It has The following TOP 4 gta 3 classic cars! The Diablo stallion, mafia sentinel, Yakuza stinger and the banshee thanks to rashon 125 for Beta testing!
//Image: http://i66.photobucket.com/albums/h257/pspman108/GTA.jpg
//Time: 01/08/2006 20:30:53
//Working: Yes
moveto(1005.58, -842.87, 16.12);  object(0x01BF, 0, 0, 270);
move(-0.07, 6.90, 0.00);  object(0x01BF, 0, 0, 270);
move(0.14, -14.20, 0.00);  object(0x01BF, 0, 0, 270);
move(0.07, -7.50, 0.00);  object(0x01BF, 0, 0, 270);
move(3.58, -4.08, 0.00);  object(0x01BF, 0, 0, 181);
move(3.00, -0.05, 0.00);  object(0x01BF, 0, 0, 181);
move(9.17, 2.43, 0.00);  object(0x01BF, 0, 0, 88);
move(-0.29, 6.59, 0.00);  object(0x01BF, 0, 0, 88);
move(-0.37, -25.75, -0.40);  object(0x01BF, 0, 0, 182);
move(6.30, -0.25, 0.00);  object(0x01BF, 0, 0, 182);
move(3.67, 3.62, 0.00);  object(0x01BF, 0, 0, 87);
move(-0.32, 6.99, 0.00);  object(0x01BF, 0, 0, 87);
move(-3.88, 4.12, 0.00);  object(0x01BF, 0, 0, 6);
move(-1.46, 0.14, 0.00);  object(0x01BF, 0, 0, 14);
move(-9.02, -1.85, 0.40);  object(0x01BF, 0, 0, 270);
move(5.09, -3.76, -0.50);  object(0x01BF, 225, 0, 181);
move(-0.14, -5.66, 2.20);  object(0x01BF, 90, 0, 181);
move(5.79, -0.44, 0.00);  object(0x01BF, 90, 0, 181);
move(-10.14, 1.15, -2.00);  object(0x01BF, 0, 0, 88);
move(-7.39, 40.90, 0.30);  object(0x01BF, 0, 0, 357);
move(7.69, 0.42, 0.00);  object(0x01BF, 0, 0, 357);
move(6.62, -0.05, 0.00);  object(0x01BF, 0, 0, 357);
move(5.40, -0.54, 0.00);  object(0x01BF, 0, 0, 14);
move(-3.76, -15.10, 0.00);  object(0x01BF, 0, 0, 186);
move(6.40, 0.11, 0.00);  object(0x01BF, 0, 0, 178);
move(4.12, 2.19, 0.00);  object(0x01BF, 0, 0, 271);
move(0.14, 12.90, -0.10);  object(0x01BF, 0, 0, 271);
move(2.46, -11.97, 0.00);  object(0x01BF, 0, 0, 227);
move(0.88, 10.27, 0.00);  object(0x01BF, 0, 0, 333);
move(-6.81, 0.67, 0.00);  object(0x01BF, 0, 0, 358);
move(-23.38, -2.39, 3.00);  object(0x01BF, 265, 0, 270);
move(5.52, 0.05, -0.50);  object(0x01BF, 265, 0, 270);
move(5.00, 0.04, -0.40);  object(0x01BF, 265, 0, 270);
move(5.63, 0.05, 0.00);  object(0x01BF, 265, 0, 270);
move(5.70, 0.05, 0.00);  object(0x01BF, 265, 0, 270);
move(-21.92, -6.29, 0.90);  object(0x01BF, 270, 0, 270);
move(5.26, 0.04, 0.00);  object(0x01BF, 270, 0, 270);
move(6.29, 0.05, 0.00);  object(0x01BF, 270, 0, 270);
move(6.90, 0.06, 0.00);  object(0x01BF, 270, 0, 270);
move(5.28, 0.05, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.04, 4.60, 0.00);  object(0x01BF, 270, 0, 270);
move(3.31, -1.95, 2.50);  object(0x01BF, 175, 0, 268);
move(-3.99, -13.36, -6.85);  object(0x01BF, 85, 0, 265);
move(4.84, 0.41, -0.90);  object(0x01BF, 50, 0, 265);
move(-5.75, -0.52, 2.00);  object(0x01BF, 275, 0, 265);
//1 diablo stallion
setchar(0x08E4Ebfc, 175);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 1009.60, -856.64, 14.96, 0);
//2 mafia sentinel
setchar(0x08E4E9EC, 172);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 1028.68, -846.10, 14.95, 0);
//3 Yakuza stinger
setchar(0x08E4Ea44, 174);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 1009.75, -836.66, 14.96, 0);
//4 Cartel crusier
setchar(0x08E4Ea70, 176);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, 1019.59, -838.36, 14.96, 0);
//5 Banshee
setchar(0x08E4Eac8, 160);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 1025.19, -836.99, 14.96, 0);

#cheat teleport to gta 3 classic car show room
//ID: 15844
//Score: 41
//Author: psphacker108
//Category: Teleport
//Description: this will teleport you to my gta 3 car show room! enjoy the gta 3 style! TESTED WORKS
//Image: http://i66.photobucket.com/albums/h257/pspman108/GTA.jpg
//Time: 01/08/2006 20:31:50
//Working: Yes
//Created Using Teleport Creator
//By RASAL
teleport(1026.19, -836.99, 14.96);

#cheat old style hidden package from GTA 3 (UK version)
//ID: 4223
//Score: 12
//Author: RASAL
//Category: Environment
//Description: old style hidden package
//Image: none
//Time: 25/01/2006 10:06:19
//Working: Yes
setfloat(099b6260,297.81);
setfloat(099b6264,-442.35);
setfloat(099b6268,26.02);
setchar(099b6288, 0x08);
setchar(099b6289, 0x02);


#cheat GTA 3 Safehouse!
//ID: 16273
//Score: 46
//Author: The_Jerm1202
//Category: Location Mods
//Description: This Spawns 6 Weapons And A Vehicle(Banshee) To The Location Of Your Portland Safehouse In GTA 3! It Also Teleports You There! Makes You Feel Like Your Playin' GTA 3!
//Image: none
//Time: 10/08/2006 22:48:02
//Working: Yes
//made using multi weapon lot tool
//weapon 1
setfloat(0x08e2d800, 876.55, -317.00, 10.08);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x112)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//weapon 2
setfloat(0x08E2E400, 875.55, -316.00, 10.08);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x115);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
//weapon 3
setfloat(0x08e2d860, 874.55, -315.00, 10.08);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x119)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//weapon 4
setfloat(0x08e2d8c0, 873.55, -314.00, 10.08);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x11d);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
//weapon 5
setfloat(0x08e2d920, 872.55, -313.00, 10.08);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x114);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
//weapon 6
setfloat(0x08e2d980, 881.65, -301.85, 8.67);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x108);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
//1 vehicle
setchar(0x08E4Ebfc, 160);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 885.64, -313.10, 8.76, 1);
//By RASAL
teleport(889.61, -307.98, 8.68);

#cheat Rashon's Car Showroom Loaded v3
//ID: 16392
//Score: 100
//Author: rashon125
//Category: Location Mods
//Description: *Located At Francis Intr.
//*All Helicopter and Plane Spawns
//*Sports Car Spawns
//*Gang Car Spawns
//*Law Enforcement Vehicle Spawns
//*Muscle Car Spawns
//*The Bus and Mr. Whoppee Join Th
//Image: http://img99.imageshack.us/img99/4418/furtherfrontviewmp4.png
//Time: 13/08/2006 05:17:12
//Working: Yes
// By Rashon125
// Located at Francis International Airport
moveto(-1342.61, -586.15, 13.40);  object(0x01BF, 0, 0, 270);
move(4.23, 4.23, 0.00);  object(0x01BF, 0, 0, 0);
move(7.56, -0.03, 0.00);  object(0x01BF, 0, 0, 0);
move(7.21, -0.09, 0.00);  object(0x01BF, 0, 0, 0);
move(5.01, 0.16, 0.00);  object(0x01BF, 0, 0, 0);
move(4.16, -4.02, 0.00);  object(0x01BF, 0, 0, 90);
move(0.04, -7.86, 0.00);  object(0x01BF, 0, 0, 90);
move(0.03, -5.90, 0.00);  object(0x01BF, 0, 0, 90);
move(0.02, -8.02, 0.00);  object(0x01BF, 0, 0, 90);
move(0.05, -8.05, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.01, -8.05, 0.00);  object(0x01BF, 0, 0, 90);
move(-4.27, -4.02, 0.00);  object(0x01BF, 0, 0, 180);
move(-7.99, -0.01, 0.00);  object(0x01BF, 0, 0, 180);
move(-7.94, -0.04, 0.00);  object(0x01BF, 0, 0, 180);
move(-4.30, -0.00, 0.00);  object(0x01BF, 0, 0, 180);
move(-4.10, 4.17, 0.00);  object(0x01BF, 0, 0, 90);
move(0.00, 8.00, 0.00);  object(0x01BF, 0, 0, 90);
move(0.01, 7.28, 0.00);  object(0x01BF, 0, 0, 90);
move(12.16, 22.22, -1.60);  object(0x01BF, 240, 0, 90);
move(4.90, 0.03, 2.80);  object(0x01BF, 240, 0, 90);
move(6.22, 0.21, 2.00);  object(0x01BF, 90, 0, 90);
move(1.97, -0.19, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.07, -7.85, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.42, -0.06, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.24, -0.06, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.70, -0.07, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.13, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(8.60, 8.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.55, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.12, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(21.55, -15.51, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.36, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(0.08, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.71, 0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.41, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.12, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(21.47, -7.72, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.29, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.59, 0.01, 0.00);  object(0x01BF, 90, 0, 89);
move(-6.43, -0.22, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.56, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(22.03, -7.73, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.55, -0.04, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.35, -0.04, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.44, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.71, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(22.06, -6.22, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.53, -0.08, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.55, -0.08, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.12, -0.07, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.86, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.71, 37.79, 3.50);  object(0x01BF, 0, 0, 90);
move(-0.07, -8.01, 0.00);  object(0x01BF, 0, 0, 90);
move(0.14, -7.67, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.25, -7.42, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.18, -7.55, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.06, -6.88, 0.00);  object(0x01BF, 0, 0, 90);
move(4.70, 41.73, 0.00);  object(0x01BF, 0, 0, 180);
move(7.55, -0.02, 0.00);  object(0x01BF, 0, 0, 180);
move(7.64, -0.10, 0.00);  object(0x01BF, 0, 0, 180);
move(4.57, -0.16, 0.00);  object(0x01BF, 0, 0, 180);
move(3.89, -4.14, 0.00);  object(0x01BF, 0, 0, 270);
move(0.00, -8.02, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -6.98, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -7.76, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -7.79, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.08, -7.14, 0.00);  object(0x01BF, 0, 0, 270);
move(-4.16, -3.53, 0.00);  object(0x01BF, 0, 0, 0);
move(-19.94, -0.00, 0.00);  object(0x01BF, 0, 0, 0);
move(7.83, -2.96, -3.60);  object(0x01BF, 90, 0, 0);
move(7.80, 2.99, 3.60);  object(0x01BF, 0, 0, 0);
move(5.52, 41.38, 3.30);  object(0x01BF, 90, 0, 90);
move(-6.50, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.14, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.71, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.31, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(21.53, -7.58, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.11, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.51, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.57, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.32, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(21.45, -7.69, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.09, -0.06, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.34, -0.06, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.36, -0.06, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.59, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(21.50, -7.79, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.42, 0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.08, 0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.32, 0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.95, 0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(21.76, -7.64, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.83, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.80, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.40, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.82, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(21.96, -6.17, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.89, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.57, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.63, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.85, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(4.77, -4.85, -6.70);  object(0x01F0, 0, 0, 90);
move(0.19, -2.54, -0.10);  object(0x01F0, 0, 0, 90);
move(0.21, -2.90, 0.00);  object(0x01F0, 0, 0, 0);
move(4.46, 0.04, 0.00);  object(0x01F0, 0, 0, 0);
move(2.90, -0.06, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.06, 3.02, 0.00);  object(0x01F0, 0, 0, 270);
move(-14.86, 3.54, 7.00);  object(0x01F0, 0, 0, 0);
move(2.92, -0.13, 0.00);  object(0x01F0, 0, 0, 0);
move(3.17, 0.10, 0.00);  object(0x01F0, 0, 0, 0);
move(3.29, -0.06, 0.00);  object(0x01F0, 0, 0, 0);
move(3.52, 0.22, 0.00);  object(0x01F0, 0, 0, 0);
move(3.69, -0.12, 0.00);  object(0x01F0, 0, 0, 0);
move(3.49, -0.01, 0.00);  object(0x01F0, 0, 0, 0);
move(3.12, 0.01, 0.00);  object(0x01F0, 0, 0, 0);
move(4.12, 0.12, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.28, 3.80, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.02, 3.35, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.41, 3.85, 0.00);  object(0x01F0, 0, 0, 270);
move(0.17, 3.21, 0.00);  object(0x01F0, 0, 0, 270);
move(0.30, 2.84, 0.00);  object(0x01F0, 0, 0, 270);
move(0.06, 3.36, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.17, 3.15, 0.00);  object(0x01F0, 0, 0, 270);
move(0.02, 1.96, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.05, 3.10, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.03, 3.28, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.02, 4.02, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.16, 3.97, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.35, 4.23, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.20, 0.19, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.26, -0.20, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.01, 0.03, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.08, -0.04, 0.00);  object(0x01F0, 0, 0, 180);
move(-2.95, 0.01, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.62, -0.05, 0.00);  object(0x01F0, 0, 0, 180);
move(-4.19, -0.07, 0.00);  object(0x01F0, 0, 0, 180);
move(1.67, -0.00, 0.00);  object(0x01F0, 0, 0, 180);
move(-4.89, -0.91, 0.00);  object(0x01F0, 0, 0, 90);
move(0.23, -3.25, 0.00);  object(0x01F0, 0, 0, 90);
move(0.13, -3.79, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.13, -3.22, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.02, -3.92, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.11, -3.49, 0.00);  object(0x01F0, 0, 0, 90);
move(0.21, -3.57, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.13, -3.29, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.05, -2.98, 0.00);  object(0x01F0, 0, 0, 90);
move(0.11, -3.90, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.65, -4.06, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.02, -4.09, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.14, 1.70, 0.00);  object(0x01F0, 0, 0, 90);
move(18.49, -9.96, -6.20);  object(0x01BF, 110, 0, 270);
move(5.85, 0.03, 2.10);  object(0x01BF, 110, 0, 270);
move(6.29, 0.03, 1.00);  object(0x01BF, 90, 0, 270);
move(1.98, 7.12, 1.20);  object(0x01BF, 110, 0, 180);
move(-0.02, 6.42, 2.40);  object(0x01BF, 110, 0, 180);
move(-0.03, 7.06, 1.70);  object(0x01BF, 90, 0, 180);
move(-7.42, -0.19, 0.00);  object(0x01BF, 90, 0, 180);
move(-7.26, 0.11, -1.20);  object(0x01BF, 250, 0, 90);
move(-2.79, -24.20, -8.38);  object(0x01F0, 0, 340, 0);
move(3.50, -0.09, 1.40);  object(0x01F0, 0, 340, 0);
move(3.59, 0.04, 1.40);  object(0x01F0, 0, 340, 0);
move(14.47, 7.45, 2.10);  object(0x01F0, 0, 340, 270);
move(-0.65, 3.96, 0.90);  object(0x01F0, 0, 340, 270);
move(0.46, 4.70, 2.10);  object(0x01F0, 0, 340, 270);
move(-8.80, -15.93, -3.50);  object(0x01F0, 0, 0, 0);
move(3.33, -0.39, 0.00);  object(0x01F0, 0, 0, 0);
move(2.97, 0.60, 0.00);  object(0x01F0, 0, 0, 270);
move(0.03, 2.92, 0.00);  object(0x01F0, 0, 0, 270);
//Brass Knuckles
setfloat(0x08e2d800, -1315.90, -593.94, 17.78);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Chisel
setfloat(0x08e2d860, -1315.90, -595.94, 17.78);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//Hockey Stick
setfloat(0x08e2d8c0, -1315.90, -597.94, 17.78);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
//Nightstick
setfloat(0x08e2d920, -1315.90, -599.94, 17.78);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
//Butcher Knife
setfloat(0x08e2d980, -1315.90, -601.94, 17.78);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
//Baseball Bat
setfloat(0x08e2d9e0, -1315.90, -603.94, 17.78);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
//Fire Axe
setfloat(0x08e2da40, -1315.90, -605.94, 17.78);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
//Meat Cleaver
setfloat(0x08e2daa0, -1315.90, -607.94, 17.78);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
//Machete
setfloat(0x08e2db00, -1315.90, -609.94, 17.78);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
//Katana
setfloat(0x08E2DB60, -1315.90, -611.94, 17.78);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
//Chainsaw
setfloat(0x08E2DBC0, -1315.90, -613.94, 17.78);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
//Grenade
setfloat(0x08E2DC20, -1340.64, -625.91, 24.58);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0x1, 0x1);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
//Remote Grenade
setfloat(0x08E2DC80, -1340.64, -623.91, 24.58);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0x1, 0x1);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
//Molotovs
setfloat(0x08E2DD40, -1340.64, -621.91, 24.58);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0x1, 0x1);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
//Tear Gas
setfloat(0x08e2d800, -1340.64, -619.91, 24.58);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1, 0x1)
setshort(0x08e2d826, 0x10f)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Pistol
setfloat(0x08E2DDA0, -1340.52, -617.91, 24.58);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0x1, 0x1);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
//Colt Python
setfloat(0x08E2DE00, -1340.52, -615.91, 24.58);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0x1, 0x1);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
//AK-47
setfloat(0x08E2DF80, -1340.52, -605.91, 24.58);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0x1, 0x1);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
//M4
setfloat(0x08E2DFE0, -1340.52, -603.91, 24.58);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0x1, 0x1);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
//Chromed Shotgun
setfloat(0x08E2DE60, -1340.52, -601.91, 24.58);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0x1, 0x1);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
//Spaz Shotgun
setfloat(0x08E2DEC0, -1340.52, -599.91, 24.58);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0x1, 0x1);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
//Combat Shotgun
setfloat(0x08E2DF20, 1340.52, -597.91, 24.58);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0x1, 0x1);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
//Tec-9
setfloat(0x08E2E040, -1340.52, -613.91, 24.58);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0x1, 0x1);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
//Micro SMG
setfloat(0x08E2E0A0, -1340.52, -611.91, 24.58);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0x1, 0x1);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
//Mac 10
setfloat(0x08E2E100, -1340.52, -609.91, 24.58);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0x1, 0x1);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
//MP5
setfloat(0x08E2E160, -1340.52, -607.91, 24.58);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0x1, 0x1);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
//Rocket Launcher
setfloat(0x08E2E280, -1340.52, -595.91, 24.58);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0x1, 0x1);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
//Flame Thrower
setfloat(0x08E2E2E0, -1340.52, -593.91, 24.58);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0x1, 0x1);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
//M60
setfloat(0x08E2E340, -1340.52, -591.91, 24.58);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0x1, 0x1);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
//Minigun
setfloat(0x08E2E3A0, -1340.52, -589.91, 24.58);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0x1, 0x1);
setshort(0x08E2E3C6, 0x122);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
//Sniper Rifle
setfloat(0x08E2E1C0, -1340.52, -587.91, 24.58);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0x1, 0x1);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
//LS Sniper Rifle
setfloat(0x08E2E220, -1340.52, -585.91, 24.58);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0x1, 0x1);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
//Camera
setfloat(0x08e2d800, -1338.41, -584.56, 24.58);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1, 0x1)
setshort(0x08e2d826, 0x124)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Health Pickup
setfloat(0x08E2E400, -1336.41, -584.56, 24.58);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x22e);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
//Armor Pickup
setfloat(0x08e2d860, -1334.41, -584.56, 24.58);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x24b)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//Stallion
setchar(0x08E4Ebfc, 167);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, -1320.26, -623.65, 11.12, 90);
//Idaho
setchar(0x08E4E9EC, 132);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, -1320.06, -616.49, 11.12, 90);
//Diablo Stallion
setchar(0x08E4Ea44, 175);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, -1320.06, -608.70, 11.12, 90);
//Esperanto
setchar(0x08E4Ea70, 150);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, -1320.06, -600.96, 11.12, 90);
//Leone Sentinel
setchar(0x08E4Eac8, 172);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, -1320.06, -595.65, 11.12, 90);
//Yakuza Stinger
setchar(0x08E4Eb78, 174);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, -1337.54, -607.31, 11.12, 90);
//Cartel Cruiser
setchar(0x08E4Ea18, 176);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, -1337.54, -615.57, 11.12, 90);
//Yardie Lobo
setchar(0x8E4EB4C, 173);
setchar(0x8E4EB4C + 0x18, 0x01);
setfloat(0x8E4EB50, -1337.54, -623.26, 11.12, 90);
//Hoods Rumpo XL
setchar(0x8E4EB20, 177);
setchar(0x8E4EB20 + 0x18, 0x01);
setfloat(0x8E4EB24, -1326.08, -621.94, 11.12, 0);
//Bus
setchar(0x8E4EAF4, 161);
setchar(0x8E4EAF4 + 0x18, 0x01);
setfloat(0x8E4EAF8, -1317.93, -640.28, 11.12, 270);
//Mr. Whoopee
setchar(0x8E4EA9C, 154);
setchar(0x8E4EA9C + 0x18, 0x01);
setfloat(0x8E4EAA0, -1327.02, -640.28, 11.12, 270);
//Police Car
setchar(0x08E4Ec54, 157);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, -1309.85, -623.21, 11.12, 0);
//FBI Cruiser
setchar(0x08E4Ecd8, 148);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, -1309.67, -613.42, 11.12, 0);
//Enforcer
setchar(0x08E4Ec28, 158);
setchar(0x08E4Ec28 + 0x18, 0x01);
setfloat(0x08E4Ec2c, -1309.69, -603.02, 11.12, 0);
//Rhino
setchar(0x08E4Eba4, 162);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, -1308.88, -587.43, 11.12, 0);
//Maverick
setchar(0x08E4Ebfc, 214);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, -1400.06, -584.84, 11.12, 270);
//Police Maverick
setchar(0x8E4EAF4, 215);
setchar(0x8E4EAF4 + 0x18, 0x01);
setfloat(0x8E4EAF8, -1394.89, -542.56, 11.12, 270);
//Hunter
setchar(0x08E4Ea18, 213);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, -1396.00, -560.46, 11.12, 270);
//Dodo
setchar(08E4Ed88, 164);
setchar(08E4Ed88 + 0x18, 0x01);
setfloat(08E4Ed8c, -1364.85, -552.24, 11.12, 270);
//Patriot
setchar(0x08E4Ebfc, 137);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, -1320.39, -577.04, 11.12, 180);
//Kuruma
setchar(0x08E4E9EC, 152);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, -1332.85, -578.00, 11.12, 180);
//Stinger
setchar(0x08E4Ea44, 133);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, -1345.24, -636.01, 11.12, 90);
//Cheetah
setchar(0x08E4Ea70, 146);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, -1345.24, -631.45, 11.12, 90);
off()

