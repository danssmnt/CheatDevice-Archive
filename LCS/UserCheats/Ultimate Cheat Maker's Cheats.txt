#cheat Tony's New Apartement
//ID: 18165
//Score: 212
//Author: Ultimate Cheat Maker
//Category: Environment
//Description: This is the ultimate cheat; toni will have a brand new apartement!!! This time on the portland beach. It is a big house with 13 bedrooms, a bridge to the main road, 4 garages+more!!! The explanation is continued in the code. (click on view code)
//Image: none
//Time: 14/10/2006 17:46:33
//Working: Yes
//This is the ultimate cheat code. Toni will have a brand new luxirous apartement on portland island. It is situated on the beach. By the way, before i get any further, this cheat includes a teleport. Anyway, the big mansion apartement has a big road down to the drive of the front of the apartement. This mansio has 13 bedrooms: beds, bedsides etc. 5 bathrooms, 3 reception rooms, 2 kitchens, 4 garages and loads more. Outside there is a big parking space for a maximum of 4 cars. This big mansion has a garden with a runway for any transportation eg. dodo. Don't forget it has 3 floors and on the roof a helipad with chairs around to sit and enjoy the view of portland. This great cheat also includes a bring and ramp accross to the lighthouse that also has been upgraded. With a space for a boat and loads more. Back to the mansion, it also has a walkway next to the beach, for the effect!!! Hope you enjoy the cheat. Please respect it, it took me ages to build.
moveto(272.15, -422.6, 90); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
moveto(-62.05, -1298.41, 43.72); object(0x01BF, 65, 0, 184);
move(-7.88, 0.56, 0.00); object(0x01BF, 65, 0, 184);
move(-7.88, 0.56, 0.00); object(0x01BF, 65, 0, 184);
move(-6.08, 0.43, 0.00); object(0x01BF, 65, 0, 184);
move(-0.62, -14.13, 0.00); object(0x01BF, 65, 0, 3);
move(7.99, -0.39, 0.00); object(0x01BF, 65, 0, 3);
move(7.89, -0.39, 0.00); object(0x01BF, 65, 0, 3);
move(5.39, -0.26, 0.00); object(0x01BF, 65, 0, 3);
move(0.76, 7.30, 1.40); object(0x01BF, 90, 0, 183);
move(-8.03, 0.55, 0.00); object(0x01BF, 90, 0, 183);
move(-7.42, 0.56, 0.00); object(0x01BF, 90, 0, 183);
move(-6.32, 0.50, 0.00); object(0x01BF, 90, 0, 183);
move(40.73, -49.59, -2.80); object(0x01BF, 90, 0, 178);
move(0.24, -6.69, 0.00); object(0x01BF, 90, 0, 178);
move(0.24, -6.68, 0.00); object(0x01BF, 90, 0, 178);
move(0.27, -5.35, 1.40); object(0x01BF, 65, 0, 177);
move(12.36, -73.57, -11.60); object(0x01BF, 65, 0, 185);
move(-7.87, 0.71, 0.00); object(0x01BF, 65, 0, 185);
move(-6.37, 0.58, 0.00); object(0x01BF, 65, 0, 185);
move(3.14, 22.79, 0.00); object(0x01BF, 50, 0, 0);
move(-13.40, -0.04, 2.30); object(0x01BF, 90, 0, 0);
move(0.03, -6.58, 0.00); object(0x01BF, 90, 0, 0);
move(0.03, -5.83, 0.00); object(0x01BF, 90, 0, 0);
move(0.03, -6.55, 0.00); object(0x01BF, 90, 0, 0);
move(0.03, -6.59, 0.00); object(0x01BF, 90, 0, 0);
move(0.03, -6.62, 0.00); object(0x01BF, 90, 0, 0);
move(0.03, -6.65, 0.00); object(0x01BF, 90, 0, 0);
move(0.03, -6.38, 0.00); object(0x01BF, 90, 0, 0);
move(0.03, -6.58, 0.00); object(0x01BF, 90, 0, 0);
move(0.03, -6.44, 0.00); object(0x01BF, 90, 0, 0);
move(0.03, -6.61, 0.00); object(0x01BF, 90, 0, 0);
move(-6.81, 0.75, -1.60); object(0x01BF, 60, 0, 90);
move(-4.46, -0.04, -2.60); object(0x01BF, 60, 0, 90);
move(-5.61, -0.05, -3.30); object(0x01BF, 60, 0, 90);
move(16.70, 94.38, 9.20); object(0x01BF, 60, 0, 1);
move(0.09, 5.35, 3.00); object(0x01BF, 60, 0, 1);
move(0.13, 36.70, 3.20); object(0x01BF, 90, 0, 359);
move(0.10, -6.32, 0.00); object(0x01BF, 90, 0, 359);
move(0.09, -6.18, -0.80); object(0x01BF, 75, 0, 359);
move(24.93, -49.84, -0.40); object(0x01BF, 55, 0, 89);
move(-5.06, -0.08, -3.50); object(0x01BF, 55, 0, 89);
move(-3.09, -0.04, -2.10); object(0x01BF, 55, 0, 88);
move(-0.16, 73.45, 10.50); object(0x01BF, 0, 0, 91);
move(0.17, 7.80, 0.00); object(0x01BF, 0, 0, 91);
move(0.17, 7.80, 0.00); object(0x01BF, 0, 0, 91);
move(0.16, 7.60, 0.00); object(0x01BF, 0, 0, 91);
move(-25.35, -31.63, -2.20); object(0x01BF, 60, 0, 206);
move(-6.95, -13.79, -0.60); object(0x01BF, 70, 0, 27);
move(-2.12, -4.11, -1.60); object(0x01BF, 70, 0, 27);
move(-2.35, -4.55, -2.10); object(0x01BF, 70, 0, 27);
move(-2.41, -4.67, -1.40); object(0x01BF, 85, 0, 27);
move(-2.43, -4.72, -0.60); object(0x01BF, 85, 0, 27);
move(-2.53, -4.91, -0.50); object(0x01BF, 85, 0, 27);
move(20.48, -19.09, -3.10); object(0x01BF, 50, 0, 89);
move(-49.96, -9.21, -0.70); object(0x01BF, 50, 0, 89);
move(-14.76, -5.11, -6.20); object(0x01BF, 50, 0, 70);
move(33.39, -37.49, -0.20); object(0x01BF, 45, 0, 30);
move(-3.25, -26.43, 0.60); object(0x01BF, 45, 0, 228);
move(-17.74, 49.00, -2.10); object(0x01BF, 70, 0, 359);
move(0.84, 6.53, 0.00); object(0x01BF, 70, 0, 177);
move(84.02, -22.65, 2.20); object(0x01BF, 0, 0, 87);
move(-16.79, 113.45, 14.70); object(0x01BF, 90, 0, 107);
setchar(0x08E4E9C0, 209);
setfloat(0x08E4E9C4, -72.33, -1254.55, 44.42);
setfloat(0x08E4E9D0, 0);
//BUILD THE FLOOR
moveto(215, -422.6, 25); object(0x021C, 90, 0, 180);
move(0.00, 1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, 1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, 1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.8, 0.00, 0.00); object(0x021C, 90, 0, 180);
move(0.00, -1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, -1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, -1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.8, 0.00, 0.00); object(0x021C, 90, 0, 180);
move(0.00, 1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, 1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, 1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.8, 0.00, 0.00); object(0x021C, 90, 0, 180);
move(0.00, -1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, -1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, -1.1, 0.00); object(0x021C, 90, 0, 180);
//BUILD WALL 1
moveto(214.6, -422.6, 25.4); object(0x021C, 0, 90, 90);
move(0.00, 1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 0.00, 0.8); object(0x021C, 0, 90, 90);
move(0.00, -1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, -1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, -1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 0.00, 0.8); object(0x021C, 0, 90, 90);
move(0.00, 1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 0.00, 0.8); object(0x021C, 0, 90, 90);
move(0.00, -1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, -1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, -1.1, 0.00); object(0x021C, 0, 90, 90);
//BUILD WALL 2
moveto(217.8, -422.6, 25.4); object(0x021C, 0, 90, 90);
move(0.00, 1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 0.00, 0.8); object(0x021C, 0, 90, 90);
move(0.00, -1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, -1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, -1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 0.00, 0.8); object(0x021C, 0, 90, 90);
move(0.00, 1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 0.00, 0.8); object(0x021C, 0, 90, 90);
move(0.00, -1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, -1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, -1.1, 0.00); object(0x021C, 0, 90, 90);
//BUILD WALL 3
moveto(215, -423.15, 25.55); object(0x021C, 0, 0, 180);
move(0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.00, 0.00, 1.1); object(0x021C, 0, 0, 180);
move(-0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(-0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(-0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.00, 0.00, 1.1); object(0x021C, 0, 0, 180);
move(0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.00, 0.00, 1.1); object(0x021C, 0, 0, 180);
move(-0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(-0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(-0.8, 00, 0.00); object(0x021C, 0, 0, 180);
//BUILD WALL 4
moveto(215, -418.75, 25.55); object(0x021C, 0, 0, 180);
move(0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.00, 0.00, 1.1); object(0x021C, 0, 0, 180);
move(-0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(-0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(-0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.00, 0.00, 1.1); object(0x021C, 0, 0, 180);
move(0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.00, 0.00, 1.1); object(0x021C, 0, 0, 180);
move(-0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(-0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(-0.8, 00, 0.00); object(0x021C, 0, 0, 180);
//BUILD ROOF
moveto(215, -422.6, 28.2); object(0x021C, 90, 0, 180);
move(0.00, 1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, 1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, 1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.8, 0.00, 0.00); object(0x021C, 90, 0, 180);
move(0.00, -1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, -1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, -1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.8, 0.00, 0.00); object(0x021C, 90, 0, 180);
move(0.00, 1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, 1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, 1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.8, 0.00, 0.00); object(0x021C, 90, 0, 180);
move(0.00, -1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, -1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, -1.1, 0.00); object(0x021C, 90, 0, 180);
moveto(197.58, -990.66, 120.36); object(0x020F, 0, 0, 90);
move(-0.01, 1.50, 0.00); object(0x020F, 0, 0, 90);
move(-0.01, 1.60, 0.00); object(0x020F, 0, 0, 90);
move(-0.01, 1.80, 0.00); object(0x020F, 0, 0, 90);
move(-0.02, 1.90, 0.00); object(0x020F, 0, 0, 90);
move(-0.01, 1.80, 0.00); object(0x020F, 0, 0, 90);
move(0.05, 1.70, 0.00); object(0x020F, 0, 0, 90);
move(-0.01, 1.60, 0.00); object(0x020F, 0, 0, 90);
move(-0.02, 1.90, 0.00); object(0x020F, 0, 0, 90);
move(-0.01, 1.80, 0.00); object(0x020F, 0, 0, 90);
move(-0.02, 1.90, 0.00); object(0x020F, 0, 0, 90);
move(-0.02, 1.90, 0.00); object(0x020F, 0, 0, 90);
move(-0.02, 2.30, 0.00); object(0x020F, 0, 0, 90);
move(0.03, 2.20, 0.00); object(0x020F, 0, 0, 90);
move(-0.02, 2.10, 0.00); object(0x020F, 0, 0, 90);
move(-0.02, 2.10, 0.00); object(0x020F, 0, 0, 90);
move(-0.02, 2.20, 0.00); object(0x020F, 0, 0, 90);
move(-0.02, 2.20, 0.00); object(0x020F, 0, 0, 90);
move(-0.02, 2.00, 0.00); object(0x020F, 0, 0, 90);
move(-0.02, 2.00, 0.00); object(0x020F, 0, 0, 90);
move(0.02, 1.73, 0.00); object(0x020F, 0, 0, 180);
move(1.70, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.00, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.00, 0.08, 0.00); object(0x020F, 0, 0, 180);
move(2.20, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.20, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.20, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.20, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.00, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.30, -0.02, 0.00); object(0x020F, 0, 0, 180);
move(2.00, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.30, -0.02, 0.00); object(0x020F, 0, 0, 180);
move(2.10, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.20, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.00, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.20, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.10, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.10, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.40, -0.02, 0.00); object(0x020F, 0, 0, 180);
move(-0.03, -2.24, 0.00); object(0x020F, 0, 0, 270);
move(0.03, -2.40, 0.00); object(0x020F, 0, 0, 270);
move(0.02, -2.10, 0.00); object(0x020F, 0, 0, 270);
move(0.02, -2.00, 0.00); object(0x020F, 0, 0, 270);
move(0.02, -2.10, 0.00); object(0x020F, 0, 0, 270);
move(0.03, -2.40, 0.00); object(0x020F, 0, 0, 270);
move(0.03, -2.30, 0.00); object(0x020F, 0, 0, 270);
move(0.03, -2.30, 0.00); object(0x020F, 0, 0, 270);
move(0.03, -2.50, 0.00); object(0x020F, 0, 0, 270);
move(0.02, -2.20, 0.00); object(0x020F, 0, 0, 270);
move(0.03, -2.40, 0.00); object(0x020F, 0, 0, 270);
move(0.03, -2.40, 0.00); object(0x020F, 0, 0, 270);
move(0.03, -2.30, 0.00); object(0x020F, 0, 0, 270);
move(0.03, -2.40, 0.00); object(0x020F, 0, 0, 270);
move(0.02, -2.10, 0.00); object(0x020F, 0, 0, 270);
move(0.02, -1.90, 0.00); object(0x020F, 0, 0, 270);
move(0.02, -1.90, 0.00); object(0x020F, 0, 0, 270);
move(-2.38, -0.12, 0.00); object(0x020F, 0, 0, 0);
move(-2.50, -0.02, 0.00); object(0x020F, 0, 0, 0);
move(-2.50, -0.02, 0.00); object(0x020F, 0, 0, 0);
move(-2.40, -0.02, 0.00); object(0x020F, 0, 0, 0);
move(-2.50, -0.02, 0.00); object(0x020F, 0, 0, 0);
move(-2.70, -0.02, 0.00); object(0x020F, 0, 0, 0);
move(-2.50, -0.02, 0.00); object(0x020F, 0, 0, 0);
move(-2.80, -0.02, 0.00); object(0x020F, 0, 0, 0);
move(-2.80, -0.02, 0.00); object(0x020F, 0, 0, 0);
move(-3.00, -0.03, 0.00); object(0x020F, 0, 0, 0);
move(-3.00, -0.03, 0.00); object(0x020F, 0, 0, 0);
move(-2.80, -0.02, 0.00); object(0x020F, 0, 0, 0);
move(-2.60, -0.02, 0.00); object(0x020F, 0, 0, 0);
move(-2.10, -0.02, 0.00); object(0x020F, 0, 0, 0);
move(-0.96, 1.73, 0.20); object(0x0257, 0, 0, 2);
move(0.94, 5.86, 0.40); object(0x025B, 0, 0, 2);
move(0.26, 5.31, 0.00); object(0x025B, 0, 0, 3);
move(-0.14, 5.23, 0.00); object(0x025B, 0, 0, 0);
move(0.66, 4.20, -0.10); object(0x025B, 0, 0, 185);
move(7.01, -18.56, 0.90); object(0x025C, 0, 0, 87);
move(2.50, -0.52, -2.40); object(0x0224, 0, 0, 190);
move(-5.35, -0.22, -0.10); object(0x0224, 0, 0, 196);
move(-1.43, 28.45, 1.30); object(0x09F9, 0, 0, 341);
move(-3.51, -6.22, -0.10); object(0x023B, 0, 0, 357);
move(-0.10, 1.81, 0.00); object(0x023B, 0, 0, 357);
//HELICOPTER SPAWNS
//HUNTER
setchar(0x08E4Eba4, 213);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 223.27, -983.72, 121.16);
//MAVERICK
setchar(0x08E4Ebd0, 214);
setchar(0x08E4Ebd0 + 0x18, 0x01);
setfloat(0x08E4Ebd4, 221.74, -972.85, 121.16);
//PLANE
//DODO
setchar(0x08E4Eb4c, 164);
setchar(0x08E4Eb4c + 0x18, 0x01);
setfloat(0x08E4Eb50, 222.62, -961.32, 121.16);
teleport(206.90, -988.07, 121.16);
moveto(1652.75, -380.34, 33.97); object(0x0FAC, 315, 0, 347);
move(1.44, -5.00, 0.00); object(0x0FAC, 270, 0, 348);
move(-6.49, 1.06, -3.60); object(0x0FAC, 225, 0, 76);
move(-3.14, -0.80, -3.50); object(0x0FAC, 225, 0, 75);
move(-4.88, -1.04, 0.00); object(0x0FAC, 270, 0, 78);
move(0.99, -5.03, 0.00); object(0x0FAC, 270, 0, 79);
move(1.00, -5.00, 0.00); object(0x0FAC, 270, 0, 79);
move(0.98, -4.90, 0.00); object(0x0FAC, 270, 0, 79);
move(4.96, 0.99, 0.00); object(0x0FAC, 270, 0, 79);
move(-0.96, 4.80, 0.00); object(0x0FAC, 270, 0, 79);
move(-1.02, 5.10, 0.00); object(0x0FAC, 270, 0, 79);
move(5.06, 1.01, 0.00); object(0x0FAC, 270, 0, 79);
move(1.02, -5.10, 0.00); object(0x0FAC, 270, 0, 79);
move(0.98, -4.90, 0.00); object(0x0FAC, 270, 0, 79);
move(5.06, 1.01, 0.00); object(0x0FAC, 270, 0, 79);
move(-0.98, 4.90, 0.00); object(0x0FAC, 270, 0, 79);
move(-0.98, 4.90, 0.00); object(0x0FAC, 270, 0, 79);
move(4.18, 5.97, 0.00); object(0x0FAC, 270, 0, 261);
move(-14.26, -17.11, 2.14); object(0x0F98, 0, 0, 79);
move(8.84, 8.48, 0.14); object(0x0F95, 0, 0, 171);
move(4.34, -5.77, -0.10); object(0x0F9A, 0, 0, 351);
move(-17.47, 10.18, -0.04); object(0x0F96, 0, 0, 167);
move(-3.30, -2.06, 2.66); object(0x0FAC, 0, 0, 80);
move(-0.67, 1.89, 0.00); object(0x0FAC, 0, 0, 80);
move(2.23, 3.36, 0.00); object(0x0FAC, 0, 0, 169);
move(5.04, 1.05, -0.00); object(0x0FAC, 0, 0, 169);
move(-5.98, -8.48, -3.30); object(0x0210, 0, 0, 348);
move(2.18, -1.67, 1.10); object(0x0CDB, 0, 0, 75);
move(0.46, -1.66, 0.00); object(0x0CDB, 0, 0, 75);
move(-2.60, 3.35, 1.00); object(0x0210, 0, 0, 352);
move(13.02, -10.95, -1.20); object(0x0CDB, 0, 0, 348);
move(2.24, 0.65, 0.00); object(0x0CDB, 0, 0, 348);
move(7.13, 10.76, 0.00); object(0x0CDB, 0, 0, 258);
move(-0.95, 4.82, 0.00); object(0x0CDB, 0, 0, 263);
move(-0.40, 3.17, 0.00); object(0x0CDB, 0, 0, 263);
move(-21.91, -6.20, 2.35); object(0x0FAC, 0, 0, 82);
move(-0.25, -0.12, -4.92); object(0x0FAC, 270, 0, 81);
move(-0.38, 2.27, 0.00); object(0x0FAC, 270, 0, 81);
move(25.06, -8.89, 5.09); object(0x0FAC, 0, 0, 260);
move(0.53, -1.93, 0.00); object(0x0FAC, 0, 0, 260);
move(-2.06, -2.99, 0.00); object(0x0FAC, 0, 0, 351);
move(-2.04, -0.50, 0.00); object(0x0FAC, 0, 0, 351);
move(-11.72, -2.19, 0.00); object(0x0FAC, 0, 0, 346);
move(-1.46, -0.36, 0.00); object(0x0FAC, 0, 0, 346);
move(-3.13, 1.95, 0.02); object(0x0FAC, 0, 0, 82);
move(-0.31, 2.08, 0.00); object(0x0FAC, 0, 0, 82);
move(5.70, 12.23, -0.40); object(0x0FAC, 0, 0, 350);
move(4.71, 1.00, 0.00); object(0x0FAC, 0, 0, 349);
move(-14.95, -0.12, 0.30); object(0x0FAC, 270, 0, 80);
move(0.79, -5.18, 0.00); object(0x0FAC, 270, 0, 80);
move(1.36, -4.92, -0.40); object(0x0FAC, 270, 0, 80);
move(1.39, -5.01, -0.20); object(0x0FAC, 270, 0, 80);
move(4.94, 0.89, 0.00); object(0x0FAC, 270, 0, 78);
move(4.81, 1.14, 0.00); object(0x0FAC, 270, 0, 77);
move(4.86, 0.83, 0.00); object(0x0FAC, 270, 0, 80);
move(1.69, 0.03, 0.00); object(0x0FAC, 270, 0, 78);
move(-7.81, 4.08, 0.00); object(0x0FAC, 270, 0, 257);
move(5.53, 1.31, 0.20); object(0x0FAC, 270, 0, 256);
move(4.86, 0.66, 0.00); object(0x0FAC, 270, 0, 261);
move(1.40, 0.34, 0.00); object(0x0FAC, 270, 0, 261);
move(-1.18, 4.86, 0.00); object(0x0FAC, 270, 0, 261);
move(-5.11, -0.94, 0.00); object(0x0FAC, 270, 0, 261);
move(-5.19, -1.28, 0.00); object(0x0FAC, 270, 0, 261);
move(-4.53, -0.82, 0.00); object(0x0FAC, 270, 0, 261);
move(-5.28, 4.59, 0.54); object(0x0FAC, 270, 0, 84);
move(9.18, -11.86, -0.58); object(0x0FAC, 270, 0, 350);
move(5.56, 9.92, -3.76); object(0x0FAC, 180, 0, 351);
move(-1.48, -0.01, -0.02); object(0x0FAC, 180, 0, 172);
move(-2.89, -0.95, 1.82); object(0x0FAC, 180, 270, 260);
move(0.26, -1.48, 0.00); object(0x0FAC, 180, 270, 260);
move(8.38, 8.46, 7.94); object(0x0FAC, 45, 0, 78);
move(1.79, 2.70, -0.20); object(0x0FAC, 90, 0, 346);
move(1.25, -4.91, 0.20); object(0x0FAC, 90, 0, 343);
move(1.43, -4.76, 0.00); object(0x0FAC, 90, 0, 343);
move(4.88, 1.39, 0.00); object(0x0FAC, 90, 0, 343);
move(-1.43, 4.96, 0.00); object(0x0FAC, 90, 0, 343);
move(-1.21, 4.69, 0.00); object(0x0FAC, 90, 0, 343);
move(4.98, 1.46, 0.00); object(0x0FAC, 90, 0, 344);
move(1.49, -4.97, 0.00); object(0x0FAC, 90, 0, 344);
move(1.19, -4.57, 0.00); object(0x0FAC, 90, 0, 343);
moveto(1655.00, -390.37, 34.04); object(0x0FAC, 270, 0, 350);
move(5.02, 0.91, 0.00); object(0x0FAC, 270, 0, 350);
move(4.72, 0.86, 0.00); object(0x0FAC, 270, 0, 350);
move(4.92, 0.89, 0.00); object(0x0FAC, 270, 0, 350);
move(5.02, 0.91, 0.00); object(0x0FAC, 270, 0, 350);
move(0.89, -2.73, 0.00); object(0x0FAC, 270, 0, 345);
move(-4.84, -1.32, 0.00); object(0x0FAC, 270, 0, 345);
move(-4.78, -1.11, 0.00); object(0x0FAC, 270, 0, 345);
move(6.83, 15.13, 0.00); object(0x0FAC, 270, 0, 170);
move(-4.92, -0.90, 0.00); object(0x0FAC, 270, 0, 170);
move(-4.62, -0.84, 0.00); object(0x0FAC, 270, 0, 170);
move(3.80, -18.20, 0.00); object(0x0FAC, 270, 0, 346);
move(4.28, 1.04, 1.60); object(0x0FAC, 270, 320, 346);
move(4.44, 1.08, 1.70); object(0x0FAC, 270, 0, 346);
moveto(1669.91, -390.99, 37.31); object(0x0FAC, 0, 0, 344);
move(-16.33, 19.77, 20.40); object(0x0FAC, 270, 0, 275);
move(-0.48, -5.08, 0.00); object(0x0FAC, 270, 0, 275);
move(0.94, 9.95, 0.00); object(0x0FAC, 270, 0, 275);
move(4.84, -0.46, 0.00); object(0x0FAC, 270, 0, 275);
move(-0.47, -4.98, 0.00); object(0x0FAC, 270, 0, 275);
move(-0.47, -4.98, 0.00); object(0x0FAC, 270, 0, 275);
move(-9.94, 0.94, 0.00); object(0x0FAC, 270, 0, 275);
move(-4.43, 5.39, 0.00); object(0x0FAC, 270, 0, 95);
move(0.40, 4.88, 0.00); object(0x0FAC, 270, 0, 95);
moveto(1662.03, -378.83, 34.01); object(0x0FAC, 270, 0, 172);
move(-6.76, -3.76, -4.00); object(0x0CDB, 180, 0, 263);
move(1.87, 2.25, -0.50); object(0x0CDB, 180, 0, 171);
move(-2.41, -2.64, 0.04); object(0x0CDB, 180, 0, 264);
teleport(1658.24, -398.09, 28.09);
teleport(1646.54, -374.65, 58.75);

#cheat Police Survival Course
//ID: 17963
//Score: 134
//Author: Ultimate Cheat Maker
//Category: Environment
//Description: This is my police survival course where there are guns with unlimited ammo, 10 cars, heli+helipad, climbing frame, school buses, crash site, obstacle course, dodo, REC area, garage and much more!!!
//*Includes teleport
//Image: none
//Time: 04/10/2006 21:33:04
//Working: Yes
moveto(1658.09, -347.91, -4.15); object(0x01BF, 270, 0, 117);
move(-4.73, 1.90, 4.50); object(0x0204, 270, 0, 207);
move(-9.40, 6.70, 0.00); object(0x0204, 270, 0, 221);
move(-10.56, 9.33, 0.00); object(0x0204, 270, 0, 42);
move(-10.73, 9.35, 0.00); object(0x0204, 270, 0, 42);
move(-9.50, 7.16, 0.30); object(0x0204, 270, 5, 32);
move(-8.62, 6.50, 1.20); object(0x0204, 270, 5, 32);
move(-8.38, 6.32, 1.10); object(0x0204, 270, 5, 32);
move(-8.32, 5.40, 0.80); object(0x0204, 270, 5, 32);
move(-12.04, 2.97, 0.00); object(0x0204, 270, 355, 355);
move(-10.60, -0.14, -1.00); object(0x0204, 270, 355, 355);
move(-9.79, -0.93, -0.50); object(0x0204, 270, 0, 355);
move(-14.09, -0.86, 0.00); object(0x0204, 270, 0, 355);
move(-11.49, -0.84, 0.00); object(0x0204, 270, 0, 355);
move(-4.60, -0.02, 0.00); object(0x0204, 270, 0, 355);
setshort(0x992FDFE, 0x20, 0x4c, 0x69, 0x6f, 0x6e);
setshort(0x94428e0, 252);
setfloat(0x94428dc, 2.025);
setfloat(0x945b240, 5837.5);
setfloat(0x945b248, 1.625);
setfloat(0x945b300, 0.5375);
setfloat(0x945b304, -0.4625);
setfloat(0x945b308, 0.525);
setfloat(0x945b2cc, 1.675);
setfloat(0x945b2d0, 1.675);
setfloat(0x945b2c4, 0.00788);
setfloat(0x945b2e4, 0.5);
setfloat(0x945b2e8, 23.75);
setfloat(0x945b2f8, 1.3125);
setfloat(0x945b2fc, 0.25625);
setfloat(0x945b314, 0.87);
setfloat(0x945b30c, 0.4875);
setfloat(0x945b268, 0.025);
setchar(0x945b270, 71);
setfloat(0x945b2ec, 0.85);
sethex(0x945b310, 0x02, 0x40, 0x00, 0x04);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb28, 0xFF, 0xFF, 0x00);
sethex(0x944fb24, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 162);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
//weapon 1
setfloat(0x08e2d800, 275.00, 314.00, -3);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x10e)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//weapon 2
setfloat(0x08E2E400, 275.00, 314.00, -3);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x10f);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
//weapon 3
setfloat(0x08e2d860, 275.00, 314.00, -3);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x110)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//weapon 4
setfloat(0x08e2d8c0, 275.00, 314.00, -3);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x118);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
//weapon 5
setfloat(0x08e2d920, 275.00, 314.00, -3, 0);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x11b);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
//weapon 6
setfloat(0x08e2d980, 275.00, 314.00, -3);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x11c);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
//weapon 7
setfloat(0x08e2d9e0, 275.00, 314.00, -3);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x119);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
//weapon 8
setfloat(0x08e2da40, 275.00, 314.00, -3);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x11a);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
//weapon 9
setfloat(0x08e2daa0, 275.00, 314.00, -3);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x11f);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
//weapon 10
setfloat(0x08e2db00, 275.00, 314.00, -3);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x121);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
//weapon 11
setfloat(0x08E2DB60, 275.00, 314.00, -3);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x122);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
//weapon 12
setfloat(0x08E2DBC0, 275.00, 314.00, -3);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x115);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
//weapon 13
setfloat(0x08E2DC20, 275.00, 314.00, -3);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x116);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
//weapon 14
setfloat(0x08E2DC80, 275.00, 314.00, -3);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x117);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
//weapon 15
setfloat(0x08E2DCE0, 275.00, 314.00, -3);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x114);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
//weapon 16
setfloat(0x08E2DD40, 275.00, 314.00, -3);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x113);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
//weapon 17
setfloat(0x08E2DDA0, 275.00, 314.00, -3);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
//weapon 18
setfloat(0x08E2DE00, 275.00, 314.00, -3);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x104);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
//weapon 19
setfloat(0x08E2DE60, 275.00, 314.00, -3);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x104);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
//weapon 20
setfloat(0x08E2DEC0, 275.00, 314.00, -3);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x104);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
//weapon 21
setfloat(0x08E2DF20, 275.00, 314.00, -3);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0xff, 0xff);
setshort(0x08E2DF46, 0x104);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
//weapon 22
setfloat(0x08E2DF80, 275.00, 314.00, -3);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0xff, 0xff);
setshort(0x08E2DFA6, 0x104);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
//weapon 23
setfloat(0x08E2DFE0, 275.00, 314.00, -3);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0xff, 0xff);
setshort(0x08E2E006, 0x104);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
//weapon 24
setfloat(0x08E2E040, 275.00, 314.00, -3);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0xff, 0xff);
setshort(0x08E2E066, 0x104);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
//weapon 25
setfloat(0x08E2E0A0, 275.00, 314.00, -3);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x104);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
//weapon 26
setfloat(0x08E2E100, 275.00, 314.00, -3);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0xff, 0xff);
setshort(0x08E2E126, 0x104);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
//weapon 27
setfloat(0x08E2E160, 275.00, 314.00, -3);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x104);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
//weapon 28
setfloat(0x08E2E1C0, 275.00, 314.00, -3);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x104);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
//weapon 29
setfloat(0x08E2E220, 275.00, 314.00, -3);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0xff, 0xff);
setshort(0x08E2E246, 0x104);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
//weapon 30
setfloat(0x08E2E280, 275.00, 314.00, -3);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0xff, 0xff);
setshort(0x08E2E2A6, 0x104);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
//weapon 31
setfloat(0x08E2E2E0, 275.00, 314.00, -3);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0xff, 0xff);
setshort(0x08E2E306, 0x104);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
//weapon 32
setfloat(0x08E2E340, 275.00, 314.00, -3);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0xff, 0xff);
setshort(0x08E2E366, 0x104);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
//weapon 33
setfloat(0x08E2E3A0, 275.00, 314.00, -3);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0xff, 0xff);
setshort(0x08E2E3C6, 0x104);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
//weapon 34
setfloat(0x08E2E460, 275.00, 314.00, -3);
setint(0x08E2E474, 0);
setchar(0x08E2E47C, 0xff, 0xff);
setshort(0x08E2E486, 0x104);
setchar(0x08E2E492, 0x0f);
setchar(0x08E2E493, 0x00);
setchar(0x08E2D4B0, 0xff);
//weapon 35
setfloat(0x08E2E4C0, 275.00, 314.00, -3);
setint(0x08E2E4D4, 0);
setchar(0x08E2E4DC, 0xff, 0xff);
setshort(0x08E2E4E6, 0x104);
setchar(0x08E2E4F2, 0x0f);
setchar(0x08E2E4F3, 0x00);
setchar(0x08E2D510, 0xff);
//weapon 36
setfloat(0x08E2DDA0, 275.00, 314.00, -3);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x104);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
off()
//Created Using Pickup Creator
//By RASAL
setfloat(0x08e2d800, 272.15, -422.6, 26.02);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1000000, 0x1000000);
setshort(0x08e2d826, 0x111);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
//Created Using Pedestrian Spawner
//By RASAL
setfloat(099542b0-cb0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0-0x1960, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0-0x2610, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0-0x32c0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0-0x3F70, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0-0x4c20, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0-0x58d0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0, 399.43000000000006, 2726.8, 26.02);
setfloat(0994c3d0, 399.43000000000006, 2726.8, 26.02);
setfloat(0994dd30, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+cb0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x1960, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x2610, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x32c0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x3F70, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x4c20, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x58d0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x6580, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x7230, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x7ee0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x8b90, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x9840, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0xa4f0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0xb1a0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0xbe50, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0xcb00, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0xd7b0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0xe460, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0xf110, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0xfdc0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x10a70, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x11720, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x123d0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x13080, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x13d30, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x149e0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x15690, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x16340, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x16ff0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x17ca0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x18950, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x19600, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x1a2b0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x1af60, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x1bc10, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x1c8c0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x1d570, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x1e220, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x1eed0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x1fb80, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x20830, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x214e0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x22190, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x22e40, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x23af0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x247a0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x25450, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x26100, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x26db0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x27a60, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x28710, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x293c0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x2a070, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x2ad20, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x2b9d0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x2c680, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x2d330, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x2dfe0, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x2ec90, 399.43000000000006, 2726.8, 26.02);
setfloat(099542b0+0x2f940, 399.43000000000006, 2726.8, 26.02);

#cheat New Lighthouse
//ID: 17874
//Score: 108
//Author: Ultimate Cheat Maker
//Category: Environment
//Description: This is a new lighthouse near the shoreside lift bridge!!! It is like the portland one but better!!! Also u can go in side it; it is spacious wiv 4 rooms, bathroom, chopper and helipad outside and more extras!!!
//Image: none
//Time: 01/10/2006 17:03:09
//Working: Yes
moveto(1652.75, -380.34, 33.97); object(0x0FAC, 315, 0, 347);
move(1.44, -5.00, 0.00); object(0x0FAC, 270, 0, 348);
move(-6.49, 1.06, -3.60); object(0x0FAC, 225, 0, 76);
move(-3.14, -0.80, -3.50); object(0x0FAC, 225, 0, 75);
move(-4.88, -1.04, 0.00); object(0x0FAC, 270, 0, 78);
move(0.99, -5.03, 0.00); object(0x0FAC, 270, 0, 79);
move(1.00, -5.00, 0.00); object(0x0FAC, 270, 0, 79);
move(0.98, -4.90, 0.00); object(0x0FAC, 270, 0, 79);
move(4.96, 0.99, 0.00); object(0x0FAC, 270, 0, 79);
move(-0.96, 4.80, 0.00); object(0x0FAC, 270, 0, 79);
move(-1.02, 5.10, 0.00); object(0x0FAC, 270, 0, 79);
move(5.06, 1.01, 0.00); object(0x0FAC, 270, 0, 79);
move(1.02, -5.10, 0.00); object(0x0FAC, 270, 0, 79);
move(0.98, -4.90, 0.00); object(0x0FAC, 270, 0, 79);
move(5.06, 1.01, 0.00); object(0x0FAC, 270, 0, 79);
move(-0.98, 4.90, 0.00); object(0x0FAC, 270, 0, 79);
move(-0.98, 4.90, 0.00); object(0x0FAC, 270, 0, 79);
move(4.18, 5.97, 0.00); object(0x0FAC, 270, 0, 261);
move(-14.26, -17.11, 2.14); object(0x0F98, 0, 0, 79);
move(8.84, 8.48, 0.14); object(0x0F95, 0, 0, 171);
move(4.34, -5.77, -0.10); object(0x0F9A, 0, 0, 351);
move(-17.47, 10.18, -0.04); object(0x0F96, 0, 0, 167);
move(-3.30, -2.06, 2.66); object(0x0FAC, 0, 0, 80);
move(-0.67, 1.89, 0.00); object(0x0FAC, 0, 0, 80);
move(2.23, 3.36, 0.00); object(0x0FAC, 0, 0, 169);
move(5.04, 1.05, -0.00); object(0x0FAC, 0, 0, 169);
move(-5.98, -8.48, -3.30); object(0x0210, 0, 0, 348);
move(2.18, -1.67, 1.10); object(0x0CDB, 0, 0, 75);
move(0.46, -1.66, 0.00); object(0x0CDB, 0, 0, 75);
move(-2.60, 3.35, 1.00); object(0x0210, 0, 0, 352);
move(13.02, -10.95, -1.20); object(0x0CDB, 0, 0, 348);
move(2.24, 0.65, 0.00); object(0x0CDB, 0, 0, 348);
move(7.13, 10.76, 0.00); object(0x0CDB, 0, 0, 258);
move(-0.95, 4.82, 0.00); object(0x0CDB, 0, 0, 263);
move(-0.40, 3.17, 0.00); object(0x0CDB, 0, 0, 263);
move(-21.91, -6.20, 2.35); object(0x0FAC, 0, 0, 82);
move(-0.25, -0.12, -4.92); object(0x0FAC, 270, 0, 81);
move(-0.38, 2.27, 0.00); object(0x0FAC, 270, 0, 81);
move(25.06, -8.89, 5.09); object(0x0FAC, 0, 0, 260);
move(0.53, -1.93, 0.00); object(0x0FAC, 0, 0, 260);
move(-2.06, -2.99, 0.00); object(0x0FAC, 0, 0, 351);
move(-2.04, -0.50, 0.00); object(0x0FAC, 0, 0, 351);
move(-11.72, -2.19, 0.00); object(0x0FAC, 0, 0, 346);
move(-1.46, -0.36, 0.00); object(0x0FAC, 0, 0, 346);
move(-3.13, 1.95, 0.02); object(0x0FAC, 0, 0, 82);
move(-0.31, 2.08, 0.00); object(0x0FAC, 0, 0, 82);
move(5.70, 12.23, -0.40); object(0x0FAC, 0, 0, 350);
move(4.71, 1.00, 0.00); object(0x0FAC, 0, 0, 349);
move(-14.95, -0.12, 0.30); object(0x0FAC, 270, 0, 80);
move(0.79, -5.18, 0.00); object(0x0FAC, 270, 0, 80);
move(1.36, -4.92, -0.40); object(0x0FAC, 270, 0, 80);
move(1.39, -5.01, -0.20); object(0x0FAC, 270, 0, 80);
move(4.94, 0.89, 0.00); object(0x0FAC, 270, 0, 78);
move(4.81, 1.14, 0.00); object(0x0FAC, 270, 0, 77);
move(4.86, 0.83, 0.00); object(0x0FAC, 270, 0, 80);
move(1.69, 0.03, 0.00); object(0x0FAC, 270, 0, 78);
move(-7.81, 4.08, 0.00); object(0x0FAC, 270, 0, 257);
move(5.53, 1.31, 0.20); object(0x0FAC, 270, 0, 256);
move(4.86, 0.66, 0.00); object(0x0FAC, 270, 0, 261);
move(1.40, 0.34, 0.00); object(0x0FAC, 270, 0, 261);
move(-1.18, 4.86, 0.00); object(0x0FAC, 270, 0, 261);
move(-5.11, -0.94, 0.00); object(0x0FAC, 270, 0, 261);
move(-5.19, -1.28, 0.00); object(0x0FAC, 270, 0, 261);
move(-4.53, -0.82, 0.00); object(0x0FAC, 270, 0, 261);
move(-5.28, 4.59, 0.54); object(0x0FAC, 270, 0, 84);
move(9.18, -11.86, -0.58); object(0x0FAC, 270, 0, 350);
move(5.56, 9.92, -3.76); object(0x0FAC, 180, 0, 351);
move(-1.48, -0.01, -0.02); object(0x0FAC, 180, 0, 172);
move(-2.89, -0.95, 1.82); object(0x0FAC, 180, 270, 260);
move(0.26, -1.48, 0.00); object(0x0FAC, 180, 270, 260);
move(8.38, 8.46, 7.94); object(0x0FAC, 45, 0, 78);
move(1.79, 2.70, -0.20); object(0x0FAC, 90, 0, 346);
move(1.25, -4.91, 0.20); object(0x0FAC, 90, 0, 343);
move(1.43, -4.76, 0.00); object(0x0FAC, 90, 0, 343);
move(4.88, 1.39, 0.00); object(0x0FAC, 90, 0, 343);
move(-1.43, 4.96, 0.00); object(0x0FAC, 90, 0, 343);
move(-1.21, 4.69, 0.00); object(0x0FAC, 90, 0, 343);
move(4.98, 1.46, 0.00); object(0x0FAC, 90, 0, 344);
move(1.49, -4.97, 0.00); object(0x0FAC, 90, 0, 344);
move(1.19, -4.57, 0.00); object(0x0FAC, 90, 0, 343);
moveto(1655.00, -390.37, 34.04); object(0x0FAC, 270, 0, 350);
move(5.02, 0.91, 0.00); object(0x0FAC, 270, 0, 350);
move(4.72, 0.86, 0.00); object(0x0FAC, 270, 0, 350);
move(4.92, 0.89, 0.00); object(0x0FAC, 270, 0, 350);
move(5.02, 0.91, 0.00); object(0x0FAC, 270, 0, 350);
move(0.89, -2.73, 0.00); object(0x0FAC, 270, 0, 345);
move(-4.84, -1.32, 0.00); object(0x0FAC, 270, 0, 345);
move(-4.78, -1.11, 0.00); object(0x0FAC, 270, 0, 345);
move(6.83, 15.13, 0.00); object(0x0FAC, 270, 0, 170);
move(-4.92, -0.90, 0.00); object(0x0FAC, 270, 0, 170);
move(-4.62, -0.84, 0.00); object(0x0FAC, 270, 0, 170);
move(3.80, -18.20, 0.00); object(0x0FAC, 270, 0, 346);
move(4.28, 1.04, 1.60); object(0x0FAC, 270, 320, 346);
move(4.44, 1.08, 1.70); object(0x0FAC, 270, 0, 346);
moveto(1669.91, -390.99, 37.31); object(0x0FAC, 0, 0, 344);
move(-16.33, 19.77, 20.40); object(0x0FAC, 270, 0, 275);
move(-0.48, -5.08, 0.00); object(0x0FAC, 270, 0, 275);
move(0.94, 9.95, 0.00); object(0x0FAC, 270, 0, 275);
move(4.84, -0.46, 0.00); object(0x0FAC, 270, 0, 275);
move(-0.47, -4.98, 0.00); object(0x0FAC, 270, 0, 275);
move(-0.47, -4.98, 0.00); object(0x0FAC, 270, 0, 275);
move(-9.94, 0.94, 0.00); object(0x0FAC, 270, 0, 275);
move(-4.43, 5.39, 0.00); object(0x0FAC, 270, 0, 95);
move(0.40, 4.88, 0.00); object(0x0FAC, 270, 0, 95);
moveto(1662.03, -378.83, 34.01); object(0x0FAC, 270, 0, 172);
move(-6.76, -3.76, -4.00); object(0x0CDB, 180, 0, 263);
move(1.87, 2.25, -0.50); object(0x0CDB, 180, 0, 171);
move(-2.41, -2.64, 0.04); object(0x0CDB, 180, 0, 264);
teleport(1658.24, -398.09, 28.09);
teleport(1646.54, -374.65, 58.75);
moveto(1652.75, -380.34, 33.97); object(0x0FAC, 315, 0, 347);
move(1.44, -5.00, 0.00); object(0x0FAC, 270, 0, 348);
move(-6.49, 1.06, -3.60); object(0x0FAC, 225, 0, 76);
move(-3.14, -0.80, -3.50); object(0x0FAC, 225, 0, 75);
move(-4.88, -1.04, 0.00); object(0x0FAC, 270, 0, 78);
move(0.99, -5.03, 0.00); object(0x0FAC, 270, 0, 79);
move(1.00, -5.00, 0.00); object(0x0FAC, 270, 0, 79);
move(0.98, -4.90, 0.00); object(0x0FAC, 270, 0, 79);
move(4.96, 0.99, 0.00); object(0x0FAC, 270, 0, 79);
move(-0.96, 4.80, 0.00); object(0x0FAC, 270, 0, 79);
move(-1.02, 5.10, 0.00); object(0x0FAC, 270, 0, 79);
move(5.06, 1.01, 0.00); object(0x0FAC, 270, 0, 79);
move(1.02, -5.10, 0.00); object(0x0FAC, 270, 0, 79);
move(0.98, -4.90, 0.00); object(0x0FAC, 270, 0, 79);
move(5.06, 1.01, 0.00); object(0x0FAC, 270, 0, 79);
move(-0.98, 4.90, 0.00); object(0x0FAC, 270, 0, 79);
move(-0.98, 4.90, 0.00); object(0x0FAC, 270, 0, 79);
move(4.18, 5.97, 0.00); object(0x0FAC, 270, 0, 261);
move(-14.26, -17.11, 2.14); object(0x0F98, 0, 0, 79);
move(8.84, 8.48, 0.14); object(0x0F95, 0, 0, 171);
move(4.34, -5.77, -0.10); object(0x0F9A, 0, 0, 351);
move(-17.47, 10.18, -0.04); object(0x0F96, 0, 0, 167);
move(-3.30, -2.06, 2.66); object(0x0FAC, 0, 0, 80);
move(-0.67, 1.89, 0.00); object(0x0FAC, 0, 0, 80);
move(2.23, 3.36, 0.00); object(0x0FAC, 0, 0, 169);
move(5.04, 1.05, -0.00); object(0x0FAC, 0, 0, 169);
move(-5.98, -8.48, -3.30); object(0x0210, 0, 0, 348);
move(2.18, -1.67, 1.10); object(0x0CDB, 0, 0, 75);
move(0.46, -1.66, 0.00); object(0x0CDB, 0, 0, 75);
move(-2.60, 3.35, 1.00); object(0x0210, 0, 0, 352);
move(13.02, -10.95, -1.20); object(0x0CDB, 0, 0, 348);
move(2.24, 0.65, 0.00); object(0x0CDB, 0, 0, 348);
move(7.13, 10.76, 0.00); object(0x0CDB, 0, 0, 258);
move(-0.95, 4.82, 0.00); object(0x0CDB, 0, 0, 263);
move(-0.40, 3.17, 0.00); object(0x0CDB, 0, 0, 263);
move(-21.91, -6.20, 2.35); object(0x0FAC, 0, 0, 82);
move(-0.25, -0.12, -4.92); object(0x0FAC, 270, 0, 81);
move(-0.38, 2.27, 0.00); object(0x0FAC, 270, 0, 81);
move(25.06, -8.89, 5.09); object(0x0FAC, 0, 0, 260);
move(0.53, -1.93, 0.00); object(0x0FAC, 0, 0, 260);
move(-2.06, -2.99, 0.00); object(0x0FAC, 0, 0, 351);
move(-2.04, -0.50, 0.00); object(0x0FAC, 0, 0, 351);
move(-11.72, -2.19, 0.00); object(0x0FAC, 0, 0, 346);
move(-1.46, -0.36, 0.00); object(0x0FAC, 0, 0, 346);
move(-3.13, 1.95, 0.02); object(0x0FAC, 0, 0, 82);
move(-0.31, 2.08, 0.00); object(0x0FAC, 0, 0, 82);
move(5.70, 12.23, -0.40); object(0x0FAC, 0, 0, 350);
move(4.71, 1.00, 0.00); object(0x0FAC, 0, 0, 349);
move(-14.95, -0.12, 0.30); object(0x0FAC, 270, 0, 80);
move(0.79, -5.18, 0.00); object(0x0FAC, 270, 0, 80);
move(1.36, -4.92, -0.40); object(0x0FAC, 270, 0, 80);
move(1.39, -5.01, -0.20); object(0x0FAC, 270, 0, 80);
move(4.94, 0.89, 0.00); object(0x0FAC, 270, 0, 78);
move(4.81, 1.14, 0.00); object(0x0FAC, 270, 0, 77);
move(4.86, 0.83, 0.00); object(0x0FAC, 270, 0, 80);
move(1.69, 0.03, 0.00); object(0x0FAC, 270, 0, 78);
move(-7.81, 4.08, 0.00); object(0x0FAC, 270, 0, 257);
move(5.53, 1.31, 0.20); object(0x0FAC, 270, 0, 256);
move(4.86, 0.66, 0.00); object(0x0FAC, 270, 0, 261);
move(1.40, 0.34, 0.00); object(0x0FAC, 270, 0, 261);
move(-1.18, 4.86, 0.00); object(0x0FAC, 270, 0, 261);
move(-5.11, -0.94, 0.00); object(0x0FAC, 270, 0, 261);
move(-5.19, -1.28, 0.00); object(0x0FAC, 270, 0, 261);
move(-4.53, -0.82, 0.00); object(0x0FAC, 270, 0, 261);
move(-5.28, 4.59, 0.54); object(0x0FAC, 270, 0, 84);
move(9.18, -11.86, -0.58); object(0x0FAC, 270, 0, 350);
move(5.56, 9.92, -3.76); object(0x0FAC, 180, 0, 351);
move(-1.48, -0.01, -0.02); object(0x0FAC, 180, 0, 172);
move(-2.89, -0.95, 1.82); object(0x0FAC, 180, 270, 260);
move(0.26, -1.48, 0.00); object(0x0FAC, 180, 270, 260);
move(8.38, 8.46, 7.94); object(0x0FAC, 45, 0, 78);
move(1.79, 2.70, -0.20); object(0x0FAC, 90, 0, 346);
move(1.25, -4.91, 0.20); object(0x0FAC, 90, 0, 343);
move(1.43, -4.76, 0.00); object(0x0FAC, 90, 0, 343);
move(4.88, 1.39, 0.00); object(0x0FAC, 90, 0, 343);
move(-1.43, 4.96, 0.00); object(0x0FAC, 90, 0, 343);
move(-1.21, 4.69, 0.00); object(0x0FAC, 90, 0, 343);
move(4.98, 1.46, 0.00); object(0x0FAC, 90, 0, 344);
move(1.49, -4.97, 0.00); object(0x0FAC, 90, 0, 344);
move(1.19, -4.57, 0.00); object(0x0FAC, 90, 0, 343);
moveto(1655.00, -390.37, 34.04); object(0x0FAC, 270, 0, 350);
move(5.02, 0.91, 0.00); object(0x0FAC, 270, 0, 350);
move(4.72, 0.86, 0.00); object(0x0FAC, 270, 0, 350);
move(4.92, 0.89, 0.00); object(0x0FAC, 270, 0, 350);
move(5.02, 0.91, 0.00); object(0x0FAC, 270, 0, 350);
move(0.89, -2.73, 0.00); object(0x0FAC, 270, 0, 345);
move(-4.84, -1.32, 0.00); object(0x0FAC, 270, 0, 345);
move(-4.78, -1.11, 0.00); object(0x0FAC, 270, 0, 345);
move(6.83, 15.13, 0.00); object(0x0FAC, 270, 0, 170);
move(-4.92, -0.90, 0.00); object(0x0FAC, 270, 0, 170);
move(-4.62, -0.84, 0.00); object(0x0FAC, 270, 0, 170);
move(3.80, -18.20, 0.00); object(0x0FAC, 270, 0, 346);
move(4.28, 1.04, 1.60); object(0x0FAC, 270, 320, 346);
move(4.44, 1.08, 1.70); object(0x0FAC, 270, 0, 346);
moveto(1669.91, -390.99, 37.31); object(0x0FAC, 0, 0, 344);
move(-16.33, 19.77, 20.40); object(0x0FAC, 270, 0, 275);
move(-0.48, -5.08, 0.00); object(0x0FAC, 270, 0, 275);
move(0.94, 9.95, 0.00); object(0x0FAC, 270, 0, 275);
move(4.84, -0.46, 0.00); object(0x0FAC, 270, 0, 275);
move(-0.47, -4.98, 0.00); object(0x0FAC, 270, 0, 275);
move(-0.47, -4.98, 0.00); object(0x0FAC, 270, 0, 275);
move(-9.94, 0.94, 0.00); object(0x0FAC, 270, 0, 275);
move(-4.43, 5.39, 0.00); object(0x0FAC, 270, 0, 95);
move(0.40, 4.88, 0.00); object(0x0FAC, 270, 0, 95);
moveto(1662.03, -378.83, 34.01); object(0x0FAC, 270, 0, 172);
move(-6.76, -3.76, -4.00); object(0x0CDB, 180, 0, 263);
move(1.87, 2.25, -0.50); object(0x0CDB, 180, 0, 171);
move(-2.41, -2.64, 0.04); object(0x0CDB, 180, 0, 264);
teleport(1658.24, -398.09, 28.09);
teleport(1646.54, -374.65, 58.75);

#cheat Cochrame Dam Upgrade
//ID: 17873
//Score: 100
//Author: Ultimate Cheat Maker
//Category: Environment
//Description: This will upgrade the Cochrame Dam on the 3rd island!!! It will make a big carpark, security fences, all weapons, small hut, small garage and loads more extras!!! This cheat is wicked!!! 
//(Check out my 4th island cheat)
//Image: none
//Time: 01/10/2006 16:48:33
//Working: Yes
moveto(-887.04, 824.13, 64.00); object(0x01BF, 270, 0, 182);
move(7.80, -0.22, 0.00); object(0x01BF, 270, 0, 182);
move(0.11, 3.67, 0.00); object(0x01BF, 270, 0, 181);
move(5.90, -0.14, 0.00); object(0x01BF, 270, 0, 181);
move(7.78, 5.66, 0.00); object(0x01BF, 270, 0, 182);
move(-6.30, 0.18, 0.00); object(0x01BF, 270, 0, 182);
move(-7.40, 0.21, 0.00); object(0x01BF, 270, 0, 182);
move(-7.60, -3.65, 0.00); object(0x01BF, 270, 0, 182);
move(0.11, 4.00, 0.00); object(0x01BF, 270, 0, 182);
move(27.51, 6.25, 0.00); object(0x01BF, 270, 0, 88);
move(0.10, -2.30, 0.00); object(0x01BF, 270, 0, 88);
move(-6.70, 2.41, 0.00); object(0x01BF, 270, 0, 91);
move(-3.83, 0.07, 0.00); object(0x01BF, 270, 0, 91);
move(3.88, 7.33, 0.00); object(0x01BF, 270, 0, 91);
move(0.16, 7.79, 0.00); object(0x01BF, 270, 0, 89);
move(-3.93, -7.04, 0.00); object(0x01BF, 270, 0, 91);
move(-6.30, 3.69, 0.00); object(0x01BF, 270, 0, 2);
move(-7.60, 0.23, 0.00); object(0x01BF, 270, 0, 2);
move(0.37, 6.38, 0.00); object(0x01BF, 270, 0, 4);
move(11.91, -2.78, 0.00); object(0x01BF, 270, 0, 24);
move(-5.28, 2.19, 0.00); object(0x01BF, 270, 0, 6);
move(3.72, 4.89, 2.08); object(0x01BF, 270, 0, 357);
move(0.21, -4.03, 0.00); object(0x01BF, 270, 0, 357);
move(5.89, -3.44, 0.00); object(0x01BF, 270, 0, 357);
move(0.19, -6.61, -1.40); object(0x01BF, 245, 0, 0);
move(-6.74, 7.46, -0.70); object(0x01BF, 0, 0, 0);
move(6.68, 5.46, 1.98); object(0x01BF, 270, 0, 50);
move(-24.19, -28.60, 0.82); object(0x01BF, 180, 0, 92);
move(-0.27, -6.19, 0.00); object(0x01BF, 180, 0, 92);
move(3.55, 26.07, 0.00); object(0x01BF, 180, 0, 92);
move(0.30, 6.79, 0.00); object(0x01BF, 180, 0, 92);
move(0.10, -36.24, -0.10); object(0x01BF, 180, 0, 180);
move(6.00, 0.11, 0.10); object(0x01BF, 180, 0, 176);
move(5.23, 0.51, 0.00); object(0x01BF, 180, 0, 172);
move(-11.76, 0.37, 3.20); object(0x01BF, 90, 0, 180);
move(7.90, 0.06, 0.00); object(0x01BF, 90, 0, 180);
move(7.70, 0.06, 0.00); object(0x01BF, 90, 0, 180);
move(-0.05, 5.96, 0.00); object(0x01BF, 90, 0, 180);
move(-7.60, -0.06, 0.00); object(0x01BF, 90, 0, 180);
move(-7.80, -0.06, 0.00); object(0x01BF, 90, 0, 180);
move(-0.04, 5.86, 0.00); object(0x01BF, 90, 0, 180);
move(7.40, 0.05, 0.00); object(0x01BF, 90, 0, 180);
move(7.80, 0.06, 0.00); object(0x01BF, 90, 0, 180);
move(7.35, -5.12, 0.00); object(0x01BF, 90, 0, 180);
move(-0.04, 4.91, 0.00); object(0x01BF, 90, 0, 180);
move(6.21, -0.72, 0.00); object(0x01BF, 90, 0, 152);
move(9.14, 3.27, 0.00); object(0x01BF, 90, 0, 89);
move(-5.08, -0.07, 0.00); object(0x01BF, 90, 0, 89);
move(-5.90, 3.02, 0.00); object(0x01BF, 90, 0, 89);
move(-4.34, 1.64, 0.00); object(0x01BF, 90, 0, 89);
move(-6.04, -0.09, 0.00); object(0x01BF, 90, 0, 89);
move(-5.14, -0.07, 0.00); object(0x01BF, 90, 0, 89);
move(-4.38, -0.06, 0.00); object(0x01BF, 90, 0, 89);
move(-4.13, 4.04, 0.00); object(0x01BF, 90, 0, 89);
move(-1.87, -6.00, 0.00); object(0x01BF, 90, 0, 124);
move(2.20, 13.43, 0.00); object(0x01BF, 90, 0, 91);
move(0.16, 7.50, 0.00); object(0x01BF, 90, 0, 91);
move(5.91, -2.08, -1.92); object(0x01BF, 55, 0, 272);
move(0.54, -10.15, 1.90); object(0x01BF, 90, 0, 178);
move(12.73, -2.74, 2.80); object(0x01BF, 0, 0, 178);
move(-4.90, -0.21, 0.00); object(0x01BF, 0, 0, 178);
move(-4.01, 2.40, 0.00); object(0x01BF, 0, 0, 268);
move(-3.58, 3.68, 0.10); object(0x01BF, 0, 0, 177);
move(-6.18, 13.19, 0.00); object(0x01BF, 0, 0, 179);
move(-3.74, -3.49, 0.10); object(0x01BF, 0, 0, 91);
move(-0.12, -7.19, 0.00); object(0x01BF, 0, 0, 91);
move(-0.11, -6.40, 0.00); object(0x01BF, 0, 0, 91);
move(-2.25, -7.14, 0.00); object(0x01BF, 0, 0, 124);
move(-1.52, -6.44, 0.00); object(0x01BF, 0, 0, 89);
move(0.17, -7.10, 0.00); object(0x01BF, 0, 0, 89);
move(0.08, -3.30, 0.00); object(0x01BF, 0, 0, 89);
move(3.97, -3.76, 0.00); object(0x01BF, 0, 0, 0);
move(7.48, 0.22, 0.00); object(0x01BF, 0, 0, 177);
move(5.39, 0.26, 0.00); object(0x01BF, 0, 0, 177);
move(0.67, 20.79, -0.20); object(0x01BF, 0, 0, 269);
move(0.10, -5.35, 0.00); object(0x01BF, 0, 0, 269);
move(3.80, 6.47, 1.50); object(0x01BF, 240, 0, 1);
move(-0.06, -5.46, -2.90); object(0x01BF, 245, 0, 0);
moveto(-887.69, 825.48, 76.26); object(0x01BF, 90, 0, 89);
move(-0.31, 7.74, 0.00); object(0x01BF, 90, 0, 87);
move(-0.12, 2.10, 0.00); object(0x01BF, 90, 0, 87);
move(1.03, 4.96, 0.00); object(0x01BF, 90, 0, 125);
move(2.82, 4.94, 0.00); object(0x01BF, 90, 0, 91);
move(0.21, 7.70, 0.00); object(0x01BF, 90, 0, 91);
move(0.15, 5.60, 0.00); object(0x01BF, 90, 0, 91);
move(0.12, 4.50, 0.00); object(0x01BF, 90, 0, 91);
move(6.26, -13.22, 0.00); object(0x01BF, 90, 0, 177);
move(0.06, -5.42, 0.00); object(0x01BF, 90, 0, 179);
move(-3.49, -19.59, 0.00); object(0x01BF, 90, 0, 179);
move(7.30, 0.09, 0.00); object(0x01BF, 90, 0, 179);
move(7.50, 0.10, 0.00); object(0x01BF, 90, 0, 179);
move(-16.31, 10.64, 0.00); object(0x01BF, 90, 0, 267);
move(0.30, -5.39, 0.00); object(0x01BF, 90, 0, 267);
move(1.20, 10.67, 0.00); object(0x01BF, 90, 0, 321);
move(3.65, -2.60, 0.00); object(0x01BF, 90, 0, 358);
move(1.06, -7.21, 0.00); object(0x01BF, 90, 0, 266);
move(6.48, 0.72, 0.00); object(0x01BF, 90, 0, 267);
move(7.37, -1.42, 0.00); object(0x01BF, 90, 0, 178);
move(-0.23, 5.28, 0.00); object(0x01BF, 90, 0, 177);
move(-0.78, 7.99, 0.00); object(0x01BF, 90, 0, 267);
move(0.26, -4.29, 0.00); object(0x01BF, 90, 0, 267);
move(8.23, -6.87, 0.00); object(0x01BF, 90, 0, 180);
move(-1.30, 5.37, 0.00); object(0x01BF, 90, 0, 180);
move(-0.91, 4.71, 0.00); object(0x01BF, 90, 0, 272);
move(6.10, -1.12, 0.00); object(0x01BF, 90, 0, 272);
move(1.30, -5.69, 0.00); object(0x01BF, 90, 0, 236);
move(5.06, 4.55, 0.00); object(0x01BF, 90, 0, 83);
move(6.18, 0.72, 0.00); object(0x01BF, 90, 0, 83);
moveto(-877.13, 866.74, 72.87); object(0x01BF, 0, 0, 355);
move(0.50, 0.05, 0.00); object(0x01BF, 0, 0, 355);
move(7.27, 0.70, 0.00); object(0x01BF, 0, 0, 355);
move(2.54, 0.24, 0.00); object(0x01BF, 0, 0, 356);
move(-0.29, -0.99, -5.00); object(0x01BF, 20, 0, 356);
move(-6.88, -0.71, 0.00); object(0x01BF, 20, 0, 352);
move(-11.54, -4.73, -2.70); object(0x01BF, 20, 0, 330);
moveto(-869.79, 850.47, 76.11); object(0x01BF, 270, 0, 177);
move(6.79, 0.34, 0.00); object(0x01BF, 270, 0, 177);
move(-0.32, 6.46, 0.00); object(0x01BF, 270, 0, 177);
move(-7.69, -0.38, 0.00); object(0x01BF, 270, 0, 177);
move(-7.29, -0.36, 0.00); object(0x01BF, 270, 0, 177);
move(-5.14, -0.25, 0.00); object(0x01BF, 270, 0, 180);
move(-0.63, 6.40, 0.00); object(0x01BF, 270, 0, 91);
move(6.49, -0.06, 0.00); object(0x01BF, 270, 0, 91);
move(6.06, -0.15, 0.00); object(0x01BF, 270, 0, 91);
move(6.10, -0.11, 0.00); object(0x01BF, 270, 0, 91);
move(0.46, -6.04, 0.00); object(0x01BF, 270, 0, 83);
move(3.50, -11.76, 0.00); object(0x01BF, 270, 0, 357);
move(0.18, -5.22, 0.00); object(0x01BF, 270, 0, 359);
move(7.32, 3.70, 0.00); object(0x01BF, 270, 0, 359);
move(12.14, -0.49, 0.00); object(0x01BF, 270, 0, 58);
move(-5.22, 0.12, 0.00); object(0x01BF, 270, 0, 92);
move(0.25, -3.22, 0.00); object(0x01BF, 270, 0, 73);
moveto(-875.65, 839.20, 62.58); object(0x01BF, 65, 0, 92);
move(-14.56, -13.52, 17.05); object(0x01BF, 0, 270, 89);
move(3.25, -3.29, 0.00); object(0x01BF, 0, 270, 2);
move(-0.01, 6.59, 0.00); object(0x01BF, 0, 270, 177);
move(-0.00, -3.40, 3.91); object(0x01BF, 90, 180, 268);
move(23.65, 18.69, -5.15); object(0x01BF, 90, 145, 85);
move(-10.11, -1.47, 1.30); object(0x01BF, 0, 180, 271);
move(-0.05, -7.73, 0.00); object(0x01BF, 0, 180, 270);
move(3.17, 7.60, 3.30); object(0x01BF, 270, 180, 91);
move(-0.21, -7.70, 0.00); object(0x01BF, 270, 180, 91);
move(5.85, -0.16, 0.00); object(0x01BF, 270, 180, 91);
move(5.64, -0.15, 0.00); object(0x01BF, 270, 180, 91);
move(-4.13, 6.57, -2.30); object(0x01BF, 225, 180, 359);
move(6.36, 0.97, 2.30); object(0x01BF, 270, 180, 270);
move(0.01, 7.20, 0.00); object(0x01BF, 270, 180, 270);
move(5.56, -4.10, 0.00); object(0x01BF, 270, 180, 89);
move(-4.12, -10.66, 0.00); object(0x01BF, 270, 180, 90);
move(4.27, 0.01, 0.00); object(0x01BF, 270, 180, 90);
move(-0.01, 4.60, 0.00); object(0x01BF, 270, 180, 90);
move(2.68, 4.66, -3.35); object(0x01BF, 180, 180, 88);
move(0.14, -6.71, 0.00); object(0x01BF, 180, 180, 88);
move(-21.28, -6.17, 0.10); object(0x01BF, 180, 180, 182);
move(5.75, 18.37, 3.22); object(0x01BF, 90, 180, 358);
move(-5.88, -0.19, 0.00); object(0x01BF, 90, 180, 358);
moveto(-889.39, 828.25, 84.14); object(0x020F, 0, 0, 92);
move(-0.10, -2.60, 0.00); object(0x020F, 0, 0, 92);
move(-0.11, -2.80, 0.00); object(0x020F, 0, 0, 92);
move(-1.61, 15.36, -7.90); object(0x01EF, 0, 0, 87);
move(0.41, -6.59, 0.00); object(0x01EF, 0, 0, 87);
move(3.13, 12.97, 0.00); object(0x01EF, 0, 0, 125);
move(0.77, 7.35, 0.00); object(0x01EF, 0, 0, 91);
move(0.05, 6.60, 0.00); object(0x01EF, 0, 0, 91);
move(0.05, 7.30, 0.00); object(0x01EF, 0, 0, 91);
move(6.53, 0.59, 0.00); object(0x01EF, 0, 0, 180);
move(7.10, 0.04, 0.00); object(0x01EF, 0, 0, 180);
move(6.80, 0.04, 0.00); object(0x01EF, 0, 0, 180);
move(-0.22, -19.51, 6.73); object(0x01EF, 0, 0, 357);
move(-20.86, -16.84, -5.53); object(0x025E, 0, 0, 265);
move(12.03, 23.67, -12.20); object(0x025E, 0, 0, 92);
move(-10.47, 11.53, 10.70); object(0x027D, 0, 0, 333);
move(-0.38, -8.48, 0.10); object(0x027D, 0, 0, 333);
move(-0.01, -8.11, 0.00); object(0x027D, 0, 0, 333);
move(-4.60, -9.93, 0.00); object(0x027D, 0, 0, 243);
move(42.65, 5.80, 8.40); object(0x084C, 0, 0, 0);
move(-37.26, -18.84, 0.30); object(0x0CD1, 0, 0, 268);
move(27.87, 28.47, 6.40); object(0x0251, 0, 0, 61);
move(-18.14, -46.26, -2.50); object(0x0251, 0, 0, 192);
move(-8.83, 20.93, -3.70); object(0x0251, 0, 0, 315);
move(-11.75, 58.63, -6.30); object(0x0251, 0, 0, 334);
move(2.61, 1.26, 0.00); object(0x0251, 0, 0, 334);
move(2.88, 1.39, 0.00); object(0x0251, 0, 0, 334);
move(3.73, 0.33, -0.30); object(0x0251, 0, 0, 334);
move(3.58, 0.17, -0.10); object(0x0251, 0, 0, 334);
move(0.96, -2.01, -0.70); object(0x0251, 0, 0, 334);
move(-6.54, -0.71, 0.30); object(0x0251, 0, 0, 334);
move(-1.78, -3.65, -1.00); object(0x0251, 0, 0, 334);
move(6.07, 1.69, -0.30); object(0x0251, 0, 0, 334);
move(4.88, 0.02, -0.10); object(0x0251, 0, 0, 334);
move(-6.21, -3.02, -0.60); object(0x0251, 0, 0, 334);
move(4.98, 0.29, -0.50); object(0x0251, 0, 0, 340);
move(6.12, 2.18, 0.00); object(0x0251, 0, 0, 340);
move(-2.39, 6.72, 2.70); object(0x0251, 0, 0, 340);
move(-1.85, -3.15, 0.00); object(0x0251, 0, 0, 340);
move(0.00, 0.00, -1.00); object(0x0251, 0, 0, 340);
move(6.66, -57.24, 6.50); object(0x020F, 0, 0, 91);
move(0.08, 4.70, 0.00); object(0x020F, 0, 0, 91);
move(0.09, 5.40, 0.00); object(0x020F, 0, 0, 91);
move(0.10, 6.20, 0.00); object(0x020F, 0, 0, 91);
move(-19.10, -9.07, -6.70); object(0x020F, 0, 0, 93);
move(0.67, -7.24, 0.00); object(0x020F, 0, 0, 93);
move(0.25, -7.02, 0.00); object(0x020F, 0, 0, 93);
move(3.51, 20.25, 0.00); object(0x020F, 0, 0, 98);
move(-0.07, 6.95, 0.00); object(0x020F, 0, 0, 94);
move(0.43, 6.99, 0.00); object(0x020F, 0, 0, 94);
move(-0.12, 7.35, 0.00); object(0x020F, 0, 0, 166);
move(7.04, -0.05, -0.10); object(0x020F, 0, 0, 181);
move(7.00, -0.09, 0.00); object(0x020F, 0, 0, 181);
move(7.00, -0.27, 0.00); object(0x020F, 0, 0, 181);
//road
moveto(-882.97, 819.85, 76.20); object(0x01BF, 270, 0, 111);
move(-4.13, -4.44, 0.00); object(0x01BF, 270, 0, 140);
move(-5.16, -4.27, 0.00); object(0x01BF, 270, 0, 140);
move(-1.58, -3.21, 0.00); object(0x01BF, 270, 0, 83);
move(0.87, -6.74, 0.00); object(0x01BF, 270, 0, 83);
move(0.96, -7.44, 0.00); object(0x01BF, 270, 0, 83);
move(0.85, -6.65, 0.00); object(0x01BF, 270, 0, 83);
move(0.84, -6.55, 0.00); object(0x01BF, 270, 0, 83);
move(-20.56, -40.25, -5.20); object(0x01BF, 270, 0, 105);
move(-1.44, -5.41, 0.00); object(0x01BF, 270, 0, 105);
move(-2.32, -6.00, 0.00); object(0x01BF, 270, 0, 121);
move(-3.60, -6.00, 0.00); object(0x01BF, 270, 0, 121);
move(-3.44, -5.75, 0.00); object(0x01BF, 270, 0, 121);
move(-5.06, -4.60, 0.00); object(0x01BF, 270, 0, 153);
move(-5.70, -3.05, 0.00); object(0x01BF, 270, 0, 153);
move(-6.33, -3.22, 0.00); object(0x01BF, 270, 0, 153);
move(-6.15, -3.12, 0.00); object(0x01BF, 270, 0, 153);
move(-3.74, -3.16, 0.00); object(0x01BF, 270, 0, 117);
move(-3.36, -6.59, 0.00); object(0x01BF, 270, 0, 117);
move(-3.09, -6.06, 0.00); object(0x01BF, 270, 0, 117);
moveto(-851.50, 833.38, 83.93); object(0x025B, 0, 0, 1);
move(-3.50, 0.05, 0.00); object(0x025B, 0, 0, 1);
move(-28.14, -8.11, -11.10); object(0x01BF, 0, 0, 271);
move(-4.21, -0.16, -0.70); object(0x0F95, 0, 0, 90);
//Predator
setchar(0x08E4E9C0, 196);
setfloat(0x08E4E9C4, -880.73, 845.10, 65);
setfloat(0x08E4E9D0, 90);
//Rocket launcher
setfloat(0x08E2E280, -888.99, 823.44, 77.70);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0x99999999999999999999, 0x999999999999999999999);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
//AK47
setfloat(0x08E2DF80, -887.06, 823.44, 77.70);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0x9999999999999999, 0x9999999999999999999);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
//M60
setfloat(0x08E2E340, -884.56, 823.78, 77.70);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0x9999999999999999999999, 0x9999999999999999999);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
//Colt Python
setfloat(0x08E2DE00, -889.12, 826.19, 77.60);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0x9999999999999999, 0x9999999999999999999999);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
//Spaz Shotgun
setfloat(0x08E2DEC0, -888.94, 827.79, 77.60);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0x9999999999999999, 0x999999999999999999999999999);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
//Combat Shotgun
setfloat(0x08E2DF20, -886.31, 827.83, 77.60);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0x9999999999999999999999999999, 0x999999999999999999);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
//Flame Thrower
setfloat(0x08E2E2E0, -884.20, 827.98, 77.60);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0x99999999999999999999, 0x9999999999999999999999999);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
//Sniper Rifle
setfloat(0x08E2E1C0, -872.18, 845.48, 84.50);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0x99999999999999999, 0x9999999999999999999);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
//Micro SMG
setfloat(0x08E2E0A0, -872.31, 842.95, 84.50);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0x99999999999999999, 0x999999999999999999999);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
//Mac 10
setfloat(0x08E2E100, -872.53, 846.77, 84.50);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0x99999999999999999, 0x999999999999999999999999);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
//MP5
setfloat(0x08E2E160, -872.39, 849.53, 84.50);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0x9999999999999999, 0x999999999999999999999999999);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
teleport(-881.59, 843.26, 78.70)
//#Little Hut
moveto(291.65, -528.81, 36.28); object(0x01BF, 0, 0, 166);
move(35.64, 3.21, -6.90); object(0x01BF, 0, 0, 102);
move(-37.85, -5.39, 14.78); object(0x01BF, 0, 0, 269);
move(0.05, -2.60, 0.00); object(0x01BF, 0, 0, 269);
move(-3.89, 6.41, 0.00); object(0x01BF, 0, 0, 358);
move(-7.11, 0.14, 0.00); object(0x01BF, 0, 0, 358);
move(7.15, -10.03, 0.00); object(0x01BF, 0, 0, 0);
move(-7.87, 0.71, 0.00); object(0x01BF, 0, 0, 0);
move(-6.43, 0.01, 0.00); object(0x01BF, 0, 0, 0);
move(0.50, 4.23, 3.10); object(0x01BF, 270, 0, 271);
move(0.22, 1.99, 0.00); object(0x01BF, 270, 0, 271);
move(6.13, -3.91, 0.00); object(0x01BF, 270, 0, 271);
move(0.58, 5.17, 0.00); object(0x01BF, 270, 0, 271);
move(7.32, -1.63, 0.00); object(0x01BF, 270, 0, 270);
move(-0.27, -3.09, 0.00); object(0x01BF, 270, 0, 270);
move(-2.17, 0.62, 0.00); object(0x01BF, 270, 0, 275);
move(-11.34, -0.07, 0.10); object(0x01BF, 270, 0, 356);
move(-0.18, 1.89, 0.00); object(0x01BF, 270, 0, 356);
move(-0.22, 3.89, -3.08); object(0x01BF, 180, 0, 176);
move(-0.38, 0.44, -5.90); object(0x01BF, 180, 0, 180);
move(-3.51, -5.57, 5.68); object(0x01BF, 180, 0, 268);
move(-0.07, 1.60, 0.00); object(0x01BF, 180, 0, 268);
move(-0.81, 0.15, -4.10); object(0x01BF, 180, 0, 270);
move(0.01, -2.10, 0.00); object(0x01BF, 180, 0, 270);

#cheat 4th Island
//ID: 17859
//Score: 246
//Author: Ultimate Cheat Maker
//Category: Environment
//Description: This is my 4th island construction!!! It is an island after the 3rd one. Use the new island from the 3rd isalnd to get to it!!! This new island has loads of building, is as just samller than the second, garages, roads, a big mansion and loads more!!!!
//Image: none
//Time: 01/10/2006 14:30:49
//Working: Yes
moveto(1650.68, -371.12, 39.84); object(0x01BF, 90, 0, 38);
move(-3.93, -5.07, 0.00); object(0x01BF, 90, 0, 38);
move(-3.64, 2.82, 0.00); object(0x01BF, 90, 0, 38);
move(3.83, 5.15, 0.00); object(0x01BF, 90, 0, 217);
move(3.83, 5.08, 0.00); object(0x01BF, 90, 0, 217);
move(3.82, -2.80, 0.00); object(0x01BF, 90, 0, 216);
move(3.54, -2.62, 0.00); object(0x01BF, 90, 0, 216);
move(-4.02, -5.46, 0.00); object(0x01BF, 90, 0, 216);
move(-3.70, -5.03, 0.00); object(0x01BF, 90, 0, 216);
move(3.65, -1.76, 3.30); object(0x01BF, 180, 0, 126);
move(4.67, 6.49, 0.00); object(0x01BF, 180, 0, 126);
move(2.10, 2.92, 0.00); object(0x01BF, 180, 0, 126);
move(-0.79, 5.47, 0.00); object(0x01BF, 180, 0, 37);
move(-6.08, 4.57, 0.00); object(0x01BF, 180, 0, 37);
move(-1.20, 0.90, 0.00); object(0x01BF, 180, 0, 37);
move(-5.62, -0.65, 0.00); object(0x01BF, 180, 0, 307);
move(-4.56, -5.95, 0.00); object(0x01BF, 180, 0, 307);
move(-2.43, -3.17, 0.00); object(0x01BF, 180, 0, 307);
move(1.55, -6.56, -1.70); object(0x01F3, 0, 0, 38);
move(5.70, -4.40, 0.00); object(0x01F3, 0, 0, 38);
move(3.10, 18.18, 4.80); object(0x01BF, 270, 0, 217);
move(6.22, -4.71, 0.00); object(0x01BF, 270, 0, 217);
move(1.28, -0.97, 0.00); object(0x01BF, 270, 0, 217);
move(-3.58, -4.76, 0.00); object(0x01BF, 270, 0, 217);
move(-6.31, 4.75, 0.00); object(0x01BF, 270, 0, 217);
move(-1.12, 0.84, 0.00); object(0x01BF, 270, 0, 217);
move(-4.00, -5.31, -0.10); object(0x01BF, 270, 0, 217);
move(6.31, -4.75, 0.00); object(0x01BF, 270, 0, 217);
move(1.21, -0.92, 0.00); object(0x01BF, 270, 0, 216);
move(-3.36, -4.73, -1.20); object(0x01BF, 245, 0, 37);
move(-7.73, 5.86, 0.00); object(0x01BF, 245, 0, 37);
move(3.67, -2.78, 0.00); object(0x01BF, 245, 0, 37);
move(5.60, 6.38, 2.70); object(0x01BF, 245, 0, 36);
move(3.61, 4.83, 1.30); object(0x01BF, 90, 0, 217);
move(-4.63, 3.49, 0.00); object(0x01BF, 90, 0, 217);
move(7.67, -5.78, 0.00); object(0x01BF, 90, 0, 217);
move(3.00, 3.98, 0.00); object(0x01BF, 90, 0, 217);
move(-5.19, 3.91, 0.00); object(0x01BF, 90, 0, 217);
move(-2.55, 1.93, 0.00); object(0x01BF, 90, 0, 217);
move(3.38, -17.44, 1.30); object(0x01BF, 90, 160, 126);
move(-11.74, 8.67, 0.00); object(0x01BF, 90, 160, 126);
move(16.29, -2.47, -1.30); object(0x01BF, 90, 180, 307);
move(2.14, 2.80, 0.00); object(0x01BF, 90, 180, 307);
move(-14.75, 4.59, 0.00); object(0x01BF, 90, 180, 308);
move(3.41, 4.31, 0.00); object(0x01BF, 90, 180, 308);
move(-10.58, -15.12, 2.60); object(0x01BF, 90, 180, 215);
move(5.66, -3.95, 0.00); object(0x01BF, 90, 180, 215);
move(5.33, -3.72, 0.00); object(0x01BF, 90, 180, 215);
move(-3.34, 6.92, 0.00); object(0x01BF, 90, 180, 36);
move(0.18, -9.28, 1.80); object(0x01F3, 175, 180, 216);
move(-8.13, 5.82, 0.00); object(0x01F3, 175, 180, 216);
move(-0.30, 1.33, 0.00); object(0x01F3, 175, 180, 35);
move(8.23, -5.69, 0.00); object(0x01F3, 175, 180, 35);
move(9.40, -9.85, -56.80); object(0x01F3, 180, 180, 10);
move(-4.01, 5.26, 55.50); object(0x01F0, 180, 180, 125);
move(1.76, 2.55, 0.00); object(0x01F0, 180, 180, 125);
move(7.26, 20.98, -2.20); object(0x01F1, 90, 180, 39);
move(3.82, -2.96, -0.90); object(0x01F0, 180, 180, 39);
move(-11.74, 9.49, 0.00); object(0x01F0, 180, 180, 39);
move(-8.00, -12.96, 3.00); object(0x01F0, 180, 180, 308);
move(-9.05, -1.60, -0.20); object(0x01F0, 180, 180, 308);
move(1.89, 2.46, 0.00); object(0x01F0, 180, 180, 308);
move(7.60, 12.70, -53.80); object(0x020F, 180, 180, 37);
move(1.92, -13.90, 43.80); object(0x020C, 180, 180, 215);
move(-0.01, -0.00, -0.70); object(0x021C, 180, 180, 216);
move(8.61, 9.34, -0.60); object(0x021C, 180, 180, 265);
move(-0.57, 0.40, 0.00); object(0x021C, 180, 180, 265);
move(-0.82, 0.57, 0.00); object(0x021C, 180, 180, 265);
move(-0.41, 0.29, 0.00); object(0x021C, 180, 180, 265);
move(-0.57, 0.40, 0.00); object(0x021C, 180, 180, 265);
move(-0.49, 0.34, 0.00); object(0x021C, 180, 180, 265);
move(-0.49, 0.34, 0.00); object(0x021C, 180, 180, 265);
move(-0.49, 0.34, 0.00); object(0x021C, 180, 180, 265);
move(-0.49, 0.34, 0.00); object(0x021C, 180, 180, 265);
move(-0.66, 0.46, 0.00); object(0x021C, 180, 180, 265);
move(-0.57, 0.39, 0.00); object(0x021C, 180, 180, 265);
move(0.23, -0.86, 0.90); object(0x0115, 180, 180, 20);
move(1.36, 0.15, -0.20); object(0x0119, 180, 180, 20);
move(0.65, -0.87, 0.10); object(0x011D, 180, 180, 25);
move(0.90, -0.64, 0.00); object(0x011F, 180, 180, 25);
move(1.71, -1.22, 0.00); object(0x0120, 180, 180, 25);
move(-4.57, -9.21, 11.10); object(0x021A, 180, 180, 316);
move(1.31, 2.07, -9.90); object(0x020A, 180, 180, 301);
move(3.50, -6.59, -1.20); object(0x0F35, 180, 180, 36);
move(-13.16, 6.26, -0.20); object(0x0F34, 180, 180, 217);
move(2.41, 3.15, 0.00); object(0x0F34, 180, 180, 218);
move(1.81, 2.33, 0.00); object(0x0F34, 180, 180, 218);
move(-0.98, -1.02, 2.10); object(0x0F34, 180, 180, 219);
move(2.92, -0.84, 0.00); object(0x0F34, 180, 180, 180);
move(14.69, -8.28, -22.70); object(0x0E4E, 180, 180, 305);
move(-1.21, 3.20, 2.30); object(0x0E4F, 180, 180, 315);
teleport(1643.57, -377.06, 41.02)
setfloat(0x95918B0, 0, -1, 0);
setfloat(0x95918C0, 1, 0, 0);
setfloat(0x95918D0, 0, 0, 1);
setfloat(0x95918E0, 119.97, -1512.77, 215.98);
setshort(0x9591908, 0x16b);
setfloat(0x9591910, 0, -1, 0);
setfloat(0x9591920, 1, 0, 0);
setfloat(0x9591930, 0, 0, 1);
setfloat(0x9591940, 124.57, -1512.77, 215.98);
setshort(0x9591968, 0x16b);
setfloat(0x9591970, 0, 1, 0);
setfloat(0x9591980, -1, 0, 0);
setfloat(0x9591990, 0, 0, 1);
setfloat(0x95919A0, 72.20, -1507.88, 215.98);
setshort(0x95919C8, 0x16b);
setfloat(0x95919D0, 0, 1, 0);
setfloat(0x95919E0, -1, 0, 0);
setfloat(0x95919F0, 0, 0, 1);
setfloat(0x9591A00, 67.83, -1507.88, 215.98);
setshort(0x9591A28, 0x16b);
setfloat(0x9591A30, 1, 0, 0);
setfloat(0x9591A40, 0, 1, 0);
setfloat(0x9591A50, 0, 0, 1);
setfloat(0x9591A60, 126.55, -1539.63, 216.98);
setshort(0x9591A88, 0xcd7);
setfloat(0x9591A90, 1, 0, 0);
setfloat(0x9591AA0, 0, 1, 0);
setfloat(0x9591AB0, 0, 0, 1);
setfloat(0x9591AC0, 78.80, -1530.77, 216.98);
setshort(0x9591AE8, 0xcd7);
setfloat(0x9591AF0, 1, 0, 0);
setfloat(0x9591B00, 0, 1, 0);
setfloat(0x9591B10, 0, 0, 1);
setfloat(0x9591B20, 74.77, -1530.77, 216.98);
setshort(0x9591B48, 0xcd7);
setfloat(0x9591B50, 1, 0, 0);
setfloat(0x9591B60, 0, 1, 0);
setfloat(0x9591B70, 0, 0, 1);
setfloat(0x9591B80, 70.77, -1530.77, 216.98);
setshort(0x9591BA8, 0xcd7);
setfloat(0x9591C70, 1, 0, 0);
setfloat(0x9591C80, 0, 1, 0);
setfloat(0x9591C90, 0, 0, 1);
setfloat(0x9591CA0, 66.77, -1530.77, 216.98);
setshort(0x9591CC8, 0xcd7);
setfloat(0x9591CD0, 1, 0, 0);
setfloat(0x9591CE0, 0, 1, 0);
setfloat(0x9591CF0, 0, 0, 1);
setfloat(0x9591D00, 62.77, -1530.77, 216.98);
setshort(0x9591D28, 0xcd7);
setfloat(0x9591D30, 1, 0, 0);
setfloat(0x9591D40, 0, 1, 0);
setfloat(0x9591D50, 0, 0, 1);
setfloat(0x9591D60, 58.77, -1530.77, 216.98);
setshort(0x9591D88, 0xcd7);
setfloat(0x9591D90, 1, 0, 0);
setfloat(0x9591DA0, 0, 1, 0);
setfloat(0x9591DB0, 0, 0, 1);
setfloat(0x9591DC0, 54.77, -1530.77, 216.98);
setshort(0x9591DE8, 0xcd7);
setfloat(0x9591DF0, 1, 0, 0);
setfloat(0x9591E00, 0, 1, 0);
setfloat(0x9591E10, 0, 0, 1);
setfloat(0x9591E20, 60.23, -1488.82, 216.98);
setshort(0x9591E48, 0x251);
setfloat(0x9591EB0, 1, 0, 0);
setfloat(0x9591EC0, 0, 1, 0);
setfloat(0x9591ED0, 0, 0, 1);
setfloat(0x9591EE0, 78.91, -1529.72, 216.98);
setshort(0x9591F08, 0x251);
setfloat(0x9591F10, 1, 0, 0);
setfloat(0x9591F20, 0, 1, 0);
setfloat(0x9591F30, 0, 0, 1);
setfloat(0x9591F40, 75.10, -1530.02, 216.98);
setshort(0x9591F68, 0x251);
setfloat(0x9591F70, 1, 0, 0);
setfloat(0x9591F80, 0, 1, 0);
setfloat(0x9591F90, 0, 0, 1);
setfloat(0x9591FA0, 70.94, -1530.10, 216.98);
setshort(0x9591FC8, 0x251);
setfloat(0x9591FD0, 1, 0, 0);
setfloat(0x9591FE0, 0, 1, 0);
setfloat(0x9591FF0, 0, 0, 1);
setfloat(0x9592000, 66.73, -1530.10, 216.98);
setshort(0x9592028, 0x251);
setfloat(0x9592030, 1, 0, 0);
setfloat(0x9592040, 0, 1, 0);
setfloat(0x9592050, 0, 0, 1);
setfloat(0x9592060, 62.84, -1530.10, 216.98);
setshort(0x9592088, 0x251);
setfloat(0x9592090, 1, 0, 0);
setfloat(0x95920A0, 0, 1, 0);
setfloat(0x95920B0, 0, 0, 1);
setfloat(0x95920C0, 58.67, -1530.10, 216.98);
setshort(0x95920E8, 0x251);
setfloat(0x95920F0, 1, 0, 0);
setfloat(0x9592100, 0, 1, 0);
setfloat(0x9592110, 0, 0, 1);
setfloat(0x9592120, 58.67, -1530.1, 216.98);
setshort(0x9592148, 0x251);
setfloat(0x95916D0, 0, -1, 0);
setfloat(0x95916E0, 1, 0, 0);
setfloat(0x95916F0, 0, 0, 1);
setfloat(0x9591700, 76.71, -1530.64, 216.98);
setshort(0x9591728, 0xe4e);
setfloat(0x9591730, 0, -1, 0);
setfloat(0x9591740, 1, 0, 0);
setfloat(0x9591750, 0, 0, 1);
setfloat(0x9591760, 68.79, -1530.64, 216.98);
setshort(0x9591788, 0xe4e);
setfloat(0x9591790, 0, -1, 0);
setfloat(0x95917A0, 1, 0, 0);
setfloat(0x95917B0, 0, 0, 1);
setfloat(0x95917C0, 64.77, -1530.64, 216.98);
setshort(0x95917E8, 0xe4e);
setfloat(0x95917F0, 0, -1, 0);
setfloat(0x9591800, 1, 0, 0);
setfloat(0x9591810, 0, 0, 1);
setfloat(0x9591820, 60.71, -1530.64, 216.98);
setshort(0x9591848, 0xe4e);
setfloat(0x95916D0, 0, 1, 0);
setfloat(0x95916E0, -1, 0, 0);
setfloat(0x95916F0, 0, 0, 1);
setfloat(0x9591700, 72.84, -1530.64, 216.98);
setshort(0x9591728, 0xe4f);
setfloat(0x9591730, 0, 1, 0);
setfloat(0x9591740, -1, 0, 0);
setfloat(0x9591750, 0, 0, 1);
setfloat(0x9591760, 81.07, -1530.64, 216.98);
setshort(0x9591788, 0xe4f);
setfloat(0x9591790, 0, 1, 0);
setfloat(0x95917A0, -1, 0, 0);
setfloat(0x95917B0, 0, 0, 1);
setfloat(0x95917C0, 81.07, -1526.66, 216.98);
setshort(0x95917E8, 0xe4f);
setfloat(0x95917F0, 0, 1, 0);
setfloat(0x9591800, -1, 0, 0);
setfloat(0x9591810, 0, 0, 1);
setfloat(0x9591820, 81.07, -1522.66, 216.98);
setshort(0x9591848, 0xe4f);
setfloat(0x9591850, 0, 1, 0);
setfloat(0x9591860, -1, 0, 0);
setfloat(0x9591870, 0, 0, 1);
setfloat(0x9591880, 81.07, -1518.66, 216.98);
setshort(0x95918A8, 0xe4f);
setfloat(0x95918B0, 0, 1, 0);
setfloat(0x95918C0, -1, 0, 0);
setfloat(0x95918D0, 0, 0, 1);
setfloat(0x95918E0, 81.07, -1514.66, 216.98);
setshort(0x9591908, 0xe4f);
setfloat(0x9591910, 0, 1, 0);
setfloat(0x9591920, -1, 0, 0);
setfloat(0x9591930, 0, 0, 1);
setfloat(0x9591940, 81.07, -1510.66, 216.98);
setshort(0x9591968, 0xe4f);
setfloat(0x9591970, 0, 1, 0);
setfloat(0x9591980, -1, 0, 0);
setfloat(0x9591990, 0, 0, 1);
setfloat(0x95919A0, 81.07, -1506.66, 216.98);
setshort(0x95919C8, 0xe4f);
setfloat(0x95919D0, 0, 1, 0);
setfloat(0x95919E0, -1, 0, 0);
setfloat(0x95919F0, 0, 0, 1);
setfloat(0x9591A00, 81.07, -1502.66, 216.98);
setshort(0x9591A28, 0xe4f);
setfloat(0x9591A30, 0, 1, 0);
setfloat(0x9591A40, -1, 0, 0);
setfloat(0x9591A50, 0, 0, 1);
setfloat(0x9591A60, 81.07, -1498.66, 216.98);
setshort(0x9591A88, 0xe4f);
setfloat(0x9591A90, 0, 1, 0);
setfloat(0x9591AA0, -1, 0, 0);
setfloat(0x9591AB0, 0, 0, 1);
setfloat(0x9591AC0, 81.07, -1494.66, 216.98);
setshort(0x9591AE8, 0xe4f);
setfloat(0x9591C10, 0, 1, 0);
setfloat(0x9591C20, -1, 0, 0);
setfloat(0x9591C30, 0, 0, 1);
setfloat(0x9591C40, 81.07, -1482.66, 216.98);
setshort(0x9591C68, 0xe4f);
setfloat(0x9591C70, 0, 1, 0);
setfloat(0x9591C80, -1, 0, 0);
setfloat(0x9591C90, 0, 0, 1);
setfloat(0x9591CA0, 76.70, -1530.82, 216.98);
setshort(0x9591CC8, 0xe4f);
setfloat(0x9591CD0, 0, 1, 0);
setfloat(0x9591CE0, -1, 0, 0);
setfloat(0x9591CF0, 0, 0, 1);
setfloat(0x9591D00, 68.79, -1530.82, 216.98);
setshort(0x9591D28, 0xe4f);
setfloat(0x9591D30, 0, 1, 0);
setfloat(0x9591D40, -1, 0, 0);
setfloat(0x9591D50, 0, 0, 1);
setfloat(0x9591D60, 64.79, -1530.82, 216.98);
setshort(0x9591D88, 0xe4f);
setfloat(0x9591D90, 0, 1, 0);
setfloat(0x9591DA0, -1, 0, 0);
setfloat(0x9591DB0, 0, 0, 1);
setfloat(0x9591DC0, 60.79, -1530.82, 216.98);
setshort(0x9591DE8, 0xe4f);
setfloat(0x9591DF0, 0, 1, 0);
setfloat(0x9591E00, -1, 0, 0);
setfloat(0x9591E10, 0, 0, 1);
setfloat(0x9591E20, 56.79, -1530.82, 216.98);
setshort(0x9591E48, 0xe4f);
teleport(99.57, -1504.74, 216.98)
moveto(286.80, -456.46, 26.72); object(0x01BF, 0, 0, 271);
move(-0.38, 9.36, 0.00); object(0x01BF, 0, 0, 271);
move(18.70, -21.95, -1.00); object(0x01BF, 35, 0, 190);
move(-0.49, -3.03, 4.70); object(0x01BF, 35, 0, 190);
move(-1.14, -5.21, 3.10); object(0x01BF, 85, 0, 190);
move(-8.33, 0.62, 0.00); object(0x01BF, 85, 0, 279);
move(-4.38, 2.33, 1.40); object(0x01BF, 85, 0, 275);
move(-0.53, -3.84, 1.80); object(0x01BF, 45, 0, 185);
move(0.40, -6.19, 1.50); object(0x01BF, 95, 0, 174);
move(0.71, -6.87, -0.70); object(0x01BF, 95, 0, 174);
move(0.61, -5.86, 0.00); object(0x01BF, 85, 0, 174);
move(0.48, -4.63, 0.80); object(0x01BF, 45, 0, 174);
move(0.48, -4.71, 4.80); object(0x01BF, 45, 0, 174);
move(0.55, -5.96, 2.60); object(0x01BF, 85, 0, 175);
move(0.69, -5.83, 0.60); object(0x01BF, 85, 0, 174);
move(7.69, 1.54, 0.00); object(0x01BF, 85, 0, 77);
move(2.32, -6.24, 0.20); object(0x01BF, 85, 0, 176);
move(7.89, 0.10, -0.40); object(0x01BF, 90, 0, 82);
move(0.27, -7.03, 0.00); object(0x01BF, 90, 0, 173);
move(0.80, -6.62, 0.00); object(0x01BF, 90, 0, 173);
move(0.74, -6.06, 0.00); object(0x01BF, 90, 0, 173);
move(0.86, -7.08, 0.00); object(0x01BF, 90, 0, 173);
move(0.89, -7.34, 0.00); object(0x01BF, 90, 0, 173);
move(0.67, -5.51, 0.00); object(0x01BF, 90, 0, 173);
move(0.69, -5.72, 0.00); object(0x01BF, 90, 0, 173);
move(0.69, -5.66, 0.00); object(0x01BF, 90, 0, 173);
move(0.50, -5.20, 0.00); object(0x01BF, 90, 0, 175);
move(0.46, -5.51, 0.00); object(0x01BF, 90, 0, 175);
move(0.43, -5.21, 0.00); object(0x01BF, 90, 0, 175);
move(0.54, -6.54, 0.00); object(0x01BF, 90, 0, 175);
move(0.40, -4.90, 0.00); object(0x01BF, 90, 0, 175);
move(0.38, -4.66, 0.00); object(0x01BF, 90, 0, 175);
move(0.48, -5.92, 0.00); object(0x01BF, 90, 0, 175);
move(0.48, -5.91, 0.00); object(0x01BF, 90, 0, 175);
move(0.46, -5.59, 0.00); object(0x01BF, 90, 0, 175);
move(-6.78, -0.11, 0.00); object(0x01BF, 90, 0, 265);
move(-5.52, -0.52, 0.00); object(0x01BF, 90, 0, 265);
move(-5.34, -0.51, 0.00); object(0x01BF, 90, 0, 265);
move(-5.99, -0.57, 0.00); object(0x01BF, 90, 0, 265);
move(-6.68, -0.63, 0.00); object(0x01BF, 90, 0, 265);
move(1.34, -6.85, 0.00); object(0x01BF, 90, 0, 173);
move(0.27, -6.70, 0.00); object(0x01BF, 90, 0, 174);
move(-6.85, 0.06, -0.90); object(0x01BF, 105, 0, 264);
move(-6.88, 0.13, -1.70); object(0x01BF, 105, 0, 264);
move(-5.89, -0.85, -2.80); object(0x01BF, 125, 0, 263);
move(-4.52, -0.59, -3.20); object(0x01BF, 125, 0, 263);
move(-4.62, -0.60, -3.40); object(0x01BF, 125, 0, 263);
move(-6.69, 0.75, 0.50); object(0x01BF, 70, 0, 265);
move(-5.84, 0.22, 2.30); object(0x01BF, 70, 0, 266);
move(-6.87, -0.26, 1.30); object(0x01BF, 95, 0, 84);
move(-6.61, -0.93, -0.10); object(0x01BF, 95, 0, 264);
move(-4.03, -0.45, -0.40); object(0x01BF, 95, 0, 264);
move(3.10, 7.72, 0.00); object(0x01BF, 95, 0, 346);
move(-1.61, 5.91, -0.40); object(0x01BF, 95, 0, 346);
move(-1.39, 5.54, -0.30); object(0x01BF, 95, 0, 346);
move(-1.55, 5.99, -0.60); object(0x01BF, 95, 0, 345);
move(-6.01, -4.24, -0.30); object(0x01BF, 95, 0, 267);
move(-6.02, -0.13, -0.10); object(0x01BF, 95, 0, 89);
move(-1.86, -1.88, 0.00); object(0x01BF, 145, 0, 90);
move(-4.44, 0.19, 3.20); object(0x01BF, 90, 0, 265);
move(-7.01, -1.24, 0.40); object(0x01BF, 90, 0, 262);
move(-6.81, -0.93, 0.00); object(0x01BF, 90, 0, 265);
move(-7.40, -0.46, 0.00); object(0x01BF, 90, 0, 267);
move(-6.17, 0.33, 0.00); object(0x01BF, 90, 0, 273);
move(-5.94, 0.31, 0.00); object(0x01BF, 90, 0, 273);
move(-5.82, 0.30, 0.00); object(0x01BF, 90, 0, 273);
move(-5.08, 0.26, 0.00); object(0x01BF, 90, 0, 273);
move(-6.16, 0.31, 0.00); object(0x01BF, 90, 0, 273);
move(-6.61, 0.33, 0.00); object(0x01BF, 90, 0, 273);
move(-6.63, 0.49, 0.00); object(0x01BF, 90, 0, 277);
move(-6.77, 0.86, 0.00); object(0x01BF, 90, 0, 277);
move(-6.90, 0.81, 0.00); object(0x01BF, 90, 0, 277);
move(-0.10, -6.68, 0.00); object(0x01BF, 90, 0, 198);
move(-1.92, -4.69, 0.00); object(0x01BF, 90, 0, 200);
move(-2.04, -5.50, 0.00); object(0x01BF, 90, 0, 200);
move(-2.06, -5.55, 0.00); object(0x01BF, 90, 0, 200);
move(-1.57, -4.24, 0.00); object(0x01BF, 90, 0, 200);
move(-1.95, -5.33, 0.00); object(0x01BF, 90, 0, 200);
move(-1.83, -4.80, -0.10); object(0x01BF, 90, 0, 19);
move(-1.56, -5.48, -1.60); object(0x01BF, 65, 0, 21);
move(-1.73, -4.43, -3.30); object(0x01BF, 55, 0, 21);
move(-1.97, -5.05, -2.00); object(0x01BF, 90, 0, 21);
move(-2.77, -6.33, 0.00); object(0x01BF, 90, 0, 18);
move(-2.26, -6.03, 0.00); object(0x01BF, 90, 0, 19);
move(-1.92, -5.63, 0.00); object(0x01BF, 90, 0, 0);
move(0.20, -4.00, 0.60); object(0x01BF, 110, 0, 359);
move(0.03, -4.42, 1.50); object(0x01BF, 110, 0, 359);
move(0.31, -4.72, 1.60); object(0x01BF, 110, 0, 357);
move(-0.21, -0.04, 1.50); object(0x01BF, 130, 0, 355);
move(0.28, -3.73, 3.70); object(0x01BF, 130, 0, 354);
move(0.44, -4.45, 4.10); object(0x01BF, 130, 0, 354);
move(0.16, -4.11, 3.80); object(0x01BF, 130, 0, 359);
move(-0.04, -3.97, 3.40); object(0x01BF, 130, 0, 356);
move(0.77, -6.07, 2.30); object(0x01BF, 95, 0, 355);
move(0.59, -6.34, 0.80); object(0x01BF, 95, 0, 355);
move(0.48, -5.22, 0.00); object(0x01BF, 95, 0, 355);
move(-6.10, -0.61, 0.40); object(0x01BF, 95, 0, 71);
move(-5.16, -1.81, 0.40); object(0x01BF, 95, 0, 71);
move(-6.35, -2.22, 0.10); object(0x01BF, 90, 0, 71);
move(-6.46, -2.26, 0.00); object(0x01BF, 90, 0, 71);
move(-6.11, -2.11, 0.00); object(0x01BF, 90, 0, 73);
move(-7.28, -2.22, 0.00); object(0x01BF, 90, 0, 73);
move(-6.43, -1.97, 0.00); object(0x01BF, 90, 0, 73);
move(-0.68, 7.94, 0.00); object(0x01BF, 90, 0, 162);
move(-2.11, 6.69, 0.00); object(0x01BF, 90, 0, 162);
move(-2.04, 6.47, 0.00); object(0x01BF, 90, 0, 162);
move(-1.31, 4.18, 0.00); object(0x01BF, 90, 0, 167);
move(-0.60, 5.39, 0.00); object(0x01BF, 90, 0, 186);
move(0.35, 3.37, 0.00); object(0x01BF, 90, 0, 186);
move(0.62, 5.77, 0.00); object(0x01BF, 90, 0, 185);
move(3.94, 0.48, 0.00); object(0x01BF, 90, 0, 273);
move(5.58, -0.33, 0.00); object(0x01BF, 90, 0, 273);
move(5.99, -0.35, 0.00); object(0x01BF, 90, 0, 273);
move(5.43, -0.32, 0.00); object(0x01BF, 90, 0, 273);
move(5.48, -0.32, 0.00); object(0x01BF, 90, 0, 273);
move(5.49, -0.32, 0.00); object(0x01BF, 90, 0, 273);
move(6.00, -0.35, 0.00); object(0x01BF, 90, 0, 273);
move(6.93, -0.40, 0.00); object(0x01BF, 90, 0, 273);
move(5.15, -0.30, 1.20); object(0x01BF, 120, 0, 273);
move(4.85, -0.28, 1.20); object(0x01BF, 90, 0, 273);
move(6.12, -0.36, 0.00); object(0x01BF, 90, 0, 273);
move(7.89, -0.46, 0.00); object(0x01BF, 90, 0, 273);
move(6.99, -0.40, 0.00); object(0x01BF, 90, 0, 273);
move(7.52, -0.43, 0.00); object(0x01BF, 90, 0, 273);
move(1.21, -0.17, 0.00); object(0x01BF, 90, 0, 272);
move(6.90, -0.21, 0.00); object(0x01BF, 90, 0, 272);
move(5.03, -0.14, 0.00); object(0x01BF, 90, 0, 272);
move(6.93, -0.19, 0.00); object(0x01BF, 90, 0, 272);
move(6.93, 0.42, 0.00); object(0x01BF, 90, 0, 185);
move(0.43, 5.02, -0.20); object(0x01BF, 90, 0, 185);
move(0.40, 4.91, 0.00); object(0x01BF, 90, 0, 185);
move(0.38, 4.72, -2.50); object(0x01BF, 40, 0, 185);
move(0.40, 4.90, -3.50); object(0x01BF, 55, 0, 185);
move(0.20, 2.60, -5.10); object(0x01BF, 0, 0, 185);
move(0.00, 0.00, -6.60); object(0x01BF, 0, 0, 185);
move(0.00, 0.00, -6.70); object(0x01BF, 0, 0, 185);
move(0.09, 1.03, -6.00); object(0x01BF, 60, 0, 185);
move(0.42, 5.11, -2.00); object(0x01BF, 90, 0, 185);
move(0.20, 2.45, 0.00); object(0x01BF, 0, 0, 185);
move(3.74, -1.99, 0.00); object(0x01BF, 0, 0, 274);
move(-7.43, 0.04, -0.40); object(0x01BF, 0, 0, 95);
teleport(305.42, -460.73, 24.16);

#cheat Portland Airport
//ID: 17810
//Score: 209
//Author: Ultimate Cheat Maker
//Category: Environment
//Description: Now new on GTA LCS the portland Airport!!! Located near the scrap-yard!!! This cheat includes; 3 Dodo's, runway, helipad, 4 helicopters, 5 cars, gates, entrance area, ticket booth, carpark, 999 forces, fire engine garage, police station, hospital and more
//Image: none
//Time: 30/09/2006 10:42:50
//Working: Yes
moveto(1433, -257, 50); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
moveto(1460.83, -243.15, 50.80); object(0x01F1, 270, 0, 270);
move(0.00, -16.10, 0.00); object(0x01F1, 270, 0, 270);
move(0.00, 8.20, 0.00); object(0x01F1, 270, 0, 270);
move(-9.51, -9.15, 0.00); object(0x01F1, 270, 0, 0);
move(8.59, 26.41, 0.00); object(0x01F1, 270, 0, 180);
move(0.70, -0.23, -0.20); object(0x020F, 0, 0, 180);
move(-7.10, -0.02, 0.00); object(0x020F, 0, 0, 180);
move(7.07, -5.98, 0.00); object(0x020F, 0, 0, 270);
move(0.05, -6.70, 0.00); object(0x020F, 0, 0, 270);
move(0.05, -6.60, 0.00); object(0x020F, 0, 0, 270);
move(-0.03, -6.50, 0.00); object(0x020F, 0, 0, 270);
move(-7.58, -0.07, 0.00); object(0x020F, 0, 0, 0);
move(1.17, 3.16, 0.00); object(0x0257, 0, 0, 181);
move(0.18, 19.78, 0.00); object(0x0257, 0, 0, 181);
move(2.78, 2.28, -0.10); object(0x0257, 0, 0, 270);
move(-0.14, -24.72, 0.00); object(0x0257, 0, 0, 90);
moveto(1459.54, -240.85, 50.81); object(0x0ECF, 0, 0, 270);
move(0.01, -0.80, 0.00); object(0x0ECF, 0, 0, 270);
move(-0.00, -0.40, -0.40); object(0x0ECB, 0, 270, 270);
move(-0.60, -0.01, 0.00); object(0x0ECB, 0, 270, 270);
move(-0.02, 1.60, 0.00); object(0x0ECB, 0, 270, 270);
move(0.59, 0.01, 0.00); object(0x0ECB, 0, 270, 270);
move(-1.37, -0.32, 0.50); object(0x0F03, 90, 0, 60);
move(0.95, -0.09, 0.00); object(0x0F74, 90, 0, 55);
move(0.06, -0.70, 0.00); object(0x0F75, 0, 0, 310);
move(-0.96, -0.08, 0.00); object(0x0F76, 0, 0, 310);
moveto(1456.97, -241.15, 50.16); object(0x1004, 0, 0, 130);
moveto(1433.01, -236.68, 54.50); object(0x01BF, 270, 0, 180);
move(7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 270, 0, 180);
move(7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(15.86, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
moveto(1432.79, -256.87, 52.18); object(0x0F95, 0, 0, 0);
move(7.30, -0.04, 0.00); object(0x0F8B, 0, 0, 0);
move(8.90, -0.05, 0.00); object(0x0F96, 0, 0, 0);
move(0.10, 19.79, 0.00); object(0x0F98, 0, 0, 180);
move(-7.10, 0.04, 0.00); object(0x0F99, 0, 0, 180);
move(-9.18, 0.03, 0.00); object(0x0F9A, 0, 0, 180);
//Seperators
moveto(1438.25, -237.43, 50.38); object(0x01BF, 0, 270, 90);
move(-1.90, 0.01, 0.00); object(0x01BF, 0, 270, 90);
move(9.05, -0.01, 0.00); object(0x01BF, 0, 270, 90);
move(-0.10, -19.37, 0.00); object(0x01BF, 0, 270, 270);
move(-1.50, 0.01, 0.00); object(0x01BF, 0, 270, 270);
move(-7.30, 0.03, 0.00); object(0x01BF, 0, 270, 270);
moveto(1433.25, -260.68, 51.10); object(0x01BF, 0, 0, 0);
move(8.00, 0.05, 0.00); object(0x01BF, 0, 0, 0);
move(7.30, -0.13, 0.00); object(0x01BF, 0, 0, 0);
moveto(1429.14, -237.04, 50.94); object(0x01BF, 0, 0, 90);
move(3.93, 3.77, 0.00); object(0x01BF, 0, 0, 180);
move(8.00, -0.00, 0.00); object(0x01BF, 0, 0, 180);
move(8.00, -0.00, 0.00); object(0x01BF, 0, 0, 180);
move(3.89, -3.96, 0.00); object(0x01BF, 0, 0, 270);
move(0.08, -13.10, 0.00); object(0x01BF, 0, 0, 270);
move(0.01, -8.00, 0.00); object(0x01BF, 0, 0, 270);
move(-3.94, -3.88, 0.00); object(0x01BF, 0, 0, 0);
move(-7.90, -0.01, 0.00); object(0x01BF, 0, 0, 0);
move(-8.00, 0.00, 0.00); object(0x01BF, 0, 0, 0);
move(-4.09, 3.86, 0.00); object(0x01BF, 0, 0, 90);
move(0.02, 13.30, 0.00); object(0x01BF, 0, 0, 90);
moveto(1433.21, -262.43, 52.01); object(0x045C, 0, 0, 269);
move(8.01, -0.00, 0.00); object(0x045C, 0, 0, 269);
move(8.01, -0.00, 0.00); object(0x045C, 0, 0, 269);
moveto(1433.38, -262.40, 48.88); object(0x045C, 180, 0, 271);
move(8.01, -0.00, 0.00); object(0x045C, 180, 0, 271);
move(8.01, -0.00, 0.00); object(0x045C, 180, 0, 271);
moveto(1428.96, -237.21, 51.86); object(0x045C, 0, 0, 359);
move(0.00, 0.00, -3.13); object(0x045C, 180, 0, 1);
move(0.00, -8.01, 0.00); object(0x045C, 180, 0, 1);
move(0.00, 0.00, 3.13); object(0x045C, 0, 0, 359);
moveto(1428.89, -258.33, 52.09); object(0x045C, 0, 0, 359);
move(0.00, 0.00, -3.13); object(0x045C, 180, 0, 1);
moveto(1449.07, -233.08, 51.78); object(0x045C, 0, 0, 89);
move(0.00, 0.00, -3.13); object(0x045C, 180, 0, 91);
move(-8.01, 0.00, 0.00); object(0x045C, 180, 0, 91);
move(-8.01, 0.00, 0.00); object(0x045C, 180, 0, 91);
move(0.00, 0.00, 3.13); object(0x045C, 0, 0, 89);
move(8.01, 0.00, 0.00); object(0x045C, 0, 0, 89);
moveto(1453.14, -237.13, 51.81); object(0x045C, 0, 0, 179);
move(0.08, -13.25, 0.00); object(0x045C, 0, 0, 179);
move(0.00, -7.91, 0.00); object(0x045C, 0, 0, 179);
move(0.00, 0.00, -3.13); object(0x045C, 180, 0, 181);
move(0.00, 8.01, 0.00); object(0x045C, 180, 0, 181);
move(0.00, 13.25, 0.00); object(0x045C, 180, 0, 181);
moveto(1452.41, -248.22, 54.61); object(0x01C3, 270, 10, 180);
move(-1.50, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.40, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.40, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.20, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.30, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.30, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.40, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.50, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.50, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.30, -0.01, -0.50); object(0x01C3, 270, 20, 180);
moveto(1429.32, -234.66, 55.41); object(0x01F1, 270, 0, 90);
move(0.10, -15.60, 0.00); object(0x01F1, 270, 0, 90);
move(0.79, -9.58, 0.00); object(0x01F1, 270, 0, 0);
move(20.40, 0.04, 0.00); object(0x01F1, 270, 0, 0);
move(-10.20, -0.02, 0.00); object(0x01F1, 270, 0, 0);
move(19.91, 1.04, 0.00); object(0x01F1, 270, 0, 270);
move(-0.02, 15.30, 0.00); object(0x01F1, 270, 0, 270);
move(-0.85, 9.68, 0.00); object(0x01F1, 270, 0, 180);
move(-20.60, -0.17, 0.00); object(0x01F1, 270, 0, 180);
move(10.30, 0.08, 0.00); object(0x01F1, 270, 0, 180);
moveto(1429.39, -243.63, 54.63); object(0x01EF, 0, 0, 90);
move(30.85, -6.39, 0.00); object(0x01EF, 0, 0, 270);
moveto(1425.72, -251.44, 49.95); object(0x01BF, 90, 0, 90);
move(-6.67, 0.02, -0.60); object(0x01BF, 80, 0, 90);
moveto(1429.08, -257.26, 50.93); object(0x01BF, 0, 0, 90);
move(-0.05, 2.14, 2.58); object(0x1002, 0, 0, 145);
move(-0.05, 7.50, 0.00); object(0x1002, 0, 0, 210);
moveto(1433.08, -240.78, 50.14); object(0x0239, 0, 0, 180);
move(8.50, -0.04, 0.00); object(0x0239, 0, 0, 0);
move(7.00, -0.03, 0.00); object(0x0239, 0, 0, 0);
move(0.69, -12.48, 0.00); object(0x0239, 0, 0, 180);
move(-9.40, 0.05, 0.00); object(0x0239, 0, 0, 0);
move(-6.60, -0.01, 0.00); object(0x0239, 0, 0, 180);
moveto(1437.92, -253.20, 51.34); object(0x0D0A, 0, 0, 180);
move(-2.80, 0.00, 0.00); object(0x0D0A, 0, 0, 45);
move(15.90, -0.00, 0.00); object(0x0D0A, 0, 0, 45);
move(-4.25, 12.22, 0.00); object(0x0D0A, 0, 0, 220);
move(-8.24, 0.03, 0.00); object(0x0D0A, 0, 0, 345);
move(-3.60, 0.22, 0.00); object(0x0D0A, 0, 0, 345);
move(2.54, 3.95, -0.10); object(0x0251, 0, 0, 180);
move(11.02, -9.82, 3.24); object(0x01F0, 0, 0, 180);
move(4.10, -0.02, 0.00); object(0x01F0, 0, 0, 180);
move(-7.94, -3.51, 0.00); object(0x01F0, 0, 0, 90);
move(0.01, 3.31, 0.00); object(0x01F0, 0, 0, 90);
move(4.77, -6.98, 0.00); object(0x01F0, 0, 0, 0);
move(-4.20, -0.02, 0.00); object(0x01F0, 0, 0, 0);
moveto(1419.02, -271.36, 48.01); object(0x01BF, 270, 0, 180);
move(8.00, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(0.00, -6.66, 0.00); object(0x01BF, 270, 0, 180);
move(-8.00, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(12.01, 6.64, -3.10); object(0x01BF, 180, 270, 270);
move(0.02, -6.60, 0.00); object(0x01BF, 180, 270, 270);
move(-3.24, -3.43, 0.00); object(0x01BF, 180, 270, 0);
move(-6.70, -0.03, 0.00); object(0x01BF, 180, 270, 0);
moveto(1422.41, -301.09, 48.78); object(0x01BF, 255, 0, 14);
move(1.30, 5.17, 2.00); object(0x01BF, 245, 0, 14);
move(1.21, 4.84, 2.90); object(0x01BF, 235, 0, 14);
setfloat(0x08e2d800, 1431, -256, 55.70);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
setfloat(0x08E2E400, 1433, -256, 55.70);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x124);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, 1435, -256, 55.70);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
setfloat(0x08e2d8c0, 1437, -256, 55.70);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, 1439, -256, 55.70);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, 1441, -256, 55.70);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, 1443, -256, 55.70);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, 1445, -256, 55.70);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
setfloat(0x08e2daa0, 1447, -256, 55.70);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
setfloat(0x08e2db00, 1449, -256, 55.70);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
setfloat(0x08E2DB60, 1451, -256, 55.70);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
setfloat(0x08E2DBC0, 1453, -256, 55.70);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
setfloat(0x08E2DC20, 1455, -256, 55.70);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
setfloat(0x08E2DC80, 1457, -256, 55.70);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
setfloat(0x08E2DCE0, 1431, -236, 55.70);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x10f);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
setfloat(0x08E2DD40, 1433, -236, 55.70);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
setfloat(0x08E2DDA0, 1435, -236, 55.70);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
setfloat(0x08E2DE00, 1437, -236, 55.70);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
setfloat(0x08E2DE60, 1439, -236, 55.70);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
setfloat(0x08E2DEC0, 1441, -236, 55.70);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
setfloat(0x08E2DF20, 1443, -236, 55.70);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0xff, 0xff);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
setfloat(0x08E2DF80, 1445, -236, 55.70);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0xff, 0xff);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
setfloat(0x08E2DFE0, 1447, -236, 55.70);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0xff, 0xff);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
setfloat(0x08E2E040, 1449, -236, 55.70);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0xff, 0xff);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
setfloat(0x08E2E0A0, 1451, -236, 55.70);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
setfloat(0x08E2E100, 1453, -236, 55.70);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0xff, 0xff);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
setfloat(0x08E2E160, 1455, -236, 55.70);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
setfloat(0x08E2E1C0, 1457, -236, 55.70);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
setfloat(0x08E2E220, 1431, -242, 55.70);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0xff, 0xff);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
setfloat(0x08E2E280, 1431, -244, 55.70);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0xff, 0xff);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
setfloat(0x08E2E2E0, 1431, -246, 55.70);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0xff, 0xff);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
setfloat(0x08E2E340, 1431, -248, 55.70);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0xff, 0xff);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
setfloat(0x08E2E3A0, 1431, -250, 55.70);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0xff, 0xff);
setshort(0x08E2E3C6, 0x122);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
setfloat(0x08E2E460, 1431, -252, 55.70);
setint(0x08E2E474, 0);
setchar(0x08E2E47C, 0xff, 0xff);
setshort(0x08E2E486, 0x22e);
setchar(0x08E2E492, 0x0f);
setchar(0x08E2E493, 0x00);
setchar(0x08E2D4B0, 0xff);
setfloat(0x08E2E4C0, 1431, -254, 55.70);
setint(0x08E2E4D4, 0);
setchar(0x08E2E4DC, 0xff, 0xff);
setshort(0x08E2E4E6, 0x24b);
setchar(0x08E2E4F2, 0x0f);
setchar(0x08E2E4F3, 0x00);
setchar(0x08E2D510, 0xff);
setint(0x08b89acc, 99999999);
setint(0x08b89ad0, 99999999);
setchar(0x08E4Eaf4, 189);
setchar(0x08E4Eaf4 + 0x18, 0x01);
setfloat(0x08E4Eaf8, 1401, -230, 51, 315);
setchar(0x08E4Eac8, 185);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 1402, -235, 51, 315);
setchar(0x08E4E9EC, 137);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 1403, -240, 51, 315);
setchar(0x08E4E9c0, 142);
setchar(0x08E4E9c0 + 0x18, 0x01);
setfloat(0x08E4E9c4, 1403, -245, 51, 315);
setchar(0x08E4Eba4, 205);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 1402, -250, 51, 315);
setchar(08E4Ecd8, 213);
setchar(08E4Ecd8 + 0x18, 0x01);
setfloat(08E4Ecdc, 1420, -271, 50, 67);
setchar(0x945cdf2, 0x4);
setchar(0x945cdf1, 0x50);
setchar(0x945cdf0, 0x52);
setshort(0x9444cd0, 250);
setfloat(0x9444ccc, 0.9489);
setfloat(0x945cd70, 3700);
setfloat(0x945cd78, 0.925);
setfloat(0x945ce30, 0.2875);
setfloat(0x945ce34, -0.275);
setfloat(0x945ce38, 0.4125);
setfloat(0x945cdfc, 1.55);
setfloat(0x945ce00, 1.55);
setfloat(0x945cdf4, 0.00363);
setfloat(0x945ce10, 0.7125);
setfloat(0x945ce14, 0);
setfloat(0x945ce18, 42.5);
setfloat(0x945ce28, 1.125);
setfloat(0x945ce2c, 0.11875);
setfloat(0x945ce44, 0.15);
setfloat(0x945ce3c, 0.4125);
setfloat(0x945cd90, 0);
setfloat(0x945cd94, 0.1);
setfloat(0x945cd98, -0.425);
setchar(0x945cda0, 10);
setfloat(0x945ce1c, 0.9125);
setfloat(0x945ce20, 0.45375);
setfloat(0x945cd7c, 0.007);
sethex(0x945ce40, 0x83, 0x81, 0x00, 0x07);
sethex(0x944fb40, 0x00, 0x00, 0x00);
sethex(0x944fb3c, 0xFF, 0x00, 0x00);
setint(0x8E38A38, 185);
setchar(0x8E38A5C, 120, 119);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(0x945a1e2, 0x5);
setchar(0x945a1e1, 0x50);
setchar(0x945a1e0, 0x34);
setshort(0x94409a0, 250);
setfloat(0x944099c, 0.90);
setfloat(0x945a160, 900);
setfloat(0x945a168, 1.35);
setfloat(0x945a220, 0.25);
setfloat(0x945a224, -0.225);
setfloat(0x945a228, 0.5);
setfloat(0x945a1ec, 1.4);
setfloat(0x945a1f0, 1.4);
setfloat(0x945a1e4, 0.00462);
setfloat(0x945a200, 0.51);
setfloat(0x945a204, 0);
setfloat(0x945a208, 40);
setfloat(0x945a218, 2.15625);
setfloat(0x945a21c, 0.19);
setfloat(0x945a234, 0.37);
setfloat(0x945a22c, 0.6);
setfloat(0x945a180, 0);
setfloat(0x945a184, -0.29999);
setfloat(0x945a188, -0.475);
setchar(0x945a190, 70);
setfloat(0x945a20c, 0.95625);
setfloat(0x945a210, 0.5);
setfloat(0x945a16c, 1.02857);
sethex(0x945a230, 0x03, 0x81, 0x20, 0x04);
sethex(0x944fb20, 0xCA, 0xDA, 0xCF);
sethex(0x944fb50, 0xCA, 0xDA, 0xCF);
setint(0x8E38A38, 142);
setchar(0x8E38A5C, 112, 124);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(0x945d1b2, 0x6);
setchar(0x945d1b1, 0x50);
setchar(0x945d1b0, 0x52);
setshort(0x9445310, 250);
setfloat(0x944530c, 0.725);
setfloat(0x945d130, 1400);
setfloat(0x945d138, 1.4);
setfloat(0x945d1f0, 0.2);
setfloat(0x945d1f4, -0.0125);
setfloat(0x945d1f8, 0.4);
setfloat(0x945d1bc, 1.2);
setfloat(0x945d1c0, 1.2);
setfloat(0x945d1b4, 0.0065);
setfloat(0x945d1d0, 0.45);
setfloat(0x945d1d4, 0);
setfloat(0x945d1d8, 40);
setfloat(0x945d1e8, 1.1);
setfloat(0x945d1ec, 0.075);
setfloat(0x945d204, 0.2);
setfloat(0x945d1fc, 0.3);
setfloat(0x945d150, 0);
setfloat(0x945d154, 0.3);
setfloat(0x945d158, -0.29999);
setchar(0x945d160, 75);
setfloat(0x945d1dc, 0.8);
setfloat(0x945d1e0, 0.45);
setfloat(0x945d13c, 0.85714);
sethex(0x945d200, 0x02, 0x81, 0x00, 0x06);
sethex(0x944fb34, 0x00, 0x00, 0x00);
sethex(0x944fb48, 0x00, 0x00, 0x00);
setint(0x8E38A38, 189);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(0x9459d32, 0x5);
setchar(0x9459d31, 0x50);
setchar(0x9459d30, 0x34);
setshort(0x94401d0, 250);
setfloat(0x94401cc, 1.6);
setfloat(0x9459cb0, 2500);
setfloat(0x9459cb8, 0.75);
setfloat(0x9459d70, 0.35);
setfloat(0x9459d74, -.7);
setfloat(0x9459d78, 0.5);
setfloat(0x9459d3c, 1);
setfloat(0x9459d40, 1);
setfloat(0x9459d34, 0.001);
setfloat(0x9459d50, 0.5);
setfloat(0x9459d54, 0);
setfloat(0x9459d58, 25);
setfloat(0x9459d68, 1.5);
setfloat(0x9459d6c, 1);
setfloat(0x9459d84, 0.28);
setfloat(0x9459d7c, 0);
setfloat(0x9459cd0, 0);
setfloat(0x9459cd4, 0);
setfloat(0x9459cd8, -1);
setchar(0x9459ce0, 80);
setfloat(0x9459d5c, 0.92);
setfloat(0x9459d60, 0.5);
setfloat(0x9459cbc, 0);
sethex(0x9459d80, 0x83, 0xc1, 0x00, 0x04);
sethex(0x944fb58, 0x00, 0x00, 0x00);
sethex(0x944fb48, 0xFF, 0xAA, 0x01);
setint(0x8E38A38, 137);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(0x945d482, 0x5);
setchar(0x945d481, 0x50);
setchar(0x945d480, 0x52);
setshort(0x9446c10, 255);
setfloat(0x9446c0c, 0.67);
setfloat(0x945d400, 500);
setfloat(0x945d408, 1.6);
setfloat(0x945d4c0, 0.15);
setfloat(0x945d4c4, -0.15999);
setfloat(0x945d4c8, 0.5);
setfloat(0x945d48c, 0.97867);
setfloat(0x945d490, 0.97867);
setfloat(0x945d484, 0.004);
setfloat(0x945d4a0, 0.5);
setfloat(0x945d4a4, 0);
setfloat(0x945d4a8, 35);
setfloat(0x945d4b8, 0.85);
setfloat(0x945d4bc, 0.15);
setfloat(0x945d4d4, 0);
setfloat(0x945d4cc, 0);
setfloat(0x945d420, 0);
setfloat(0x945d424, 0.05);
setfloat(0x945d428, -0.08999);
setchar(0x945d430, 103);
setfloat(0x945d4ac, 0.9);
setfloat(0x945d4b0, 0.48);
setfloat(0x945d40c, 0.6);
sethex(0x945d4d0, 0x02, 0x01, 0x01, 0x00);
sethex(0x944fb28, 0x6D, 0xFF, 0x00);
sethex(0x944fb2c, 0x77, 0xFF, 0x00);
setfloat(0x945d404, 850);
setint(0x8E38A38, 205);
sethex(0x8E38A5E, 0x01, 0x00);
off();
moveto(298.50, -475.50, 37.82); object(0x01BF, 270, 0, 88);
move(-7.16, -0.20, 0.10); object(0x01BF, 270, 0, 88);
move(-6.03, -0.17, 0.00); object(0x01BF, 270, 0, 88);
move(-5.80, -0.16, 0.00); object(0x01BF, 270, 0, 88);
move(-6.67, -0.18, 0.00); object(0x01BF, 270, 0, 88);
move(-2.90, -0.07, 0.00); object(0x01BF, 270, 0, 88);
move(27.73, 0.79, 0.10); object(0x01BF, 270, 0, 271);
move(4.03, -0.00, 0.00); object(0x01BF, 270, 0, 271);
move(6.47, -0.00, 0.00); object(0x01BF, 270, 0, 271);
move(5.82, -0.00, 0.00); object(0x01BF, 270, 0, 271);
move(-26.51, 7.36, -0.10); object(0x01BF, 270, 0, 269);
move(5.16, 0.10, 0.00); object(0x01BF, 270, 0, 269);
move(4.26, 0.09, 0.00); object(0x01BF, 270, 0, 269);
move(0.00, 0.00, 0.10); object(0x01BF, 270, 0, 269);
move(3.10, 0.06, 0.00); object(0x01BF, 270, 0, 269);
move(3.21, 0.07, 0.00); object(0x01BF, 270, 0, 269);
move(4.00, 0.08, 0.00); object(0x01BF, 270, 0, 269);
move(-18.86, 6.61, 0.00); object(0x01BF, 270, 0, 273);
move(2.32, -4.51, 0.00); object(0x01BF, 270, 0, 212);
move(2.30, 4.23, 0.00); object(0x01BF, 270, 0, 271);
move(5.31, -0.11, 0.00); object(0x01BF, 270, 0, 271);
move(3.80, -0.08, 0.00); object(0x01BF, 270, 0, 271);
move(5.62, -0.12, 0.00); object(0x01BF, 270, 0, 271);
move(-19.09, 6.50, 0.00); object(0x01BF, 270, 0, 275);
move(1.14, -0.29, 0.00); object(0x01BF, 270, 0, 271);
move(4.04, -0.02, 0.00); object(0x01BF, 270, 0, 271);
move(3.55, -0.02, 0.00); object(0x01BF, 270, 0, 271);
move(3.19, -0.02, 0.00); object(0x01BF, 270, 0, 271);
move(2.42, -0.01, 0.00); object(0x01BF, 270, 0, 271);
move(3.45, -0.02, 0.00); object(0x01BF, 270, 0, 271);
move(-18.86, 6.85, 0.00); object(0x01BF, 270, 0, 270);
move(4.14, 0.01, 0.00); object(0x01BF, 270, 0, 270);
move(4.83, 0.01, 0.00); object(0x01BF, 270, 0, 270);
move(4.89, 0.01, 0.00); object(0x01BF, 270, 0, 270);
move(4.28, 0.01, 0.00); object(0x01BF, 270, 0, 270);
move(-3.03, -0.01, 0.00); object(0x01BF, 270, 0, 270);
move(1.84, 0.01, 0.00); object(0x01BF, 270, 0, 270);
move(1.84, 0.01, 0.00); object(0x01BF, 270, 0, 270);
move(-18.38, 6.05, 0.00); object(0x01BF, 270, 0, 272);
move(4.29, -0.13, 0.00); object(0x01BF, 270, 0, 272);
move(3.89, -0.12, 0.00); object(0x01BF, 270, 0, 272);
move(4.84, -0.15, 0.00); object(0x01BF, 270, 0, 272);
move(4.42, -0.13, 0.00); object(0x01BF, 270, 0, 272);
move(2.21, -0.07, 0.00); object(0x01BF, 270, 0, 272);
move(-17.91, 7.51, 0.00); object(0x01BF, 270, 0, 269);
move(4.69, 0.11, 0.00); object(0x01BF, 270, 0, 269);
move(3.17, 0.07, 0.00); object(0x01BF, 270, 0, 269);
move(3.91, -1.01, 0.00); object(0x01BF, 270, 0, 269);
move(-0.07, 2.80, 0.00); object(0x01BF, 270, 0, 269);
move(-11.32, 1.03, 0.00); object(0x01BF, 270, 0, 269);
move(3.88, 0.09, 0.00); object(0x01BF, 270, 0, 269);
move(2.04, 0.05, 0.00); object(0x01BF, 270, 0, 269);
move(-7.36, -0.17, 0.00); object(0x01BF, 270, 0, 269);
move(15.03, 0.35, 0.00); object(0x01BF, 270, 0, 269);
move(2.24, 0.05, 0.00); object(0x01BF, 270, 0, 269);
move(0.20, -1.29, 0.00); object(0x01BF, 270, 0, 254);
move(0.48, -1.63, 0.00); object(0x01BF, 270, 0, 254);
move(3.39, -5.51, 0.00); object(0x01BF, 270, 0, 101);
move(-16.89, -41.74, -1.30); object(0x01BF, 250, 0, 357);
move(2.77, -5.44, -1.20); object(0x01BF, 250, 0, 27);
move(-2.50, 1.26, -0.40); object(0x01BF, 250, 0, 357);
move(13.50, 56.50, 5.00); object(0x01BF, 180, 0, 0);
#off
move(0.00, 0.00, 3.60); object(0x01BF, 180, 0, 0);
move(0.00, 0.00, 3.30); object(0x01BF, 180, 0, 0);
move(0.00, 0.00, 3.80); object(0x01BF, 180, 0, 0);
move(0.00, 0.00, 3.60); object(0x01BF, 180, 0, 0);
move(9.81, -44.42, -13.60); object(0x01BF, 180, 0, 90);
move(-0.19, -0.96, 0.00); object(0x01BF, 180, 0, 91);
move(0.00, 0.00, 4.50); object(0x01BF, 180, 0, 91);
move(0.32, 1.57, 0.00); object(0x01BF, 180, 0, 91);
move(-4.18, -5.38, -4.50); object(0x01BF, 180, 0, 180);
move(0.00, 0.00, 4.60); object(0x01BF, 180, 0, 180);
move(-6.92, -0.02, -4.50); object(0x01BF, 180, 0, 180);
move(0.00, 0.00, 4.60); object(0x01BF, 180, 0, 180);
move(-7.73, 0.00, -4.70); object(0x01BF, 180, 0, 180);
move(0.00, 0.00, 4.70); object(0x01BF, 180, 0, 180);
move(-7.95, -0.11, 0.00); object(0x01BF, 180, 0, 180);
move(-4.88, -0.00, -4.60); object(0x01BF, 180, 0, 180);
move(0.00, 0.00, 4.60); object(0x01BF, 180, 0, 180);
move(-6.84, -0.15, 0.00); object(0x01BF, 180, 0, 180);
move(0.05, 0.25, -4.00); object(0x01BF, 180, 0, 180);
move(-6.57, 0.12, 0.60); object(0x01BF, 180, 0, 181);
move(0.00, 0.00, 3.40); object(0x01BF, 180, 0, 181);
move(-4.13, 3.85, -4.10); object(0x01BF, 180, 0, 269);
move(0.00, 0.00, 4.10); object(0x01BF, 180, 0, 269);
move(11.68, 3.93, -7.60); object(0x01BF, 90, 0, 265);
move(2.30, -0.21, 0.00); object(0x01BF, 90, 0, 265);
move(-7.51, 0.28, 0.00); object(0x01BF, 90, 0, 265);
move(-3.49, -0.19, 0.00); object(0x01BF, 90, 0, 265);
move(0.96, -8.04, 1.30); object(0x01BF, 0, 0, 187);
#off
setfloat(0x08e2d800, 307.98, -436.38, 39.20);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1000000, 0x1000000);
setshort(0x08e2d826, 0x11C);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, 308.77, -440.28, 39.20);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1000000, 0x1000000);
setshort(0x08e2d826, 0x102);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, 308.77, -444.21, 39.20);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1000000, 0x1000000);
setshort(0x08e2d826, 0x109);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, 308.66, -447.42, 39.20);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1000000, 0x1000000);
setshort(0x08e2d826, 0x111);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, 308.41, -450.84, 39.20);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1000000, 0x1000000);
setshort(0x08e2d826, 0x118);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, 308.50, -450.58, 39.20);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1000000, 0x1000000);
setshort(0x08e2d826, 0x117);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setchar(0x08E4E9C0, 209);
setfloat(0x08E4E9C4, 272.41, -448.04, 39.10);
setfloat(0x08E4E9D0, 0);
#off
moveto(-214.68, 58.13, -1.02); object(0x01F3, 0, 0, 276);
move(-24.92, -14.45, 1.00); object(0x0270, 0, 0, 174);
move(-5.44, 3.94, -0.20); object(0x0270, 0, 0, 257);
move(9.88, 1.09, 0.00); object(0x0270, 0, 0, 91);
move(-5.01, 5.01, 0.00); object(0x0270, 0, 0, 0);
move(-11.30, -2.71, -0.20); object(0x0270, 0, 0, 147);
move(3.07, 3.23, 0.00); object(0x0270, 0, 0, 92);
move(-0.39, 5.29, 0.00); object(0x0270, 0, 0, 41);
move(8.57, 2.85, 0.00); object(0x0270, 0, 0, 99);
move(-4.61, -4.83, 0.00); object(0x0270, 0, 0, 179);
move(15.97, 21.37, 0.00); object(0x0270, 0, 0, 296);
move(-3.12, -4.40, 0.00); object(0x0270, 0, 0, 259);
move(-0.53, -4.41, 0.00); object(0x0270, 0, 0, 225);
move(-11.06, 0.28, 0.00); object(0x0270, 0, 0, 300);
move(-2.21, -6.42, 0.00); object(0x0270, 0, 0, 250);
move(-15.54, -4.57, -0.05); object(0x0270, 0, 0, 136);
move(2.72, 2.66, 0.00); object(0x0270, 0, 0, 136);
move(4.48, 6.50, 0.00); object(0x0270, 0, 0, 65);
move(3.87, -5.60, 0.00); object(0x0270, 0, 0, 113);
move(25.38, -12.91, 2.12); object(0x0257, 0, 0, 305);
move(-7.00, 3.49, 0.00); object(0x0257, 0, 0, 288);
move(-1.75, -3.72, -0.40); object(0x0257, 0, 0, 255);
move(2.28, -4.22, 0.00); object(0x0257, 0, 0, 204);
move(-9.54, -0.34, 0.00); object(0x0257, 0, 0, 242);
move(-1.74, 6.25, 0.00); object(0x0257, 0, 0, 308);
move(18.31, 5.86, 0.16); object(0x026C, 0, 0, 309);
move(3.70, 4.03, -0.40); object(0x026C, 0, 0, 0);
move(0.00, 12.50, -1.00); object(0x026C, 0, 0, 0);
move(-2.42, 3.17, 0.00); object(0x026C, 0, 0, 1);
move(-3.15, -3.12, -0.40); object(0x026C, 0, 0, 301);
move(-0.57, -3.89, 0.00); object(0x026C, 0, 0, 255);
move(4.16, -4.25, 0.00); object(0x026C, 0, 0, 189);
move(-5.96, -3.34, 0.00); object(0x026C, 0, 0, 211);
move(23.36, -0.69, -0.16); object(0x027C, 0, 0, 24);
move(4.10, -1.86, -0.30); object(0x027C, 0, 0, 24);
move(-7.51, 5.23, 0.00); object(0x027C, 0, 0, 24);
move(-3.29, 3.08, 0.00); object(0x027C, 0, 0, 4);
move(-2.78, 5.81, 0.00); object(0x027C, 0, 0, 71);
move(-3.12, 8.27, 0.00); object(0x027C, 0, 0, 356);
move(11.83, -41.12, 2.51); object(0x0369, 270, 180, 214);
move(-4.61, 3.24, 0.00); object(0x0369, 270, 180, 215);
move(-5.00, 3.45, 0.00); object(0x0369, 270, 180, 215);
move(-4.70, 3.17, 0.00); object(0x0369, 270, 180, 215);
move(-4.53, 3.01, 0.10); object(0x0369, 270, 180, 216);
move(74.66, -112.25, 15.17); object(0x01BF, 270, 85, 111);
move(5.30, -2.19, 0.00); object(0x01BF, 270, 85, 111);
move(3.95, 1.90, 0.00); object(0x01BF, 270, 270, 17);
move(2.07, 5.66, 0.00); object(0x01BF, 270, 270, 19);
move(-1.50, 4.72, 0.00); object(0x01BF, 270, 270, 299);
move(-4.12, 2.09, 0.00); object(0x01BF, 270, 270, 296);
move(-5.01, -1.35, 0.00); object(0x01BF, 270, 270, 211);
move(-3.90, -5.39, 0.14); object(0x01BF, 100, 90, 232);
move(11.03, 1.78, 3.80); object(0x01BF, 90, 0, 123);
move(-1.35, -5.57, 0.00); object(0x01BF, 90, 0, 117);
move(-5.46, 1.27, 0.00); object(0x01BF, 90, 0, 99);
move(2.28, 5.23, 0.00); object(0x01BF, 90, 0, 124);
move(-4.13, -4.21, 0.00); object(0x01BF, 90, 0, 123);
move(10.88, 1.62, 3.00); object(0x01BF, 0, 0, 121);
move(-2.70, -4.41, 0.00); object(0x01BF, 0, 0, 128);
move(1.62, 9.94, 0.00); object(0x01BF, 0, 0, 29);
move(-6.08, -1.50, -0.20); object(0x01BF, 0, 0, 322);
move(-2.04, -5.82, 0.00); object(0x01BF, 0, 0, 262);
move(2.84, 1.52, 3.10); object(0x01BF, 265, 0, 254);
move(0.83, -1.72, 0.00); object(0x01BF, 265, 0, 309);
move(3.05, 4.43, 0.20); object(0x01BF, 265, 0, 296);
move(-6.53, -16.77, -10.14); object(0x01BF, 265, 210, 101);
move(1.57, 7.09, 3.20); object(0x01BF, 265, 210, 111);
move(1.84, 12.15, -3.86); object(0x021C, 200, 205, 348);
move(1.28, -0.41, 0.00); object(0x021C, 200, 205, 5);
move(0.99, 0.17, 0.00); object(0x021C, 200, 205, 13);
move(2.94, -0.57, 0.00); object(0x021C, 200, 205, 39);
move(-0.95, 1.13, 0.00); object(0x021C, 200, 205, 22);
move(-1.92, 1.06, 0.00); object(0x021C, 200, 205, 356);
move(-0.70, 0.25, 0.00); object(0x021C, 200, 205, 348);
move(-1.48, -0.01, 0.00); object(0x021C, 200, 205, 331);
move(-1.41, -0.44, 0.00); object(0x021C, 200, 205, 314);
move(-60.70, 88.90, -14.41); object(0x01E0, 270, 180, 211);
move(-7.15, 4.59, 0.00); object(0x01E0, 270, 180, 212);
move(-7.07, 4.34, 0.30); object(0x01E0, 270, 180, 211);
move(-6.82, 4.57, -0.15); object(0x01E0, 270, 180, 215);

#cheat Big Mansion On Island
//ID: 17766
//Score: 218
//Author: Ultimate Cheat Maker
//Category: Environment
//Description: This cheat will teleport you to my mansion on an island built on the sea next to portland. It has 14 rooms, 3 bathrooms, 4 garages, parking spaces, ferrari 360, mclaren f1 more cars, helicopter pad +helicopter and more great mansion extras!!!!
//Image: none
//Time: 27/09/2006 21:13:56
//Working: Yes
moveto(40.32, -1670.00, 27.46); object(0x01BF, 0, 0, 177);
move(7.78, 0.55, 0.00); object(0x01BF, 0, 0, 176);
move(7.98, 0.57, 0.00); object(0x01BF, 0, 0, 176);
move(7.98, 0.57, 0.00); object(0x01BF, 0, 0, 176);
move(7.88, 0.56, 0.00); object(0x01BF, 0, 0, 176);
move(7.78, 0.55, 0.00); object(0x01BF, 0, 0, 176);
move(7.88, 0.56, 0.00); object(0x01BF, 0, 0, 176);
move(7.68, 0.55, 0.00); object(0x01BF, 0, 0, 176);
move(7.88, 0.56, 0.00); object(0x01BF, 0, 0, 176);
move(3.64, 4.18, 0.00); object(0x01BF, 0, 0, 87);
move(-0.37, 7.89, 0.00); object(0x01BF, 0, 0, 87);
move(-0.38, 7.99, 0.00); object(0x01BF, 0, 0, 87);
move(-0.37, 7.89, 0.00); object(0x01BF, 0, 0, 87);
move(-69.50, -28.66, 0.01); object(0x01BF, 0, 0, 264);
move(-0.85, 7.75, 0.00); object(0x01BF, 0, 0, 264);
move(-0.85, 7.75, 0.00); object(0x01BF, 0, 0, 264);
move(10.54, 9.90, -20.20); object(0x084C, 0, 0, 63);
move(16.10, 6.86, -9.60); object(0x082B, 0, 0, 68);
move(40.31, 0.43, 30.10); object(0x0211, 0, 0, 185);
move(-8.21, 2.47, 1.60); object(0x0211, 70, 0, 185);
move(-4.54, -5.84, -2.00); object(0x01BF, 0, 0, 91);
move(-0.14, -7.80, 0.00); object(0x01BF, 0, 0, 91);
move(-0.15, -8.00, 0.00); object(0x01BF, 0, 0, 91);
move(-0.12, -6.80, 0.00); object(0x01BF, 0, 0, 91);
move(-5.75, -3.39, 0.00); object(0x01BF, 0, 0, 91);
move(0.25, 13.80, 0.00); object(0x01BF, 0, 0, 91);
move(0.22, 12.00, 0.00); object(0x01BF, 0, 0, 91);
move(-4.30, -22.12, 0.00); object(0x01BF, 0, 0, 178);
move(-10.39, -0.46, 0.00); object(0x01BF, 0, 0, 178);
move(-7.69, -0.34, 0.00); object(0x01BF, 0, 0, 178);
move(-10.69, -0.47, 0.00); object(0x01BF, 0, 0, 178);
move(-6.99, -0.31, 0.00); object(0x01BF, 0, 0, 178);
move(-3.10, -0.14, 0.00); object(0x01BF, 0, 0, 178);
move(38.93, 7.73, 0.00); object(0x01BF, 0, 0, 180);
move(-7.60, -0.06, 0.00); object(0x01BF, 0, 0, 180);
move(-7.70, -0.07, 0.00); object(0x01BF, 0, 0, 180);
move(-7.70, -0.07, 0.00); object(0x01BF, 0, 0, 180);
move(-7.80, -0.07, 0.00); object(0x01BF, 0, 0, 180);
move(-6.10, -0.05, 0.00); object(0x01BF, 0, 0, 180);
move(37.11, 8.32, 0.00); object(0x01BF, 0, 0, 181);
move(-7.80, 0.17, 0.00); object(0x01BF, 0, 0, 181);
move(-11.30, 0.25, 0.00); object(0x01BF, 0, 0, 181);
move(-11.00, 0.24, 0.00); object(0x01BF, 0, 0, 181);
move(-7.90, 0.17, 0.00); object(0x01BF, 0, 0, 181);
move(-3.57, -3.78, 0.00); object(0x01BF, 0, 0, 87);
move(0.09, -1.70, 0.00); object(0x01BF, 0, 0, 87);
move(41.58, 9.12, 0.00); object(0x01BF, 0, 0, 181);
move(-7.90, 0.09, 0.00); object(0x01BF, 0, 0, 181);
move(-7.90, 0.09, 0.00); object(0x01BF, 0, 0, 181);
move(-7.70, 0.08, 0.00); object(0x01BF, 0, 0, 181);
move(-7.90, 0.09, 0.00); object(0x01BF, 0, 0, 181);
move(-6.70, 0.07, 0.00); object(0x01BF, 0, 0, 181);
move(38.29, 7.03, 0.00); object(0x01BF, 0, 0, 180);
move(-7.60, -0.02, 0.00); object(0x01BF, 0, 0, 180);
move(-7.80, -0.02, 0.00); object(0x01BF, 0, 0, 180);
move(-7.80, -0.02, 0.00); object(0x01BF, 0, 0, 180);
move(-7.80, -0.02, 0.00); object(0x01BF, 0, 0, 180);
move(-7.50, -0.02, 0.00); object(0x01BF, 0, 0, 180);
move(-7.04, -9.54, 0.00); object(0x01BF, 180, 0, 85);
move(-0.50, 5.68, 0.00); object(0x01BF, 180, 0, 85);
move(3.55, 3.80, 0.00); object(0x01BF, 0, 0, 180);
move(45.48, -6.71, 0.96); object(0x021C, 0, 0, 94);
move(0.04, 0.70, 0.00); object(0x021C, 0, 0, 94);
move(0.04, 0.70, 0.00); object(0x021C, 0, 0, 94);
move(0.04, 0.60, 0.00); object(0x021C, 0, 0, 94);
move(0.04, 0.70, 0.00); object(0x021C, 0, 0, 94);
move(0.04, 0.70, 0.00); object(0x021C, 0, 0, 94);
move(0.04, 0.70, 0.00); object(0x021C, 0, 0, 94);
move(0.05, 0.80, 0.00); object(0x021C, 0, 0, 94);
move(0.04, 0.70, 0.00); object(0x021C, 0, 0, 94);
move(0.03, 0.50, 0.00); object(0x021C, 0, 0, 94);
move(0.00, 0.00, -1.00); object(0x021C, 0, 0, 94);
move(-0.04, -0.70, 0.00); object(0x021C, 0, 0, 94);
move(-0.04, -0.60, 0.00); object(0x021C, 0, 0, 94);
move(-0.04, -0.60, 0.00); object(0x021C, 0, 0, 94);
move(-0.04, -0.70, 0.00); object(0x021C, 0, 0, 94);
move(-0.05, -0.80, 0.00); object(0x021C, 0, 0, 94);
move(-0.04, -0.60, 0.00); object(0x021C, 0, 0, 94);
move(-0.04, -0.60, 0.00); object(0x021C, 0, 0, 94);
move(-0.05, -0.80, 0.00); object(0x021C, 0, 0, 94);
move(-0.05, -0.80, 0.00); object(0x021C, 0, 0, 94);
move(-36.96, 3.51, -2.99); object(0x0369, 0, 0, 91);
move(-0.00, -0.40, 0.00); object(0x0369, 0, 0, 91);
move(-4.11, -12.39, 2.87); object(0x0F96, 0, 0, 90);
move(36.25, 0.51, -0.09); object(0x0F95, 0, 0, 272);
moveto(59.22, -1648.71, 27.42); object(0x01BF, 0, 0, 86);
move(0.05, -0.80, 0.00); object(0x01BF, 0, 0, 86);
move(0.94, -14.46, 0.00); object(0x01BF, 0, 0, 86);
move(0.04, -0.60, 0.00); object(0x01BF, 0, 0, 86);
move(19.35, 27.41, 3.31); object(0x01BF, 270, 0, 91);
move(-0.08, -8.01, 0.00); object(0x01BF, 270, 0, 91);
move(-0.05, -8.00, 0.00); object(0x01BF, 270, 0, 91);
move(-6.65, 0.13, 0.00); object(0x01BF, 270, 0, 91);
move(0.02, 7.90, 0.00); object(0x01BF, 270, 0, 91);
move(0.02, 7.90, 0.00); object(0x01BF, 270, 0, 91);
move(-6.70, 0.02, 0.00); object(0x01BF, 270, 0, 91);
move(-0.02, -7.90, 0.00); object(0x01BF, 270, 0, 91);
move(-0.02, -7.80, 0.00); object(0x01BF, 270, 0, 91);
move(-6.61, 0.02, 0.00); object(0x01BF, 270, 0, 91);
move(0.00, 8.00, 0.00); object(0x01BF, 270, 0, 91);
move(0.00, 7.90, 0.00); object(0x01BF, 270, 0, 91);
move(-6.44, -15.77, 0.00); object(0x01BF, 270, 0, 90);
move(-0.06, 7.90, 0.00); object(0x01BF, 270, 0, 90);
move(-0.06, 7.80, 0.00); object(0x01BF, 270, 0, 90);
moveto(39.97, -1666.26, 27.16); object(0x0F96, 0, 0, 87);
move(38.51, 3.29, 0.00); object(0x0F96, 0, 0, 267);
move(-14.77, -0.91, 0.11); object(0x01BF, 0, 0, 265);
move(0.13, -0.48, 0.00); object(0x01BF, 0, 0, 265);
moveto(46.90, -1657.48, -32.93); object(0x0204, 0, 0, 96);
move(-2.83, 1.20, 59.50); object(0x0204, 265, 325, 358);
move(35.48, -4.26, 4.10); object(0x01BF, 270, 0, 89);
move(-0.09, -2.77, 0.00); object(0x01BF, 270, 0, 89);
move(-6.76, -0.40, -0.00); object(0x01BF, 270, 0, 87);
move(0.22, 3.64, 0.00); object(0x01BF, 270, 0, 87);
move(-6.84, -0.54, 0.00); object(0x01BF, 270, 0, 89);
move(0.13, -3.40, 0.00); object(0x01BF, 270, 0, 88);
move(-6.41, -0.65, 0.00); object(0x01BF, 270, 0, 88);
move(-0.19, 6.91, 0.00); object(0x01BF, 270, 0, 88);
move(-6.45, -1.36, 0.00); object(0x01BF, 270, 0, 88);
move(0.13, -5.96, 0.00); object(0x01BF, 270, 0, 89);
move(-6.70, -0.43, 0.00); object(0x01BF, 270, 0, 89);
move(0.36, 3.38, 0.00); object(0x01BF, 270, 0, 87);
move(-0.42, 11.84, 0.00); object(0x01BF, 270, 0, 88);
move(-0.14, 7.95, 0.00); object(0x01BF, 270, 0, 88);
move(0.13, 5.22, 0.00); object(0x01BF, 270, 0, 88);
move(-6.15, -0.07, 0.00); object(0x01BF, 270, 0, 88);
move(0.31, -7.89, 0.00); object(0x01BF, 270, 0, 88);
move(0.44, -7.98, 0.00); object(0x01BF, 270, 0, 88);
move(-0.52, -7.88, 0.00); object(0x01BF, 270, 0, 88);
move(0.36, -4.73, 0.00); object(0x01BF, 270, 0, 88);
move(-4.47, 28.46, 0.00); object(0x01BF, 270, 0, 88);
move(0.67, -7.55, 0.00); object(0x01BF, 270, 0, 86);
move(0.58, -7.89, 0.00); object(0x01BF, 270, 0, 86);
move(0.59, -7.37, 0.00); object(0x01BF, 270, 0, 86);
move(0.15, -5.83, 0.00); object(0x01BF, 270, 0, 86);
moveto(42.63, -1637.26, 34.15); object(0x01BF, 0, 0, 86);
move(0.49, -7.69, 0.00); object(0x01BF, 0, 0, 86);
move(0.51, -7.89, 0.00); object(0x01BF, 0, 0, 86);
move(0.51, -7.89, 0.00); object(0x01BF, 0, 0, 86);
move(-10.65, 23.36, 0.00); object(0x01BF, 0, 0, 86);
move(0.54, -7.88, 0.00); object(0x01BF, 0, 0, 86);
move(0.51, -7.48, 0.00); object(0x01BF, 0, 0, 86);
move(0.54, -7.98, 0.00); object(0x01BF, 0, 0, 86);
move(0.37, -5.39, 0.00); object(0x01BF, 0, 0, 86);
move(2.86, 32.64, 0.00); object(0x01BF, 0, 0, 179);
move(-1.30, -0.03, 0.00); object(0x01BF, 0, 0, 179);
move(11.12, -24.98, 0.00); object(0x01BF, 0, 0, 0);
move(7.40, 0.05, 0.00); object(0x01BF, 0, 0, 0);
move(8.00, 0.05, 0.00); object(0x01BF, 0, 0, 0);
move(7.80, 0.05, 0.00); object(0x01BF, 0, 0, 0);
move(4.10, 0.03, 0.00); object(0x01BF, 0, 0, 0);
move(-27.69, 4.57, 0.00); object(0x01BF, 0, 0, 180);
move(7.80, -0.01, 0.00); object(0x01BF, 0, 0, 180);
move(11.40, -0.01, 0.00); object(0x01BF, 0, 0, 180);
move(8.00, -0.01, 0.00); object(0x01BF, 0, 0, 180);
move(3.70, -0.00, 0.00); object(0x01BF, 0, 0, 180);
move(-32.33, 20.48, 0.00); object(0x01BF, 0, 0, 179);
move(7.80, 0.20, 0.00); object(0x01BF, 0, 0, 179);
move(7.83, 0.20, 0.00); object(0x01BF, 0, 0, 180);
move(7.90, -0.05, 0.00); object(0x01BF, 0, 0, 180);
move(7.90, -0.05, 0.00); object(0x01BF, 0, 0, 180);
move(1.40, -0.01, 0.00); object(0x01BF, 0, 0, 180);
move(-16.64, -11.67, -47.60); object(0x039B, 0, 0, 282);
move(0.00, 0.00, 12.90); object(0x0369, 0, 0, 282);
moveto(73.61, -1646.74, -27.89); object(0x01C3, 0, 0, 80);
move(1.85, 2.28, 5.30); object(0x01C4, 0, 0, 80);
move(16.55, 7.45, 53.10); object(0x01BF, 270, 0, 270);
move(0.05, -8.00, 0.00); object(0x01BF, 270, 0, 270);
move(0.05, -7.80, 0.00); object(0x01BF, 270, 0, 270);
move(0.05, -7.90, 0.00); object(0x01BF, 270, 0, 270);
move(-0.50, -0.00, 0.00); object(0x01BF, 270, 0, 270);
move(-0.05, 7.60, 0.00); object(0x01BF, 270, 0, 270);
move(6.98, 16.14, 0.00); object(0x01BF, 270, 0, 270);
move(0.05, -7.90, 0.00); object(0x01BF, 270, 0, 270);
move(0.05, -7.90, 0.00); object(0x01BF, 270, 0, 270);
move(0.05, -7.90, 0.00); object(0x01BF, 270, 0, 270);
move(-39.47, 10.91, 3.60); object(0x01BF, 180, 0, 270);
move(-0.09, 7.90, 0.00); object(0x01BF, 180, 0, 270);
move(3.98, -7.65, 0.00); object(0x01BF, 180, 0, 270);
move(-0.12, 10.40, 0.00); object(0x01BF, 180, 0, 270);
move(-0.02, 2.00, 0.00); object(0x01BF, 180, 0, 270);
move(19.59, -12.55, 0.00); object(0x01BF, 180, 0, 270);
move(-0.08, 12.70, 0.00); object(0x01BF, 180, 0, 270);
move(3.54, -6.32, -3.60); object(0x01BF, 90, 0, 177);
moveto(102.26, -1636.99, 30.51); object(0x01BF, 270, 0, 269);
move(0.18, -8.12, 0.00); object(0x01BF, 270, 0, 267);
move(0.93, -7.66, 0.00); object(0x01BF, 270, 0, 267);
move(0.35, -7.79, 0.00); object(0x01BF, 270, 0, 267);
move(0.05, -1.20, 0.00); object(0x01BF, 270, 0, 267);
move(-6.38, -0.13, 0.00); object(0x01BF, 270, 0, 268);
move(-6.26, -0.21, -0.13); object(0x01BF, 270, 0, 267);
move(-51.61, -7.59, 3.77); object(0x01BF, 180, 0, 356);
move(7.98, 0.56, 0.00); object(0x01BF, 180, 0, 356);
move(7.78, 0.54, 0.00); object(0x01BF, 180, 0, 356);
move(7.98, 0.56, 0.00); object(0x01BF, 180, 0, 356);
move(7.88, 0.55, 0.00); object(0x01BF, 180, 0, 356);
move(7.58, 0.53, 0.00); object(0x01BF, 180, 0, 356);
move(3.70, 4.36, 0.00); object(0x01BF, 180, 0, 269);
move(3.36, 6.98, -3.70); object(0x01BF, 90, 0, 359);
move(-20.11, -3.16, -28.60); object(0x01E0, 90, 0, 324);
move(-0.99, -3.14, 1.10); object(0x01E0, 90, 0, 32);
move(-0.78, -1.50, 31.80); object(0x01E0, 180, 180, 267);
move(0.00, 0.00, 0.00); object(0x01E0, 180, 180, 267);
moveto(38.54, -1635.29, 32.05); object(0x0251, 0, 0, 0);
move(-2.56, -6.61, 0.00); object(0x0251, 0, 0, 359);
move(5.70, 0.06, 0.00); object(0x0251, 0, 0, 359);
move(-4.45, -4.42, 0.00); object(0x0251, 0, 0, 359);
move(3.53, -3.14, 0.00); object(0x0251, 0, 0, 359);
move(-2.78, -2.38, 0.00); object(0x0251, 0, 0, 359);
move(2.80, -7.02, -38.70); object(0x01C3, 0, 0, 359);
move(-4.16, 21.61, 43.90); object(0x01BF, 270, 0, 88);
move(0.29, -7.70, 0.00); object(0x01BF, 270, 0, 88);
move(0.29, -7.60, 0.00); object(0x01BF, 270, 0, 88);
move(0.29, -7.70, 0.00); object(0x01BF, 270, 0, 88);
move(1.39, -5.76, 0.00); object(0x01BF, 270, 0, 88);
move(5.56, 0.35, 0.00); object(0x01BF, 270, 0, 85);
move(-0.70, 7.77, 0.00); object(0x01BF, 270, 0, 85);
move(-0.69, 7.67, 0.00); object(0x01BF, 270, 0, 85);
move(-0.71, 7.87, 0.00); object(0x01BF, 270, 0, 85);
move(-0.49, 5.38, 0.00); object(0x01BF, 270, 0, 85);
move(6.38, -0.27, 0.00); object(0x01BF, 270, 0, 85);
move(0.65, -7.77, 0.00); object(0x01BF, 270, 0, 85);
move(0.67, -7.97, 0.00); object(0x01BF, 270, 0, 85);
move(0.66, -7.87, 0.00); object(0x01BF, 270, 0, 85);
move(0.35, -4.18, 0.00); object(0x01BF, 270, 0, 85);
move(5.98, 8.36, 0.00); object(0x01BF, 270, 0, 83);
move(0.16, -6.73, 0.00); object(0x01BF, 270, 0, 90);
move(0.27, -3.40, 0.00); object(0x01BF, 270, 0, 91);
move(-1.33, 17.96, 0.00); object(0x01BF, 270, 0, 84);
move(-0.84, 7.75, 0.00); object(0x01BF, 270, 0, 84);
move(-0.44, 4.07, 0.00); object(0x01BF, 270, 0, 84);
move(6.68, 0.29, 0.00); object(0x01BF, 270, 0, 85);
move(0.66, -7.97, 0.00); object(0x01BF, 270, 0, 85);
move(0.66, -7.97, 0.00); object(0x01BF, 270, 0, 85);
move(0.66, -7.97, 0.00); object(0x01BF, 270, 0, 85);
moveto(62.80, -1664.30, 37.21); object(0x01BF, 270, 0, 264);
move(6.59, 0.67, 0.00); object(0x01BF, 270, 0, 264);
move(-0.80, 7.86, 0.00); object(0x01BF, 270, 0, 264);
move(-0.80, 7.86, 0.00); object(0x01BF, 270, 0, 264);
move(-0.80, 7.86, 0.00); object(0x01BF, 270, 0, 264);
move(-0.32, 3.18, 0.00); object(0x01BF, 270, 0, 264);
move(5.89, -0.16, 0.00); object(0x01BF, 270, 0, 268);
move(0.26, -7.70, 0.00); object(0x01BF, 270, 0, 268);
move(0.25, -7.30, 0.00); object(0x01BF, 270, 0, 268);
move(0.26, -7.80, 0.00); object(0x01BF, 270, 0, 268);
move(0.13, -3.90, 0.00); object(0x01BF, 270, 0, 268);
move(5.54, 0.99, 0.00); object(0x01BF, 270, 0, 268);
move(-0.27, 8.00, 0.00); object(0x01BF, 270, 0, 268);
move(-0.27, 7.90, 0.00); object(0x01BF, 270, 0, 268);
move(-0.27, 8.00, 0.00); object(0x01BF, 270, 0, 268);
move(-0.06, 1.90, 0.00); object(0x01BF, 270, 0, 268);
move(3.21, 0.11, -51.50); object(0x01BF, 270, 0, 268);
teleport(40.32, -1670.00, 27.46);
moveto(1444.03, -166.76, 53.72); object(0x0FF6, 0, 0, 93);
moveto(1386.10, -278.68, 52.47); object(0x020F, 0, 0, 91);
move(-0.94, -10.67, -3.50); object(0x020F, 0, 0, 121);
move(41.03, 100.60, 3.65); object(0x020F, 0, 0, 32);
move(-1.72, -10.36, 0.00); object(0x020F, 0, 0, 337);
move(4.68, 34.23, 5.00); object(0x020F, 0, 0, 109);
move(-0.72, -11.70, 0.00); object(0x020F, 0, 0, 119);
move(0.28, -6.06, -2.60); object(0x020F, 0, 0, 102);
move(-13.09, -3.17, -5.40); object(0x020F, 0, 0, 334);
move(-11.70, 4.73, 0.00); object(0x020F, 0, 0, 334);
move(13.01, 31.23, 3.70); object(0x020F, 0, 0, 146);
move(-13.27, -5.45, -0.50); object(0x020F, 0, 0, 211);
move(-4.29, -12.57, -2.50); object(0x020F, 0, 0, 113);
move(83.85, -37.71, 7.20); object(0x020F, 0, 0, 239);
move(3.74, 18.22, 0.00); object(0x020F, 0, 0, 239);
move(3.08, 16.76, 0.00); object(0x020F, 0, 0, 239);
move(-17.60, 4.49, 0.00); object(0x020F, 0, 0, 239);
move(-25.09, 5.00, 0.00); object(0x020F, 0, 0, 238);
move(15.01, -44.99, 0.00); object(0x020F, 0, 0, 348);
move(-26.65, 23.87, -3.00); object(0x020F, 0, 0, 113);
//PMG CARS
//BMW M3 GTR
setshort(0x992FEE2, 0x20, 0x20, 0x20, 0x20, 0x42, 0x4d, 0x57, 0x20, 0x4d, 0x33, 0x20, 0x47, 0x54, 0x52);
setchar(0x945bd12, 0x6);
setchar(0x945bd11, 0x44);
setshort(0x9443880, 250);
setfloat(0x944387c, 0.83);
setfloat(0x945bc90, 3000);
setfloat(0x945bc98, 1.500);
setfloat(0x945bd50, 0.20);
setfloat(0x945bd54, -0.0625);
setfloat(0x945bd58, 0.40);
setfloat(0x945bd1c, 4);
setfloat(0x945bd20, 4);
setfloat(0x945bd14, 0.0035);
setfloat(0x945bd30, 0.60);
setfloat(0x945bd38, 36);
setfloat(0x945bd48, 0.75);
setfloat(0x945bd4c, 0.125);
setfloat(0x945bcb4, 0.0125);
setfloat(0x945bcb8, -0.425);
setfloat(0x945bd3c, 0.90000);
setfloat(0x945bd40, 0.43875);
sethex(0x945bd60, 0x00, 0x81, 0x00, 0x05);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb4c, 0xFF, 0xFF, 0x00);
sethex(0x944fb24, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 172);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//SUPERCHARGED CHEVY CAMARO CONVERTIBLE 1969
setshort(0x992FE80, 0x20, 0x47, 0x41, 0x4e, 0x47, 0x53, 0x54, 0x41);
setchar(0x945ba42, 0x5);
setshort(0x94430b0, 250);
setfloat(0x94430ac, 0.82);
setfloat(0x945b9c0, 5000);
setfloat(0x945b9c8, 1.55);
setfloat(0x945ba80, 0.2);
setfloat(0x945ba84, -0.15);
setfloat(0x945ba88, 0.425);
setfloat(0x945ba4c, 4);
setfloat(0x945ba50, 4);
setfloat(0x945ba44, 0.00337);
setfloat(0x945ba60, 0.5);
setfloat(0x945ba68, 36.875);
setfloat(0x945ba78, 1.46875);
setfloat(0x945b9e4, 0);
setfloat(0x945b9e8, -0.4125);
setchar(0x945b9f0, 13);
setfloat(0x945ba6c, 0.9);
setfloat(0x945ba70, 0.44625);
setfloat(0x945b9cc, 0.5);
sethex(0x945ba90, 0x80, 0x89, 0x00, 0x03);
setchar(0x967E6FC, 0xFF, 0x00, 0xFF);
sethex(0x944fb2c, 0x54, 0xD5, 0xF2);
sethex(0x944fb50, 0x03, 0x00, 0x11);
setint(0x8E38A38, 167);
setchar(0x8E38A5C, 115, 124);
sethex(0x8E38A5E, 0x01, 0xFF);
setchar(pplayer + 0xB84, 0x00);
//FORD SHELBY COBRA GT 500
setshort(0x993002A, 0x53, 0x48, 0x45, 0x4c, 0x42, 0x59, 0x20, 0x47, 0x54, 0x20, 0x35, 0x30, 0x30);
setchar(0x945cdf2, 0x5);
setshort(0x9444cd0, 250);
setfloat(0x9444ccc, 0.775);
setfloat(0x945cd70, 3000);
setfloat(0x945cd78, 1.7);
setfloat(0x945ce30, 0.2625);
setfloat(0x945ce34, -0.0875);
setfloat(0x945cdfc, 2.8);
setfloat(0x945ce00, 2.8);
setfloat(0x945cdf4, 0.00313);
setfloat(0x945ce10, 0.6625);
setfloat(0x945ce18, 35);
setfloat(0x945ce2c, 0.08125);
setfloat(0x945cd98, -0.3875);
setfloat(0x945ce20, 0.45);
sethex(0x945ce40, 0x80, 0x81, 0x00, 0x05);
setchar(0x967E6FC, 0xFF, 0xFF, 0x00);
sethex(0x944fb48, 0xFF, 0xFF, 0x00);
sethex(0x944fb40, 0x00, 0x00, 0x00);
setint(0x8E38A38, 185);
setchar(0x8E38A5C, 122, 120);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//SUPERCHARGED 2006 DODGE VIPER RT 10
setshort(0x992FDD4, 0x20, 0x20, 0x56, 0x49, 0x50, 0x45, 0x52);
setfloat(0x94425bc, 0.82);
setfloat(0x945b060, 3000);
setfloat(0x945b068, 1.5);
setfloat(0x945b120, 0.2625);
setfloat(0x945b124, -0.1);
setfloat(0x945b0ec, 3.5);
setfloat(0x945b0f0, 3.5);
setfloat(0x945b0e4, 0.00325);
setfloat(0x945b100, 0.6625);
setfloat(0x945b11c, 0.21875);
setfloat(0x945b088, -0.425);
setfloat(0x945b10c, 0.90);
setfloat(0x945b110, 0.45);
sethex(0x945b130, 0x80, 0xa1, 0x00, 0x05);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb5c, 0xB3, 0x01, 0x00);
sethex(0x944fb48, 0x00, 0x00, 0x00);
setint(0x8E38A38, 160);
setchar(0x8E38A5C, 127, 122);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//TOYOTA TUNDRA
setshort(0x992FD62, 0x4d, 0x41, 0x44, 0x44, 0x4f, 0x47);
setchar(0x945ab42, 0x5);
setchar(0x945ab41, 0x44);
setchar(0x945ab40, 0x52);
setshort(0x9441ad0, 250);
setfloat(0x9441acc, 0.825);
setfloat(0x945aac0, 1800);
setfloat(0x945aac8, 1.075);
setfloat(0x945ab80, 0.2);
setfloat(0x945ab84, -0.1);
setfloat(0x945ab88, 0.4);
setfloat(0x945ab4c, 2.5);
setfloat(0x945ab50, 2.5);
setfloat(0x945ab44, 0.00313);
setfloat(0x945ab60, 0.5);
setfloat(0x945ab64, 0);
setfloat(0x945ab68, 35);
setfloat(0x945ab78, 1.59375);
setfloat(0x945ab7c, 0.1375);
setfloat(0x945ab94, 0.26);
setfloat(0x945ab8c, 0);
setfloat(0x945aae0, 0);
setfloat(0x945aae4, 0.025);
setfloat(0x945aae8, -0.4);
setchar(0x945aaf0, 75);
setfloat(0x945ab6c, 0.90625);
setfloat(0x945ab70, 0.45);
setfloat(0x945aacc, 0.23529);
sethex(0x945ab90, 0x82, 0x8b, 0x00, 0x05);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb54, 0x00, 0x00, 0x00);
sethex(0x944fafc, 0xFF, 0x0D, 0x08);
setint(0x8E38A38, 154);
setchar(0x8E38A5C, 125, 103);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);

