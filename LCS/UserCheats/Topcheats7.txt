#cheat flight skule 6
//ID: 11931
//Score: 194
//Author: lewis-666-2k6
//Category: Flight School
//Description: flight skule 6
//Image: none
//Time: 31/05/2006 19:51:25
//Working: Yes
moveto(274.00, -418.51, 83.13); object(0x01BF, 95, 0, 180);
move(0.00, 2.87, 0.00); object(0x01BF, 95, 0, 180);
move(0.00, 4.40, 0.00); object(0x01BF, 95, 0, 180);
move(-7.50, 0.00, 0.00); object(0x01BF, 95, 0, 180);
move(-0.02, -7.22, 0.00); object(0x01BF, 90, 0, 359);
move(-4.41, 0.21, 1.80); object(0x01BF, 0, 0, 99);
move(0.74, 7.68, 0.00); object(0x01BF, 0, 0, 99);
move(4.47, 3.16, 0.00); object(0x01BF, 0, 0, 178);
move(7.60, 0.22, 0.00); object(0x01BF, 0, 0, 178);
move(-9.38, -15.57, 0.00); object(0x01BF, 0, 0, 354);
move(7.96, 0.83, 0.00); object(0x01BF, 0, 0, 354);
move(0.68, 3.09, 2.90); object(0x01BF, 95, 0, 354);
move(-7.76, -0.81, 0.00); object(0x01BF, 95, 0, 354);
move(-1.58, 7.37, -0.40); object(0x01BF, 90, 5, 266);
move(9.89, 1.60, 0.00); object(0x01BF, 90, 5, 266);
move(6.29, -3.42, -4.55); object(0x01BF, 90, 0, 175);
move(28.23, 2.87, 0.00); object(0x021B, 70, 5, 79);
move(-1.08, -1.31, 2.30); object(0x021B, 70, 5, 88);
move(-1.33, -0.51, 3.30); object(0x021B, 70, 5, 88);
move(-0.95, 0.31, 4.00); object(0x021B, 70, 5, 88);
move(-1.12, 2.38, 0.00); object(0x021B, 70, 5, 88);
move(-0.13, 3.71, 0.00); object(0x021B, 70, 5, 79);
move(0.72, 4.38, 0.00); object(0x021B, 70, 5, 79);
move(1.24, 0.15, -2.70); object(0x021B, 85, 5, 85);
move(0.00, 0.00, -6.60); object(0x021B, 85, 5, 85);
move(1.20, -4.69, 0.00); object(0x021B, 85, 5, 85);
move(-0.99, 4.60, 3.80); object(0x021B, 85, 5, 85);
move(1.77, -7.08, -0.10); object(0x021C, 0, 5, 307);
move(-1.12, 3.53, -0.30); object(0x021C, 0, 5, 307);
move(-0.61, 1.91, 0.00); object(0x021C, 0, 5, 307);
move(0.60, -3.69, 0.00); object(0x021C, 0, 5, 307);
move(2.23, -1.18, 2.90); object(0x021C, 0, 5, 307);
move(-0.58, 1.81, 0.00); object(0x021C, 0, 5, 307);
move(-0.51, 1.62, -0.50); object(0x021C, 0, 5, 307);
move(-0.58, 1.81, 0.00); object(0x021C, 0, 5, 307);
move(2.36, -4.91, 2.60); object(0x021C, 0, 5, 307);
move(-0.58, 1.81, 0.00); object(0x021C, 0, 5, 307);
move(-0.61, 1.91, 0.00); object(0x021C, 0, 5, 307);
move(-0.39, 1.24, 0.00); object(0x021C, 0, 5, 307);
move(0.44, -3.64, -5.80); object(0x021C, 0, 5, 307);
move(-0.71, 1.56, 0.00); object(0x021C, 0, 5, 307);
move(-0.51, 1.62, 0.00); object(0x021C, 0, 5, 307);
move(1.60, -5.05, 0.00); object(0x021C, 0, 5, 307);
move(16.20, -0.64, -0.20); object(0x021B, 0, 5, 273);
move(0.41, 0.77, 2.40); object(0x021B, 0, 5, 267);
move(0.08, 0.12, 2.90); object(0x021B, 0, 5, 267);
move(1.62, 1.87, 3.20); object(0x021B, 0, 5, 271);
move(0.93, 4.29, 0.00); object(0x021B, 0, 5, 258);
move(-0.64, 3.13, 0.00); object(0x021B, 0, 5, 258);
move(-0.56, 2.74, 0.00); object(0x021B, 0, 5, 258);
move(0.00, 0.00, -2.80); object(0x021B, 0, 5, 258);
move(-1.46, -0.71, -3.40); object(0x021B, 0, 5, 258);
move(-0.02, 0.10, -2.30); object(0x021B, 0, 5, 258);
move(-0.27, -3.42, 0.00); object(0x021B, 0, 5, 258);
move(0.40, -5.53, 0.00); object(0x021B, 0, 5, 258);
move(4.49, 1.62, 6.50); object(0x021C, 0, 5, 259);
move(-0.68, 3.43, 0.00); object(0x021C, 0, 5, 259);
move(0.52, 3.26, 0.00); object(0x021C, 0, 5, 259);
move(-0.72, -3.10, -3.10); object(0x021C, 0, 5, 259);
move(18.21, 3.31, -1.30); object(0x01BF, 85, 0, 85);
move(6.37, 0.63, 0.60); object(0x01BF, 85, 0, 85);
move(-5.85, 7.63, -0.40); object(0x01BF, 85, 0, 93);
move(0.33, -13.90, 0.95); object(0x01BF, 85, 0, 94);
moveto(355.34, -403.90, 89.34); object(0x01BF, 85, 0, 97);
move(0.20, 7.90, 0.00); object(0x01BF, 85, 0, 97);
move(-5.82, 0.00, -0.60); object(0x01BF, 90, 0, 278);
move(2.92, -1.68, 3.00); object(0x021C, 10, 180, 220);
move(-1.43, -3.75, -0.30); object(0x021C, 10, 180, 199);
move(-0.64, -2.38, 0.00); object(0x021C, 10, 175, 199);
move(-0.76, 3.82, -0.30); object(0x021C, 10, 175, 199);
move(1.67, 5.78, 0.00); object(0x021C, 10, 175, 216);
move(-0.18, -1.69, 0.00); object(0x021C, 10, 175, 216);
move(-0.32, 0.10, 1.20); object(0x021C, 10, 175, 217);
move(0.18, 1.59, 0.00); object(0x021C, 10, 175, 217);
move(-0.39, -3.38, 0.00); object(0x021C, 10, 175, 217);
move(-0.29, -2.48, 0.00); object(0x021C, 10, 175, 217);
move(-0.14, -1.19, 0.00); object(0x021C, 10, 175, 217);
move(-0.17, -1.49, 0.00); object(0x021C, 10, 175, 217);
move(-0.21, 0.82, 1.50); object(0x021C, 10, 175, 225);
move(-0.39, -1.45, 0.00); object(0x021C, 10, 175, 225);
move(0.89, 3.28, 0.00); object(0x021C, 10, 175, 225);
move(0.52, 1.93, 0.00); object(0x021C, 10, 175, 225);
move(0.63, 2.32, 0.00); object(0x021C, 10, 175, 225);
move(0.42, 1.54, 0.00); object(0x021C, 10, 175, 225);
move(-0.76, -2.80, 1.20); object(0x021C, 10, 175, 225);
move(-1.12, -2.91, 0.00); object(0x021C, 10, 175, 225);
move(-0.47, -1.74, 0.00); object(0x021C, 10, 175, 225);
move(-0.42, -1.54, 0.00); object(0x021C, 10, 175, 225);
move(1.38, 5.12, 0.00); object(0x021C, 10, 175, 225);
move(-0.10, -0.39, -2.80); object(0x021C, 10, 175, 225);
move(-1.46, -5.41, 0.00); object(0x021C, 10, 175, 225);
move(0.92, -2.43, -0.60); object(0x021C, 10, 175, 225);
move(1.98, 7.34, -0.10); object(0x021C, 10, 175, 225);
move(1.66, 2.87, 0.00); object(0x021C, 10, 175, 225);
move(0.39, -2.59, -0.50); object(0x021C, 10, 175, 225);
move(-3.97, -1.10, 0.00); object(0x021C, 10, 175, 225);
move(2.22, -2.99, 0.00); object(0x021C, 10, 175, 225);
move(0.39, 1.45, 0.00); object(0x021C, 10, 175, 225);
move(1.24, 4.64, 0.00); object(0x021C, 10, 175, 225);
move(-2.12, -8.08, 0.00); object(0x021C, 10, 175, 216);
move(3.67, -0.71, 0.00); object(0x021C, 10, 175, 216);
move(0.26, 2.39, 0.00); object(0x021C, 10, 175, 216);
move(0.35, 3.18, 0.00); object(0x021C, 10, 175, 216);
move(-0.50, 3.07, -0.40); object(0x021C, 10, 175, 216);
move(0.25, 2.29, 0.00); object(0x021C, 10, 175, 216);
moveto(378.58, -386.61, 90.90); object(0x021C, 0, 0, 178);
move(2.00, 0.07, 0.00); object(0x021C, 0, 0, 178);
move(1.40, 0.05, 0.00); object(0x021C, 0, 0, 178);
move(0.00, 0.00, 0.60); object(0x021C, 0, 0, 178);
move(-1.60, -0.06, 0.50); object(0x021C, 0, 0, 178);
move(-2.10, -0.08, 0.00); object(0x021C, 0, 0, 178);
move(0.00, 0.00, 1.80); object(0x021C, 0, 0, 178);
move(1.80, 0.07, 0.00); object(0x021C, 0, 0, 178);
move(1.60, 0.06, 0.00); object(0x021C, 0, 0, 178);
move(2.00, 0.07, 0.00); object(0x021C, 0, 0, 178);
move(0.00, 0.00, -2.20); object(0x021C, 0, 0, 178);
move(0.00, 0.00, -1.40); object(0x021C, 0, 0, 178);
move(-0.10, -0.00, 4.70); object(0x021C, 0, 0, 178);
move(-2.10, -0.08, 0.00); object(0x021C, 0, 0, 178);
move(-1.80, -0.07, 0.00); object(0x021C, 0, 0, 178);
move(-1.50, -0.06, 0.00); object(0x021C, 0, 0, 178);
move(5.60, 0.21, 0.70); object(0x021C, 0, 0, 178);
move(-2.18, -0.08, 0.10); object(0x021C, 0, 0, 175);
move(-1.89, -0.15, 0.10); object(0x021C, 0, 0, 175);
move(-1.50, -0.12, 0.00); object(0x021C, 0, 0, 175);
move(5.48, 0.45, 1.10); object(0x021C, 0, 0, 175);
move(-1.69, -0.14, 0.00); object(0x021C, 0, 0, 175);
move(-2.39, -0.20, 0.00); object(0x021C, 0, 0, 175);
move(-1.50, -0.12, 0.00); object(0x021C, 0, 0, 175);
move(4.69, -1.53, -5.70); object(0x021C, 0, 0, 83);
move(-40.13, -5.83, -2.20); object(0x021C, 90, 0, 180);
move(39.34, 5.19, 3.50); object(0x021C, 0, 0, 91);
move(-0.01, 0.02, 1.20); object(0x021C, 0, 0, 91);
move(0.49, 0.19, 1.20); object(0x021C, 0, 0, 117);
move(0.02, -0.10, 1.30); object(0x021C, 0, 0, 117);
move(0.58, -2.54, 0.00); object(0x021C, 0, 0, 117);
move(0.69, -3.02, 0.00); object(0x021C, 0, 0, 117);
move(0.69, -3.02, 0.00); object(0x021C, 0, 0, 117);
move(0.49, -2.15, 0.00); object(0x021C, 0, 0, 117);
move(-0.04, 0.20, -3.00); object(0x021C, 0, 0, 117);
move(0.00, 0.00, -3.70); object(0x021C, 0, 0, 117);
move(-0.47, 2.05, 0.00); object(0x021C, 0, 0, 117);
move(-0.64, 2.83, 0.00); object(0x021C, 0, 0, 117);
move(1.55, 3.60, 0.00); object(0x021C, 0, 0, 117);
move(0.00, 0.00, 3.00); object(0x021C, 0, 0, 117);
move(0.00, 0.00, 1.50); object(0x021C, 0, 0, 117);
move(-0.12, -3.42, 0.00); object(0x021C, 0, 0, 117);
move(0.63, -2.63, 0.00); object(0x021C, 0, 0, 117);
move(0.51, -2.14, 0.00); object(0x021C, 0, 0, 117);
move(-0.86, 3.60, -2.00); object(0x021C, 0, 0, 117);
move(-0.47, 1.94, 0.00); object(0x021C, 0, 0, 117);
move(0.91, -3.79, 0.00); object(0x021C, 0, 0, 117);
move(0.37, -1.56, -1.90); object(0x021C, 0, 0, 117);
move(-3.47, -1.57, 5.20); object(0x021C, 0, 0, 76);
move(-4.89, -0.42, 0.00); object(0x021C, 0, 0, 76);
move(3.16, 0.46, 0.00); object(0x021C, 0, 0, 59);
move(-4.95, 0.40, 0.00); object(0x021C, 0, 0, 59);
move(2.75, -3.44, -2.80); object(0x021C, 0, 0, 58);
setshort(08e4dac2, 0x67, 0x65, 0x74, 0x20, 0x69, 0x6E, 0x20, 0x61, 0x20, 0x68, 0x75, 0x6E, 0x74, 0x65, 0x72, 0x2C, 0x20, 0x61, 0x66, 0x74, 0x65, 0x72, 0x20, 0x61, 0x62, 0x6F, 0x75, 0x74, 0x20, 0x33, 0x30, 0x20, 0x73, 0x65, 0x63, 0x6F, 0x6E, 0x64, 0x73, 0x20, 0x74, 0x75, 0x72, 0x6E, 0x20, 0x69, 0x74, 0x20, 0x6F, 0x66, 0x66, 0x20, 0x61, 0x6E, 0x64, 0x20, 0x74, 0x75, 0x72, 0x6E, 0x20, 0x6F, 0x6E, 0x20, 0x61, 0x20, 0x66, 0x73, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x20, 0x63, 0x6F, 0x64, 0x65, 0x20, 0x6F, 0x5E)
setchar(08e4dac0, 0x01)

#cheat Attacker Robot-VICTORY
//ID: 16484
//Score: 196
//Author: KEI(Japanese)
//Category: Location Mods
//Description: Big robot in Staunton Island.
//Robot has a big rifle!
//Please look at the image!!!
//Image: http://blog57.fc2.com/k/keissafehouse/file/20060816120311.jpg
//Time: 17/08/2006 05:49:05
//Working: Yes
moveto(457.43, -762.89, 15.35); object(0x0259, 0, 90, 122);
move(-0.18, -0.29, 0.50); object(0x0228, 0, 195, 122);
move(0.00, 0.00, 0.00); object(0x0209, 0, 195, 122);
move(-0.13, -0.05, 0.80); object(0x0209, 0, 180, 122);
move(0.00, 0.00, 1.00); object(0x0209, 0, 180, 122);
move(0.00, 0.00, 0.00); object(0x0228, 0, 180, 122);
move(-0.90, -0.01, 0.80); object(0x0213, 0, 90, 3);
move(-0.40, 0.03, 0.00); object(0x0213, 0, 270, 2);
move(-0.80, 0.03, -0.80); object(0x0209, 0, 180, 2);
move(0.00, 0.00, 0.00); object(0x0228, 0, 180, 2);
move(0.00, 0.00, -1.00); object(0x0209, 0, 180, 2);
move(-0.10, 0.26, -0.70); object(0x0209, 0, 195, 27);
move(0.00, 0.00, 0.00); object(0x0228, 0, 195, 27);
move(-0.21, 0.35, -0.50); object(0x0259, 0, 90, 62);
move(1.39, -0.54, 3.30); object(0x0214, 0, 180, 81);
move(1.33, 1.69, -10.30); object(0x0207, 0, 0, 62);
move(-1.40, -0.66, -13.80); object(0x0237, 0, 0, 62);
move(0.04, -1.03, 24.40); object(0x022B, 0, 0, 238);
move(0.13, 0.02, 1.60); object(0x0214, 0, 90, 182);
move(0.59, 0.09, 0.00); object(0x024E, 0, 0, 187);
move(-1.42, 0.07, 0.00); object(0x024E, 0, 0, 177);
move(1.48, -0.45, -0.20); object(0x0213, 0, 95, 357);
move(-1.53, 0.12, 0.00); object(0x0213, 0, 265, 357);
move(-1.51, -0.02, -0.30); object(0x0209, 0, 240, 357);
move(0.00, 0.00, 0.00); object(0x0228, 0, 240, 357);
move(4.64, 0.06, -0.10); object(0x0209, 0, 240, 177);
move(0.00, 0.00, 0.00); object(0x0228, 0, 240, 177);
move(0.49, 0.07, -0.70); object(0x0209, 0, 200, 177);
move(-5.63, -0.18, 0.00); object(0x0209, 0, 200, 347);
move(-0.10, -0.01, -0.90); object(0x0209, 0, 175, 347);
move(0.00, 0.00, 0.00); object(0x0228, 0, 175, 347);
move(5.81, 0.79, 0.50); object(0x0209, 90, 0, 358);
move(0.00, 0.00, 0.00); object(0x0228, 90, 0, 358);
move(0.05, 0.80, 0.00); object(0x0259, 90, 0, 178);
move(-6.00, -1.59, -1.20); object(0x0259, 20, 0, 98);
move(6.01, 1.77, 1.10); object(0x0240, 0, 75, 88);
move(-0.03, 0.41, 0.50); object(0x0240, 0, 0, 88);
move(-0.04, -0.85, 0.00); object(0x0240, 0, 0, 88);
move(0.00, 0.00, 0.20); object(0x0240, 0, 0, 88);
move(0.04, 0.83, 0.00); object(0x0240, 0, 0, 88);
move(-0.01, -0.29, -0.50); object(0x0240, 0, 0, 88);
move(0.05, 0.99, 0.50); object(0x0240, 0, 0, 88);
move(0.00, 0.00, -0.30); object(0x0240, 0, 0, 88);
move(-0.02, -0.43, 0.60); object(0x0240, 0, 0, 88);
move(0.03, 0.59, -1.00); object(0x0240, 0, 90, 88);
move(0.02, 0.43, 0.60); object(0x0240, 0, 0, 88);
move(0.04, 0.88, 0.00); object(0x0240, 0, 0, 88);
move(0.02, 0.43, 0.00); object(0x0126, 0, 0, 88);
move(0.00, 0.00, -0.20); object(0x0126, 0, 0, 88);
move(-3.15, -4.50, 0.90); object(0x0213, 0, 0, 1);
move(0.00, 0.00, 1.50); object(0x0FA2, 0, 180, 1);
move(0.00, 0.00, 0.00); object(0x0FA2, 0, 180, 1);
move(22.69, -29.16, -5.50); object(0x025E, 0, 0, 183);
move(-22.64, 29.04, 5.90); object(0x023B, 0, 0, 89);
move(0.60, -0.04, 0.50); object(0x0226, 0, 160, 169);
move(-0.60, 0.04, 0.00); object(0x0226, 0, 200, 169);
move(-0.03, -0.05, -0.30); object(0x0240, 0, 0, 272);
move(0.20, -0.01, 0.00); object(0x0240, 0, 0, 272);
move(0.10, -0.00, 0.00); object(0x0240, 0, 0, 272);
move(0.20, -0.01, 0.00); object(0x0240, 0, 0, 272);
move(0.20, -0.01, 0.00); object(0x0240, 0, 0, 272);
move(-0.10, 0.00, 0.20); object(0x0240, 0, 0, 272);
move(-0.60, 0.02, 0.00); object(0x0240, 0, 0, 272);
teleport(456.50, -756.05, 16.16);

#cheat All Cars Act Like dodo
//ID: 4090
//Score: 218
//Author: TeamOverload
//Category: Vehicle
//Description: All Cars Act Like dodo
//Image: none
//Time: 18/01/2006 18:04:00
//Working: Yes
setchar(pcar + 0x058, 0xA4);
//ADePSP: You need to get in and out of a Dodo before you activate this cheat...
//edited by ADePSP on 25/02/2006 18:15:17

#cheat >>>TONY'S PRIVATE MANSION
//ID: 15559
//Score: 217
//Author: art_m11
//Category: Location Mods
//Description: THIS  AWESOME CHEAT
//WILL SPAWN 
//8 REALLY GREAT PMG CARS
//NEAR SAL'S HOUSE!
//IT WILL ALSO
//CREATE 
//SALVATORES OFFICE
//AND YOU'LL BE ABLE TO WALK INSIDE!
//+ 
//GARAGE DOOR WILL BE OPEN
//AND THERE WILL BE A DODO IN THE GARAGE!
//YOU MUST TRY IT OUT!
//Image: http://i55.photobucket.com/albums/g154/artur_album/fc014d22.jpg
//Time: 27/07/2006 18:55:22
//Working: Yes
//LIGHTS AND SALVATORES OFFICE
moveto(1444.03, -166.76, 54.72);  object(0x0FF6, 0, 0, 93);
moveto(1386.10, -278.68, 52.47);  object(0x020F, 0, 0, 91);
move(-0.94, -10.67, -3.50);  object(0x020F, 0, 0, 121);
move(41.03, 100.60, 3.65);  object(0x020F, 0, 0, 32);
move(-1.72, -10.36, 0.00);  object(0x020F, 0, 0, 337);
move(4.68, 34.23, 5.00);  object(0x020F, 0, 0, 109);
move(-0.72, -11.70, 0.00);  object(0x020F, 0, 0, 119);
move(0.28, -6.06, -2.60);  object(0x020F, 0, 0, 102);
move(-13.09, -3.17, -5.40);  object(0x020F, 0, 0, 334);
move(-11.70, 4.73, 0.00);  object(0x020F, 0, 0, 334);
move(13.01, 31.23, 3.70);  object(0x020F, 0, 0, 146);
move(-13.27, -5.45, -0.50);  object(0x020F, 0, 0, 211);
move(-4.29, -12.57, -2.50);  object(0x020F, 0, 0, 113);
move(83.85, -37.71, 7.20);  object(0x020F, 0, 0, 239);
move(3.74, 18.22, 0.00);  object(0x020F, 0, 0, 239);
move(3.08, 16.76, 0.00);  object(0x020F, 0, 0, 239);
move(-17.60, 4.49, 0.00);  object(0x020F, 0, 0, 239);
move(-25.09, 5.00, 0.00);  object(0x020F, 0, 0, 238);
move(15.01, -44.99, 0.00);  object(0x020F, 0, 0, 348);
move(-26.65, 23.87, -3.00);  object(0x020F, 0, 0, 113);
//PMG CARS
//BMW M3 GTR
setshort(0x992FEE2, 0x20, 0x20, 0x20, 0x20, 0x42, 0x4d, 0x57, 0x20, 0x4d, 0x33, 0x20, 0x47, 0x54, 0x52);
setchar(0x945bd12, 0x6);
setchar(0x945bd11, 0x44);
setshort(0x9443880, 250);
setfloat(0x944387c, 0.83);
setfloat(0x945bc90, 3000);
setfloat(0x945bc98, 1.500);
setfloat(0x945bd50, 0.20);
setfloat(0x945bd54, -0.0625);
setfloat(0x945bd58, 0.40);
setfloat(0x945bd1c, 4);
setfloat(0x945bd20, 4);
setfloat(0x945bd14, 0.0035);
setfloat(0x945bd30, 0.60);
setfloat(0x945bd38, 36);
setfloat(0x945bd48, 0.75);
setfloat(0x945bd4c, 0.125);
setfloat(0x945bcb4, 0.0125);
setfloat(0x945bcb8, -0.425);
setfloat(0x945bd3c, 0.90000);
setfloat(0x945bd40, 0.43875);
sethex(0x945bd60, 0x00, 0x81, 0x00, 0x05);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb4c, 0xFF, 0xFF, 0x00);
sethex(0x944fb24, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 172);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//SUPERCHARGED CHEVY CAMARO CONVERTIBLE 1969
setshort(0x992FE80, 0x20, 0x47, 0x41, 0x4e, 0x47, 0x53, 0x54, 0x41);
setchar(0x945ba42, 0x5);
setshort(0x94430b0, 250);
setfloat(0x94430ac, 0.82);
setfloat(0x945b9c0, 5000);
setfloat(0x945b9c8, 1.55);
setfloat(0x945ba80, 0.2);
setfloat(0x945ba84, -0.15);
setfloat(0x945ba88, 0.425);
setfloat(0x945ba4c, 4);
setfloat(0x945ba50, 4);
setfloat(0x945ba44, 0.00337);
setfloat(0x945ba60, 0.5);
setfloat(0x945ba68, 36.875);
setfloat(0x945ba78, 1.46875);
setfloat(0x945b9e4, 0);
setfloat(0x945b9e8, -0.4125);
setchar(0x945b9f0, 13);
setfloat(0x945ba6c, 0.9);
setfloat(0x945ba70, 0.44625);
setfloat(0x945b9cc, 0.5);
sethex(0x945ba90, 0x80, 0x89, 0x00, 0x03);
setchar(0x967E6FC, 0xFF, 0x00, 0xFF);
sethex(0x944fb2c, 0x54, 0xD5, 0xF2);
sethex(0x944fb50, 0x03, 0x00, 0x11);
setint(0x8E38A38, 167);
setchar(0x8E38A5C, 115, 124);
sethex(0x8E38A5E, 0x01, 0xFF);
setchar(pplayer + 0xB84, 0x00);
//FORD SHELBY COBRA GT 500
setshort(0x993002A, 0x53, 0x48, 0x45, 0x4c, 0x42, 0x59, 0x20, 0x47, 0x54, 0x20, 0x35, 0x30, 0x30);
setchar(0x945cdf2, 0x5);
setshort(0x9444cd0, 250);
setfloat(0x9444ccc, 0.775);
setfloat(0x945cd70, 3000);
setfloat(0x945cd78, 1.7);
setfloat(0x945ce30, 0.2625);
setfloat(0x945ce34, -0.0875);
setfloat(0x945cdfc, 2.8);
setfloat(0x945ce00, 2.8);
setfloat(0x945cdf4, 0.00313);
setfloat(0x945ce10, 0.6625);
setfloat(0x945ce18, 35);
setfloat(0x945ce2c, 0.08125);
setfloat(0x945cd98, -0.3875);
setfloat(0x945ce20, 0.45);
sethex(0x945ce40, 0x80, 0x81, 0x00, 0x05);
setchar(0x967E6FC, 0xFF, 0xFF, 0x00);
sethex(0x944fb48, 0xFF, 0xFF, 0x00);
sethex(0x944fb40, 0x00, 0x00, 0x00);
setint(0x8E38A38, 185);
setchar(0x8E38A5C, 122, 120);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//SUPERCHARGED 2006 DODGE VIPER RT 10
setshort(0x992FDD4, 0x20, 0x20, 0x56, 0x49, 0x50, 0x45, 0x52);
setfloat(0x94425bc, 0.82);
setfloat(0x945b060, 3000);
setfloat(0x945b068, 1.5);
setfloat(0x945b120, 0.2625);
setfloat(0x945b124, -0.1);
setfloat(0x945b0ec, 3.5);
setfloat(0x945b0f0, 3.5);
setfloat(0x945b0e4, 0.00325);
setfloat(0x945b100, 0.6625);
setfloat(0x945b11c, 0.21875);
setfloat(0x945b088, -0.425);
setfloat(0x945b10c, 0.90);
setfloat(0x945b110, 0.45);
sethex(0x945b130, 0x80, 0xa1, 0x00, 0x05);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb5c, 0xB3, 0x01, 0x00);
sethex(0x944fb48, 0x00, 0x00, 0x00);
setint(0x8E38A38, 160);
setchar(0x8E38A5C, 127, 122);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//TOYOTA TUNDRA
setshort(0x992FD62, 0x4d, 0x41, 0x44, 0x44, 0x4f, 0x47);
setchar(0x945ab42, 0x5);
setchar(0x945ab41, 0x44);
setchar(0x945ab40, 0x52);
setshort(0x9441ad0, 250);
setfloat(0x9441acc, 0.825);
setfloat(0x945aac0, 1800);
setfloat(0x945aac8, 1.075);
setfloat(0x945ab80, 0.2);
setfloat(0x945ab84, -0.1);
setfloat(0x945ab88, 0.4);
setfloat(0x945ab4c, 2.5);
setfloat(0x945ab50, 2.5);
setfloat(0x945ab44, 0.00313);
setfloat(0x945ab60, 0.5);
setfloat(0x945ab64, 0);
setfloat(0x945ab68, 35);
setfloat(0x945ab78, 1.59375);
setfloat(0x945ab7c, 0.1375);
setfloat(0x945ab94, 0.26);
setfloat(0x945ab8c, 0);
setfloat(0x945aae0, 0);
setfloat(0x945aae4, 0.025);
setfloat(0x945aae8, -0.4);
setchar(0x945aaf0, 75);
setfloat(0x945ab6c, 0.90625);
setfloat(0x945ab70, 0.45);
setfloat(0x945aacc, 0.23529);
sethex(0x945ab90, 0x82, 0x8b, 0x00, 0x05);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb54, 0x00, 0x00, 0x00);
sethex(0x944fafc, 0xFF, 0x0D, 0x08);
setint(0x8E38A38, 153);
setchar(0x8E38A5C, 125, 103);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//A$$PERANTO

#cheat 30+ cheat pack custom mabe
//ID: 13212
//Score: 217
//Author: #1killa
//Category: Vehicle
//Description: over 30 code of cars,buildings and more. custom
//made by me.
//Image: none
//Time: 19/06/2006 00:34:00
//Working: Yes
setshort(0x99450E2, 0x4e, 0x52, 0x47, 0x2d, 0x39, 0x30, 0x30);
setchar(0x945d482, 0x7);
setchar(0x945d481, 0x44);
setchar(0x945d480, 0x52);
setshort(0x9446c10, 250);
setfloat(0x9446c0c, 0.67);
setfloat(0x945d400, 500);
setfloat(0x945d408, 2.6);
setfloat(0x945d4c0, 0.15);
setfloat(0x945d4c4, -0.15999);
setfloat(0x945d4c8, 0.0);
setfloat(0x945d48c, 0.99879);
setfloat(0x945d490, 0.99879);
setfloat(0x945d484, 0.013);
setfloat(0x945d4a0, 0.7);
setfloat(0x945d4a4, 0);
setfloat(0x945d4a8, 70);
setfloat(0x945d4b8, 0.99);
setfloat(0x945d4bc, 0.15);
setfloat(0x945d4d4, 0);
setfloat(0x945d4cc, 0);
setfloat(0x945d420, 0);
setfloat(0x945d424, 0.05);
setfloat(0x945d428, -0.08999);
setchar(0x945d430, 103);
setfloat(0x945d4ac, 0.0);
setfloat(0x945d4b0, 0.48);
setfloat(0x945d40c, 0.0);
sethex(0x945d4d0, 0x03, 0x01, 0x01, 0x00);
setchar(0x967E6FC, 0xFF, 0x10, 0x00);
sethex(0x944fb24, 0xFF, 0xFF, 0xFE);
sethex(0x944fb14, 0x00, 0x00, 0xFF);
setint(0x8E38988, 205);
setchar(0x8E389AC, 113, 109);
sethex(0x8E389AE, 0x01, 0xFF);
teleport(1155.71, -257.05, 17.30);
setchar(pplayer + 0xB84, 0x00);
//Description: Andrew Shoreside Vale;
//Working: Yes
//hellenbach
setchar(0x08E4Eac8, 185);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, -786.49, 327.39, 51.18, 350);
//police
setchar(0x08E4Ecd8, 157);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, -789.50, 317.77, 50.72, 350);
//patriot
setchar(0x08E4E9EC, 137);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, -794.86, 302.31, 48.99, 350);
//landstalker
setchar(0x08E4E9C0, 131);
setchar(0x08E4E9C0 + 0x18, 0x01);
setfloat(0x08E4E9C4, -791.66, 311.11, 49.72, 350);
//Weapons Start Here
setfloat(0x08e2d800, -782.58, 294.75, 48.80);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
setfloat(0x08E2E400, -782.21, 296.87, 48.91);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x124);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, -782.20, 299.18, 49.01);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
setfloat(0x08e2d8c0, -781.97, 301.36, 49.13);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, -781.61, 303.47, 49.41);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, -781.02, 305.77, 49.71);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, -780.69, 307.64, 49.96);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, -780.24, 310.01, 50.27);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
setfloat(0x08e2daa0, -779.80, 312.38, 50.58);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
setfloat(0x08e2db00, -779.24, 315.36, 50.95);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
setfloat(0x08E2DB60, -778.27, 317.84, 51.30);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
setfloat(0x08E2DBC0, -777.41, 320.24, 51.62);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
setfloat(0x08E2DC20, -776.58, 322.64, 51.95);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
setfloat(0x08E2DC80, -775.75, 325.01, 52.27);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
setfloat(0x08E2DCE0, -774.70, 327.19, 52.58);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x10f);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
setfloat(0x08E2DD40, -773.70, 328.58, 52.78);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
setfloat(0x08E2DDA0, -772.66, 330.22, 53.00);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
setfloat(0x08E2DE00, -771.58, 332.12, 53.25);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
setfloat(0x08E2DE60, -768.35, 327.84, 54.75);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
setfloat(0x08E2DEC0, -768.90, 326.13, 54.62);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
setfloat(0x08E2DF20, -769.40, 324.70, 54.45);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0xff, 0xff);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
setfloat(0x08E2DF80, -769.97, 322.97, 54.27);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0xff, 0xff);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
setfloat(0x08E2DFE0, -770.41, 321.67, 54.19);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0xff, 0xff);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
setfloat(0x08E2E040, -770.95, 320.05, 53.99);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0xff, 0xff);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
setfloat(0x08E2E0A0, -771.59, 318.13, 53.68);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
setfloat(0x08E2E100, -772.24, 316.14, 53.34);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0xff, 0xff);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
setfloat(0x08E2E160, -772.78, 314.56, 53.09);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
setfloat(0x08E2E1C0, -773.28, 312.93, 52.97);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
setfloat(0x08E2E220, -773.70, 311.62, 52.86);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0xff, 0xff);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
setfloat(0x08E2E280, -774.35, 309.65, 52.70);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0xff, 0xff);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
setfloat(0x08E2E2E0, -775.08, 307.43, 52.44);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0xff, 0xff);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
setfloat(0x08E2E340, -775.95, 304.64, 52.08);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0xff, 0xff);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
setfloat(0x08E2E3A0, -775.79, 302.62, 52.24);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0xff, 0xff);
setshort(0x08E2E3C6, 0x122);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
setfloat(0x08E2E460, -776.09, 300.07, 52.28);
setint(0x08E2E474, 0);
setchar(0x08E2E47C, 0xff, 0xff);
setshort(0x08E2E486, 0x22e);
setchar(0x08E2E492, 0x0f);
setchar(0x08E2E493, 0x00);
setchar(0x08E2D4B0, 0xff);
setfloat(0x08E2E4C0, 274.94, -478.42, 26.04);
setint(0x08E2E4D4, 0);
setchar(0x08E2E4DC, 0xff, 0xff);
setshort(0x08E2E4E6, 0x24b);
setchar(0x08E2E4F2, 0x0f);
setchar(0x08E2E4F3, 0x00);
setchar(0x08E2D510, 0xff);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
setfloat(0x08E2DDA0, -776.69, 297.37, 52.10);
teleport(-789.21, 300.96, 49.09);
moveto(-1079.79, 68.19, 62.20); object(0x01BF, 90, 0, 90);
move(0.03, -8.00, 0.00); object(0x01BF, 90, 0, 90);
move(-6.62, 0.30, 0.00); object(0x01BF, 90, 0, 90);
move(-0.08, 7.70, 0.00); object(0x01BF, 90, 0, 90);
move(-6.57, -0.06, 0.00); object(0x01BF, 90, 0, 90);
move(0.08, -7.90, 0.00); object(0x01BF, 90, 0, 90);
move(-7.19, 8.53, -1.30); object(0x01BF, 90, 20, 180);
move(-7.40, 0.05, -2.70); object(0x01BF, 90, 20, 180);
move(7.89, -7.41, 4.02); object(0x01BF, 90, 0, 90);
move(-6.65, -0.03, 0.00); object(0x01BF, 90, 0, 90);
move(-6.72, -0.03, 0.00); object(0x01BF, 90, 0, 90);
move(-0.03, 7.80, 0.00); object(0x01BF, 90, 0, 90);
move(-6.51, -0.03, 0.00); object(0x01BF, 90, 0, 90);
move(-6.69, -0.03, 0.00); object(0x01BF, 90, 0, 90);
move(-6.63, -0.03, 0.00); object(0x01BF, 90, 0, 90);
move(-6.72, -0.03, 0.00); object(0x01BF, 90, 0, 90);
move(-6.21, -0.02, 0.00); object(0x01BF, 90, 0, 90);
move(26.23, -7.70, 0.00); object(0x01BF, 90, 0, 90);
move(-6.74, -0.03, 0.00); object(0x01BF, 90, 0, 90);
move(-6.73, -0.03, 0.00); object(0x01BF, 90, 0, 90);
move(-6.67, -0.03, 0.00); object(0x01BF, 90, 0, 90);
move(-5.99, -0.02, 0.00); object(0x01BF, 90, 0, 90);
move(32.71, -7.67, 0.00); object(0x01BF, 90, 0, 90);
move(-6.63, 0.01, 0.00); object(0x01BF, 90, 0, 91);
move(-6.74, 0.18, 0.00); object(0x01BF, 90, 0, 91);
move(-6.62, 0.04, 0.00); object(0x01BF, 90, 0, 90);
move(-6.13, -0.04, 0.00); object(0x01BF, 90, 0, 90);
move(0.05, -8.00, 0.00); object(0x01BF, 90, 0, 90);
move(0.05, -7.90, 0.00); object(0x01BF, 90, 0, 90);
move(0.05, -7.80, 0.00); object(0x01BF, 90, 0, 90);
move(0.02, -2.70, 0.00); object(0x01BF, 90, 0, 90);
move(25.95, 18.27, 0.00); object(0x01BF, 90, 0, 90);
move(-6.56, 0.04, 0.00); object(0x01BF, 90, 0, 90);
move(-6.94, 0.18, 0.00); object(0x01BF, 90, 0, 90);
move(-6.27, -0.01, 0.00); object(0x01BF, 90, 0, 90);
move(19.72, -8.05, 0.00); object(0x01BF, 90, 0, 90);
move(-6.45, -0.02, 0.00); object(0x01BF, 90, 0, 90);
move(-6.61, 0.33, 0.00); object(0x01BF, 90, 0, 90);
move(-6.27, -0.02, 0.00); object(0x01BF, 90, 0, 90);
move(0.03, -7.60, 0.00); object(0x01BF, 90, 0, 90);
move(0.01, -3.10, 0.00); object(0x01BF, 90, 0, 90);
move(6.03, 3.02, 0.00); object(0x01BF, 90, 0, 90);
move(6.20, 0.02, 0.00); object(0x01BF, 90, 0, 90);
move(6.27, 0.02, 0.00); object(0x01BF, 90, 0, 90);
move(-12.04, -3.04, 0.00); object(0x01BF, 90, 0, 90);
move(6.44, 0.02, 0.00); object(0x01BF, 90, 0, 90);
move(5.96, 0.02, 0.00); object(0x01BF, 90, 0, 90);
move(-9.50, 18.25, 0.00); object(0x01BF, 90, 0, 90);
move(-22.70, 7.96, 0.00); object(0x01BF, 90, 0, 90);
move(28.78, 1.53, 1.45); object(0x01BF, 90, 340, 90);
move(0.07, -4.20, 1.50); object(0x01BF, 90, 340, 90);
move(0.03, -3.80, 1.40); object(0x01BF, 90, 340, 90);
move(0.01, -7.50, 1.30); object(0x01BF, 90, 0, 90);
move(0.07, -7.90, 0.00); object(0x01BF, 90, 0, 90);
move(0.04, -5.00, 0.00); object(0x01BF, 90, 0, 90);
move(-6.45, -0.05, 0.00); object(0x01BF, 90, 0, 90);
move(-0.07, 7.80, 0.00); object(0x01BF, 90, 0, 90);
move(-0.07, 7.80, 0.00); object(0x01BF, 90, 0, 90);
move(-0.07, 7.90, 0.00); object(0x01BF, 90, 0, 90);
move(-0.07, 7.80, 0.00); object(0x01BF, 90, 0, 90);
move(-6.30, -0.05, 0.00); object(0x01BF, 90, 0, 90);
move(0.06, -7.60, 0.00); object(0x01BF, 90, 0, 90);
move(0.06, -7.60, 0.00); object(0x01BF, 90, 0, 90);
move(0.07, -7.90, 0.00); object(0x01BF, 90, 0, 90);
move(0.06, -6.50, 0.00); object(0x01BF, 90, 0, 90);
move(0.01, -1.60, 0.00); object(0x01BF, 90, 0, 90);
move(-6.77, 31.25, 0.00); object(0x01BF, 90, 0, 90);
move(-6.14, -0.05, 0.00); object(0x01BF, 90, 0, 90);
move(-3.37, -0.03, 0.00); object(0x01BF, 90, 0, 90);
move(4.08, -7.61, -1.30); object(0x01BF, 90, 20, 90);
move(-4.09, -0.05, 0.00); object(0x01BF, 90, 20, 90);
//rails
moveto(-1144.75, 23.52, 66.57); object(0x01EF, 0, 0, 0);
move(-4.20, -0.03, 0.00); object(0x01EF, 0, 0, 0);
move(0.04, 6.34, 0.00); object(0x01EF, 0, 0, 90);
move(-0.06, 6.20, 0.00); object(0x01EF, 0, 0, 90);
move(-0.06, 6.10, 0.00); object(0x01EF, 0, 0, 90);
move(-0.06, 6.30, 0.00); object(0x01EF, 0, 0, 90);
move(-0.06, 6.10, 0.00); object(0x01EF, 0, 0, 90);
move(10.63, -30.97, 0.00); object(0x01EF, 0, 0, 270);
move(-0.01, 6.20, 0.00); object(0x01EF, 0, 0, 270);
move(-0.01, 6.20, 0.00); object(0x01EF, 0, 0, 270);
move(-0.01, 6.30, 0.00); object(0x01EF, 0, 0, 270);
move(-0.01, 6.10, 0.00); object(0x01EF, 0, 0, 270);
move(6.02, 5.35, 1.50); object(0x01EF, 0, 0, 90);
move(0.08, -6.20, 0.00); object(0x01EF, 0, 0, 90);
move(0.08, -6.20, 0.00); object(0x01EF, 0, 0, 90);
move(0.08, -6.20, 0.00); object(0x01EF, 0, 0, 90);
move(0.07, -5.80, 0.00); object(0x01EF, 0, 0, 90);
move(-0.29, -6.33, 0.00); object(0x01EF, 0, 0, 0);
move(6.20, -0.02, 0.00); object(0x01EF, 0, 0, 0);
move(6.10, -0.02, 0.00); object(0x01EF, 0, 0, 0);
move(-0.10, 0.60, -5.60); object(0x01EF, 0, 0, 0);
move(-6.20, 0.02, 0.00); object(0x01EF, 0, 0, 0);
move(-6.20, 0.02, 0.00); object(0x01EF, 0, 0, 0);
move(-6.10, 0.02, 0.00); object(0x01EF, 0, 0, 0);
move(-9.89, 37.92, 0.00); object(0x01EF, 0, 0, 90);
move(-0.01, 6.10, 0.00); object(0x01EF, 0, 0, 90);
move(-0.01, 5.30, 0.00); object(0x01EF, 0, 0, 90);
move(6.08, 0.10, 0.00); object(0x01EF, 0, 0, 180);
move(6.20, -0.03, 0.00); object(0x01EF, 0, 0, 180);
move(6.10, -0.03, 0.00); object(0x01EF, 0, 0, 180);
move(6.20, -0.03, 0.00); object(0x01EF, 0, 0, 180);
move(6.10, -0.03, 0.00); object(0x01EF, 0, 0, 180);
move(4.40, -0.02, 0.00); object(0x01EF, 0, 0, 180);
move(3.80, -0.02, 0.00); object(0x01EF, 0, 0, 180);
move(20.19, -0.78, 0.00); object(0x01EF, 0, 0, 180);
move(6.30, -0.03, 0.00); object(0x01EF, 0, 0, 180);
move(-61.41, -48.54, 4.10); object(0x01EF, 0, 0, 0);
move(-4.10, -0.03, 0.00); object(0x01EF, 0, 0, 0);
move(28.58, 22.85, 1.60); object(0x01EF, 0, 0, 270);
move(-0.01, 6.20, 0.00); object(0x01EF, 0, 0, 270);
move(-0.00, 2.90, 0.00); object(0x01EF, 0, 0, 270);
move(0.06, 6.07, 0.00); object(0x01EF, 0, 0, 180);
move(-6.10, -0.04, 0.00); object(0x01EF, 0, 0, 180);
move(-6.30, -0.04, 0.00); object(0x01EF, 0, 0, 180);
move(-6.10, -0.04, 0.00); object(0x01EF, 0, 0, 180);
move(-3.90, -0.03, 0.00); object(0x01EF, 0, 0, 180);
move(-6.17, -0.01, 0.00); object(0x01EF, 0, 0, 90);
move(-0.10, -31.51, -1.60); object(0x01EF, 0, 0, 90);
move(13.19, 24.42, 1.40); object(0x01F0, 0, 0, 0);
move(-2.60, -0.00, 0.00); object(0x01F0, 0, 0, 0);
move(34.91, 10.91, -5.60); object(0x01EF, 0, 0, 180);
move(3.63, -0.04, 0.00); object(0x01EF, 0, 0, 180);
move(-10.08, 0.13, 0.00); object(0x01EF, 0, 0, 270);
move(-0.01, 1.50, 0.00); object(0x01EF, 0, 0, 270);
//Repair shop
moveto(-1224.53, -16.28, 58.59); object(0x01BF, 90, 0, 270);
move(0.10, -8.00, 0.00); object(0x01BF, 90, 0, 270);
move(0.10, -7.90, 0.00); object(0x01BF, 90, 0, 270);
move(0.10, -7.90, 0.00); object(0x01BF, 90, 0, 270);
move(6.75, 0.08, 0.00); object(0x01BF, 90, 0, 270);
move(-0.10, 7.80, 0.00); object(0x01BF, 90, 0, 270);
move(-0.10, 7.90, 0.00); object(0x01BF, 90, 0, 270);
move(-0.10, 8.00, 0.00); object(0x01BF, 90, 0, 270);
move(6.68, -23.71, 0.00); object(0x01BF, 90, 0, 270);
move(-0.04, 7.90, 0.00); object(0x01BF, 90, 0, 270);
move(-0.04, 7.90, 0.00); object(0x01BF, 90, 0, 270);
move(-0.05, 7.93, 0.00); object(0x01BF, 90, 0, 270);
move(6.31, 0.07, 0.00); object(0x01BF, 90, 0, 270);
move(0.08, -7.70, 0.00); object(0x01BF, 90, 0, 270);
move(0.08, -7.90, 0.00); object(0x01BF, 90, 0, 270);
move(-0.02, -7.77, 0.00); object(0x01BF, 90, 0, 270);
move(6.51, 0.05, 0.00); object(0x01BF, 90, 0, 270);
move(-0.08, 7.83, 0.00); object(0x01BF, 90, 0, 270);
move(-0.08, 8.00, 0.00); object(0x01BF, 90, 0, 270);
move(-0.08, 7.90, 0.00); object(0x01BF, 90, 0, 270);
move(6.48, 0.06, 0.00); object(0x01BF, 90, 0, 270);
move(0.08, -7.80, 0.00); object(0x01BF, 90, 0, 270);
move(0.08, -7.80, 0.00); object(0x01BF, 90, 0, 270);
move(0.05, -7.92, 0.00); object(0x01BF, 90, 0, 270);
move(6.63, 0.19, 0.00); object(0x01BF, 90, 0, 270);
move(-0.04, 7.70, 0.00); object(0x01BF, 90, 0, 270);
move(-0.04, 7.80, 0.00); object(0x01BF, 90, 0, 270);
move(-0.04, 7.90, 0.00); object(0x01BF, 90, 0, 270);
move(-6.71, 7.67, 0.00); object(0x01BF, 90, 0, 270);
move(-0.04, 7.70, 0.00); object(0x01BF, 90, 0, 270);
move(6.41, -1.47, 0.00); object(0x01BF, 90, 0, 270);
move(0.04, -7.30, 0.00); object(0x01BF, 90, 0, 270);
move(6.95, -23.66, 0.00); object(0x01BF, 90, 0, 270);
move(-0.03, 7.70, -1.00); object(0x01BF, 90, 15, 270);
move(-0.03, 7.30, -2.00); object(0x01BF, 90, 15, 270);
move(-0.02, 6.70, -1.80); object(0x01BF, 90, 15, 270);
move(0.01, 6.35, -1.70); object(0x01BF, 90, 15, 270);
move(-3.97, 0.57, 6.72); object(0x01EF, 0, 0, 270);
move(0.02, -6.30, 0.00); object(0x01EF, 0, 0, 270);
move(0.02, -6.30, 0.00); object(0x01EF, 0, 0, 270);
move(0.02, -6.30, 0.00); object(0x01EF, 0, 0, 270);
move(7.02, -13.30, 0.00); object(0x01EF, 0, 0, 270);
move(-0.00, 1.10, 0.00); object(0x01EF, 0, 0, 270);
move(-20.29, 32.37, 0.00); object(0x01EF, 0, 0, 180);
move(-6.10, 0.00, 0.00); object(0x01EF, 0, 0, 180);
move(-6.10, 0.00, 0.00); object(0x01EF, 0, 0, 180);
move(-6.10, 0.00, 0.00); object(0x01EF, 0, 0, 180);
move(-6.20, 0.00, 0.00); object(0x01EF, 0, 0, 180);
move(-1.10, 0.00, 0.00); object(0x01EF, 0, 0, 180);
//car spawns
//landstalker
setchar(08E4Eb78, 131);
setchar(08E4Eb78 + 0x18, 0x01);
setfloat(08E4Eb7c, -1134.07, 48.77, 58.78, 90);
//Linerunner
setchar(08E4Eba4, 134);
setchar(08E4eba4 + 0x18, 0x01);
setfloat(08E4Eba8, -1115.27, 45.67, 59.48, 180);
//bobcat
setchar(08E4Ebfc, 153);
setchar(08E4Ebfc + 0x18, 0x01);
setfloat(08E4ec00, -1135.40, 29.64, 58.50, 90);
//cartel cruiser
setchar(08E4Ec54, 176);
setchar(08E4Ec54 + 0x18, 0x01);
setfloat(08E4Ec58, -1144.86, 28.49, 67.51, 0);
//securicar
setchar(08E4Ec80, 159);
setchar(08E4Ec80 + 0x18, 0x01);
setfloat(08E4Ec84, -1118.17, 31.21, 59.04, 90);
//hunter
setchar(08E4Ecd8, 213);
setchar(08E4Ecd8 + 0x18, 0x01);
setfloat(08E4Ecdc, -1093.59, 35.83, 69.91, 45);
//Rc Bandit
setchar(08E4Ed04, 137);
setchar(08E4Ed04 + 0x18, 0x01);
setfloat(08E4Ed08, -1112.59, 41.01, 68.52, 90);
//diablo
setchar(08E4Ed88, 175);
setchar(08E4Ed88 + 0x18, 0x01);
setfloat(08E4Ed8c, 1187.36, -41.28, 52.73, 0);
//yardie
setchar(08E4Edb4, 173);
setchar(08E4Edb4 + 0x18, 0x01);
setfloat(08E4Edb8, -1199.13, -40.75, 52.83, 0);
//leone
setchar(08E4Ede0, 172);
setchar(08E4Ede0 + 0x18, 0x01);
setfloat(08E4Ede4, -1206.78, -9.69, 52.77, 180);
//hoods
setchar(08E4Ee0c, 177);
setchar(08E4Ee0c + 0x18, 0x01);
setfloat(08E4Ee10, -1112.59, 41.01, 68.52, 90);
off()
teleport(-1184.26, -18.84, 53.17);
setshort(0x992FD62, 0x54, 0x75, 0x6e, 0x64, 0x72, 0x61);
setchar(0x945ab42, 0x5);
setchar(0x945ab41, 0x50);
setchar(0x945ab40, 0x34);
setshort(0x9441ad0, 250);
setfloat(0x9441acc, 1.60);
setfloat(0x945aac0, 1700);
setfloat(0x945aac8, 0.65);
setfloat(0x945ab80, 0.35);
setfloat(0x945ab84, -0.17999);
setfloat(0x945ab88, 0.4);
setfloat(0x945ab4c, 1.5);
setfloat(0x945ab50, 1.5);
setfloat(0x945ab44, 0.00287);
setfloat(0x945ab60, 0.65);
setfloat(0x945ab64, 0);
setfloat(0x945ab68, 35);
setfloat(0x945ab78, 1.5);
setfloat(0x945ab7c, 0.1);
setfloat(0x945ab94, 0.26);
setfloat(0x945ab8c, 0);
setfloat(0x945aae0, 0);
setfloat(0x945aae4, 0.05);
setfloat(0x945aae8, -0.19999);
setchar(0x945aaf0, 75);
setfloat(0x945ab6c, 0.85);
setfloat(0x945ab70, 0.57);
setfloat(0x945aacc, 0.23529);
sethex(0x945ab90, 0x03, 0xcb, 0x00, 0x04);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb04, 0x00, 0x00, 0x00);
sethex(0x944fb34, 0x00, 0x00, 0x00);
setint(0x8E38A38, 153);
setchar(0x8E38A5C, 105, 117);
sethex(0x8E38A5E, 0x01, 0x00);
setfloat(pcar + 0x08, 0);
setfloat(pcar + 0x18, 0);
sethex(0x967E824, 0x99, 0x00, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
setshort(0x992FD36, 0x20, 0x20, 0x50, 0x69, 0x6d, 0x70, 0x69, 0x6e, 0x27);
setchar(0x945a872, 0x5);
setchar(0x945a871, 0x44);
setchar(0x945a870, 0x34);
setshort(0x9441620, 250);
setfloat(0x944161c, 0.90);
setfloat(0x945a7f0, 1800);
setfloat(0x945a7f8, 0.55);
setfloat(0x945a8b0, 0.35);
setfloat(0x945a8b4, -0.475);
setfloat(0x945a8b8, 0.5375);
setfloat(0x945a87c, 0.875);
setfloat(0x945a880, 0.875);
setfloat(0x945a874, 0.002);
setfloat(0x945a890, 0.55);
setfloat(0x945a894, 0);
setfloat(0x945a898, 28);
setfloat(0x945a8a8, 1);
setfloat(0x945a8ac, 0.05);
setfloat(0x945a8c4, 0.195);
setfloat(0x945a8bc, 0);
setfloat(0x945a810, 0);
setfloat(0x945a814, 0);
setfloat(0x945a818, 0);
setchar(0x945a820, 70);
setfloat(0x945a89c, 0.8);
setfloat(0x945a8a0, 0.52);
setfloat(0x945a7fc, 0.6);
sethex(0x945a8c0, 0x83, 0xa1, 0x00, 0x01);
setchar(0x967E6FC, 0xFF, 0x10, 0x00);
sethex(0x944fb10, 0x5C, 0x08, 0x82);
sethex(0x944fb34, 0x5C, 0x08, 0x82);
setint(0x8E38A38, 150);
setchar(0x8E38A5C, 108, 117);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
setshort(0x9941808, 0x20, 0x47, 0x68, 0x6f, 0x73, 0x74, 0x20, 0x56, 0x54);
setchar(0x945cee2, 0x5);
setchar(0x945cee1, 0x44);
setchar(0x945cee0, 0x34);
setshort(0x9444e60, 251);
setfloat(0x9444e5c, 1.025);
setfloat(0x945ce60, 1800);
setfloat(0x945ce68, 0.65);
setfloat(0x945cf20, 0.28);
setfloat(0x945cf24, -0.11999);
setfloat(0x945cf28, 0.5);
setfloat(0x945ceec, 1.925);
setfloat(0x945cef0, 1.925);
setfloat(0x945cee4, 0.00912);
setfloat(0x945cf00, 0.9);
setfloat(0x945cf04, 0);
setfloat(0x945cf08, 41.25);
setfloat(0x945cf18, 1.4);
setfloat(0x945cf1c, 0.2);
setfloat(0x945cf34, 0.25);
setfloat(0x945cf2c, 0.3);
setfloat(0x945ce80, 0);
setfloat(0x945ce84, 0);
setfloat(0x945ce88, -0.19999);
setchar(0x945ce90, 75);
setfloat(0x945cf0c, 0.9);
setfloat(0x945cf10, 0.47);
setfloat(0x945ce6c, 0);
sethex(0x945cf30, 0x03, 0x01, 0x00, 0x04);
sethex(0x944fb58, 0xFF, 0x0D, 0x08);
sethex(0x944fb50, 0x00, 0x00, 0x00);
setint(0x8E38A38, 186);
setchar(0x8E38A5C, 126, 124);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
setshort(0x992FC5A, 0x50, 0x49, 0x4d, 0x50, 0x20, 0x48, 0x32);
setchar(0x9459d32, 0x5);
setchar(0x9459d31, 0x50);
setchar(0x9459d30, 0x34);
setshort(0x94401d0, 250);
setfloat(0x94401cc, 0.9);
setfloat(0x9459cb0, 2500);
setfloat(0x9459cb8, 0.7);
setfloat(0x9459d70, 0.35);
setfloat(0x9459d74, -0.34999);
setfloat(0x9459d78, 0.5);
setfloat(0x9459d3c, 0.86933);
setfloat(0x9459d40, 0.86933);
setfloat(0x9459d34, 0.001);
setfloat(0x9459d50, 0.5);
setfloat(0x9459d54, 0);
setfloat(0x9459d58, 30);
setfloat(0x9459d68, 1.5);
setfloat(0x9459d6c, 0.08);
setfloat(0x9459d84, 0.28);
setfloat(0x9459d7c, 0);
setfloat(0x9459cd0, 0);
setfloat(0x9459cd4, 0.1);
setfloat(0x9459cd8, -0.29999);
setchar(0x9459ce0, 80);
setfloat(0x9459d5c, 0.85);
setfloat(0x9459d60, 0.5);
setfloat(0x9459cbc, 0.2);
sethex(0x9459d80, 0x03, 0x41, 0x00, 0x01);
sethex(0x944fb4c, 0x00, 0x00, 0x00);
sethex(0x944fb08, 0x77, 0x35, 0x39);
setint(0x8E38988, 137);
setchar(0x8E389AC, 123, 106);
sethex(0x8E389AE, 0x01, 0x00);
teleport(1155.71, -257.05, 17.30);
setchar(pplayer + 0xB84, 0x00);
setshort(0x992FDF6, 0x48, 0x42, 0x58);
setchar(0x945b1d2, 0x5);
setchar(0x945b1d1, 0x44);
setchar(0x945b1d0, 0x52);
setshort(0x9442750, 250);
setfloat(0x944274c, 1.15);
setfloat(0x945b150, 5500);
setfloat(0x945b158, 1.825);
setfloat(0x945b210, 0.45);
setfloat(0x945b214, -0.01);
setfloat(0x945b218, 0.45);
setfloat(0x945b1dc, 2);
setfloat(0x945b1e0, 2);
setfloat(0x945b1d4, 0.00575);
setfloat(0x945b1f0, 0.4875);
setfloat(0x945b1f4, 0);
setfloat(0x945b1f8, 40);
setfloat(0x945b208, 1.5625);
setfloat(0x945b20c, 0.07);
setfloat(0x945b224, 0.2);
setfloat(0x945b21c, 0);
setfloat(0x945b170, 0);
setfloat(0x945b174, 0.5);
setfloat(0x945b178, -0.79999);
setchar(0x945b180, 86);
setfloat(0x945b1fc, 0.85);
setfloat(0x945b200, 0.4);
setfloat(0x945b15c, 0.27273);
sethex(0x945b220, 0x87, 0x81, 0x00, 0x05);
setchar(0x967E6FC, 0xFF, 0x00, 0xFF);
sethex(0x944fb1c, 0xC8, 0xCC, 0xCF);
sethex(0x944fb38, 0x00, 0x00, 0x00);
setint(0x8E38A38, 161);
setchar(0x8E38A5C, 111, 118);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
setshort(0x992FF00, 0x20, 0x20, 0x20, 0x36, 0x39, 0x20, 0x43, 0x68, 0x65, 0x76, 0x79);
setchar(0x945c492, 0x6);
setchar(0x945c491, 0x44);
setchar(0x945c490, 0x34);
setshort(0x9443a10, 250);
setfloat(0x9443a0c, 0.73);
setfloat(0x945c410, 1400);
setfloat(0x945c418, 0.75);
setfloat(0x945c4d0, 0.28);
setfloat(0x945c4d4, -0.19999);
setfloat(0x945c4d8, 0.45);
setfloat(0x945c49c, 0.88667);
setfloat(0x945c4a0, 0.88667);
setfloat(0x945c494, 0.00325);
setfloat(0x945c4b0, 0.52);
setfloat(0x945c4b4, 0);
setfloat(0x945c4b8, 30);
setfloat(0x945c4c8, 1);
setfloat(0x945c4cc, 0.08);
setfloat(0x945c4e4, 0.615);
setfloat(0x945c4dc, 3);
setfloat(0x945c430, 0);
setfloat(0x945c434, -1.15);
setfloat(0x945c438, 0.2375);
setchar(0x945c440, 75);
setfloat(0x945c4bc, 0.85);
setfloat(0x945c4c0, 0.52);
setfloat(0x945c41c, 2.5);
sethex(0x945c4e0, 0x83, 0xa1, 0x00, 0x05);
setchar(0x967E6FC, 0xFF, 0x00, 0xFF);
sethex(0x944fb04, 0xFF, 0xFF, 0x00);
sethex(0x944fb14, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 173);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
setshort(0x992FDD4, 0x20, 0x20, 0x56, 0x49, 0x50, 0x45, 0x52);
setchar(0x945b0e2, 0x5);
setchar(0x945b0e1, 0x50);
setchar(0x945b0e0, 0x52);
setshort(0x94425c0, 250);
setfloat(0x94425bc, 0.775);
setfloat(0x945b060, 1450);
setfloat(0x945b068, 0.9);
setfloat(0x945b120, 0.2625);
setfloat(0x945b124, -0.175);
setfloat(0x945b128, 0.5);
setfloat(0x945b0ec, 2.2);
setfloat(0x945b0f0, 2.2);
setfloat(0x945b0e4, 0.004);
setfloat(0x945b100, 0.825);
setfloat(0x945b104, 0);
setfloat(0x945b108, 35);
setfloat(0x945b118, 1.53125);
setfloat(0x945b11c, 0.13125);
setfloat(0x945b134, 0.15);
setfloat(0x945b12c, 0.3);
setfloat(0x945b080, 0);
setfloat(0x945b084, 0);
setfloat(0x945b088, -0.19999);
setchar(0x945b090, 70);
setfloat(0x945b10c, 0.91875);
setfloat(0x945b110, 0.5);
setfloat(0x945b06c, 0.7);
sethex(0x945b130, 0x83, 0xa1, 0x00, 0x01);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb10, 0x00, 0x00, 0x00);
sethex(0x944fb34, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 160);
setchar(0x8E38A5C, 108, 117);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
setshort(0x992FE80, 0x20, 0x50, 0x69, 0x6d, 0x70, 0x20, 0x4d, 0x63);
setchar(0x945ba42, 0x6);
setchar(0x945ba41, 0x50);
setchar(0x945ba40, 0x52);
setshort(0x94430b0, 250);
setfloat(0x94430ac, 0.71888);
setfloat(0x945b9c0, 1112.5);
setfloat(0x945b9c8, 2);
setfloat(0x945ba80, 2);
setfloat(0x945ba84, -0.0725);
setfloat(0x945ba88, 0.2075);
setfloat(0x945ba4c, 70.975);
setfloat(0x945ba50, 70.975);
setfloat(0x945ba44, 0.00475);
setfloat(0x945ba60, 0.975);
setfloat(0x945ba64, 0.7);
setfloat(0x945ba68, 30.125);
setfloat(0x945ba78, 2.2);
setfloat(0x945ba7c, 0.1);
setfloat(0x945ba94, 0.3);
setfloat(0x945ba8c, 0);
setfloat(0x945b9e0, 0);
setfloat(0x945b9e4, 0);
setfloat(0x945b9e8, 0);
setchar(0x945b9f0, 70);
setfloat(0x945ba6c, 0.75);
setfloat(0x945ba70, 0.5);
setfloat(0x945b9cc, 10);
sethex(0x945ba90, 0x82, 0xa9, 0x00, 0x05);
setchar(0x967E6FC, 0x00, 0x00, 0xFF);
sethex(0x944fb0c, 0x7A, 0xC4, 0xFE);
sethex(0x944fb2c, 0xFF, 0x00, 0x00);
setint(0x8E38A38, 167);
setchar(0x8E38A5C, 107, 115);
sethex(0x8E38A5E, 0x01, 0xFF);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
setshort(0x992FE5C, 0x4a, 0x6f, 0x4a, 0x6f);
setchar(0x945b772, 0x2);
setchar(0x945b771, 0x50);
setchar(0x945b770, 0x34);
setshort(0x9442c00, 0);
setfloat(0x9442bfc, 0.825);
setfloat(0x945b6f0, 5000);
setfloat(0x945b6f8, 0.65);
setfloat(0x945b7b0, 0.5);
setfloat(0x945b7b4, -0.04999);
setfloat(0x945b7b8, 0.2);
setfloat(0x945b77c, 0.625);
setfloat(0x945b780, 0.625);
setfloat(0x945b774, 0.00275);
setfloat(0x945b790, 0.45);
setfloat(0x945b794, 0);
setfloat(0x945b798, 45);
setfloat(0x945b7a8, 1.5);
setfloat(0x945b7ac, 0.13125);
setfloat(0x945b7c4, 0.5);
setfloat(0x945b7bc, 0);
setfloat(0x945b710, 0);
setfloat(0x945b714, 0.3);
setfloat(0x945b718, 0);
setchar(0x945b720, 75);
setfloat(0x945b79c, 0.9);
setfloat(0x945b7a0, 0.5);
setfloat(0x945b6fc, 0);
sethex(0x945b7c0, 0x00, 0x80, 0x04, 0x00);
sethex(0x944fb2c, 0xFF, 0xFF, 0x00);
sethex(0x944fb54, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 164);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
setshort(0x992FBEA, 0x20, 0x20, 0x20, 0x24, 0x4c, 0x6f, 0x77, 0x20, 0x4d, 0x63, 0x24);
setchar(0x9459792, 0x6);
setchar(0x9459791, 0x50);
setchar(0x9459790, 0x34);
setshort(0x943f870, 250);
setfloat(0x943f86c, 0.89);
setfloat(0x9459710, 2000);
setfloat(0x9459718, 2.7);
setfloat(0x94597d0, 0.1);
setfloat(0x94597d4, -0.01);
setfloat(0x94597d8, 0.5);
setfloat(0x945979c, 3);
setfloat(0x94597a0, 3);
setfloat(0x9459794, 0.00762);
setfloat(0x94597b0, 1);
setfloat(0x94597b4, 0.5);
setfloat(0x94597b8, 34);
setfloat(0x94597c8, 1);
setfloat(0x94597cc, 0.1);
setfloat(0x94597e4, 0.15);
setfloat(0x94597dc, 0);
setfloat(0x9459730, 0);
setfloat(0x9459734, 0);
setfloat(0x9459738, -0.5);
setchar(0x9459740, 70);
setfloat(0x94597bc, 0.9);
setfloat(0x94597c0, 0.45);
setfloat(0x945971c, 0);
sethex(0x94597e0, 0x8a, 0xc0, 0x00, 0x05);
sethex(0x944fb1c, 0x00, 0x00, 0x00);
sethex(0x944fb38, 0x00, 0x00, 0x00);
setint(0x8E38A38, 131);
setchar(0x8E38A5C, 111, 118);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
setshort(0x99450E2, 0x46, 0x43, 0x52, 0x2d, 0x39, 0x30, 0x30);
setchar(0x945d482, 0x5);
setchar(0x945d481, 0x50);
setchar(0x945d480, 0x52);
setshort(0x9446c10, 255);
setfloat(0x9446c0c, 0.67);
setfloat(0x945d400, 500);
setfloat(0x945d408, 1.6);
setfloat(0x945d4c0, 0.15);
setfloat(0x945d4c4, -0.075);
setfloat(0x945d4c8, 0.5);
setfloat(0x945d48c, 0.97867);
setfloat(0x945d490, 0.97867);
setfloat(0x945d484, 0.00625);
setfloat(0x945d4a0, 0.5);
setfloat(0x945d4a4, 0);
setfloat(0x945d4a8, 35);
setfloat(0x945d4b8, 0.85);
setfloat(0x945d4bc, 0.15);
setfloat(0x945d4d4, 0);
setfloat(0x945d4cc, 0);
setfloat(0x945d420, 0);
setfloat(0x945d424, 0.05);
setfloat(0x945d428, -0.08999);
setchar(0x945d430, 103);
setfloat(0x945d4ac, 0.9);
setfloat(0x945d4b0, 0.48);
setfloat(0x945d40c, 0.6);
sethex(0x945d4d0, 0x82, 0x81, 0x01, 0x00);
sethex(0x944fb38, 0x01, 0x01, 0x52);
sethex(0x944fb04, 0x03, 0x05, 0x56);
setint(0x8E38A38, 205);
setchar(0x8E38A5C, 118, 105);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
moveto(1473.81, -630.99, 14.66); object(0x0239, 0, 0, 270);
move(0.04, -4.89, 0.00); object(0x0239, 0, 0, 90);
move(-4.07, -3.76, 1.81); object(0x01BF, 0, 0, 180);
move(15.95, 5.85, 0.30); object(0x0F98, 0, 0, 270);
move(-3.51, 0.22, 0.10); object(0x0F98, 0, 0, 180);
move(-0.12, -3.55, -2.06); object(0x0239, 0, 0, 0);
move(3.65, 0.03, 3.20); object(0x01BF, 0, 0, 0);
move(-7.41, 3.67, 0.00); object(0x01BF, 0, 0, 90);
move(-0.00, 4.51, 0.00); object(0x01BF, 0, 0, 90);
move(4.05, -0.86, 0.00); object(0x01BF, 0, 0, 180);
move(-5.25, 6.43, -24.40); object(0x01BF, 0, 0, 292);
move(0.00, 0.00, 3.90); object(0x01BF, 0, 0, 292);
move(0.00, 0.00, 0.10); object(0x01BF, 0, 0, 292);
move(2.64, 0.61, -0.10); object(0x01BF, 0, 0, 292);
move(0.00, 0.00, -1.70); object(0x01BF, 0, 0, 292);
move(6.36, -6.95, 18.90); object(0x01BF, 0, 0, 0);
move(0.58, 3.91, 1.60); object(0x01BF, 0, 0, 270);
move(0.03, 1.81, 0.00); object(0x01BF, 0, 0, 270);
move(-1.14, 4.14, -1.65); object(0x01BF, 270, 0, 0);
move(-7.92, 0.05, 0.00); object(0x01BF, 270, 0, 0);
move(0.01, 3.28, -2.30); object(0x01BF, 0, 0, 0);
move(7.93, -0.02, 0.00); object(0x01BF, 0, 0, 0);
move(3.95, -3.89, 0.00); object(0x01BF, 0, 0, 270);
move(-15.96, -0.02, 0.00); object(0x01BF, 0, 0, 270);
move(-163.76, 170.93, 48.19); object(0x0F9A, 0, 0, 180);
move(0.02, -7.20, 0.00); object(0x0F98, 0, 0, 90);
move(0.02, -7.10, 0.10); object(0x0F99, 0, 0, 90);
move(-0.38, 10.68, -0.80); object(0x01BF, 0, 0, 180);
move(-0.05, -7.33, 0.00); object(0x01BF, 0, 0, 180);
move(0.32, -7.04, 0.30); object(0x01BF, 0, 0, 180);
move(6.47, 21.89, -1.70); object(0x0239, 0, 0, 270);
move(-2.91, -4.08, 0.00); object(0x0239, 0, 0, 270);
move(0.08, -7.42, 0.00); object(0x0239, 0, 0, 270);
move(0.10, -6.61, 0.00); object(0x0239, 0, 0, 90);
move(-1.30, -3.76, 0.00); object(0x0239, 0, 0, 181);
move(3.94, 14.54, 1.07); object(0x01BF, 0, 0, 90);
move(0.03, -7.72, 0.00); object(0x01BF, 0, 0, 90);
move(-0.01, -3.01, 0.00); object(0x01BF, 0, 0, 90);
move(-0.47, -1.48, -4.30); object(0x0216, 0, 0, 197);
move(-0.15, -2.48, 5.30); object(0x0F90, 270, 0, 180);
move(0.20, 0.02, 0.00); object(0x0F90, 270, 0, 180);
move(0.10, 0.01, 0.00); object(0x0F90, 270, 0, 180);
move(0.20, 0.02, 0.00); object(0x0F90, 270, 0, 180);
move(6.52, 13.45, -28.90); object(0x0F91, 270, 0, 299);
move(-3.35, 18.28, 30.10); object(0x0F92, 270, 0, 176);
move(1.19, 0.18, 0.00); object(0x0F93, 270, 0, 176);
move(-0.08, 0.52, 0.00); object(0x0F93, 270, 0, 176);
move(-3.85, -15.82, -3.20); object(0x0F92, 270, 0, 180);
move(0.50, 0.04, 0.00); object(0x0F92, 270, 0, 180);
move(0.25, 0.10, 0.00); object(0x0F92, 270, 0, 180);
move(0.40, -0.00, 0.00); object(0x0F92, 270, 0, 180);
move(0.31, -0.02, 0.00); object(0x0F92, 270, 0, 180);
move(6.52, 15.35, 0.60); object(0x0F92, 270, 0, 192);
move(-12.16, -13.76, 3.80); object(0x01BF, 270, 0, 0);
move(-2.81, -0.03, 0.00); object(0x01BF, 270, 0, 0);
move(2.80, -6.74, 0.00); object(0x01BF, 270, 0, 0);
move(-2.82, 0.05, 0.00); object(0x01BF, 270, 0, 0);
move(2.82, -6.87, 0.00); object(0x01BF, 270, 0, 0);
move(-2.85, 0.04, 0.00); object(0x01BF, 270, 0, 0);
move(0.11, -1.40, 0.00); object(0x01BF, 270, 0, 0);
move(2.71, -0.05, 0.00); object(0x01BF, 270, 0, 0);
move(1.77, -0.76, 0.70); object(0x0842, 0, 105, 0);
move(-0.01, 5.11, 0.00); object(0x0842, 0, 105, 0);
move(-0.01, 4.93, 0.00); object(0x0842, 0, 105, 359);
move(-0.14, 5.20, 0.00); object(0x0842, 0, 105, 359);
move(-0.13, 4.90, 0.00); object(0x0842, 0, 105, 359);
move(-2.73, -20.18, 0.90); object(0x0842, 0, 105, 359);
move(-0.14, 5.10, 0.00); object(0x0842, 0, 105, 359);
move(-0.14, 5.10, 0.00); object(0x0842, 0, 105, 359);
move(-0.14, 5.10, 0.00); object(0x0842, 0, 105, 359);
move(-0.13, 4.80, 0.00); object(0x0842, 0, 105, 359);
move(-2.65, -20.07, -0.50); object(0x0842, 0, 120, 180);
move(-0.05, 5.10, 0.00); object(0x0842, 0, 120, 180);
move(-0.05, 5.10, 0.00); object(0x0842, 0, 120, 180);
move(-0.05, 5.10, 0.00); object(0x0842, 0, 120, 180);
move(-0.05, 5.10, 0.00); object(0x0842, 0, 120, 180);
move(8.77, -3.46, -2.91); object(0x0EDA, 270, 0, 270);
move(47.10, -17.80, -56.29); object(0x0EE2, 0, 0, 354);
move(-8.04, 7.80, 32.17); object(0x0EE3, 0, 0, 354);
moveto(1308.50, -467.99, 59.11); object(0x0257, 0, 0, 270);
move(3.00, -0.01, 0.00); object(0x0257, 0, 0, 270);
move(-21.32, -4.86, 0.00); object(0x0223, 0, 0, 134);
move(16.58, 4.80, 0.10); object(0x0228, 0, 0, 246);
move(0.49, -4.37, -0.30); object(0x026D, 0, 0, 255);
move(1.06, 0.29, -1.60); object(0x026D, 0, 0, 255);
move(-1.10, 1.29, 0.30); object(0x026D, 0, 0, 247);
move(25.65, 9.57, -19.90); object(0x022A, 0, 0, 269);
moveto(1328.15, -450.88, 53.48); object(0x0FB0, 0, 0, 0);
move(-0.02, 4.90, 0.00); object(0x0FB0, 0, 0, 120);
move(0.03, -4.90, 0.60); object(0x0F90, 270, 0, 90);
move(-0.02, 4.90, 0.00); object(0x0F90, 270, 0, 90);
teleport(1347.57, -457.76, 50.00);
setshort(0x9930094, 0x20, 0x56, 0x38, 0x20, 0x50, 0x49, 0x4d, 0x50);
setchar(0x945cfd2, 0x5);
setchar(0x945cfd1, 0x44);
setchar(0x945cfd0, 0x34);
setshort(0x9444ff0, 250);
setfloat(0x9444fec, 1.05);
setfloat(0x945cf50, 1200);
setfloat(0x945cf58, 1.3);
setfloat(0x945d010, 0.05);
setfloat(0x945d014, -0.01);
setfloat(0x945d018, 0.45);
setfloat(0x945cfdc, 1.15);
setfloat(0x945cfe0, 1.15);
setfloat(0x945cfd4, 0.007);
setfloat(0x945cff0, 0.6875);
setfloat(0x945cff4, 0);
setfloat(0x945cff8, 30);
setfloat(0x945d008, 0.125);
setfloat(0x945d00c, 0.13);
setfloat(0x945d024, 0.39);
setfloat(0x945d01c, 0.3);
setfloat(0x945cf70, 0);
setfloat(0x945cf74, -0.14999);
setfloat(0x945cf78, -0.19999);
setchar(0x945cf80, 49);
setfloat(0x945cffc, 0.9);
setfloat(0x945d000, 0.48);
setfloat(0x945cf5c, 0.9);
sethex(0x945d020, 0x83, 0x81, 0x00, 0x00);
setchar(0x967E6FC, 0xFF, 0x10, 0x00);
sethex(0x944fb0c, 0x00, 0x00, 0x00);
sethex(0x944fb50, 0xFF, 0x6A, 0x00);
setint(0x8E38A38, 187);
setchar(0x8E38A5C, 107, 124);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
setshort(0x99300B2, 0x20, 0x20, 0x20, 0x4e, 0x49, 0x47, 0x48, 0x54, 0x4d, 0x41, 0x52, 0x45);
setchar(0x945d1b2, 0x5);
setchar(0x945d1b1, 0x50);
setchar(0x945d1b0, 0x52);
setshort(0x9445310, 250);
setfloat(0x944530c, 0.875);
setfloat(0x945d130, 2000);
setfloat(0x945d138, 1.175);
setfloat(0x945d1f0, 0.1625);
setfloat(0x945d1f4, -0.2625);
setfloat(0x945d1f8, 0.2375);
setfloat(0x945d1bc, 1.975);
setfloat(0x945d1c0, 1.975);
setfloat(0x945d1b4, 0.00562);
setfloat(0x945d1d0, 0.7625);
setfloat(0x945d1d4, 0);
setfloat(0x945d1d8, 35);
setfloat(0x945d1e8, 1.625);
setfloat(0x945d1ec, 0.21875);
setfloat(0x945d204, 0.2);
setfloat(0x945d1fc, 0.4);
setfloat(0x945d150, 0);
setfloat(0x945d154, 0.175);
setfloat(0x945d158, -0.4625);
setchar(0x945d160, 75);
setfloat(0x945d1dc, 0.91875);
setfloat(0x945d1e0, 0.3975);
setfloat(0x945d13c, 0.85714);
sethex(0x945d200, 0x80, 0x81, 0x00, 0x01);
setchar(0x967E6FC, 0xFF, 0x00, 0xFF);
sethex(0x944fb34, 0x00, 0x00, 0x00);
sethex(0x944fb28, 0x00, 0x00, 0x00);
setint(0x8E38A38, 189);
setchar(0x8E38A5C, 117, 114);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
setchar(0x945bc22, 0x6);
setchar(0x945bc21, 0x50);
setchar(0x945bc20, 0x52);
setshort(0x94433d0, 250);
setfloat(0x94433cc, 2.40);
setfloat(0x945bba0, 100);
setfloat(0x945bba8, 1.475);
setfloat(0x945bc60, 0.625);
setfloat(0x945bc64, -0.07999);
setfloat(0x945bc68, 0.5);
setfloat(0x945bc2c, 1.975);
setfloat(0x945bc30, 1.975);
setfloat(0x945bc24, 0.01);
setfloat(0x945bc40, 0.5);
setfloat(0x945bc44, 0);
setfloat(0x945bc48, 46.25);
setfloat(0x945bc58, 1.6);
setfloat(0x945bc5c, 0.1);
setfloat(0x945bc74, 0.2);
setfloat(0x945bc6c, 0.65);
setfloat(0x945bbc0, 0);
setfloat(0x945bbc4, 0.05);
setfloat(0x945bbc8, -0.29999);
setchar(0x945bbd0, 70);
setfloat(0x945bc4c, 0.5);
setfloat(0x945bc50, 0.48);
setfloat(0x945bbac, 1);
sethex(0x945bc70, 0x93, 0xa0, 0x01, 0x04);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb28, 0x00, 0x00, 0x00);
sethex(0x944fb38, 0xFF, 0x0D, 0x08);
setint(0x8E38A38, 169);
setchar(0x8E38A5C, 114, 118);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
setshort(0x992FCE8, 0x41, 0x20, 0x4d, 0x6f, 0x6e, 0x65, 0x79);
setchar(0x945a4b2, 0x5);
setchar(0x945a4b1, 0x50);
setchar(0x945a4b0, 0x52);
setshort(0x9440fe0, 250);
setfloat(0x9440fdc, 1.275);
setfloat(0x945a430, 1337.5);
setfloat(0x945a438, 0.8);
setfloat(0x945a4f0, 0.075);
setfloat(0x945a4f4, -0.14999);
setfloat(0x945a4f8, 0.5);
setfloat(0x945a4bc, 1.15);
setfloat(0x945a4c0, 1.15);
setfloat(0x945a4b4, 0.00662);
setfloat(0x945a4d0, 0.675);
setfloat(0x945a4d4, 0);
setfloat(0x945a4d8, 35);
setfloat(0x945a4e8, 0.8);
setfloat(0x945a4ec, 0.2);
setfloat(0x945a504, 0.4);
setfloat(0x945a4fc, 0.6);
setfloat(0x945a450, 0);
setfloat(0x945a454, -0.19999);
setfloat(0x945a458, -0.24999);
setchar(0x945a460, 70);
setfloat(0x945a4dc, 0.9);
setfloat(0x945a4e0, 0.5);
setfloat(0x945a43c, 0);
sethex(0x945a500, 0x83, 0x81, 0x00, 0x05);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb34, 0xFF, 0x19, 0x03);
sethex(0x944fb28, 0xFF, 0x19, 0x03);
setint(0x8E38A38, 146);
setchar(0x8E38A5C, 117, 114);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
setshort(0x992FEE2, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x4d, 0x57, 0x20, 0x58, 0x38);
setchar(0x945bd12, 0x5);
setchar(0x945bd11, 0x50);
setchar(0x945bd10, 0x52);
setshort(0x9443880, 254);
setfloat(0x944387c, 0.95);
setfloat(0x945bc90, 4800);
setfloat(0x945bc98, 1.250);
setfloat(0x945bd50, 0.1375);
setfloat(0x945bd54, -0.4);
setfloat(0x945bd58, 0.5);
setfloat(0x945bd1c, 0.95);
setfloat(0x945bd20, 0.95);
setfloat(0x945bd14, 0.00480);
setfloat(0x945bd30, 0.55);
setfloat(0x945bd34, 0);
setfloat(0x945bd38, 37);
setfloat(0x945bd48, 1.65625);
setfloat(0x945bd4c, 0.5);
setfloat(0x945bd64, 0.25);
setfloat(0x945bd5c, 0.375);
setfloat(0x945bcb0, 0);
setfloat(0x945bcb4, -0.19999);
setfloat(0x945bcb8, -0.23999);
setchar(0x945bcc0, 70);
setfloat(0x945bd3c, 0.86);
setfloat(0x945bd40, 0.48);
setfloat(0x945bc9c, 0.0);
sethex(0x945bd60, 0x02, 0x80, 0x00, 0x04);
sethex(0x944fb5c, 0xFF, 0xFF, 0x00);
sethex(0x944fb24, 0xFF, 0xFF, 0x00);
setint(0x8E38AE8, 172);
sethex(0x8E38B0E, 0x01, 0x00);
teleport(-789.61, 300.62, 49.05);
setchar(pplayer + 0xB84, 0x00);
setchar(0x9459c42, 0x6);
setchar(0x9459c41, 0x50);
setchar(0x9459c40, 0x34);
setshort(0x9440040, 250);
setfloat(0x944003c, 0.8);
setfloat(0x9459bc0, 1600);
setfloat(0x9459bc8, 0.65);
setfloat(0x9459c80, 0.85);
setfloat(0x9459c84, -0.19999);
setfloat(0x9459c88, 0.5);
setfloat(0x9459c4c, 1.025);
setfloat(0x9459c50, 1.025);
setfloat(0x9459c44, 0.002);
setfloat(0x9459c60, 0.5375);
setfloat(0x9459c64, 0);
setfloat(0x9459c68, 60);
setfloat(0x9459c78, 1);
setfloat(0x9459c7c, 0.08);
setfloat(0x9459c94, 0.2);
setfloat(0x9459c8c, 0.3);
setfloat(0x9459be0, 0);
setfloat(0x9459be4, 0);
setfloat(0x9459be8, -0.19999);
setchar(0x9459bf0, 75);
setfloat(0x9459c6c, 0.75);
setfloat(0x9459c70, 0.48);
setfloat(0x9459bcc, 3.75);
sethex(0x9459c90, 0x03, 0x81, 0x00, 0x04);
setchar(0x967E6FC, 0x00, 0x00, 0xFF);
sethex(0x944fb00, 0x1C, 0x5F, 0xB8);
sethex(0x944fb38, 0x1C, 0x5F, 0xB8);
setint(0x8E38A38, 136);
setchar(0x8E38A5C, 104, 118);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
setchar(0x945a4b2, 0x5);
setchar(0x945a4b1, 0x44);
setchar(0x945a4b0, 0x34);
setshort(0x9440fe0, 250);
setfloat(0x9440fdc, 0.7);
setfloat(0x945a430, 1200);
setfloat(0x945a438, 0.8);
setfloat(0x945a4f0, 0.2);
setfloat(0x945a4f4, -0.14999);
setfloat(0x945a4f8, 0.5);
setfloat(0x945a4bc, 1.06534);
setfloat(0x945a4c0, 1.06534);
setfloat(0x945a4b4, 0.0024);
setfloat(0x945a4d0, 0.48);
setfloat(0x945a4d4, 0);
setfloat(0x945a4d8, 35);
setfloat(0x945a4e8, 0.8);
setfloat(0x945a4ec, 0.2);
setfloat(0x945a504, 0.4);
setfloat(0x945a4fc, 0.6);
setfloat(0x945a450, 0);
setfloat(0x945a454, -0.19999);
setfloat(0x945a458, -0.24999);
setchar(0x945a460, 70);
setfloat(0x945a4dc, 0.95625);
setfloat(0x945a4e0, 0.5);
setfloat(0x945a43c, 0.9);
sethex(0x945a500, 0x83, 0x81, 0x00, 0x03);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb1c, 0x00, 0x00, 0x00);
sethex(0x944fb08, 0x00, 0x00, 0x00);
setint(0x8E38AE8, 146);
setchar(0x8E38B0C, 111, 106);
sethex(0x8E38B0E, 0x01, 0x00);
teleport(-789.61, 300.62, 49.05);
setchar(pplayer + 0xB84, 0x00);
setshort(0x993002A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x4c, 0x4f, 0x57, 0x52, 0x49, 0x44, 0x45, 0x52);
setchar(0x945cdf2, 0x5);
setchar(0x945cdf1, 0x50);
setchar(0x945cdf0, 0x52);
setshort(0x9444cd0, 250);
setfloat(0x9444ccc, 0.825);
setfloat(0x945cd70, 2000);
setfloat(0x945cd78, 1.125);
setfloat(0x945ce30, 0.0875);
setfloat(0x945ce34, -0.6375);
setfloat(0x945ce38, 0.5);
setfloat(0x945cdfc, 2.5);
setfloat(0x945ce00, 2.5);
setfloat(0x945cdf4, 0.00475);
setfloat(0x945ce10, 0.8375);
setfloat(0x945ce14, 0);
setfloat(0x945ce18, 34);
setfloat(0x945ce28, 0.78125);
setfloat(0x945ce2c, 0.13125);
setfloat(0x945ce44, 0.15);
setfloat(0x945ce3c, 0.3);
setfloat(0x945cd90, 0);
setfloat(0x945cd94, 0);
setfloat(0x945cd98, -0.325);
setchar(0x945cda0, 70);
setfloat(0x945ce1c, 0.89);
setfloat(0x945ce20, 0.5);
setfloat(0x945cd7c, 0.7);
sethex(0x945ce40, 0x80, 0x81, 0x00, 0x01);
setchar(0x967E6FC, 0xFF, 0x00, 0xFF);
sethex(0x944fb4c, 0x54, 0xD5, 0xF2);
sethex(0x944fb2c, 0x54, 0xD5, 0xF2);
setint(0x8E38A38, 185);
setchar(0x8E38A5C, 123, 115);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
setchar(0x945ad22, 0x4);
setchar(0x945ad21, 0x44);
setchar(0x945ad20, 0x34);
setshort(0x9441df0, 250);
setfloat(0x9441dec, 0.875);
setfloat(0x945aca0, 1200);
setfloat(0x945aca8, 0.75);
setfloat(0x945ad60, 0.2);
setfloat(0x945ad64, -0.14999);
setfloat(0x945ad68, 0.45);
setfloat(0x945ad2c, 0.74933);
setfloat(0x945ad30, 0.74933);
setfloat(0x945ad24, 0.0024);
setfloat(0x945ad40, 0.5);
setfloat(0x945ad44, 0);
setfloat(0x945ad48, 35);
setfloat(0x945ad58, 1);
setfloat(0x945ad5c, 0.07);
setfloat(0x945ad74, 0.38);
setfloat(0x945ad6c, 0);
setfloat(0x945acc0, 0);
setfloat(0x945acc4, -0.09999);
setfloat(0x945acc8, -0.29999);
setchar(0x945acd0, 80);
setfloat(0x945ad4c, 0.85);
setfloat(0x945ad50, 0.5);
setfloat(0x945acac, 0.66667);
sethex(0x945ad70, 0x18, 0xa9, 0x00, 0x07);
sethex(0x944fb30, 0x00, 0x00, 0x00);
sethex(0x944fb20, 0x1C, 0x5F, 0xB8);
setint(0x8E38AE8, 155);
setchar(0x8E38B0C, 116, 112);
sethex(0x8E38B0E, 0x01, 0x00);
teleport(-789.61, 300.62, 49.05);
setchar(pplayer + 0xB84, 0x00);
setshort(0x992FF00, 0x20, 0x20, 0x20, 0x36, 0x39, 0x20, 0x43, 0x68, 0x65, 0x76, 0x79);
setchar(0x945c492, 0x6);
setchar(0x945c491, 0x44);
setchar(0x945c490, 0x34);
setshort(0x9443a10, 250);
setfloat(0x9443a0c, 0.73);
setfloat(0x945c410, 1400);
setfloat(0x945c418, 0.75);
setfloat(0x945c4d0, 0.28);
setfloat(0x945c4d4, -0.19999);
setfloat(0x945c4d8, 0.45);
setfloat(0x945c49c, 0.88667);
setfloat(0x945c4a0, 0.88667);
setfloat(0x945c494, 0.00325);
setfloat(0x945c4b0, 0.52);
setfloat(0x945c4b4, 0);
setfloat(0x945c4b8, 30);
setfloat(0x945c4c8, 1);
setfloat(0x945c4cc, 0.08);
setfloat(0x945c4e4, 0.615);
setfloat(0x945c4dc, 3);
setfloat(0x945c430, 0);
setfloat(0x945c434, -1.15);
setfloat(0x945c438, 0.2375);
setchar(0x945c440, 75);
setfloat(0x945c4bc, 0.85);
setfloat(0x945c4c0, 0.52);
setfloat(0x945c41c, 2.5);
sethex(0x945c4e0, 0x83, 0xa1, 0x00, 0x05);
setchar(0x967E6FC, 0xFF, 0x00, 0xFF);
sethex(0x944fb04, 0xFF, 0xFF, 0x00);
sethex(0x944fb14, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 173);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
setshort(0x992FE80, 0x20, 0x50, 0x69, 0x6d, 0x70, 0x20, 0x4d, 0x63);
setchar(0x945ba42, 0x6);
setchar(0x945ba41, 0x50);
setchar(0x945ba40, 0x52);
setshort(0x94430b0, 250);
setfloat(0x94430ac, 0.71888);
setfloat(0x945b9c0, 1112.5);
setfloat(0x945b9c8, 2);
setfloat(0x945ba80, 2);
setfloat(0x945ba84, -0.0725);
setfloat(0x945ba88, 0.2075);
setfloat(0x945ba4c, 70.975);
setfloat(0x945ba50, 70.975);
setfloat(0x945ba44, 0.00475);
setfloat(0x945ba60, 0.975);
setfloat(0x945ba64, 0.7);
setfloat(0x945ba68, 30.125);
setfloat(0x945ba78, 2.2);
setfloat(0x945ba7c, 0.1);
setfloat(0x945ba94, 0.3);
setfloat(0x945ba8c, 0);
setfloat(0x945b9e0, 0);
setfloat(0x945b9e4, 0);
setfloat(0x945b9e8, 0);
setchar(0x945b9f0, 70);
setfloat(0x945ba6c, 0.75);
setfloat(0x945ba70, 0.5);
setfloat(0x945b9cc, 10);
sethex(0x945ba90, 0x82, 0xa9, 0x00, 0x05);
setchar(0x967E6FC, 0x00, 0x00, 0xFF);
sethex(0x944fb0c, 0x7A, 0xC4, 0xFE);
sethex(0x944fb2c, 0xFF, 0x00, 0x00);
setint(0x8E38A38, 167);
setchar(0x8E38A5C, 107, 115);
sethex(0x8E38A5E, 0x01, 0xFF);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
setchar(0x09000000, 0);
moveto(300.54, -500.97, 36.18); object(0x01BF, 270, 0, 269);
move(6.40, -0.11, 0.00); object(0x01BF, 270, 0, 270);
move(-14.64, 17.27, 0.30); object(0x01BF, 270, 340, 270);
move(-6.48, 0.00, 0.00); object(0x01BF, 270, 340, 270);
move(13.85, -113.12, -0.40); object(0x01BF, 270, 0, 97);
move(7.13, 0.10, 0.00); object(0x01BF, 270, 0, 270);
move(-5.65, -5.40, 0.00); object(0x01A8, 180, 270, 183);
move(-10.85, -2.46, -1.00); object(0x01A8, 180, 270, 183);
move(-22.97, 120.23, 3.80); object(0x01F3, 180, 180, 90);
move(-0.06, -6.82, 0.00); object(0x01F3, 180, 180, 90);
move(-0.01, -6.83, 0.00); object(0x01F3, 180, 180, 90);
move(0.14, -9.98, 0.00); object(0x01F3, 180, 180, 90);
move(-1.40, -5.21, 0.00); object(0x01F3, 180, 180, 90);
move(-0.03, -9.83, 0.00); object(0x01F3, 180, 180, 90);
move(0.00, -10.36, 0.00); object(0x01F3, 180, 180, 90);
move(-0.01, -9.84, 0.00); object(0x01F3, 180, 180, 90);
move(0.01, -9.84, 0.00); object(0x01F3, 180, 180, 90);
move(0.01, -9.42, 0.00); object(0x01F3, 180, 180, 90);
move(0.02, -6.96, 0.00); object(0x01F3, 180, 180, 90);
move(-0.04, -6.83, 0.00); object(0x01F3, 180, 180, 90);
move(0.06, -6.75, 0.00); object(0x01F3, 180, 180, 90);
move(0.05, -6.65, 0.00); object(0x01F3, 180, 180, 90);
move(-0.12, -9.82, 0.00); object(0x01F3, 180, 180, 90);
move(-0.40, -4.88, -1.20); object(0x01F0, 180, 180, 270);
move(3.98, 122.70, -2.90); object(0x021A, 180, 180, 204);
move(31.71, 2.79, 0.00); object(0x021A, 180, 180, 324);
move(-32.04, -44.31, 0.20); object(0x021A, 180, 180, 192);
move(0.14, -23.50, -0.10); object(0x021A, 180, 180, 192);
move(0.04, -24.05, 0.00); object(0x021A, 180, 180, 185);
move(7.75, -33.40, -0.10); object(0x021A, 180, 180, 31);
move(27.02, 76.12, 0.00); object(0x021A, 180, 180, 171);
move(-1.15, -19.22, 0.10); object(0x021A, 180, 180, 11);
move(1.28, -32.96, 0.30); object(0x021A, 180, 180, 22);
move(-1.60, 75.59, -0.40); object(0x021A, 180, 180, 325);
move(-23.89, 24.82, 1.40); object(0x025B, 180, 180, 159);
moveto(270.87, -486.24, 36.38); object(0x025B, 0, 0, 4);
move(0.22, -8.79, 0.40); object(0x025C, 0, 0, 270);
move(31.31, -80.55, -0.80); object(0x0DB6, 0, 0, 336);
move(-31.02, 88.78, 0.50); object(0x0F76, 0, 0, 126);
move(33.10, -80.18, -0.70); object(0x0EC4, 0, 0, 336);
//PMG CARS
//2006 MUSTANG COBRA GT 500
setshort(0x9930094, 0x20, 0x20, 0x20, 0x43, 0x4f, 0x42, 0x52, 0x41);
setfloat(0x9444fec, 0.85);
setfloat(0x945cf50, 2000);
setfloat(0x945cf58, 1.675);
setfloat(0x945d014, -0.0625);
setfloat(0x945d018, 0.3375);
setfloat(0x945cfdc, 3);
setfloat(0x945cfe0, 3);
setfloat(0x945cfd4, 0.00438);
setfloat(0x945cff0, 0.75);
setfloat(0x945cff8, 36.25);
setfloat(0x945cf74, -0.05);
setfloat(0x945cf78, -0.45);
setfloat(0x945cffc, 0.9375);
sethex(0x945d020, 0x82, 0x81, 0x00, 0x01);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb18, 0x00, 0x00, 0x00);
sethex(0x944fb1c, 0xFF, 0x0D, 0x08);
setint(0x8E38A38, 187);
setchar(0x8E38A5C, 110, 111);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
// SUPERCHARGED CHEVY CAMARO 1969
setshort(0x992FF36, 0x63, 0x68, 0x65, 0x76, 0x79, 0x20, 0x63, 0x61, 0x6d, 0x61, 0x72, 0x6f, 0x20, 0x36, 0x39);
setchar(0x945c672, 0x5);
setchar(0x945c671, 0x50);
setchar(0x945c670, 0x52);
setshort(0x9443d30, 250);
setfloat(0x9443d2c, 0.85);
setfloat(0x945c5f0, 1850);
setfloat(0x945c5f8, 1.05);
setfloat(0x945c6b0, 0.1875);
setfloat(0x945c6b4, -0.0375);
setfloat(0x945c6b8, 0.5);
setfloat(0x945c67c, 2.6);
setfloat(0x945c680, 2.6);
setfloat(0x945c674, 0.00462);
setfloat(0x945c690, 0.675);
setfloat(0x945c694, 0);
setfloat(0x945c698, 36.25);
setfloat(0x945c6a8, 1.125);
setfloat(0x945c6ac, 0.1375);
setfloat(0x945c6c4, 0.25);
setfloat(0x945c6bc, 0.25);
setfloat(0x945c610, 0);
setfloat(0x945c614, 0.0375);
setfloat(0x945c618, -0.4375);
setchar(0x945c620, 70);
setfloat(0x945c69c, 0.91875);
setfloat(0x945c6a0, 0.5);
setfloat(0x945c5fc, 0.61176);
sethex(0x945c6c0, 0x82, 0x81, 0x00, 0x01);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb48, 0xFF, 0xFF, 0x00);
sethex(0x944fb44, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 175);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//DUB RHINO
setshort(0x992FDFE, 0x52, 0x48, 0x49, 0x4e, 0x4f);
setchar(0x945b2c2, 0x5);
setchar(0x945b2c1, 0x44);
setchar(0x945b2c0, 0x34);
setshort(0x94428e0, 250);
setfloat(0x94428dc, 2.00);
setfloat(0x945b240, 25000);
setfloat(0x945b248, 1);
setfloat(0x945b300, 0.175);
setfloat(0x945b304, -0.1875);
setfloat(0x945b308, 0.5);
setfloat(0x945b2cc, 1.375);
setfloat(0x945b2d0, 1.375);
setfloat(0x945b2c4, 0.00462);
setfloat(0x945b2e0, 0.5);
setfloat(0x945b2e4, 0);
setfloat(0x945b2e8, 38.125);
setfloat(0x945b2f8, 1.28125);
setfloat(0x945b2fc, 0.1);
setfloat(0x945b314, 1.12);
setfloat(0x945b30c, 0);
setfloat(0x945b260, 0);
setfloat(0x945b264, 0.1);
setfloat(0x945b268, -0.375);
setchar(0x945b270, 90);
setfloat(0x945b2ec, 0.75);
setfloat(0x945b2f0, 0.5);
setfloat(0x945b24c, 0.0072);
sethex(0x945b310, 0x80, 0xc1, 0x00, 0x05);
setchar(0x967E6FC, 0x00, 0xFF, 0x00);
sethex(0x944fb24, 0xFF, 0xFF, 0x00);
sethex(0x944fb48, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 162);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//PIMPED YARDIE LOBO
setshort(0x992FF00, 0x20, 0x20, 0x45, 0x53, 0x50, 0x41, 0x4e, 0x54, 0x4f, 0x53, 0x4f);
setchar(0x945c492, 0x5);
setchar(0x945c491, 0x50);
setchar(0x945c490, 0x52);
setshort(0x9443a10, 250);
setfloat(0x9443a0c, 0.825);
setfloat(0x945c410, 2000);
setfloat(0x945c418, 1.1);
setfloat(0x945c4d0, 0.1375);
setfloat(0x945c4d4, -0.0875);
setfloat(0x945c4d8, 0.45);
setfloat(0x945c49c, 2.6);
setfloat(0x945c4a0, 2.6);
setfloat(0x945c494, 0.00375);
setfloat(0x945c4b0, 0.75);
setfloat(0x945c4b4, 0);
setfloat(0x945c4b8, 36.875);
setfloat(0x945c4c8, 0.9375);
setfloat(0x945c4cc, 0.1375);
setfloat(0x945c4e4, 0.25);
setfloat(0x945c4dc, 0.275);
setfloat(0x945c430, 0);
setfloat(0x945c434, -0.25);
setfloat(0x945c438, -0.3875);
setchar(0x945c440, 75);
setfloat(0x945c4bc, 0.8875);
setfloat(0x945c4c0, 0.52);
setfloat(0x945c41c, 0.53333);
sethex(0x945c4e0, 0x82, 0x81, 0x00, 0x01);
setchar(0x967E6FC, 0xFF, 0x00, 0xFF);
sethex(0x944fb30, 0xFF, 0xFF, 0x00);
sethex(0x944fb50, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 173);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//PIMPED HUMMER H3
setshort(0x992FC5A, 0x20, 0x48, 0x55, 0x4d, 0x4d, 0x45, 0x52);
setchar(0x9459d32, 0x5);
setchar(0x9459d31, 0x44);
setchar(0x9459d30, 0x34);
setshort(0x94401d0, 250);
setfloat(0x94401cc, 1.175);
setfloat(0x9459cb0, 2350);
setfloat(0x9459cb8, 0.9);
setfloat(0x9459d70, 0.4375);
setfloat(0x9459d74, -0.05);
setfloat(0x9459d78, 0.4125);
setfloat(0x9459d3c, 2);
setfloat(0x9459d40, 2);
setfloat(0x9459d34, 0.00387);
setfloat(0x9459d50, 0.7);
setfloat(0x9459d54, 0);
setfloat(0x9459d58, 35);
setfloat(0x9459d68, 1.9375);
setfloat(0x9459d6c, 0.08);
setfloat(0x9459d84, 0.28);
setfloat(0x9459d7c, 0);
setfloat(0x9459cd0, 0);
setfloat(0x9459cd4, 0.0625);
setfloat(0x9459cd8, -0.325);
setchar(0x9459ce0, 10);
setfloat(0x9459d5c, 0.89375);
setfloat(0x9459d60, 0.5175);
setfloat(0x9459cbc, 0.2);
sethex(0x9459d80, 0x00, 0xc1, 0x00, 0x05);
setchar(0x967E6FC, 0xFF, 0x00, 0xFF);
sethex(0x944fb20, 0x00, 0x00, 0x00);
sethex(0x944fb58, 0xFF, 0x0D, 0x08);
setint(0x8E38A38, 137);
setchar(0x8E38A5C, 112, 126);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//2006 DODGE VIPER SRT 10
setshort(0x992FDD4, 0x20, 0x20, 0x56, 0x49, 0x50, 0x45, 0x52);
setchar(0x945b0e2, 0x5);
setchar(0x945b0e1, 0x50);
setchar(0x945b0e0, 0x52);
setshort(0x94425c0, 250);
setfloat(0x94425bc, 0.775);
setfloat(0x945b060, 1450);
setfloat(0x945b068, 0.9);
setfloat(0x945b120, 0.2625);
setfloat(0x945b124, -0.175);
setfloat(0x945b128, 0.5);
setfloat(0x945b0ec, 2.2);
setfloat(0x945b0f0, 2.2);
setfloat(0x945b0e4, 0.004);
setfloat(0x945b100, 0.825);
setfloat(0x945b104, 0);
setfloat(0x945b108, 35);
setfloat(0x945b118, 1.53125);
setfloat(0x945b11c, 0.13125);
setfloat(0x945b134, 0.15);
setfloat(0x945b12c, 0.3);
setfloat(0x945b080, 0);
setfloat(0x945b084, 0);
setfloat(0x945b088, -0.19999);
setchar(0x945b090, 70);
setfloat(0x945b10c, 0.91875);
setfloat(0x945b110, 0.5);
setfloat(0x945b06c, 0.7);
sethex(0x945b130, 0x83, 0xa1, 0x00, 0x01);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb10, 0x00, 0x00, 0x00);
sethex(0x944fb34, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 160);
setchar(0x8E38A5C, 108, 117);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//MADDOG - PIMPED BOBCAT
setshort(0x992FD62, 0x4d, 0x41, 0x44, 0x44, 0x4f, 0x47);
setchar(0x945ab42, 0x5);
setchar(0x945ab41, 0x44);
setchar(0x945ab40, 0x52);
setshort(0x9441ad0, 250);
setfloat(0x9441acc, 0.825);
setfloat(0x945aac0, 1800);
setfloat(0x945aac8, 1.075);
setfloat(0x945ab80, 0.2);
setfloat(0x945ab84, -0.1);
setfloat(0x945ab88, 0.4);
setfloat(0x945ab4c, 2.5);
setfloat(0x945ab50, 2.5);
setfloat(0x945ab44, 0.00313);
setfloat(0x945ab60, 0.5);
setfloat(0x945ab64, 0);
setfloat(0x945ab68, 35);
setfloat(0x945ab78, 1.59375);
setfloat(0x945ab7c, 0.1375);
setfloat(0x945ab94, 0.26);
setfloat(0x945ab8c, 0);
setfloat(0x945aae0, 0);
setfloat(0x945aae4, 0.025);
setfloat(0x945aae8, -0.4);
setchar(0x945aaf0, 75);
setfloat(0x945ab6c, 0.90625);
setfloat(0x945ab70, 0.45);
setfloat(0x945aacc, 0.23529);
sethex(0x945ab90, 0x82, 0x8b, 0x00, 0x05);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb54, 0x00, 0x00, 0x00);
sethex(0x944fafc, 0xFF, 0x0D, 0x08);
setint(0x8E38A38, 153);
setchar(0x8E38A5C, 125, 103);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//TAXI GT
setshort(0x992FD4A, 0x54, 0x41, 0x58, 0x49);
setchar(0x945a962, 0x5);
setchar(0x945a961, 0x50);
setchar(0x945a960, 0x52);
setshort(0x94417b0, 250);
setfloat(0x94417ac, 0.875);
setfloat(0x945a8e0, 1850);
setfloat(0x945a8e8, 1.2);
setfloat(0x945a9a0, 0.1375);
setfloat(0x945a9a4, -0.05);
setfloat(0x945a9a8, 0.54);
setfloat(0x945a96c, 2);
setfloat(0x945a970, 2);
setfloat(0x945a964, 0.00475);
setfloat(0x945a980, 0.875);
setfloat(0x945a984, 0);
setfloat(0x945a988, 36.875);
setfloat(0x945a998, 1.21875);
setfloat(0x945a99c, 0.1375);
setfloat(0x945a9b4, 0.2);
setfloat(0x945a9ac, 0);
setfloat(0x945a900, 0);
setfloat(0x945a904, 0);
setfloat(0x945a908, -0.425);
setchar(0x945a910, 75);
setfloat(0x945a98c, 0.91875);
setfloat(0x945a990, 0.45);
setfloat(0x945a8ec, 0.70345);
sethex(0x945a9b0, 0x82, 0x81, 0x00, 0x05);
setchar(0x967E6FC, 0x00, 0x00, 0xFF);
sethex(0x944fb30, 0x00, 0x00, 0x00);
sethex(0x944fb4c, 0x00, 0x00, 0x00);
setint(0x8E38A38, 151);
setchar(0x8E38A5C, 116, 123);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//ROMEROS HEARSE LOWRIDER
setshort(0x992FBDC, 0x52, 0x4f, 0x4d, 0x45, 0x52, 0x4f);
setchar(0x9459b52, 0x5);
setchar(0x9459b51, 0x44);
setchar(0x9459b50, 0x46);
setshort(0x9441f80, 250);
setfloat(0x9441f7c, 0.85);
setfloat(0x9459ad0, 1650);
setfloat(0x9459ad8, 1.05);
setfloat(0x9459b90, 0.3125);
setfloat(0x9459b94, -0.1625);
setfloat(0x9459b98, 0.725);
setfloat(0x9459b5c, 1.95);
setfloat(0x9459b60, 1.95);
setfloat(0x9459b54, 0.00413);
setfloat(0x9459b70, 0.8375);
setfloat(0x9459b74, 0);
setfloat(0x9459b78, 35);
setfloat(0x9459b88, 1.65625);
setfloat(0x9459b8c, 0.18125);
setfloat(0x9459ba4, 0.2);
setfloat(0x9459b9c, 0);
setfloat(0x9459af0, 0);
setfloat(0x9459af4, 0.0625);
setfloat(0x9459af8, -0.3625);
setchar(0x9459b00, 27);
setfloat(0x9459b7c, 0.93125);
setfloat(0x9459b80, 0.48);
setfloat(0x9459adc, 1);
sethex(0x9459ba0, 0x8a, 0x41, 0x00, 0x01);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb58, 0xFF, 0x0D, 0x08);
sethex(0x944fb48, 0xFF, 0x0D, 0x08);
setint(0x8E38A38, 156);
setchar(0x8E38A5C, 126, 122);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//DIABLO DRAG LIMO
setshort(0x992FC96, 0x20, 0x53, 0x54, 0x52, 0x45, 0x43, 0x48);
setchar(0x945a002, 0x5);
setchar(0x945a001, 0x50);
setchar(0x945a000, 0x52);
setshort(0x9440680, 250);
setfloat(0x944067c, 0.875);
setfloat(0x9459f80, 1500);
setfloat(0x9459f88, 1.925);
setfloat(0x945a040, 0.2875);
setfloat(0x945a044, -0.25);
setfloat(0x945a048, 0.3375);
setfloat(0x945a00c, 2);
setfloat(0x945a010, 2);
setfloat(0x945a004, 0.00988);
setfloat(0x945a020, 0.825);
setfloat(0x945a024, 0);
setfloat(0x945a028, 35);
setfloat(0x945a038, 1.4375);
setfloat(0x945a03c, 0.15625);
setfloat(0x945a054, 0.2);
setfloat(0x945a04c, 0);
setfloat(0x9459fa0, 0);
setfloat(0x9459fa4, 0.0375);
setfloat(0x9459fa8, -0.25);
setchar(0x9459fb0, 75);
setfloat(0x945a02c, 0.96875);
setfloat(0x945a030, 0.5);
setfloat(0x9459f8c, 0.65455);
sethex(0x945a050, 0x82, 0x81, 0x00, 0x03);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb58, 0xBB, 0x00, 0x00);
sethex(0x944fb04, 0xBB, 0x00, 0x00);
setint(0x8E38A38, 140);
setchar(0x8E38A5C, 126, 105);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
// NIGHTMARE - PIMPED HOTROD
setshort(0x99300B2, 0x20, 0x20, 0x20, 0x4e, 0x49, 0x47, 0x48, 0x54, 0x4d, 0x41, 0x52, 0x45);
setchar(0x945d1b2, 0x5);
setchar(0x945d1b1, 0x50);
setchar(0x945d1b0, 0x52);
setshort(0x9445310, 250);
setfloat(0x944530c, 0.875);
setfloat(0x945d130, 2000);
setfloat(0x945d138, 1.175);
setfloat(0x945d1f0, 0.1625);
setfloat(0x945d1f4, -0.2625);
setfloat(0x945d1f8, 0.2375);
setfloat(0x945d1bc, 1.975);
setfloat(0x945d1c0, 1.975);
setfloat(0x945d1b4, 0.00562);
setfloat(0x945d1d0, 0.7625);
setfloat(0x945d1d4, 0);
setfloat(0x945d1d8, 35);
setfloat(0x945d1e8, 1.625);
setfloat(0x945d1ec, 0.21875);
setfloat(0x945d204, 0.2);
setfloat(0x945d1fc, 0.4);
setfloat(0x945d150, 0);
setfloat(0x945d154, 0.175);
setfloat(0x945d158, -0.4625);
setchar(0x945d160, 75);
setfloat(0x945d1dc, 0.91875);
setfloat(0x945d1e0, 0.3975);
setfloat(0x945d13c, 0.85714);
sethex(0x945d200, 0x80, 0x81, 0x00, 0x01);
setchar(0x967E6FC, 0xFF, 0x00, 0xFF);
sethex(0x944fb34, 0x00, 0x00, 0x00);
sethex(0x944fb28, 0x00, 0x00, 0x00);
setint(0x8E38A38, 189);
setchar(0x8E38A5C, 117, 114);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//VEHICLE SPAWNS
//BANSHEE
setchar(0x08E4Ea18, 160);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 270.80, -530.67, 36.28);
//TAXI
setchar(0x08E4Ea44, 151);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 270.97, -526.63, 36.28);
//ROMERO
setchar(0x08E4Ea70, 156);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, 270.69, -534.50, 36.28)
//RHINO
setchar(0x08E4Ea9c, 162);
setchar(0x08E4Ea9c + 0x18, 0x01);
setfloat(0x08E4Eaa0, 270.90, -605.59, 38.13);
//DIABLO STALLION
setchar(0x08E4Eac8, 175);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 302.42, -510.51, 36.28);
//V8 GHOST
setchar(0x08E4Eaf4, 187);
setchar(0x08E4Eaf4 + 0x18, 0x01);
setfloat(0x08E4Eaf8, 301.89, -522.58, 36.28);
//YARDIE LOBO
setchar(0x08E4Eb20, 173);
setchar(0x08E4Eb20 + 0x18, 0x01);
setfloat(0x08E4Eb24, 302.17, -534.36, 36.28);
//THUNDER RODD
setchar(0x08E4Eb4c, 189);
setchar(0x08E4Eb4c + 0x18, 0x01);
setfloat(0x08E4Eb50, 270.88, -534.31, 36.228);
//BOBCAT
setchar(0x08E4Eb78, 153);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 301.60, -608.45, 36.28);
//PATRIOT
setchar(0x08E4Eba4, 137);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 302.63, -566.41, 36.28);
//STRECH
setchar(0x08E4Ebd0, 140);
setchar(0x08E4Ebd0 + 0x18, 0x01);
setfloat(0x08E4Ebd4, 286.16, -560.59, 36.28);
teleport(271.54, -494.90, 36.28);
setshort(0x992FC48, 0x20, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d);
setshort(0x9440040, 250);
setfloat(0x944003c, 0.775);
setfloat(0x9459bc0, 2687.5);
setfloat(0x9459c84, -0.125);
setfloat(0x9459c4c, 1.075);
setfloat(0x9459c50, 1.075);
setfloat(0x9459c44, 0.00475);
sethex(0x9459c90, 0x03, 0x81, 0x00, 0x00);
setchar(0x967E6FC, 0xFF, 0x10, 0x00);
sethex(0x944fb50, 0x00, 0x00, 0x00);
sethex(0x944fb18, 0x00, 0x00, 0x00);
setint(0x8E38A38, 136);
setchar(0x8E38A5C, 124, 110);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
setchar(0x945b2c2, 0x4);
setchar(0x945b2c1, 0x45);
setchar(0x945b2c0, 0x34);
setshort(0x94428e0, 256);
setfloat(0x94428dc, 2.40);
setfloat(0x945b240, 25000);
setfloat(0x945b248, 1);
setfloat(0x945b300, 0.3);
setfloat(0x945b304, -0.14999);
setfloat(0x945b308, 0.5);
setfloat(0x945b2cc, 0.52133);
setfloat(0x945b2d0, 0.52133);
setfloat(0x945b2c4, 0.00462);
setfloat(0x945b2e0, 0.5);
setfloat(0x945b2e4, 0);
setfloat(0x945b2e8, 35);
setfloat(0x945b2f8, 1);
setfloat(0x945b2fc, 0.05);
setfloat(0x945b314, 1.12);
setfloat(0x945b30c, 0);
setfloat(0x945b260, 0);
setfloat(0x945b264, 0);
setfloat(0x945b268, -0.49999);
setchar(0x945b270, 90);
setfloat(0x945b2ec, 0.8);
setfloat(0x945b2f0, 0.5);
setfloat(0x945b24c, 0);
sethex(0x945b310, 0x93, 0xe1, 0x02, 0x07);
setchar(0x967E6FC, 0xFF, 0x00, 0xFF);
sethex(0x944fb34, 0xFF, 0xFF, 0x00);
sethex(0x944fb14, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 162);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
moveto(272.15, -422.6, 90); object(0x0211, -0, 0, 90);
move(0.51, 0.00, -5.15); object(0x0211, -11.25, 0, 90);
move(1.5, 0.00, -4.95); object(0x0211, -22.5, 0, 90);
move(2.44, 0.00, -4.56); object(0x0211, -33.75, 0, 90);
move(3.28, 0.00, -4); object(0x0211, -45, 0, 90);
move(4, 0.00, -3.28); object(0x0211, -56.25, 0, 90);
move(4.56, 0.00, -2.44); object(0x0211, -67.5, 0, 90);
move(4.95, 0.00, -1.5); object(0x0211, -78.75, 0, 90);
move(5.15, 0.00, -0.51); object(0x0211, -90, 0, 90);
move(5.15, 0.00, 0.51); object(0x0211, -101.25, 0, 90);
move(4.95, 0.00, 1.5); object(0x0211, -112.5, 0, 90);
move(4.56, 0.00, 2.44); object(0x0211, -123.75, 0, 90);
move(4, 0.00, 3.28); object(0x0211, -135, 0, 90);
move(3.28, 0.00, 4); object(0x0211, -146.25, 0, 90);
move(2.44, 0.00, 4.56); object(0x0211, -157.5, 0, 90);
move(1.5, 0.00, 4.95); object(0x0211, -168.75, 0, 90);
move(0.51, 0.00, 5.15); object(0x0211, -180, 0, 90);
move(-52.78, 8.5, -0); object(0x0211, -0, 0, 90);
move(0.51, 0.00, -5.15); object(0x0211, -11.25, 0, 90);
move(1.5, 0.00, -4.95); object(0x0211, -22.5, 0, 90);
move(2.44, 0.00, -4.56); object(0x0211, -33.75, 0, 90);
move(3.28, 0.00, -4); object(0x0211, -45, 0, 90);
move(4, 0.00, -3.28); object(0x0211, -56.25, 0, 90);
move(4.56, 0.00, -2.44); object(0x0211, -67.5, 0, 90);
move(4.95, 0.00, -1.5); object(0x0211, -78.75, 0, 90);
move(5.15, 0.00, -0.51); object(0x0211, -90, 0, 90);
move(5.15, 0.00, 0.51); object(0x0211, -101.25, 0, 90);
move(4.95, 0.00, 1.5); object(0x0211, -112.5, 0, 90);
move(4.56, 0.00, 2.44); object(0x0211, -123.75, 0, 90);
move(4, 0.00, 3.28); object(0x0211, -135, 0, 90);
move(3.28, 0.00, 4); object(0x0211, -146.25, 0, 90);
move(2.44, 0.00, 4.56); object(0x0211, -157.5, 0, 90);
move(1.5, 0.00, 4.95); object(0x0211, -168.75, 0, 90);
move(0.51, 0.00, 5.15); object(0x0211, -180, 0, 90);
move(-52.78, 8.5, -0); object(0x0211, -0, 0, 90);
move(0.51, 0.00, -5.15); object(0x0211, -11.25, 0, 90);
move(1.5, 0.00, -4.95); object(0x0211, -22.5, 0, 90);
move(2.44, 0.00, -4.56); object(0x0211, -33.75, 0, 90);
move(3.28, 0.00, -4); object(0x0211, -45, 0, 90);
move(4, 0.00, -3.28); object(0x0211, -56.25, 0, 90);
move(4.56, 0.00, -2.44); object(0x0211, -67.5, 0, 90);
move(4.95, 0.00, -1.5); object(0x0211, -78.75, 0, 90);
move(5.15, 0.00, -0.51); object(0x0211, -90, 0, 90);
move(5.15, 0.00, 0.51); object(0x0211, -101.25, 0, 90);
move(4.95, 0.00, 1.5); object(0x0211, -112.5, 0, 90);
move(4.56, 0.00, 2.44); object(0x0211, -123.75, 0, 90);
move(4, 0.00, 3.28); object(0x0211, -135, 0, 90);
move(3.28, 0.00, 4); object(0x0211, -146.25, 0, 90);
move(2.44, 0.00, 4.56); object(0x0211, -157.5, 0, 90);
move(1.5, 0.00, 4.95); object(0x0211, -168.75, 0, 90);
move(0.51, 0.00, 5.15); object(0x0211, -180, 0, 90);
move(-52.78, 8.5, -0); object(0x0211, -0, 0, 90);
move(0.51, 0.00, -5.15); object(0x0211, -11.25, 0, 90);
move(1.5, 0.00, -4.95); object(0x0211, -22.5, 0, 90);
move(2.44, 0.00, -4.56); object(0x0211, -33.75, 0, 90);
move(3.28, 0.00, -4); object(0x0211, -45, 0, 90);
move(4, 0.00, -3.28); object(0x0211, -56.25, 0, 90);
move(4.56, 0.00, -2.44); object(0x0211, -67.5, 0, 90);
move(4.95, 0.00, -1.5); object(0x0211, -78.75, 0, 90);
move(5.15, 0.00, -0.51); object(0x0211, -90, 0, 90);
move(5.15, 0.00, 0.51); object(0x0211, -101.25, 0, 90);
move(4.95, 0.00, 1.5); object(0x0211, -112.5, 0, 90);
move(4.56, 0.00, 2.44); object(0x0211, -123.75, 0, 90);
move(4, 0.00, 3.28); object(0x0211, -135, 0, 90);
move(3.28, 0.00, 4); object(0x0211, -146.25, 0, 90);
move(2.44, 0.00, 4.56); object(0x0211, -157.5, 0, 90);
move(1.5, 0.00, 4.95); object(0x0211, -168.75, 0, 90);
move(0.51, 0.00, 5.15); object(0x0211, -180, 0, 90);
move(-52.78, 8.5, -0); object(0x0211, -0, 0, 90);
move(0.51, 0.00, -5.15); object(0x0211, -11.25, 0, 90);
move(1.5, 0.00, -4.95); object(0x0211, -22.5, 0, 90);
move(2.44, 0.00, -4.56); object(0x0211, -33.75, 0, 90);
move(3.28, 0.00, -4); object(0x0211, -45, 0, 90);
move(4, 0.00, -3.28); object(0x0211, -56.25, 0, 90);
move(4.56, 0.00, -2.44); object(0x0211, -67.5, 0, 90);
move(4.95, 0.00, -1.5); object(0x0211, -78.75, 0, 90);
move(5.15, 0.00, -0.51); object(0x0211, -90, 0, 90);
move(5.15, 0.00, 0.51); object(0x0211, -101.25, 0, 90);
move(4.95, 0.00, 1.5); object(0x0211, -112.5, 0, 90);
move(4.56, 0.00, 2.44); object(0x0211, -123.75, 0, 90);
move(4, 0.00, 3.28); object(0x0211, -135, 0, 90);
move(3.28, 0.00, 4); object(0x0211, -146.25, 0, 90);
move(2.44, 0.00, 4.56); object(0x0211, -157.5, 0, 90);
move(1.5, 0.00, 4.95); object(0x0211, -168.75, 0, 90);
move(0.51, 0.00, 5.15); object(0x0211, -180, 0, 90);
move(-52.78, 8.5, -0); object(0x0211, -0, 0, 90);
move(0.51, 0.00, -5.15); object(0x0211, -11.25, 0, 90);
move(1.5, 0.00, -4.95); object(0x0211, -22.5, 0, 90);
move(2.44, 0.00, -4.56); object(0x0211, -33.75, 0, 90);
move(3.28, 0.00, -4); object(0x0211, -45, 0, 90);
move(4, 0.00, -3.28); object(0x0211, -56.25, 0, 90);
move(4.56, 0.00, -2.44); object(0x0211, -67.5, 0, 90);
move(4.95, 0.00, -1.5); object(0x0211, -78.75, 0, 90);
move(5.15, 0.00, -0.51); object(0x0211, -90, 0, 90);
move(5.15, 0.00, 0.51); object(0x0211, -101.25, 0, 90);
move(4.95, 0.00, 1.5); object(0x0211, -112.5, 0, 90);
move(4.56, 0.00, 2.44); object(0x0211, -123.75, 0, 90);
move(4, 0.00, 3.28); object(0x0211, -135, 0, 90);
move(3.28, 0.00, 4); object(0x0211, -146.25, 0, 90);
move(2.44, 0.00, 4.56); object(0x0211, -157.5, 0, 90);
move(1.5, 0.00, 4.95); object(0x0211, -168.75, 0, 90);
move(0.51, 0.00, 5.15); object(0x0211, -180, 0, 90);
move(-52.78, 8.5, -0); object(0x0211, -0, 0, 90);
move(0.51, 0.00, -5.15); object(0x0211, -11.25, 0, 90);
move(1.5, 0.00, -4.95); object(0x0211, -22.5, 0, 90);
move(2.44, 0.00, -4.56); object(0x0211, -33.75, 0, 90);
move(3.28, 0.00, -4); object(0x0211, -45, 0, 90);
move(4, 0.00, -3.28); object(0x0211, -56.25, 0, 90);
move(4.56, 0.00, -2.44); object(0x0211, -67.5, 0, 90);
move(4.95, 0.00, -1.5); object(0x0211, -78.75, 0, 90);
move(5.15, 0.00, -0.51); object(0x0211, -90, 0, 90);
move(5.15, 0.00, 0.51); object(0x0211, -101.25, 0, 90);
move(4.95, 0.00, 1.5); object(0x0211, -112.5, 0, 90);
move(4.56, 0.00, 2.44); object(0x0211, -123.75, 0, 90);
move(4, 0.00, 3.28); object(0x0211, -135, 0, 90);
move(3.28, 0.00, 4); object(0x0211, -146.25, 0, 90);
move(2.44, 0.00, 4.56); object(0x0211, -157.5, 0, 90);
move(1.5, 0.00, 4.95); object(0x0211, -168.75, 0, 90);
move(0.51, 0.00, 5.15); object(0x0211, -180, 0, 90);
move(-52.78, 8.5, -0); object(0x0211, -0, 0, 90);
move(0.51, 0.00, -5.15); object(0x0211, -11.25, 0, 90);
move(1.5, 0.00, -4.95); object(0x0211, -22.5, 0, 90);
move(2.44, 0.00, -4.56); object(0x0211, -33.75, 0, 90);
move(3.28, 0.00, -4); object(0x0211, -45, 0, 90);
move(4, 0.00, -3.28); object(0x0211, -56.25, 0, 90);
move(4.56, 0.00, -2.44); object(0x0211, -67.5, 0, 90);
move(4.95, 0.00, -1.5); object(0x0211, -78.75, 0, 90);
move(5.15, 0.00, -0.51); object(0x0211, -90, 0, 90);
move(5.15, 0.00, 0.51); object(0x0211, -101.25, 0, 90);
move(4.95, 0.00, 1.5); object(0x0211, -112.5, 0, 90);
move(4.56, 0.00, 2.44); object(0x0211, -123.75, 0, 90);
move(4, 0.00, 3.28); object(0x0211, -135, 0, 90);
move(3.28, 0.00, 4); object(0x0211, -146.25, 0, 90);
move(2.44, 0.00, 4.56); object(0x0211, -157.5, 0, 90);
move(1.5, 0.00, 4.95); object(0x0211, -168.75, 0, 90);
move(0.51, 0.00, 5.15); object(0x0211, -180, 0, 90);
move(-52.78, 8.5, -0); object(0x0211, -0, 0, 90);
move(0.51, 0.00, -5.15); object(0x0211, -11.25, 0, 90);
move(1.5, 0.00, -4.95); object(0x0211, -22.5, 0, 90);
move(2.44, 0.00, -4.56); object(0x0211, -33.75, 0, 90);
move(3.28, 0.00, -4); object(0x0211, -45, 0, 90);
move(4, 0.00, -3.28); object(0x0211, -56.25, 0, 90);
move(4.56, 0.00, -2.44); object(0x0211, -67.5, 0, 90);
move(4.95, 0.00, -1.5); object(0x0211, -78.75, 0, 90);
move(5.15, 0.00, -0.51); object(0x0211, -90, 0, 90);
move(5.15, 0.00, 0.51); object(0x0211, -101.25, 0, 90);
move(4.95, 0.00, 1.5); object(0x0211, -112.5, 0, 90);
move(4.56, 0.00, 2.44); object(0x0211, -123.75, 0, 90);
move(4, 0.00, 3.28); object(0x0211, -135, 0, 90);
move(3.28, 0.00, 4); object(0x0211, -146.25, 0, 90);
move(2.44, 0.00, 4.56); object(0x0211, -157.5, 0, 90);
move(1.5, 0.00, 4.95); object(0x0211, -168.75, 0, 90);
move(0.51, 0.00, 5.15); object(0x0211, -180, 0, 90);
move(-52.78, 8.5, -0); object(0x0211, -0, 0, 90);
move(0.51, 0.00, -5.15); object(0x0211, -11.25, 0, 90);
move(1.5, 0.00, -4.95); object(0x0211, -22.5, 0, 90);
move(2.44, 0.00, -4.56); object(0x0211, -33.75, 0, 90);
move(3.28, 0.00, -4); object(0x0211, -45, 0, 90);
move(4, 0.00, -3.28); object(0x0211, -56.25, 0, 90);
move(4.56, 0.00, -2.44); object(0x0211, -67.5, 0, 90);
move(4.95, 0.00, -1.5); object(0x0211, -78.75, 0, 90);
move(5.15, 0.00, -0.51); object(0x0211, -90, 0, 90);
move(5.15, 0.00, 0.51); object(0x0211, -101.25, 0, 90);
move(4.95, 0.00, 1.5); object(0x0211, -112.5, 0, 90);
move(4.56, 0.00, 2.44); object(0x0211, -123.75, 0, 90);
move(4, 0.00, 3.28); object(0x0211, -135, 0, 90);
move(3.28, 0.00, 4); object(0x0211, -146.25, 0, 90);
move(2.44, 0.00, 4.56); object(0x0211, -157.5, 0, 90);
move(1.5, 0.00, 4.95); object(0x0211, -168.75, 0, 90);
move(0.51, 0.00, 5.15); object(0x0211, -180, 0, 90);
move(-52.78, 8.5, -0); object(0x0211, -0, 0, 90);
move(0.51, 0.00, -5.15); object(0x0211, -11.25, 0, 90);
move(1.5, 0.00, -4.95); object(0x0211, -22.5, 0, 90);
move(2.44, 0.00, -4.56); object(0x0211, -33.75, 0, 90);
move(3.28, 0.00, -4); object(0x0211, -45, 0, 90);
move(4, 0.00, -3.28); object(0x0211, -56.25, 0, 90);
move(4.56, 0.00, -2.44); object(0x0211, -67.5, 0, 90);
move(4.95, 0.00, -1.5); object(0x0211, -78.75, 0, 90);
move(5.15, 0.00, -0.51); object(0x0211, -90, 0, 90);
move(5.15, 0.00, 0.51); object(0x0211, -101.25, 0, 90);
move(4.95, 0.00, 1.5); object(0x0211, -112.5, 0, 90);
move(4.56, 0.00, 2.44); object(0x0211, -123.75, 0, 90);
move(4, 0.00, 3.28); object(0x0211, -135, 0, 90);
move(3.28, 0.00, 4); object(0x0211, -146.25, 0, 90);
move(2.44, 0.00, 4.56); object(0x0211, -157.5, 0, 90);
move(1.5, 0.00, 4.95); object(0x0211, -168.75, 0, 90);
move(0.51, 0.00, 5.15); object(0x0211, -180, 0, 90);
move(-52.78, 8.5, -0); object(0x0211, -0, 0, 90);
move(0.51, 0.00, -5.15); object(0x0211, -11.25, 0, 90);
move(1.5, 0.00, -4.95); object(0x0211, -22.5, 0, 90);
move(2.44, 0.00, -4.56); object(0x0211, -33.75, 0, 90);
move(3.28, 0.00, -4); object(0x0211, -45, 0, 90);
move(4, 0.00, -3.28); object(0x0211, -56.25, 0, 90);
move(4.56, 0.00, -2.44); object(0x0211, -67.5, 0, 90);
move(4.95, 0.00, -1.5); object(0x0211, -78.75, 0, 90);
move(5.15, 0.00, -0.51); object(0x0211, -90, 0, 90);
move(5.15, 0.00, 0.51); object(0x0211, -101.25, 0, 90);
move(4.95, 0.00, 1.5); object(0x0211, -112.5, 0, 90);
move(4.56, 0.00, 2.44); object(0x0211, -123.75, 0, 90);
move(4, 0.00, 3.28); object(0x0211, -135, 0, 90);
move(3.28, 0.00, 4); object(0x0211, -146.25, 0, 90);
move(2.44, 0.00, 4.56); object(0x0211, -157.5, 0, 90);
move(1.5, 0.00, 4.95); object(0x0211, -168.75, 0, 90);
move(0.51, 0.00, 5.15); object(0x0211, -180, 0, 90);
teleport(272.15, -422.6, 110);
// by mz8691
moveto(272.15, -422.6, 90); object(0x0CDB, -0, 0, 90);
move(0.96, 0.00, -4.81); object(0x0CDB, -22.5, 0, 90);
move(2.72, 0.00, -4.08); object(0x0CDB, -45, 0, 90);
move(4.08, 0.00, -2.72); object(0x0CDB, -67.5, 0, 90);
move(4.81, 0.00, -0.96); object(0x0CDB, -90, 0, 90);
move(4.81, 0.00, 0.96); object(0x0CDB, -112.5, 0, 90);
move(4.08, 0.00, 2.72); object(0x0CDB, -135, 0, 90);
move(2.72, 0.00, 4.08); object(0x0CDB, -157.5, 0, 90);
move(0.96, 0.00, 4.81); object(0x0CDB, -180, 0, 90);
move(-0.96, 0.00, 4.81); object(0x0CDB, -202.5, 0, 90);
move(-2.72, 0.00, 4.08); object(0x0CDB, -225, 0, 90);
move(-4.08, 0.00, 2.72); object(0x0CDB, -247.5, 0, 90);
move(-4.81, 0.00, 0.96); object(0x0CDB, -270, 0, 90);
move(-4.81, 0.00, -0.96); object(0x0CDB, -292.5, 0, 90);
move(-4.08, 0.00, -2.72); object(0x0CDB, -315, 0, 90);
move(-2.72, 0.00, -4.08); object(0x0CDB, -337.5, 0, 90);
move(-0.96, 5, -4.81); object(0x0CDB, -0, 0, 90);
move(0.96, 0.00, -4.81); object(0x0CDB, -22.5, 0, 90);
move(2.72, 0.00, -4.08); object(0x0CDB, -45, 0, 90);
move(4.08, 0.00, -2.72); object(0x0CDB, -67.5, 0, 90);
move(4.81, 0.00, -0.96); object(0x0CDB, -90, 0, 90);
move(4.81, 0.00, 0.96); object(0x0CDB, -112.5, 0, 90);
move(4.08, 0.00, 2.72); object(0x0CDB, -135, 0, 90);
move(2.72, 0.00, 4.08); object(0x0CDB, -157.5, 0, 90);
move(0.96, 0.00, 4.81); object(0x0CDB, -180, 0, 90);
move(-0.96, 0.00, 4.81); object(0x0CDB, -202.5, 0, 90);
move(-2.72, 0.00, 4.08); object(0x0CDB, -225, 0, 90);
move(-4.08, 0.00, 2.72); object(0x0CDB, -247.5, 0, 90);
move(-4.81, 0.00, 0.96); object(0x0CDB, -270, 0, 90);
move(-4.81, 0.00, -0.96); object(0x0CDB, -292.5, 0, 90);
move(-4.08, 0.00, -2.72); object(0x0CDB, -315, 0, 90);
move(-2.72, 0.00, -4.08); object(0x0CDB, -337.5, 0, 90);
move(-0.96, 5, -4.81); object(0x0CDB, -0, 0, 90);
move(0.96, 0.00, -4.81); object(0x0CDB, -22.5, 0, 90);
move(2.72, 0.00, -4.08); object(0x0CDB, -45, 0, 90);
move(4.08, 0.00, -2.72); object(0x0CDB, -67.5, 0, 90);
move(4.81, 0.00, -0.96); object(0x0CDB, -90, 0, 90);
move(4.81, 0.00, 0.96); object(0x0CDB, -112.5, 0, 90);
move(4.08, 0.00, 2.72); object(0x0CDB, -135, 0, 90);
move(2.72, 0.00, 4.08); object(0x0CDB, -157.5, 0, 90);
move(0.96, 0.00, 4.81); object(0x0CDB, -180, 0, 90);
move(-0.96, 0.00, 4.81); object(0x0CDB, -202.5, 0, 90);
move(-2.72, 0.00, 4.08); object(0x0CDB, -225, 0, 90);
move(-4.08, 0.00, 2.72); object(0x0CDB, -247.5, 0, 90);
move(-4.81, 0.00, 0.96); object(0x0CDB, -270, 0, 90);
move(-4.81, 0.00, -0.96); object(0x0CDB, -292.5, 0, 90);
move(-4.08, 0.00, -2.72); object(0x0CDB, -315, 0, 90);
move(-2.72, 0.00, -4.08); object(0x0CDB, -337.5, 0, 90);
move(-0.96, 5, -4.81); object(0x0CDB, -0, 0, 90);
move(0.96, 0.00, -4.81); object(0x0CDB, -22.5, 0, 90);
move(2.72, 0.00, -4.08); object(0x0CDB, -45, 0, 90);
move(4.08, 0.00, -2.72); object(0x0CDB, -67.5, 0, 90);
move(4.81, 0.00, -0.96); object(0x0CDB, -90, 0, 90);
move(4.81, 0.00, 0.96); object(0x0CDB, -112.5, 0, 90);
move(4.08, 0.00, 2.72); object(0x0CDB, -135, 0, 90);
move(2.72, 0.00, 4.08); object(0x0CDB, -157.5, 0, 90);
move(0.96, 0.00, 4.81); object(0x0CDB, -180, 0, 90);
move(-0.96, 0.00, 4.81); object(0x0CDB, -202.5, 0, 90);
move(-2.72, 0.00, 4.08); object(0x0CDB, -225, 0, 90);
move(-4.08, 0.00, 2.72); object(0x0CDB, -247.5, 0, 90);
move(-4.81, 0.00, 0.96); object(0x0CDB, -270, 0, 90);
move(-4.81, 0.00, -0.96); object(0x0CDB, -292.5, 0, 90);
move(-4.08, 0.00, -2.72); object(0x0CDB, -315, 0, 90);
move(-2.72, 0.00, -4.08); object(0x0CDB, -337.5, 0, 90);
move(-0.96, 5, -4.81); object(0x0CDB, -0, 0, 90);
move(0.96, 0.00, -4.81); object(0x0CDB, -22.5, 0, 90);
move(2.72, 0.00, -4.08); object(0x0CDB, -45, 0, 90);
move(4.08, 0.00, -2.72); object(0x0CDB, -67.5, 0, 90);
move(4.81, 0.00, -0.96); object(0x0CDB, -90, 0, 90);
move(4.81, 0.00, 0.96); object(0x0CDB, -112.5, 0, 90);
move(4.08, 0.00, 2.72); object(0x0CDB, -135, 0, 90);
move(2.72, 0.00, 4.08); object(0x0CDB, -157.5, 0, 90);
move(0.96, 0.00, 4.81); object(0x0CDB, -180, 0, 90);
move(-0.96, 0.00, 4.81); object(0x0CDB, -202.5, 0, 90);
move(-2.72, 0.00, 4.08); object(0x0CDB, -225, 0, 90);
move(-4.08, 0.00, 2.72); object(0x0CDB, -247.5, 0, 90);
move(-4.81, 0.00, 0.96); object(0x0CDB, -270, 0, 90);
move(-4.81, 0.00, -0.96); object(0x0CDB, -292.5, 0, 90);
move(-4.08, 0.00, -2.72); object(0x0CDB, -315, 0, 90);
move(-2.72, 0.00, -4.08); object(0x0CDB, -337.5, 0, 90);
move(-0.96, 5, -4.81); object(0x0CDB, -0, 0, 90);
move(0.96, 0.00, -4.81); object(0x0CDB, -22.5, 0, 90);
move(2.72, 0.00, -4.08); object(0x0CDB, -45, 0, 90);
move(4.08, 0.00, -2.72); object(0x0CDB, -67.5, 0, 90);
move(4.81, 0.00, -0.96); object(0x0CDB, -90, 0, 90);
move(4.81, 0.00, 0.96); object(0x0CDB, -112.5, 0, 90);
move(4.08, 0.00, 2.72); object(0x0CDB, -135, 0, 90);
move(2.72, 0.00, 4.08); object(0x0CDB, -157.5, 0, 90);
move(0.96, 0.00, 4.81); object(0x0CDB, -180, 0, 90);
move(-0.96, 0.00, 4.81); object(0x0CDB, -202.5, 0, 90);
move(-2.72, 0.00, 4.08); object(0x0CDB, -225, 0, 90);
move(-4.08, 0.00, 2.72); object(0x0CDB, -247.5, 0, 90);
move(-4.81, 0.00, 0.96); object(0x0CDB, -270, 0, 90);
move(-4.81, 0.00, -0.96); object(0x0CDB, -292.5, 0, 90);
move(-4.08, 0.00, -2.72); object(0x0CDB, -315, 0, 90);
move(-2.72, 0.00, -4.08); object(0x0CDB, -337.5, 0, 90);
move(-0.96, 5, -4.81); object(0x0CDB, -0, 0, 90);
move(0.96, 0.00, -4.81); object(0x0CDB, -22.5, 0, 90);
move(2.72, 0.00, -4.08); object(0x0CDB, -45, 0, 90);
move(4.08, 0.00, -2.72); object(0x0CDB, -67.5, 0, 90);
move(4.81, 0.00, -0.96); object(0x0CDB, -90, 0, 90);
move(4.81, 0.00, 0.96); object(0x0CDB, -112.5, 0, 90);
move(4.08, 0.00, 2.72); object(0x0CDB, -135, 0, 90);
move(2.72, 0.00, 4.08); object(0x0CDB, -157.5, 0, 90);
move(0.96, 0.00, 4.81); object(0x0CDB, -180, 0, 90);
move(-0.96, 0.00, 4.81); object(0x0CDB, -202.5, 0, 90);
move(-2.72, 0.00, 4.08); object(0x0CDB, -225, 0, 90);
move(-4.08, 0.00, 2.72); object(0x0CDB, -247.5, 0, 90);
move(-4.81, 0.00, 0.96); object(0x0CDB, -270, 0, 90);
move(-4.81, 0.00, -0.96); object(0x0CDB, -292.5, 0, 90);
move(-4.08, 0.00, -2.72); object(0x0CDB, -315, 0, 90);
move(-2.72, 0.00, -4.08); object(0x0CDB, -337.5, 0, 90);
move(-0.96, 5, -4.81); object(0x0CDB, -0, 0, 90);
move(0.96, 0.00, -4.81); object(0x0CDB, -22.5, 0, 90);
move(2.72, 0.00, -4.08); object(0x0CDB, -45, 0, 90);
move(4.08, 0.00, -2.72); object(0x0CDB, -67.5, 0, 90);
move(4.81, 0.00, -0.96); object(0x0CDB, -90, 0, 90);
move(4.81, 0.00, 0.96); object(0x0CDB, -112.5, 0, 90);
move(4.08, 0.00, 2.72); object(0x0CDB, -135, 0, 90);
move(2.72, 0.00, 4.08); object(0x0CDB, -157.5, 0, 90);
move(0.96, 0.00, 4.81); object(0x0CDB, -180, 0, 90);
move(-0.96, 0.00, 4.81); object(0x0CDB, -202.5, 0, 90);
move(-2.72, 0.00, 4.08); object(0x0CDB, -225, 0, 90);
move(-4.08, 0.00, 2.72); object(0x0CDB, -247.5, 0, 90);
move(-4.81, 0.00, 0.96); object(0x0CDB, -270, 0, 90);
move(-4.81, 0.00, -0.96); object(0x0CDB, -292.5, 0, 90);
move(-4.08, 0.00, -2.72); object(0x0CDB, -315, 0, 90);
move(-2.72, 0.00, -4.08); object(0x0CDB, -337.5, 0, 90);
move(-0.96, 5, -4.81); object(0x0CDB, -0, 0, 90);
move(0.96, 0.00, -4.81); object(0x0CDB, -22.5, 0, 90);
move(2.72, 0.00, -4.08); object(0x0CDB, -45, 0, 90);
move(4.08, 0.00, -2.72); object(0x0CDB, -67.5, 0, 90);
move(4.81, 0.00, -0.96); object(0x0CDB, -90, 0, 90);
move(4.81, 0.00, 0.96); object(0x0CDB, -112.5, 0, 90);
move(4.08, 0.00, 2.72); object(0x0CDB, -135, 0, 90);
move(2.72, 0.00, 4.08); object(0x0CDB, -157.5, 0, 90);
move(0.96, 0.00, 4.81); object(0x0CDB, -180, 0, 90);
move(-0.96, 0.00, 4.81); object(0x0CDB, -202.5, 0, 90);
move(-2.72, 0.00, 4.08); object(0x0CDB, -225, 0, 90);
move(-4.08, 0.00, 2.72); object(0x0CDB, -247.5, 0, 90);
move(-4.81, 0.00, 0.96); object(0x0CDB, -270, 0, 90);
move(-4.81, 0.00, -0.96); object(0x0CDB, -292.5, 0, 90);
move(-4.08, 0.00, -2.72); object(0x0CDB, -315, 0, 90);
move(-2.72, 0.00, -4.08); object(0x0CDB, -337.5, 0, 90);
move(-0.96, 5, -4.81); object(0x0CDB, -0, 0, 90);
move(0.96, 0.00, -4.81); object(0x0CDB, -22.5, 0, 90);
move(2.72, 0.00, -4.08); object(0x0CDB, -45, 0, 90);
move(4.08, 0.00, -2.72); object(0x0CDB, -67.5, 0, 90);
move(4.81, 0.00, -0.96); object(0x0CDB, -90, 0, 90);
move(4.81, 0.00, 0.96); object(0x0CDB, -112.5, 0, 90);
move(4.08, 0.00, 2.72); object(0x0CDB, -135, 0, 90);
move(2.72, 0.00, 4.08); object(0x0CDB, -157.5, 0, 90);
move(0.96, 0.00, 4.81); object(0x0CDB, -180, 0, 90);
move(-0.96, 0.00, 4.81); object(0x0CDB, -202.5, 0, 90);
move(-2.72, 0.00, 4.08); object(0x0CDB, -225, 0, 90);
move(-4.08, 0.00, 2.72); object(0x0CDB, -247.5, 0, 90);
move(-4.81, 0.00, 0.96); object(0x0CDB, -270, 0, 90);
move(-4.81, 0.00, -0.96); object(0x0CDB, -292.5, 0, 90);
move(-4.08, 0.00, -2.72); object(0x0CDB, -315, 0, 90);
move(-2.72, 0.00, -4.08); object(0x0CDB, -337.5, 0, 90);
move(-0.96, 5, -4.81); object(0x0CDB, -0, 0, 90);
move(0.96, 0.00, -4.81); object(0x0CDB, -22.5, 0, 90);
move(2.72, 0.00, -4.08); object(0x0CDB, -45, 0, 90);
move(4.08, 0.00, -2.72); object(0x0CDB, -67.5, 0, 90);
move(4.81, 0.00, -0.96); object(0x0CDB, -90, 0, 90);
move(4.81, 0.00, 0.96); object(0x0CDB, -112.5, 0, 90);
move(4.08, 0.00, 2.72); object(0x0CDB, -135, 0, 90);
move(2.72, 0.00, 4.08); object(0x0CDB, -157.5, 0, 90);
move(0.96, 0.00, 4.81); object(0x0CDB, -180, 0, 90);
move(-0.96, 0.00, 4.81); object(0x0CDB, -202.5, 0, 90);
move(-2.72, 0.00, 4.08); object(0x0CDB, -225, 0, 90);
move(-4.08, 0.00, 2.72); object(0x0CDB, -247.5, 0, 90);
move(-4.81, 0.00, 0.96); object(0x0CDB, -270, 0, 90);
move(-4.81, 0.00, -0.96); object(0x0CDB, -292.5, 0, 90);
move(-4.08, 0.00, -2.72); object(0x0CDB, -315, 0, 90);
move(-2.72, 0.00, -4.08); object(0x0CDB, -337.5, 0, 90);
move(-0.96, 5, -4.81); object(0x0CDB, -0, 0, 90);
move(0.96, 0.00, -4.81); object(0x0CDB, -22.5, 0, 90);
move(2.72, 0.00, -4.08); object(0x0CDB, -45, 0, 90);
move(4.08, 0.00, -2.72); object(0x0CDB, -67.5, 0, 90);
move(4.81, 0.00, -0.96); object(0x0CDB, -90, 0, 90);
move(4.81, 0.00, 0.96); object(0x0CDB, -112.5, 0, 90);
move(4.08, 0.00, 2.72); object(0x0CDB, -135, 0, 90);
move(2.72, 0.00, 4.08); object(0x0CDB, -157.5, 0, 90);
move(0.96, 0.00, 4.81); object(0x0CDB, -180, 0, 90);
move(-0.96, 0.00, 4.81); object(0x0CDB, -202.5, 0, 90);
move(-2.72, 0.00, 4.08); object(0x0CDB, -225, 0, 90);
move(-4.08, 0.00, 2.72); object(0x0CDB, -247.5, 0, 90);
move(-4.81, 0.00, 0.96); object(0x0CDB, -270, 0, 90);
move(-4.81, 0.00, -0.96); object(0x0CDB, -292.5, 0, 90);
move(-4.08, 0.00, -2.72); object(0x0CDB, -315, 0, 90);
move(-2.72, 0.00, -4.08); object(0x0CDB, -337.5, 0, 90);
teleport(272.15, -422.6, 110);
setshort(0x992FBEA, 0x20, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e);
setchar(0x9459792, 0x5);
setchar(0x9459791, 0x50);
setchar(0x9459790, 0x34);
setshort(0x943f870, 255);
setfloat(0x943f86c, 1.75);
setfloat(0x9459710, 2000);
setfloat(0x9459718, 0.7);
setfloat(0x94597d0, 0.28);
setfloat(0x94597d4, -0.4625);
setfloat(0x94597d8, 0.5);
setfloat(0x945979c, 0.275);
setfloat(0x94597a0, 0.275);
setfloat(0x9459794, 0.0045);
setfloat(0x94597b0, 0.7875);
setfloat(0x94597b4, 0);
setfloat(0x94597b8, 35);
setfloat(0x94597c8, 1.6);
setfloat(0x94597cc, 0.08);
setfloat(0x94597e4, 1.125);
setfloat(0x94597dc, 0.25);
setfloat(0x9459730, 0);
setfloat(0x9459734, 0);
setfloat(0x9459738, -2);
setchar(0x9459740, 85);
setfloat(0x94597bc, 0.85);
setfloat(0x94597c0, 0.5);
setfloat(0x945971c, 0.23);
sethex(0x94597e0, 0x8b, 0xc1, 0x00, 0x04);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb34, 0x00, 0x00, 0x00);
sethex(0x944faf8, 0x00, 0x00, 0x00);
setint(0x8E38A38, 131);
setchar(0x8E38A5C, 117, 102);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
// by mz8691
setshort(0x992FCE8, 0x46, 0x72, 0x7a, 0x30, 0x32, 0x2d, 0x43);
setchar(0x945a4b2, 0x6);
setchar(0x945a4b1, 0x50);
setchar(0x945a4b0, 0x34);
setshort(0x9440fe0, 250);
setfloat(0x9440fdc, 0.71);
setfloat(0x945a430, 1200.123456789);
setfloat(0x945a438, 0.8);
setfloat(0x945a4f0, 0.1123456789);
setfloat(0x945a4f4, -0.001);
setfloat(0x945a4f8, 0.5123456789);
setfloat(0x945a4bc, 1.123456789);
setfloat(0x945a4c0, 1.123456789);
setfloat(0x945a4b4, 0.0030123456789);
setfloat(0x945a4d0, 0.48123456789);
setfloat(0x945a4d4, 0);
setfloat(0x945a4d8, 35);
setfloat(0x945a4e8, 0.8123456789);
setfloat(0x945a4ec, 0.2123456789);
setfloat(0x945a504, 0.0);
setfloat(0x945a4fc, 0.6);
setfloat(0x945a450, 0);
setfloat(0x945a454, -0.19999);
setfloat(0x945a458, -0.24999);
setchar(0x945a460, 70);
setfloat(0x945a4dc, 0.9);
setfloat(0x945a4e0, 0.5);
setfloat(0x945a43c, 0.9);
sethex(0x945a500, 0x82, 0x81, 0x00, 0x07);
setchar(0x967E6FC, 0xFF, 0xFF, 0x00);
sethex(0x944fb20, 0xFF, 0xC7, 0x00);
sethex(0x944fb10, 0xFF, 0xC7, 0x00);
setint(0x8E38A38, 146);
setchar(0x8E38A5C, 112, 108);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
setshort(0x993002A, 0x20, 0x20, 0x50, 0x6f, 0x6e, 0x74, 0x69, 0x61, 0x63, 0x20, 0x47, 0x54, 0x4f);
setchar(0x945cdf2, 0x4);
setchar(0x945cdf1, 0x44);
setchar(0x945cdf0, 0x46);
setshort(0x9444cd0, 250);
setfloat(0x9444ccc, 0.80);
setfloat(0x945cd70, 1000);
setfloat(0x945cd78, 0.95);
setfloat(0x945ce30, 0.3);
setfloat(0x945ce34, -0.1);
setfloat(0x945ce38, 0.5);
setfloat(0x945cdfc, 1.6);
setfloat(0x945ce00, 1.6);
setfloat(0x945cdf4, 0.00225);
setfloat(0x945ce10, 0.72);
setfloat(0x945ce14, 0);
setfloat(0x945ce18, 34);
setfloat(0x945ce28, 1.6);
setfloat(0x945ce2c, 0.1);
setfloat(0x945ce44, 0.15);
setfloat(0x945ce3c, 0.3);
setfloat(0x945cd90, 0);
setfloat(0x945cd94, 0.1);
setfloat(0x945cd98, -0.175);
setchar(0x945cda0, 70);
setfloat(0x945ce1c, 0.9);
setfloat(0x945ce20, 0.5);
setfloat(0x945cd7c, 0.7);
sethex(0x945ce40, 0x04, 0x81, 0x00, 0x05);
sethex(0x944fb2c, 0xFF, 0x0D, 0x08);
sethex(0x944fb24, 0xFF, 0x0D, 0x08);
setint(0x8E38A38, 185);
setchar(0x8E38A5C, 115, 113);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
setshort(0x992FF36, 0x63, 0x68, 0x65, 0x76, 0x79, 0x20, 0x63, 0x61, 0x6d, 0x61, 0x72, 0x6f, 0x20, 0x36, 0x39);
setchar(0x945c672, 0x5);
setchar(0x945c671, 0x50);
setchar(0x945c670, 0x52);
setshort(0x9443d30, 250);
setfloat(0x9443d2c, 0.85);
setfloat(0x945c5f0, 1850);
setfloat(0x945c5f8, 1.05);
setfloat(0x945c6b0, 0.1875);
setfloat(0x945c6b4, -0.0375);
setfloat(0x945c6b8, 0.5);
setfloat(0x945c67c, 2.6);
setfloat(0x945c680, 2.6);
setfloat(0x945c674, 0.00462);
setfloat(0x945c690, 0.675);
setfloat(0x945c694, 0);
setfloat(0x945c698, 36.25);
setfloat(0x945c6a8, 1.125);
setfloat(0x945c6ac, 0.1375);
setfloat(0x945c6c4, 0.25);
setfloat(0x945c6bc, 0.25);
setfloat(0x945c610, 0);
setfloat(0x945c614, 0.0375);
setfloat(0x945c618, -0.4375);
setchar(0x945c620, 70);
setfloat(0x945c69c, 0.91875);
setfloat(0x945c6a0, 0.5);
setfloat(0x945c5fc, 0.61176);
sethex(0x945c6c0, 0x82, 0x81, 0x00, 0x01);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb48, 0xFF, 0xFF, 0x00);
sethex(0x944fb44, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 175);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
setshort(0x992FF74, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x20, 0x67, 0x61, 0x6e, 0x67, 0x20, 0x58);
setchar(0x945c852, 0x5);
setchar(0x945c851, 0x45);
setchar(0x945c850, 0x52);
setshort(0x9444050, 250);
setfloat(0x944404c, 1.5);
setfloat(0x945c7d0, 2000);
setfloat(0x945c7d8, 0.65);
setfloat(0x945c890, 0.40);
setfloat(0x945c894, -0.16999);
setfloat(0x945c898, 0.4);
setfloat(0x945c85c, 1.6);
setfloat(0x945c860, 1.6);
setfloat(0x945c854, 0.00176);
setfloat(0x945c870, 0.6);
setfloat(0x945c874, 0);
setfloat(0x945c878, 30);
setfloat(0x945c888, 1.5);
setfloat(0x945c88c, 0.1);
setfloat(0x945c8a4, 0.1);
setfloat(0x945c89c, 0.2);
setfloat(0x945c7f0, 0);
setfloat(0x945c7f4, 0);
setfloat(0x945c7f8, -0.19999);
setchar(0x945c800, 75);
setfloat(0x945c87c, 0.85);
setfloat(0x945c880, 0.5);
setfloat(0x945c7dc, 0.43636);
sethex(0x945c8a0, 0x23, 0xa1, 0x00, 0x04);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb04, 0xFF, 0xFF, 0x00);
sethex(0x944faf8, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 177);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
setshort(0x992FF00, 0x20, 0x20, 0x45, 0x53, 0x50, 0x41, 0x4e, 0x54, 0x4f, 0x53, 0x4f);
setchar(0x945c492, 0x5);
setchar(0x945c491, 0x50);
setchar(0x945c490, 0x52);
setshort(0x9443a10, 250);
setfloat(0x9443a0c, 0.825);
setfloat(0x945c410, 2000);
setfloat(0x945c418, 1.1);
setfloat(0x945c4d0, 0.1375);
setfloat(0x945c4d4, -0.0875);
setfloat(0x945c4d8, 0.45);
setfloat(0x945c49c, 2.6);
setfloat(0x945c4a0, 2.6);
setfloat(0x945c494, 0.00375);
setfloat(0x945c4b0, 0.75);
setfloat(0x945c4b4, 0);
setfloat(0x945c4b8, 36.875);
setfloat(0x945c4c8, 0.9375);
setfloat(0x945c4cc, 0.1375);
setfloat(0x945c4e4, 0.25);
setfloat(0x945c4dc, 0.275);
setfloat(0x945c430, 0);
setfloat(0x945c434, -0.25);
setfloat(0x945c438, -0.3875);
setchar(0x945c440, 75);
setfloat(0x945c4bc, 0.8875);
setfloat(0x945c4c0, 0.52);
setfloat(0x945c41c, 0.53333);
sethex(0x945c4e0, 0x82, 0x81, 0x00, 0x01);
setchar(0x967E6FC, 0xFF, 0x00, 0xFF);
sethex(0x944fb30, 0xFF, 0xFF, 0x00);
sethex(0x944fb50, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 173);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
setshort(0x992FCE8, 0x20, 0x53, 0x74, 0x61, 0x72, 0x63, 0x68);
setchar(0x945a4b2, 0x6);
setchar(0x945a4b1, 0x50);
setchar(0x945a4b0, 0x34);
setshort(0x9440fe0, 251);
setfloat(0x9440fdc, 0);
setfloat(0x945a430, 1200);
setfloat(0x945a438, 0.8);
setfloat(0x945a4f0, 0.1);
setfloat(0x945a4f4, -2);
setfloat(0x945a4f8, 0.5);
setfloat(0x945a4bc, 1.975);
setfloat(0x945a4c0, 1.975);
setfloat(0x945a4b4, 0.00975);
setfloat(0x945a4d0, 0.48);
setfloat(0x945a4d4, 0);
setfloat(0x945a4d8, 35);
setfloat(0x945a4e8, 0.8);
setfloat(0x945a4ec, 0.2);
setfloat(0x945a504, 0.4);
setfloat(0x945a4fc, 0.6);
setfloat(0x945a450, 0);
setfloat(0x945a454, -0.19999);
setfloat(0x945a458, -2);
setchar(0x945a460, 70);
setfloat(0x945a4dc, 0.9);
setfloat(0x945a4e0, 0.5);
setfloat(0x945a43c, 0.9);
sethex(0x945a500, 0x03, 0x81, 0x00, 0x00);
sethex(0x944fb10, 0x84, 0xFF, 0xFF);
sethex(0x944fb30, 0x84, 0xFF, 0xFF);
setint(0x8E38A38, 146);
setchar(0x8E38A5C, 108, 116);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);
setshort(0x992FC96, 0x50, 0x2e, 0x49, 0x2e, 0x4d, 0x2e, 0x50);
setchar(0x945a001, 0x44);
setchar(0x945a000, 0x34);
setshort(0x9440680, 250);
setfloat(0x944067c, 1.70);
setfloat(0x9459f80, 2462.5);
setfloat(0x9459f88, 1.275);
setfloat(0x945a040, 0.425);
setfloat(0x945a044, 0.01);
setfloat(0x945a00c, 1.075);
setfloat(0x945a010, 1.075);
setfloat(0x945a004, 0.007);
setfloat(0x945a020, 0.675);
setfloat(0x945a028, 33.75);
setfloat(0x945a03c, 0.20625);
setfloat(0x945a054, 0.3);
setfloat(0x945a02c, 0.875);
setfloat(0x945a030, 0.5175);
setfloat(0x9459f8c, 0);
sethex(0x945a050, 0x83, 0x81, 0x00, 0x04);
setchar(0x967E6FC, 0x00, 0x00, 0xFF);
sethex(0x944fb48, 0x00, 0x00, 0x00);
sethex(0x944fafc, 0x00, 0x00, 0x00);
setint(0x8E38A38, 140);
setchar(0x8E38A5C, 122, 103);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);

#cheat Big Mansion On Island
//ID: 17766
//Score: 212
//Author: Ultimate Cheat Maker
//Category: Environment
//Description: This cheat will teleport you to my mansion on an island built on the sea next to portland. It has 14 rooms, 3 bathrooms, 4 garages, parking spaces, ferrari 360, mclaren f1 more cars, helicopter pad +helicopter and more great mansion extras!!!!
//Image: none
//Time: 27/09/2006 21:13:56
//Working: Yes
moveto(40.32, -1670.00, 27.46); object(0x01BF, 0, 0, 177);
move(7.78, 0.55, 0.00); object(0x01BF, 0, 0, 176);
move(7.98, 0.57, 0.00); object(0x01BF, 0, 0, 176);
move(7.98, 0.57, 0.00); object(0x01BF, 0, 0, 176);
move(7.88, 0.56, 0.00); object(0x01BF, 0, 0, 176);
move(7.78, 0.55, 0.00); object(0x01BF, 0, 0, 176);
move(7.88, 0.56, 0.00); object(0x01BF, 0, 0, 176);
move(7.68, 0.55, 0.00); object(0x01BF, 0, 0, 176);
move(7.88, 0.56, 0.00); object(0x01BF, 0, 0, 176);
move(3.64, 4.18, 0.00); object(0x01BF, 0, 0, 87);
move(-0.37, 7.89, 0.00); object(0x01BF, 0, 0, 87);
move(-0.38, 7.99, 0.00); object(0x01BF, 0, 0, 87);
move(-0.37, 7.89, 0.00); object(0x01BF, 0, 0, 87);
move(-69.50, -28.66, 0.01); object(0x01BF, 0, 0, 264);
move(-0.85, 7.75, 0.00); object(0x01BF, 0, 0, 264);
move(-0.85, 7.75, 0.00); object(0x01BF, 0, 0, 264);
move(10.54, 9.90, -20.20); object(0x084C, 0, 0, 63);
move(16.10, 6.86, -9.60); object(0x082B, 0, 0, 68);
move(40.31, 0.43, 30.10); object(0x0211, 0, 0, 185);
move(-8.21, 2.47, 1.60); object(0x0211, 70, 0, 185);
move(-4.54, -5.84, -2.00); object(0x01BF, 0, 0, 91);
move(-0.14, -7.80, 0.00); object(0x01BF, 0, 0, 91);
move(-0.15, -8.00, 0.00); object(0x01BF, 0, 0, 91);
move(-0.12, -6.80, 0.00); object(0x01BF, 0, 0, 91);
move(-5.75, -3.39, 0.00); object(0x01BF, 0, 0, 91);
move(0.25, 13.80, 0.00); object(0x01BF, 0, 0, 91);
move(0.22, 12.00, 0.00); object(0x01BF, 0, 0, 91);
move(-4.30, -22.12, 0.00); object(0x01BF, 0, 0, 178);
move(-10.39, -0.46, 0.00); object(0x01BF, 0, 0, 178);
move(-7.69, -0.34, 0.00); object(0x01BF, 0, 0, 178);
move(-10.69, -0.47, 0.00); object(0x01BF, 0, 0, 178);
move(-6.99, -0.31, 0.00); object(0x01BF, 0, 0, 178);
move(-3.10, -0.14, 0.00); object(0x01BF, 0, 0, 178);
move(38.93, 7.73, 0.00); object(0x01BF, 0, 0, 180);
move(-7.60, -0.06, 0.00); object(0x01BF, 0, 0, 180);
move(-7.70, -0.07, 0.00); object(0x01BF, 0, 0, 180);
move(-7.70, -0.07, 0.00); object(0x01BF, 0, 0, 180);
move(-7.80, -0.07, 0.00); object(0x01BF, 0, 0, 180);
move(-6.10, -0.05, 0.00); object(0x01BF, 0, 0, 180);
move(37.11, 8.32, 0.00); object(0x01BF, 0, 0, 181);
move(-7.80, 0.17, 0.00); object(0x01BF, 0, 0, 181);
move(-11.30, 0.25, 0.00); object(0x01BF, 0, 0, 181);
move(-11.00, 0.24, 0.00); object(0x01BF, 0, 0, 181);
move(-7.90, 0.17, 0.00); object(0x01BF, 0, 0, 181);
move(-3.57, -3.78, 0.00); object(0x01BF, 0, 0, 87);
move(0.09, -1.70, 0.00); object(0x01BF, 0, 0, 87);
move(41.58, 9.12, 0.00); object(0x01BF, 0, 0, 181);
move(-7.90, 0.09, 0.00); object(0x01BF, 0, 0, 181);
move(-7.90, 0.09, 0.00); object(0x01BF, 0, 0, 181);
move(-7.70, 0.08, 0.00); object(0x01BF, 0, 0, 181);
move(-7.90, 0.09, 0.00); object(0x01BF, 0, 0, 181);
move(-6.70, 0.07, 0.00); object(0x01BF, 0, 0, 181);
move(38.29, 7.03, 0.00); object(0x01BF, 0, 0, 180);
move(-7.60, -0.02, 0.00); object(0x01BF, 0, 0, 180);
move(-7.80, -0.02, 0.00); object(0x01BF, 0, 0, 180);
move(-7.80, -0.02, 0.00); object(0x01BF, 0, 0, 180);
move(-7.80, -0.02, 0.00); object(0x01BF, 0, 0, 180);
move(-7.50, -0.02, 0.00); object(0x01BF, 0, 0, 180);
move(-7.04, -9.54, 0.00); object(0x01BF, 180, 0, 85);
move(-0.50, 5.68, 0.00); object(0x01BF, 180, 0, 85);
move(3.55, 3.80, 0.00); object(0x01BF, 0, 0, 180);
move(45.48, -6.71, 0.96); object(0x021C, 0, 0, 94);
move(0.04, 0.70, 0.00); object(0x021C, 0, 0, 94);
move(0.04, 0.70, 0.00); object(0x021C, 0, 0, 94);
move(0.04, 0.60, 0.00); object(0x021C, 0, 0, 94);
move(0.04, 0.70, 0.00); object(0x021C, 0, 0, 94);
move(0.04, 0.70, 0.00); object(0x021C, 0, 0, 94);
move(0.04, 0.70, 0.00); object(0x021C, 0, 0, 94);
move(0.05, 0.80, 0.00); object(0x021C, 0, 0, 94);
move(0.04, 0.70, 0.00); object(0x021C, 0, 0, 94);
move(0.03, 0.50, 0.00); object(0x021C, 0, 0, 94);
move(0.00, 0.00, -1.00); object(0x021C, 0, 0, 94);
move(-0.04, -0.70, 0.00); object(0x021C, 0, 0, 94);
move(-0.04, -0.60, 0.00); object(0x021C, 0, 0, 94);
move(-0.04, -0.60, 0.00); object(0x021C, 0, 0, 94);
move(-0.04, -0.70, 0.00); object(0x021C, 0, 0, 94);
move(-0.05, -0.80, 0.00); object(0x021C, 0, 0, 94);
move(-0.04, -0.60, 0.00); object(0x021C, 0, 0, 94);
move(-0.04, -0.60, 0.00); object(0x021C, 0, 0, 94);
move(-0.05, -0.80, 0.00); object(0x021C, 0, 0, 94);
move(-0.05, -0.80, 0.00); object(0x021C, 0, 0, 94);
move(-36.96, 3.51, -2.99); object(0x0369, 0, 0, 91);
move(-0.00, -0.40, 0.00); object(0x0369, 0, 0, 91);
move(-4.11, -12.39, 2.87); object(0x0F96, 0, 0, 90);
move(36.25, 0.51, -0.09); object(0x0F95, 0, 0, 272);
moveto(59.22, -1648.71, 27.42); object(0x01BF, 0, 0, 86);
move(0.05, -0.80, 0.00); object(0x01BF, 0, 0, 86);
move(0.94, -14.46, 0.00); object(0x01BF, 0, 0, 86);
move(0.04, -0.60, 0.00); object(0x01BF, 0, 0, 86);
move(19.35, 27.41, 3.31); object(0x01BF, 270, 0, 91);
move(-0.08, -8.01, 0.00); object(0x01BF, 270, 0, 91);
move(-0.05, -8.00, 0.00); object(0x01BF, 270, 0, 91);
move(-6.65, 0.13, 0.00); object(0x01BF, 270, 0, 91);
move(0.02, 7.90, 0.00); object(0x01BF, 270, 0, 91);
move(0.02, 7.90, 0.00); object(0x01BF, 270, 0, 91);
move(-6.70, 0.02, 0.00); object(0x01BF, 270, 0, 91);
move(-0.02, -7.90, 0.00); object(0x01BF, 270, 0, 91);
move(-0.02, -7.80, 0.00); object(0x01BF, 270, 0, 91);
move(-6.61, 0.02, 0.00); object(0x01BF, 270, 0, 91);
move(0.00, 8.00, 0.00); object(0x01BF, 270, 0, 91);
move(0.00, 7.90, 0.00); object(0x01BF, 270, 0, 91);
move(-6.44, -15.77, 0.00); object(0x01BF, 270, 0, 90);
move(-0.06, 7.90, 0.00); object(0x01BF, 270, 0, 90);
move(-0.06, 7.80, 0.00); object(0x01BF, 270, 0, 90);
moveto(39.97, -1666.26, 27.16); object(0x0F96, 0, 0, 87);
move(38.51, 3.29, 0.00); object(0x0F96, 0, 0, 267);
move(-14.77, -0.91, 0.11); object(0x01BF, 0, 0, 265);
move(0.13, -0.48, 0.00); object(0x01BF, 0, 0, 265);
moveto(46.90, -1657.48, -32.93); object(0x0204, 0, 0, 96);
move(-2.83, 1.20, 59.50); object(0x0204, 265, 325, 358);
move(35.48, -4.26, 4.10); object(0x01BF, 270, 0, 89);
move(-0.09, -2.77, 0.00); object(0x01BF, 270, 0, 89);
move(-6.76, -0.40, -0.00); object(0x01BF, 270, 0, 87);
move(0.22, 3.64, 0.00); object(0x01BF, 270, 0, 87);
move(-6.84, -0.54, 0.00); object(0x01BF, 270, 0, 89);
move(0.13, -3.40, 0.00); object(0x01BF, 270, 0, 88);
move(-6.41, -0.65, 0.00); object(0x01BF, 270, 0, 88);
move(-0.19, 6.91, 0.00); object(0x01BF, 270, 0, 88);
move(-6.45, -1.36, 0.00); object(0x01BF, 270, 0, 88);
move(0.13, -5.96, 0.00); object(0x01BF, 270, 0, 89);
move(-6.70, -0.43, 0.00); object(0x01BF, 270, 0, 89);
move(0.36, 3.38, 0.00); object(0x01BF, 270, 0, 87);
move(-0.42, 11.84, 0.00); object(0x01BF, 270, 0, 88);
move(-0.14, 7.95, 0.00); object(0x01BF, 270, 0, 88);
move(0.13, 5.22, 0.00); object(0x01BF, 270, 0, 88);
move(-6.15, -0.07, 0.00); object(0x01BF, 270, 0, 88);
move(0.31, -7.89, 0.00); object(0x01BF, 270, 0, 88);
move(0.44, -7.98, 0.00); object(0x01BF, 270, 0, 88);
move(-0.52, -7.88, 0.00); object(0x01BF, 270, 0, 88);
move(0.36, -4.73, 0.00); object(0x01BF, 270, 0, 88);
move(-4.47, 28.46, 0.00); object(0x01BF, 270, 0, 88);
move(0.67, -7.55, 0.00); object(0x01BF, 270, 0, 86);
move(0.58, -7.89, 0.00); object(0x01BF, 270, 0, 86);
move(0.59, -7.37, 0.00); object(0x01BF, 270, 0, 86);
move(0.15, -5.83, 0.00); object(0x01BF, 270, 0, 86);
moveto(42.63, -1637.26, 34.15); object(0x01BF, 0, 0, 86);
move(0.49, -7.69, 0.00); object(0x01BF, 0, 0, 86);
move(0.51, -7.89, 0.00); object(0x01BF, 0, 0, 86);
move(0.51, -7.89, 0.00); object(0x01BF, 0, 0, 86);
move(-10.65, 23.36, 0.00); object(0x01BF, 0, 0, 86);
move(0.54, -7.88, 0.00); object(0x01BF, 0, 0, 86);
move(0.51, -7.48, 0.00); object(0x01BF, 0, 0, 86);
move(0.54, -7.98, 0.00); object(0x01BF, 0, 0, 86);
move(0.37, -5.39, 0.00); object(0x01BF, 0, 0, 86);
move(2.86, 32.64, 0.00); object(0x01BF, 0, 0, 179);
move(-1.30, -0.03, 0.00); object(0x01BF, 0, 0, 179);
move(11.12, -24.98, 0.00); object(0x01BF, 0, 0, 0);
move(7.40, 0.05, 0.00); object(0x01BF, 0, 0, 0);
move(8.00, 0.05, 0.00); object(0x01BF, 0, 0, 0);
move(7.80, 0.05, 0.00); object(0x01BF, 0, 0, 0);
move(4.10, 0.03, 0.00); object(0x01BF, 0, 0, 0);
move(-27.69, 4.57, 0.00); object(0x01BF, 0, 0, 180);
move(7.80, -0.01, 0.00); object(0x01BF, 0, 0, 180);
move(11.40, -0.01, 0.00); object(0x01BF, 0, 0, 180);
move(8.00, -0.01, 0.00); object(0x01BF, 0, 0, 180);
move(3.70, -0.00, 0.00); object(0x01BF, 0, 0, 180);
move(-32.33, 20.48, 0.00); object(0x01BF, 0, 0, 179);
move(7.80, 0.20, 0.00); object(0x01BF, 0, 0, 179);
move(7.83, 0.20, 0.00); object(0x01BF, 0, 0, 180);
move(7.90, -0.05, 0.00); object(0x01BF, 0, 0, 180);
move(7.90, -0.05, 0.00); object(0x01BF, 0, 0, 180);
move(1.40, -0.01, 0.00); object(0x01BF, 0, 0, 180);
move(-16.64, -11.67, -47.60); object(0x039B, 0, 0, 282);
move(0.00, 0.00, 12.90); object(0x0369, 0, 0, 282);
moveto(73.61, -1646.74, -27.89); object(0x01C3, 0, 0, 80);
move(1.85, 2.28, 5.30); object(0x01C4, 0, 0, 80);
move(16.55, 7.45, 53.10); object(0x01BF, 270, 0, 270);
move(0.05, -8.00, 0.00); object(0x01BF, 270, 0, 270);
move(0.05, -7.80, 0.00); object(0x01BF, 270, 0, 270);
move(0.05, -7.90, 0.00); object(0x01BF, 270, 0, 270);
move(-0.50, -0.00, 0.00); object(0x01BF, 270, 0, 270);
move(-0.05, 7.60, 0.00); object(0x01BF, 270, 0, 270);
move(6.98, 16.14, 0.00); object(0x01BF, 270, 0, 270);
move(0.05, -7.90, 0.00); object(0x01BF, 270, 0, 270);
move(0.05, -7.90, 0.00); object(0x01BF, 270, 0, 270);
move(0.05, -7.90, 0.00); object(0x01BF, 270, 0, 270);
move(-39.47, 10.91, 3.60); object(0x01BF, 180, 0, 270);
move(-0.09, 7.90, 0.00); object(0x01BF, 180, 0, 270);
move(3.98, -7.65, 0.00); object(0x01BF, 180, 0, 270);
move(-0.12, 10.40, 0.00); object(0x01BF, 180, 0, 270);
move(-0.02, 2.00, 0.00); object(0x01BF, 180, 0, 270);
move(19.59, -12.55, 0.00); object(0x01BF, 180, 0, 270);
move(-0.08, 12.70, 0.00); object(0x01BF, 180, 0, 270);
move(3.54, -6.32, -3.60); object(0x01BF, 90, 0, 177);
moveto(102.26, -1636.99, 30.51); object(0x01BF, 270, 0, 269);
move(0.18, -8.12, 0.00); object(0x01BF, 270, 0, 267);
move(0.93, -7.66, 0.00); object(0x01BF, 270, 0, 267);
move(0.35, -7.79, 0.00); object(0x01BF, 270, 0, 267);
move(0.05, -1.20, 0.00); object(0x01BF, 270, 0, 267);
move(-6.38, -0.13, 0.00); object(0x01BF, 270, 0, 268);
move(-6.26, -0.21, -0.13); object(0x01BF, 270, 0, 267);
move(-51.61, -7.59, 3.77); object(0x01BF, 180, 0, 356);
move(7.98, 0.56, 0.00); object(0x01BF, 180, 0, 356);
move(7.78, 0.54, 0.00); object(0x01BF, 180, 0, 356);
move(7.98, 0.56, 0.00); object(0x01BF, 180, 0, 356);
move(7.88, 0.55, 0.00); object(0x01BF, 180, 0, 356);
move(7.58, 0.53, 0.00); object(0x01BF, 180, 0, 356);
move(3.70, 4.36, 0.00); object(0x01BF, 180, 0, 269);
move(3.36, 6.98, -3.70); object(0x01BF, 90, 0, 359);
move(-20.11, -3.16, -28.60); object(0x01E0, 90, 0, 324);
move(-0.99, -3.14, 1.10); object(0x01E0, 90, 0, 32);
move(-0.78, -1.50, 31.80); object(0x01E0, 180, 180, 267);
move(0.00, 0.00, 0.00); object(0x01E0, 180, 180, 267);
moveto(38.54, -1635.29, 32.05); object(0x0251, 0, 0, 0);
move(-2.56, -6.61, 0.00); object(0x0251, 0, 0, 359);
move(5.70, 0.06, 0.00); object(0x0251, 0, 0, 359);
move(-4.45, -4.42, 0.00); object(0x0251, 0, 0, 359);
move(3.53, -3.14, 0.00); object(0x0251, 0, 0, 359);
move(-2.78, -2.38, 0.00); object(0x0251, 0, 0, 359);
move(2.80, -7.02, -38.70); object(0x01C3, 0, 0, 359);
move(-4.16, 21.61, 43.90); object(0x01BF, 270, 0, 88);
move(0.29, -7.70, 0.00); object(0x01BF, 270, 0, 88);
move(0.29, -7.60, 0.00); object(0x01BF, 270, 0, 88);
move(0.29, -7.70, 0.00); object(0x01BF, 270, 0, 88);
move(1.39, -5.76, 0.00); object(0x01BF, 270, 0, 88);
move(5.56, 0.35, 0.00); object(0x01BF, 270, 0, 85);
move(-0.70, 7.77, 0.00); object(0x01BF, 270, 0, 85);
move(-0.69, 7.67, 0.00); object(0x01BF, 270, 0, 85);
move(-0.71, 7.87, 0.00); object(0x01BF, 270, 0, 85);
move(-0.49, 5.38, 0.00); object(0x01BF, 270, 0, 85);
move(6.38, -0.27, 0.00); object(0x01BF, 270, 0, 85);
move(0.65, -7.77, 0.00); object(0x01BF, 270, 0, 85);
move(0.67, -7.97, 0.00); object(0x01BF, 270, 0, 85);
move(0.66, -7.87, 0.00); object(0x01BF, 270, 0, 85);
move(0.35, -4.18, 0.00); object(0x01BF, 270, 0, 85);
move(5.98, 8.36, 0.00); object(0x01BF, 270, 0, 83);
move(0.16, -6.73, 0.00); object(0x01BF, 270, 0, 90);
move(0.27, -3.40, 0.00); object(0x01BF, 270, 0, 91);
move(-1.33, 17.96, 0.00); object(0x01BF, 270, 0, 84);
move(-0.84, 7.75, 0.00); object(0x01BF, 270, 0, 84);
move(-0.44, 4.07, 0.00); object(0x01BF, 270, 0, 84);
move(6.68, 0.29, 0.00); object(0x01BF, 270, 0, 85);
move(0.66, -7.97, 0.00); object(0x01BF, 270, 0, 85);
move(0.66, -7.97, 0.00); object(0x01BF, 270, 0, 85);
move(0.66, -7.97, 0.00); object(0x01BF, 270, 0, 85);
moveto(62.80, -1664.30, 37.21); object(0x01BF, 270, 0, 264);
move(6.59, 0.67, 0.00); object(0x01BF, 270, 0, 264);
move(-0.80, 7.86, 0.00); object(0x01BF, 270, 0, 264);
move(-0.80, 7.86, 0.00); object(0x01BF, 270, 0, 264);
move(-0.80, 7.86, 0.00); object(0x01BF, 270, 0, 264);
move(-0.32, 3.18, 0.00); object(0x01BF, 270, 0, 264);
move(5.89, -0.16, 0.00); object(0x01BF, 270, 0, 268);
move(0.26, -7.70, 0.00); object(0x01BF, 270, 0, 268);
move(0.25, -7.30, 0.00); object(0x01BF, 270, 0, 268);
move(0.26, -7.80, 0.00); object(0x01BF, 270, 0, 268);
move(0.13, -3.90, 0.00); object(0x01BF, 270, 0, 268);
move(5.54, 0.99, 0.00); object(0x01BF, 270, 0, 268);
move(-0.27, 8.00, 0.00); object(0x01BF, 270, 0, 268);
move(-0.27, 7.90, 0.00); object(0x01BF, 270, 0, 268);
move(-0.27, 8.00, 0.00); object(0x01BF, 270, 0, 268);
move(-0.06, 1.90, 0.00); object(0x01BF, 270, 0, 268);
move(3.21, 0.11, -51.50); object(0x01BF, 270, 0, 268);
teleport(40.32, -1670.00, 27.46);
moveto(1444.03, -166.76, 53.72); object(0x0FF6, 0, 0, 93);
moveto(1386.10, -278.68, 52.47); object(0x020F, 0, 0, 91);
move(-0.94, -10.67, -3.50); object(0x020F, 0, 0, 121);
move(41.03, 100.60, 3.65); object(0x020F, 0, 0, 32);
move(-1.72, -10.36, 0.00); object(0x020F, 0, 0, 337);
move(4.68, 34.23, 5.00); object(0x020F, 0, 0, 109);
move(-0.72, -11.70, 0.00); object(0x020F, 0, 0, 119);
move(0.28, -6.06, -2.60); object(0x020F, 0, 0, 102);
move(-13.09, -3.17, -5.40); object(0x020F, 0, 0, 334);
move(-11.70, 4.73, 0.00); object(0x020F, 0, 0, 334);
move(13.01, 31.23, 3.70); object(0x020F, 0, 0, 146);
move(-13.27, -5.45, -0.50); object(0x020F, 0, 0, 211);
move(-4.29, -12.57, -2.50); object(0x020F, 0, 0, 113);
move(83.85, -37.71, 7.20); object(0x020F, 0, 0, 239);
move(3.74, 18.22, 0.00); object(0x020F, 0, 0, 239);
move(3.08, 16.76, 0.00); object(0x020F, 0, 0, 239);
move(-17.60, 4.49, 0.00); object(0x020F, 0, 0, 239);
move(-25.09, 5.00, 0.00); object(0x020F, 0, 0, 238);
move(15.01, -44.99, 0.00); object(0x020F, 0, 0, 348);
move(-26.65, 23.87, -3.00); object(0x020F, 0, 0, 113);
//PMG CARS
//BMW M3 GTR
setshort(0x992FEE2, 0x20, 0x20, 0x20, 0x20, 0x42, 0x4d, 0x57, 0x20, 0x4d, 0x33, 0x20, 0x47, 0x54, 0x52);
setchar(0x945bd12, 0x6);
setchar(0x945bd11, 0x44);
setshort(0x9443880, 250);
setfloat(0x944387c, 0.83);
setfloat(0x945bc90, 3000);
setfloat(0x945bc98, 1.500);
setfloat(0x945bd50, 0.20);
setfloat(0x945bd54, -0.0625);
setfloat(0x945bd58, 0.40);
setfloat(0x945bd1c, 4);
setfloat(0x945bd20, 4);
setfloat(0x945bd14, 0.0035);
setfloat(0x945bd30, 0.60);
setfloat(0x945bd38, 36);
setfloat(0x945bd48, 0.75);
setfloat(0x945bd4c, 0.125);
setfloat(0x945bcb4, 0.0125);
setfloat(0x945bcb8, -0.425);
setfloat(0x945bd3c, 0.90000);
setfloat(0x945bd40, 0.43875);
sethex(0x945bd60, 0x00, 0x81, 0x00, 0x05);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb4c, 0xFF, 0xFF, 0x00);
sethex(0x944fb24, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 172);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//SUPERCHARGED CHEVY CAMARO CONVERTIBLE 1969
setshort(0x992FE80, 0x20, 0x47, 0x41, 0x4e, 0x47, 0x53, 0x54, 0x41);
setchar(0x945ba42, 0x5);
setshort(0x94430b0, 250);
setfloat(0x94430ac, 0.82);
setfloat(0x945b9c0, 5000);
setfloat(0x945b9c8, 1.55);
setfloat(0x945ba80, 0.2);
setfloat(0x945ba84, -0.15);
setfloat(0x945ba88, 0.425);
setfloat(0x945ba4c, 4);
setfloat(0x945ba50, 4);
setfloat(0x945ba44, 0.00337);
setfloat(0x945ba60, 0.5);
setfloat(0x945ba68, 36.875);
setfloat(0x945ba78, 1.46875);
setfloat(0x945b9e4, 0);
setfloat(0x945b9e8, -0.4125);
setchar(0x945b9f0, 13);
setfloat(0x945ba6c, 0.9);
setfloat(0x945ba70, 0.44625);
setfloat(0x945b9cc, 0.5);
sethex(0x945ba90, 0x80, 0x89, 0x00, 0x03);
setchar(0x967E6FC, 0xFF, 0x00, 0xFF);
sethex(0x944fb2c, 0x54, 0xD5, 0xF2);
sethex(0x944fb50, 0x03, 0x00, 0x11);
setint(0x8E38A38, 167);
setchar(0x8E38A5C, 115, 124);
sethex(0x8E38A5E, 0x01, 0xFF);
setchar(pplayer + 0xB84, 0x00);
//FORD SHELBY COBRA GT 500
setshort(0x993002A, 0x53, 0x48, 0x45, 0x4c, 0x42, 0x59, 0x20, 0x47, 0x54, 0x20, 0x35, 0x30, 0x30);
setchar(0x945cdf2, 0x5);
setshort(0x9444cd0, 250);
setfloat(0x9444ccc, 0.775);
setfloat(0x945cd70, 3000);
setfloat(0x945cd78, 1.7);
setfloat(0x945ce30, 0.2625);
setfloat(0x945ce34, -0.0875);
setfloat(0x945cdfc, 2.8);
setfloat(0x945ce00, 2.8);
setfloat(0x945cdf4, 0.00313);
setfloat(0x945ce10, 0.6625);
setfloat(0x945ce18, 35);
setfloat(0x945ce2c, 0.08125);
setfloat(0x945cd98, -0.3875);
setfloat(0x945ce20, 0.45);
sethex(0x945ce40, 0x80, 0x81, 0x00, 0x05);
setchar(0x967E6FC, 0xFF, 0xFF, 0x00);
sethex(0x944fb48, 0xFF, 0xFF, 0x00);
sethex(0x944fb40, 0x00, 0x00, 0x00);
setint(0x8E38A38, 185);
setchar(0x8E38A5C, 122, 120);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//SUPERCHARGED 2006 DODGE VIPER RT 10
setshort(0x992FDD4, 0x20, 0x20, 0x56, 0x49, 0x50, 0x45, 0x52);
setfloat(0x94425bc, 0.82);
setfloat(0x945b060, 3000);
setfloat(0x945b068, 1.5);
setfloat(0x945b120, 0.2625);
setfloat(0x945b124, -0.1);
setfloat(0x945b0ec, 3.5);
setfloat(0x945b0f0, 3.5);
setfloat(0x945b0e4, 0.00325);
setfloat(0x945b100, 0.6625);
setfloat(0x945b11c, 0.21875);
setfloat(0x945b088, -0.425);
setfloat(0x945b10c, 0.90);
setfloat(0x945b110, 0.45);
sethex(0x945b130, 0x80, 0xa1, 0x00, 0x05);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb5c, 0xB3, 0x01, 0x00);
sethex(0x944fb48, 0x00, 0x00, 0x00);
setint(0x8E38A38, 160);
setchar(0x8E38A5C, 127, 122);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//TOYOTA TUNDRA
setshort(0x992FD62, 0x4d, 0x41, 0x44, 0x44, 0x4f, 0x47);
setchar(0x945ab42, 0x5);
setchar(0x945ab41, 0x44);
setchar(0x945ab40, 0x52);
setshort(0x9441ad0, 250);
setfloat(0x9441acc, 0.825);
setfloat(0x945aac0, 1800);
setfloat(0x945aac8, 1.075);
setfloat(0x945ab80, 0.2);
setfloat(0x945ab84, -0.1);
setfloat(0x945ab88, 0.4);
setfloat(0x945ab4c, 2.5);
setfloat(0x945ab50, 2.5);
setfloat(0x945ab44, 0.00313);
setfloat(0x945ab60, 0.5);
setfloat(0x945ab64, 0);
setfloat(0x945ab68, 35);
setfloat(0x945ab78, 1.59375);
setfloat(0x945ab7c, 0.1375);
setfloat(0x945ab94, 0.26);
setfloat(0x945ab8c, 0);
setfloat(0x945aae0, 0);
setfloat(0x945aae4, 0.025);
setfloat(0x945aae8, -0.4);
setchar(0x945aaf0, 75);
setfloat(0x945ab6c, 0.90625);
setfloat(0x945ab70, 0.45);
setfloat(0x945aacc, 0.23529);
sethex(0x945ab90, 0x82, 0x8b, 0x00, 0x05);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb54, 0x00, 0x00, 0x00);
sethex(0x944fafc, 0xFF, 0x0D, 0x08);
setint(0x8E38A38, 154);
setchar(0x8E38A5C, 125, 103);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);

#cheat Resident Evil 2
//ID: 15120
//Score: 209
//Author: Sasuke1001
//Category: Player
//Description: Toni looks like the person off of resident Evil 2 (kinda XD)!!!!!  (Tested)
//Image: http://ernesto.chez-alice.fr/thomas/boss_william_m2.jpg
//Time: 20/07/2006 00:34:29
//Working: Yes
//Made with Cheatsync Monster Creator
//By RASAL + ADePSP + Matt420Bad
setchar(099d4422, 0xff) setchar(099d441e, 0xff);
sethex(0x99D44D6, 0x00);
sethex(0x99D44EE, 0xFF);
sethex(0x99D45BA, 0xFF);
sethex(0x99D455A, 0xFF);
sethex(0x99D44AE, 0xFF);
sethex(0x99D4662, 0xFF);
sethex(0x99D46EA, 0xFF);
sethex(0x99D46AA, 0xFF);
sethex(0x99D472F, 0xFF);

#cheat Tony's New Apartement
//ID: 18165
//Score: 203
//Author: Ultimate Cheat Maker
//Category: Environment
//Description: This is the ultimate cheat; toni will have a brand new apartement!!! This time on the portland beach. It is a big house with 13 bedrooms, a bridge to the main road, 4 garages+more!!! The explanation is continued in the code. (click on view code)
//Image: none
//Time: 14/10/2006 17:46:33
//Working: Yes
//This is the ultimate cheat code. Toni will have a brand new luxirous apartement on portland island. It is situated on the beach. By the way, before i get any further, this cheat includes a teleport. Anyway, the big mansion apartement has a big road down to the drive of the front of the apartement. This mansio has 13 bedrooms: beds, bedsides etc. 5 bathrooms, 3 reception rooms, 2 kitchens, 4 garages and loads more. Outside there is a big parking space for a maximum of 4 cars. This big mansion has a garden with a runway for any transportation eg. dodo. Don't forget it has 3 floors and on the roof a helipad with chairs around to sit and enjoy the view of portland. This great cheat also includes a bring and ramp accross to the lighthouse that also has been upgraded. With a space for a boat and loads more. Back to the mansion, it also has a walkway next to the beach, for the effect!!! Hope you enjoy the cheat. Please respect it, it took me ages to build.
moveto(272.15, -422.6, 90); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
move(-105.44, 23, 0); object(0x01BF, -0, 0, 90);
move(2.58, 0.00, -16.29); object(0x01BF, -18, 0, 90);
move(7.49, 0.00, -14.7); object(0x01BF, -36, 0, 90);
move(11.66, 0.00, -11.66); object(0x01BF, -54, 0, 90);
move(14.7, 0.00, -7.49); object(0x01BF, -72, 0, 90);
move(16.29, 0.00, -2.58); object(0x01BF, -90, 0, 90);
move(16.29, 0.00, 2.58); object(0x01BF, -108, 0, 90);
move(14.7, 0.00, 7.49); object(0x01BF, -126, 0, 90);
move(11.66, 0.00, 11.66); object(0x01BF, -144, 0, 90);
move(7.49, 0.00, 14.7); object(0x01BF, -162, 0, 90);
move(2.58, 0.00, 16.29); object(0x01BF, -180, 0, 90);
moveto(-62.05, -1298.41, 43.72); object(0x01BF, 65, 0, 184);
move(-7.88, 0.56, 0.00); object(0x01BF, 65, 0, 184);
move(-7.88, 0.56, 0.00); object(0x01BF, 65, 0, 184);
move(-6.08, 0.43, 0.00); object(0x01BF, 65, 0, 184);
move(-0.62, -14.13, 0.00); object(0x01BF, 65, 0, 3);
move(7.99, -0.39, 0.00); object(0x01BF, 65, 0, 3);
move(7.89, -0.39, 0.00); object(0x01BF, 65, 0, 3);
move(5.39, -0.26, 0.00); object(0x01BF, 65, 0, 3);
move(0.76, 7.30, 1.40); object(0x01BF, 90, 0, 183);
move(-8.03, 0.55, 0.00); object(0x01BF, 90, 0, 183);
move(-7.42, 0.56, 0.00); object(0x01BF, 90, 0, 183);
move(-6.32, 0.50, 0.00); object(0x01BF, 90, 0, 183);
move(40.73, -49.59, -2.80); object(0x01BF, 90, 0, 178);
move(0.24, -6.69, 0.00); object(0x01BF, 90, 0, 178);
move(0.24, -6.68, 0.00); object(0x01BF, 90, 0, 178);
move(0.27, -5.35, 1.40); object(0x01BF, 65, 0, 177);
move(12.36, -73.57, -11.60); object(0x01BF, 65, 0, 185);
move(-7.87, 0.71, 0.00); object(0x01BF, 65, 0, 185);
move(-6.37, 0.58, 0.00); object(0x01BF, 65, 0, 185);
move(3.14, 22.79, 0.00); object(0x01BF, 50, 0, 0);
move(-13.40, -0.04, 2.30); object(0x01BF, 90, 0, 0);
move(0.03, -6.58, 0.00); object(0x01BF, 90, 0, 0);
move(0.03, -5.83, 0.00); object(0x01BF, 90, 0, 0);
move(0.03, -6.55, 0.00); object(0x01BF, 90, 0, 0);
move(0.03, -6.59, 0.00); object(0x01BF, 90, 0, 0);
move(0.03, -6.62, 0.00); object(0x01BF, 90, 0, 0);
move(0.03, -6.65, 0.00); object(0x01BF, 90, 0, 0);
move(0.03, -6.38, 0.00); object(0x01BF, 90, 0, 0);
move(0.03, -6.58, 0.00); object(0x01BF, 90, 0, 0);
move(0.03, -6.44, 0.00); object(0x01BF, 90, 0, 0);
move(0.03, -6.61, 0.00); object(0x01BF, 90, 0, 0);
move(-6.81, 0.75, -1.60); object(0x01BF, 60, 0, 90);
move(-4.46, -0.04, -2.60); object(0x01BF, 60, 0, 90);
move(-5.61, -0.05, -3.30); object(0x01BF, 60, 0, 90);
move(16.70, 94.38, 9.20); object(0x01BF, 60, 0, 1);
move(0.09, 5.35, 3.00); object(0x01BF, 60, 0, 1);
move(0.13, 36.70, 3.20); object(0x01BF, 90, 0, 359);
move(0.10, -6.32, 0.00); object(0x01BF, 90, 0, 359);
move(0.09, -6.18, -0.80); object(0x01BF, 75, 0, 359);
move(24.93, -49.84, -0.40); object(0x01BF, 55, 0, 89);
move(-5.06, -0.08, -3.50); object(0x01BF, 55, 0, 89);
move(-3.09, -0.04, -2.10); object(0x01BF, 55, 0, 88);
move(-0.16, 73.45, 10.50); object(0x01BF, 0, 0, 91);
move(0.17, 7.80, 0.00); object(0x01BF, 0, 0, 91);
move(0.17, 7.80, 0.00); object(0x01BF, 0, 0, 91);
move(0.16, 7.60, 0.00); object(0x01BF, 0, 0, 91);
move(-25.35, -31.63, -2.20); object(0x01BF, 60, 0, 206);
move(-6.95, -13.79, -0.60); object(0x01BF, 70, 0, 27);
move(-2.12, -4.11, -1.60); object(0x01BF, 70, 0, 27);
move(-2.35, -4.55, -2.10); object(0x01BF, 70, 0, 27);
move(-2.41, -4.67, -1.40); object(0x01BF, 85, 0, 27);
move(-2.43, -4.72, -0.60); object(0x01BF, 85, 0, 27);
move(-2.53, -4.91, -0.50); object(0x01BF, 85, 0, 27);
move(20.48, -19.09, -3.10); object(0x01BF, 50, 0, 89);
move(-49.96, -9.21, -0.70); object(0x01BF, 50, 0, 89);
move(-14.76, -5.11, -6.20); object(0x01BF, 50, 0, 70);
move(33.39, -37.49, -0.20); object(0x01BF, 45, 0, 30);
move(-3.25, -26.43, 0.60); object(0x01BF, 45, 0, 228);
move(-17.74, 49.00, -2.10); object(0x01BF, 70, 0, 359);
move(0.84, 6.53, 0.00); object(0x01BF, 70, 0, 177);
move(84.02, -22.65, 2.20); object(0x01BF, 0, 0, 87);
move(-16.79, 113.45, 14.70); object(0x01BF, 90, 0, 107);
setchar(0x08E4E9C0, 209);
setfloat(0x08E4E9C4, -72.33, -1254.55, 44.42);
setfloat(0x08E4E9D0, 0);
//BUILD THE FLOOR
moveto(215, -422.6, 25); object(0x021C, 90, 0, 180);
move(0.00, 1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, 1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, 1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.8, 0.00, 0.00); object(0x021C, 90, 0, 180);
move(0.00, -1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, -1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, -1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.8, 0.00, 0.00); object(0x021C, 90, 0, 180);
move(0.00, 1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, 1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, 1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.8, 0.00, 0.00); object(0x021C, 90, 0, 180);
move(0.00, -1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, -1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, -1.1, 0.00); object(0x021C, 90, 0, 180);
//BUILD WALL 1
moveto(214.6, -422.6, 25.4); object(0x021C, 0, 90, 90);
move(0.00, 1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 0.00, 0.8); object(0x021C, 0, 90, 90);
move(0.00, -1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, -1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, -1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 0.00, 0.8); object(0x021C, 0, 90, 90);
move(0.00, 1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 0.00, 0.8); object(0x021C, 0, 90, 90);
move(0.00, -1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, -1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, -1.1, 0.00); object(0x021C, 0, 90, 90);
//BUILD WALL 2
moveto(217.8, -422.6, 25.4); object(0x021C, 0, 90, 90);
move(0.00, 1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 0.00, 0.8); object(0x021C, 0, 90, 90);
move(0.00, -1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, -1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, -1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 0.00, 0.8); object(0x021C, 0, 90, 90);
move(0.00, 1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, 0.00, 0.8); object(0x021C, 0, 90, 90);
move(0.00, -1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, -1.1, 0.00); object(0x021C, 0, 90, 90);
move(0.00, -1.1, 0.00); object(0x021C, 0, 90, 90);
//BUILD WALL 3
moveto(215, -423.15, 25.55); object(0x021C, 0, 0, 180);
move(0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.00, 0.00, 1.1); object(0x021C, 0, 0, 180);
move(-0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(-0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(-0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.00, 0.00, 1.1); object(0x021C, 0, 0, 180);
move(0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.00, 0.00, 1.1); object(0x021C, 0, 0, 180);
move(-0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(-0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(-0.8, 00, 0.00); object(0x021C, 0, 0, 180);
//BUILD WALL 4
moveto(215, -418.75, 25.55); object(0x021C, 0, 0, 180);
move(0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.00, 0.00, 1.1); object(0x021C, 0, 0, 180);
move(-0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(-0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(-0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.00, 0.00, 1.1); object(0x021C, 0, 0, 180);
move(0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(0.00, 0.00, 1.1); object(0x021C, 0, 0, 180);
move(-0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(-0.8, 00, 0.00); object(0x021C, 0, 0, 180);
move(-0.8, 00, 0.00); object(0x021C, 0, 0, 180);
//BUILD ROOF
moveto(215, -422.6, 28.2); object(0x021C, 90, 0, 180);
move(0.00, 1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, 1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, 1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.8, 0.00, 0.00); object(0x021C, 90, 0, 180);
move(0.00, -1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, -1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, -1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.8, 0.00, 0.00); object(0x021C, 90, 0, 180);
move(0.00, 1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, 1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, 1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.8, 0.00, 0.00); object(0x021C, 90, 0, 180);
move(0.00, -1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, -1.1, 0.00); object(0x021C, 90, 0, 180);
move(0.00, -1.1, 0.00); object(0x021C, 90, 0, 180);
moveto(197.58, -990.66, 120.36); object(0x020F, 0, 0, 90);
move(-0.01, 1.50, 0.00); object(0x020F, 0, 0, 90);
move(-0.01, 1.60, 0.00); object(0x020F, 0, 0, 90);
move(-0.01, 1.80, 0.00); object(0x020F, 0, 0, 90);
move(-0.02, 1.90, 0.00); object(0x020F, 0, 0, 90);
move(-0.01, 1.80, 0.00); object(0x020F, 0, 0, 90);
move(0.05, 1.70, 0.00); object(0x020F, 0, 0, 90);
move(-0.01, 1.60, 0.00); object(0x020F, 0, 0, 90);
move(-0.02, 1.90, 0.00); object(0x020F, 0, 0, 90);
move(-0.01, 1.80, 0.00); object(0x020F, 0, 0, 90);
move(-0.02, 1.90, 0.00); object(0x020F, 0, 0, 90);
move(-0.02, 1.90, 0.00); object(0x020F, 0, 0, 90);
move(-0.02, 2.30, 0.00); object(0x020F, 0, 0, 90);
move(0.03, 2.20, 0.00); object(0x020F, 0, 0, 90);
move(-0.02, 2.10, 0.00); object(0x020F, 0, 0, 90);
move(-0.02, 2.10, 0.00); object(0x020F, 0, 0, 90);
move(-0.02, 2.20, 0.00); object(0x020F, 0, 0, 90);
move(-0.02, 2.20, 0.00); object(0x020F, 0, 0, 90);
move(-0.02, 2.00, 0.00); object(0x020F, 0, 0, 90);
move(-0.02, 2.00, 0.00); object(0x020F, 0, 0, 90);
move(0.02, 1.73, 0.00); object(0x020F, 0, 0, 180);
move(1.70, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.00, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.00, 0.08, 0.00); object(0x020F, 0, 0, 180);
move(2.20, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.20, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.20, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.20, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.00, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.30, -0.02, 0.00); object(0x020F, 0, 0, 180);
move(2.00, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.30, -0.02, 0.00); object(0x020F, 0, 0, 180);
move(2.10, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.20, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.00, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.20, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.10, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.10, -0.01, 0.00); object(0x020F, 0, 0, 180);
move(2.40, -0.02, 0.00); object(0x020F, 0, 0, 180);
move(-0.03, -2.24, 0.00); object(0x020F, 0, 0, 270);
move(0.03, -2.40, 0.00); object(0x020F, 0, 0, 270);
move(0.02, -2.10, 0.00); object(0x020F, 0, 0, 270);
move(0.02, -2.00, 0.00); object(0x020F, 0, 0, 270);
move(0.02, -2.10, 0.00); object(0x020F, 0, 0, 270);
move(0.03, -2.40, 0.00); object(0x020F, 0, 0, 270);
move(0.03, -2.30, 0.00); object(0x020F, 0, 0, 270);
move(0.03, -2.30, 0.00); object(0x020F, 0, 0, 270);
move(0.03, -2.50, 0.00); object(0x020F, 0, 0, 270);
move(0.02, -2.20, 0.00); object(0x020F, 0, 0, 270);
move(0.03, -2.40, 0.00); object(0x020F, 0, 0, 270);
move(0.03, -2.40, 0.00); object(0x020F, 0, 0, 270);
move(0.03, -2.30, 0.00); object(0x020F, 0, 0, 270);
move(0.03, -2.40, 0.00); object(0x020F, 0, 0, 270);
move(0.02, -2.10, 0.00); object(0x020F, 0, 0, 270);
move(0.02, -1.90, 0.00); object(0x020F, 0, 0, 270);
move(0.02, -1.90, 0.00); object(0x020F, 0, 0, 270);
move(-2.38, -0.12, 0.00); object(0x020F, 0, 0, 0);
move(-2.50, -0.02, 0.00); object(0x020F, 0, 0, 0);
move(-2.50, -0.02, 0.00); object(0x020F, 0, 0, 0);
move(-2.40, -0.02, 0.00); object(0x020F, 0, 0, 0);
move(-2.50, -0.02, 0.00); object(0x020F, 0, 0, 0);
move(-2.70, -0.02, 0.00); object(0x020F, 0, 0, 0);
move(-2.50, -0.02, 0.00); object(0x020F, 0, 0, 0);
move(-2.80, -0.02, 0.00); object(0x020F, 0, 0, 0);
move(-2.80, -0.02, 0.00); object(0x020F, 0, 0, 0);
move(-3.00, -0.03, 0.00); object(0x020F, 0, 0, 0);
move(-3.00, -0.03, 0.00); object(0x020F, 0, 0, 0);
move(-2.80, -0.02, 0.00); object(0x020F, 0, 0, 0);
move(-2.60, -0.02, 0.00); object(0x020F, 0, 0, 0);
move(-2.10, -0.02, 0.00); object(0x020F, 0, 0, 0);
move(-0.96, 1.73, 0.20); object(0x0257, 0, 0, 2);
move(0.94, 5.86, 0.40); object(0x025B, 0, 0, 2);
move(0.26, 5.31, 0.00); object(0x025B, 0, 0, 3);
move(-0.14, 5.23, 0.00); object(0x025B, 0, 0, 0);
move(0.66, 4.20, -0.10); object(0x025B, 0, 0, 185);
move(7.01, -18.56, 0.90); object(0x025C, 0, 0, 87);
move(2.50, -0.52, -2.40); object(0x0224, 0, 0, 190);
move(-5.35, -0.22, -0.10); object(0x0224, 0, 0, 196);
move(-1.43, 28.45, 1.30); object(0x09F9, 0, 0, 341);
move(-3.51, -6.22, -0.10); object(0x023B, 0, 0, 357);
move(-0.10, 1.81, 0.00); object(0x023B, 0, 0, 357);
//HELICOPTER SPAWNS
//HUNTER
setchar(0x08E4Eba4, 213);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 223.27, -983.72, 121.16);
//MAVERICK
setchar(0x08E4Ebd0, 214);
setchar(0x08E4Ebd0 + 0x18, 0x01);
setfloat(0x08E4Ebd4, 221.74, -972.85, 121.16);
//PLANE
//DODO
setchar(0x08E4Eb4c, 164);
setchar(0x08E4Eb4c + 0x18, 0x01);
setfloat(0x08E4Eb50, 222.62, -961.32, 121.16);
teleport(206.90, -988.07, 121.16);
moveto(1652.75, -380.34, 33.97); object(0x0FAC, 315, 0, 347);
move(1.44, -5.00, 0.00); object(0x0FAC, 270, 0, 348);
move(-6.49, 1.06, -3.60); object(0x0FAC, 225, 0, 76);
move(-3.14, -0.80, -3.50); object(0x0FAC, 225, 0, 75);
move(-4.88, -1.04, 0.00); object(0x0FAC, 270, 0, 78);
move(0.99, -5.03, 0.00); object(0x0FAC, 270, 0, 79);
move(1.00, -5.00, 0.00); object(0x0FAC, 270, 0, 79);
move(0.98, -4.90, 0.00); object(0x0FAC, 270, 0, 79);
move(4.96, 0.99, 0.00); object(0x0FAC, 270, 0, 79);
move(-0.96, 4.80, 0.00); object(0x0FAC, 270, 0, 79);
move(-1.02, 5.10, 0.00); object(0x0FAC, 270, 0, 79);
move(5.06, 1.01, 0.00); object(0x0FAC, 270, 0, 79);
move(1.02, -5.10, 0.00); object(0x0FAC, 270, 0, 79);
move(0.98, -4.90, 0.00); object(0x0FAC, 270, 0, 79);
move(5.06, 1.01, 0.00); object(0x0FAC, 270, 0, 79);
move(-0.98, 4.90, 0.00); object(0x0FAC, 270, 0, 79);
move(-0.98, 4.90, 0.00); object(0x0FAC, 270, 0, 79);
move(4.18, 5.97, 0.00); object(0x0FAC, 270, 0, 261);
move(-14.26, -17.11, 2.14); object(0x0F98, 0, 0, 79);
move(8.84, 8.48, 0.14); object(0x0F95, 0, 0, 171);
move(4.34, -5.77, -0.10); object(0x0F9A, 0, 0, 351);
move(-17.47, 10.18, -0.04); object(0x0F96, 0, 0, 167);
move(-3.30, -2.06, 2.66); object(0x0FAC, 0, 0, 80);
move(-0.67, 1.89, 0.00); object(0x0FAC, 0, 0, 80);
move(2.23, 3.36, 0.00); object(0x0FAC, 0, 0, 169);
move(5.04, 1.05, -0.00); object(0x0FAC, 0, 0, 169);
move(-5.98, -8.48, -3.30); object(0x0210, 0, 0, 348);
move(2.18, -1.67, 1.10); object(0x0CDB, 0, 0, 75);
move(0.46, -1.66, 0.00); object(0x0CDB, 0, 0, 75);
move(-2.60, 3.35, 1.00); object(0x0210, 0, 0, 352);
move(13.02, -10.95, -1.20); object(0x0CDB, 0, 0, 348);
move(2.24, 0.65, 0.00); object(0x0CDB, 0, 0, 348);
move(7.13, 10.76, 0.00); object(0x0CDB, 0, 0, 258);
move(-0.95, 4.82, 0.00); object(0x0CDB, 0, 0, 263);
move(-0.40, 3.17, 0.00); object(0x0CDB, 0, 0, 263);
move(-21.91, -6.20, 2.35); object(0x0FAC, 0, 0, 82);
move(-0.25, -0.12, -4.92); object(0x0FAC, 270, 0, 81);
move(-0.38, 2.27, 0.00); object(0x0FAC, 270, 0, 81);
move(25.06, -8.89, 5.09); object(0x0FAC, 0, 0, 260);
move(0.53, -1.93, 0.00); object(0x0FAC, 0, 0, 260);
move(-2.06, -2.99, 0.00); object(0x0FAC, 0, 0, 351);
move(-2.04, -0.50, 0.00); object(0x0FAC, 0, 0, 351);
move(-11.72, -2.19, 0.00); object(0x0FAC, 0, 0, 346);
move(-1.46, -0.36, 0.00); object(0x0FAC, 0, 0, 346);
move(-3.13, 1.95, 0.02); object(0x0FAC, 0, 0, 82);
move(-0.31, 2.08, 0.00); object(0x0FAC, 0, 0, 82);
move(5.70, 12.23, -0.40); object(0x0FAC, 0, 0, 350);
move(4.71, 1.00, 0.00); object(0x0FAC, 0, 0, 349);
move(-14.95, -0.12, 0.30); object(0x0FAC, 270, 0, 80);
move(0.79, -5.18, 0.00); object(0x0FAC, 270, 0, 80);
move(1.36, -4.92, -0.40); object(0x0FAC, 270, 0, 80);
move(1.39, -5.01, -0.20); object(0x0FAC, 270, 0, 80);
move(4.94, 0.89, 0.00); object(0x0FAC, 270, 0, 78);
move(4.81, 1.14, 0.00); object(0x0FAC, 270, 0, 77);
move(4.86, 0.83, 0.00); object(0x0FAC, 270, 0, 80);
move(1.69, 0.03, 0.00); object(0x0FAC, 270, 0, 78);
move(-7.81, 4.08, 0.00); object(0x0FAC, 270, 0, 257);
move(5.53, 1.31, 0.20); object(0x0FAC, 270, 0, 256);
move(4.86, 0.66, 0.00); object(0x0FAC, 270, 0, 261);
move(1.40, 0.34, 0.00); object(0x0FAC, 270, 0, 261);
move(-1.18, 4.86, 0.00); object(0x0FAC, 270, 0, 261);
move(-5.11, -0.94, 0.00); object(0x0FAC, 270, 0, 261);
move(-5.19, -1.28, 0.00); object(0x0FAC, 270, 0, 261);
move(-4.53, -0.82, 0.00); object(0x0FAC, 270, 0, 261);
move(-5.28, 4.59, 0.54); object(0x0FAC, 270, 0, 84);
move(9.18, -11.86, -0.58); object(0x0FAC, 270, 0, 350);
move(5.56, 9.92, -3.76); object(0x0FAC, 180, 0, 351);
move(-1.48, -0.01, -0.02); object(0x0FAC, 180, 0, 172);
move(-2.89, -0.95, 1.82); object(0x0FAC, 180, 270, 260);
move(0.26, -1.48, 0.00); object(0x0FAC, 180, 270, 260);
move(8.38, 8.46, 7.94); object(0x0FAC, 45, 0, 78);
move(1.79, 2.70, -0.20); object(0x0FAC, 90, 0, 346);
move(1.25, -4.91, 0.20); object(0x0FAC, 90, 0, 343);
move(1.43, -4.76, 0.00); object(0x0FAC, 90, 0, 343);
move(4.88, 1.39, 0.00); object(0x0FAC, 90, 0, 343);
move(-1.43, 4.96, 0.00); object(0x0FAC, 90, 0, 343);
move(-1.21, 4.69, 0.00); object(0x0FAC, 90, 0, 343);
move(4.98, 1.46, 0.00); object(0x0FAC, 90, 0, 344);
move(1.49, -4.97, 0.00); object(0x0FAC, 90, 0, 344);
move(1.19, -4.57, 0.00); object(0x0FAC, 90, 0, 343);
moveto(1655.00, -390.37, 34.04); object(0x0FAC, 270, 0, 350);
move(5.02, 0.91, 0.00); object(0x0FAC, 270, 0, 350);
move(4.72, 0.86, 0.00); object(0x0FAC, 270, 0, 350);
move(4.92, 0.89, 0.00); object(0x0FAC, 270, 0, 350);
move(5.02, 0.91, 0.00); object(0x0FAC, 270, 0, 350);
move(0.89, -2.73, 0.00); object(0x0FAC, 270, 0, 345);
move(-4.84, -1.32, 0.00); object(0x0FAC, 270, 0, 345);
move(-4.78, -1.11, 0.00); object(0x0FAC, 270, 0, 345);
move(6.83, 15.13, 0.00); object(0x0FAC, 270, 0, 170);
move(-4.92, -0.90, 0.00); object(0x0FAC, 270, 0, 170);
move(-4.62, -0.84, 0.00); object(0x0FAC, 270, 0, 170);
move(3.80, -18.20, 0.00); object(0x0FAC, 270, 0, 346);
move(4.28, 1.04, 1.60); object(0x0FAC, 270, 320, 346);
move(4.44, 1.08, 1.70); object(0x0FAC, 270, 0, 346);
moveto(1669.91, -390.99, 37.31); object(0x0FAC, 0, 0, 344);
move(-16.33, 19.77, 20.40); object(0x0FAC, 270, 0, 275);
move(-0.48, -5.08, 0.00); object(0x0FAC, 270, 0, 275);
move(0.94, 9.95, 0.00); object(0x0FAC, 270, 0, 275);
move(4.84, -0.46, 0.00); object(0x0FAC, 270, 0, 275);
move(-0.47, -4.98, 0.00); object(0x0FAC, 270, 0, 275);
move(-0.47, -4.98, 0.00); object(0x0FAC, 270, 0, 275);
move(-9.94, 0.94, 0.00); object(0x0FAC, 270, 0, 275);
move(-4.43, 5.39, 0.00); object(0x0FAC, 270, 0, 95);
move(0.40, 4.88, 0.00); object(0x0FAC, 270, 0, 95);
moveto(1662.03, -378.83, 34.01); object(0x0FAC, 270, 0, 172);
move(-6.76, -3.76, -4.00); object(0x0CDB, 180, 0, 263);
move(1.87, 2.25, -0.50); object(0x0CDB, 180, 0, 171);
move(-2.41, -2.64, 0.04); object(0x0CDB, 180, 0, 264);
teleport(1658.24, -398.09, 28.09);
teleport(1646.54, -374.65, 58.75);

#cheat Portland Airport
//ID: 17810
//Score: 199
//Author: Ultimate Cheat Maker
//Category: Environment
//Description: Now new on GTA LCS the portland Airport!!! Located near the scrap-yard!!! This cheat includes; 3 Dodo's, runway, helipad, 4 helicopters, 5 cars, gates, entrance area, ticket booth, carpark, 999 forces, fire engine garage, police station, hospital and more
//Image: none
//Time: 30/09/2006 10:42:50
//Working: Yes
moveto(1433, -257, 50); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
moveto(1460.83, -243.15, 50.80); object(0x01F1, 270, 0, 270);
move(0.00, -16.10, 0.00); object(0x01F1, 270, 0, 270);
move(0.00, 8.20, 0.00); object(0x01F1, 270, 0, 270);
move(-9.51, -9.15, 0.00); object(0x01F1, 270, 0, 0);
move(8.59, 26.41, 0.00); object(0x01F1, 270, 0, 180);
move(0.70, -0.23, -0.20); object(0x020F, 0, 0, 180);
move(-7.10, -0.02, 0.00); object(0x020F, 0, 0, 180);
move(7.07, -5.98, 0.00); object(0x020F, 0, 0, 270);
move(0.05, -6.70, 0.00); object(0x020F, 0, 0, 270);
move(0.05, -6.60, 0.00); object(0x020F, 0, 0, 270);
move(-0.03, -6.50, 0.00); object(0x020F, 0, 0, 270);
move(-7.58, -0.07, 0.00); object(0x020F, 0, 0, 0);
move(1.17, 3.16, 0.00); object(0x0257, 0, 0, 181);
move(0.18, 19.78, 0.00); object(0x0257, 0, 0, 181);
move(2.78, 2.28, -0.10); object(0x0257, 0, 0, 270);
move(-0.14, -24.72, 0.00); object(0x0257, 0, 0, 90);
moveto(1459.54, -240.85, 50.81); object(0x0ECF, 0, 0, 270);
move(0.01, -0.80, 0.00); object(0x0ECF, 0, 0, 270);
move(-0.00, -0.40, -0.40); object(0x0ECB, 0, 270, 270);
move(-0.60, -0.01, 0.00); object(0x0ECB, 0, 270, 270);
move(-0.02, 1.60, 0.00); object(0x0ECB, 0, 270, 270);
move(0.59, 0.01, 0.00); object(0x0ECB, 0, 270, 270);
move(-1.37, -0.32, 0.50); object(0x0F03, 90, 0, 60);
move(0.95, -0.09, 0.00); object(0x0F74, 90, 0, 55);
move(0.06, -0.70, 0.00); object(0x0F75, 0, 0, 310);
move(-0.96, -0.08, 0.00); object(0x0F76, 0, 0, 310);
moveto(1456.97, -241.15, 50.16); object(0x1004, 0, 0, 130);
moveto(1433.01, -236.68, 54.50); object(0x01BF, 270, 0, 180);
move(7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 270, 0, 180);
move(7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(15.86, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(-7.93, 0.00, 0.00); object(0x01BF, 270, 0, 180);
moveto(1432.79, -256.87, 52.18); object(0x0F95, 0, 0, 0);
move(7.30, -0.04, 0.00); object(0x0F8B, 0, 0, 0);
move(8.90, -0.05, 0.00); object(0x0F96, 0, 0, 0);
move(0.10, 19.79, 0.00); object(0x0F98, 0, 0, 180);
move(-7.10, 0.04, 0.00); object(0x0F99, 0, 0, 180);
move(-9.18, 0.03, 0.00); object(0x0F9A, 0, 0, 180);
//Seperators
moveto(1438.25, -237.43, 50.38); object(0x01BF, 0, 270, 90);
move(-1.90, 0.01, 0.00); object(0x01BF, 0, 270, 90);
move(9.05, -0.01, 0.00); object(0x01BF, 0, 270, 90);
move(-0.10, -19.37, 0.00); object(0x01BF, 0, 270, 270);
move(-1.50, 0.01, 0.00); object(0x01BF, 0, 270, 270);
move(-7.30, 0.03, 0.00); object(0x01BF, 0, 270, 270);
moveto(1433.25, -260.68, 51.10); object(0x01BF, 0, 0, 0);
move(8.00, 0.05, 0.00); object(0x01BF, 0, 0, 0);
move(7.30, -0.13, 0.00); object(0x01BF, 0, 0, 0);
moveto(1429.14, -237.04, 50.94); object(0x01BF, 0, 0, 90);
move(3.93, 3.77, 0.00); object(0x01BF, 0, 0, 180);
move(8.00, -0.00, 0.00); object(0x01BF, 0, 0, 180);
move(8.00, -0.00, 0.00); object(0x01BF, 0, 0, 180);
move(3.89, -3.96, 0.00); object(0x01BF, 0, 0, 270);
move(0.08, -13.10, 0.00); object(0x01BF, 0, 0, 270);
move(0.01, -8.00, 0.00); object(0x01BF, 0, 0, 270);
move(-3.94, -3.88, 0.00); object(0x01BF, 0, 0, 0);
move(-7.90, -0.01, 0.00); object(0x01BF, 0, 0, 0);
move(-8.00, 0.00, 0.00); object(0x01BF, 0, 0, 0);
move(-4.09, 3.86, 0.00); object(0x01BF, 0, 0, 90);
move(0.02, 13.30, 0.00); object(0x01BF, 0, 0, 90);
moveto(1433.21, -262.43, 52.01); object(0x045C, 0, 0, 269);
move(8.01, -0.00, 0.00); object(0x045C, 0, 0, 269);
move(8.01, -0.00, 0.00); object(0x045C, 0, 0, 269);
moveto(1433.38, -262.40, 48.88); object(0x045C, 180, 0, 271);
move(8.01, -0.00, 0.00); object(0x045C, 180, 0, 271);
move(8.01, -0.00, 0.00); object(0x045C, 180, 0, 271);
moveto(1428.96, -237.21, 51.86); object(0x045C, 0, 0, 359);
move(0.00, 0.00, -3.13); object(0x045C, 180, 0, 1);
move(0.00, -8.01, 0.00); object(0x045C, 180, 0, 1);
move(0.00, 0.00, 3.13); object(0x045C, 0, 0, 359);
moveto(1428.89, -258.33, 52.09); object(0x045C, 0, 0, 359);
move(0.00, 0.00, -3.13); object(0x045C, 180, 0, 1);
moveto(1449.07, -233.08, 51.78); object(0x045C, 0, 0, 89);
move(0.00, 0.00, -3.13); object(0x045C, 180, 0, 91);
move(-8.01, 0.00, 0.00); object(0x045C, 180, 0, 91);
move(-8.01, 0.00, 0.00); object(0x045C, 180, 0, 91);
move(0.00, 0.00, 3.13); object(0x045C, 0, 0, 89);
move(8.01, 0.00, 0.00); object(0x045C, 0, 0, 89);
moveto(1453.14, -237.13, 51.81); object(0x045C, 0, 0, 179);
move(0.08, -13.25, 0.00); object(0x045C, 0, 0, 179);
move(0.00, -7.91, 0.00); object(0x045C, 0, 0, 179);
move(0.00, 0.00, -3.13); object(0x045C, 180, 0, 181);
move(0.00, 8.01, 0.00); object(0x045C, 180, 0, 181);
move(0.00, 13.25, 0.00); object(0x045C, 180, 0, 181);
moveto(1452.41, -248.22, 54.61); object(0x01C3, 270, 10, 180);
move(-1.50, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.40, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.40, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.20, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.30, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.30, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.40, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.50, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.50, -0.01, -0.50); object(0x01C3, 270, 20, 180);
move(-1.30, -0.01, -0.50); object(0x01C3, 270, 20, 180);
moveto(1429.32, -234.66, 55.41); object(0x01F1, 270, 0, 90);
move(0.10, -15.60, 0.00); object(0x01F1, 270, 0, 90);
move(0.79, -9.58, 0.00); object(0x01F1, 270, 0, 0);
move(20.40, 0.04, 0.00); object(0x01F1, 270, 0, 0);
move(-10.20, -0.02, 0.00); object(0x01F1, 270, 0, 0);
move(19.91, 1.04, 0.00); object(0x01F1, 270, 0, 270);
move(-0.02, 15.30, 0.00); object(0x01F1, 270, 0, 270);
move(-0.85, 9.68, 0.00); object(0x01F1, 270, 0, 180);
move(-20.60, -0.17, 0.00); object(0x01F1, 270, 0, 180);
move(10.30, 0.08, 0.00); object(0x01F1, 270, 0, 180);
moveto(1429.39, -243.63, 54.63); object(0x01EF, 0, 0, 90);
move(30.85, -6.39, 0.00); object(0x01EF, 0, 0, 270);
moveto(1425.72, -251.44, 49.95); object(0x01BF, 90, 0, 90);
move(-6.67, 0.02, -0.60); object(0x01BF, 80, 0, 90);
moveto(1429.08, -257.26, 50.93); object(0x01BF, 0, 0, 90);
move(-0.05, 2.14, 2.58); object(0x1002, 0, 0, 145);
move(-0.05, 7.50, 0.00); object(0x1002, 0, 0, 210);
moveto(1433.08, -240.78, 50.14); object(0x0239, 0, 0, 180);
move(8.50, -0.04, 0.00); object(0x0239, 0, 0, 0);
move(7.00, -0.03, 0.00); object(0x0239, 0, 0, 0);
move(0.69, -12.48, 0.00); object(0x0239, 0, 0, 180);
move(-9.40, 0.05, 0.00); object(0x0239, 0, 0, 0);
move(-6.60, -0.01, 0.00); object(0x0239, 0, 0, 180);
moveto(1437.92, -253.20, 51.34); object(0x0D0A, 0, 0, 180);
move(-2.80, 0.00, 0.00); object(0x0D0A, 0, 0, 45);
move(15.90, -0.00, 0.00); object(0x0D0A, 0, 0, 45);
move(-4.25, 12.22, 0.00); object(0x0D0A, 0, 0, 220);
move(-8.24, 0.03, 0.00); object(0x0D0A, 0, 0, 345);
move(-3.60, 0.22, 0.00); object(0x0D0A, 0, 0, 345);
move(2.54, 3.95, -0.10); object(0x0251, 0, 0, 180);
move(11.02, -9.82, 3.24); object(0x01F0, 0, 0, 180);
move(4.10, -0.02, 0.00); object(0x01F0, 0, 0, 180);
move(-7.94, -3.51, 0.00); object(0x01F0, 0, 0, 90);
move(0.01, 3.31, 0.00); object(0x01F0, 0, 0, 90);
move(4.77, -6.98, 0.00); object(0x01F0, 0, 0, 0);
move(-4.20, -0.02, 0.00); object(0x01F0, 0, 0, 0);
moveto(1419.02, -271.36, 48.01); object(0x01BF, 270, 0, 180);
move(8.00, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(0.00, -6.66, 0.00); object(0x01BF, 270, 0, 180);
move(-8.00, 0.00, 0.00); object(0x01BF, 270, 0, 180);
move(12.01, 6.64, -3.10); object(0x01BF, 180, 270, 270);
move(0.02, -6.60, 0.00); object(0x01BF, 180, 270, 270);
move(-3.24, -3.43, 0.00); object(0x01BF, 180, 270, 0);
move(-6.70, -0.03, 0.00); object(0x01BF, 180, 270, 0);
moveto(1422.41, -301.09, 48.78); object(0x01BF, 255, 0, 14);
move(1.30, 5.17, 2.00); object(0x01BF, 245, 0, 14);
move(1.21, 4.84, 2.90); object(0x01BF, 235, 0, 14);
setfloat(0x08e2d800, 1431, -256, 55.70);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
setfloat(0x08E2E400, 1433, -256, 55.70);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x124);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, 1435, -256, 55.70);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
setfloat(0x08e2d8c0, 1437, -256, 55.70);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, 1439, -256, 55.70);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, 1441, -256, 55.70);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, 1443, -256, 55.70);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, 1445, -256, 55.70);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
setfloat(0x08e2daa0, 1447, -256, 55.70);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
setfloat(0x08e2db00, 1449, -256, 55.70);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
setfloat(0x08E2DB60, 1451, -256, 55.70);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
setfloat(0x08E2DBC0, 1453, -256, 55.70);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
setfloat(0x08E2DC20, 1455, -256, 55.70);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
setfloat(0x08E2DC80, 1457, -256, 55.70);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
setfloat(0x08E2DCE0, 1431, -236, 55.70);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x10f);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
setfloat(0x08E2DD40, 1433, -236, 55.70);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
setfloat(0x08E2DDA0, 1435, -236, 55.70);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
setfloat(0x08E2DE00, 1437, -236, 55.70);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
setfloat(0x08E2DE60, 1439, -236, 55.70);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
setfloat(0x08E2DEC0, 1441, -236, 55.70);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
setfloat(0x08E2DF20, 1443, -236, 55.70);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0xff, 0xff);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
setfloat(0x08E2DF80, 1445, -236, 55.70);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0xff, 0xff);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
setfloat(0x08E2DFE0, 1447, -236, 55.70);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0xff, 0xff);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
setfloat(0x08E2E040, 1449, -236, 55.70);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0xff, 0xff);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
setfloat(0x08E2E0A0, 1451, -236, 55.70);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
setfloat(0x08E2E100, 1453, -236, 55.70);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0xff, 0xff);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
setfloat(0x08E2E160, 1455, -236, 55.70);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
setfloat(0x08E2E1C0, 1457, -236, 55.70);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
setfloat(0x08E2E220, 1431, -242, 55.70);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0xff, 0xff);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
setfloat(0x08E2E280, 1431, -244, 55.70);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0xff, 0xff);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
setfloat(0x08E2E2E0, 1431, -246, 55.70);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0xff, 0xff);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
setfloat(0x08E2E340, 1431, -248, 55.70);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0xff, 0xff);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
setfloat(0x08E2E3A0, 1431, -250, 55.70);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0xff, 0xff);
setshort(0x08E2E3C6, 0x122);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
setfloat(0x08E2E460, 1431, -252, 55.70);
setint(0x08E2E474, 0);
setchar(0x08E2E47C, 0xff, 0xff);
setshort(0x08E2E486, 0x22e);
setchar(0x08E2E492, 0x0f);
setchar(0x08E2E493, 0x00);
setchar(0x08E2D4B0, 0xff);
setfloat(0x08E2E4C0, 1431, -254, 55.70);
setint(0x08E2E4D4, 0);
setchar(0x08E2E4DC, 0xff, 0xff);
setshort(0x08E2E4E6, 0x24b);
setchar(0x08E2E4F2, 0x0f);
setchar(0x08E2E4F3, 0x00);
setchar(0x08E2D510, 0xff);
setint(0x08b89acc, 99999999);
setint(0x08b89ad0, 99999999);
setchar(0x08E4Eaf4, 189);
setchar(0x08E4Eaf4 + 0x18, 0x01);
setfloat(0x08E4Eaf8, 1401, -230, 51, 315);
setchar(0x08E4Eac8, 185);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 1402, -235, 51, 315);
setchar(0x08E4E9EC, 137);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 1403, -240, 51, 315);
setchar(0x08E4E9c0, 142);
setchar(0x08E4E9c0 + 0x18, 0x01);
setfloat(0x08E4E9c4, 1403, -245, 51, 315);
setchar(0x08E4Eba4, 205);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 1402, -250, 51, 315);
setchar(08E4Ecd8, 213);
setchar(08E4Ecd8 + 0x18, 0x01);
setfloat(08E4Ecdc, 1420, -271, 50, 67);
setchar(0x945cdf2, 0x4);
setchar(0x945cdf1, 0x50);
setchar(0x945cdf0, 0x52);
setshort(0x9444cd0, 250);
setfloat(0x9444ccc, 0.9489);
setfloat(0x945cd70, 3700);
setfloat(0x945cd78, 0.925);
setfloat(0x945ce30, 0.2875);
setfloat(0x945ce34, -0.275);
setfloat(0x945ce38, 0.4125);
setfloat(0x945cdfc, 1.55);
setfloat(0x945ce00, 1.55);
setfloat(0x945cdf4, 0.00363);
setfloat(0x945ce10, 0.7125);
setfloat(0x945ce14, 0);
setfloat(0x945ce18, 42.5);
setfloat(0x945ce28, 1.125);
setfloat(0x945ce2c, 0.11875);
setfloat(0x945ce44, 0.15);
setfloat(0x945ce3c, 0.4125);
setfloat(0x945cd90, 0);
setfloat(0x945cd94, 0.1);
setfloat(0x945cd98, -0.425);
setchar(0x945cda0, 10);
setfloat(0x945ce1c, 0.9125);
setfloat(0x945ce20, 0.45375);
setfloat(0x945cd7c, 0.007);
sethex(0x945ce40, 0x83, 0x81, 0x00, 0x07);
sethex(0x944fb40, 0x00, 0x00, 0x00);
sethex(0x944fb3c, 0xFF, 0x00, 0x00);
setint(0x8E38A38, 185);
setchar(0x8E38A5C, 120, 119);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(0x945a1e2, 0x5);
setchar(0x945a1e1, 0x50);
setchar(0x945a1e0, 0x34);
setshort(0x94409a0, 250);
setfloat(0x944099c, 0.90);
setfloat(0x945a160, 900);
setfloat(0x945a168, 1.35);
setfloat(0x945a220, 0.25);
setfloat(0x945a224, -0.225);
setfloat(0x945a228, 0.5);
setfloat(0x945a1ec, 1.4);
setfloat(0x945a1f0, 1.4);
setfloat(0x945a1e4, 0.00462);
setfloat(0x945a200, 0.51);
setfloat(0x945a204, 0);
setfloat(0x945a208, 40);
setfloat(0x945a218, 2.15625);
setfloat(0x945a21c, 0.19);
setfloat(0x945a234, 0.37);
setfloat(0x945a22c, 0.6);
setfloat(0x945a180, 0);
setfloat(0x945a184, -0.29999);
setfloat(0x945a188, -0.475);
setchar(0x945a190, 70);
setfloat(0x945a20c, 0.95625);
setfloat(0x945a210, 0.5);
setfloat(0x945a16c, 1.02857);
sethex(0x945a230, 0x03, 0x81, 0x20, 0x04);
sethex(0x944fb20, 0xCA, 0xDA, 0xCF);
sethex(0x944fb50, 0xCA, 0xDA, 0xCF);
setint(0x8E38A38, 142);
setchar(0x8E38A5C, 112, 124);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(0x945d1b2, 0x6);
setchar(0x945d1b1, 0x50);
setchar(0x945d1b0, 0x52);
setshort(0x9445310, 250);
setfloat(0x944530c, 0.725);
setfloat(0x945d130, 1400);
setfloat(0x945d138, 1.4);
setfloat(0x945d1f0, 0.2);
setfloat(0x945d1f4, -0.0125);
setfloat(0x945d1f8, 0.4);
setfloat(0x945d1bc, 1.2);
setfloat(0x945d1c0, 1.2);
setfloat(0x945d1b4, 0.0065);
setfloat(0x945d1d0, 0.45);
setfloat(0x945d1d4, 0);
setfloat(0x945d1d8, 40);
setfloat(0x945d1e8, 1.1);
setfloat(0x945d1ec, 0.075);
setfloat(0x945d204, 0.2);
setfloat(0x945d1fc, 0.3);
setfloat(0x945d150, 0);
setfloat(0x945d154, 0.3);
setfloat(0x945d158, -0.29999);
setchar(0x945d160, 75);
setfloat(0x945d1dc, 0.8);
setfloat(0x945d1e0, 0.45);
setfloat(0x945d13c, 0.85714);
sethex(0x945d200, 0x02, 0x81, 0x00, 0x06);
sethex(0x944fb34, 0x00, 0x00, 0x00);
sethex(0x944fb48, 0x00, 0x00, 0x00);
setint(0x8E38A38, 189);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(0x9459d32, 0x5);
setchar(0x9459d31, 0x50);
setchar(0x9459d30, 0x34);
setshort(0x94401d0, 250);
setfloat(0x94401cc, 1.6);
setfloat(0x9459cb0, 2500);
setfloat(0x9459cb8, 0.75);
setfloat(0x9459d70, 0.35);
setfloat(0x9459d74, -.7);
setfloat(0x9459d78, 0.5);
setfloat(0x9459d3c, 1);
setfloat(0x9459d40, 1);
setfloat(0x9459d34, 0.001);
setfloat(0x9459d50, 0.5);
setfloat(0x9459d54, 0);
setfloat(0x9459d58, 25);
setfloat(0x9459d68, 1.5);
setfloat(0x9459d6c, 1);
setfloat(0x9459d84, 0.28);
setfloat(0x9459d7c, 0);
setfloat(0x9459cd0, 0);
setfloat(0x9459cd4, 0);
setfloat(0x9459cd8, -1);
setchar(0x9459ce0, 80);
setfloat(0x9459d5c, 0.92);
setfloat(0x9459d60, 0.5);
setfloat(0x9459cbc, 0);
sethex(0x9459d80, 0x83, 0xc1, 0x00, 0x04);
sethex(0x944fb58, 0x00, 0x00, 0x00);
sethex(0x944fb48, 0xFF, 0xAA, 0x01);
setint(0x8E38A38, 137);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(0x945d482, 0x5);
setchar(0x945d481, 0x50);
setchar(0x945d480, 0x52);
setshort(0x9446c10, 255);
setfloat(0x9446c0c, 0.67);
setfloat(0x945d400, 500);
setfloat(0x945d408, 1.6);
setfloat(0x945d4c0, 0.15);
setfloat(0x945d4c4, -0.15999);
setfloat(0x945d4c8, 0.5);
setfloat(0x945d48c, 0.97867);
setfloat(0x945d490, 0.97867);
setfloat(0x945d484, 0.004);
setfloat(0x945d4a0, 0.5);
setfloat(0x945d4a4, 0);
setfloat(0x945d4a8, 35);
setfloat(0x945d4b8, 0.85);
setfloat(0x945d4bc, 0.15);
setfloat(0x945d4d4, 0);
setfloat(0x945d4cc, 0);
setfloat(0x945d420, 0);
setfloat(0x945d424, 0.05);
setfloat(0x945d428, -0.08999);
setchar(0x945d430, 103);
setfloat(0x945d4ac, 0.9);
setfloat(0x945d4b0, 0.48);
setfloat(0x945d40c, 0.6);
sethex(0x945d4d0, 0x02, 0x01, 0x01, 0x00);
sethex(0x944fb28, 0x6D, 0xFF, 0x00);
sethex(0x944fb2c, 0x77, 0xFF, 0x00);
setfloat(0x945d404, 850);
setint(0x8E38A38, 205);
sethex(0x8E38A5E, 0x01, 0x00);
off();
moveto(298.50, -475.50, 37.82); object(0x01BF, 270, 0, 88);
move(-7.16, -0.20, 0.10); object(0x01BF, 270, 0, 88);
move(-6.03, -0.17, 0.00); object(0x01BF, 270, 0, 88);
move(-5.80, -0.16, 0.00); object(0x01BF, 270, 0, 88);
move(-6.67, -0.18, 0.00); object(0x01BF, 270, 0, 88);
move(-2.90, -0.07, 0.00); object(0x01BF, 270, 0, 88);
move(27.73, 0.79, 0.10); object(0x01BF, 270, 0, 271);
move(4.03, -0.00, 0.00); object(0x01BF, 270, 0, 271);
move(6.47, -0.00, 0.00); object(0x01BF, 270, 0, 271);
move(5.82, -0.00, 0.00); object(0x01BF, 270, 0, 271);
move(-26.51, 7.36, -0.10); object(0x01BF, 270, 0, 269);
move(5.16, 0.10, 0.00); object(0x01BF, 270, 0, 269);
move(4.26, 0.09, 0.00); object(0x01BF, 270, 0, 269);
move(0.00, 0.00, 0.10); object(0x01BF, 270, 0, 269);
move(3.10, 0.06, 0.00); object(0x01BF, 270, 0, 269);
move(3.21, 0.07, 0.00); object(0x01BF, 270, 0, 269);
move(4.00, 0.08, 0.00); object(0x01BF, 270, 0, 269);
move(-18.86, 6.61, 0.00); object(0x01BF, 270, 0, 273);
move(2.32, -4.51, 0.00); object(0x01BF, 270, 0, 212);
move(2.30, 4.23, 0.00); object(0x01BF, 270, 0, 271);
move(5.31, -0.11, 0.00); object(0x01BF, 270, 0, 271);
move(3.80, -0.08, 0.00); object(0x01BF, 270, 0, 271);
move(5.62, -0.12, 0.00); object(0x01BF, 270, 0, 271);
move(-19.09, 6.50, 0.00); object(0x01BF, 270, 0, 275);
move(1.14, -0.29, 0.00); object(0x01BF, 270, 0, 271);
move(4.04, -0.02, 0.00); object(0x01BF, 270, 0, 271);
move(3.55, -0.02, 0.00); object(0x01BF, 270, 0, 271);
move(3.19, -0.02, 0.00); object(0x01BF, 270, 0, 271);
move(2.42, -0.01, 0.00); object(0x01BF, 270, 0, 271);
move(3.45, -0.02, 0.00); object(0x01BF, 270, 0, 271);
move(-18.86, 6.85, 0.00); object(0x01BF, 270, 0, 270);
move(4.14, 0.01, 0.00); object(0x01BF, 270, 0, 270);
move(4.83, 0.01, 0.00); object(0x01BF, 270, 0, 270);
move(4.89, 0.01, 0.00); object(0x01BF, 270, 0, 270);
move(4.28, 0.01, 0.00); object(0x01BF, 270, 0, 270);
move(-3.03, -0.01, 0.00); object(0x01BF, 270, 0, 270);
move(1.84, 0.01, 0.00); object(0x01BF, 270, 0, 270);
move(1.84, 0.01, 0.00); object(0x01BF, 270, 0, 270);
move(-18.38, 6.05, 0.00); object(0x01BF, 270, 0, 272);
move(4.29, -0.13, 0.00); object(0x01BF, 270, 0, 272);
move(3.89, -0.12, 0.00); object(0x01BF, 270, 0, 272);
move(4.84, -0.15, 0.00); object(0x01BF, 270, 0, 272);
move(4.42, -0.13, 0.00); object(0x01BF, 270, 0, 272);
move(2.21, -0.07, 0.00); object(0x01BF, 270, 0, 272);
move(-17.91, 7.51, 0.00); object(0x01BF, 270, 0, 269);
move(4.69, 0.11, 0.00); object(0x01BF, 270, 0, 269);
move(3.17, 0.07, 0.00); object(0x01BF, 270, 0, 269);
move(3.91, -1.01, 0.00); object(0x01BF, 270, 0, 269);
move(-0.07, 2.80, 0.00); object(0x01BF, 270, 0, 269);
move(-11.32, 1.03, 0.00); object(0x01BF, 270, 0, 269);
move(3.88, 0.09, 0.00); object(0x01BF, 270, 0, 269);
move(2.04, 0.05, 0.00); object(0x01BF, 270, 0, 269);
move(-7.36, -0.17, 0.00); object(0x01BF, 270, 0, 269);
move(15.03, 0.35, 0.00); object(0x01BF, 270, 0, 269);
move(2.24, 0.05, 0.00); object(0x01BF, 270, 0, 269);
move(0.20, -1.29, 0.00); object(0x01BF, 270, 0, 254);
move(0.48, -1.63, 0.00); object(0x01BF, 270, 0, 254);
move(3.39, -5.51, 0.00); object(0x01BF, 270, 0, 101);
move(-16.89, -41.74, -1.30); object(0x01BF, 250, 0, 357);
move(2.77, -5.44, -1.20); object(0x01BF, 250, 0, 27);
move(-2.50, 1.26, -0.40); object(0x01BF, 250, 0, 357);
move(13.50, 56.50, 5.00); object(0x01BF, 180, 0, 0);
#off
move(0.00, 0.00, 3.60); object(0x01BF, 180, 0, 0);
move(0.00, 0.00, 3.30); object(0x01BF, 180, 0, 0);
move(0.00, 0.00, 3.80); object(0x01BF, 180, 0, 0);
move(0.00, 0.00, 3.60); object(0x01BF, 180, 0, 0);
move(9.81, -44.42, -13.60); object(0x01BF, 180, 0, 90);
move(-0.19, -0.96, 0.00); object(0x01BF, 180, 0, 91);
move(0.00, 0.00, 4.50); object(0x01BF, 180, 0, 91);
move(0.32, 1.57, 0.00); object(0x01BF, 180, 0, 91);
move(-4.18, -5.38, -4.50); object(0x01BF, 180, 0, 180);
move(0.00, 0.00, 4.60); object(0x01BF, 180, 0, 180);
move(-6.92, -0.02, -4.50); object(0x01BF, 180, 0, 180);
move(0.00, 0.00, 4.60); object(0x01BF, 180, 0, 180);
move(-7.73, 0.00, -4.70); object(0x01BF, 180, 0, 180);
move(0.00, 0.00, 4.70); object(0x01BF, 180, 0, 180);
move(-7.95, -0.11, 0.00); object(0x01BF, 180, 0, 180);
move(-4.88, -0.00, -4.60); object(0x01BF, 180, 0, 180);
move(0.00, 0.00, 4.60); object(0x01BF, 180, 0, 180);
move(-6.84, -0.15, 0.00); object(0x01BF, 180, 0, 180);
move(0.05, 0.25, -4.00); object(0x01BF, 180, 0, 180);
move(-6.57, 0.12, 0.60); object(0x01BF, 180, 0, 181);
move(0.00, 0.00, 3.40); object(0x01BF, 180, 0, 181);
move(-4.13, 3.85, -4.10); object(0x01BF, 180, 0, 269);
move(0.00, 0.00, 4.10); object(0x01BF, 180, 0, 269);
move(11.68, 3.93, -7.60); object(0x01BF, 90, 0, 265);
move(2.30, -0.21, 0.00); object(0x01BF, 90, 0, 265);
move(-7.51, 0.28, 0.00); object(0x01BF, 90, 0, 265);
move(-3.49, -0.19, 0.00); object(0x01BF, 90, 0, 265);
move(0.96, -8.04, 1.30); object(0x01BF, 0, 0, 187);
#off
setfloat(0x08e2d800, 307.98, -436.38, 39.20);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1000000, 0x1000000);
setshort(0x08e2d826, 0x11C);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, 308.77, -440.28, 39.20);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1000000, 0x1000000);
setshort(0x08e2d826, 0x102);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, 308.77, -444.21, 39.20);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1000000, 0x1000000);
setshort(0x08e2d826, 0x109);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, 308.66, -447.42, 39.20);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1000000, 0x1000000);
setshort(0x08e2d826, 0x111);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, 308.41, -450.84, 39.20);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1000000, 0x1000000);
setshort(0x08e2d826, 0x118);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, 308.50, -450.58, 39.20);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1000000, 0x1000000);
setshort(0x08e2d826, 0x117);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setchar(0x08E4E9C0, 209);
setfloat(0x08E4E9C4, 272.41, -448.04, 39.10);
setfloat(0x08E4E9D0, 0);
#off
moveto(-214.68, 58.13, -1.02); object(0x01F3, 0, 0, 276);
move(-24.92, -14.45, 1.00); object(0x0270, 0, 0, 174);
move(-5.44, 3.94, -0.20); object(0x0270, 0, 0, 257);
move(9.88, 1.09, 0.00); object(0x0270, 0, 0, 91);
move(-5.01, 5.01, 0.00); object(0x0270, 0, 0, 0);
move(-11.30, -2.71, -0.20); object(0x0270, 0, 0, 147);
move(3.07, 3.23, 0.00); object(0x0270, 0, 0, 92);
move(-0.39, 5.29, 0.00); object(0x0270, 0, 0, 41);
move(8.57, 2.85, 0.00); object(0x0270, 0, 0, 99);
move(-4.61, -4.83, 0.00); object(0x0270, 0, 0, 179);
move(15.97, 21.37, 0.00); object(0x0270, 0, 0, 296);
move(-3.12, -4.40, 0.00); object(0x0270, 0, 0, 259);
move(-0.53, -4.41, 0.00); object(0x0270, 0, 0, 225);
move(-11.06, 0.28, 0.00); object(0x0270, 0, 0, 300);
move(-2.21, -6.42, 0.00); object(0x0270, 0, 0, 250);
move(-15.54, -4.57, -0.05); object(0x0270, 0, 0, 136);
move(2.72, 2.66, 0.00); object(0x0270, 0, 0, 136);
move(4.48, 6.50, 0.00); object(0x0270, 0, 0, 65);
move(3.87, -5.60, 0.00); object(0x0270, 0, 0, 113);
move(25.38, -12.91, 2.12); object(0x0257, 0, 0, 305);
move(-7.00, 3.49, 0.00); object(0x0257, 0, 0, 288);
move(-1.75, -3.72, -0.40); object(0x0257, 0, 0, 255);
move(2.28, -4.22, 0.00); object(0x0257, 0, 0, 204);
move(-9.54, -0.34, 0.00); object(0x0257, 0, 0, 242);
move(-1.74, 6.25, 0.00); object(0x0257, 0, 0, 308);
move(18.31, 5.86, 0.16); object(0x026C, 0, 0, 309);
move(3.70, 4.03, -0.40); object(0x026C, 0, 0, 0);
move(0.00, 12.50, -1.00); object(0x026C, 0, 0, 0);
move(-2.42, 3.17, 0.00); object(0x026C, 0, 0, 1);
move(-3.15, -3.12, -0.40); object(0x026C, 0, 0, 301);
move(-0.57, -3.89, 0.00); object(0x026C, 0, 0, 255);
move(4.16, -4.25, 0.00); object(0x026C, 0, 0, 189);
move(-5.96, -3.34, 0.00); object(0x026C, 0, 0, 211);
move(23.36, -0.69, -0.16); object(0x027C, 0, 0, 24);
move(4.10, -1.86, -0.30); object(0x027C, 0, 0, 24);
move(-7.51, 5.23, 0.00); object(0x027C, 0, 0, 24);
move(-3.29, 3.08, 0.00); object(0x027C, 0, 0, 4);
move(-2.78, 5.81, 0.00); object(0x027C, 0, 0, 71);
move(-3.12, 8.27, 0.00); object(0x027C, 0, 0, 356);
move(11.83, -41.12, 2.51); object(0x0369, 270, 180, 214);
move(-4.61, 3.24, 0.00); object(0x0369, 270, 180, 215);
move(-5.00, 3.45, 0.00); object(0x0369, 270, 180, 215);
move(-4.70, 3.17, 0.00); object(0x0369, 270, 180, 215);
move(-4.53, 3.01, 0.10); object(0x0369, 270, 180, 216);
move(74.66, -112.25, 15.17); object(0x01BF, 270, 85, 111);
move(5.30, -2.19, 0.00); object(0x01BF, 270, 85, 111);
move(3.95, 1.90, 0.00); object(0x01BF, 270, 270, 17);
move(2.07, 5.66, 0.00); object(0x01BF, 270, 270, 19);
move(-1.50, 4.72, 0.00); object(0x01BF, 270, 270, 299);
move(-4.12, 2.09, 0.00); object(0x01BF, 270, 270, 296);
move(-5.01, -1.35, 0.00); object(0x01BF, 270, 270, 211);
move(-3.90, -5.39, 0.14); object(0x01BF, 100, 90, 232);
move(11.03, 1.78, 3.80); object(0x01BF, 90, 0, 123);
move(-1.35, -5.57, 0.00); object(0x01BF, 90, 0, 117);
move(-5.46, 1.27, 0.00); object(0x01BF, 90, 0, 99);
move(2.28, 5.23, 0.00); object(0x01BF, 90, 0, 124);
move(-4.13, -4.21, 0.00); object(0x01BF, 90, 0, 123);
move(10.88, 1.62, 3.00); object(0x01BF, 0, 0, 121);
move(-2.70, -4.41, 0.00); object(0x01BF, 0, 0, 128);
move(1.62, 9.94, 0.00); object(0x01BF, 0, 0, 29);
move(-6.08, -1.50, -0.20); object(0x01BF, 0, 0, 322);
move(-2.04, -5.82, 0.00); object(0x01BF, 0, 0, 262);
move(2.84, 1.52, 3.10); object(0x01BF, 265, 0, 254);
move(0.83, -1.72, 0.00); object(0x01BF, 265, 0, 309);
move(3.05, 4.43, 0.20); object(0x01BF, 265, 0, 296);
move(-6.53, -16.77, -10.14); object(0x01BF, 265, 210, 101);
move(1.57, 7.09, 3.20); object(0x01BF, 265, 210, 111);
move(1.84, 12.15, -3.86); object(0x021C, 200, 205, 348);
move(1.28, -0.41, 0.00); object(0x021C, 200, 205, 5);
move(0.99, 0.17, 0.00); object(0x021C, 200, 205, 13);
move(2.94, -0.57, 0.00); object(0x021C, 200, 205, 39);
move(-0.95, 1.13, 0.00); object(0x021C, 200, 205, 22);
move(-1.92, 1.06, 0.00); object(0x021C, 200, 205, 356);
move(-0.70, 0.25, 0.00); object(0x021C, 200, 205, 348);
move(-1.48, -0.01, 0.00); object(0x021C, 200, 205, 331);
move(-1.41, -0.44, 0.00); object(0x021C, 200, 205, 314);
move(-60.70, 88.90, -14.41); object(0x01E0, 270, 180, 211);
move(-7.15, 4.59, 0.00); object(0x01E0, 270, 180, 212);
move(-7.07, 4.34, 0.30); object(0x01E0, 270, 180, 211);
move(-6.82, 4.57, -0.15); object(0x01E0, 270, 180, 215);

#cheat The New Cheat Pack
//ID: 15564
//Score: 199
//Author: juzten
//Category: Player
//Description: Includes the Lamborghini doors, Infinate Ammo, Infinate Sprint, Super Punch, and $999,999,999!!!!!!!! This is no joke all these cheats turn on when you turn the pack on!!!!!!
//Image: none
//Time: 27/07/2006 20:38:57
//Working: Yes
setfloat(pcar + 0x3d8, 1);
setfloat(pcar + 0x400, 0, -1.26, 1);
setfloat(pcar + 0x438, 1);
setfloat(pcar + 0x460, 0, -1.26, 1);
setint(pplayer + 0x05f0, 100);
setint(pplayer + 0x05f4, 9999);
setint(pplayer + 0x060c, 100);
setint(pplayer + 0x0610, 9999);
setint(pplayer + 0x0628, 100);
setint(pplayer + 0x062c, 9999);
setint(pplayer + 0x0644, 100);
setint(pplayer + 0x0648, 9999);
setint(pplayer + 0x0660, 100);
setint(pplayer + 0x0664, 9999);
setint(pplayer + 0x0664, 9999);
setint(pplayer + 0x067c, 100);
setint(pplayer + 0x0680, 9999);
setint(pplayer + 0x000005D8, 9999);
setchar(pplayer + 0x0354, 0x04)
setint(0x08b89acc, 999999999);
setint(0x08b89ad0, 999999999);
//Gives Toni Super Strength
setchar(pplayer + 0x0bb3, 0x01);

#cheat Stairway to Heaven part 2
//ID: 12444
//Score: 197
//Author: DoteStudios
//Category: Location Mods
//Description:  This is a path from the park to the top of the tallest building. At the top there is a platform where you can look at the view, ride off, or drive off of. It is almost 400 feet high in the sky and is amazingly long!
//
//Image: none
//Time: 08/06/2006 22:57:13
//Working: Yes
moveto(84.03, -1311.47, 26.17);  object(0x0161, 0, 0, 87);
move(16.19, -47.84, 367.70);  object(0x01BF, 90, 0, 181);
move(0.21, 5.04, 0.00);  object(0x01BF, 90, 0, 179);
move(-0.11, 6.00, -1.80);  object(0x01BF, 60, 0, 179);
move(-0.08, 4.61, -2.70);  object(0x01BF, 60, 0, 179);
move(-0.10, 3.79, -2.20);  object(0x01BF, 60, 0, 179);
move(-0.07, 5.65, -3.20);  object(0x01BF, 60, 0, 179);
move(-0.03, 5.36, -3.10);  object(0x01BF, 60, 0, 179);
move(-0.11, 4.76, -3.00);  object(0x01BF, 60, 0, 179);
move(-0.16, 4.81, -2.90);  object(0x01BF, 60, 0, 179);
move(-0.09, 4.37, -2.60);  object(0x01BF, 60, 0, 179);
move(-0.09, 4.31, -2.50);  object(0x01BF, 60, 0, 179);
move(0.01, 4.38, -2.70);  object(0x01BF, 60, 0, 180);
move(0.02, 4.74, -2.80);  object(0x01BF, 60, 0, 180);
move(0.21, 4.72, -2.80);  object(0x01BF, 60, 0, 181);
move(0.14, 5.97, -3.40);  object(0x01BF, 60, 0, 181);
move(0.07, 4.83, -3.00);  object(0x01BF, 60, 0, 181);
move(0.08, 4.21, -2.50);  object(0x01BF, 60, 0, 181);
move(0.08, 5.25, -3.20);  object(0x01BF, 60, 0, 181);
move(0.09, 4.38, -2.60);  object(0x01BF, 60, 0, 181);
move(0.11, 5.05, -3.10);  object(0x01BF, 60, 0, 181);
move(0.12, 4.89, -3.00);  object(0x01BF, 60, 0, 181);
move(0.08, 3.67, -2.40);  object(0x01BF, 60, 0, 181);
move(0.20, 4.84, -3.00);  object(0x01BF, 60, 0, 183);
move(0.19, 4.45, -2.60);  object(0x01BF, 60, 0, 184);
move(0.42, 5.62, -3.20);  object(0x01BF, 60, 0, 184);
move(0.38, 5.21, -3.10);  object(0x01BF, 60, 0, 184);
move(0.38, 5.18, -3.10);  object(0x01BF, 60, 0, 184);
move(0.33, 4.51, -2.90);  object(0x01BF, 60, 0, 184);
move(0.34, 4.65, -3.00);  object(0x01BF, 60, 0, 184);
move(0.38, 5.22, -3.30);  object(0x01BF, 60, 0, 184);
move(0.36, 4.85, -2.90);  object(0x01BF, 60, 0, 184);
move(0.31, 4.87, -2.90);  object(0x01BF, 60, 0, 184);
move(0.40, 5.16, -3.10);  object(0x01BF, 60, 0, 184);
move(0.37, 4.77, -2.90);  object(0x01BF, 60, 0, 184);
move(0.41, 5.34, -3.40);  object(0x01BF, 60, 0, 184);
move(0.34, 4.91, -3.00);  object(0x01BF, 60, 0, 185);
move(0.40, 4.60, -3.00);  object(0x01BF, 60, 0, 186);
move(0.32, 2.84, -1.80);  object(0x01BF, 60, 0, 186);
move(0.46, 4.08, -2.60);  object(0x01BF, 60, 0, 186);
move(0.55, 4.95, -3.10);  object(0x01BF, 60, 0, 186);
move(-11.72, -66.85, 44.80);  object(0x01C0, 55, 0, 291);
move(5.84, -9.68, 2.20);  object(0x01BF, 60, 0, 185);
move(0.37, 4.55, -2.90);  object(0x01BF, 60, 0, 185);
move(0.32, 3.96, -2.60);  object(0x01BF, 60, 0, 185);
move(0.37, 4.52, -2.70);  object(0x01BF, 60, 0, 185);
move(0.37, 4.53, -2.70);  object(0x01BF, 60, 0, 185);
move(0.37, 4.56, -2.70);  object(0x01BF, 60, 0, 185);
move(0.34, 4.19, -2.60);  object(0x01BF, 60, 0, 185);
move(0.40, 4.94, -3.10);  object(0x01BF, 60, 0, 185);
move(0.39, 4.84, -3.10);  object(0x01BF, 60, 0, 185);
move(0.31, 3.85, -2.40);  object(0x01BF, 60, 0, 185);
move(0.36, 4.51, -2.70);  object(0x01BF, 60, 0, 185);
move(0.34, 4.18, -2.60);  object(0x01BF, 60, 0, 185);
move(0.35, 4.36, -2.70);  object(0x01BF, 60, 0, 185);
move(0.33, 4.05, -2.50);  object(0x01BF, 60, 0, 185);
move(0.39, 4.88, -3.00);  object(0x01BF, 60, 0, 185);
move(0.41, 5.07, -3.10);  object(0x01BF, 60, 0, 185);
move(0.41, 5.09, -3.10);  object(0x01BF, 60, 0, 185);
move(0.43, 5.38, -3.40);  object(0x01BF, 60, 0, 185);
move(0.33, 4.04, -2.50);  object(0x01BF, 60, 0, 185);
move(0.39, 4.80, -2.90);  object(0x01BF, 60, 0, 185);
move(0.38, 4.75, -3.00);  object(0x01BF, 60, 0, 185);
move(0.42, 5.27, -3.20);  object(0x01BF, 60, 0, 185);
move(0.41, 5.06, -3.00);  object(0x01BF, 60, 0, 185);
move(0.39, 4.88, -3.00);  object(0x01BF, 60, 0, 185);
move(0.40, 5.02, -2.90);  object(0x01BF, 60, 0, 185);
move(0.36, 4.47, -2.90);  object(0x01BF, 60, 0, 185);
move(0.33, 4.16, -2.60);  object(0x01BF, 60, 0, 185);
move(0.46, 5.65, -3.30);  object(0x01BF, 60, 0, 185);

