#cheat Ultimate Car showroom V2 (BETA RELEASE)
//ID: 11789
//Score: 551
//Author: vettefan88
//Category: Location Mods
//Description: Now in Version 2 BETA it Features:
//19 Cars Spawns.
//Every weapon spawn
//front gate removed
//Over 5 Floors!
//Observation Deck
//Built in PMG Cars
//
//The biggest car showroom to date!
//Image: http://img359.imageshack.us/img359/5479/screen134zk.png
//Time: 30/05/2006 00:29:54
//Working: Yes
moveto(34.17, -372.69, 23.13);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(6.60, -9.85, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(0.06, -7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(0.06, -7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(6.14, 0.04, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(-6.07, 7.76, 0.00);  object(0x01BF, 90, 0, 270);
move(11.99, -7.72, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.50, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(0.06, -7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(0.06, -7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(-5.78, 54.22, -0.90);  object(0x01BF, 75, 0, 270);
move(5.23, 0.05, -1.40);  object(0x01BF, 75, 0, 270);
move(5.97, 0.06, -1.60);  object(0x01BF, 75, 0, 270);
move(5.97, 0.06, -1.60);  object(0x01BF, 75, 0, 270);
move(4.88, -0.03, -1.30);  object(0x01BF, 75, 0, 270);
move(5.23, 0.05, -1.40);  object(0x01BF, 75, 0, 270);
move(-18.50, -6.52, 10.60);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(-3.90, 2.89, 2.44);  object(0x01BF, 90, 0, 180);
move(-7.80, -0.01, 0.00);  object(0x01BF, 90, 0, 180);
move(-7.80, -0.01, 0.00);  object(0x01BF, 90, 0, 180);
move(-4.10, -0.00, 0.00);  object(0x01BF, 90, 0, 180);
move(7.59, 6.43, 0.00);  object(0x01BF, 90, 0, 180);
move(7.80, 0.01, 0.00);  object(0x01BF, 90, 0, 180);
move(4.40, 0.00, 0.00);  object(0x01BF, 90, 0, 180);
move(-19.30, -0.02, 0.00);  object(0x01BF, 90, 0, 180);
move(26.90, 0.02, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, -6.48, 0.00);  object(0x01BF, 90, 0, 180);
move(6.60, -0.05, 0.00);  object(0x01BF, 90, 0, 180);
move(0.05, 6.51, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.16, 0.00);  object(0x01BF, 90, 0, 180);
move(-6.70, 0.05, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.31, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.33, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.17, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.41, 0.00);  object(0x01BF, 90, 0, 180);
move(0.03, 4.81, 0.00);  object(0x01BF, 90, 0, 180);
move(0.03, 3.62, 0.00);  object(0x01BF, 90, 0, 180);
move(6.51, -27.53, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.36, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.27, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.32, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 5.83, 0.00);  object(0x01BF, 90, 0, 180);
move(0.02, 2.74, 0.00);  object(0x01BF, 90, 0, 180);
move(7.36, -5.50, 0.00);  object(0x01BF, 90, 0, 180);
move(7.80, -0.05, 0.00);  object(0x01BF, 90, 0, 180);
move(6.10, -0.04, 0.00);  object(0x01BF, 90, 0, 180);
move(-13.56, 5.52, 0.00);  object(0x01BF, 90, 0, 180);
move(7.30, -0.05, 0.00);  object(0x01BF, 90, 0, 180);
move(6.20, -0.04, 0.00);  object(0x01BF, 90, 0, 180);
move(1.42, 3.31, 2.50);  object(0x0CDB, 180, 0, 180);
move(-5.00, 0.04, 0.00);  object(0x0CDB, 180, 0, 180);
move(-5.00, 0.04, 0.00);  object(0x0CDB, 180, 0, 180);
move(-5.00, 0.04, 0.00);  object(0x0CDB, 180, 0, 180);
move(-5.00, 0.04, 0.00);  object(0x0CDB, 180, 0, 180);
move(-4.90, 0.03, 0.00);  object(0x0CDB, 180, 0, 180);
move(-5.00, 0.04, 0.00);  object(0x0CDB, 180, 0, 180);
move(-2.68, -0.00, -2.20);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.40, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.40, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.40, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.40, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(-1.32, -3.35, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.40, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.40, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.30, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.30, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.40, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(-6.39, 3.78, -1.00);  object(0x01BF, 90, 10, 270);
move(-0.02, 7.30, -1.30);  object(0x01BF, 90, 10, 270);
move(-0.05, 7.37, -1.30);  object(0x01BF, 90, 10, 270);
move(-0.02, 4.10, -0.80);  object(0x01BF, 90, 10, 272);
move(23.45, 17.31, -0.40);  object(0x01F0, 0, 0, 180);
move(-3.30, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.40, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(42.75, -2.63, 6.98);  object(0x0CDB, 0, 0, 270);
move(0.06, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.06, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
//lights on third floor
moveto(56.48, -324.82, 28.51);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.00, 0.00);  object(0x020F, 0, 0, 90);
//other lights
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
move(-1.30, 0.00, 0.00);  object(0x020F, 0, 0, 90);
//fourth floor
moveto(88.91, -328.42, 33.05);  object(0x01BF, 90, 0, 90);
move(-6.10, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.42, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.01, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.41, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-3.83, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(28.74, -6.85, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.31, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.51, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.55, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.35, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-3.04, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(0.00, -7.60, 0.00);  object(0x01BF, 90, 0, 90);
move(0.00, -7.60, 0.00);  object(0x01BF, 90, 0, 90);
move(0.00, -7.60, 0.00);  object(0x01BF, 90, 0, 90);
move(6.60, 14.95, -0.60);  object(0x01BF, 90, 10, 90);
move(0.0, -7.20, -1.30);  object(0x01BF, 90, 10, 90);
move(0.0, -7.30, -1.30);  object(0x01BF, 90, 10, 90);
move(0.0, -7.30, -1.30);  object(0x01BF, 90, 10, 90);
//railings
moveto(57.2, -324.82, 33.4);  object(0x01ef, 0, 0, 90);
move(0.00, -6.60, 0.00);  object(0x01ef, 0, 0, 90);
move(0.00, -6.60, 0.00);  object(0x01ef, 0, 0, 90);
move(0.00, -6.60, 0.00);  object(0x01ef, 0, 0, 90);
move(0.00, -6.60, 0.00);  object(0x01ef, 0, 0, 90);
move(0.00, -6.60, 0.00);  object(0x01f0, 0, 0, 90);
moveto(57.08, -361.11, 33.4);  object(0x01EF, 0, 0, 0);
//fourth floor addon + observation deck
moveto(88.89, -321.34, 33.03);  object(0x01BF, 90, 0, 90);
move(-6.30, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.39, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.20, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.22, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-3.65, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.48, 0.39, 0.80);  object(0x01BF, 105, 0, 90);
move(-5.98, -0.01, 1.60);  object(0x01BF, 105, 0, 90);
move(-6.61, -0.01, 0.80);  object(0x01BF, 90, 0, 90);
move(0.01, -7.40, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.05, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.01, 7.40, 0.00);  object(0x01BF, 90, 0, 90);
move(6.09, -14.69, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.18, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-4.89, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.01, 7.20, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.02, 8.70, 0.00);  object(0x01BF, 90, 0, 90);
move(13.86, -19.82, 0.20);  object(0x01EF, 0, 0, 270);
move(-0.00, 7.60, 0.00);  object(0x01EF, 0, 0, 270);
move(-6.43, -7.64, 0.00);  object(0x01EF, 0, 0, 0);
move(-5.70, 0.03, 0.00);  object(0x01EF, 0, 0, 0);
//remove the Front Gate
setfloat(0x09997788, -100);
//pimped cars
//monster hummer- Patriot
setshort(0x992FC5A, 0x20, 0x48, 0x75, 0x6d, 0x6d, 0x65, 0x72);
setchar(0x9459d32, 0x5);
setchar(0x9459d31, 0x50);
setchar(0x9459d30, 0x34);
setshort(0x94401d0, 250);
setfloat(0x94401cc, 1.6);
setfloat(0x9459cb0, 2500);
setfloat(0x9459cb8, 0.75);
setfloat(0x9459d70, 0.35);
setfloat(0x9459d74, -.7);
setfloat(0x9459d78, 0.5);
setfloat(0x9459d3c, 1);
setfloat(0x9459d40, 1);
setfloat(0x9459d34, 0.001);
setfloat(0x9459d50, 0.5);
setfloat(0x9459d54, 0);
setfloat(0x9459d58, 25);
setfloat(0x9459d68, 1.5);
setfloat(0x9459d6c, 1);
setfloat(0x9459d84, 0.28);
setfloat(0x9459d7c, 0);
setfloat(0x9459cd0, 0);
setfloat(0x9459cd4, 0);
setfloat(0x9459cd8, -1);
setchar(0x9459ce0, 80);
setfloat(0x9459d5c, 0.92);
setfloat(0x9459d60, 0.5);
setfloat(0x9459cbc, 0);
sethex(0x9459d80, 0x83, 0xc1, 0x00, 0x04);
//venom-banshee
setshort(0x992FDD4, 0x20, 0x20, 0x56, 0x65, 0x6e, 0x6f, 0x6d);
sethex(0x945b131, 0x01);
sethex(0x945b133, 0x02);
setchar(0x945b0e2, 0x8);
setchar(0x945b0e1, 0x50);
setchar(0x945b0e0, 0x52);
setshort(0x94425c0, 250);
setfloat(0x94425bc, 1);
setfloat(0x945b060, 1500);
setfloat(0x945b068, 0.85);
setfloat(0x945b120, 0.3);
setfloat(0x945b124, -0.15);
setfloat(0x945b128, 0.5);
setfloat(0x945b0ec, 5);
setfloat(0x945b0f0, 4);
setfloat(0x945b100, 0.52);
setfloat(0x945b104, 0);
setfloat(0x945b108, 34);
setfloat(0x945b118, 1.6);
setfloat(0x945b11c, 0.1);
setfloat(0x945b134, 0.15);
setfloat(0x945b12c, 0);
setfloat(0x945b080, 0);
setfloat(0x945b084, 0);
setfloat(0x945b088, -1);
setchar(0x945b090, 70);
setchar(0x967E6FC, 0x00, 187, 0x00);
//porsche
setshort(0x992FC0E, 0x50, 0x6f, 0x72, 0x73, 0x63, 0x68, 0x65);
setchar(0x9459972, 0x5);
setchar(0x9459971, 0x50);
setchar(0x9459970, 0x52);
setshort(0x943fb90, 250);
setfloat(0x943fb8c, 0.87);
setfloat(0x94598f8, 0.8);
setfloat(0x94599b0, 0.2);
setfloat(0x94599b4, -0.05);
setfloat(0x94599b8, 0.5);
setfloat(0x945997c, 1.5);
setfloat(0x9459980, 1.5);
setchar(0x8E38A58, 255);
setfloat(0x9459974, 0.00208);
setfloat(0x9459990, 0.52);
setfloat(0x9459994, 0);
setfloat(0x9459998, 25);
setfloat(0x94599a8, 1);
setfloat(0x94599ac, 0.2);
setfloat(0x94599c4, 0.4);
setfloat(0x94599bc, 1);
setfloat(0x9459910, 0);
setfloat(0x9459914, 0);
setfloat(0x9459918, -0.5);
setchar(0x9459920, 70);
setfloat(0x945999c, 0.92);
setfloat(0x94599a0, 0.48);
setfloat(0x94598fc, 0);
sethex(0x94599c0, 0x83, 0xa1, 0x00, 0x06);
setchar(0x967E6FC, 0x00, 0x00, 0xFF);
//car spawns
//landstalker
setchar(0x08E4E9C0, 131);
setchar(0x08E4E9C0 + 0x18, 0x01);
setfloat(0x08E4E9C4, 41.34, -369, 16.16, 300);
//patriot
setchar(0x08E4E9EC, 137);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 41.34, -364, 16.16, 300);
//phobos
setchar(0x08E4Ea18, 186);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 41.34, -359, 16.16, 300);
//stinger
setchar(0x08E4Ea44, 133);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 41.34, -354, 16.16, 300);
//yardie lobo
setchar(0x08E4Ea70, 173);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, 41.34, -349, 16.16, 300);
//banshee
setchar(0x08E4Ea9c, 160);
setchar(0x08E4Ea9c + 0x18, 0x01);
setfloat(0x08E4Eaa0, 41.34, -344, 16.16, 300);
//hellenbach
setchar(0x08E4Eac8, 185);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 41.34, -339, 16.16, 300);
//thunder-rodd
setchar(0x08E4Eaf4, 189);
setchar(0x08E4Eaf4 + 0x18, 0x01);
setfloat(0x08E4Eaf8, 41.34, -334, 16.16, 300);
//deimos
setchar(0x08E4Eb20, 130);
setchar(0x08E4Eb20 + 0x18, 0x01);
setfloat(0x08E4Eb24, 41.34, -329, 16.16, 300);
//angel
setchar(0x08E4Eb4c, 202);
setchar(0x08E4Eb4c + 0x18, 0x01);
setfloat(0x08E4Eb50, 55.34, -369, 16.16, 300);
//cheetah
setchar(0x08E4Eb78, 146);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 73.74, -352.51, 16.16, 270);
//pcj 600
setchar(0x08E4Eba4, 205);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 55.34, -359, 16.16, 300);
//yakuza stinger
setchar(0x08E4Ebd0, 174);
setchar(0x08E4Ebd0 + 0x18, 0x01);
setfloat(0x08E4Ebd4, 55.34, -354, 16.16, 300);
//diablo
setchar(0x08E4Ebfc, 175);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 55.34, -349, 16.16, 300);
//Bickle
setchar(0x08E4Ec28, 181);
setchar(0x08E4Ec28 + 0x18, 0x01);
setfloat(0x08E4Ec2c, 55.34, -344, 16.16, 300);
//leone sentinel
setchar(0x08E4Ec54, 172);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, 55.34, -339, 16.16, 300);
//infernus
setchar(0x08E4Ec80, 142);
setchar(0x08E4Ec80 + 0x18, 0x01);
setfloat(0x08E4Ec84, 55.34, -334, 16.16, 300);
//stretch
setchar(0x08E4Ecac, 140);
setchar(0x08E4Ecac + 0x18, 0x01);
setfloat(0x08E4Ecb0, 55.34, -329, 16.16, 300);
//police
setchar(0x08E4Ecd8, 157);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, 27.00, -365.41, 16.16, 270);
//weapon spawns
setfloat(0x08e2d800, 55.39, -326, 24.31);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
setfloat(0x08E2E400, 55.39, -328, 24.31);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x124);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, 55.39, -330, 24.31);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
setfloat(0x08e2d8c0, 55.39, -332, 24.31);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, 55.39, -334, 24.31);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, 55.39, -336, 24.31);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, 55.39, -338, 24.31);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, 55.39, -340, 24.31);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
setfloat(0x08e2daa0, 55.39, -342, 24.31);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
setfloat(0x08e2db00, 55.39, -344, 24.31);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
setfloat(0x08E2DB60, 55.39, -346, 24.31);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
setfloat(0x08E2DBC0, 55.39, -348, 24.31);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
setfloat(0x08E2DC20, 55.39, -350, 24.31);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
setfloat(0x08E2DC80, 55.39, -352, 24.31);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
setfloat(0x08E2DCE0, 55.39, -354, 24.31);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x10f);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
setfloat(0x08E2DD40, 55.39, -356, 24.31);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
setfloat(0x08E2DDA0, 55.39, -358, 24.31);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
setfloat(0x08E2DE00, 55.39, -360, 24.31);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
setfloat(0x08E2DE60, 55.39, -362, 24.31);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
setfloat(0x08E2DEC0, 55.39, -364, 24.31);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
setfloat(0x08E2DF20, 55.39, -366, 24.31);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0xff, 0xff);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
setfloat(0x08E2DF80, 55.39, -368, 24.31);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0xff, 0xff);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
setfloat(0x08E2DFE0, 55.39, -370, 24.31);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0xff, 0xff);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
setfloat(0x08E2E040, 55.39, -372, 24.31);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0xff, 0xff);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
setfloat(0x08E2E0A0, 55.39, -374, 24.31);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
setfloat(0x08E2E100, 55.39, -376, 24.31);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0xff, 0xff);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
setfloat(0x08E2E160, 53.39, -376, 24.31);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
setfloat(0x08E2E1C0, 51.39, -376, 24.31);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
setfloat(0x08E2E220, 49.39, -376, 24.31);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0xff, 0xff);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
setfloat(0x08E2E280, 47.39, -376, 24.31);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0xff, 0xff);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
setfloat(0x08E2E2E0, 45.39, -376, 24.31);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0xff, 0xff);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
setfloat(0x08E2E340, 43.39, -376, 24.31);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0xff, 0xff);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
setfloat(0x08E2E3A0, 41.39, -376, 24.31);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0xff, 0xff);
setshort(0x08E2E3C6, 0x122);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
setfloat(0x08E2E460, 39.39, -376, 24.31);
setint(0x08E2E474, 0);
setchar(0x08E2E47C, 0xff, 0xff);
setshort(0x08E2E486, 0x22e);
setchar(0x08E2E492, 0x0f);
setchar(0x08E2E493, 0x00);
setchar(0x08E2D4B0, 0xff);
setfloat(0x08E2E4C0, 37.39, -376, 24.31);
setint(0x08E2E4D4, 0);
setchar(0x08E2E4DC, 0xff, 0xff);
setshort(0x08E2E4E6, 0x24b);
setchar(0x08E2E4F2, 0x0f);
setchar(0x08E2E4F3, 0x00);
setchar(0x08E2D510, 0xff);
teleport(87.25, -323.25, 16.83);

#cheat Wepo Chillout v1
//ID: 12092
//Score: 27
//Author: stephane
//Category: Location Mods
//Description: Map with Staunton island, with plusior weapons and pickups and possiblility D outward journey on you
//
//EDITED BY: Waterbottle on 04/06/06 01:53:18
//Image: none
//Time: 03/06/2006 15:49:51
//Working: Yes
//by stephane
moveto(138.00, -469.78, 20.26); object(0x01BF, 90, 0, 95);
move(0.49, -0.04, 0.00); object(0x01BF, 90, 0, 90);
move(1.51, 8.46, 0.00); object(0x01BF, 90, 0, 109);
move(-1.74, -4.31, 0.00); object(0x01BF, 90, 0, 273);
move(0.41, 4.01, 0.00); object(0x01BF, 90, 0, 273);
move(-0.43, 0.07, 0.00); object(0x01BF, 90, 0, 273);
move(-5.92, 1.25, 0.00); object(0x01BF, 90, 0, 273);
move(-6.18, 0.33, 0.00); object(0x01BF, 90, 0, 274);
move(-6.02, 0.33, 0.00); object(0x01BF, 90, 0, 271);
move(-6.78, 0.15, 0.00); object(0x01BF, 90, 0, 271);
move(-6.10, 0.05, 0.00); object(0x01BF, 90, 0, 272);
move(-14.98, -0.22, 0.00); object(0x01BF, 90, 0, 89);
move(39.44, -8.60, 0.00); object(0x01BF, 90, 0, 272);
move(-6.24, 0.35, 0.00); object(0x01BF, 90, 0, 272);
move(-6.07, 0.21, 0.00); object(0x01BF, 90, 0, 272);
move(-6.22, 0.27, 0.00); object(0x01BF, 90, 0, 272);
move(-6.17, 0.27, 0.00); object(0x01BF, 90, 0, 272);
move(-6.66, 0.09, 0.00); object(0x01BF, 90, 0, 272);
move(-6.55, 0.21, 0.00); object(0x01BF, 90, 0, 91);
move(-6.32, 0.10, 0.00); object(0x01BF, 90, 0, 91);
move(43.38, -8.64, 0.00); object(0x01BF, 90, 0, 2);
move(-7.80, 0.23, 0.00); object(0x01BF, 90, 0, 2);
move(-8.00, 0.24, 0.00); object(0x01BF, 90, 0, 2);
move(-7.77, 1.33, 0.00); object(0x01BF, 90, 0, 4);
move(-7.78, 0.52, 0.00); object(0x01BF, 90, 0, 4);
move(-6.19, 0.41, 0.00); object(0x01BF, 90, 0, 4);
move(5.97, 16.59, -1.40); object(0x01BF, 90, 340, 181);
move(-0.07, -3.91, 0.00); object(0x01BF, 90, 340, 181);
move(6.75, 4.44, -2.60); object(0x01BF, 90, 340, 175);
move(0.36, -4.31, 0.00); object(0x01BF, 90, 340, 175);
move(35.50, -11.04, 7.70); object(0x01BF, 90, 90, 179);
move(0.08, 1.20, 0.00); object(0x01BF, 90, 90, 179);
move(-20.40, 9.43, -0.60); object(0x01BF, 90, 15, 90);
move(-0.69, -6.70, -1.00); object(0x01BF, 90, 0, 1);
move(-7.64, 0.08, -1.00); object(0x01BF, 90, 15, 182);
move(-19.93, 14.01, 7.20); object(0x01BF, 90, 25, 359);
move(-0.11, 6.70, 0.00); object(0x01BF, 90, 25, 359);
move(6.06, -0.00, -2.80); object(0x01BF, 90, 20, 358);
move(0.20, -6.50, 0.10); object(0x01BF, 90, 20, 358);
move(-10.57, -9.21, 4.50); object(0x01F0, 0, 0, 91);
move(0.05, 3.10, 0.00); object(0x01F0, 0, 0, 91);
move(0.04, 2.40, 0.00); object(0x01F0, 0, 0, 91);
move(-0.15, -9.10, 0.00); object(0x01F0, 0, 0, 91);
move(55.39, 8.94, -5.60); object(0x01F0, 0, 0, 181);
move(-3.60, 0.07, 0.00); object(0x01F0, 0, 0, 181);
move(-3.60, 0.07, 0.00); object(0x01F0, 0, 0, 181);
move(-3.70, 0.07, 0.00); object(0x01F0, 0, 0, 181);
move(-4.40, 0.09, 0.00); object(0x01F0, 0, 0, 181);
move(-10.90, 0.22, 0.00); object(0x01F0, 0, 0, 181);
move(-3.80, -0.18, 0.00); object(0x01F0, 0, 0, 181);
move(-3.90, -0.03, 0.00); object(0x01F0, 0, 0, 181);
move(-3.70, 0.07, 0.00); object(0x01F0, 0, 0, 181);
move(-2.17, -6.79, -4.20); object(0x01F0, 0, 0, 271);
move(0.10, 3.60, 0.00); object(0x01F0, 0, 0, 271);
move(20.29, -7.74, 2.10); object(0x01F0, 0, 0, 90);
move(-0.02, 3.20, 0.00); object(0x01F0, 0, 0, 90);
move(-3.78, -6.37, -0.10); object(0x01F0, 0, 0, 0);
move(-3.42, 0.09, 0.00); object(0x01F0, 0, 0, 3);
move(-17.65, 14.24, 3.40); object(0x01F0, 0, 15, 5);
move(-3.18, 0.14, 1.10); object(0x01F0, 0, 20, 3);
move(-3.35, -0.12, 1.60); object(0x01F0, 0, 25, 3);
move(-3.27, 0.44, 1.40); object(0x01F0, 0, 25, 3);
move(28.43, -4.34, -6.50); object(0x01F0, 0, 10, 99);
move(6.33, 0.07, 0.20); object(0x01F0, 0, 345, 273);
move(-0.15, -3.46, -0.80); object(0x01F0, 0, 345, 275);
move(-6.25, 6.63, 1.70); object(0x01F0, 0, 15, 94);
move(165.13, -127.45, 12.49); object(0x021C, 0, 5, 210);
move(-2.04, 2.52, 1.60); object(0x021C, 0, 5, 245);
move(0.00, 0.00, 0.00); object(0x021C, 0, 5, 245);
move(-0.34, 2.75, 1.10); object(0x021C, 0, 5, 279);
move(-209.69, 132.11, 10.44); object(0x021C, 0, 205, 300);
move(-35.18, -5.34, -10.20); object(0x0239, 0, 205, 297);
move(31.71, -20.79, 0.00); object(0x024E, 0, 205, 178);
move(4.17, 2.27, 0.00); object(0x0250, 0, 205, 195);
move(-32.29, 11.38, 0.00); object(0x0254, 0, 185, 306);
setfloat(0x08e2d800, 135.23, -479.77, 15.94);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
setfloat(0x08E2E400, 133.23, -479.79, 15.94);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x124);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, 131.05, -479.46, 15.94);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
setfloat(0x08e2d8c0, 291.08, -479.40, 15.94);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, 127.12, -479.48, 15.94);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, 125.18, -479.44, 15.94);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, 123.42, -479.73, 15.94);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, 121.32, -479.67, 15.94);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
setfloat(0x08e2daa0, 119.36, -479.61, 15.94);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
setfloat(0x08e2db00, 191.76, -477.30, 15.94);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
setfloat(0x08E2DB60, 121.75, -477.46, 15.94);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
setfloat(0x08E2DBC0, 123.86, -477.60, 15.94);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
setfloat(0x08E2DC20, 125.70, -477.45, 15.94);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
setfloat(0x08E2DC80, 127.88, -477.48, 15.94);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
setfloat(0x08E2DCE0, 129.84, -477.51, 15.94);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x10f);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
setfloat(0x08E2DD40, 131.81, -477.54, 15.94);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
setfloat(0x08E2DDA0, 133.86, -479.55, 15.94);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
setfloat(0x08E2DE00, 135.96, -479.77, 15.94);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
setfloat(0x08E2DE60, 104.60, -480.08, 15.94);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
setfloat(0x08E2DEC0, 102.69, -480.03, 15.94);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
setfloat(0x08E2DF20, 100.62, -479.99, 15.94);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0xff, 0xff);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
setfloat(0x08E2DF80, 98.63, -479.95, 15.94);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0xff, 0xff);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
setfloat(0x08E2DFE0, 97.82, -477.87, 15.94);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0xff, 0xff);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
setfloat(0x08E2E040, 100.88, -477.81, 15.94);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0xff, 0xff);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
setfloat(0x08E2E0A0, 102.97, -477.77, 15.94);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
setfloat(0x08E2E100, 104.91, -477.81, 15.94);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0xff, 0xff);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
setfloat(0x08E2E160, 104.79, -475.02, 15.94);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
setfloat(0x08E2E1C0, 102.85, -474.97, 15.94);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
setfloat(0x08E2E220, 100.74, -475.93, 15.94);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0xff, 0xff);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
setfloat(0x08E2E280, 98.73, -474.90, 15.94);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0xff, 0xff);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
setfloat(0x08E2E2E0, 91.15, -471.45, 16.03);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0xff, 0xff);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
setfloat(0x08E2E340, 91.53, -467.07, 16.03);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0xff, 0xff);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
setfloat(0x08E2E3A0, 93.88, -467.11, 16.05);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0xff, 0xff);
setshort(0x08E2E3C6, 0x122);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
setfloat(0x08E2E460, 93.99, -469.19, 16.05);
setint(0x08E2E474, 0);
setchar(0x08E2E47C, 0xff, 0xff);
setshort(0x08E2E486, 0x22e);
setchar(0x08E2E492, 0x0f);
setchar(0x08E2E493, 0x00);
setchar(0x08E2D4B0, 0xff);
setfloat(0x08E2E4C0, 93.99, -471.80, 16.01);
setint(0x08E2E4D4, 0);
setchar(0x08E2E4DC, 0xff, 0xff);
setshort(0x08E2E4E6, 0x24b);
setchar(0x08E2E4F2, 0x0f);
setchar(0x08E2E4F3, 0x00);
setchar(0x08E2D510, 0xff);
teleport(172.76, -470.37, 24.41)

#cheat Staunton House
//ID: 12663
//Score: 35
//Author: rsfnickrsf2
//Category: Location Mods
//Description: Located above Staunton safehouse. Please improve this, it's my first construction. It has three parts. Part 3(weapon spawns) doesn't seem to work. any improvements, please e-mail me at corkyromano222@yahoo.com
//Image: none
//Time: 11/06/2006 16:45:25
//Working: Yes
moveto(298.50, -475.50, 37.82);  object(0x01BF, 270, 0, 88);
move(-7.16, -0.20, 0.10);  object(0x01BF, 270, 0, 88);
move(-6.03, -0.17, 0.00);  object(0x01BF, 270, 0, 88);
move(-5.80, -0.16, 0.00);  object(0x01BF, 270, 0, 88);
move(-6.67, -0.18, 0.00);  object(0x01BF, 270, 0, 88);
move(-2.90, -0.07, 0.00);  object(0x01BF, 270, 0, 88);
move(27.73, 0.79, 0.10);  object(0x01BF, 270, 0, 271);
move(4.03, -0.00, 0.00);  object(0x01BF, 270, 0, 271);
move(6.47, -0.00, 0.00);  object(0x01BF, 270, 0, 271);
move(5.82, -0.00, 0.00);  object(0x01BF, 270, 0, 271);
move(-26.51, 7.36, -0.10);  object(0x01BF, 270, 0, 269);
move(5.16, 0.10, 0.00);  object(0x01BF, 270, 0, 269);
move(4.26, 0.09, 0.00);  object(0x01BF, 270, 0, 269);
move(0.00, 0.00, 0.10);  object(0x01BF, 270, 0, 269);
move(3.10, 0.06, 0.00);  object(0x01BF, 270, 0, 269);
move(3.21, 0.07, 0.00);  object(0x01BF, 270, 0, 269);
move(4.00, 0.08, 0.00);  object(0x01BF, 270, 0, 269);
move(-18.86, 6.61, 0.00);  object(0x01BF, 270, 0, 273);
move(2.32, -4.51, 0.00);  object(0x01BF, 270, 0, 212);
move(2.30, 4.23, 0.00);  object(0x01BF, 270, 0, 271);
move(5.31, -0.11, 0.00);  object(0x01BF, 270, 0, 271);
move(3.80, -0.08, 0.00);  object(0x01BF, 270, 0, 271);
move(5.62, -0.12, 0.00);  object(0x01BF, 270, 0, 271);
move(-19.09, 6.50, 0.00);  object(0x01BF, 270, 0, 275);
move(1.14, -0.29, 0.00);  object(0x01BF, 270, 0, 271);
move(4.04, -0.02, 0.00);  object(0x01BF, 270, 0, 271);
move(3.55, -0.02, 0.00);  object(0x01BF, 270, 0, 271);
move(3.19, -0.02, 0.00);  object(0x01BF, 270, 0, 271);
move(2.42, -0.01, 0.00);  object(0x01BF, 270, 0, 271);
move(3.45, -0.02, 0.00);  object(0x01BF, 270, 0, 271);
move(-18.86, 6.85, 0.00);  object(0x01BF, 270, 0, 270);
move(4.14, 0.01, 0.00);  object(0x01BF, 270, 0, 270);
move(4.83, 0.01, 0.00);  object(0x01BF, 270, 0, 270);
move(4.89, 0.01, 0.00);  object(0x01BF, 270, 0, 270);
move(4.28, 0.01, 0.00);  object(0x01BF, 270, 0, 270);
move(-3.03, -0.01, 0.00);  object(0x01BF, 270, 0, 270);
move(1.84, 0.01, 0.00);  object(0x01BF, 270, 0, 270);
move(1.84, 0.01, 0.00);  object(0x01BF, 270, 0, 270);
move(-18.38, 6.05, 0.00);  object(0x01BF, 270, 0, 272);
move(4.29, -0.13, 0.00);  object(0x01BF, 270, 0, 272);
move(3.89, -0.12, 0.00);  object(0x01BF, 270, 0, 272);
move(4.84, -0.15, 0.00);  object(0x01BF, 270, 0, 272);
move(4.42, -0.13, 0.00);  object(0x01BF, 270, 0, 272);
move(2.21, -0.07, 0.00);  object(0x01BF, 270, 0, 272);
move(-17.91, 7.51, 0.00);  object(0x01BF, 270, 0, 269);
move(4.69, 0.11, 0.00);  object(0x01BF, 270, 0, 269);
move(3.17, 0.07, 0.00);  object(0x01BF, 270, 0, 269);
move(3.91, -1.01, 0.00);  object(0x01BF, 270, 0, 269);
move(-0.07, 2.80, 0.00);  object(0x01BF, 270, 0, 269);
move(-11.32, 1.03, 0.00);  object(0x01BF, 270, 0, 269);
move(3.88, 0.09, 0.00);  object(0x01BF, 270, 0, 269);
move(2.04, 0.05, 0.00);  object(0x01BF, 270, 0, 269);
move(-7.36, -0.17, 0.00);  object(0x01BF, 270, 0, 269);
move(15.03, 0.35, 0.00);  object(0x01BF, 270, 0, 269);
move(2.24, 0.05, 0.00);  object(0x01BF, 270, 0, 269);
move(0.20, -1.29, 0.00);  object(0x01BF, 270, 0, 254);
move(0.48, -1.63, 0.00);  object(0x01BF, 270, 0, 254);
move(3.39, -5.51, 0.00);  object(0x01BF, 270, 0, 101);
move(-16.89, -41.74, -1.30);  object(0x01BF, 250, 0, 357);
move(2.77, -5.44, -1.20);  object(0x01BF, 250, 0, 27);
move(-2.50, 1.26, -0.40);  object(0x01BF, 250, 0, 357);
move(13.50, 56.50, 5.00);  object(0x01BF, 180, 0, 0);
#off
move(0.00, 0.00, 3.60);  object(0x01BF, 180, 0, 0);
move(0.00, 0.00, 3.30);  object(0x01BF, 180, 0, 0);
move(0.00, 0.00, 3.80);  object(0x01BF, 180, 0, 0);
move(0.00, 0.00, 3.60);  object(0x01BF, 180, 0, 0);
move(9.81, -44.42, -13.60);  object(0x01BF, 180, 0, 90);
move(-0.19, -0.96, 0.00);  object(0x01BF, 180, 0, 91);
move(0.00, 0.00, 4.50);  object(0x01BF, 180, 0, 91);
move(0.32, 1.57, 0.00);  object(0x01BF, 180, 0, 91);
move(-4.18, -5.38, -4.50);  object(0x01BF, 180, 0, 180);
move(0.00, 0.00, 4.60);  object(0x01BF, 180, 0, 180);
move(-6.92, -0.02, -4.50);  object(0x01BF, 180, 0, 180);
move(0.00, 0.00, 4.60);  object(0x01BF, 180, 0, 180);
move(-7.73, 0.00, -4.70);  object(0x01BF, 180, 0, 180);
move(0.00, 0.00, 4.70);  object(0x01BF, 180, 0, 180);
move(-7.95, -0.11, 0.00);  object(0x01BF, 180, 0, 180);
move(-4.88, -0.00, -4.60);  object(0x01BF, 180, 0, 180);
move(0.00, 0.00, 4.60);  object(0x01BF, 180, 0, 180);
move(-6.84, -0.15, 0.00);  object(0x01BF, 180, 0, 180);
move(0.05, 0.25, -4.00);  object(0x01BF, 180, 0, 180);
move(-6.57, 0.12, 0.60);  object(0x01BF, 180, 0, 181);
move(0.00, 0.00, 3.40);  object(0x01BF, 180, 0, 181);
move(-4.13, 3.85, -4.10);  object(0x01BF, 180, 0, 269);
move(0.00, 0.00, 4.10);  object(0x01BF, 180, 0, 269);
move(11.68, 3.93, -7.60);  object(0x01BF, 90, 0, 265);
move(2.30, -0.21, 0.00);  object(0x01BF, 90, 0, 265);
move(-7.51, 0.28, 0.00);  object(0x01BF, 90, 0, 265);
move(-3.49, -0.19, 0.00);  object(0x01BF, 90, 0, 265);
move(0.96, -8.04, 1.30);  object(0x01BF, 0, 0, 187);
#off
setfloat(0x08e2d800, 307.98, -436.38, 39.20);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1000000, 0x1000000);
setshort(0x08e2d826, 0x11C);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, 308.77, -440.28, 39.20);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1000000, 0x1000000);
setshort(0x08e2d826, 0x102);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, 308.77, -444.21, 39.20);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1000000, 0x1000000);
setshort(0x08e2d826, 0x109);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, 308.66, -447.42, 39.20);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1000000, 0x1000000);
setshort(0x08e2d826, 0x111);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, 308.41, -450.84, 39.20);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1000000, 0x1000000);
setshort(0x08e2d826, 0x118);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, 308.50, -450.58, 39.20);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1000000, 0x1000000);
setshort(0x08e2d826, 0x117);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setchar(0x08E4E9C0, 209);
setfloat(0x08E4E9C4, 272.41, -448.04, 39.10);
setfloat(0x08E4E9D0, 0);
#off

#cheat Wolf Side Hill (Updated Version)
//ID: 12673
//Score: 68
//Author: Noru
//Category: Location Mods
//Description: anyone remember wolfside hill made by me and mike0101? well I have updated it adding weapons and etc... Wait a few seconds for everything to load
//
//EDITED BY: deep:cover on 11/06/06 18:30:13
//Image: none
//Time: 11/06/2006 18:24:48
//Working: Yes
setfloat(09591670, 0, -1, 0);
setfloat(09591680, 1, 0, 0);
setfloat(09591690, 0, 0, 1);
setfloat(09591760, -192.07, 683.69, 143.53)
setshort(09591788, 0xfa5)
setfloat(09591670, 0, -1, 0);
setfloat(09591680, 1, 0, 0);
setfloat(09591690, 0, 0, 1);
setfloat(095917C0, -191.60, 667.65, 142.96)
setshort(095917E8, 0xfa5)
setfloat(09591670, 0, -1, 0);
setfloat(09591680, 1, 0, 0);
setfloat(09591690, 0, 0, 1);
setfloat(09591820, -178.22, 672.89, 143.34)
setshort(09591848, 0x20F)
setfloat(09591880, -173.37, 683.99, 142.40)
setshort(095918A8, 0xfa5)
setfloat(095918E0, -181.25, 697.63, 143.34)
setshort(09591908, 0xfa5)
setfloat(09591940, -184.46, 687.19, 144.21)
setshort(09591968, 0x20F)
setfloat(095919A0, -175.13, 664.67, 143.89)
setshort(095919C8, 0x25b)
setfloat(09591700, -163.63, 666.40, 141.24)
setshort(09591728, 0xfa5)
setfloat(095916A8, -181.45, 680.00, 143.77)
setshort(095916C8, 0x20F)
setfloat(09591760, -196.24, 659.64, 142.95)
setshort(095917E8, 0xfa5)
setfloat(09592240, -169.50, 676.13, 143.91)
setshort(09592268, 0x25b)
setfloat(09591550, 1, -1, 0);
setfloat(09591560, 1, 0, 0);
setfloat(09591570, 0, 0, 1);
setfloat(09592300, -155.59, 677.18, 142.04)
setshort(09592328, 0xf25)
setfloat(09592360, -182.88, 708.47, 145.78)
setshort(09592388, 0x1f2)
setfloat(09591640, -173.96, 708.21, 143.21)
setshort(09591668, 0xfa5)
setfloat(09591520, -198.18, 673.28, 144.54)
setshort(09591548, 0x20F)
setfloat(09591460, -187.96, 680.72, 145.19)
setshort(09591488, 0x25b)
setfloat(09591400, -165.43, 726.08, 148.10)
setshort(09591428, 0xfbe)
setfloat(09591340, -188.74, 663.82, 144.66)
setshort(09591368, 0x213)
setfloat(09591670, 0, -1, 0);
setfloat(09591680, 1, 0, 0);
setfloat(09591690, 0, 0, 1);
setfloat(09592060, -153.38, 754.47, 147.06)
setshort(09592088, 0xfbe)
setfloat(09592120, -164.18, 742.45, 144.52)
setshort(09592148, 0x20F)
setfloat(095920C0, -135.41, 735.96, 140.87)
setshort(095920E8, 0xfa5)
setfloat(09591670, 0, -1, 0);
setfloat(09591680, 1, 0, 0);
setfloat(09591690, 0, 0, 1);
setfloat(09591280, -145.59, 718.91, 141.29)
setshort(095912a8, 0xfa5)
setfloat(09591040, -138.72, 741.38, 143.32)
setshort(09591068, 0x25b)
setfloat(09590FE0, -169.69, 706.51, 144.89)
setshort(09591008, 0x251)
setfloat(09590F80, -146.24, 702.16, 140.87)
setshort(09590FA8, 0xfa5)
setfloat(09590F20, -162.59, 707.25, 143.39)
setshort(09590F48, 0x20F)
setfloat(09590500, -191.27, 692.20, 145.77)
setshort(09590528, 0xdb7)
setfloat(095911C0, -200.45, 675.62, 145.66)
setshort(095911E8, 0xdb6)
setfloat(09591550, 1, -1, 0);
setfloat(09591560, 1, 0, 0);
setfloat(09591570, 0, 0, 1);
setfloat(09590260, -173.94, 692.60, 144.72)
setshort(09590288, 0x25c)
setfloat(09592180, -173.25, 698.06, 144.85)
setshort(095921A8, 0x25d)
setfloat(095921E0, -219.49, 649.40, 144.56)
setshort(09592208, 0xff6)
setfloat(09590EC0, -190.80, 647.13, 142.19)
setshort(09590EE8, 0xfa5)
setfloat(095924e0, -202.18, 641.27, 142.89)
setshort(09592508, 0xF25)
setfloat(09592660, -219.49, 635.89, 143.88)
setshort(09592688, 0x25b)
setfloat(09590D40, -192.14, 635.61, 143.86)
setshort(09590D68, 0x25d)
setfloat(09590DA0, -230.42, 629.93, 139.51)
setshort(09590Dc8, 0xfa5)
setfloat(09590E00, -208.74, 655.29, 144.55)
setshort(09590E28, 0xdb7)
setfloat(09590E60, -207.40, 644.53, 142.77)
setshort(09590E88, 0x25f)
setfloat(095910A0, -195.85, 642.33, 143.31)
setshort(095910C8, 0x270)
setfloat(09591100, -185.51, 643.02, 142.75)
setshort(09591128, 0x26f)
setfloat(09591220, -193.23, 624.11, 140.51)
setshort(09591248, 0xfa5)
setfloat(095912E0, -212.96, 629.28, 141.09)
setshort(09591308, 0xfa5)
setfloat(09590a40, -209.03, 584.12, 142.23)
setshort(09590a68, 0xf9a)
setfloat(09590a70, 0, -1, 0);
setfloat(09590a80, 1, 0, 0);
setfloat(09590a90, 0, 0, 1);
setfloat(09590aa0, -216.18, 584.11, 142.17)
setshort(09590ac8, 0xf98)
setfloat(09590b00, -205.18, 582.66, 139.83)
setshort(09590b28, 0x1bf)
setfloat(09590b60, -219.91, 583.82, 140.33)
setshort(09590b88, 0x1bf)
setfloat(09590c20, -213.75, 618.61, 140.51)
setshort(09590c48, 0xfa5)
setfloat(09590c80, -183.83, 625.95, 141.06)
setshort(09590cA8, 0xfa5)
setfloat(09590cE0, -211.04, 612.59, 140.94)
setshort(09590d08, 0x20F)
setfloat(09592240, -154.82, 694.82, 142.40)
setshort(09592268, 0xF25)
setfloat(095922A0, -202.10, 634.17, 142.10)
setshort(095922C8, 0xeb0)
setfloat(09590d10, -1, 0, 0)
setfloat(09590d20, 0, -1, 0)
setfloat(09590d30, 0, 0, 1)
setfloat(09590140, -208.70, 590.85, 142.31)
setshort(09590168, 0xf8b)
setfloat(09590170, 0, -1, 0);
setfloat(09590180, 1, 0, 0);
setfloat(09590190, 0, 0, 1);
setfloat(095901A0, -219.36, 590.90, 141.48)
setshort(095901C8, 0x1bf)
setfloat(09590200, -203.22, 656.48, 143.99)
setshort(09590228, 0x1ee)
setfloat(095902c0, -170.35, 674.54, 143.92)
setshort(095902e8, 0x25b)
setfloat(09590320, -214.00, 594.45, 141.02)
setshort(09590348, 0x1bf)
setfloat(09590380, -142.48, 744.56, 143.58)
setshort(095903A8, 0x1ee)
setfloat(095903E0, -204.99, 590.80, 141.20)
setshort(09590408, 0x1bf)
setfloat(09590440, -208.24, 584.29, 141.27)
setshort(09590468, 0x251)
setfloat(095904A0, -219.62, 644.21, 144.31)
setshort(095904C8, 0x1bf)
setfloat(09590560, -219.84, 654.45, 144.83)
setshort(09590588, 0x1bf)
setfloat(095905C0, -216.48, 609.53, 140.17)
setshort(095905E8, 0xfa5)
setfloat(09590620, -207.15, 599.42, 138.80)
setshort(09590648, 0xfa5)
setfloat(09590680, -211.79, 602.96, 141.42)
setshort(095906A8, 0x25b)
setfloat(095906E0, -213.26, 598.18, 140.32)
setshort(09590708, 0x20F)
setfloat(09590740, -218.16, 605.18, 142.09)
setshort(09590768, 0x25b)
setfloat(095907A0, -211.07, 591.38, 141.35)
setshort(095907C8, 0x251)
setfloat(095907D0, 1, 0, 0)
setfloat(095907E0, 0, 0, -1)
setfloat(095907F0, 0, 1, 0)
setfloat(09590800, -215.99, 590.37, 144.26)
setshort(09590828, 0x1bf)
setfloat(09590830, 1, 0, 0)
setfloat(09590840, 0, 0, -1)
setfloat(09590850, 0, 1, 0)
setfloat(09590860, -209.11, 591.31, 144.35)
setshort(09590888, 0x1bf)
setfloat(09590890, 1, 0, 0)
setfloat(095908A0, 0, 0, -1)
setfloat(095908B0, 0, 1, 0)
setfloat(095908C0, -209.84, 584.10, 144.27)
setshort(095908E8, 0x1bf)
setfloat(095909F0, 1, 0, 0)
setfloat(09590900, 0, 0, -1)
setfloat(09590910, 0, 1, 0)
setfloat(09590920, -215.55, 584.03, 144.21)
setshort(09590948, 0x1bf)
setfloat(09590980, -217.60, 594.61, 141.90)
setshort(095909A8, 0x210)
setfloat(09592690, 1, 0, 0)
setfloat(095926a0, 0, 1, 0)
setfloat(095926b0, 0, 0, 1)
setfloat(095926c0, -214.96, 584.86, 141.21)
setshort(095926e8, 0xf2b)
setfloat(095926f0, 1, 0, 0)
setfloat(09592700, 0, 1, 0)
setfloat(09592710, 0, 0, 1)
setfloat(09592720, -180.64, 678.38, 144.67)
setshort(09592748, 0xf76)
setfloat(09592750, 1, 0, 0)
setfloat(09592760, 0, 1, 0)
setfloat(09592770, 0, 0, 1)
setfloat(09592780, -167.03, 741.26, 145.70)
setshort(095927a8, 0x25e)
setchar(0x8E4EA70, 205);
setchar(0x8E4EA70 + 0x18, 0x01);
setfloat(0x8E4EA74, -189.07, 671.67, 144.95, 0);
setchar(0x8E4EA9C, 205);
setchar(0x8E4EA9C + 0x18, 0x01);
setfloat(0x8E4EAA0, -176.62, 701.32, 145.17, 180);
setchar(0x8E4EAC8, 187);
setchar(0x8E4EAC8 + 0x18, 0x01);
setfloat(0x8E4EACC, -145.49, 727.05, 143.53, 0);
setchar(0x8E4EAF4, 189);
setchar(0x8E4EAF4 + 0x18, 0x01);
setfloat(0x8E4EAF8, -145.18, 709.12, 142.96, 0);
setchar(0x8E4EB20, 208);
setchar(0x8E4EB20 + 0x18, 0x01);
setfloat(0x8E4EB24, -220.11, 631.68, 143.66, 90);
setchar(0x8E4EB4C, 185);
setchar(0x8E4EB4C + 0x18, 0x01);
setfloat(0x8E4EB50, -198.21, 647.50, 144.61, 180);
setchar(0x8E4EC80, 181);
setchar(0x8E4EC80 + 0x18, 0x01);
setfloat(0x8E4EC84, -175.68, 628.38, 142.69, 0);
setchar(0x8E4EBA4, 154);
setchar(0x8E4EBA4 + 0x18, 0x01);
setfloat(0x8E4EBA8, -233.69, 640.17, 143.60, 180);
moveto(-215.64, 648.17, 144.23);  object(0x01BF, 0, 0, 273);
move(0.82, 5.23, 0.00);  object(0x01BF, 0, 0, 287);
move(-3.35, 1.21, 1.40);  object(0x01BF, 0, 0, 181);
move(-4.67, -6.41, -0.80);  object(0x01BF, 0, 0, 93);
move(3.02, -63.93, -3.60);  object(0x01BF, 0, 0, 90);
move(3.82, -4.14, 0.00);  object(0x01BF, 0, 0, 359);
move(7.10, 0.18, 0.00);  object(0x01BF, 0, 0, 359);
move(3.82, 3.47, 0.10);  object(0x01BF, 0, 0, 271);
move(20.08, 84.69, 3.20);  object(0x025B, 0, 0, 145);
move(-32.89, -43.30, -2.40);  object(0x021A, 0, 0, 202);
move(3.22, 19.15, 0.60);  object(0x021A, 0, 0, 332);
move(43.77, -3.52, -1.70);  object(0x0FA8, 0, 0, 332);
move(-9.27, 7.96, 0.60);  object(0x0FA8, 0, 0, 197);
move(-9.54, -40.67, -1.00);  object(0x0FA8, 0, 0, 124);
move(-7.40, -17.47, -2.50);  object(0x0FA8, 0, 0, 189);
move(-11.93, 27.13, 2.90);  object(0x0270, 0, 0, 104);
move(19.10, 2.38, 0.70);  object(0x0270, 0, 0, 24);
move(5.48, -12.23, -1.10);  object(0x0270, 0, 0, 144);
move(-38.91, 34.18, 2.40);  object(0x0270, 0, 0, 144);
move(5.61, -20.40, -1.60);  object(0x0270, 0, 0, 240);
move(-2.62, -27.54, -3.60);  object(0x027C, 0, 0, 240);
move(33.21, 109.42, 5.90);  object(0x027C, 0, 0, 98);
move(24.64, 43.30, 0.90);  object(0x0271, 0, 0, 240);
move(-4.80, -5.69, 0.00);  object(0x0271, 0, 0, 190);
move(36.14, 0.11, -2.90);  object(0x0268, 0, 0, 240);
move(0.31, 3.12, 0.00);  object(0x0268, 0, 0, 177);
move(-2.58, 29.13, -0.30);  object(0x0FA8, 0, 0, 15);
move(-16.54, 1.90, 1.60);  object(0x0FA8, 0, 0, 307);
move(21.71, -14.50, -1.70);  object(0x0FA8, 0, 0, 77);
setfloat(0x08e2d800, -132, 84, 764.47, 143.50);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
setfloat(0x08E2E400, -132.48, 761.53, 143.36);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x124);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, -131.87, 757.42, 143.15);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
setfloat(0x08e2d8c0, -148.01, 750.71, 144.48);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, -145.51, 751.01, 144.27);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, -149.81, 747.78, 144.54);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, -150.84, 744.94, 144.55);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, -155.30, 741.27, 144.78);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
setfloat(0x08e2daa0, -161.73, 734.46, 145.05);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
setfloat(0x08e2db00, -162.64, 732.09, 145.05);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
setfloat(0x08E2DB60, -160.13, 729.06, 144.78);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
setfloat(0x08E2DBC0, -139.47, 738.02, 143.30);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
setfloat(0x08E2DC20, -152.14, 700.54, 143.32);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
setfloat(0x08E2DC80, -171.92, 703.36, 144.93);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
setfloat(0x08E2DCE0, -180.89, 706.18, 145.58);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x10f);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
setfloat(0x08E2DD40, -182.90, 706.31, 145.72);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
setfloat(0x08E2DDA0, -187.39, 695.53, 145.65);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
setfloat(0x08E2DE00, -187.41, 692.36, 145.55);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
setfloat(0x08E2DE60, -174.46, 689.57, 144.65);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
setfloat(0x08E2DEC0, -170.99, 678.44, 144.08);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
setfloat(0x08E2DF20, -169.78, 666.89, 143.64);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0xff, 0xff);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
setfloat(0x08E2DF80, -166.34, 661.07, 143.25);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0xff, 0xff);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
setfloat(0x08E2DFE0, -188.44, 652.62, 144.24);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0xff, 0xff);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
setfloat(0x08E2E040, -192.58, 652.13, 144.47);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0xff, 0xff);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
setfloat(0x08E2E0A0, -199.48, 655.01, 144.96);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
setfloat(0x08E2E100, -205.61, 657.66, 144.64);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0xff, 0xff);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
setfloat(0x08E2E160, -205.79, 654.24, 144.41);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
setfloat(0x08E2E1C0, -211.50, 650.76, 144.30);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
setfloat(0x08E2E220, -216.01, 632.22, 143.50);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0xff, 0xff);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
setfloat(0x08E2E280, -210.68, 623.66, 142.58);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0xff, 0xff);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
setfloat(0x08E2E2E0, -193.82, 630.70, 143.78);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0xff, 0xff);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
setfloat(0x08E2E340, -183.96, 632, 14, 143.29);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0xff, 0xff);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
setfloat(0x08E2E3A0, -213.69, 613.65, 142.21);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0xff, 0xff);
setshort(0x08E2E3C6, 0x122);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
setfloat(0x08E2E460, -213.31, 592.53, 141.09);
setint(0x08E2E474, 0);
setchar(0x08E2E47C, 0xff, 0xff);
setshort(0x08E2E486, 0x22e);
setchar(0x08E2E492, 0x0f);
setchar(0x08E2E493, 0x00);
setchar(0x08E2D4B0, 0xff);
setfloat(0x08E2E4C0, -214.07, 582.35, 141.21);
setint(0x08E2E4D4, 0);
setchar(0x08E2E4DC, 0xff, 0xff);
setshort(0x08E2E4E6, 0x24b);
setchar(0x08E2E4F2, 0x0f);
setchar(0x08E2E4F3, 0x00);
setchar(0x08E2D510, 0xff);
teleport(-139.80, 770.10, 144.36)
off()

#cheat SWAT base
//ID: 13230
//Score: 84
//Author: DoteStudios
//Category: Location Mods
//Description:  This makes a SWAT base near Cotrane Dam. It is huge and will be updated with weapons, rooms, and a hunter on the roof. Since there is no opening us step through wall.
//Image: http://www.photohosting.info/uploads/f055607741.gif
//Time: 19/06/2006 04:10:17
//Working: Yes
moveto(-1155.64, 977.26, 83.03);  object(0x01BF, 260, 0, 46);
move(-4.34, -4.22, -1.00);  object(0x01BF, 260, 0, 46);
move(-5.02, -4.57, -0.90);  object(0x01BF, 260, 0, 49);
move(-4.71, -4.10, -1.10);  object(0x01BF, 260, 0, 49);
move(9.93, 17.77, 3.10);  object(0x01BF, 260, 0, 44);
move(-4.24, -4.35, -1.00);  object(0x01BF, 260, 0, 44);
move(-4.37, -4.93, -0.90);  object(0x01BF, 260, 0, 48);
move(-4.75, -4.33, -1.20);  object(0x01BF, 260, 0, 48);
move(7.50, 19.21, 3.30);  object(0x01BF, 260, 0, 42);
move(-3.66, -4.06, -1.10);  object(0x01BF, 260, 0, 42);
move(-3.90, -4.68, -1.10);  object(0x01BF, 260, 0, 45);
move(-4.52, -4.53, -1.00);  object(0x01BF, 260, 0, 45);
move(-2.51, -2.51, 1.90);  object(0x01BF, 180, 0, 45);
move(4.03, -4.41, 0.00);  object(0x01BF, 180, 0, 46);
move(4.81, -5.44, 0.00);  object(0x01BF, 180, 0, 48);
move(4.94, 0.65, 0.00);  object(0x01BF, 180, 0, 312);
move(3.46, 4.08, 0.00);  object(0x01BF, 180, 0, 304);
move(4.02, 6.43, 0.00);  object(0x01BF, 180, 0, 310);
move(5.19, 2.57, 2.30);  object(0x01BF, 180, 0, 356);
move(-25.81, 0.67, -1.60);  object(0x01BF, 180, 0, 141);
move(5.71, 5.14, 0.90);  object(0x01BF, 180, 0, 134);
move(2.97, 4.69, 0.00);  object(0x01BF, 180, 0, 103);
move(1.29, 5.31, 1.60);  object(0x01BF, 180, 0, 161);
move(5.67, -1.92, 0.00);  object(0x01BF, 180, 0, 220);
move(4.91, -5.18, 0.00);  object(0x01BF, 180, 0, 229);
move(4.12, -5.76, 0.00);  object(0x01BF, 180, 0, 230);
move(-3.02, -4.69, 3.30);  object(0x01BF, 180, 0, 312);
move(-5.06, -6.01, 0.00);  object(0x01BF, 180, 0, 311);
move(-4.91, -5.86, 0.00);  object(0x01BF, 180, 0, 313);
move(-4.27, 0.65, 0.00);  object(0x01BF, 180, 0, 50);
move(-4.79, 5.79, 0.00);  object(0x01BF, 180, 0, 42);
move(-3.34, 2.92, 0.00);  object(0x01BF, 180, 0, 46);
move(0.58, 4.44, 0.00);  object(0x01BF, 180, 0, 140);
move(7.53, 12.80, -4.90);  object(0x01BF, 180, 0, 58);
move(-0.11, -5.53, 5.30);  object(0x01BF, 180, 0, 125);
move(-3.52, -4.49, 0.00);  object(0x01BF, 180, 0, 129);
move(4.55, 11.00, 0.00);  object(0x01BF, 180, 0, 66);
move(-0.18, -0.08, 6.20);  object(0x01BF, 180, 0, 66);
move(-0.16, -0.02, 6.70);  object(0x01BF, 180, 0, 65);
move(-0.84, -6.00, 0.00);  object(0x01BF, 180, 0, 135);
move(-0.17, 1.09, -6.20);  object(0x01BF, 180, 0, 123);
move(-3.95, -6.33, -1.40);  object(0x01BF, 180, 0, 132);
move(-3.26, -2.70, 0.00);  object(0x01BF, 180, 0, 141);
move(-0.28, -4.39, 0.00);  object(0x01BF, 180, 0, 41);
move(5.41, -4.92, 0.00);  object(0x01BF, 180, 0, 47);
move(3.23, -3.70, 0.00);  object(0x01BF, 180, 0, 44);
move(4.20, 0.35, 0.00);  object(0x01BF, 180, 0, 313);
move(11.07, 12.44, -5.30);  object(0x01BF, 180, 0, 319);
move(-0.29, 0.33, 5.90);  object(0x01BF, 180, 0, 319);
move(0.00, 0.00, 4.90);  object(0x01BF, 180, 0, 319);
move(-5.10, -5.88, -5.20);  object(0x01BF, 180, 0, 315);
move(-3.21, -3.29, 0.00);  object(0x01BF, 180, 0, 314);
move(2.90, 3.73, 5.80);  object(0x01BF, 180, 0, 316);
move(-3.41, -4.15, 0.00);  object(0x01BF, 180, 0, 307);
move(-3.07, -3.66, 0.00);  object(0x01BF, 180, 0, 299);
move(-3.14, 0.45, 0.00);  object(0x01BF, 180, 0, 43);
move(-4.54, 5.72, 0.00);  object(0x01BF, 180, 0, 45);
move(-4.29, 3.14, 0.00);  object(0x01BF, 180, 0, 41);
move(4.74, 7.53, 0.00);  object(0x01BF, 180, 0, 136);
move(-11.43, -3.24, 0.00);  object(0x01BF, 180, 0, 218);
move(6.00, -1.61, 0.00);  object(0x01BF, 180, 0, 156);
move(-7.79, 8.01, 0.00);  object(0x01BF, 180, 0, 294);
move(5.53, 2.86, 0.00);  object(0x01BF, 180, 0, 11);
move(4.97, -3.28, 0.00);  object(0x01BF, 180, 0, 65);
move(-8.42, 0.09, -3.10);  object(0x01BF, 90, 0, 298);
move(1.39, -3.14, 0.00);  object(0x01BF, 90, 0, 229);
move(4.43, -1.79, 0.00);  object(0x01BF, 90, 0, 172);
move(-0.22, 5.17, -0.20);  object(0x01BF, 90, 0, 213);
move(8.44, 1.47, -1.70);  object(0x01BF, 180, 0, 310);
move(3.21, 7.93, -3.60);  object(0x01BF, 180, 0, 356);
move(0.81, -1.46, 13.50);  object(0x01BF, 90, 0, 332);
move(-3.15, -7.18, 0.00);  object(0x01BF, 90, 0, 323);
move(5.45, 2.77, 0.00);  object(0x01BF, 90, 0, 333);
move(2.37, -4.65, 0.00);  object(0x01BF, 90, 0, 333);
move(1.20, -4.63, 0.30);  object(0x01BF, 80, 0, 337);
move(0.92, -1.79, -1.50);  object(0x01BF, 80, 0, 318);
move(2.80, 2.52, 0.00);  object(0x01BF, 80, 0, 315);
move(-7.16, -7.77, 0.20);  object(0x01BF, 80, 0, 306);
move(-3.95, -5.46, -0.50);  object(0x01BF, 80, 0, 350);
move(-15.29, 13.26, -0.30);  object(0x01BF, 90, 0, 37);
move(-0.51, 4.83, -0.20);  object(0x01BF, 90, 0, 272);
move(4.60, -0.18, -0.10);  object(0x01BF, 90, 0, 272);
move(0.99, -3.18, 0.00);  object(0x01BF, 90, 0, 233);
move(8.42, 0.60, 2.10);  object(0x01BF, 90, 0, 118);
move(-3.59, 0.44, -1.10);  object(0x01BF, 90, 0, 96);
move(-2.76, -6.57, -0.60);  object(0x01BF, 90, 0, 56);
move(4.48, -5.75, 0.00);  object(0x01BF, 90, 0, 68);
move(6.24, 8.56, 1.70);  object(0x01BF, 90, 0, 77);
move(-2.55, -4.98, -1.60);  object(0x01BF, 90, 0, 148);
move(-1.92, 2.77, 0.00);  object(0x01BF, 90, 0, 165);
move(3.85, -8.40, -5.17);  object(0x01BF, 90, 0, 131);
move(-3.96, 3.42, 0.00);  object(0x01BF, 90, 0, 134);
move(8.60, 2.03, 0.00);  object(0x01BF, 90, 0, 134);
move(-3.64, 3.00, 0.00);  object(0x01BF, 90, 0, 136);
move(4.52, 1.12, 2.50);  object(0x01BF, 0, 0, 38);
move(-10.94, -3.00, 0.00);  object(0x01BF, 0, 0, 312);
move(3.79, 4.02, 0.00);  object(0x01BF, 0, 0, 307);
move(0.45, 1.44, 0.00);  object(0x01BF, 0, 0, 7);
move(-7.14, -4.66, -15.30);  object(0x01BF, 90, 0, 290);
move(3.60, -3.87, -0.20);  object(0x01BF, 90, 0, 308);
move(-1.71, 8.03, 0.00);  object(0x01BF, 90, 0, 229);
move(3.91, -4.09, 0.00);  object(0x01BF, 90, 0, 225);
move(-0.44, -6.70, 2.10);  object(0x01BF, 0, 0, 140);
move(2.79, 4.19, 0.00);  object(0x01BF, 0, 0, 124);
move(-0.19, 5.35, 0.00);  object(0x01BF, 0, 0, 57);
move(-3.85, 4.17, 0.00);  object(0x01BF, 0, 0, 39);
move(0.60, -1.36, 3.20);  object(0x01BF, 90, 0, 55);
move(2.28, -3.87, 0.00);  object(0x01BF, 90, 0, 50);
move(-2.99, -5.45, 0.00);  object(0x01BF, 90, 0, 134);
move(-3.04, 6.42, 0.00);  object(0x01BF, 90, 0, 41);
move(-2.28, -2.66, 0.00);  object(0x01BF, 90, 0, 42);
teleport(-1155.64, 977.26, 83.03);

#cheat Cliff-Side House
//ID: 13322
//Score: 59
//Author: raigov222
//Category: Location Mods
//Description: Some people said i shouldent build my house on a cliff but screw them! I did it anyway! This house have every thing you could ever want! including all weapons, a hunter, and a great veiw of the light house! Take it! ITS FREAKIN SWEET!
//Image: none
//Time: 20/06/2006 03:17:27
//Working: Yes
//By Raigov
//ENJOY! =)
teleport(1421, -241, 49.85);
//Floor
moveto(1433, -257, 50); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, 6.7, 0.00); object(0x01BF, 90, 0, 180);
move(8, 0.00, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
move(0.00, -6.7, 0.00); object(0x01BF, 90, 0, 180);
//Door
moveto(1429.19, -237.29, 50.78);  object(0x01BF, 0, 0, 90);
move(-3.06, -6.12, -2.10);  object(0x01BF, 245, 0, 90);
//Gates
moveto(1428.86, -241.29, 53.91);  object(0x1003, 0, 180, 206);
move(-0.06, -4.30, 0.00);  object(0x1002, 0, 0, 156);
//Deck Stuff
moveto(1460.78, -259.39, 50.88);  object(0x01F1, 270, 0, 270);
move(0.02, 16.30, 0.00);  object(0x01F1, 270, 0, 270);
move(0.07, -6.90, -0.60);  object(0x01F0, 0, 0, 270);
move(-0.03, 2.90, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.16, 13.51, 0.00);  object(0x01F0, 0, 0, 180);
move(-4.40, -0.03, 0.00);  object(0x01F0, 0, 0, 180);
move(2.09, 0.08, 0.00);  object(0x01F0, 0, 0, 180);
move(-0.92, -26.64, 0.10);  object(0x01F0, 0, 0, 0);
move(-4.40, -0.00, 0.00);  object(0x01F0, 0, 0, 0);
move(2.30, -0.05, 0.00);  object(0x01F0, 0, 0, 0);
move(-1.90, 0.59, 0.00);  object(0x020F, 0, 0, 0);
move(7.00, 0.01, 0.00);  object(0x020F, 0, 0, 0);
move(-0.04, 25.49, 0.00);  object(0x020F, 0, 0, 247);
move(-7.00, 0.26, 0.00);  object(0x020F, 0, 0, 180);
move(7.19, -19.49, 0.00);  object(0x020F, 0, 0, 270);
move(-0.02, 6.50, 0.00);  object(0x020F, 0, 0, 270);
move(-0.03, 6.90, 0.00);  object(0x020F, 0, 0, 270);
move(-2.25, -16.24, 0.40);  object(0x025B, 0, 0, 223);
move(-0.25, 19.81, 0.00);  object(0x025B, 0, 0, 311);
move(-1.69, -13.03, -0.30);  object(0x0257, 0, 0, 165);
move(0.26, 5.20, 0.00);  object(0x0257, 0, 0, 195);
//Deck Stuff 2
moveto(1459.54, -240.85, 50.81);  object(0x0ECF, 0, 0, 270);
move(0.01, -0.80, 0.00);  object(0x0ECF, 0, 0, 270);
move(-0.00, -0.40, -0.40);  object(0x0ECB, 0, 270, 270);
move(-0.60, -0.01, 0.00);  object(0x0ECB, 0, 270, 270);
move(-0.02, 1.60, 0.00);  object(0x0ECB, 0, 270, 270);
move(0.59, 0.01, 0.00);  object(0x0ECB, 0, 270, 270);
move(-1.37, -0.32, 0.50);  object(0x0F03, 90, 0, 60);
move(0.95, -0.09, 0.00);  object(0x0F74, 90, 0, 55);
move(0.06, -0.70, 0.00);  object(0x0F75, 0, 0, 310);
move(-0.96, -0.08, 0.00);  object(0x0F76, 0, 0, 310);
//Chair
moveto(1456.97, -241.15, 50.16);  object(0x1004, 0, 0, 130);
//Weapons
moveto(1458.81, -252.19, 50.17);  object(0x0114, 270, 0, 284);
move(-0.54, 0.73, 0.00);  object(0x0116, 270, 0, 180);
move(0.25, 0.57, 0.00);  object(0x0119, 270, 0, 187);
move(0.83, -0.12, 0.00);  object(0x011F, 270, 0, 118);
move(0.41, 1.25, 0.00);  object(0x010D, 270, 0, 118);
move(-2.03, -2.16, 0.00);  object(0x011E, 270, 0, 72);
//ramp
moveto(1454.39, -243.57, 54.61);  object(0x0F25, 0, 0, 270);
//Roof
moveto(1433.01, -236.68, 54.50);  object(0x01BF, 270, 0, 180);
move(7.93, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(7.93, -0.01, 0.00);  object(0x01BF, 270, 0, 180);
move(7.83, -0.05, 0.00);  object(0x01BF, 270, 0, 180);
move(-0.01, -6.54, -0.02);  object(0x01BF, 270, 0, 180);
move(-7.94, 0.00, 0.00);  object(0x01BF, 270, 0, 180);
move(-7.83, 0.02, 0.00);  object(0x01BF, 270, 0, 180);
move(-7.83, -0.08, 0.00);  object(0x01BF, 270, 0, 180);
move(0.02, -6.67, 0.00);  object(0x01BF, 270, 0, 180);
move(7.92, 0.03, 0.00);  object(0x01BF, 270, 0, 180);
move(15.65, -0.02, 0.00);  object(0x01BF, 270, 0, 180);
move(-0.05, -6.74, 0.00);  object(0x01BF, 270, 0, 180);
move(-7.91, -0.12, 0.00);  object(0x01BF, 270, 0, 180);
move(-7.93, 0.15, 0.00);  object(0x01BF, 270, 0, 180);
move(-7.73, 0.08, 0.00);  object(0x01BF, 270, 0, 180);
//Stairs
moveto(1445.85, -247.79, 51.61);  object(0x0204, 270, 25, 180);
//Roof Rails
moveto(1430.14, -259.71, 55.14);  object(0x01F1, 270, 0, 0);
move(20.70, -0.16, 0.00);  object(0x01F1, 270, 0, 0);
move(-10.30, 0.08, 0.00);  object(0x01F1, 270, 0, 0);
move(-11.39, 9.60, 0.00);  object(0x01F1, 270, 0, 90);
move(-0.10, 15.70, 0.00);  object(0x01F1, 270, 0, 90);
move(0.05, -8.00, 0.00);  object(0x01F1, 270, 0, 90);
move(9.73, 9.04, 0.10);  object(0x01F1, 270, 0, 180);
move(20.79, -0.15, 0.00);  object(0x01F1, 270, 0, 180);
move(-10.50, -0.06, 0.00);  object(0x01F1, 270, 0, 180);
move(11.36, -9.60, 0.00);  object(0x01F1, 270, 0, 270);
move(0.04, -15.50, 0.00);  object(0x01F1, 270, 0, 270);
move(-0.02, 7.70, 0.00);  object(0x01F1, 270, 0, 270);
move(-0.59, -8.31, -0.30);  object(0x020F, 0, 0, 242);
move(0.31, 25.14, 0.00);  object(0x020F, 0, 0, 166);
move(-30.68, -25.00, 0.00);  object(0x020F, 0, 0, 103);
move(-0.05, 25.38, 0.00);  object(0x020F, 0, 0, 95);
move(23.32, -19.78, -0.10);  object(0x020F, 0, 0, 135);
move(-8.13, 0.07, 0.00);  object(0x020F, 0, 0, 237);
move(0.16, 6.99, 0.00);  object(0x020F, 0, 0, 315);
move(7.99, 0.01, 0.00);  object(0x020F, 0, 0, 49);
move(-7.12, 0.11, -0.20);  object(0x01EF, 0, 0, 0);
move(-0.82, -6.80, 0.00);  object(0x01EF, 0, 0, 270);
move(6.94, -0.33, 0.00);  object(0x01EF, 0, 0, 180);
//Trim
moveto(1429.33, -255.24, 48.11);  object(0x0204, 0, 0, 89);
move(-0.03, -6.66, -1.30);  object(0x0204, 270, 270, 0);
move(7.41, 0.03, 7.40);  object(0x0204, 270, 180, 0);
move(8.70, -0.06, 0.00);  object(0x0204, 270, 180, 0);
move(7.51, -0.81, -7.40);  object(0x0204, 270, 90, 0);
move(-3.10, -0.30, -13.80);  object(0x0204, 270, 115, 0);
move(-4.29, -1.09, 19.30);  object(0x0204, 180, 0, 0);
move(-8.80, -0.05, 0.00);  object(0x0204, 180, 0, 0);
move(0.00, 0.00, -4.10);  object(0x0204, 180, 0, 0);
move(8.90, 0.05, 0.00);  object(0x0204, 180, 0, 0);
//Patch
moveto(1452.66, -237.65, 50.98);  object(0x01BF, 0, 0, 270);
//Floor Interior
moveto(1449.19, -256.83, 52.17);  object(0x0F95, 0, 0, 0);
move(-7.10, -0.01, 0.00);  object(0x0F96, 0, 0, 0);
move(-9.50, -0.01, 0.00);  object(0x0F97, 0, 0, 0);
move(0.28, 19.77, 0.00);  object(0x0F98, 0, 0, 180);
move(7.20, 0.05, 0.00);  object(0x0F99, 0, 0, 180);
move(8.80, -0.13, 0.00);  object(0x0F9A, 0, 0, 270);
move(-3.51, -23.27, 0.00);  object(0x0204, 0, 0, 0);
move(-8.73, 0.19, 0.00);  object(0x0204, 0, 0, 0);
move(-7.44, 7.35, 0.00);  object(0x0204, 0, 0, 90);
move(7.37, 19.48, 0.00);  object(0x0204, 0, 0, 180);
move(8.92, -0.21, 0.00);  object(0x0204, 0, 0, 180);
move(7.41, -19.43, 0.00);  object(0x0204, 0, 0, 270);
move(-9.22, 15.57, -1.30);  object(0x01BF, 0, 0, 90);
move(1.50, -0.15, 0.00);  object(0x01BF, 0, 0, 90);
move(0.48, -19.45, -0.30);  object(0x01BF, 0, 0, 90);
move(-7.10, 0.00, 0.00);  object(0x01BF, 0, 0, 90);
move(-2.30, 0.00, 0.00);  object(0x01BF, 0, 0, 90);
move(0.29, 19.58, 0.24);  object(0x01BF, 0, 0, 90);
//Ineteior Xtras
moveto(1432.58, -253.09, 49.91);  object(0x0239, 0, 0, 0);
move(9.20, 0.01, 0.00);  object(0x0239, 0, 0, 0);
move(7.63, -0.01, 0.00);  object(0x0239, 0, 0, 180);
move(-1.05, 12.48, 0.00);  object(0x0239, 0, 0, 0);
move(-7.90, -0.06, 0.00);  object(0x0239, 0, 0, 180);
move(-7.20, -0.03, 0.00);  object(0x0239, 0, 0, 180);
move(1.92, -0.05, 1.21);  object(0x0D0A, 0, 0, 328);
move(7.07, -0.07, 0.00);  object(0x0D0A, 0, 0, 328);
move(4.26, 0.07, 0.00);  object(0x0D0A, 0, 0, 268);
move(4.80, -12.33, 0.00);  object(0x0D0A, 0, 0, 326);
move(-10.36, 1.34, 0.00);  object(0x0D0A, 0, 0, 332);
move(-11.60, 0.30, 0.00);  object(0x0D0A, 0, 0, 287);
//Heli Pad
moveto(1416.74, -270.95, 48.31);  object(0x01BF, 90, 0, 180);
move(7.90, -0.00, 0.00);  object(0x01BF, 90, 0, 180);
move(0.00, 6.79, 0.00);  object(0x01BF, 90, 0, 180);
move(-8.00, 0.00, 0.00);  object(0x01BF, 90, 0, 180);
move(8.00, -13.46, 0.00);  object(0x01BF, 90, 0, 180);
move(-8.00, 0.00, 0.00);  object(0x01BF, 90, 0, 180);
move(10.74, 0.56, -0.80);  object(0x01BF, 305, 0, 270);
move(-0.05, 12.40, 0.00);  object(0x01BF, 305, 0, 270);
move(0.02, -6.10, 0.00);  object(0x01BF, 305, 0, 270);
move(-2.77, -9.26, -0.40);  object(0x01BF, 40, 0, 180);
move(-7.87, 0.87, -0.20);  object(0x01BF, 40, 0, 180);
//weapon spawns
setfloat(0x08e2d800, 1431, -256, 55.70);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
setfloat(0x08E2E400, 1433, -256, 55.70);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x124);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, 1435, -256, 55.70);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
setfloat(0x08e2d8c0, 1437, -256, 55.70);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, 1439, -256, 55.70);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, 1441, -256, 55.70);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, 1443, -256, 55.70);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, 1445, -256, 55.70);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
setfloat(0x08e2daa0, 1447, -256, 55.70);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
setfloat(0x08e2db00, 1449, -256, 55.70);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
setfloat(0x08E2DB60, 1451, -256, 55.70);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
setfloat(0x08E2DBC0, 1453, -256, 55.70);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
setfloat(0x08E2DC20, 1455, -256, 55.70);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
setfloat(0x08E2DC80, 1457, -256, 55.70);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
setfloat(0x08E2DCE0, 1431, -236, 55.70);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x10f);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
setfloat(0x08E2DD40, 1433, -236, 55.70);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
setfloat(0x08E2DDA0, 1435, -236, 55.70);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
setfloat(0x08E2DE00, 1437, -236, 55.70);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
setfloat(0x08E2DE60, 1439, -236, 55.70);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
setfloat(0x08E2DEC0, 1441, -236, 55.70);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
setfloat(0x08E2DF20, 1443, -236, 55.70);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0xff, 0xff);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
setfloat(0x08E2DF80, 1445, -236, 55.70);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0xff, 0xff);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
setfloat(0x08E2DFE0, 1447, -236, 55.70);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0xff, 0xff);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
setfloat(0x08E2E040, 1449, -236, 55.70);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0xff, 0xff);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
setfloat(0x08E2E0A0, 1451, -236, 55.70);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
setfloat(0x08E2E100, 1453, -236, 55.70);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0xff, 0xff);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
setfloat(0x08E2E160, 1455, -236, 55.70);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
setfloat(0x08E2E1C0, 1457, -236, 55.70);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
setfloat(0x08E2E220, 1431, -242, 55.70);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0xff, 0xff);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
setfloat(0x08E2E280, 1431, -244, 55.70);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0xff, 0xff);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
setfloat(0x08E2E2E0, 1431, -246, 55.70);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0xff, 0xff);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
setfloat(0x08E2E340, 1431, -248, 55.70);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0xff, 0xff);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
setfloat(0x08E2E3A0, 1431, -250, 55.70);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0xff, 0xff);
setshort(0x08E2E3C6, 0x122);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
setfloat(0x08E2E460, 1431, -252, 55.70);
setint(0x08E2E474, 0);
setchar(0x08E2E47C, 0xff, 0xff);
setshort(0x08E2E486, 0x22e);
setchar(0x08E2E492, 0x0f);
setchar(0x08E2E493, 0x00);
setchar(0x08E2D4B0, 0xff);
setfloat(0x08E2E4C0, 1431, -254, 55.70);
setint(0x08E2E4D4, 0);
setchar(0x08E2E4DC, 0xff, 0xff);
setshort(0x08E2E4E6, 0x24b);
setchar(0x08E2E4F2, 0x0f);
setchar(0x08E2E4F3, 0x00);
setchar(0x08E2D510, 0xff);
//Spawn Cars
//Ultimate stunt pcj-600
setchar(0x945d482, 0x5);
setchar(0x945d481, 0x50);
setchar(0x945d480, 0x52);
setshort(0x9446c10, 255);
setfloat(0x9446c0c, 0.67);
setfloat(0x945d400, 500);
setfloat(0x945d408, 1.6);
setfloat(0x945d4c0, 0.15);
setfloat(0x945d4c4, -0.15999);
setfloat(0x945d4c8, 0.5);
setfloat(0x945d48c, 0.97867);
setfloat(0x945d490, 0.97867);
setfloat(0x945d484, 0.004);
setfloat(0x945d4a0, 0.5);
setfloat(0x945d4a4, 0);
setfloat(0x945d4a8, 35);
setfloat(0x945d4b8, 0.85);
setfloat(0x945d4bc, 0.15);
setfloat(0x945d4d4, 0);
setfloat(0x945d4cc, 0);
setfloat(0x945d420, 0);
setfloat(0x945d424, 0.05);
setfloat(0x945d428, -0.08999);
setchar(0x945d430, 103);
setfloat(0x945d4ac, 0.9);
setfloat(0x945d4b0, 0.48);
setfloat(0x945d40c, 0.6);
sethex(0x945d4d0, 0x02, 0x01, 0x01, 0x00);
sethex(0x944fb28, 0x6D, 0xFF, 0x00);
sethex(0x944fb2c, 0x77, 0xFF, 0x00);
setfloat(0x945d404, 850);
setint(0x8E38A38, 205);
sethex(0x8E38A5E, 0x01, 0x00);
//cheetah
setchar(0x08E4Eb78, 146);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 1402, -235, 50.80, 315);
//patriot
setchar(0x08E4E9EC, 137);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 1403, -240, 50.80, 315);
//infurnus
setchar(0x08E4E9c0, 142);
setchar(0x08E4E9c0 + 0x18, 0x01);
setfloat(0x08E4E9c4, 1403, -245, 50.80, 315);
//pcj 600
setchar(0x08E4Eba4, 205);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 1402, -250, 50.80, 315);
//hunter
setchar(08E4Ecd8, 213);
setchar(08E4Ecd8 + 0x18, 0x01);
setfloat(08E4Ecdc, 1420, -271, 50, 67);
off();

#cheat Penthouse
//ID: 13466
//Score: 49
//Author: barkee
//Category: Location Mods
//Description: Penthouse on the top of one of the few solid roofed buildings in staunton. Contains A Garage, Hovering weapon garden, balcony, 2 dtory house with observation deck upstairs and a wonderful view of the airport.
//
//www.ammunation.org
//Image: http://tom.psprus.com/penthouse.jpg
//Time: 21/06/2006 12:41:00
//Working: Yes
//By Ammunation.org
moveto(-922.83, 298.05, 36.12);  object(0x063E, 270, 0, 84);
move(0.60, -5.57, 0.00);  object(0x063E, 270, 0, 84);
move(-3.53, -0.38, 0.10);  object(0x063E, 270, 0, 84);
move(-0.59, 5.47, 0.00);  object(0x063E, 270, 0, 84);
move(23.46, 1.83, 0.20);  object(0x063F, 270, 0, 48);
move(3.77, -4.14, 0.00);  object(0x063F, 270, 0, 48);
move(-2.42, -2.21, 0.00);  object(0x063F, 270, 0, 48);
move(-3.77, 4.14, 0.00);  object(0x063F, 270, 0, 48);
move(13.85, 106.72, 8.60);  object(0x0640, 270, 0, 233);
move(-3.23, 4.33, 0.00);  object(0x0640, 270, 0, 233);
move(2.23, 1.67, 0.00);  object(0x0640, 270, 0, 233);
move(3.17, -4.25, 0.00);  object(0x0640, 270, 0, 233);
move(-371.91, -148.24, 23.80);  object(0x082B, 270, 0, 184);
move(1473.71, -1225.11, 46.54);  object(0x09F1, 240, 0, 99);
move(-4.64, -7.75, 4.70);  object(0x0239, 0, 0, 89);
move(-0.15, 7.42, 1.10);  object(0x01BF, 0, 0, 89);
move(4.28, -11.43, 0.60);  object(0x01BF, 0, 0, 180);
move(-0.22, 15.29, 0.00);  object(0x01BF, 0, 0, 178);
move(4.06, -3.86, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.03, -7.58, 0.00);  object(0x01BF, 0, 0, 90);
move(-3.96, -0.53, 2.80);  object(0x01BF, 90, 0, 180);
move(-0.08, 8.68, 0.00);  object(0x01BF, 90, 0, 180);
move(-0.05, 3.32, 2.70);  object(0x01BF, 0, 0, 180);
move(0.15, -15.25, 0.00);  object(0x01BF, 0, 0, 180);
move(3.93, 3.72, 0.00);  object(0x01BF, 0, 0, 270);
move(0.00, 7.53, 0.00);  object(0x01BF, 0, 0, 270);
move(-6.58, 0.75, -2.70);  object(0x0F36, 0, 0, 88);
move(-0.67, -3.16, 0.60);  object(0x1004, 0, 0, 35);
move(-0.98, 5.89, -0.50);  object(0x1004, 0, 0, 118);
move(0.36, -8.92, -4.60);  object(0x023A, 0, 0, 96);
move(-0.12, -3.21, 7.20);  object(0x0CDB, 0, 0, 90);
move(-0.16, 5.04, 0.00);  object(0x0CDB, 0, 0, 90);
move(-0.21, 5.05, 0.00);  object(0x0CDB, 0, 0, 90);
move(2.67, 1.77, -17.50);  object(0x0F01, 45, 0, 2);
move(9.23, -13.74, -0.20);  object(0x0F37, 90, 0, 2);
move(-11.52, -0.13, 20.60);  object(0x09F0, 0, 0, 270);
move(-0.00, 1.00, 0.00);  object(0x09F0, 0, 0, 270);
move(-0.00, 0.80, 0.00);  object(0x09F0, 0, 0, 270);
move(-0.00, 1.00, 0.00);  object(0x09F0, 0, 0, 270);
move(-0.00, 0.60, 0.00);  object(0x09F0, 0, 0, 270);
move(-0.00, 0.70, 0.00);  object(0x09F0, 0, 0, 270);
move(-0.00, 0.60, 0.00);  object(0x09F0, 0, 0, 270);
move(-0.00, 0.50, 0.00);  object(0x09F0, 0, 0, 270);
move(-0.00, 0.70, 0.00);  object(0x09F0, 0, 0, 270);
move(-0.00, 0.90, 0.00);  object(0x09F0, 0, 0, 270);
move(-0.00, 0.80, 0.00);  object(0x09F0, 0, 0, 270);
move(-0.00, 0.70, 0.00);  object(0x09F0, 0, 0, 270);
move(-0.00, 0.70, 0.00);  object(0x09F0, 0, 0, 270);
move(-0.00, 0.60, 0.00);  object(0x09F0, 0, 0, 270);
move(-0.00, 0.70, 0.00);  object(0x09F0, 0, 0, 270);
move(-0.00, 1.00, -0.10);  object(0x09F0, 0, 0, 270);
move(-0.00, 0.70, 0.00);  object(0x09F0, 0, 0, 270);
move(-0.00, 0.80, 0.00);  object(0x09F0, 0, 0, 270);
move(-0.00, 0.80, 0.00);  object(0x09F0, 0, 0, 270);
move(-0.00, 0.70, 0.00);  object(0x09F0, 0, 0, 270);
move(6.44, -3.60, 2.20);  object(0x01BF, 45, 0, 270);
move(0.00, -7.40, 0.00);  object(0x01BF, 45, 0, 270);
move(-4.52, -0.00, 0.20);  object(0x01BF, 315, 0, 270);
move(-0.00, 7.30, 0.00);  object(0x01BF, 315, 0, 270);
move(2.02, 3.97, -1.70);  object(0x0CDB, 0, 315, 355);
move(0.13, -15.18, 0.10);  object(0x0CDB, 0, 315, 180);
move(-0.00, -7.43, -14.30);  object(0x0215, 0, 315, 180);
move(0.00, 5.76, 4.70);  object(0x0CD1, 0, 0, 180);
move(3.95, 0.96, -0.40);  object(0x0220, 0, 0, 357);
move(3.21, -4.05, -7.30);  object(0x084C, 0, 0, 357);
move(13.23, 11.60, 6.60);  object(0x0FAA, 0, 0, 180);
move(-5.44, 0.30, 0.80);  object(0x01EA, 0, 0, 90);
move(-7.84, 4.33, -19.00);  object(0x0104, 0, 0, 337);
move(1.95, -20.38, 19.40);  object(0x010A, 0, 0, 92);
move(-1.29, -0.17, 0.40);  object(0x010F, 0, 0, 92);
move(-1.19, -0.16, 0.00);  object(0x0110, 0, 0, 92);
move(-1.09, -0.15, 0.00);  object(0x0113, 0, 0, 92);
move(0.31, -2.29, 0.00);  object(0x0116, 0, 0, 92);
move(1.09, 0.15, 0.00);  object(0x011C, 0, 0, 92);
move(1.19, 0.16, 0.00);  object(0x011E, 0, 0, 92);
move(0.89, 0.12, 0.00);  object(0x011F, 0, 0, 92);
move(0.26, -2.29, 0.00);  object(0x0121, 0, 0, 92);
move(-1.44, 0.88, 0.00);  object(0x011B, 0, 0, 92);
move(-1.10, -0.10, 0.00);  object(0x0114, 0, 0, 92);
move(-0.89, -0.13, 0.00);  object(0x0104, 0, 0, 92);
move(-0.89, -0.13, 0.00);  object(0x0105, 0, 0, 92);
move(-1.03, 0.84, 0.00);  object(0x0106, 0, 0, 92);
move(-0.79, -0.12, 0.00);  object(0x0124, 0, 0, 92);
move(4.13, 4.82, -0.40);  object(0x01F3, 0, 0, 180);
move(-0.75, -4.88, -1.30);  object(0x01BF, 270, 0, 180);
move(2.56, 0.01, 0.00);  object(0x01BF, 270, 0, 180);
move(-1.37, -3.42, 1.30);  object(0x01F3, 0, 0, 0);
move(-4.84, 0.90, -1.20);  object(0x01F0, 0, 0, 270);
move(9.99, 0.18, -0.10);  object(0x01F0, 0, 0, 270);
move(-1.64, 9.51, 0.00);  object(0x0272, 0, 0, 270);
teleport(232.74, -959.80, 120.95);

#cheat Base 1 Improved and Working! Now with weapon pickups!
//ID: 6283
//Score: 47
//Author: marcus-aspin
//Category: Location Mods
//Description: A really helpful base with a mummy firing range, a sniper vantage point, exploding barrells, weapon pickups, armor pickups, health pickups and loads of other cool stuff just round the corner from your staunton safehouse
//Image: http://p4.piczo.com/img/i65481283_44421_4.gif
//Time: 11/04/2006 00:15:36
//Working: Yes
//Green Wall + Green Wall with door
moveto(163.18,-390.78,22.29);  object(0x01BF,0,0,11);
move(-7.35,0.75,-3.00);  object(0x0239,0,0,0);
move(-6.96,0.67,2.10);  object(0x01BF,0,0,9);
//Blue Garage Door
move(27.87,26.57,-5.10);  object(0x0211,300,0,87);
move(-13.47,3.84,-5.80);  object(0x0211,300,0,332);
move(10.14,-4.07,7.53);  object(0x0211,300,0,86);
move(-2.60,-0.17,1.50);  object(0x0211,300,0,86);
move(-3.72,-0.31,1.70);  object(0x0211,300,0,87);
move(-2.20,-0.14,1.40);  object(0x0211,300,0,87);
move(-3.50,-0.39,2.00);  object(0x0211,300,0,86);
move(-3.98,-0.39,2.30);  object(0x0211,300,0,87);
move(-6.65,2.40,1.30);  object(0x0211,270,0,358);
move(0.56,-4.60,0.00);  object(0x0211,270,0,358);
//Red metal garage door
move(-2.02,-22.65,-1.51);  object(0x01B7,0,0,98);
move(16.09,-2.24,0.80);  object(0x01B7,0,0,101);
//Grey metal garage door
move(-4.78,1.32,-1.70);  object(0x01A8,0,0,104);
//Mummys
move(-2.94,35.28,-8.90);  object(0x0251,0,0,197);
move(1.69,-0.22,0.00);  object(0x0251,0,0,197);
move(1.59,-0.21,0.00);  object(0x0251,0,0,197);
move(1.59,-0.21,0.00);  object(0x0251,0,0,197);
move(1.59,-0.21,0.00);  object(0x0251,0,0,197);
move(-11.47,-42.17,-5.51);  object(0x0251,0,0,46);
move(-0.97,-15.40,9.10);  object(0x0251,0,0,9);
move(1.84,10.13,-8.00);  object(0x0251,0,0,225);
//Breakable Glass
move(1.78,14.94,14.40);  object(0x0CDB,0,90,6);
move(5.50,0.39,-20.20);  object(0x0CDB,0,90,12);
move(-5.40,-2.37,19.70);  object(0x0CDB,0,90,180);
//Benches
move(-5.04,24.95,-8.15);  object(0x0257,355,0,186);
move(-0.10,4.09,-0.30);  object(0x0257,355,0,179);
move(2.25,-0.11,11.00);  object(0x025B,355,0,178);
//Trees
move(17.61,-68.88,-7.50);  object(0x026C,355,0,59);
move(-16.53,81.80,-5.06);  object(0x026C,0,0,243);
move(-2.48,-0.30,0.00);  object(0x026C,0,0,243);
move(-2.82,-0.53,0.10);  object(0x026C,0,0,243);
//Dead People
moveto(152.44,-354.85,17.60);  object(0x09F9,350,0,271);
move(18.80,-0.66,-1.40);  object(0x09F9,350,355,40);
//Burnt Out Car
moveto(165.51,-385.35,17.40);  object(0x0DB6,325,0,180);
//Barrels
moveto(146.56,-383.70,18.50);  object(0x021C,0,0,257);
move(0.00,1.50,0.00);  object(0x021C,0,0,257);
move(0.00,1.50,0.00);  object(0x021C,0,0,257);
move(0.00,1.50,0.00);  object(0x021C,0,0,257);
move(0.00,1.50,0.00);  object(0x021C,0,0,257);
move(0.00,1.50,0.00);  object(0x021C,0,0,257);
move(0.00,1.50,0.00);  object(0x021C,0,0,257);
move(0.00,1.50,0.00);  object(0x021C,0,0,257);
move(0.00,1.50,0.00);  object(0x021C,0,0,257);
move(1.50,0.00,0.00);  object(0x021C,0,0,257);
move(1.50,0.00,0.00);  object(0x021C,0,0,257);
move(1.50,0.00,0.00);  object(0x021C,0,0,257);
move(1.50,0.00,0.00);  object(0x021C,0,0,257);
move(0.00,0.00,1.00);  object(0x021C,0,0,257);
move(0.00,0.00,1.00);  object(0x021C,0,0,257);
move(0.00,0.00,1.00);  object(0x021C,0,0,257);
move(0.00,0.00,1.00);  object(0x021C,0,0,257);
move(0.00,0.00,1.00);  object(0x021C,0,0,257);
move(0.00,0.00,1.00);  object(0x021C,0,0,257);
move(0.00,0.00,0.00);  object(0x021C,0,0,257);
move(0.00,0.00,0.00);  object(0x021C,0,0,257);
move(0.00,0.00,0.00);  object(0x021C,0,0,257);
move(0.00,0.00,0.00);  object(0x021C,0,0,257);
move(0.00,0.00,0.00);  object(0x021C,0,0,257);
move(0.00,0.00,0.00);  object(0x021C,0,0,257);
move(0.00,0.00,0.00);  object(0x021C,0,0,257);
move(0.00,0.00,0.00);  object(0x021C,0,0,257);
move(0.00,0.00,0.00);  object(0x021C,0,0,257);
move(0.00,0.00,0.00);  object(0x021C,0,0,257);
move(0.00,0.00,0.00);  object(0x021C,0,0,257);
move(0.00,0.00,0.00);  object(0x021C,0,0,257);
move(0.00,0.00,0.00);  object(0x021C,0,0,257);
move(0.00,0.00,0.00);  object(0x021C,0,0,257);
move(0.00,0.00,0.00);  object(0x021C,0,0,257);
move(0.00,0.00,0.00);  object(0x021C,0,0,257);
move(0.00,0.00,0.00);  object(0x021C,0,0,257);
move(0.00,0.00,0.00);  object(0x021C,0,0,257);
move(0.00,0.00,0.00);  object(0x021C,0,0,257);
move(0.00,0.00,0.00);  object(0x021C,0,0,257);
move(0.00,0.00,0.00);  object(0x021C,0,0,257);
move(0.00,0.00,0.00);  object(0x021C,0,0,257);
move(0.00,0.00,0.00);  object(0x021C,0,0,257);
move(0.00,0.00,0.00);  object(0x021C,0,0,257);
move(0.00,0.00,0.00);  object(0x021C,0,0,257);
//Katana Sword
setfloat(0x08e2db00,165.29, -368.40, 16.39);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10c);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
//AK-47
setfloat(0x08e2d860,165.29, -370.19, 16.39);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x114)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//Rocket Launcher
setfloat(0x08e2daa0,165.29, -372.19, 16.39);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x11f);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
//HandGrenade
setfloat(0x08e2d920,165.29, -374.19, 16.39);
setint(0x08e2d934, 0);
setchar(0x08E2D93C, 0xff, 0xff)
setshort(0x08e2d946, 0x10e)
setchar(0x08e2d952, 0x0f)
setchar(0x08e2d953, 0x00)
setchar(0x08e2d970, 0xff)
//Uzi
setfloat(0x08e2d980,165.29, -376.19, 16.39);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x119);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
//Revolver
setfloat(0x08e2d9e0,165.29, -378.19, 16.39);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x113);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
//Saen-Off Shotgun
setfloat(0x08e2da40,165.29, -380.19, 16.39);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x117);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
//M-60
setfloat(0x08e2d800,165.29, -382.19, 16.39);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x121)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Teleport When Wasted/Busted
setfloat(08e55490, 160, -385, 25)
setfloat(08e554a0, 160, -385, 25)
setfloat(08e554b0, 160, -385, 25)
setfloat(08e55530,160, -385, 25)
setfloat(08e55540,160, -385, 25)
setfloat(08e55550,160, -385, 25)
//Teleport
teleport(160, -385, 25);
//Infernus Outside (Sometimes Doesnt Work)
setchar(0x08E4E9C0, 142);
setfloat(0x08E4E9C4, 160, -400, 20.00);
// 
//Created by Marcus-Aspin
//edited by marcus-aspin on 15/04/2006 15:26:07

#cheat Military Airport Base (EngPSP)
//ID: 8957
//Score: 476
//Author: EngPSP
//Category: Location Mods
//Description: A Military Base which spawns the Hunter and lots of weapons
//Image: none
//Time: 29/04/2006 16:22:53
//Working: Yes
moveto(-1572.51, -883.83, 11.02);  object(0x01BF, 0, 0, 91);
move(-0.07, -50.41, 0.00);  object(0x01BF, 0, 0, 91);
move(-0.19, -7.60, 0.00);  object(0x01BF, 0, 0, 91);
move(24.19, -8.86, 0.30);  object(0x01BF, 0, 0, 358);
move(-7.90, -0.24, 0.00);  object(0x01BF, 0, 0, 358);
move(-12.10, -0.37, 0.00);  object(0x01BF, 0, 0, 358);
move(-4.16, 3.52, -0.20);  object(0x01BF, 0, 0, 89);
move(29.32, -2.73, 5.40);  object(0x01BF, 0, 0, 358);
move(-7.00, -0.26, 0.00);  object(0x01BF, 0, 0, 358);
move(-6.10, -0.23, 0.00);  object(0x01BF, 0, 0, 358);
move(-5.70, -0.21, 0.00);  object(0x01BF, 0, 0, 358);
move(-6.60, -0.25, 0.00);  object(0x01BF, 0, 0, 358);
move(-3.93, 3.59, 0.00);  object(0x01BF, 0, 0, 89);
move(-0.14, 7.90, 0.00);  object(0x01BF, 0, 0, 89);
move(0.22, 7.28, 0.00);  object(0x01BF, 0, 0, 91);
move(0.12, 7.57, 0.00);  object(0x01BF, 0, 0, 90);
move(0.01, 7.80, 0.00);  object(0x01BF, 0, 0, 90);
move(0.05, 7.50, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.04, 7.80, 0.00);  object(0x01BF, 0, 0, 90);
move(0.13, 13.80, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.02, 4.30, 0.00);  object(0x01BF, 0, 0, 90);
move(32.78, -62.16, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.05, 6.90, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.04, 5.10, 0.00);  object(0x01BF, 0, 0, 270);
move(1.45, 7.52, 0.00);  object(0x01BF, 0, 0, 290);
move(1.37, 7.72, 0.00);  object(0x01BF, 0, 0, 272);
move(0.07, 7.30, 0.00);  object(0x01BF, 0, 0, 269);
move(-0.16, 7.80, 0.00);  object(0x01BF, 0, 0, 269);
move(-0.14, 6.90, 0.00);  object(0x01BF, 0, 0, 269);
move(-0.10, 4.70, 0.00);  object(0x01BF, 0, 0, 269);
move(-0.16, 7.80, 0.00);  object(0x01BF, 0, 0, 269);
move(0.00, 0.00, -3.90);  object(0x01BF, 0, 0, 269);
move(-29.17, 4.54, 3.80);  object(0x01BF, 0, 0, 1);
move(7.20, -0.08, 0.00);  object(0x01BF, 0, 0, 1);
move(7.60, -0.08, 0.00);  object(0x01BF, 0, 0, 1);
move(5.50, -0.06, 0.00);  object(0x01BF, 0, 0, 1);
move(-22.97, -67.51, 3.30);  object(0x01BF, 270, 0, 270);
move(-0.03, 7.50, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.03, 8.00, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.03, 7.80, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.03, 7.60, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.03, 7.70, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.02, 6.80, 0.00);  object(0x01BF, 270, 0, 270);
move(0.12, 7.60, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.03, 7.70, 0.00);  object(0x01BF, 270, 0, 270);
move(0.80, 3.84, 0.00);  object(0x01BF, 270, 0, 359);
move(7.81, 0.14, 0.00);  object(0x01BF, 270, 0, 0);
move(7.70, -0.04, 0.00);  object(0x01BF, 270, 0, 0);
move(6.70, -0.03, 0.00);  object(0x01BF, 270, 0, 0);
move(4.90, -0.02, 0.00);  object(0x01BF, 270, 0, 0);
move(0.88, -7.04, 0.00);  object(0x01BF, 270, 0, 89);
move(0.20, -7.90, 0.00);  object(0x01BF, 270, 0, 89);
move(0.20, -7.70, 0.00);  object(0x01BF, 270, 0, 89);
move(0.20, -7.80, 0.00);  object(0x01BF, 270, 0, 89);
move(0.15, -5.80, 0.00);  object(0x01BF, 270, 0, 89);
move(-1.34, -5.98, 0.00);  object(0x01BF, 270, 0, 110);
move(-1.28, -6.37, 0.00);  object(0x01BF, 270, 0, 89);
move(0.15, -7.30, 0.00);  object(0x01BF, 270, 0, 89);
move(0.16, -7.70, 0.00);  object(0x01BF, 270, 0, 89);
move(-7.01, -1.00, 0.00);  object(0x01BF, 270, 0, 178);
move(-7.40, -0.21, 0.00);  object(0x01BF, 270, 0, 178);
move(-7.10, -0.20, 0.00);  object(0x01BF, 270, 0, 178);
move(-4.89, 68.08, -3.60);  object(0x01BF, 0, 0, 180);
move(27.00, 0.02, 0.20);  object(0x01BF, 0, 0, 180);
move(-7.70, -61.53, 3.40);  object(0x01BF, 270, 0, 179);
move(-7.70, -0.08, 0.00);  object(0x01BF, 270, 0, 179);
move(-6.90, -0.07, 0.00);  object(0x01BF, 270, 0, 179);
move(-0.07, 6.45, 0.00);  object(0x01BF, 270, 0, 179);
move(6.90, 0.07, 0.00);  object(0x01BF, 270, 0, 179);
move(7.70, 0.08, 0.00);  object(0x01BF, 270, 0, 179);
setchar(0x08E4E9C0, 213);
setfloat(0x08E4E9C4, -1554.13, -909.26, 14.52);
setfloat(0x08E4E9D0, 37);
setfloat(0x08e2d8c0, -1570, -932, 11.11);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x114);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, -1568, -932, 11.11);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x116);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, -1566, -932, 11.11);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x11E);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, -1564, -932, 11.11);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x11B);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, -1562, -932, 11.11);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x10E );
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
setfloat(0x08e2daa0, -1560, -932.65, 11.11);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x109);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
setfloat(0x08e2db00, -1558, -932, 11.11);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x11F);
setchar(0x08e2db32, 0x0F);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
setfloat(0x08E2DB60, -1556, -932, 11.11);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xFF, 0xFF);
setshort(0x08E2DB86, 0x121);
setchar(0x08E2DB92, 0x0F);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xFF);
setfloat(0x08E2DBC0, -1554, -932, 11.11);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xFF, 0xFF);
setshort(0x08E2DBE6, 0x22E);
setchar(0x08E2DBF2, 0x0F);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xFF);
teleport( -1573, -957, 10.84);

#cheat MY CAR TRAP WITH EXPLOSIVES!!
//ID: 10558
//Score: 34
//Author: lilfrk12006
//Category: Location Mods
//Description: I CALL IT A CAR TRAP ITS A REALLY NICE PLACE JUST TO KILL PPL ITS FUN IT HAS A NICE PLACE TO THROUGH GERNADES OFF OF AND EXPLOZIVES IT HAS  WEAPON SPAWNS AND A TELE
//Image: none
//Time: 15/05/2006 21:36:29
//Working: Yes
//by:lilfrk12006
moveto(1370.98, -275.22, 48.37);  object(0x01A8, 0, 0, 13);
move(1.89, 31.64, 6.10);  object(0x01A8, 0, 270, 253);
move(-2.77, -0.92, 0.10);  object(0x01A8, 0, 270, 253);
move(-2.67, -0.80, -0.10);  object(0x01A8, 0, 270, 253);
move(0.00, 0.00, 0.00);  object(0x01A8, 0, 270, 253);
move(1.13, -11.36, -3.10);  object(0x01B7, 0, 355, 343);
move(1.58, -6.05, 0.00);  object(0x01B7, 0, 355, 348);
move(6.68, 0.58, 0.00);  object(0x01B7, 0, 355, 169);
move(-1.23, 6.31, 0.00);  object(0x01B7, 0, 355, 169);
move(-1.72, -0.17, 2.10);  object(0x01B7, 0, 270, 169);
move(1.36, -6.39, 0.00);  object(0x01B7, 0, 270, 171);
move(-3.31, -0.41, 0.00);  object(0x01B7, 0, 270, 348);
move(-1.49, 6.19, 0.00);  object(0x01B7, 0, 270, 348);
move(-4.63, -1.86, -2.60);  object(0x01B7, 0, 0, 73);
move(-6.70, -2.25, 0.00);  object(0x01B7, 0, 0, 71);
move(19.20, 5.32, 0.00);  object(0x01B7, 0, 0, 252);
move(2.69, 0.40, 0.00);  object(0x01B7, 0, 0, 252);
move(-0.07, 15.34, -1.00);  object(0x01B7, 0, 315, 333);
move(2.02, 0.32, 0.30);  object(0x01B7, 0, 320, 333);
move(-2.23, -0.90, 2.90);  object(0x01B7, 0, 320, 333);
move(-3.04, -1.36, 1.60);  object(0x01B7, 0, 270, 333);
move(-3.61, -1.74, 0.00);  object(0x01B7, 0, 270, 333);
move(-3.47, -1.80, 0.00);  object(0x01B7, 0, 270, 333);
move(-3.01, 5.98, 0.00);  object(0x01B7, 0, 270, 333);
move(3.52, 1.71, 0.00);  object(0x01B7, 0, 270, 333);
move(3.26, 1.63, 0.00);  object(0x01B7, 0, 270, 333);
move(-11.81, -11.76, -4.30);  object(0x01E4, 0, 0, 162);
move(8.50, 2.77, 0.00);  object(0x01E4, 0, 0, 162);
move(3.32, 1.40, 0.00);  object(0x01E4, 0, 0, 162);
move(-20.07, -6.66, 0.00);  object(0x01E4, 0, 0, 167);
move(-8.18, -2.20, 0.00);  object(0x01E4, 0, 0, 163);
move(-7.26, -4.03, 0.00);  object(0x01E4, 0, 0, 138);
move(-1.85, -1.95, 0.00);  object(0x01E4, 0, 0, 135);
move(31.00, 16.35, 4.40);  object(0x01F0, 0, 0, 68);
move(1.28, -3.16, 0.00);  object(0x01F0, 0, 0, 68);
move(3.92, -2.03, 0.00);  object(0x01F0, 0, 0, 153);
move(3.19, 1.51, 0.00);  object(0x01F0, 0, 0, 153);
move(3.39, 1.68, 0.00);  object(0x01F0, 0, 0, 153);
move(-11.04, 7.98, 0.00);  object(0x01F0, 0, 0, 153);
move(2.95, 1.64, 0.00);  object(0x01F0, 0, 0, 153);
move(3.08, 1.48, 0.00);  object(0x01F0, 0, 0, 153);
move(0.36, -0.62, 0.00);  object(0x01F0, 0, 0, 63);
move(1.40, -2.81, 0.00);  object(0x01F0, 0, 0, 63);
move(-10.16, -2.73, 0.00);  object(0x01F0, 0, 0, 63);
move(0.36, 2.41, 0.00);  object(0x01F0, 0, 0, 83);
move(0.79, -14.96, -2.20);  object(0x021C, 0, 0, 339);
move(-0.51, -0.31, 0.00);  object(0x021C, 0, 0, 339);
move(9.29, 0.61, 0.00);  object(0x021C, 0, 0, 40);
move(0.00, 0.00, -1.40);  object(0x021C, 0, 0, 40);
move(-0.70, 0.40, 0.00);  object(0x021C, 0, 0, 40);
move(-2.05, -5.78, 0.00);  object(0x021C, 0, 0, 13);
move(1.40, -1.34, 0.00);  object(0x021C, 0, 0, 356);
move(-1.24, 4.99, 0.00);  object(0x021C, 0, 0, 356);
move(0.39, -1.59, 0.00);  object(0x021C, 0, 0, 356);
move(2.40, -9.66, 0.00);  object(0x021C, 0, 0, 356);
move(-4.23, 0.87, 0.00);  object(0x021C, 0, 0, 47);
move(-1.71, 2.38, 0.00);  object(0x021C, 0, 0, 81);
move(0.12, 4.60, 0.00);  object(0x021C, 0, 0, 133);
move(-3.11, 3.88, 0.50);  object(0x021C, 0, 0, 83);
move(0.00, 0.00, -1.00);  object(0x021C, 0, 0, 83);
move(-0.47, 1.53, 0.80);  object(0x021C, 0, 0, 83);
move(0.00, 0.00, -1.80);  object(0x021C, 0, 0, 83);
moveto(280.16, -471.97, 26.09);  object(0x021C, 0, 0, 56);
move(0.38, -0.66, 0.00);  object(0x021C, 0, 0, 65);
move(0.24, -0.61, 0.00);  object(0x021C, 0, 0, 72);
move(0.15, -0.60, 0.00);  object(0x021C, 0, 0, 79);
move(0.08, -0.70, 0.00);  object(0x021C, 0, 0, 87);
move(-0.02, -0.70, 0.00);  object(0x021C, 0, 0, 95);
move(-0.11, -0.69, 0.00);  object(0x021C, 0, 0, 103);
move(-0.20, -0.64, 0.00);  object(0x021C, 0, 0, 111);
move(-0.24, -0.54, 0.00);  object(0x021C, 0, 0, 118);
move(-0.39, -0.63, 0.00);  object(0x021C, 0, 0, 126);
move(-0.44, -0.53, 0.00);  object(0x021C, 0, 0, 134);
move(0.52, 3.17, 0.00);  object(0x021C, 0, 0, 97);
move(-1.81, 0.22, 0.00);  object(0x021C, 0, 0, 97);
move(-1.02, 0.12, 0.00);  object(0x021C, 0, 0, 97);
move(-1.30, -1.30, 0.00);  object(0x021C, 0, 0, 117);
move(-1.78, 0.92, 0.00);  object(0x021C, 0, 0, 117);
move(-1.53, 0.79, 0.00);  object(0x021C, 0, 0, 117);
move(4.73, -2.45, 0.00);  object(0x021C, 0, 0, 117);
move(11.08, 8.52, -0.10);  object(0x021C, 85, 130, 196);
move(0.09, 0.90, 0.00);  object(0x021C, 85, 130, 196);
move(0.07, 0.70, 0.00);  object(0x021C, 85, 130, 196);
move(0.05, 0.50, 0.00);  object(0x021C, 85, 130, 196);
move(0.06, 0.60, 0.00);  object(0x021C, 85, 130, 196);
move(0.07, 0.70, 0.00);  object(0x021C, 85, 130, 196);
move(0.08, 0.80, 0.00);  object(0x021C, 85, 130, 196);
move(-0.49, -4.67, 0.00);  object(0x021C, 85, 130, 196);
move(-0.07, -0.70, 0.00);  object(0x021C, 85, 130, 196);
move(-0.13, -1.19, 0.00);  object(0x021C, 85, 130, 196);
move(-0.08, -0.80, 0.00);  object(0x021C, 85, 130, 196);
move(-0.10, -0.99, 0.00);  object(0x021C, 85, 130, 196);
move(-0.10, -0.99, 0.00);  object(0x021C, 85, 130, 211);
move(-1.15, -0.48, 0.00);  object(0x021C, 85, 130, 211);
move(-2.11, -0.39, 0.20);  object(0x021C, 85, 130, 267);
move(-1.05, 0.04, 0.00);  object(0x021C, 85, 130, 267);
move(-2.59, 0.11, 0.00);  object(0x021C, 85, 130, 267);
move(4.32, -0.18, 0.00);  object(0x021C, 85, 130, 267);
move(0.91, -0.04, 0.00);  object(0x021C, 85, 130, 267);
setfloat(0x08e2d800, 1368.64, -238.14, 55.97);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x9999, 0x9999);
setshort(0x08e2d826, 0x123);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, 1368.64, -239.29, 55.97);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x9999, 0x9999);
setshort(0x08e2d826, 0x11F);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, 1368.87, -240.43, 55.97);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x9999, 0x9999);
setshort(0x08e2d826, 0x121);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, 1369.39, -241.43, 55.97);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x9999, 0x9999);
setshort(0x08e2d826, 0x11D);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, 1369.52, -243.09, 55.97);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x9999, 0x9999);
setshort(0x08e2d826, 0x10F);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08e2d800, 1369.64, -244.37, 55.97);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x9999, 0x9999);
setshort(0x08e2d826, 0x110);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
teleport(1372.37, -240.77, 55.97);

#cheat Ultimate Car showroom
//ID: 11409
//Score: 195
//Author: vettefan88
//Category: Location Mods
//Description: The ultimate car showroom in staunton.
//it's 3 floors, Featuring 19 vehicles, all weapon spawns, and pmg'd cars built into it.
//(be sure to get the teleport off of cheatsync)
//
//now removes the annoying front gate a relocates the weapons and some cars
//Image: http://img231.imageshack.us/img231/736/screen146gz.png
//Time: 25/05/2006 20:47:12
//Working: Yes
moveto(34.17, -372.69, 23.13);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(6.60, -9.85, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(0.06, -7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(0.06, -7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(6.14, 0.04, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(-6.07, 7.76, 0.00);  object(0x01BF, 90, 0, 270);
move(11.99, -7.72, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.50, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(0.06, -7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(0.06, -7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(-5.78, 54.22, -0.90);  object(0x01BF, 75, 0, 270);
move(5.23, 0.05, -1.40);  object(0x01BF, 75, 0, 270);
move(5.97, 0.06, -1.60);  object(0x01BF, 75, 0, 270);
move(5.97, 0.06, -1.60);  object(0x01BF, 75, 0, 270);
move(4.88, -0.03, -1.30);  object(0x01BF, 75, 0, 270);
move(5.23, 0.05, -1.40);  object(0x01BF, 75, 0, 270);
move(-18.50, -6.52, 10.60);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.01, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(-3.90, 2.89, 2.44);  object(0x01BF, 90, 0, 180);
move(-7.80, -0.01, 0.00);  object(0x01BF, 90, 0, 180);
move(-7.80, -0.01, 0.00);  object(0x01BF, 90, 0, 180);
move(-4.10, -0.00, 0.00);  object(0x01BF, 90, 0, 180);
move(7.59, 6.43, 0.00);  object(0x01BF, 90, 0, 180);
move(7.80, 0.01, 0.00);  object(0x01BF, 90, 0, 180);
move(4.40, 0.00, 0.00);  object(0x01BF, 90, 0, 180);
move(-19.30, -0.02, 0.00);  object(0x01BF, 90, 0, 180);
move(26.90, 0.02, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, -6.48, 0.00);  object(0x01BF, 90, 0, 180);
move(6.60, -0.05, 0.00);  object(0x01BF, 90, 0, 180);
move(0.05, 6.51, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.16, 0.00);  object(0x01BF, 90, 0, 180);
move(-6.70, 0.05, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.31, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.33, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.17, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.41, 0.00);  object(0x01BF, 90, 0, 180);
move(0.03, 4.81, 0.00);  object(0x01BF, 90, 0, 180);
move(0.03, 3.62, 0.00);  object(0x01BF, 90, 0, 180);
move(6.51, -27.53, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.36, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.27, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 6.32, 0.00);  object(0x01BF, 90, 0, 180);
move(0.04, 5.83, 0.00);  object(0x01BF, 90, 0, 180);
move(0.02, 2.74, 0.00);  object(0x01BF, 90, 0, 180);
move(7.36, -5.50, 0.00);  object(0x01BF, 90, 0, 180);
move(7.80, -0.05, 0.00);  object(0x01BF, 90, 0, 180);
move(6.10, -0.04, 0.00);  object(0x01BF, 90, 0, 180);
move(-13.56, 5.52, 0.00);  object(0x01BF, 90, 0, 180);
move(7.30, -0.05, 0.00);  object(0x01BF, 90, 0, 180);
move(6.20, -0.04, 0.00);  object(0x01BF, 90, 0, 180);
move(1.42, 3.31, 2.50);  object(0x0CDB, 180, 0, 180);
move(-5.00, 0.04, 0.00);  object(0x0CDB, 180, 0, 180);
move(-5.00, 0.04, 0.00);  object(0x0CDB, 180, 0, 180);
move(-5.00, 0.04, 0.00);  object(0x0CDB, 180, 0, 180);
move(-5.00, 0.04, 0.00);  object(0x0CDB, 180, 0, 180);
move(-4.90, 0.03, 0.00);  object(0x0CDB, 180, 0, 180);
move(-5.00, 0.04, 0.00);  object(0x0CDB, 180, 0, 180);
move(-2.68, -0.00, -2.20);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.40, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.40, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.40, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.40, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01F0, 0, 0, 90);
move(-1.32, -3.35, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.40, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.40, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.30, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.30, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.40, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(-6.39, 3.78, -1.00);  object(0x01BF, 90, 10, 270);
move(-0.02, 7.30, -1.30);  object(0x01BF, 90, 10, 270);
move(-0.05, 7.37, -1.30);  object(0x01BF, 90, 10, 270);
move(-0.02, 4.10, -0.80);  object(0x01BF, 90, 10, 272);
move(23.45, 17.31, -0.40);  object(0x01F0, 0, 0, 180);
move(-3.30, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.40, 0.02, 0.00);  object(0x01F0, 0, 0, 180);
move(42.75, -2.63, 6.98);  object(0x0CDB, 0, 0, 270);
move(0.06, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
move(0.06, -5.00, 0.00);  object(0x0CDB, 0, 0, 270);
//row of lights on third floor
moveto(56.48, -324.82, 28.51);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
move(0.00, -1.30, 0.00);  object(0x020F, 0, 0, 90);
//remove the Front Gate
setfloat(0x09997788, -100);
//pimped cars
//monster hummer- Patriot
setshort(0x992FC5A, 0x20, 0x48, 0x75, 0x6d, 0x6d, 0x65, 0x72);
setchar(0x9459d32, 0x5);
setchar(0x9459d31, 0x50);
setchar(0x9459d30, 0x34);
setshort(0x94401d0, 250);
setfloat(0x94401cc, 1.6);
setfloat(0x9459cb0, 2500);
setfloat(0x9459cb8, 0.75);
setfloat(0x9459d70, 0.35);
setfloat(0x9459d74, -.7);
setfloat(0x9459d78, 0.5);
setfloat(0x9459d3c, 1);
setfloat(0x9459d40, 1);
setfloat(0x9459d34, 0.001);
setfloat(0x9459d50, 0.5);
setfloat(0x9459d54, 0);
setfloat(0x9459d58, 25);
setfloat(0x9459d68, 1.5);
setfloat(0x9459d6c, 1);
setfloat(0x9459d84, 0.28);
setfloat(0x9459d7c, 0);
setfloat(0x9459cd0, 0);
setfloat(0x9459cd4, 0);
setfloat(0x9459cd8, -1);
setchar(0x9459ce0, 80);
setfloat(0x9459d5c, 0.92);
setfloat(0x9459d60, 0.5);
setfloat(0x9459cbc, 0);
sethex(0x9459d80, 0x83, 0xc1, 0x00, 0x04);
//venom-banshee
setshort(0x992FDD4, 0x20, 0x20, 0x56, 0x65, 0x6e, 0x6f, 0x6d);
sethex(0x945b131, 0x01);
sethex(0x945b133, 0x02);
setchar(0x945b0e2, 0x8);
setchar(0x945b0e1, 0x50);
setchar(0x945b0e0, 0x52);
setshort(0x94425c0, 250);
setfloat(0x94425bc, 1);
setfloat(0x945b060, 1500);
setfloat(0x945b068, 0.85);
setfloat(0x945b120, 0.3);
setfloat(0x945b124, -0.15);
setfloat(0x945b128, 0.5);
setfloat(0x945b0ec, 5);
setfloat(0x945b0f0, 4);
setfloat(0x945b100, 0.52);
setfloat(0x945b104, 0);
setfloat(0x945b108, 34);
setfloat(0x945b118, 1.6);
setfloat(0x945b11c, 0.1);
setfloat(0x945b134, 0.15);
setfloat(0x945b12c, 0);
setfloat(0x945b080, 0);
setfloat(0x945b084, 0);
setfloat(0x945b088, -1);
setchar(0x945b090, 70);
setchar(0x967E6FC, 0x00, 187, 0x00);
//porsche
setshort(0x992FC0E, 0x50, 0x6f, 0x72, 0x73, 0x63, 0x68, 0x65);
setchar(0x9459972, 0x5);
setchar(0x9459971, 0x50);
setchar(0x9459970, 0x52);
setshort(0x943fb90, 250);
setfloat(0x943fb8c, 0.87);
setfloat(0x94598f8, 0.8);
setfloat(0x94599b0, 0.2);
setfloat(0x94599b4, -0.05);
setfloat(0x94599b8, 0.5);
setfloat(0x945997c, 1.5);
setfloat(0x9459980, 1.5);
setchar(0x8E38A58, 255);
setfloat(0x9459974, 0.00208);
setfloat(0x9459990, 0.52);
setfloat(0x9459994, 0);
setfloat(0x9459998, 25);
setfloat(0x94599a8, 1);
setfloat(0x94599ac, 0.2);
setfloat(0x94599c4, 0.4);
setfloat(0x94599bc, 1);
setfloat(0x9459910, 0);
setfloat(0x9459914, 0);
setfloat(0x9459918, -0.5);
setchar(0x9459920, 70);
setfloat(0x945999c, 0.92);
setfloat(0x94599a0, 0.48);
setfloat(0x94598fc, 0);
sethex(0x94599c0, 0x83, 0xa1, 0x00, 0x06);
setchar(0x967E6FC, 0x00, 0x00, 0xFF);
//car spawns
//landstalker
setchar(0x08E4E9C0, 131);
setchar(0x08E4E9C0 + 0x18, 0x01);
setfloat(0x08E4E9C4, 41.34, -369, 16.16, 300);
//patriot
setchar(0x08E4E9EC, 137);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 41.34, -364, 16.16, 300);
//phobos
setchar(0x08E4Ea18, 186);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 41.34, -359, 16.16, 300);
//stinger
setchar(0x08E4Ea44, 133);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 41.34, -354, 16.16, 300);
//yardie lobo
setchar(0x08E4Ea70, 173);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, 41.34, -349, 16.16, 300);
//banshee
setchar(0x08E4Ea9c, 160);
setchar(0x08E4Ea9c + 0x18, 0x01);
setfloat(0x08E4Eaa0, 41.34, -344, 16.16, 300);
//hellenbach
setchar(0x08E4Eac8, 185);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 41.34, -339, 16.16, 300);
//thunder-rodd
setchar(0x08E4Eaf4, 189);
setchar(0x08E4Eaf4 + 0x18, 0x01);
setfloat(0x08E4Eaf8, 41.34, -334, 16.16, 300);
//deimos
setchar(0x08E4Eb20, 130);
setchar(0x08E4Eb20 + 0x18, 0x01);
setfloat(0x08E4Eb24, 41.34, -329, 16.16, 300);
//angel
setchar(0x08E4Eb4c, 202);
setchar(0x08E4Eb4c + 0x18, 0x01);
setfloat(0x08E4Eb50, 55.34, -369, 16.16, 300);
//cheetah
setchar(0x08E4Eb78, 146);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 73.74, -352.51, 16.16, 0);
//pcj 600
setchar(0x08E4Eba4, 205);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 55.34, -359, 16.16, 300);
//yakuza stinger
setchar(0x08E4Ebd0, 174);
setchar(0x08E4Ebd0 + 0x18, 0x01);
setfloat(0x08E4Ebd4, 55.34, -354, 16.16, 300);
//diablo
setchar(0x08E4Ebfc, 175);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 55.34, -349, 16.16, 300);
//Bickle
setchar(0x08E4Ec28, 181);
setchar(0x08E4Ec28 + 0x18, 0x01);
setfloat(0x08E4Ec2c, 55.34, -344, 16.16, 300);
//leone sentinel
setchar(0x08E4Ec54, 172);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, 55.34, -339, 16.16, 300);
//infernus
setchar(0x08E4Ec80, 142);
setchar(0x08E4Ec80 + 0x18, 0x01);
setfloat(0x08E4Ec84, 55.34, -334, 16.16, 300);
//stretch
setchar(0x08E4Ecac, 140);
setchar(0x08E4Ecac + 0x18, 0x01);
setfloat(0x08E4Ecb0, 55.34, -329, 16.16, 300);
//police
setchar(0x08E4Ecd8, 157);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, 27.00, -365.41, 16.16, 0);
//weapon spawns
setfloat(0x08e2d800, 55.39, -326, 24.31);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
setfloat(0x08E2E400, 55.39, -328, 24.31);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x124);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, 55.39, -330, 24.31);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
setfloat(0x08e2d8c0, 55.39, -332, 24.31);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, 55.39, -334, 24.31);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, 55.39, -336, 24.31);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, 55.39, -338, 24.31);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, 55.39, -340, 24.31);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
setfloat(0x08e2daa0, 55.39, -342, 24.31);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
setfloat(0x08e2db00, 55.39, -344, 24.31);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
setfloat(0x08E2DB60, 55.39, -346, 24.31);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
setfloat(0x08E2DBC0, 55.39, -348, 24.31);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
setfloat(0x08E2DC20, 55.39, -350, 24.31);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
setfloat(0x08E2DC80, 55.39, -352, 24.31);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
setfloat(0x08E2DCE0, 55.39, -354, 24.31);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x10f);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
setfloat(0x08E2DD40, 55.39, -356, 24.31);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
setfloat(0x08E2DDA0, 55.39, -358, 24.31);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
setfloat(0x08E2DE00, 55.39, -360, 24.31);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
setfloat(0x08E2DE60, 55.39, -362, 24.31);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
setfloat(0x08E2DEC0, 55.39, -364, 24.31);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
setfloat(0x08E2DF20, 55.39, -366, 24.31);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0xff, 0xff);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
setfloat(0x08E2DF80, 55.39, -368, 24.31);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0xff, 0xff);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
setfloat(0x08E2DFE0, 55.39, -370, 24.31);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0xff, 0xff);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
setfloat(0x08E2E040, 55.39, -372, 24.31);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0xff, 0xff);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
setfloat(0x08E2E0A0, 55.39, -374, 24.31);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
setfloat(0x08E2E100, 55.39, -376, 24.31);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0xff, 0xff);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
setfloat(0x08E2E160, 53.39, -376, 24.31);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
setfloat(0x08E2E1C0, 51.39, -376, 24.31);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
setfloat(0x08E2E220, 49.39, -376, 24.31);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0xff, 0xff);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
setfloat(0x08E2E280, 47.39, -376, 24.31);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0xff, 0xff);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
setfloat(0x08E2E2E0, 45.39, -376, 24.31);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0xff, 0xff);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
setfloat(0x08E2E340, 43.39, -376, 24.31);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0xff, 0xff);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
setfloat(0x08E2E3A0, 41.39, -376, 24.31);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0xff, 0xff);
setshort(0x08E2E3C6, 0x122);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
setfloat(0x08E2E460, 39.39, -376, 24.31);
setint(0x08E2E474, 0);
setchar(0x08E2E47C, 0xff, 0xff);
setshort(0x08E2E486, 0x22e);
setchar(0x08E2E492, 0x0f);
setchar(0x08E2E493, 0x00);
setchar(0x08E2D4B0, 0xff);
setfloat(0x08E2E4C0, 37.39, -376, 24.31);
setint(0x08E2E4D4, 0);
setchar(0x08E2E4DC, 0xff, 0xff);
setshort(0x08E2E4E6, 0x24b);
setchar(0x08E2E4F2, 0x0f);
setchar(0x08E2E4F3, 0x00);
setchar(0x08E2D510, 0xff);
off()

#cheat MY!! SHOW!! ROOM!!!!
//ID: 13834
//Score: 91
//Author: lilfrk12006
//Category: Location Mods
//Description: its a costum show room all built up with my pmg cars regular cars and every weapon spawn in the game has 3 floors a tele so no need to have to look for it and its all down in the old gta 3 hide out!!!!! on 2nd island
//Image: http://img478.imageshack.us/img478/2310/showroom5kl.png
//Time: 28/06/2006 07:15:05
//Working: Yes
//BY:LILFRK12006
moveto(146.35, -470.17, 16.93);  object(0x01BF, 90, 0, 91);
move(-6.75, 0.08, 0.00);  object(0x01BF, 90, 0, 91);
move(0.19, 7.92, 0.00);  object(0x01BF, 90, 0, 91);
move(6.49, 3.86, 0.10);  object(0x01BF, 90, 0, 90);
move(-6.74, 0.56, 0.00);  object(0x01BF, 90, 0, 90);
move(-7.36, -0.97, -1.00);  object(0x01BF, 90, 345, 359);
move(-10.74, -0.69, -0.70);  object(0x01BF, 90, 25, 359);
move(-6.35, 0.05, 3.00);  object(0x01BF, 90, 25, 359);
move(-7.40, -0.08, 1.60);  object(0x01BF, 90, 0, 359);
move(0.13, -6.71, 0.00);  object(0x01BF, 90, 0, 359);
move(0.10, -6.61, 0.00);  object(0x01BF, 90, 0, 359);
move(-8.15, -0.26, 0.00);  object(0x01BF, 90, 0, 359);
move(-0.27, 6.65, 0.00);  object(0x01BF, 90, 0, 359);
move(-0.11, 6.72, 0.00);  object(0x01BF, 90, 0, 359);
move(5.14, -6.96, 0.08);  object(0x01BF, 90, 0, 177);
move(0.08, -6.75, 0.00);  object(0x01BF, 90, 0, 177);
move(-0.43, 13.44, 0.00);  object(0x01BF, 90, 0, 178);
move(-12.29, -0.08, 0.00);  object(0x01BF, 90, 0, 178);
move(0.13, -6.62, 0.00);  object(0x01BF, 90, 0, 178);
move(0.24, -6.72, 0.00);  object(0x01BF, 90, 0, 178);
move(0.69, 13.01, 3.40);  object(0x01BF, 90, 15, 92);
move(-0.25, -7.52, -1.00);  object(0x01BF, 90, 0, 92);
move(-0.27, -7.82, 0.00);  object(0x01BF, 90, 0, 92);
move(7.26, 4.95, -1.30);  object(0x01BF, 90, 20, 2);
move(34.87, 24.45, 10.30);  object(0x01BF, 90, 0, 359);
move(0.04, -6.62, 0.00);  object(0x01BF, 90, 0, 359);
move(0.18, -6.63, 0.00);  object(0x01BF, 90, 0, 359);
move(-7.79, -0.22, 0.00);  object(0x01BF, 90, 0, 180);
move(-0.02, 6.73, 0.00);  object(0x01BF, 90, 0, 180);
move(0.10, 6.72, 0.00);  object(0x01BF, 90, 0, 180);
move(-7.71, 0.02, 0.01);  object(0x01BF, 90, 0, 183);
move(-0.17, -6.65, 0.00);  object(0x01BF, 90, 0, 183);
move(-0.29, -6.93, 0.30);  object(0x01BF, 90, 0, 178);
move(-0.14, 3.66, 0.00);  object(0x01BF, 90, 0, 183);
move(-6.74, 9.21, -0.30);  object(0x01BF, 90, 0, 180);
move(-7.93, -0.00, 0.00);  object(0x01BF, 90, 0, 180);
move(-7.91, -0.06, 0.00);  object(0x01BF, 90, 0, 180);
move(-7.81, -0.06, -0.70);  object(0x01BF, 90, 10, 179);
move(4.60, -5.81, -1.10);  object(0x01BF, 90, 10, 1);
move(7.69, -0.09, -1.40);  object(0x01BF, 90, 10, 1);
move(7.79, -0.14, -1.20);  object(0x01BF, 90, 10, 1);
move(6.82, -0.10, -1.20);  object(0x01BF, 90, 10, 1);
move(6.79, -0.19, -1.20);  object(0x01BF, 90, 10, 2);
moveto(100.53, -452.94, 28.12);  object(0x01BF, 270, 355, 181);
move(26.17, -6.67, 3.20);  object(0x01BF, 270, 355, 178);
move(-0.15, 3.32, 0.00);  object(0x01BF, 270, 355, 181);
move(-7.46, 6.12, 0.10);  object(0x01BF, 275, 0, 0);
move(22.60, 4.71, 0.00);  object(0x01BF, 270, 0, 89);
move(0.27, -8.52, 0.00);  object(0x01BF, 270, 0, 88);
move(0.09, -4.69, 0.00);  object(0x01BF, 270, 0, 88);
move(-0.41, 9.84, 0.00);  object(0x01BF, 270, 0, 86);
move(6.42, 2.01, 0.00);  object(0x01BF, 270, 0, 86);
move(0.26, -7.71, 0.00);  object(0x01BF, 270, 0, 86);
moveto(132.56, -470.53, 15.88);  object(0x01BF, 90, 15, 182);
move(0.33, 5.19, 0.00);  object(0x01BF, 90, 15, 182);
move(-0.53, 0.74, -0.20);  object(0x01BF, 95, 15, 182);
//Lights
moveto(111.44, -465.01, 20.50);  object(0x020F, 0, 0, 271);
moveto(111.48, -466.20, 20.50);  object(0x020F, 0, 0, 269);
move(0.02, -1.10, 0.00);  object(0x020F, 0, 0, 269);
move(0.02, -1.10, 0.00);  object(0x020F, 0, 0, 269);
move(0.02, -1.50, 0.00);  object(0x020F, 0, 0, 269);
move(0.02, -1.50, 0.00);  object(0x020F, 0, 0, 269);
moveto(111.48, -463.76, 20.53);  object(0x020F, 0, 0, 271);
move(-22.70, -4.20, 10.20);  object(0x020F, 0, 0, 268);
move(0.02, 1.40, 0.00);  object(0x020F, 0, 0, 271);
moveto(88.80, -465.30, 30.73);  object(0x020F, 0, 0, 270);
move(0.16, 4.44, 0.00);  object(0x020F, 0, 0, 270);
move(-0.02, 1.80, 0.00);  object(0x020F, 0, 0, 270);
move(-0.02, 1.70, 0.00);  object(0x020F, 0, 0, 270);
move(-0.02, 1.60, 0.00);  object(0x020F, 0, 0, 270);
moveto(88.87, -462.20, 30.69);  object(0x020F, 0, 0, 267);
move(0.09, -1.70, 0.00);  object(0x020F, 0, 0, 267);
moveto(139.01, -456.13, 25.09);  object(0x020F, 0, 0, 132);
move(2.80, 5.34, 0.00);  object(0x020F, 0, 0, 70);
move(-2.20, -0.04, 0.00);  object(0x020F, 0, 0, 70);
move(-1.86, -0.07, 0.00);  object(0x020F, 0, 0, 74);
move(-1.66, -0.02, 0.00);  object(0x020F, 0, 0, 67);
move(14.41, 12.69, 2.10);  object(0x020F, 265, 0, 5);
move(-1.96, 0.02, 0.00);  object(0x020F, 265, 0, 5);
move(-1.98, -0.06, 0.00);  object(0x020F, 265, 0, 5);
move(-52.19, -22.26, -9.00);  object(0x020F, 265, 0, 270);
move(-0.07, -1.11, 0.00);  object(0x020F, 265, 0, 273);
move(-0.21, -0.99, 0.00);  object(0x020F, 265, 0, 271);
move(4.18, 11.75, 0.00);  object(0x020F, 265, 0, 1);
move(1.02, -0.09, 0.00);  object(0x020F, 265, 0, 0);
move(1.14, 0.12, 0.00);  object(0x020F, 265, 0, 359);
//Fencing
moveto(115.08, -460.05, 31.90);  object(0x01F0, 0, 0, 90);
move(0.01, 3.50, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.00, 3.50, 0.00);  object(0x01F0, 0, 0, 90);
move(-6.75, 2.83, -0.30);  object(0x01F0, 0, 0, 0);
move(-3.62, 0.03, 0.00);  object(0x01F0, 0, 0, 0);
move(-3.60, -0.11, 0.00);  object(0x01F0, 0, 0, 0);
move(-3.62, 0.03, 0.00);  object(0x01F0, 0, 0, 1);
move(-3.71, 0.04, 0.00);  object(0x01F0, 0, 0, 1);
move(-3.41, 0.00, 0.00);  object(0x01F0, 0, 0, 1);
moveto(111.99, -450.28, 31.64);  object(0x01F0, 0, 0, 0);
move(3.12, -12.87, 0.20);  object(0x01F0, 0, 0, 356);
move(3.59, 0.19, 0.00);  object(0x01F0, 0, 0, 359);
move(3.48, 0.07, 0.00);  object(0x01F0, 0, 0, 0);
move(3.56, -0.03, 0.00);  object(0x01F0, 0, 5, 0);
move(3.63, 0.13, -0.20);  object(0x01F0, 0, 0, 0);
move(3.74, 0.10, 0.00);  object(0x01F0, 0, 0, 0);
move(3.67, 0.02, 0.00);  object(0x01F0, 0, 0, 0);
move(3.90, 0.08, 0.00);  object(0x01F0, 0, 0, 359);
//Reg. Cars
//phobos
setchar(0x08E4Ea18, 186);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 49.48, -447.04, 30.98, 200);
//stinger
setchar(0x08E4Ea44, 133);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 142.45, -448.82, 25.08, 198);
//yardie lobo
setchar(0x08E4Ea70, 173);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, 74.88, -446.66, 30.97, 200);
//banshee
setchar(0x08E4Ea9c, 160);
setchar(0x08E4Ea9c + 0x18, 0x01);
setfloat(0x08E4Eaa0, 63.94, -446.94, 30.98, 200);
//hellenbach
setchar(0x08E4Eac8, 185);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 133.76, -453.12, 25.08, 0);
//thunder-rodd
setchar(0x08E4Eaf4, 189);
setchar(0x08E4Eaf4 + 0x18, 0x01);
setfloat(0x08E4Eaf8, 94.26, -460.71, 15.53, 180);
//deimos
setchar(0x08E4Eb20, 130);
setchar(0x08E4Eb20 + 0x18, 0x01);
setfloat(0x08E4Eb24, 100.35, -467.78, 15.54, 280);
//angel
setchar(0x08E4Eb4c, 202);
setchar(0x08E4Eb4c + 0x18, 0x01);
setfloat(0x08E4Eb50, 84.94, -464.56, 30.87, 10);
//cheetah
setchar(0x08E4Eb78, 146);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 121.06, -77.07, 15.43, 250);
//pcj 600
setchar(0x08E4Eba4, 205);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 85.67, -458.68, 30.90, 10);
//Bickle
setchar(0x08E4Ec28, 181);
setchar(0x08E4Ec28 + 0x18, 0x01);
setfloat(0x08E4Ec2c, 45.89, -464.72, 30.98, 5);
//leone sentinel
setchar(0x08E4Ec54, 172);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, 54.59, -66.12, 30.95, 5);
//infernus
setchar(0x08E4Ec80, 142);
setchar(0x08E4Ec80 + 0x18, 0x01);
setfloat(0x08E4Ec84, 92.59, -468.77, 15.52, 280);
//stretch
setchar(0x08E4Ecac, 140);
setchar(0x08E4Ecac + 0x18, 0x01);
setfloat(0x08E4Ecb0, 66.13, -466.05, 30.90, 5);
//pmg cars
//m4
setshort(0x99450E2, 0x20, 0x20, 0x20, 0x20, 0x20, 0x4d, 0x34);
setchar(0x945d482, 0x5);
setchar(0x945d481, 0x50);
setchar(0x945d480, 0x34);
setshort(0x9446c10, 250);
setfloat(0x9446c0c, 1.175);
setfloat(0x945d400, 500);
setfloat(0x945d408, 1.6);
setfloat(0x945d4c0, 0.15);
setfloat(0x945d4c4, -0.15999);
setfloat(0x945d4c8, 0.5);
setfloat(0x945d48c, 0.97867);
setfloat(0x945d490, 0.97867);
setfloat(0x945d484, 0.00475);
setfloat(0x945d4a0, 0.5);
setfloat(0x945d4a4, 0);
setfloat(0x945d4a8, 35);
setfloat(0x945d4b8, 0.85);
setfloat(0x945d4bc, 0.15);
setfloat(0x945d4d4, 0);
setfloat(0x945d4cc, 0);
setfloat(0x945d420, 0);
setfloat(0x945d424, 0.05);
setfloat(0x945d428, -0.08999);
setchar(0x945d430, 103);
setfloat(0x945d4ac, 0.9);
setfloat(0x945d4b0, 0.48);
setfloat(0x945d40c, 0.6);
sethex(0x945d4d0, 0x03, 0x01, 0x01, 0x07);
setchar(0x967E6FC, 0x00, 0xFF, 0x00);
sethex(0x944fb04, 0x79, 0xD1, 0x47);
sethex(0x944fb3c, 0xFF, 0xFF, 0xFF);
setint(0x8E38A38, 205);
setchar(0x8E38A5C, 105, 119);
sethex(0x8E38A5E, 0x01, 0x00);
//m3 limo
setshort(0x992FC96, 0x4d, 0x33, 0x20, 0x4c, 0x49, 0x4d, 0x4f);
setchar(0x945a002, 0x5);
setchar(0x945a001, 0x44);
setchar(0x945a000, 0x34);
setshort(0x9440680, 250);
setfloat(0x944067c, 0.75);
setfloat(0x9459f80, 2000);
setfloat(0x9459f88, 0.6);
setfloat(0x945a040, 0.35);
setfloat(0x945a044, -1);
setfloat(0x945a048, 0.5);
setfloat(0x945a00c, 1.275);
setfloat(0x945a010, 1.275);
setfloat(0x945a004, 0.0045);
setfloat(0x945a020, 0.4);
setfloat(0x945a024, 0);
setfloat(0x945a028, 45);
setfloat(0x945a038, 1.1);
setfloat(0x945a03c, 0.07);
setfloat(0x945a054, 0.2);
setfloat(0x945a04c, 0);
setfloat(0x9459fa0, 0);
setfloat(0x9459fa4, 0);
setfloat(0x9459fa8, -1);
setchar(0x9459fb0, -1);
setfloat(0x945a02c, 0.8);
setfloat(0x945a030, 0.5);
setfloat(0x9459f8c, 0);
sethex(0x945a050, 0x02, 0xc1, 0x00, 0x07);
setchar(0x967E6FC, 0x00, 0x00, 0xFF);
sethex(0x944fb50, 0x54, 0xD5, 0xF2);
sethex(0x944faf4, 0x54, 0xD5, 0xF2);
setint(0x8E38A38, 140);
setchar(0x8E38A5C, 124, 101);
sethex(0x8E38A5E, 0x01, 0x00);
//earth-quake!!
setshort(0x99300B2, 0x65, 0x61, 0x72, 0x74, 0x68, 0x2d, 0x71, 0x75, 0x61, 0x6b, 0x65, 0x21);
setchar(0x945d1b2, 0x6);
setchar(0x945d1b0, 0x34);
setshort(0x9445310, 250);
setfloat(0x944530c, 0.75);
setfloat(0x945d130, 1450);
setfloat(0x945d1f4, -0.001);
setfloat(0x945d1bc, 3.5);
setfloat(0x945d1c0, 3.5);
setfloat(0x945d1b4, 0.12);
setfloat(0x945d1d8, 55);
setfloat(0x945d1e8, 1.21875);
setfloat(0x945d158, -1.15);
setchar(0x945d160, 0);
setfloat(0x945d13c, 0);
sethex(0x945d200, 0x83, 0x81, 0x00, 0x07);
setchar(0x967E6FC, 0x00, 0xFF, 0x00);
sethex(0x944fb34, 0x00, 0x00, 0x00);
sethex(0x944fb4c, 0x00, 0x00, 0x00);
setint(0x8E38A38, 189);
setchar(0x8E38A5C, 117, 123);
sethex(0x8E38A5E, 0x01, 0xFF);
//Weps.
setfloat(0x08e2d800, 149.45, -444.37, 32.60);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
setfloat(0x08E2E400, 149.52, -445.13, 32.60);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x124);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, 149.83, -446.54, 32.60);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
setfloat(0x08e2d8c0, 149.20, -448.45, 32.60);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, 148.67, -449.69, 32.60);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, 147.84, -451.18, 32.60);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, 146.86, -453.56, 32.60);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, 145.72, -455.87, 32.60);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
setfloat(0x08e2daa0, 144.82, -457.93, 32.60);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
setfloat(0x08e2db00, 143.99, -459.80, 32.60);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
setfloat(0x08E2DB60, 143.38, -461.57, 32.60);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
setfloat(0x08E2DBC0, 141.70, -461.95, 32.60);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
setfloat(0x08E2DC20, 140.14, -462.02, 32.60);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
setfloat(0x08E2DC80, 138.19, -462, 32.60);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
setfloat(0x08E2DCE0, 136.58, -462.02, 32.60);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x10f);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
setfloat(0x08E2DD40, 135.43, -461.99, 32.60);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
setfloat(0x08E2DDA0, 134.08, -462.08, 32.60);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
setfloat(0x08E2DE00, 132.36, -462.36, 32.60);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
setfloat(0x08E2DE60, 130.63, -462.14, 32.60);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
setfloat(0x08E2DEC0, 128.99, -462.21, 32.60);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
setfloat(0x08E2DF20, 126.59, -462.33, 32.60);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0xff, 0xff);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
setfloat(0x08E2DF80, 147.97, -443.84, 32.60);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0xff, 0xff);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
setfloat(0x08E2DFE0, 145.49, -443.94, 32.60);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0xff, 0xff);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
setfloat(0x08E2E040, 143.50, -443.99, 32.60);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0xff, 0xff);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
setfloat(0x08E2E0A0, 141.68, -443.96, 32.60);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
setfloat(0x08E2E100, 139.02, -443.91, 32.60);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0xff, 0xff);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
setfloat(0x08E2E160, 136.95, -443.93, 32.60);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
setfloat(0x08E2E1C0, 134.90, -444, 32.60);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
setfloat(0x08E2E220, 133.23, -444, 32.60);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0xff, 0xff);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
setfloat(0x08E2E280, 130.85, -444, 32.60);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0xff, 0xff);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
setfloat(0x08E2E2E0, 129.01, -444, 32.60);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0xff, 0xff);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
setfloat(0x08E2E340, 127.04, -444, 32.60);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0xff, 0xff);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
setfloat(0x08E2E3A0, 124.35, -444, 32.60);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0xff, 0xff);
setshort(0x08E2E3C6, 0x122);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
setfloat(0x08E2E460, 121.79, -444, 32.60);
setint(0x08E2E474, 0);
setchar(0x08E2E47C, 0xff, 0xff);
setshort(0x08E2E486, 0x22e);
setchar(0x08E2E492, 0x0f);
setchar(0x08E2E493, 0x00);
setchar(0x08E2D4B0, 0xff);
setfloat(0x08E2E4C0, 119.10, -444, 32.60);
setint(0x08E2E4D4, 0);
setchar(0x08E2E4DC, 0xff, 0xff);
setshort(0x08E2E4E6, 0x24b);
setchar(0x08E2E4F2, 0x0f);
setchar(0x08E2E4F3, 0x00);
setchar(0x08E2D510, 0xff);
//tele
teleport(187.77, -473.53, 26.00);
off()

#cheat The Hidden Cave V.2
//ID: 13910
//Score: 45
//Author: bob108
//Category: Location Mods
//Description: The hidden cave is where youll be if you use this cheat by me. Pirates once used this cave as a hide out and now its your turn. More stuff now has Weapons, Huntwer (Mabey) and a loading platform. Modify it if you want.
//Image: none
//Time: 30/06/2006 00:58:41
//Working: Yes
moveto(1542.75, -199.53, 28.35);  object(0x01BF, 90, 0, 111);
move(2.13, 5.61, 0.00);  object(0x01BF, 90, 0, 111);
move(-4.80, -12.62, 0.00);  object(0x01BF, 90, 0, 111);
move(-4.36, 1.66, 0.00);  object(0x01BF, 90, 0, 111);
move(2.56, 6.73, 0.00);  object(0x01BF, 90, 0, 111);
move(2.66, 7.01, 0.00);  object(0x01BF, 90, 0, 111);
move(-1.12, 3.74, 0.00);  object(0x01BF, 90, 0, 111);
move(-1.75, 3.98, 0.00);  object(0x01BF, 90, 0, 111);
move(-2.59, -6.82, 0.00);  object(0x01BF, 90, 0, 111);
move(-2.51, -5.73, 0.00);  object(0x01BF, 90, 0, 111);
move(-2.63, -6.81, 0.00);  object(0x01BF, 90, 0, 111);
move(2.55, -9.03, 0.00);  object(0x01BF, 90, 0, 111);
move(-4.46, 1.72, 0.00);  object(0x01BF, 90, 0, 111);
move(14.75, 10.81, 1.28);  object(0x01BF, 65, 0, 113);
move(4.40, -1.83, 2.40);  object(0x01BF, 65, 0, 113);
move(-11.83, 19.80, -3.90);  object(0x01BF, 90, 0, 112);
move(-2.77, -6.97, 0.00);  object(0x01BF, 90, 0, 112);
move(-2.66, -6.69, 0.00);  object(0x01BF, 90, 0, 112);
move(-2.00, -5.02, 0.00);  object(0x01BF, 90, 0, 112);
move(-2.64, -5.40, 0.00);  object(0x01BF, 90, 0, 113);
move(-2.27, -5.45, 0.00);  object(0x01BF, 90, 0, 113);
//Hunter
setchar(0x08E4E9C0, 213);
setfloat(0x08E4E9C4, 1533.82, -192.45, 31.63);
setfloat(0x08E4E9D0, 0);
//Hand Grenade
setfloat(0x08e2d800, 1581.87, -240.35, 36.80);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x999999999999999999, 0x999999999999999999);
setshort(0x08e2d826, 0x10E);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
//Moltov
setfloat(0x08e2d800, 1576.82, -235.00, 39.87);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x999999999999999999, 0x999999999999999999);
setshort(0x08e2d826, 0x110);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
//AK
setfloat(0x08e2d800, 1587.67, -216.78, 38.10);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x999999999999999999, 0x999999999999999999);
setshort(0x08e2d826, 0x114);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
//Rocket Launcher
setfloat(0x08e2d800, 1572.10, -207.67, 42.74);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x999999999999999999, 0x999999999999999999);
setshort(0x08e2d826, 0x11F);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
//Remote Det
setfloat(0x08e2d800, 1552.91, -220.55, 43.77);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x999999999999999999, 0x999999999999999999);
setshort(0x08e2d826, 0x123);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
teleport(1557.57, -209.48, 39.47);

#cheat Rashon125's Car Showroom
//ID: 14006
//Score: 57
//Author: rashon125
//Category: Location Mods
//Description: *All Weapon Spawns
//*Located In South Side of Staunton
//*22 Vehicle Spawns
//*My First Location Mod
//*Get Teleport off Cheatsync
//Image: http://i70.photobucket.com/albums/i97/rashon125/RashonsShowroomright.jpg
//Time: 01/07/2006 20:03:00
//Working: Yes
moveto(101.17, -1632.19, 28.37);  object(0x01BF, 0, 0, 90);
move(0.03, -8.02, 0.00);  object(0x01BF, 0, 0, 89);
move(-0.01, -7.80, 0.00);  object(0x01BF, 0, 0, 91);
move(0.04, -7.84, 0.00);  object(0x01BF, 0, 0, 89);
move(0.13, -6.85, 0.00);  object(0x01BF, 0, 0, 90);
move(0.08, -7.93, 0.00);  object(0x01BF, 0, 0, 89);
move(0.08, -7.99, 0.00);  object(0x01BF, 0, 0, 89);
move(-3.34, -3.78, 0.00);  object(0x01BF, 0, 0, 184);
move(-8.06, 0.39, 0.00);  object(0x01BF, 0, 0, 181);
move(-7.34, 0.64, 0.00);  object(0x01BF, 0, 0, 190);
move(-7.79, 0.95, 0.00);  object(0x01BF, 0, 0, 185);
move(-7.55, 2.32, 0.00);  object(0x01BF, 0, 0, 208);
move(-6.62, 3.98, 0.00);  object(0x01BF, 0, 0, 214);
move(-6.48, 4.66, 0.00);  object(0x01BF, 0, 0, 218);
move(-6.20, 4.91, 0.00);  object(0x01BF, 0, 0, 219);
move(-6.18, 5.36, 0.00);  object(0x01BF, 0, 0, 45);
move(-4.83, 5.29, 0.00);  object(0x01BF, 0, 0, 232);
move(-0.60, 6.25, 0.00);  object(0x01BF, 0, 0, 295);
move(4.27, 7.28, 0.00);  object(0x01BF, 0, 0, 301);
move(4.29, 6.78, 0.00);  object(0x01BF, 0, 0, 303);
move(30.49, 2.14, -2.30);  object(0x01BF, 255, 0, 193);
move(-1.41, -5.29, 1.60);  object(0x01BF, 255, 0, 193);
move(-1.99, -5.73, 1.60);  object(0x01BF, 255, 0, 193);
move(-1.36, -6.03, 0.60);  object(0x01BF, 90, 0, 10);
move(-7.56, 1.03, 0.00);  object(0x01BF, 90, 0, 7);
move(-7.92, 0.55, 0.00);  object(0x01BF, 90, 0, 4);
move(-7.78, 0.51, 0.00);  object(0x01BF, 90, 0, 3);
move(0.06, -6.64, 0.00);  object(0x01BF, 90, 0, 358);
move(18.55, -19.43, -1.40);  object(0x01BF, 0, 0, 295);
move(3.26, 7.07, 0.00);  object(0x01BF, 0, 0, 294);
move(2.95, 7.44, 0.00);  object(0x01BF, 0, 0, 292);
move(5.00, 8.54, 0.00);  object(0x01BF, 245, 0, 282);
move(19.28, -8.67, 0.00);  object(0x01BF, 0, 0, 185);
move(-18.79, 2.34, 0.00);  object(0x01BF, 0, 0, 16);
move(19.18, 27.27, 0.00);  object(0x01BF, 0, 0, 179);
move(-45.90, -1.13, 0.00);  object(0x01BF, 0, 0, 166);
move(3.64, -23.29, 1.50);  object(0x01BF, 90, 0, 181);
move(12.81, 26.07, -1.10);  object(0x01BF, 0, 0, 182);
move(-15.11, -16.34, 1.10);  object(0x01EF, 0, 0, 4);
move(-7.80, 0.15, 0.00);  object(0x01EF, 0, 0, 0);
move(-0.16, -6.14, 1.10);  object(0x01EF, 0, 0, 269);
move(6.40, -5.98, 0.00);  object(0x01EF, 0, 0, 182);
move(6.51, 0.36, 0.10);  object(0x01EF, 0, 0, 175);
move(0.86, 3.23, 0.00);  object(0x020F, 0, 0, 111);
move(0.09, -1.89, 0.20);  object(0x020F, 0, 0, 129);
move(49.94, 23.23, -0.90);  object(0x025D, 0, 0, 151);
move(-71.94, -6.08, 0.00);  object(0x025D, 0, 0, 225);
move(-6.26, 1.79, -2.00);  object(0x01BF, 0, 0, 280);
move(-4.80, -3.56, 0.00);  object(0x01BF, 0, 0, 2);
move(-2.87, 4.04, 0.00);  object(0x01BF, 0, 0, 106);
move(3.47, -0.38, 3.30);  object(0x01BF, 90, 0, 106);
move(1.59, 8.00, -1.40);  object(0x01BF, 90, 20, 270);
//weapon spawns
//brass knuckles
setfloat(0x08e2d800, 57.15, -1654.00, 31.15);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//chisel
setfloat(0x08e2d860, 54.57, -1654.37, 31, 15);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//hockey stick
setfloat(0x08e2d8c0, 51.16, -1654.48, 31.15);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
//nightstick
setfloat(0x08e2d920, 47.73, -1654.33, 31.05);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
//butcher knife
setfloat(0x08e2d980, 47.73, -1654.33, 32.05);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
//baseball bat
setfloat(0x08e2d9e0, 45.10, -1654.26, 31.05);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
//fire axe
setfloat(0x08e2da40, 44.54, -1650.88, 31.05);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
//meat cleaver
setfloat(0x08e2daa0, 45.62, -1645.52, 31.05);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
//machete
setfloat(0x08e2db00, 47.63, -1644.42, 31.05);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
//katana
setfloat(0x08E2DB60, 50.49, -1644.39, 31.05);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
//chainsaw
setfloat(0x08E2DBC0, 55.05, -1644.41, 31.05);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
//Grenade
setfloat(0x08E2DC20, 40.49, -1644.33, 26.11);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0x1, 0x1);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
//Remote Grenade
setfloat(0x08E2DC80, 41.63, -1642.23, 26.12);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0x1, 0x1);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
//Molotovs
setfloat(0x08E2DD40, 42.80, -1639.58, 26.13);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0x1, 0x1);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
//Pistol
setfloat(0x08E2DDA0, 43.81, -1637.78, 26.14);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0x1, 0x1);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
//Colt Python
setfloat(0x08E2DE00, 44.70, -1636.65, 26.14);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0x1, 0x1);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
//AK-47
setfloat(0x08E2DF80, 45.83, -1634.99, 26.14);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0x1, 0x1);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
//M4
setfloat(0x08E2DFE0, 46.82, -1633.57, 26.14);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0x1, 0x1);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
//Chromed Shotgun
setfloat(0x08E2DE60, 48.21, -1632.54, 26.15);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0x1, 0x1);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
//Spaz Shotgun
setfloat(0x08E2DEC0, 49.72, -1631.64, 26.15);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0x1, 0x1);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
//Combat Shotgun
setfloat(0x08E2DF20, 51.55, -1631.17, 26.15);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0x1, 0x1);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
//Tec-9
setfloat(0x08E2E040, 94.11, -1630.45, 26.15);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0x1, 0x1);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
//Micro SMG
setfloat(0x08E2E0A0, 96.43, -1629.93, 26.16);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0x1, 0x1);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
//Mac 10
setfloat(0x08E2E100, 98.39, -1630.02, 26.16);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0x1, 0x1);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
//MP5
setfloat(0x08E2E160, 99.64, -1632.39, 26.15);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0x1, 0x1);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
//Rocket Launcher
setfloat(0x08E2E280, 99.13, -1635.44, 26.14);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0x1, 0x1);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
//Flame Thrower
setfloat(0x08E2E2E0, 99.75, -1638.02, 26.14);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0x1, 0x1);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
//M60
setfloat(0x08E2E340, 99.81, -1640.61, 26.13);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0x1, 0x1);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
//Sniper Rifle
setfloat(0x08E2E1C0, 99.88, -1643.29, 26.12);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0x1, 0x1);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
//LS Sniper Rifle
setfloat(0x08E2E220, 99.95, -1646.24, 26.12);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0x1, 0x1);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
//Deimos SP
setchar(0x8E4EB20, 130);
setchar(0x8E4EB20 + 0x18, 0x01);
setfloat(0x8E4EB24, 93.56, -1661.96, 26.08, 90);
//Phobos VT
setchar(0x8E4EAF4, 186);
setchar(0x8E4EAF4 + 0x18, 0x01);
setfloat(0x8E4EAF8, 93.67, -1668.33, 26.06, 90);
//Banshee
setchar(0x8E4EA9C, 160);
setchar(0x8E4EA9C + 0x18, 0x01);
setfloat(0x8E4EAA0, 95.48, -1675.22, 26.05, 90);
//Hellenbach GT
setchar(0x08E4Ec54, 185);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, 89.43, -1676.26, 26.04, 180);
//Stinger
setchar(0x08E4Ecd8, 133);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, 82.09, -1675.97, 26.04, 180);
//Infernus
setchar(0x08E4Ec28, 142);
setchar(0x08E4Ec28 + 0x18, 0x01);
setfloat(0x08E4Ec2c, 75.22, -1674.56, 26.04, 180);
//V8 Ghost
setchar(0x08E4Eba4, 187);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 75.15, -1667.31, 27.44, 90);
//Cheetah
setchar(0x08E4Ebfc, 146);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 77.68, -1662.38, 26.09, 90);
//Leone Sentinel
setchar(0x08E4Ebfc, 172);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 63.53, -1663.76, 26.06, 180);
//Diablo Stallion
setchar(0x08E4E9EC, 175);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 55.83, -1662.34, 26.07, 180);
//Hoods Rumpo XL
setchar(0x08E4Ea44, 177);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 49.39, -1656.94, 26.08, 180);
//Yardie Lobo
setchar(0x08E4Ea70, 173);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, 43.87, -1651.64, 26.09, 180);
//Yakuza Stinger
setchar(0x08E4Eac8, 174);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 47.11, -1642.49, 26.79, 90);
//Sindacco Argento
setchar(0x08E4Eb78, 190);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 53.04, -1644.30, 26.79, 90);
//Cartel Cruiser
setchar(0x08E4Ea18, 176);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 57.38, -1645.32, 26.80, 90);
//Forelli Excess
setchar(0x8E4EB4C, 191);
setchar(0x8E4EB4C + 0x18, 0x01);
setfloat(0x8E4EB50, 61.64, -1645.66, 26.79, 90);
//Angel
setchar(0x08E4E9EC, 202);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 28.49, -1634.53, 26.13, 0);
//PCJ-600
setchar(0x08E4Ea44, 205);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 24.56, -1634.48, 26.13, 0);
//Freeway
setchar(0x08E4Ea70, 207);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, 27.33, -1634.43, 26.79, 0);
//Sanchez
setchar(0x08E4Eac8, 210);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 25.75, -1634.58, 26.79, 0);
//Avenger
setchar(0x08E4Eb78, 208);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 25.75, -1634.06, 26.16, 0);
//Manchez
setchar(0x08E4Ea18, 209);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 19.91, -1631.96, 26.16, 0);
off()

#cheat Half Way hut by bob108
//ID: 14316
//Score: 35
//Author: bob108
//Category: Location Mods
//Description: Has weapons, trees, seats, rooms, lights and extra rooms. Great for vacations, hideaways and escapes. Best yet from bob108
//Image: C:\WINDOWS\Desktop\video1.gif
//Time: 07/07/2006 08:14:50
//Working: Yes
moveto(511.18, -641.05, 44.92);  object(0x01BF, 90, 0, 90);
move(0.05, -7.50, 0.00);  object(0x01BF, 90, 0, 90);
move(0.05, -7.50, 0.00);  object(0x01BF, 90, 0, 90);
move(0.05, -7.50, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.12, -0.04, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.05, 7.70, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.04, 5.60, -25.90);  object(0x01BF, 90, 0, 90);
move(0.00, 0.00, 2.00);  object(0x01BF, 90, 0, 90);
move(0.00, 0.00, 3.10);  object(0x01BF, 90, 0, 90);
move(0.00, 0.00, 1.50);  object(0x01BF, 90, 0, 90);
move(-0.01, -1.49, 4.70);  object(0x01BF, 90, 0, 107);
move(-1.30, 4.78, 0.00);  object(0x01BF, 90, 0, 48);
move(-154.67, -60.34, 17.89);  object(0x01BF, 90, 0, 90);
move(-0.03, 7.70, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.03, 7.70, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.03, 7.70, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.78, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(0.03, -7.60, 0.00);  object(0x01BF, 90, 0, 90);
move(0.03, -7.60, 0.00);  object(0x01BF, 90, 0, 90);
move(0.02, -4.50, 0.00);  object(0x01BF, 90, 0, 90);
move(0.02, -6.40, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.73, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.02, 7.30, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.03, 7.60, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.02, 6.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.02, 5.40, 0.00);  object(0x01BF, 90, 0, 90);
move(14.74, -23.28, 3.56);  object(0x01BF, 0, 0, 269);
move(-0.07, 3.70, 0.00);  object(0x01BF, 0, 0, 269);
move(-0.24, 13.80, 0.00);  object(0x01BF, 0, 0, 269);
move(-0.13, 7.50, 0.00);  object(0x01BF, 0, 0, 269);
move(-17.48, -2.68, -0.40);  object(0x01BF, 0, 0, 89);
move(0.10, -4.50, 0.00);  object(0x01BF, 0, 0, 89);
move(0.32, -14.10, 0.00);  object(0x01BF, 0, 0, 89);
move(0.11, -4.60, 0.00);  object(0x01BF, 0, 0, 89);
move(2.23, -6.69, 0.00);  object(0x01BF, 0, 0, 186);
moveto(349.58, -707.56, 54.79);  object(0x01BF, 90, 0, 90);
move(-0.07, 7.50, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.06, 5.90, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.06, 6.40, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.06, 6.60, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.02, -26.22, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.09, 7.30, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.09, 7.40, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.06, 5.30, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.09, 7.20, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.04, -4.68, 0.00);  object(0x01BF, 90, 0, 90);
move(0.09, -7.70, 0.00);  object(0x01BF, 90, 0, 90);
move(0.09, -7.50, 0.00);  object(0x01BF, 90, 0, 90);
move(0.09, -7.60, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.07, 11.14, -7.70);  object(0x01BF, 75, 0, 90);
move(-5.27, -0.05, -1.50);  object(0x01BF, 75, 0, 90);
move(-4.41, -0.04, -1.20);  object(0x01BF, 75, 0, 90);
move(-5.73, -0.06, -1.60);  object(0x01BF, 75, 0, 90);
move(-5.94, -0.04, -1.60);  object(0x01BF, 75, 0, 90);
move(-5.83, -0.04, -1.60);  object(0x01BF, 75, 0, 90);
move(-6.03, -0.05, -1.60);  object(0x01BF, 75, 0, 90);
move(-5.84, -0.05, -1.60);  object(0x01BF, 75, 0, 90);
move(-6.50, -0.05, -1.70);  object(0x01BF, 75, 0, 90);
move(-6.46, -0.05, -1.70);  object(0x01BF, 75, 0, 90);
move(-6.10, -0.04, -1.60);  object(0x01BF, 75, 0, 90);
move(-6.25, -0.05, -1.70);  object(0x01BF, 75, 0, 90);
moveto(261.86, -697.05, 28.02);  object(0x01BF, 75, 0, 90);
move(-6.00, 0.04, -1.60);  object(0x01BF, 75, 0, 90);
move(-5.58, 0.01, -1.50);  object(0x01BF, 75, 0, 90);
move(104.65, 0.51, 23.30);  object(0x01BF, 90, 0, 267);
moveto(403.35, -697.17, 48.80);  object(0x01BF, 90, 0, 91);
move(-42.95, 0.95, -0.70);  object(0x01BF, 90, 0, 268);
move(0.45, -7.21, 0.00);  object(0x01BF, 90, 0, 267);
move(0.45, -7.38, 0.00);  object(0x01BF, 90, 0, 267);
move(5.40, 0.33, 0.00);  object(0x01BF, 90, 0, 267);
move(-0.47, 7.78, 0.00);  object(0x01BF, 90, 0, 267);
move(-0.45, 7.38, 0.00);  object(0x01BF, 90, 0, 267);
move(-5.64, 5.97, 0.00);  object(0x01BF, 90, 0, 267);
move(-0.34, 5.69, 0.00);  object(0x01BF, 90, 0, 267);
move(5.89, -4.15, 0.00);  object(0x01BF, 90, 0, 267);
move(-0.27, 4.49, 0.00);  object(0x01BF, 90, 0, 267);
move(-8.60, -1.73, 3.00);  object(0x01BF, 0, 0, 87);
move(0.19, -4.20, 0.00);  object(0x01BF, 0, 0, 87);
move(0.68, -14.59, 0.00);  object(0x01BF, 0, 0, 87);
move(0.34, -7.29, 0.00);  object(0x01BF, 0, 0, 87);
move(11.77, 0.56, 0.10);  object(0x01BF, 0, 0, 265);
move(-0.59, 7.28, 0.00);  object(0x01BF, 0, 0, 265);
move(-0.58, 7.08, 0.00);  object(0x01BF, 0, 0, 265);
move(-0.60, 7.38, 0.00);  object(0x01BF, 0, 0, 265);
move(-0.37, 4.58, 0.00);  object(0x01BF, 0, 0, 265);
move(-6.61, -26.81, 3.10);  object(0x01BF, 90, 0, 87);
move(-0.39, 7.49, 0.00);  object(0x01BF, 90, 0, 87);
move(-0.39, 7.39, 0.00);  object(0x01BF, 90, 0, 87);
move(-0.38, 7.19, 0.00);  object(0x01BF, 90, 0, 87);
move(-0.30, 5.69, 0.00);  object(0x01BF, 90, 0, 87);
move(7.11, -27.60, 0.00);  object(0x01BF, 90, 0, 264);
move(-0.77, 7.56, 0.00);  object(0x01BF, 90, 0, 264);
move(-0.73, 7.16, 0.00);  object(0x01BF, 90, 0, 264);
move(-0.55, 5.47, 0.00);  object(0x01BF, 90, 0, 264);
move(-0.70, 6.96, 0.00);  object(0x01BF, 90, 0, 264);
moveto(354.75, -702.26, 50.10);  object(0x01BF, 50, 0, 177);
move(0.14, -3.05, 2.70);  object(0x01BF, 50, 0, 176);
move(-0.09, -5.78, 2.00);  object(0x01BF, 90, 0, 177);
//
setfloat(0x08e2d800, 337.42, -702.95, 49.39);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x122)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//
setfloat(0x08E2E400, 337.82, -706.29, 49.39);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x11f);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
//
setfloat(0x08e2d860, 338.41, -711.74, 49.39);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x11e)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//
setfloat(0x08e2d8c0, 342.42, -709.78, 49.39);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x118);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
//
setfloat(0x08e2d920, 346.58, -709.80, 49.39, 0);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x114);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
//
setfloat(0x08e2d980, 349.89, -706.45, 49.39);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x113);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
//
setfloat(0x08e2d9e0, 350.08, -701.76, 49.39);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x104);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
//
setfloat(0x08e2da40, 349.96, -691.97, 49.39);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x10e);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
//
setfloat(0x08e2daa0, 350.07, -687.34, 49.39);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x124);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
//
setfloat(0x08e2db00, 349.95, -682.43, 49.39);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x117);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
//
setfloat(0x08E2DB60, 346.07, -682.10, 49.39);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x121);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
//
setfloat(0x08E2DBC0, 342.05, -682.83, 49.39);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10c);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
//
setfloat(0x08E2DC20, 337.59, -683.16, 49.39);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x10b);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
//
setfloat(0x08E2DC80, 336.71, -686.88, 49.39);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x110);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
//
setfloat(0x08E2DCE0, 336.55, -690.45, 49.39);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x11c);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
//
moveto(332.08, -692.80, 47.59);  object(0x020F, 0, 0, 86);
move(-3.56, 0.07, -1.10);  object(0x020F, 0, 0, 86);
move(-4.86, -0.11, -1.20);  object(0x020F, 0, 0, 86);
move(-4.70, -0.09, -1.30);  object(0x020F, 0, 0, 85);
move(-5.93, -0.04, -1.70);  object(0x020F, 0, 0, 90);
move(-5.94, -0.01, -1.60);  object(0x020F, 0, 0, 90);
move(-5.58, -0.01, -1.40);  object(0x020F, 0, 0, 90);
move(-5.93, -0.01, -1.60);  object(0x020F, 0, 0, 90);
move(-6.72, -0.02, -1.80);  object(0x020F, 0, 0, 90);
move(-6.49, -0.11, -1.90);  object(0x020F, 0, 0, 90);
move(-5.55, -0.01, -1.30);  object(0x020F, 0, 0, 90);
move(-6.49, -0.01, -1.60);  object(0x020F, 0, 0, 90);
move(-5.81, -0.13, -1.70);  object(0x020F, 0, 0, 102);
move(-6.95, -0.01, -1.90);  object(0x020F, 0, 0, 120);
//
moveto(406.60, -697.38, 51.96);  object(0x01BF, 0, 0, 271);
move(-77.59, -2.97, -5.00);  object(0x020F, 0, 0, 90);
move(-5.06, -0.06, -1.50);  object(0x020F, 0, 0, 90);
move(-4.83, -0.05, -1.50);  object(0x020F, 0, 0, 90);
move(-5.67, -0.06, -1.50);  object(0x020F, 0, 0, 90);
move(-5.47, -0.06, -1.60);  object(0x020F, 0, 0, 90);
move(-5.85, -0.07, -1.40);  object(0x020F, 0, 0, 90);
move(-6.23, -0.07, -1.80);  object(0x020F, 0, 0, 90);
move(-5.92, 0.03, -1.50);  object(0x020F, 0, 0, 90);
move(-6.75, -0.08, -1.70);  object(0x020F, 0, 0, 90);
move(-6.14, -0.07, -1.80);  object(0x020F, 0, 0, 90);
move(-6.59, -0.07, -1.70);  object(0x020F, 0, 0, 90);
move(-6.17, 0.23, -1.50);  object(0x020F, 0, 0, 90);
move(-7.10, -0.01, -2.10);  object(0x020F, 0, 0, 94);
//
moveto(334.42, -710.69, 55.22);  object(0x020F, 0, 0, 96);
move(-0.00, 1.84, 0.00);  object(0x020F, 0, 0, 90);
move(-0.01, 1.90, 0.00);  object(0x020F, 0, 0, 90);
move(-0.01, 1.90, 0.00);  object(0x020F, 0, 0, 90);
move(-0.01, 1.90, 0.00);  object(0x020F, 0, 0, 90);
move(-0.01, 2.10, 0.00);  object(0x020F, 0, 0, 90);
move(-0.01, 2.40, 0.00);  object(0x020F, 0, 0, 90);
move(-0.01, 2.40, 0.00);  object(0x020F, 0, 0, 90);
move(-0.01, 2.40, 0.00);  object(0x020F, 0, 0, 90);
move(-0.01, 2.40, 0.00);  object(0x020F, 0, 0, 90);
move(-0.01, 2.60, 0.00);  object(0x020F, 0, 0, 90);
move(-0.01, 2.20, 0.00);  object(0x020F, 0, 0, 90);
move(-0.07, 2.86, 0.00);  object(0x020F, 0, 0, 90);
move(16.92, 0.70, 0.20);  object(0x020F, 0, 0, 320);
move(0.11, -3.28, 0.00);  object(0x020F, 0, 0, 320);
move(-0.18, -3.50, -0.10);  object(0x020F, 0, 0, 298);
move(0.19, -2.89, 0.10);  object(0x020F, 0, 0, 91);
move(0.15, -3.42, 0.00);  object(0x020F, 0, 0, 292);
move(0.35, -3.63, 0.00);  object(0x020F, 0, 0, 270);
move(0.04, -4.20, 0.00);  object(0x020F, 0, 0, 270);
move(0.03, -3.80, 0.00);  object(0x020F, 0, 0, 270);
//
moveto(368.96, -702.64, 54.78);  object(0x020F, 0, 0, 270);
move(0.02, -3.20, 0.00);  object(0x020F, 0, 0, 270);
move(0.02, -3.60, 0.00);  object(0x020F, 0, 0, 270);
move(0.03, -3.80, 0.00);  object(0x020F, 0, 0, 270);
move(-0.27, 14.30, 0.00);  object(0x020F, 0, 0, 270);
move(-0.40, 3.60, 0.20);  object(0x020F, 0, 0, 270);
move(-0.05, 3.52, 0.00);  object(0x020F, 0, 0, 260);
move(-0.48, 3.85, 0.00);  object(0x020F, 0, 0, 261);
move(-0.32, 3.72, 0.00);  object(0x020F, 0, 0, 277);
move(-10.86, 1.26, -0.20);  object(0x020F, 0, 0, 40);
move(0.17, -3.23, 0.00);  object(0x020F, 0, 0, 41);
move(0.16, -3.49, 0.00);  object(0x020F, 0, 0, 41);
move(0.29, -3.77, 0.00);  object(0x020F, 0, 0, 34);
move(0.09, -4.50, 0.00);  object(0x020F, 0, 0, 34);
move(0.35, -5.89, 0.00);  object(0x020F, 0, 0, 166);
//
moveto(408.05, -696.26, 49.12);  object(0x0208, 0, 0, 102);
move(-73.74, 5.22, 3.30);  object(0x023F, 0, 0, 88);
move(-0.22, 2.68, 0.00);  object(0x023F, 0, 0, 95);
move(0.20, 2.39, 0.00);  object(0x023F, 0, 0, 95);
move(-0.16, 1.82, 0.00);  object(0x023F, 0, 0, 95);
move(0.39, -18.26, 0.00);  object(0x023F, 0, 0, 90);
move(0.02, -2.10, 0.00);  object(0x023F, 0, 0, 90);
move(0.02, -2.50, 0.00);  object(0x023F, 0, 0, 90);
move(0.02, -2.00, 0.00);  object(0x023F, 0, 0, 90);
move(30.97, 22.37, 1.95);  object(0x0269, 0, 0, 285);
move(0.26, -6.91, 0.60);  object(0x0271, 0, 0, 225);
move(-0.08, -6.28, 0.30);  object(0x025B, 0, 0, 292);
teleport(248.65, -697.56, 26.02);
off();

