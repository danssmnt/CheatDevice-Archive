#cheat Teleport to Rashon125's Car Showroom
//ID: 14010
//Score: 58
//Author: rashon125
//Category: Teleport
//Description: This is to teleport to my showroom. Be sure to get my car showroom cheat or else you'll teleport on empty land.
//Image: none
//Time: 01/07/2006 20:07:20
//Working: Yes
teleport(82.94, -1623.88, 26.17)

#cheat Rashon125's Car Showroom Loaded
//ID: 14057
//Score: 58
//Author: rashon125
//Category: Location Mods
//Description: If you don't download lots of cheats at Cheatsync, you might have enough space to download all the features of my car showroom. It even has the teleport built-in. Use my other showroom cheats so it can work perfect set. Only 19kb.
//Image: http://i70.photobucket.com/albums/i97/rashon125/RashonsShowroomright.jpg
//Time: 02/07/2006 22:05:30
//Working: Yes
//Use only if you have enough cheat memory
//Have Fun!
//First Floor
moveto(101.17, -1632.19, 28.37);  object(0x01BF, 0, 0, 90);
move(0.03, -8.02, 0.00);  object(0x01BF, 0, 0, 89);
move(-0.01, -7.80, 0.00);  object(0x01BF, 0, 0, 91);
move(0.04, -7.84, 0.00);  object(0x01BF, 0, 0, 89);
move(0.13, -6.85, 0.00);  object(0x01BF, 0, 0, 90);
move(0.08, -7.93, 0.00);  object(0x01BF, 0, 0, 89);
move(0.08, -7.99, 0.00);  object(0x01BF, 0, 0, 89);
move(-3.34, -3.78, 0.00);  object(0x01BF, 0, 0, 184);
move(-8.06, 0.39, 0.00);  object(0x01BF, 0, 0, 181);
move(-7.34, 0.64, 0.00);  object(0x01BF, 0, 0, 190);
move(-7.79, 0.95, 0.00);  object(0x01BF, 0, 0, 185);
move(-7.55, 2.32, 0.00);  object(0x01BF, 0, 0, 208);
move(-6.62, 3.98, 0.00);  object(0x01BF, 0, 0, 214);
move(-6.48, 4.66, 0.00);  object(0x01BF, 0, 0, 218);
move(-6.20, 4.91, 0.00);  object(0x01BF, 0, 0, 219);
move(-6.18, 5.36, 0.00);  object(0x01BF, 0, 0, 45);
move(-4.83, 5.29, 0.00);  object(0x01BF, 0, 0, 232);
move(-0.60, 6.25, 0.00);  object(0x01BF, 0, 0, 295);
move(4.27, 7.28, 0.00);  object(0x01BF, 0, 0, 301);
move(4.29, 6.78, 0.00);  object(0x01BF, 0, 0, 303);
move(30.49, 2.14, -2.30);  object(0x01BF, 255, 0, 193);
move(-1.41, -5.29, 1.60);  object(0x01BF, 255, 0, 193);
move(-1.99, -5.73, 1.60);  object(0x01BF, 255, 0, 193);
move(-1.36, -6.03, 0.60);  object(0x01BF, 90, 0, 10);
move(-7.56, 1.03, 0.00);  object(0x01BF, 90, 0, 7);
move(-7.92, 0.55, 0.00);  object(0x01BF, 90, 0, 4);
move(-7.78, 0.51, 0.00);  object(0x01BF, 90, 0, 3);
move(0.06, -6.64, 0.00);  object(0x01BF, 90, 0, 358);
move(18.55, -19.43, -1.40);  object(0x01BF, 0, 0, 295);
move(3.26, 7.07, 0.00);  object(0x01BF, 0, 0, 294);
move(2.95, 7.44, 0.00);  object(0x01BF, 0, 0, 292);
move(5.00, 8.54, 0.00);  object(0x01BF, 245, 0, 282);
move(19.28, -8.67, 0.00);  object(0x01BF, 0, 0, 185);
move(-18.79, 2.34, 0.00);  object(0x01BF, 0, 0, 16);
move(19.18, 27.27, 0.00);  object(0x01BF, 0, 0, 179);
move(-45.90, -1.13, 0.00);  object(0x01BF, 0, 0, 166);
move(3.64, -23.29, 1.50);  object(0x01BF, 90, 0, 181);
move(12.81, 26.07, -1.10);  object(0x01BF, 0, 0, 182);
move(-15.11, -16.34, 1.10);  object(0x01EF, 0, 0, 4);
move(-7.80, 0.15, 0.00);  object(0x01EF, 0, 0, 0);
move(-0.16, -6.14, 1.10);  object(0x01EF, 0, 0, 269);
move(6.40, -5.98, 0.00);  object(0x01EF, 0, 0, 182);
move(6.51, 0.36, 0.10);  object(0x01EF, 0, 0, 175);
move(0.86, 3.23, 0.00);  object(0x020F, 0, 0, 111);
move(0.09, -1.89, 0.20);  object(0x020F, 0, 0, 129);
move(49.94, 23.23, -0.90);  object(0x025D, 0, 0, 151);
move(-71.94, -6.08, 0.00);  object(0x025D, 0, 0, 225);
move(-6.26, 1.79, -2.00);  object(0x01BF, 0, 0, 280);
move(-4.80, -3.56, 0.00);  object(0x01BF, 0, 0, 2);
move(-2.87, 4.04, 0.00);  object(0x01BF, 0, 0, 106);
move(3.47, -0.38, 3.30);  object(0x01BF, 90, 0, 106);
move(1.59, 8.00, -1.40);  object(0x01BF, 90, 20, 270);
//Second Floor (Roof)
moveto(97.14, -1628.34, 35.27);  object(0x01BF, 0, 0, 179);
move(4.05, -4.03, -0.20);  object(0x01BF, 0, 0, 263);
move(-0.03, -7.46, 0.00);  object(0x01BF, 0, 0, 271);
move(-0.51, -7.80, 0.00);  object(0x01BF, 0, 0, 275);
move(0.49, -7.89, 0.10);  object(0x01BF, 0, 0, 268);
move(0.39, -7.18, 0.00);  object(0x01BF, 0, 0, 269);
move(0.37, -8.59, 0.00);  object(0x01BF, 0, 0, 278);
move(-0.69, -7.87, 0.00);  object(0x01BF, 0, 0, 274);
move(-10.54, -2.76, -0.10);  object(0x01BF, 0, 0, 1);
move(6.80, -0.04, 0.00);  object(0x01BF, 0, 0, 358);
move(-14.82, 0.82, 0.00);  object(0x01BF, 0, 0, 9);
move(-7.72, 1.84, 0.00);  object(0x01BF, 0, 0, 10);
move(-7.87, 1.45, 0.00);  object(0x01BF, 0, 0, 16);
move(-6.30, 3.93, 0.00);  object(0x01BF, 0, 0, 34);
move(-7.20, 4.60, 0.00);  object(0x01BF, 0, 0, 40);
move(-6.08, 4.02, 0.00);  object(0x01BF, 0, 0, 39);
move(-5.63, 6.06, 0.00);  object(0x01BF, 0, 0, 49);
move(-4.47, 5.29, 0.00);  object(0x01BF, 0, 0, 52);
move(-0.43, 6.82, 0.00);  object(0x01BF, 0, 0, 119);
move(4.68, 6.49, -0.20);  object(0x01BF, 0, 0, 130);
move(3.69, 6.67, 0.00);  object(0x01BF, 0, 0, 120);
move(5.76, 4.39, 0.00);  object(0x01BF, 0, 0, 332);
move(45.55, -28.66, 0.20);  object(0x01BF, 0, 0, 185);
move(-30.89, -13.97, 0.00);  object(0x01BF, 0, 0, 291);
move(3.65, 7.08, 0.00);  object(0x01BF, 0, 0, 299);
move(19.18, 7.66, 0.00);  object(0x01BF, 0, 0, 181);
move(-7.66, -0.50, 0.00);  object(0x01BF, 0, 0, 177);
move(-6.42, -1.89, 0.00);  object(0x01BF, 0, 0, 153);
move(-7.00, -0.48, 0.00);  object(0x01BF, 0, 0, 211);
move(-7.25, 2.93, 0.00);  object(0x01BF, 0, 0, 193);
move(-17.01, 1.74, 0.00);  object(0x01BF, 0, 0, 169);
move(6.50, -3.17, -3.60);  object(0x01BF, 245, 0, 184);
move(-0.71, -5.32, 3.20);  object(0x01BF, 55, 0, 184);
move(7.52, -1.85, 0.00);  object(0x01BF, 90, 0, 197);
move(6.37, -2.09, 0.00);  object(0x01BF, 90, 0, 108);
move(26.68, 39.40, 0.50);  object(0x01BF, 0, 0, 178);
move(-30.71, 1.35, 0.00);  object(0x01BF, 0, 0, 187);
move(7.62, -1.29, 0.00);  object(0x01BF, 0, 0, 193);
move(7.32, -2.55, 0.00);  object(0x01BF, 0, 0, 200);
move(6.88, -0.68, 0.00);  object(0x01BF, 0, 0, 163);
move(17.04, -45.82, 2.90);  object(0x01BF, 90, 0, 94);
move(-7.05, 0.02, 0.00);  object(0x01BF, 90, 0, 93);
move(-6.67, 0.44, 0.00);  object(0x01BF, 90, 0, 94);
move(-7.33, 1.37, 0.00);  object(0x01BF, 90, 0, 94);
move(-6.29, 0.95, 0.00);  object(0x01BF, 90, 0, 92);
move(24.73, 3.26, 0.10);  object(0x01BF, 90, 0, 81);
move(-5.70, 1.24, 0.00);  object(0x01BF, 90, 0, 81);
move(-5.67, 1.06, 0.00);  object(0x01BF, 90, 0, 81);
move(-6.01, 1.13, -0.20);  object(0x01BF, 90, 0, 81);
move(-5.91, -1.41, 0.00);  object(0x01BF, 90, 0, 106);
move(23.55, 5.34, 0.00);  object(0x01BF, 90, 0, 5);
move(-6.93, 0.85, 0.00);  object(0x01BF, 90, 0, 282);
move(-6.42, 0.60, 0.00);  object(0x01BF, 90, 0, 281);
move(-4.57, -0.77, 0.00);  object(0x01BF, 90, 0, 271);
move(-12.97, 0.82, 0.00);  object(0x01BF, 90, 0, 41);
move(-5.18, 2.05, 0.00);  object(0x01BF, 90, 0, 15);
move(4.36, -6.93, 0.00);  object(0x01BF, 90, 0, 108);
move(-4.49, 0.69, 0.00);  object(0x01BF, 90, 0, 97);
move(-4.50, 2.54, 0.00);  object(0x01BF, 90, 0, 116);
move(-2.97, 5.35, 0.00);  object(0x01BF, 90, 0, 183);
move(-2.54, -2.43, 0.00);  object(0x01BF, 90, 0, 111);
move(-2.09, 1.23, 0.00);  object(0x01BF, 90, 0, 224);
move(10.68, 29.05, 0.00);  object(0x01BF, 90, 0, 14);
move(-6.62, -2.50, 0.00);  object(0x01BF, 90, 0, 359);
move(-11.25, -17.49, 0.00);  object(0x01BF, 90, 0, 235);
move(16.91, 13.51, 0.00);  object(0x01BF, 90, 0, 14);
move(-1.31, -6.53, 0.00);  object(0x01BF, 90, 0, 15);
move(-2.31, -6.26, 0.00);  object(0x01BF, 90, 0, 19);
move(13.22, 17.36, 0.00);  object(0x01BF, 90, 0, 14);
move(7.68, -1.58, 0.00);  object(0x01BF, 90, 0, 9);
move(-30.23, -9.23, 0.00);  object(0x01BF, 90, 0, 311);
move(3.32, 5.90, 0.00);  object(0x01BF, 90, 0, 284);
move(3.54, 4.16, 0.00);  object(0x01BF, 90, 0, 344);
move(18.93, 0.05, 0.00);  object(0x01BF, 90, 0, 28);
move(-3.46, -6.42, 0.00);  object(0x01BF, 90, 0, 29);
move(-2.14, 0.40, 0.00);  object(0x01BF, 90, 0, 353);
move(-1.37, -5.83, 0.00);  object(0x01BF, 90, 0, 352);
move(-1.77, -7.73, 0.00);  object(0x01BF, 90, 0, 28);
move(14.09, 12.74, 0.00);  object(0x01BF, 90, 0, 346);
move(7.03, 6.06, 0.00);  object(0x01BF, 90, 0, 334);
move(0.98, -6.10, 0.00);  object(0x01BF, 90, 0, 317);
move(6.29, 8.55, 0.00);  object(0x01BF, 90, 0, 341);
move(-0.12, -6.48, 0.00);  object(0x01BF, 90, 0, 342);
move(-0.18, -6.84, 0.00);  object(0x01BF, 90, 0, 342);
move(-16.21, 3.76, 0.00);  object(0x01BF, 90, 0, 356);
move(-1.94, -6.84, 0.00);  object(0x01BF, 90, 0, 356);
move(-5.74, -4.73, 0.00);  object(0x01BF, 90, 0, 304);
move(5.43, -3.41, 0.00);  object(0x01BF, 90, 0, 125);
move(-5.44, 8.21, 0.00);  object(0x01BF, 90, 0, 250);
move(2.89, -8.08, 0.00);  object(0x01BF, 90, 0, 200);
move(5.19, 15.18, 0.00);  object(0x01BF, 90, 0, 272);
move(-0.79, -8.59, 0.00);  object(0x01BF, 90, 0, 260);
move(-0.55, -6.17, 0.00);  object(0x01BF, 90, 0, 230);
move(6.26, 2.45, 0.00);  object(0x01BF, 90, 0, 232);
move(0.52, 7.42, 0.00);  object(0x01BF, 90, 0, 274);
move(0.58, 7.30, 0.00);  object(0x01BF, 90, 0, 281);
move(2.57, 3.28, 0.00);  object(0x01BF, 90, 0, 247);
move(5.94, 1.73, 0.00);  object(0x01BF, 90, 0, 262);
move(5.58, 0.91, 0.00);  object(0x01BF, 90, 0, 256);
move(4.12, -0.12, 0.00);  object(0x01BF, 90, 0, 259);
move(-10.44, -21.09, 0.00);  object(0x01BF, 90, 0, 192);
move(8.14, -0.69, 0.00);  object(0x01BF, 90, 0, 186);
move(1.66, 4.62, 0.00);  object(0x01BF, 90, 0, 183);
move(-0.31, 5.86, 0.00);  object(0x01BF, 90, 0, 191);
move(0.32, 4.15, 0.00);  object(0x01BF, 90, 0, 68);
move(-8.15, -8.10, 0.00);  object(0x01BF, 90, 0, 150);
move(-0.51, 6.48, 0.00);  object(0x01BF, 90, 0, 143);
move(-4.85, -6.87, 0.00);  object(0x01BF, 90, 0, 144);
move(0.12, 6.31, 0.00);  object(0x01BF, 90, 0, 9);
move(0.72, -26.79, 0.00);  object(0x01BF, 90, 0, 259);
move(3.69, -0.61, 0.00);  object(0x01BF, 90, 0, 259);
move(-17.00, 2.83, 0.00);  object(0x01BF, 90, 0, 258);
move(4.05, 2.29, 0.00);  object(0x01BF, 90, 0, 30);
move(4.56, 4.75, 0.00);  object(0x01BF, 90, 0, 306);
move(5.08, -2.21, 0.00);  object(0x01BF, 90, 0, 31);
move(5.05, 0.35, 0.00);  object(0x01BF, 90, 0, 174);
move(6.68, -0.14, 0.00);  object(0x01BF, 90, 0, 4);
move(-3.26, -5.43, 0.00);  object(0x01BF, 90, 0, 356);
//weapon spawns
//brass knuckles
setfloat(0x08e2d800, 57.15, -1654.00, 31.15);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//chisel
setfloat(0x08e2d860, 54.57, -1654.37, 31, 15);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//hockey stick
setfloat(0x08e2d8c0, 51.16, -1654.48, 31.15);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
//nightstick
setfloat(0x08e2d920, 47.73, -1654.33, 31.05);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
//butcher knife
setfloat(0x08e2d980, 47.73, -1654.33, 32.05);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
//baseball bat
setfloat(0x08e2d9e0, 45.10, -1654.26, 31.05);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
//fire axe
setfloat(0x08e2da40, 44.54, -1650.88, 31.05);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
//meat cleaver
setfloat(0x08e2daa0, 45.62, -1645.52, 31.05);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
//machete
setfloat(0x08e2db00, 47.63, -1644.42, 31.05);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
//katana
setfloat(0x08E2DB60, 50.49, -1644.39, 31.05);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
//chainsaw
setfloat(0x08E2DBC0, 55.05, -1644.41, 31.05);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
//Grenade
setfloat(0x08E2DC20, 40.49, -1644.33, 26.11);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0x1, 0x1);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
//Remote Grenade
setfloat(0x08E2DC80, 41.63, -1642.23, 26.12);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0x1, 0x1);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
//Molotovs
setfloat(0x08E2DD40, 42.80, -1639.58, 26.13);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0x1, 0x1);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
//Pistol
setfloat(0x08E2DDA0, 43.81, -1637.78, 26.14);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0x1, 0x1);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
//Colt Python
setfloat(0x08E2DE00, 44.70, -1636.65, 26.14);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0x1, 0x1);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
//AK-47
setfloat(0x08E2DF80, 45.83, -1634.99, 26.14);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0x1, 0x1);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
//M4
setfloat(0x08E2DFE0, 46.82, -1633.57, 26.14);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0x1, 0x1);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
//Chromed Shotgun
setfloat(0x08E2DE60, 48.21, -1632.54, 26.15);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0x1, 0x1);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
//Spaz Shotgun
setfloat(0x08E2DEC0, 49.72, -1631.64, 26.15);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0x1, 0x1);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
//Combat Shotgun
setfloat(0x08E2DF20, 51.55, -1631.17, 26.15);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0x1, 0x1);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
//Tec-9
setfloat(0x08E2E040, 94.11, -1630.45, 26.15);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0x1, 0x1);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
//Micro SMG
setfloat(0x08E2E0A0, 96.43, -1629.93, 26.16);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0x1, 0x1);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
//Mac 10
setfloat(0x08E2E100, 98.39, -1630.02, 26.16);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0x1, 0x1);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
//MP5
setfloat(0x08E2E160, 99.64, -1632.39, 26.15);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0x1, 0x1);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
//Rocket Launcher
setfloat(0x08E2E280, 99.13, -1635.44, 26.14);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0x1, 0x1);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
//Flame Thrower
setfloat(0x08E2E2E0, 99.75, -1638.02, 26.14);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0x1, 0x1);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
//M60
setfloat(0x08E2E340, 99.81, -1640.61, 26.13);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0x1, 0x1);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
//Sniper Rifle
setfloat(0x08E2E1C0, 99.88, -1643.29, 26.12);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0x1, 0x1);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
//LS Sniper Rifle
setfloat(0x08E2E220, 99.95, -1646.24, 26.12);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0x1, 0x1);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
//Deimos SP
setchar(0x8E4EB20, 130);
setchar(0x8E4EB20 + 0x18, 0x01);
setfloat(0x8E4EB24, 93.56, -1661.96, 26.08, 90);
//Phobos VT
setchar(0x8E4EAF4, 186);
setchar(0x8E4EAF4 + 0x18, 0x01);
setfloat(0x8E4EAF8, 93.67, -1668.33, 26.06, 90);
//Banshee
setchar(0x8E4EA9C, 160);
setchar(0x8E4EA9C + 0x18, 0x01);
setfloat(0x8E4EAA0, 95.48, -1675.22, 26.05, 90);
//Hellenbach GT
setchar(0x08E4Ec54, 185);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, 89.43, -1676.26, 26.04, 180);
//Stinger
setchar(0x08E4Ecd8, 133);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, 82.09, -1675.97, 26.04, 180);
//Infernus
setchar(0x08E4Ec28, 142);
setchar(0x08E4Ec28 + 0x18, 0x01);
setfloat(0x08E4Ec2c, 75.22, -1674.56, 26.04, 180);
//V8 Ghost
setchar(0x08E4Eba4, 187);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 75.15, -1667.31, 27.44, 90);
//Cheetah
setchar(0x08E4Ebfc, 146);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 77.68, -1662.38, 26.09, 90);
//Leone Sentinel
setchar(0x08E4Ebfc, 172);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 63.53, -1663.76, 26.06, 180);
//Diablo Stallion
setchar(0x08E4E9EC, 175);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 55.83, -1662.34, 26.07, 180);
//Hoods Rumpo XL
setchar(0x08E4Ea44, 177);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 49.39, -1656.94, 26.08, 180);
//Yardie Lobo
setchar(0x08E4Ea70, 173);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, 43.87, -1651.64, 26.09, 180);
//Yakuza Stinger
setchar(0x08E4Eac8, 174);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 47.11, -1642.49, 26.79, 90);
//Sindacco Argento
setchar(0x08E4Eb78, 190);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 53.04, -1644.30, 26.79, 90);
//Cartel Cruiser
setchar(0x08E4Ea18, 176);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 57.38, -1645.32, 26.80, 90);
//Forelli Excess
setchar(0x8E4EB4C, 191);
setchar(0x8E4EB4C + 0x18, 0x01);
setfloat(0x8E4EB50, 61.64, -1645.66, 26.79, 90);
//Angel
setchar(0x08E4E9EC, 202);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 28.49, -1634.53, 26.13, 0);
//PCJ-600
setchar(0x08E4Ea44, 205);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 24.56, -1634.48, 26.13, 0);
//Freeway
setchar(0x08E4Ea70, 207);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, 27.33, -1634.43, 26.79, 0);
//Sanchez
setchar(0x08E4Eac8, 210);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 25.75, -1634.58, 26.79, 0);
//Avenger
setchar(0x08E4Eb78, 208);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 25.75, -1634.06, 26.16, 0);
//Manchez
setchar(0x08E4Ea18, 209);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 19.91, -1631.96, 26.16, 0);
//Hunter, Dodo, Mavericks next to showroom
moveto(-0.62, -1641.88, 26.66);  object(0x01BF, 300, 0, 107);
move(0.19, 0.41, 0.00);  object(0x01BF, 300, 0, 103);
move(-4.59, 1.37, 2.60);  object(0x01BF, 300, 0, 111);
move(-5.14, 2.10, 1.60);  object(0x01BF, 90, 0, 108);
move(-6.36, 1.93, 0.00);  object(0x01BF, 90, 0, 107);
move(8.56, 5.14, 0.00);  object(0x01BF, 90, 0, 108);
move(-6.31, 2.08, 0.00);  object(0x01BF, 90, 0, 108);
move(-7.62, -5.58, 0.00);  object(0x01BF, 90, 0, 109);
move(2.27, 7.19, 0.00);  object(0x01BF, 90, 0, 107);
move(-6.10, 1.90, 0.00);  object(0x01BF, 90, 0, 107);
move(-2.34, -7.34, 0.00);  object(0x01BF, 90, 0, 108);
move(-5.07, 2.92, 0.00);  object(0x01BF, 90, 0, 107);
move(1.84, 6.18, 0.00);  object(0x01BF, 90, 0, 106);
move(-5.97, 1.67, -1.90);  object(0x01BF, 60, 0, 106);
move(-3.52, 0.89, -2.20);  object(0x01BF, 60, 0, 103);
//Hunter
setchar(0x08E4Ea18, 213);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, -16.23, -1631.09, 32.10, 0);
//Dodo
setchar(08E4Ed88, 164);
setchar(08E4Ed88 + 0x18, 0x01);
setfloat(08E4Ed8c, -27.11, -1627.33, 32.10, 0);
//Maverick
setchar(0x08E4E9C0, 214);
setfloat(0x08E4E9C4, 272.15, -422.6, 26.02);
setfloat(0x08E4E9D0, 0);
//Police Maverick
setchar(0x08E4E9C0, 214);
setfloat(0x08E4E9C4, -50.34, -1614.54, 26.15);
setfloat(0x08E4E9D0, 0);
teleport(82.94, -1623.88, 26.17)
off()

#cheat Changed to White
//ID: 14060
//Score: 18
//Author: rashon125
//Category: Misc
//Description: When you throw a molotov or teargas, the color is white instead of red-orange. Flames from cars are now white. Fire hydrant water is now white. Ferry smoke is now white. And more... Check out this cheat.
//Image: none
//Time: 03/07/2006 00:00:12
//Working: Yes
// Cheats Found by Vettefan88 and theY4Kman
// Script Written by theY4Kman
// Rocket Smoke
sethex(0x967EB9C, 0xFF, 0xFF, 0xFF);
// Car Collison Dust
sethex(0x967E4AC, 0xFF, 0xFF, 0xFF);
// Ferry Chimney Smoke
sethex(0x967EF14, 0xFF, 0xFF, 0xFF);
// Water Hydrant
sethex(0x967DC94, 0xFF, 0xFF, 0xFF);
// Flamethrower Flame
sethex(0x967C980, 0xFF, 0xFF, 0xFF);
// Flames
sethex(0x0967C8EC, 0xFF, 0xFF, 0xFF);
// Teargas
sethex(0x967CEB4, 0xFF, 0xFF, 0xFF);

#cheat Car Damage Smoke Changed to Dark Black
//ID: 14062
//Score: 31
//Author: rashon125
//Category: Vehicle
//Description: When your car gets damaged, it'll change to this dark black color so you'll be confused whether your vehicle is really on fire or not.
//Image: none
//Time: 03/07/2006 00:06:19
//Working: Yes
// Cheats Found by Vettefan88 and theY4Kman
// Script Written by theY4Kman
// Engine Smoke
sethex(0x967E134, 0x00, 0x00, 0x00);
// Engine Smoke 2
sethex(0x967E1C8, 0x00, 0x00, 0x00);
// Car Flame Smoke
sethex(0x967E25C, 0x00, 0x00, 0x00);

#cheat Car Park in Portland v1.0
//ID: 14308
//Score: 62
//Author: rashon125
//Category: Vehicle
//Description: This is a car park in the Portland Docks. Get teleport off of Cheatsync. Cars include the FBI Cruiser, Rhino, Avenger, Manchez and many more! To see more of my cheats including Rashon125's Car Showroom, search rashon125! Special th
//Image: none
//Time: 07/07/2006 01:29:03
//Working: Yes
//Deimos SP
setchar(0x08E4Ebfc, 130);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 1365.53, -994.60, 11.63, 270);
//Stinger
setchar(0x08E4Ebfc, 133);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 1365.53, -999.60, 11.63, 270);
//Patriot
setchar(0x08E4Ea44, 137);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 1365.53, 1365.53, 11.63, 270);
//Infernus
setchar(0x08E4Ea70, 142);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, 1365.53, -1009.60, 11.63, 270);
//Cheetah
setchar(0x08E4Eac8, 146);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 1365.53, -1014.60, 11.63, 270);
//V8 Ghost
setchar(0x08E4Eb78, 187);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 1265.53, -1019.60, 11.63, 270);
//Phobos VT
setchar(0x08E4Ebd0, 186);
setchar(0x08E4Ebd0 + 0x18, 0x01);
setfloat(0x08E4Ebd4, 1365.53, -1024.60, 11.63, 270);
//Second Level
//Bickle '76
setchar(0x08E4Ea18, 181);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 1377.53, -1027.60, 11.63, 90);
//Leone Sentinel
setchar(0x8E4EB4C, 172);
setchar(0x8E4EB4C + 0x18, 0x01);
setfloat(0x8E4EB50, 1377.53, -1022.60, 11.63, 90);
//Yakuza Stinger
setchar(0x8E4EB20, 174);
setchar(0x8E4EB20 + 0x18, 0x01);
setfloat(0x8E4EB24, 1377.53, -1017.60, 11.63, 90);
//Diablo Stallion
setchar(0x8E4EAF4, 175);
setchar(0x8E4EAF4 + 0x18, 0x01);
setfloat(0x8E4EAF8, 1377.53, -1012.60, 11.63, 90);
//Angel
setchar(0x8E4EA9C, 181);
setchar(0x8E4EA9C + 0x18, 0x01);
setfloat(0x8E4EAA0, 1364.53, -988.60, 11.63, 90);
//Avenger
setchar(0x08E4Ec54, 208);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, 1364.53, -983.60, 11.63, 90);
//Sanchez
setchar(0x08E4Ecd8, 210);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, 1364.53, -978.60, 11.63, 90);
//Top Floor
//Manchez
setchar(0x08E4Ec28, 209);
setchar(0x08E4Ec28 + 0x18, 0x01);
setfloat(0x08E4Ec2c, 1364.53, -973.60, 11.63, 90);
//PCJ-600
setchar(08E4Ee0c, 205);
setchar(08E4Ee0c + 0x18, 0x01);
setfloat(08E4Ee10, 1364.52, -968.60, 11.63, 90);
//Freeway
setchar(08E4Ede0, 207);
setchar(08E4Ede0 + 0x18, 0x01);
setfloat(08E4Ede4, 1364.53, -962.60, 11.63, 90);
//Rhino
setchar(0x08E4E9c0, 162);
setchar(0x08E4E9c0 + 0x18, 0x01);
setfloat(0x08E4E9c4, 1376.53, -988.60, 11.63, 270);
//FBI Cruiser
setchar(0x08E4Ecac, 148);
setchar(0x08E4Ecac + 0x18, 0x01);
setfloat(0x08E4Ecb0, 1376.53, -983.60, 11.63, 270);
//Enforcer
setchar(0x08E4Eba4, 158);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 1376.53, -978.60, 11.63, 270);
//Police Car
setchar(08E4Ed88, 157);
setchar(08E4Ed88 + 0x18, 0x01);
setfloat(08E4Ed8c, 1376.53, -973.60, 11.63, 270);
//Boat
//Police Predator
setchar(08E4Ed04, 196);
setchar(08E4Ed04 + 0x18, 0x01);
setfloat(08E4Ed08, 1379.80, -1047.75, 1.41, 180);
teleport(1371.16, -979.32, 11.93)
off()

#cheat Teleport to "Hello Again!" Sign In Staunton
//ID: 14292
//Score: 46
//Author: rashon125
//Category: Teleport
//Description: It's self explanatory. Pic soon.
//Image: http://i70.photobucket.com/albums/i97/rashon125/HelloAgainSign.jpg
//Time: 06/07/2006 21:44:43
//Working: Yes
teleport(-40.81, -1543.02, 26.04)

#cheat Landstalker, Pimped out Version
//ID: 14289
//Score: 24
//Author: rashon125
//Category: Pimp My Garage
//Description: This family van has better traction and speed. To see other of my great cheats, search rashon125.
//Image: none
//Time: 06/07/2006 21:36:34
//Working: Yes
setfloat(0x943f86c, 1);
setfloat(0x9459718, 0.75);
setfloat(0x945979c, 0.87867);
setfloat(0x94597a0, 0.87867);
setfloat(0x9459794, 0.002);
setfloat(0x945971c, 0);
sethex(0x94597e0, 0x0b, 0xc0, 0x00, 0x04);
sethex(0x944fb00, 0x00, 0x00, 0x00);
sethex(0x944fb38, 0xFF, 0xFF, 0xFF);
setint(0x8E38A38, 131);
setchar(0x8E38A5C, 104, 118);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);

#cheat Changes Health Pickups To Cameras
//ID: 14280
//Score: 30
//Author: rashon125
//Category: Misc
//Description: Replaces health pickups into cameras. It's self-explanatory.
//Image: none
//Time: 06/07/2006 19:37:10
//Working: Yes
//Made with Waterbottle's object replacer
setshort(0926A50E , 0x0124);

#cheat Pimped out V8 Ghost
//ID: 14245
//Score: 13
//Author: rashon125
//Category: Pimp My Garage
//Description: If you haven't completed the Love Media Garage list yet, this is a great car to cruise around in until you get the V8 Ghost at your safehouse. This has slightly bigger tires, better traction, better top speed, and better suspension. To search for other of
//Image: none
//Time: 05/07/2006 20:53:17
//Working: Unknown
setfloat(0x9444fec, 0.8);
setfloat(0x945cf58, 0.8);
setfloat(0x945d010, 0.15);
setfloat(0x945d014, -0.19999);
setfloat(0x945cfdc, 1.11534);
setfloat(0x945cfe0, 1.11534);
setfloat(0x945cfd4, 0.0031);
setfloat(0x945d00c, 0.15);
setfloat(0x945d000, 0.5);
setfloat(0x945cf5c, 0);
sethex(0x945d020, 0x00, 0x20, 0x00, 0x04);
sethex(0x944fb24, 0x89, 0x99, 0xD4);
sethex(0x944fb3c, 0x89, 0x99, 0xD4);
setint(0x8E38A38, 187);
setchar(0x8E38A5C, 113, 119);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);

#cheat 1999 Pontiac Phobos VT
//ID: 14196
//Score: 16
//Author: rashon125
//Category: Pimp My Garage
//Description: Now this Phobos has sports rims and is faster with better traction. For the first time, you can ride in grass and sand.
//Image: none
//Time: 04/07/2006 18:57:21
//Working: Yes
setshort(0x9444e60, 250);
setfloat(0x945ce60, 1500);
setfloat(0x945ce68, 0.75);
setfloat(0x945ceec, 1.057);
setfloat(0x945cef0, 1.057);
setfloat(0x945cee4, 0.003);
setfloat(0x945cf10, 0.5);
setfloat(0x945ce6c, 0);
sethex(0x945cf30, 0x00, 0x00, 0x00, 0x04);
sethex(0x944fb50, 0x65, 0x9B, 0x7B);
sethex(0x944faf4, 0xCA, 0xDA, 0xCF);
setint(0x8E38A38, 186);
setchar(0x8E38A5C, 124, 101);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);

#cheat Teleport to Katana In Belleville Park
//ID: 14326
//Score: 28
//Author: rashon125
//Category: Teleport
//Description: Looking for a weapon to chop heads off with? Get this. It teleports you to a katana in Staunton.
//Image: none
//Time: 07/07/2006 17:16:47
//Working: Yes
teleport(113.02, -1256.13, 26.17)

#cheat Teleport to Sniper Rifle In Torrington
//ID: 14327
//Score: 26
//Author: rashon125
//Category: Teleport
//Description: Looking for a gun to shoot heads off? Get this. It teleports you to a sniper rifle in Torrington, Staunton.
//Image: none
//Time: 07/07/2006 17:18:52
//Working: Yes
teleport(312.02, -1534.25, 39.46)

#cheat Taxi Guy Wears Light Brown
//ID: 14101
//Score: 27
//Author: rashon125
//Category: Pedestrians
//Description: The Taxi guy is now light brown. No, no, I mean he wears all brown.
//Image: none
//Time: 03/07/2006 19:23:12
//Working: Yes
//made with waterbottles taxiguy editor
setchar(0x09b4607e, 0);
setchar(09b460de, 0);
setchar(09b460ae, 0);
setchar(09b4613e, 0);
setchar(09b4616e, 0);
setchar(09b4610e, 0);
setchar(09b4601e, 0);
setchar(09b45fee, 0);
setchar(09b45fbe, 0);
setchar(09b45f8e, 0);
setchar(09b45f5e, 0);
setchar(09b45f2e, 0);
setchar(09b4604e, 0);

#cheat Avenger in Portland Garage
//ID: 14067
//Score: 13
//Author: rashon125
//Category: Pimp My Garage
//Description: Lost your Avenger after doing Avenging Angels Missions? Then get this tweaked Avenger in your Portland Garage.
//Image: none
//Time: 03/07/2006 00:19:27
//Working: Unknown
setfloat(0x945d93c, 1.09467);
setfloat(0x945d940, 1.09467);
setfloat(0x945d934, 0.0047);
setfloat(0x945d95c, 0.85);
setfloat(0x945d960, 0.52);
setfloat(0x945d8bc, 0);
sethex(0x945d980, 0x03, 0x01, 0x01, 0x04);
sethex(0x944fb48, 0xFF, 0xFF, 0x00);
sethex(0x944fb50, 0xFF, 0x00, 0xFF);
setint(0x8E38988, 208);
sethex(0x8E389AE, 0x01, 0x00);
teleport(1155.71, -257.05, 17.30);
setchar(pplayer + 0xB84, 0x00);

#cheat Pimped out Dodo
//ID: 14135
//Score: 22
//Author: rashon125
//Category: Pimp My Garage
//Description: You want to fly something in Liberty City for once? Then get this fire proof Dodo so you won't have to worry about catching fire while in the sky. It's faster to take off too.
//Image: none
//Time: 04/07/2006 02:22:38
//Working: Yes
setfloat(0x945b6f8, 0.7);
setfloat(0x945b77c, 0.55334);
setfloat(0x945b780, 0.55334);
setfloat(0x945b774, 0.002);
setfloat(0x945b6fc, 0);
sethex(0x945b7c0, 0x00, 0x80, 0x04, 0x00);
sethex(0x944fb24, 0xFF, 0xFF, 0x00);
sethex(0x944fb50, 0xFF, 0x00, 0xFF);
setint(0x8E38AE8, 164);
sethex(0x8E38B0E, 0x01, 0x00);
teleport(-789.61, 300.62, 49.05);
setchar(pplayer + 0xB84, 0x00);

#cheat Pimped out Diablo Stallion
//ID: 14134
//Score: 13
//Author: rashon125
//Category: Pimp My Garage
//Description: This is an extremely rare car in Hepburn Heights so if you're tired of waiting, get this more pimped out version of the Diablo Stallion.
//Image: none
//Time: 04/07/2006 02:19:24
//Working: Unknown
setchar(0x945c672, 0x5);
setfloat(0x945c5f0, 1500);
setfloat(0x945c5f8, 0.75);
setfloat(0x945c67c, 0.95867);
setfloat(0x945c680, 0.95867);
setfloat(0x945c674, 0.004);
setfloat(0x945c69c, 0.85);
setfloat(0x945c5fc, 0);
sethex(0x945c6c0, 0x00, 0x01, 0x00, 0x04);
sethex(0x944fb28, 0xFF, 0xFF, 0x00);
sethex(0x944fb54, 0xFF, 0x00, 0xFF);
setint(0x8E38988, 175);
sethex(0x8E389AE, 0x01, 0x00);
teleport(1155.71, -257.05, 17.30);
setchar(pplayer + 0xB84, 0x00);

#cheat Hellenbach GT Now With Sports Rims!
//ID: 14195
//Score: 22
//Author: rashon125
//Category: Pimp My Garage
//Description: Now the Hellenbach GT is officially classified as a sports car. Now it has 18" sports rims instead of classic rims. Find this in your Portland Garage.
//Image: none
//Time: 04/07/2006 18:54:13
//Working: Yes
setchar(0x945cdf2, 0x5);
setshort(0x9444cd0, 250);
setfloat(0x945cd70, 1250);
setfloat(0x945cdfc, 1.12);
setfloat(0x945ce00, 1.12);
setfloat(0x945cdf4, 0.004);
setfloat(0x945cd7c, 0);
sethex(0x945ce40, 0x00, 0x80, 0x00, 0x04);
sethex(0x944fb38, 0x65, 0x9B, 0x7B);
sethex(0x944fb00, 0xA6, 0xD9, 0xF8);
setint(0x8E38988, 185);
setchar(0x8E389AC, 118, 104);
sethex(0x8E389AE, 0x01, 0x00);
teleport(1155.71, -257.05, 17.30);
setchar(pplayer + 0xB84, 0x00);

#cheat All Weapon Set Reinforcements At My Showroom
//ID: 14150
//Score: 73
//Author: rashon125
//Category: Weapons
//Description: You can spawn all weapons from weapon set cheats next to my showroom. That's about 20 weapons. It's great so you won't lose street creds.
//Image: none
//Time: 04/07/2006 05:07:01
//Working: Yes
//Weapon Set 1
moveto(115.06, -1634.13, 28.55);  object(0x01BF, 0, 0, 265);
move(4.27, -3.86, 0.00);  object(0x01BF, 0, 0, 181);
move(4.50, 4.04, 0.00);  object(0x01BF, 0, 0, 97);
move(-2.88, -0.04, 3.30);  object(0x01BF, 90, 0, 93);
move(-2.20, 0.12, 0.00);  object(0x01BF, 90, 0, 93);
move(2.11, 6.49, -1.10);  object(0x01BF, 70, 0, 187);
move(0.14, 2.87, 2.10);  object(0x01B7, 0, 0, 186);
//Brass Knuckles
setfloat(0x08e2d800, 123.00, 1630.61, 26.15);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Knife
setfloat(0x08E2E400, 122.86, 1632.78, 26.15);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x109);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
//Molotovs
setfloat(0x08e2d860, 122.63, -1634.22, 26.15);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0x1, 0x1)
setshort(0x08e2d886, 0x110)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//Pistol
setfloat(0x08e2d8c0, 122.54, -1636.36, 26.14);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0x1, 0x1);
setshort(0x08e2d8e6, 0x112);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
//Tec-9
setfloat(0x08e2d920, 121.11, -1637.48, 26.14, 0);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0x1, 0x1);
setshort(0x08e2d946, 0x119);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
//Chromed Shotgun
setfloat(0x08e2d980, 18.82, -1637.34, 26.14);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0x1, 0x1);
setshort(0x08e2d9a6, 0x115);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
//AK-47
setfloat(0x08e2d9e0, 116.99, -1636.89, 26.14);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0x1, 0x1);
setshort(0x08e2da06, 0x114);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
//Flame Thrower
setfloat(0x08e2da40, 116.53, -1635.03, 26.14);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0x1, 0x1);
setshort(0x08e2da66, 0x121);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
//Sniper Rifle
setfloat(0x08e2daa0, 116.23, -1632.26, 26.15);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0x1, 0x1);
setshort(0x08e2dac6, 0x11d);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
//Health Pickup #1
setfloat(0x08e2db00, 124.38, -1627.54, 26.16);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x22e);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
//Health Pickup #2
setfloat(0x08E2DB60, 114.65, -1627.90, 26.16);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x22e);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
//Weapon Set 2
moveto(133.11, -1639.22, 28.27);  object(0x01BF, 0, 0, 188);
move(-3.92, 4.82, 0.00);  object(0x01BF, 0, 0, 268);
move(7.84, -1.08, 0.00);  object(0x01BF, 0, 0, 89);
move(-3.98, 0.17, 3.30);  object(0x01BF, 90, 0, 180);
move(-0.05, 5.91, -1.40);  object(0x01BF, 70, 0, 178);
move(0.17, 3.24, 0.80);  object(0x01B7, 0, 0, 268);
//Katana
setfloat(0x08e2d800, 136.17, -1631.97, 26.36);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x10c)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Grenades
setfloat(0x08E2E400, 135.94, -1634.15, 26.44);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0x1, 0x1);
setshort(0x08E2E426, 0x10e);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
//Colt Python
setfloat(0x08e2d860, 135.93, -1635.95, 26.51);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0x1, 0x1)
setshort(0x08e2d886, 0x113)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//Stubby Shotgun
setfloat(0x08e2d8c0, 135.86, -1636.99, 26.55);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0x1, 0x1);
setshort(0x08e2d8e6, 0x116);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
//Mac 10
setfloat(0x08e2d920, 134.74, -1638.01, 26.55, 0);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0x1, 0x1);
setshort(0x08e2d946, 0x11b);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
//M4
setfloat(0x08e2d980, 133.34, -1637.75, 26.50);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0x1, 0x1);
setshort(0x08e2d9a6, 0x118);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
//Rocket Launcher
setfloat(0x08e2d9e0, 131.07, -1636.44, 26.38);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0x1, 0x1);
setshort(0x08e2da06, 0x11f);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
//LS Sniper Rifle
setfloat(0x08e2da40, 131.01, -1634.13, 26.29);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0x1, 0x1);
setshort(0x08e2da66, 0x11e);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
//Armor Pickup #1
setfloat(0x08e2daa0, 129.44, -1627.33, 26.16);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x24b);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
//Armor Pickup #2
setfloat(0x08e2db00, 137.08, -1628.12, 26.24);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x24b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
//Weapon Set 3
moveto(147.61, -1640.94, 29.32);  object(0x01BF, 0, 0, 191);
move(4.80, 3.36, 0.00);  object(0x01BF, 0, 0, 103);
move(-8.15, 1.58, 0.00);  object(0x01BF, 0, 0, 279);
move(3.82, -1.81, 3.20);  object(0x01BF, 90, 0, 193);
move(1.39, 5.83, -1.30);  object(0x01BF, 70, 0, 193);
move(34.51, 3.60, -0.50);  object(0x01BF, 90, 0, 124);
move(-33.60, -0.49, 1.40);  object(0x01B7, 0, 0, 283);
//Chainsaw
setfloat(0x08e2d800, 152.40, -1634.09, 26.93);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x10d)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Grenades
setfloat(0x08E2E400, 152.11, -1636.06, 27.00);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x10e);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
//Colt Python
setfloat(0x08e2d860, 151.79, -1637.33, 27.04);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x113)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//Spaz Shotgun
setfloat(0x08e2d8c0, 151.25, -1638.77, 27.08);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x117);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
//MP5
setfloat(0x08e2d920, 150.08, -1638.88, 27.05, 0);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x11c);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
//M4
setfloat(0x08e2d980, 147.97, -1639.77, 26.99);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x118);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
//Minigun
setfloat(0x08e2d9e0, 145.54, -1638.40, 26.90);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x122);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
//Sniper Rifle
setfloat(0x08e2da40, 145.36, -1635.73, 26.79);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x11d);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
//Armor Pickup
setfloat(0x08e2daa0, 153.68, -1630.37, 26.64);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x24b);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
//Health Pickup
setfloat(0x08e2db00, 145.57, -1629.63, 26.55);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x22e);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
off()

#cheat Weapon Set 3 @ Rashon's Showroom
//ID: 14149
//Score: 51
//Author: rashon125
//Category: Weapons
//Description: You can spawn emergency weapons next to my showroom unlike the other two, this is Weapon Set 3. Better 'cause you won't lose criminal rating.
//Image: none
//Time: 04/07/2006 05:04:41
//Working: Yes
moveto(147.61, -1640.94, 29.32);  object(0x01BF, 0, 0, 191);
move(4.80, 3.36, 0.00);  object(0x01BF, 0, 0, 103);
move(-8.15, 1.58, 0.00);  object(0x01BF, 0, 0, 279);
move(3.82, -1.81, 3.20);  object(0x01BF, 90, 0, 193);
move(1.39, 5.83, -1.30);  object(0x01BF, 70, 0, 193);
move(34.51, 3.60, -0.50);  object(0x01BF, 90, 0, 124);
move(-33.60, -0.49, 1.40);  object(0x01B7, 0, 0, 283);
//Chainsaw
setfloat(0x08e2d800, 152.40, -1634.09, 26.93);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x10d)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Grenades
setfloat(0x08E2E400, 152.11, -1636.06, 27.00);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x10e);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
//Colt Python
setfloat(0x08e2d860, 151.79, -1637.33, 27.04);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x113)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//Spaz Shotgun
setfloat(0x08e2d8c0, 151.25, -1638.77, 27.08);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x117);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
//MP5
setfloat(0x08e2d920, 150.08, -1638.88, 27.05, 0);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x11c);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
//M4
setfloat(0x08e2d980, 147.97, -1639.77, 26.99);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x118);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
//Minigun
setfloat(0x08e2d9e0, 145.54, -1638.40, 26.90);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x122);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
//Sniper Rifle
setfloat(0x08e2da40, 145.36, -1635.73, 26.79);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x11d);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
//Armor Pickup
setfloat(0x08e2daa0, 153.68, -1630.37, 26.64);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x24b);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
//Health Pickup
setfloat(0x08e2db00, 145.57, -1629.63, 26.55);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x22e);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
off()

#cheat Weapon Set 2 @ Rashon's Showroom
//ID: 14148
//Score: 45
//Author: rashon125
//Category: Weapons
//Description: You can now spawn emergency weapons next to my showroom. It's weapon set 2. Better because you won't lose street creds.
//Image: none
//Time: 04/07/2006 05:03:13
//Working: Yes
moveto(133.11, -1639.22, 28.27);  object(0x01BF, 0, 0, 188);
move(-3.92, 4.82, 0.00);  object(0x01BF, 0, 0, 268);
move(7.84, -1.08, 0.00);  object(0x01BF, 0, 0, 89);
move(-3.98, 0.17, 3.30);  object(0x01BF, 90, 0, 180);
move(-0.05, 5.91, -1.40);  object(0x01BF, 70, 0, 178);
move(0.17, 3.24, 0.80);  object(0x01B7, 0, 0, 268);
//Katana
setfloat(0x08e2d800, 136.17, -1631.97, 26.36);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x10c)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Grenades
setfloat(0x08E2E400, 135.94, -1634.15, 26.44);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0x1, 0x1);
setshort(0x08E2E426, 0x10e);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
//Colt Python
setfloat(0x08e2d860, 135.93, -1635.95, 26.51);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0x1, 0x1)
setshort(0x08e2d886, 0x113)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//Stubby Shotgun
setfloat(0x08e2d8c0, 135.86, -1636.99, 26.55);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0x1, 0x1);
setshort(0x08e2d8e6, 0x116);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
//Mac 10
setfloat(0x08e2d920, 134.74, -1638.01, 26.55, 0);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0x1, 0x1);
setshort(0x08e2d946, 0x11b);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
//M4
setfloat(0x08e2d980, 133.34, -1637.75, 26.50);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0x1, 0x1);
setshort(0x08e2d9a6, 0x118);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
//Rocket Launcher
setfloat(0x08e2d9e0, 131.07, -1636.44, 26.38);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0x1, 0x1);
setshort(0x08e2da06, 0x11f);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
//LS Sniper Rifle
setfloat(0x08e2da40, 131.01, -1634.13, 26.29);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0x1, 0x1);
setshort(0x08e2da66, 0x11e);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
//Armor Pickup #1
setfloat(0x08e2daa0, 129.44, -1627.33, 26.16);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x24b);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
//Armor Pickup #2
setfloat(0x08e2db00, 137.08, -1628.12, 26.24);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x24b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
off()

#cheat Weapon Set 1 @ Rashon's Showroom
//ID: 14147
//Score: 45
//Author: rashon125
//Category: Weapons
//Description: You know the new showroom made by me? Well, you can spawn emergency weapons next to it. It's better than the weapon set cheat since you won't lose any criminal rating points.
//Image: none
//Time: 04/07/2006 05:00:37
//Working: Yes
moveto(115.06, -1634.13, 28.55);  object(0x01BF, 0, 0, 265);
move(4.27, -3.86, 0.00);  object(0x01BF, 0, 0, 181);
move(4.50, 4.04, 0.00);  object(0x01BF, 0, 0, 97);
move(-2.88, -0.04, 3.30);  object(0x01BF, 90, 0, 93);
move(-2.20, 0.12, 0.00);  object(0x01BF, 90, 0, 93);
move(2.11, 6.49, -1.10);  object(0x01BF, 70, 0, 187);
move(0.14, 2.87, 2.10);  object(0x01B7, 0, 0, 186);
//Brass Knuckles
setfloat(0x08e2d800, 123.00, 1630.61, 26.15);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Knife
setfloat(0x08E2E400, 122.86, 1632.78, 26.15);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x109);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
//Molotovs
setfloat(0x08e2d860, 122.63, -1634.22, 26.15);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0x1, 0x1)
setshort(0x08e2d886, 0x110)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//Pistol
setfloat(0x08e2d8c0, 122.54, -1636.36, 26.14);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0x1, 0x1);
setshort(0x08e2d8e6, 0x112);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
//Tec-9
setfloat(0x08e2d920, 121.11, -1637.48, 26.14, 0);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0x1, 0x1);
setshort(0x08e2d946, 0x119);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
//Chromed Shotgun
setfloat(0x08e2d980, 18.82, -1637.34, 26.14);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0x1, 0x1);
setshort(0x08e2d9a6, 0x115);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
//AK-47
setfloat(0x08e2d9e0, 116.99, -1636.89, 26.14);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0x1, 0x1);
setshort(0x08e2da06, 0x114);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
//Flame Thrower
setfloat(0x08e2da40, 116.53, -1635.03, 26.14);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0x1, 0x1);
setshort(0x08e2da66, 0x121);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
//Sniper Rifle
setfloat(0x08e2daa0, 116.23, -1632.26, 26.15);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0x1, 0x1);
setshort(0x08e2dac6, 0x11d);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
//Health Pickup #1
setfloat(0x08e2db00, 124.38, -1627.54, 26.16);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x22e);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
//Health Pickup #2
setfloat(0x08E2DB60, 114.65, -1627.90, 26.16);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x22e);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
off()

#cheat Pedestrian Spawner at My Showroom
//ID: 14137
//Score: 39
//Author: rashon125
//Category: Pedestrians
//Description: This spawns peds at my car showroom. See my creations for it.
//Image: none
//Time: 04/07/2006 02:47:44
//Working: Yes
//Created Using Pedestrian Spawner
//By RASAL
setfloat(099542b0-cb0, 82.94, -1623.88, 26.17);
setfloat(099542b0-0x1960, 82.94, -1623.88, 26.17);
setfloat(099542b0-0x2610, 82.94, -1623.88, 26.17);
setfloat(099542b0-0x32c0, 82.94, -1623.88, 26.17);
setfloat(099542b0-0x3F70, 82.94, -1623.88, 26.17);
setfloat(099542b0-0x4c20, 82.94, -1623.88, 26.17);
setfloat(099542b0-0x58d0, 82.94, -1623.88, 26.17);
setfloat(099542b0, 82.94, -1623.88, 26.17);
setfloat(0994c3d0, 82.94, -1623.88, 26.17);
setfloat(0994dd30, 82.94, -1623.88, 26.17);
setfloat(099542b0+cb0, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x1960, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x2610, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x32c0, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x3F70, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x4c20, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x58d0, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x6580, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x7230, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x7ee0, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x8b90, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x9840, 82.94, -1623.88, 26.17);
setfloat(099542b0+0xa4f0, 82.94, -1623.88, 26.17);
setfloat(099542b0+0xb1a0, 82.94, -1623.88, 26.17);
setfloat(099542b0+0xbe50, 82.94, -1623.88, 26.17);
setfloat(099542b0+0xcb00, 82.94, -1623.88, 26.17);
setfloat(099542b0+0xd7b0, 82.94, -1623.88, 26.17);
setfloat(099542b0+0xe460, 82.94, -1623.88, 26.17);
setfloat(099542b0+0xf110, 82.94, -1623.88, 26.17);
setfloat(099542b0+0xfdc0, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x10a70, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x11720, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x123d0, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x13080, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x13d30, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x149e0, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x15690, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x16340, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x16ff0, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x17ca0, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x18950, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x19600, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x1a2b0, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x1af60, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x1bc10, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x1c8c0, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x1d570, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x1e220, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x1eed0, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x1fb80, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x20830, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x214e0, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x22190, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x22e40, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x23af0, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x247a0, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x25450, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x26100, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x26db0, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x27a60, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x28710, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x293c0, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x2a070, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x2ad20, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x2b9d0, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x2c680, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x2d330, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x2dfe0, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x2ec90, 82.94, -1623.88, 26.17);
setfloat(099542b0+0x2f940, 82.94, -1623.88, 26.17);
off()

#cheat Pimped out Cartel Cruiser
//ID: 14136
//Score: 12
//Author: rashon125
//Category: Pimp My Garage
//Description: This is a pimped out Cartel Cruiser that the Colimbians drive in Shoreside Vale.
//Image: none
//Time: 04/07/2006 02:36:12
//Working: Unknown
setchar(0x945c762, 0x5);
setfloat(0x945c6e8, 0.7);
setfloat(0x945c76c, 0.9);
setfloat(0x945c770, 0.9);
setfloat(0x945c764, 0.003);
setfloat(0x945c6ec, 0);
sethex(0x945c7b0, 0x00, 0x00, 0x00, 0x00);
sethex(0x944fb2c, 0xFF, 0xFF, 0x00);
sethex(0x944fb1c, 0xFF, 0x00, 0xFF);
setint(0x8E38AE8, 176);
sethex(0x8E38B0E, 0x01, 0x00);
teleport(-789.61, 300.62, 49.05);
setchar(pplayer + 0xB84, 0x00);

#cheat Teleport to Health In Cochrane Dam
//ID: 14328
//Score: 27
//Author: rashon125
//Category: Teleport
//Description: Short on health? Teleport to the Cochrane Dam to get the pickup before you get wasted!
//Image: none
//Time: 07/07/2006 17:20:42
//Working: Yes
teleport(-1111.74, 535.78, 68.58)

#cheat Teleport to MP5 SMG Near Cochrane Dam
//ID: 14329
//Score: 27
//Author: rashon125
//Category: Teleport
//Description: This teleports you to Shoreside Vale where you can find an MP5 right in front of you. This SMG is strong so if you need it, get it.
//Image: none
//Time: 07/07/2006 17:22:41
//Working: Yes
teleport(-1103.11, 116.80, 58.81)

#cheat Teleport to Knife at Shoreside Vale Subway
//ID: 14331
//Score: 30
//Author: rashon125
//Category: Teleport
//Description: This teleprts you near the entrance of the Shoreside Vale Subway where there's a knife pickup. Also if you want to go bac to Staunton, you can take the subway.
//Image: none
//Time: 07/07/2006 17:27:34
//Working: Yes
teleport(-665.54, -761.54, 8.62)

#cheat Teleport to Molotovs and Health In Aspartia, SSV
//ID: 14330
//Score: 29
//Author: rashon125
//Category: Teleport
//Description: Teleport here if you're short on health and need some molotov explosives. It's in the park in Aspartia, Shoreside Vale.
//Image: none
//Time: 07/07/2006 17:25:24
//Working: Yes
teleport(-226.79, 317.55, 3.48)

#cheat Teleport to Car Park Shoreside Vale
//ID: 14346
//Score: 40
//Author: rashon125
//Category: Teleport
//Description: This teleports you to my Car Park in Shoreside Vale. Make sure you get my Car Park Shoreside Vale cheat or you'll teleport in an empty park.
//Image: none
//Time: 07/07/2006 21:35:00
//Working: Yes
teleport(-236.89, 265.96, 5.08);

#cheat Teleport to Car Park Portland
//ID: 14345
//Score: 37
//Author: rashon125
//Category: Teleport
//Description: This teleports you to my Car Park in Portland. Get one of my Car Park Portland cheats of else you'll teleport in empty docks.
//Image: none
//Time: 07/07/2006 21:31:47
//Working: Yes
teleport(1371.16, -979.32, 11.93)

#cheat Car Park at Shoreside Vale v1.0
//ID: 14342
//Score: 41
//Author: rashon125
//Category: Vehicle
//Description: This is the car park without construction. Picture soon. Get the teleport cheat off Cheatsync.
//Image: none
//Time: 07/07/2006 21:19:17
//Working: Yes
//Patriot
setchar(0x08E4Ebfc, 137);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, -222.84, 269.41, 3.12, 90);
//Deimos SP
setchar(0x08E4Ebfc, 130);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, -222.84, 274.41, 3.12, 90);
//Stinger
setchar(0x08E4Ea44, 133);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, -222.84, 279.41, 3.12, 90);
//Cheetah
setchar(0x08E4Ea70, 146);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, -222.84, 284.41, 3.12, 90);
//Hellenbach GT
setchar(0x08E4Eac8, 185);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, -222.84, 288.41, 3.12, 90);
//Phobos VT
setchar(0x08E4Eb78, 186);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, -222.84, 292.41, 3.12, 90);
//V8 Ghost
setchar(0x08E4Ebd0, 187);
setchar(0x08E4Ebd0 + 0x18, 0x01);
setfloat(0x08E4Ebd4, -222.84, 296.41, 3.12, 90);
//Infernus
setchar(0x08E4Ea18, 142);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, -222.84, 300.41, 3.12, 90);
//BF Injection
setchar(0x8E4EB4C, 155);
setchar(0x8E4EB4C + 0x18, 0x01);
setfloat(0x8E4EB50, -222.84, 320.39, 3.12, 90);
//Rhino Tank
setchar(0x8E4EB20, 162);
setchar(0x8E4EB20 + 0x18, 0x01);
setfloat(0x8E4EB24, -234.84, 308.41, 3.12, 270);
//Enforcer
setchar(0x8E4EAF4, 158);
setchar(0x8E4EAF4 + 0x18, 0x01);
setfloat(0x8E4EAF8, -234.84, 303.41, 3.12, 270);
//FBI Cruiser
setchar(0x8E4EA9C, 148);
setchar(0x8E4EA9C + 0x18, 0x01);
setfloat(0x8E4EAA0, -234.84, 298.41, 3.12, 270);
//Police Car
setchar(0x08E4Ec54, 157);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, -234.84, 293.41, 3.12, 270);
//Angel
setchar(0x08E4Ecd8, 202);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, -228.00, 319.87, 3.12, 180);
//PCJ-600
setchar(0x08E4Ec28, 205);
setchar(0x08E4Ec28 + 0x18, 0x01);
setfloat(0x08E4Ec2c, -1154.84, 321.87, 3.12, 180);
//Freeway
setchar(08E4Ee0c, 207);
setchar(08E4Ee0c + 0x18, 0x01);
setfloat(08E4Ee10, -228.00, 322.87, 3.12, 180);
//Sanchez
setchar(08E4Ede0, 210);
setchar(08E4Ede0 + 0x18, 0x01);
setfloat(08E4Ede4, -228.00, 319.87, 3.12, 165);
//Leone Sentinel
setchar(0x08E4E9c0, 172);
setchar(0x08E4E9c0 + 0x18, 0x01);
setfloat(0x08E4E9c4, -219.67, 262.76, 3.12, 90);
//Yakuza Stinger
setchar(0x08E4Ecac, 174);
setchar(0x08E4Ecac + 0x18, 0x01);
setfloat(0x08E4Ecb0, -219.67, 256.76, 3.12, 90);
//Diablo Stallion
setchar(0x08E4Eba4, 175);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, -219.67, 248.76, 3.12, 90);
//Yardie Lobo
setchar(08E4Ed88, 173);
setchar(08E4Ed88 + 0x18, 0x01);
setfloat(08E4Ed8c, -219.67, 243.76, 3.12, 90);
//boat
//Speeder Boat
setchar(08E4Ed04, 194);
setchar(08E4Ed04 + 0x18, 0x01);
setfloat(08E4Ed08, -1072.73, 321.00, 1.60, 180);
off()

#cheat Car Park at Shoreside Vale v1.1
//ID: 14341
//Score: 63
//Author: rashon125
//Category: Location Mods
//Description: This structured car park includes the Rhino, FBI Cruiser, Yakuza Stinger, and Leone Sentinel. Get the teleporter off of Cheatsync. Get it while it lasts! Picture soon!
//Image: http://i70.photobucket.com/albums/i97/rashon125/CarParkShoresideValePicture.jpg
//Time: 07/07/2006 21:05:58
//Working: Yes
moveto(-239.89, 269.96, 5.08); object(0x01BF, 0, 0, 270);
move(0.00, 7.60, 0.00); object(0x01BF, 0, 0, 270);
move(0.00, 7.70, 0.00); object(0x01BF, 0, 0, 270);
move(0.00, 7.60, 0.00); object(0x01BF, 0, 0, 270);
move(0.00, 7.30, 0.00); object(0x01BF, 0, 0, 270);
move(0.00, 7.30, 0.00); object(0x01BF, 0, 0, 270);
move(3.13, -29.43, -1.80); object(0x01BF, 270, 345, 270);
moveto(-236.70, 285.42, 5.30); object(0x01BF, 270, 345, 270);
move(-0.02, 7.40, 2.00); object(0x01BF, 270, 345, 270);
move(-0.02, 7.70, 1.00); object(0x01BF, 270, 0, 270);
move(-0.02, 7.10, 0.00); object(0x01BF, 270, 0, 270);
move(6.68, 0.02, 0.00); object(0x01BF, 270, 0, 270);
move(0.02, -7.90, 0.00); object(0x01BF, 270, 0, 270);
move(0.02, -7.70, 0.00); object(0x01BF, 270, 0, 270);
move(0.02, -7.90, 0.00); object(0x01BF, 270, 0, 270);
move(0.02, -8.00, 0.00); object(0x01BF, 270, 0, 270);
move(-6.46, -6.16, 0.00); object(0x01BF, 270, 0, 270);
move(6.47, 0.06, 0.00); object(0x01BF, 270, 0, 270);
move(6.14, 0.06, 0.00); object(0x01BF, 270, 0, 270);
move(-0.07, 7.60, 0.00); object(0x01BF, 270, 0, 270);
move(-0.07, 7.70, 0.00); object(0x01BF, 270, 0, 270);
move(-0.07, 7.70, 0.00); object(0x01BF, 270, 0, 270);
move(-0.07, 7.80, 0.00); object(0x01BF, 270, 0, 270);
move(-0.06, 6.60, 0.00); object(0x01BF, 270, 0, 270);
move(5.77, 0.06, 0.00); object(0x01BF, 270, 0, 270);
move(0.07, -7.80, 0.00); object(0x01BF, 270, 0, 270);
move(0.08, -8.00, 0.00); object(0x01BF, 270, 0, 270);
move(0.07, -7.60, 0.00); object(0x01BF, 270, 0, 270);
move(0.07, -7.70, 0.00); object(0x01BF, 270, 0, 270);
move(0.06, -6.30, 0.00); object(0x01BF, 270, 0, 270);
move(-21.75, -0.21, 3.00); object(0x01BF, 0, 0, 270);
moveto(-236.51, 277.63, 9.26); object(0x01BF, 270, 15, 90);
move(-0.07, 7.30, 2.00); object(0x01BF, 270, 15, 90);
move(-3.26, -7.13, 0.00); object(0x01BF, 0, 0, 90);
move(-0.07, 7.50, 0.00); object(0x01BF, 0, 0, 90);
move(-0.06, 6.70, 0.00); object(0x01BF, 0, 0, 90);
move(-0.06, 6.40, 0.00); object(0x01BF, 0, 0, 90);
moveto(-236.56, 291.78, 13.08); object(0x01BF, 270, 345, 270);
move(-0.00, 1.30, 0.30); object(0x01BF, 270, 345, 270);
move(-3.44, 13.19, -2.10); object(0x01BF, 0, 0, 270);
move(-0.00, 1.30, 0.00); object(0x01BF, 0, 0, 270);
move(3.35, -6.79, 3.10); object(0x01BF, 270, 0, 270);
move(-0.02, 6.70, 0.00); object(0x01BF, 270, 0, 270);
move(5.79, 0.02, 0.00); object(0x01BF, 270, 0, 270);
move(0.81, -7.60, 0.00); object(0x01BF, 270, 0, 270);
move(0.03, -7.70, 0.00); object(0x01BF, 270, 0, 270);
move(0.03, -7.90, 0.00); object(0x01BF, 270, 0, 270);
move(0.02, -6.30, 0.00); object(0x01BF, 270, 0, 270);
move(-6.48, -7.72, 0.00); object(0x01BF, 270, 0, 270);
move(6.69, 0.02, 0.00); object(0x01BF, 270, 0, 270);
move(6.12, 0.02, 0.00); object(0x01BF, 270, 0, 270);
move(-0.03, 7.60, 0.00); object(0x01BF, 270, 0, 270);
move(-0.03, 7.90, 0.00); object(0x01BF, 270, 0, 270);
move(-0.03, 7.40, 0.00); object(0x01BF, 270, 0, 270);
move(-0.02, 6.50, 0.00); object(0x01BF, 270, 0, 270);
move(-1.22, 7.70, 0.00); object(0x01BF, 270, 0, 270);
move(6.65, 0.02, 0.00); object(0x01BF, 270, 0, 270);
move(0.03, -7.70, 0.00); object(0x01BF, 270, 0, 270);
move(0.03, -7.60, 0.00); object(0x01BF, 270, 0, 270);
move(0.03, -7.70, 0.00); object(0x01BF, 270, 0, 270);
move(0.03, -7.50, 0.00); object(0x01BF, 270, 0, 270);
move(0.02, -6.60, 0.00); object(0x01BF, 270, 0, 270);
moveto(-229.76, 266.26, 5.36); object(0x01BF, 0, 0, 359);
move(0.09, -0.05, 5.90); object(0x01BF, 0, 0, 0);
move(7.40, -0.01, -6.00); object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 6.00); object(0x01BF, 0, 0, 0);
move(1.60, -0.00, 0.00); object(0x01BF, 0, 0, 0);
move(1.90, -0.00, 0.00); object(0x01BF, 0, 0, 0);
move(0.00, 0.00, -6.10); object(0x01BF, 0, 0, 0);
move(-17.13, 45.31, 0.00); object(0x01BF, 0, 0, 180);
move(-0.00, -0.13, 6.00); object(0x01BF, 0, 0, 180);
move(7.90, -0.03, 0.00); object(0x01BF, 0, 0, 180);
move(7.00, -0.02, -5.90); object(0x01BF, 0, 0, 180);
move(0.70, -0.00, 5.80); object(0x01BF, 0, 0, 180);
move(1.30, -0.00, 0.00); object(0x01BF, 0, 0, 180);
move(0.00, 0.00, -5.80); object(0x01BF, 0, 0, 180);
move(3.91, -3.97, 0.00); object(0x01BF, 0, 0, 270);
move(0.00, 0.00, 5.80); object(0x01BF, 0, 0, 270);
move(0.08, -7.40, 0.00); object(0x01BF, 0, 0, 270);
move(0.08, -7.70, 0.00); object(0x01BF, 0, 0, 270);
move(0.08, -7.80, 0.00); object(0x01BF, 0, 0, 270);
move(0.08, -7.80, 0.00); object(0x01BF, 0, 0, 270);
move(0.07, -6.50, 0.00); object(0x01BF, 0, 0, 270);
move(0.00, 0.00, -5.70); object(0x01BF, 0, 0, 270);
move(-0.08, 7.70, 0.00); object(0x01BF, 0, 0, 270);
move(-0.08, 7.91, 0.00); object(0x01BF, 0, 0, 270);
move(-0.07, 8.00, 0.00); object(0x01BF, 0, 0, 270);
move(-0.06, 6.40, 0.00); object(0x01BF, 0, 0, 270);
move(31.82, 25.74, -5.00); object(0x01BF, 270, 0, 2);
move(-0.33, -11.58, 0.00); object(0x01BF, 270, 0, 2);
move(-6.07, 11.68, 0.00); object(0x01BF, 270, 0, 2);
move(-0.19, -6.73, 0.00); object(0x01BF, 270, 0, 2);
move(-0.14, -4.80, 0.00); object(0x01BF, 270, 0, 2);
move(3.09, 14.82, -3.30); object(0x01BF, 0, 0, 2);
move(3.60, -0.10, 0.00); object(0x01BF, 0, 0, 2);
move(-2.47, -8.51, -0.10); object(0x01BF, 0, 0, 270);
move(2.19, 2.15, 0.10); object(0x01BF, 0, 0, 2);
move(-0.21, -5.34, 0.00); object(0x01BF, 0, 0, 2);
move(-3.79, -6.48, 0.00); object(0x01BF, 0, 0, 180);
move(3.86, -0.01, 0.00); object(0x01BF, 0, 0, 181);
move(3.89, 3.09, -0.70); object(0x01BF, 0, 270, 270);
move(0.17, 11.80, 0.00); object(0x01BF, 0, 270, 270);
moveto(-214.89, 302.52, 15.28); object(0x01EE, 0, 0, 271);
move(-0.06, -8.80, 0.00); object(0x01EE, 0, 0, 271);
move(-0.06, -8.80, 0.00); object(0x01EE, 0, 0, 271);
move(-0.06, -8.20, 0.00); object(0x01EE, 0, 0, 271);
move(-0.06, -9.00, 0.00); object(0x01EE, 0, 0, 271);
move(-7.32, -1.25, 0.00); object(0x01EE, 0, 0, 0);
move(-8.30, -0.06, 0.00); object(0x01EE, 0, 0, 0);
move(-8.50, -0.06, 0.00); object(0x01EE, 0, 0, 0);
move(-0.67, 7.66, 0.00); object(0x01EE, 0, 0, 90);
move(-0.01, 8.50, 0.00); object(0x01EE, 0, 0, 90);
move(-0.01, 8.50, 0.00); object(0x01EE, 0, 0, 90);
move(-0.01, 8.90, 0.00); object(0x01EE, 0, 0, 90);
move(-0.01, 9.30, 0.00); object(0x01EE, 0, 0, 90);
move(8.03, 2.12, 0.00); object(0x01EE, 0, 0, 180);
move(8.10, 0.03, 0.00); object(0x01EE, 0, 0, 180);
move(8.20, 0.03, 0.00); object(0x01EE, 0, 0, 180);
move(28.32, -0.33, -14.20); object(0x01EE, 0, 0, 0);
move(7.44, 18.06, 0.00); object(0x01EE, 0, 0, 180);
move(-0.23, -18.13, -0.60); object(0x01EF, 0, 0, 270);
move(-0.06, 12.30, -0.20); object(0x01EF, 0, 0, 270);
move(-34.98, -12.07, 14.80); object(0x020F, 0, 0, 298);
move(0.00, -44.68, 0.00); object(0x020F, 0, 0, 7);
move(-24.53, 0.01, 0.00); object(0x020F, 0, 0, 358);
move(0.06, 44.58, 0.00); object(0x020F, 0, 0, 46);
move(59.30, -0.02, -14.30); object(0x020F, 0, 0, 76);
move(0.42, 18.22, 0.00); object(0x020F, 0, 0, 299);
move(-35.40, -4.47, 2.20); object(0x020F, 0, 0, 249);
move(-0.06, -10.70, 0.00); object(0x020F, 0, 0, 249);
move(-6.44, 11.39, 0.00); object(0x020F, 0, 0, 249);
move(-6.31, -0.12, 0.00); object(0x020F, 0, 0, 249);
move(-7.83, -0.04, 0.00); object(0x020F, 0, 0, 249);
move(-8.97, -5.38, 0.00); object(0x020F, 0, 0, 249);
move(1.61, -4.95, 0.00); object(0x020F, 0, 0, 249);
moveto(-239.74, 266.17, 8.49); object(0x01EF, 0, 0, 0);
//Patriot
setchar(0x08E4Ebfc, 137);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, -222.84, 269.41, 3.12, 90);
//Deimos SP
setchar(0x08E4Ebfc, 130);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, -222.84, 274.41, 3.12, 90);
//Stinger
setchar(0x08E4Ea44, 133);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, -222.84, 279.41, 3.12, 90);
//Cheetah
setchar(0x08E4Ea70, 146);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, -222.84, 284.41, 3.12, 90);
//Hellenbach GT
setchar(0x08E4Eac8, 185);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, -222.84, 288.41, 3.12, 90);
//Phobos VT
setchar(0x08E4Eb78, 186);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, -222.84, 292.41, 3.12, 90);
//V8 Ghost
setchar(0x08E4Ebd0, 187);
setchar(0x08E4Ebd0 + 0x18, 0x01);
setfloat(0x08E4Ebd4, -222.84, 296.41, 3.12, 90);
//Infernus
setchar(0x08E4Ea18, 142);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, -222.84, 300.41, 3.12, 90);
//BF Injection
setchar(0x8E4EB4C, 155);
setchar(0x8E4EB4C + 0x18, 0x01);
setfloat(0x8E4EB50, -222.84, 320.39, 3.12, 90);
//Rhino Tank
setchar(0x8E4EB20, 162);
setchar(0x8E4EB20 + 0x18, 0x01);
setfloat(0x8E4EB24, -234.84, 308.41, 3.12, 270);
//Enforcer
setchar(0x8E4EAF4, 158);
setchar(0x8E4EAF4 + 0x18, 0x01);
setfloat(0x8E4EAF8, -234.84, 303.41, 3.12, 270);
//FBI Cruiser
setchar(0x8E4EA9C, 148);
setchar(0x8E4EA9C + 0x18, 0x01);
setfloat(0x8E4EAA0, -234.84, 298.41, 3.12, 270);
//Police Car
setchar(0x08E4Ec54, 157);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, -234.84, 293.41, 3.12, 270);
//Angel
setchar(0x08E4Ecd8, 202);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, -228.00, 319.87, 3.12, 180);
//PCJ-600
setchar(0x08E4Ec28, 205);
setchar(0x08E4Ec28 + 0x18, 0x01);
setfloat(0x08E4Ec2c, -1154.84, 321.87, 3.12, 180);
//Freeway
setchar(08E4Ee0c, 207);
setchar(08E4Ee0c + 0x18, 0x01);
setfloat(08E4Ee10, -228.00, 322.87, 3.12, 180);
//Sanchez
setchar(08E4Ede0, 210);
setchar(08E4Ede0 + 0x18, 0x01);
setfloat(08E4Ede4, -228.00, 319.87, 3.12, 165);
//Leone Sentinel
setchar(0x08E4E9c0, 172);
setchar(0x08E4E9c0 + 0x18, 0x01);
setfloat(0x08E4E9c4, -219.67, 262.76, 3.12, 90);
//Yakuza Stinger
setchar(0x08E4Ecac, 174);
setchar(0x08E4Ecac + 0x18, 0x01);
setfloat(0x08E4Ecb0, -219.67, 256.76, 3.12, 90);
//Diablo Stallion
setchar(0x08E4Eba4, 175);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, -219.67, 248.76, 3.12, 90);
//Yardie Lobo
setchar(08E4Ed88, 173);
setchar(08E4Ed88 + 0x18, 0x01);
setfloat(08E4Ed8c, -219.67, 243.76, 3.12, 90);
//boat
//Speeder Boat
setchar(08E4Ed04, 194);
setchar(08E4Ed04 + 0x18, 0x01);
setfloat(08E4Ed08, -1072.73, 321.00, 1.60, 180);
off()

#cheat Car Park in Portland v1.1
//ID: 14338
//Score: 37
//Author: rashon125
//Category: Location Mods
//Description: The car park that's in the Portland Docks now includes a construction. Picture soon. Get teleport off Cheatsync.
//Image: none
//Time: 07/07/2006 20:43:46
//Working: Yes
moveto(1364.14, -1031.20, 13.33); object(0x01BF, 0, 0, 180);
move(7.80, 0.01, 0.00); object(0x01BF, 0, 0, 180);
move(5.40, 0.01, 0.00); object(0x01BF, 0, 0, 180);
move(-5.10, -0.01, 0.00); object(0x01BF, 0, 0, 180);
move(9.10, 3.94, 0.00); object(0x01BF, 0, 0, 90);
move(-0.03, 7.60, 0.00); object(0x01BF, 0, 0, 90);
move(-0.03, 7.70, 0.00); object(0x01BF, 0, 0, 90);
move(-0.03, 7.50, 0.00); object(0x01BF, 0, 0, 90);
move(-0.03, 7.60, 0.00); object(0x01BF, 0, 0, 90);
move(-3.28, -7.42, -1.10); object(0x01BF, 270, 340, 90);
move(0.08, -7.10, 2.60); object(0x01BF, 270, 340, 90);
move(0.01, -1.10, 0.40); object(0x01BF, 270, 340, 90);
move(0.08, -7.70, 1.30); object(0x01BF, 270, 0, 90);
move(0.08, -7.00, 0.00); object(0x01BF, 270, 0, 90);
move(-6.36, -0.07, 0.00); object(0x01BF, 270, 0, 90);
move(-5.66, -0.06, 0.00); object(0x01BF, 270, 0, 90);
move(-2.72, -0.03, 0.00); object(0x01BF, 270, 0, 90);
move(8.15, 7.88, 0.00); object(0x01BF, 270, 0, 90);
move(-6.61, -0.06, 0.00); object(0x01BF, 270, 0, 90);
move(-1.46, -0.01, 0.00); object(0x01BF, 270, 0, 90);
move(8.19, 7.98, 0.00); object(0x01BF, 270, 0, 90);
move(-6.11, -0.06, 0.00); object(0x01BF, 270, 0, 90);
move(-2.08, -0.02, 0.00); object(0x01BF, 270, 0, 90);
move(8.27, 7.98, 0.00); object(0x01BF, 270, 0, 90);
move(-6.29, -0.06, 0.00); object(0x01BF, 270, 0, 90);
move(-1.97, -0.02, 0.00); object(0x01BF, 270, 0, 90);
move(8.19, 7.98, 0.00); object(0x01BF, 270, 0, 90);
move(-6.67, -0.06, 0.00); object(0x01BF, 270, 0, 90);
move(-1.50, -0.01, 0.00); object(0x01BF, 270, 0, 90);
move(14.30, 0.02, 0.00); object(0x01BF, 270, 0, 270);
move(3.27, 0.11, -3.40); object(0x01BF, 0, 0, 90);
move(-3.89, 3.88, 0.10); object(0x01BF, 0, 0, 180);
move(-13.00, 0.00, 0.00); object(0x01BF, 0, 0, 180);
move(-4.01, -4.25, 0.00); object(0x01BF, 0, 0, 270);
move(-0.00, 0.10, 0.00); object(0x01BF, 0, 0, 270);
move(0.09, -8.00, 0.00); object(0x01BF, 0, 0, 270);
move(0.09, -7.80, 0.00); object(0x01BF, 0, 0, 270);
move(0.08, -7.70, 0.00); object(0x01BF, 0, 0, 270);
move(0.08, -7.60, 0.00); object(0x01BF, 0, 0, 270);
move(0.01, -0.60, 0.00); object(0x01BF, 0, 0, 270);
move(16.98, 24.27, 4.60); object(0x01BF, 270, 200, 270);
move(0.05, -7.00, 2.50); object(0x01BF, 270, 200, 270);
move(3.55, 14.56, -0.70); object(0x01BF, 180, 0, 90);
move(-0.04, -7.81, 0.00); object(0x01BF, 180, 0, 270);
move(0.03, -7.60, 0.00); object(0x01BF, 180, 0, 270);
move(0.03, -7.60, 0.00); object(0x01BF, 180, 0, 270);
move(0.03, -7.80, 0.00); object(0x01BF, 180, 0, 270);
move(0.00, -0.70, 0.00); object(0x01BF, 180, 0, 270);
move(-3.64, 12.52, 2.30); object(0x01BF, 90, 340, 90);
move(0.05, -7.50, 1.30); object(0x01BF, 90, 0, 90);
move(0.03, -5.10, 0.00); object(0x01BF, 90, 0, 90);
move(-6.16, -0.04, 0.00); object(0x01BF, 90, 0, 90);
move(-0.05, 7.90, 0.00); object(0x01BF, 90, 0, 90);
move(-0.05, 8.00, 0.00); object(0x01BF, 90, 0, 90);
move(-0.05, 7.90, 0.00); object(0x01BF, 90, 0, 90);
move(6.57, 7.64, 0.00); object(0x01BF, 90, 0, 90);
move(-6.33, -0.04, 0.00); object(0x01BF, 90, 0, 90);
move(-6.32, -0.04, 0.00); object(0x01BF, 90, 0, 90);
move(0.05, -7.70, 0.00); object(0x01BF, 90, 0, 90);
move(0.05, -7.80, 0.00); object(0x01BF, 90, 0, 90);
move(0.05, -7.80, 0.00); object(0x01BF, 90, 0, 90);
move(0.05, -8.00, 0.00); object(0x01BF, 90, 0, 90);
move(-1.81, -0.01, 0.00); object(0x01BF, 90, 0, 90);
move(-0.05, 7.80, 0.00); object(0x01BF, 90, 0, 90);
move(-0.05, 7.90, 0.00); object(0x01BF, 90, 0, 90);
move(-0.05, 7.90, 0.00); object(0x01BF, 90, 0, 90);
move(-0.05, 7.70, 0.00); object(0x01BF, 90, 0, 90);
move(-2.93, -8.82, -3.40); object(0x01BF, 0, 0, 90);
move(0.06, -7.60, 0.00); object(0x01BF, 0, 0, 90);
move(0.06, -7.90, 0.00); object(0x01BF, 0, 0, 90);
move(0.05, -6.90, 0.00); object(0x01BF, 0, 0, 90);
move(3.96, -3.67, 0.00); object(0x01BF, 0, 0, 0);
move(5.60, 0.01, 0.00); object(0x01BF, 0, 0, 0);
move(-9.62, 34.05, 0.00); object(0x01BF, 0, 0, 90);
move(-0.00, 1.10, 0.00); object(0x01BF, 0, 0, 90);
move(4.19, 3.87, 0.00); object(0x01BF, 0, 0, 180);
move(7.90, 0.05, 0.00); object(0x01BF, 0, 0, 180);
move(4.60, 0.03, 0.00); object(0x01BF, 0, 0, 180);
move(-4.04, -39.31, 4.20); object(0x01EE, 0, 0, 0);
move(-8.30, -0.05, 0.00); object(0x01EE, 0, 0, 0);
move(-4.50, -0.03, -0.60); object(0x01F0, 0, 0, 0);
move(0.06, 7.88, 0.60); object(0x01EE, 0, 0, 90);
move(-0.02, 8.30, 0.00); object(0x01EE, 0, 0, 90);
move(-0.02, 8.40, 0.00); object(0x01EE, 0, 0, 90);
move(-0.02, 8.60, 0.00); object(0x01EE, 0, 0, 90);
move(-0.40, 6.02, -0.40); object(0x01EF, 0, 0, 90);
move(7.84, -0.14, 0.40); object(0x01EE, 0, 0, 180);
move(8.70, 0.03, 0.00); object(0x01EE, 0, 0, 180);
move(4.10, 0.01, -0.60); object(0x01F0, 0, 0, 180);
move(0.00, -7.18, 0.50); object(0x01EE, 0, 0, 270);
move(0.39, -8.39, -0.20); object(0x01EE, 0, 0, 270);
move(0.07, -8.60, 0.00); object(0x01EE, 0, 0, 270);
move(0.07, -8.30, 0.00); object(0x01EE, 0, 0, 270);
move(0.05, -5.90, 0.00); object(0x01EE, 0, 0, 270);
move(-7.70, -6.87, -23.50); object(0x01BF, 270, 0, 270);
move(0.05, -5.80, 0.00); object(0x01BF, 270, 0, 270);
move(4.98, 5.74, 0.00); object(0x01BF, 270, 0, 270);
move(4.63, 0.04, 0.00); object(0x01BF, 270, 0, 270);
move(1.62, -5.89, 0.00); object(0x01BF, 270, 0, 270);
move(-0.05, 5.40, 0.00); object(0x01BF, 270, 0, 270);
move(3.27, 0.03, -3.40); object(0x01BF, 180, 0, 270);
move(0.05, -5.40, 0.00); object(0x01BF, 180, 0, 270);
move(-17.39, 4.16, 0.00); object(0x01BF, 180, 0, 270);
move(0.01, -4.40, 0.00); object(0x01BF, 180, 0, 270);
move(6.13, 0.31, 0.00); object(0x01BF, 180, 0, 270);
move(4.74, 0.01, 0.00); object(0x01BF, 180, 0, 270);
move(-2.94, 1.59, 0.00); object(0x01BF, 180, 0, 0);
move(6.17, -5.48, -0.40); object(0x01BF, 180, 270, 0);
move(-11.30, 0.06, 0.00); object(0x01BF, 180, 270, 0);
move(0.00, 0.00, -0.50); object(0x01BF, 180, 270, 0);
move(3.20, -0.02, 4.50); object(0x01EF, 180, 180, 0);
move(11.10, -0.05, 0.00); object(0x01EF, 180, 180, 0);
move(-16.88, 6.32, -0.20); object(0x01EF, 180, 180, 90);
move(0.02, -6.20, 0.00); object(0x01EF, 180, 180, 90);
move(20.42, 10.43, 1.70); object(0x01E4, 90, 155, 0);
move(6.20, -0.05, 2.90); object(0x01E4, 90, 155, 0);
move(5.64, -0.52, 1.90); object(0x01E4, 90, 180, 270);
move(-5.73, -3.10, 1.90); object(0x01E4, 90, 205, 0);
move(-7.50, 0.02, 3.50); object(0x01E4, 90, 205, 0);
move(-6.00, 0.01, 2.80); object(0x01E4, 90, 205, 0);
move(-5.83, 2.94, 1.90); object(0x01E4, 90, 180, 88);
move(-0.06, 1.60, 0.00); object(0x01E4, 90, 180, 88);
move(-1.08, -5.61, 0.60); object(0x01EE, 180, 180, 90);
move(2.75, 3.24, 0.00); object(0x01EE, 180, 180, 90);
moveto(1381.42, -1038.57, 16.89); object(0x01EE, 0, 25, 0);
move(7.40, 0.02, -3.50); object(0x01EE, 0, 25, 0);
move(-7.59, -2.99, 3.50); object(0x01EE, 0, 25, 0);
move(7.40, 0.02, -3.40); object(0x01EE, 0, 25, 0);
move(6.60, 2.75, -3.90); object(0x01F0, 0, 25, 0);
move(3.20, 0.00, -1.40); object(0x01F0, 0, 25, 0);
move(-3.20, -2.61, 1.50); object(0x01F0, 0, 25, 0);
move(3.10, 0.00, -1.50); object(0x01F0, 0, 25, 0);
move(3.00, 0.00, -1.40); object(0x01F0, 0, 0, 0);
move(2.87, 0.27, -0.20); object(0x01EF, 0, 0, 270);
move(-9.59, 3.24, -2.40); object(0x01EE, 0, 335, 2);
move(-6.80, 0.19, -3.30); object(0x01EE, 0, 335, 2);
move(0.10, -8.38, 0.20); object(0x01EE, 0, 0, 270);
move(-10.92, 4.19, 15.70); object(0x01F0, 0, 0, 0);
move(2.71, 3.92, -0.20); object(0x01EF, 0, 0, 268);
//Deimos SP
setchar(0x08E4Ebfc, 130);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 1365.53, -994.60, 11.63, 270);
//Stinger
setchar(0x08E4Ebfc, 133);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 1365.53, -999.60, 11.63, 270);
//Patriot
setchar(0x08E4Ea44, 137);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 1365.53, 1365.53, 11.63, 270);
//Infernus
setchar(0x08E4Ea70, 142);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, 1365.53, -1009.60, 11.63, 270);
//Cheetah
setchar(0x08E4Eac8, 146);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 1365.53, -1014.60, 11.63, 270);
//V8 Ghost
setchar(0x08E4Eb78, 187);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 1265.53, -1019.60, 11.63, 270);
//Phobos VT
setchar(0x08E4Ebd0, 186);
setchar(0x08E4Ebd0 + 0x18, 0x01);
setfloat(0x08E4Ebd4, 1365.53, -1024.60, 11.63, 270);
//Second Level
//Bickle '76
setchar(0x08E4Ea18, 181);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 1377.53, -1027.60, 11.63, 90);
//Leone Sentinel
setchar(0x8E4EB4C, 172);
setchar(0x8E4EB4C + 0x18, 0x01);
setfloat(0x8E4EB50, 1377.53, -1022.60, 11.63, 90);
//Yakuza Stinger
setchar(0x8E4EB20, 174);
setchar(0x8E4EB20 + 0x18, 0x01);
setfloat(0x8E4EB24, 1377.53, -1017.60, 11.63, 90);
//Diablo Stallion
setchar(0x8E4EAF4, 175);
setchar(0x8E4EAF4 + 0x18, 0x01);
setfloat(0x8E4EAF8, 1377.53, -1012.60, 11.63, 90);
//Angel
setchar(0x8E4EA9C, 181);
setchar(0x8E4EA9C + 0x18, 0x01);
setfloat(0x8E4EAA0, 1364.53, -988.60, 11.63, 90);
//Avenger
setchar(0x08E4Ec54, 208);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, 1364.53, -983.60, 11.63, 90);
//Sanchez
setchar(0x08E4Ecd8, 210);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, 1364.53, -978.60, 11.63, 90);
//Top Floor
//Manchez
setchar(0x08E4Ec28, 209);
setchar(0x08E4Ec28 + 0x18, 0x01);
setfloat(0x08E4Ec2c, 1364.53, -973.60, 11.63, 90);
//PCJ-600
setchar(08E4Ee0c, 205);
setchar(08E4Ee0c + 0x18, 0x01);
setfloat(08E4Ee10, 1364.52, -968.60, 11.63, 90);
//Freeway
setchar(08E4Ede0, 207);
setchar(08E4Ede0 + 0x18, 0x01);
setfloat(08E4Ede4, 1364.53, -962.60, 11.63, 90);
//Rhino
setchar(0x08E4E9c0, 162);
setchar(0x08E4E9c0 + 0x18, 0x01);
setfloat(0x08E4E9c4, 1376.53, -988.60, 11.63, 270);
//FBI Cruiser
setchar(0x08E4Ecac, 148);
setchar(0x08E4Ecac + 0x18, 0x01);
setfloat(0x08E4Ecb0, 1376.53, -983.60, 11.63, 270);
//Enforcer
setchar(0x08E4Eba4, 158);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 1376.53, -978.60, 11.63, 270);
//Police Car
setchar(08E4Ed88, 157);
setchar(08E4Ed88 + 0x18, 0x01);
setfloat(08E4Ed8c, 1376.53, -973.60, 11.63, 270);
//Boat
//Police Predator
setchar(08E4Ed04, 196);
setchar(08E4Ed04 + 0x18, 0x01);
setfloat(08E4Ed08, 1379.80, -1047.75, 1.41, 180);
off()

#cheat Teleport to AK-47 In Red Light District
//ID: 14333
//Score: 33
//Author: rashon125
//Category: Teleport
//Description: On top of Sex Club Seven, there's an AK-47, teleport here and get it free!
//Image: none
//Time: 07/07/2006 17:31:09
//Working: Yes
teleport(877.12, -438.24, 23.81)

#cheat Teleport to Health in Chinatown
//ID: 14332
//Score: 30
//Author: rashon125
//Category: Teleport
//Description: If those Triads are messing with you and you now have low health, you can teleport here to replenish your health.
//Image: none
//Time: 07/07/2006 17:29:08
//Working: Yes
teleport(776.29, -537.81, 14.74)

#cheat Rashon's Car Showroom v3: Love Media Edition
//ID: 16542
//Score: 104
//Author: rashon125
//Category: Location Mods
//Description: The new hit showroom by rashon125 new is modified to have all the vehicles for the Love Media Car List in Staunton. Located in Francis International Airport.
//
//P.S.: The showroom still features Police Vehicles so you can go crazy with vigilante missions.
//Image: http://img101.imageshack.us/my.php?image=rearviewbp4.png
//Time: 18/08/2006 21:31:44
//Working: Yes
// By Rashon125
// Located at Francis International Airport
moveto(-1342.61, -586.15, 13.40);  object(0x01BF, 0, 0, 270);
move(4.23, 4.23, 0.00);  object(0x01BF, 0, 0, 0);
move(7.56, -0.03, 0.00);  object(0x01BF, 0, 0, 0);
move(7.21, -0.09, 0.00);  object(0x01BF, 0, 0, 0);
move(5.01, 0.16, 0.00);  object(0x01BF, 0, 0, 0);
move(4.16, -4.02, 0.00);  object(0x01BF, 0, 0, 90);
move(0.04, -7.86, 0.00);  object(0x01BF, 0, 0, 90);
move(0.03, -5.90, 0.00);  object(0x01BF, 0, 0, 90);
move(0.02, -8.02, 0.00);  object(0x01BF, 0, 0, 90);
move(0.05, -8.05, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.01, -8.05, 0.00);  object(0x01BF, 0, 0, 90);
move(-4.27, -4.02, 0.00);  object(0x01BF, 0, 0, 180);
move(-7.99, -0.01, 0.00);  object(0x01BF, 0, 0, 180);
move(-7.94, -0.04, 0.00);  object(0x01BF, 0, 0, 180);
move(-4.30, -0.00, 0.00);  object(0x01BF, 0, 0, 180);
move(-4.10, 4.17, 0.00);  object(0x01BF, 0, 0, 90);
move(0.00, 8.00, 0.00);  object(0x01BF, 0, 0, 90);
move(0.01, 7.28, 0.00);  object(0x01BF, 0, 0, 90);
move(12.16, 22.22, -1.60);  object(0x01BF, 240, 0, 90);
move(4.90, 0.03, 2.80);  object(0x01BF, 240, 0, 90);
move(6.22, 0.21, 2.00);  object(0x01BF, 90, 0, 90);
move(1.97, -0.19, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.07, -7.85, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.42, -0.06, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.24, -0.06, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.70, -0.07, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.13, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(8.60, 8.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.55, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.12, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(21.55, -15.51, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.36, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(0.08, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.71, 0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.41, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.12, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(21.47, -7.72, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.29, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.59, 0.01, 0.00);  object(0x01BF, 90, 0, 89);
move(-6.43, -0.22, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.56, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(22.03, -7.73, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.55, -0.04, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.35, -0.04, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.44, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.71, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(22.06, -6.22, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.53, -0.08, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.55, -0.08, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.12, -0.07, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.86, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.71, 37.79, 3.50);  object(0x01BF, 0, 0, 90);
move(-0.07, -8.01, 0.00);  object(0x01BF, 0, 0, 90);
move(0.14, -7.67, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.25, -7.42, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.18, -7.55, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.06, -6.88, 0.00);  object(0x01BF, 0, 0, 90);
move(4.70, 41.73, 0.00);  object(0x01BF, 0, 0, 180);
move(7.55, -0.02, 0.00);  object(0x01BF, 0, 0, 180);
move(7.64, -0.10, 0.00);  object(0x01BF, 0, 0, 180);
move(4.57, -0.16, 0.00);  object(0x01BF, 0, 0, 180);
move(3.89, -4.14, 0.00);  object(0x01BF, 0, 0, 270);
move(0.00, -8.02, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -6.98, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -7.76, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -7.79, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.08, -7.14, 0.00);  object(0x01BF, 0, 0, 270);
move(-4.16, -3.53, 0.00);  object(0x01BF, 0, 0, 0);
move(-19.94, -0.00, 0.00);  object(0x01BF, 0, 0, 0);
move(7.83, -2.96, -3.60);  object(0x01BF, 90, 0, 0);
move(7.80, 2.99, 3.60);  object(0x01BF, 0, 0, 0);
move(5.52, 41.38, 3.30);  object(0x01BF, 90, 0, 90);
move(-6.50, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.14, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.71, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.31, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(21.53, -7.58, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.11, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.51, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.57, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.32, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(21.45, -7.69, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.09, -0.06, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.34, -0.06, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.36, -0.06, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.59, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(21.50, -7.79, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.42, 0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.08, 0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.32, 0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.95, 0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(21.76, -7.64, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.83, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.80, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.40, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.82, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(21.96, -6.17, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.89, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.57, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.63, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.85, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(4.77, -4.85, -6.70);  object(0x01F0, 0, 0, 90);
move(0.19, -2.54, -0.10);  object(0x01F0, 0, 0, 90);
move(0.21, -2.90, 0.00);  object(0x01F0, 0, 0, 0);
move(4.46, 0.04, 0.00);  object(0x01F0, 0, 0, 0);
move(2.90, -0.06, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.06, 3.02, 0.00);  object(0x01F0, 0, 0, 270);
move(-14.86, 3.54, 7.00);  object(0x01F0, 0, 0, 0);
move(2.92, -0.13, 0.00);  object(0x01F0, 0, 0, 0);
move(3.17, 0.10, 0.00);  object(0x01F0, 0, 0, 0);
move(3.29, -0.06, 0.00);  object(0x01F0, 0, 0, 0);
move(3.52, 0.22, 0.00);  object(0x01F0, 0, 0, 0);
move(3.69, -0.12, 0.00);  object(0x01F0, 0, 0, 0);
move(3.49, -0.01, 0.00);  object(0x01F0, 0, 0, 0);
move(3.12, 0.01, 0.00);  object(0x01F0, 0, 0, 0);
move(4.12, 0.12, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.28, 3.80, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.02, 3.35, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.41, 3.85, 0.00);  object(0x01F0, 0, 0, 270);
move(0.17, 3.21, 0.00);  object(0x01F0, 0, 0, 270);
move(0.30, 2.84, 0.00);  object(0x01F0, 0, 0, 270);
move(0.06, 3.36, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.17, 3.15, 0.00);  object(0x01F0, 0, 0, 270);
move(0.02, 1.96, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.05, 3.10, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.03, 3.28, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.02, 4.02, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.16, 3.97, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.35, 4.23, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.20, 0.19, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.26, -0.20, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.01, 0.03, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.08, -0.04, 0.00);  object(0x01F0, 0, 0, 180);
move(-2.95, 0.01, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.62, -0.05, 0.00);  object(0x01F0, 0, 0, 180);
move(-4.19, -0.07, 0.00);  object(0x01F0, 0, 0, 180);
move(1.67, -0.00, 0.00);  object(0x01F0, 0, 0, 180);
move(-4.89, -0.91, 0.00);  object(0x01F0, 0, 0, 90);
move(0.23, -3.25, 0.00);  object(0x01F0, 0, 0, 90);
move(0.13, -3.79, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.13, -3.22, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.02, -3.92, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.11, -3.49, 0.00);  object(0x01F0, 0, 0, 90);
move(0.21, -3.57, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.13, -3.29, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.05, -2.98, 0.00);  object(0x01F0, 0, 0, 90);
move(0.11, -3.90, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.65, -4.06, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.02, -4.09, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.14, 1.70, 0.00);  object(0x01F0, 0, 0, 90);
move(18.49, -9.96, -6.20);  object(0x01BF, 110, 0, 270);
move(5.85, 0.03, 2.10);  object(0x01BF, 110, 0, 270);
move(6.29, 0.03, 1.00);  object(0x01BF, 90, 0, 270);
move(1.98, 7.12, 1.20);  object(0x01BF, 110, 0, 180);
move(-0.02, 6.42, 2.40);  object(0x01BF, 110, 0, 180);
move(-0.03, 7.06, 1.70);  object(0x01BF, 90, 0, 180);
move(-7.42, -0.19, 0.00);  object(0x01BF, 90, 0, 180);
move(-7.26, 0.11, -1.20);  object(0x01BF, 250, 0, 90);
move(-2.79, -24.20, -8.38);  object(0x01F0, 0, 340, 0);
move(3.50, -0.09, 1.40);  object(0x01F0, 0, 340, 0);
move(3.59, 0.04, 1.40);  object(0x01F0, 0, 340, 0);
move(14.47, 7.45, 2.10);  object(0x01F0, 0, 340, 270);
move(-0.65, 3.96, 0.90);  object(0x01F0, 0, 340, 270);
move(0.46, 4.70, 2.10);  object(0x01F0, 0, 340, 270);
move(-8.80, -15.93, -3.50);  object(0x01F0, 0, 0, 0);
move(3.33, -0.39, 0.00);  object(0x01F0, 0, 0, 0);
move(2.97, 0.60, 0.00);  object(0x01F0, 0, 0, 270);
move(0.03, 2.92, 0.00);  object(0x01F0, 0, 0, 270);
//Brass Knuckles
setfloat(0x08e2d800, -1315.90, -593.94, 17.78);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Chisel
setfloat(0x08e2d860, -1315.90, -595.94, 17.78);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//Hockey Stick
setfloat(0x08e2d8c0, -1315.90, -597.94, 17.78);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
//Nightstick
setfloat(0x08e2d920, -1315.90, -599.94, 17.78);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
//Butcher Knife
setfloat(0x08e2d980, -1315.90, -601.94, 17.78);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
//Baseball Bat
setfloat(0x08e2d9e0, -1315.90, -603.94, 17.78);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
//Fire Axe
setfloat(0x08e2da40, -1315.90, -605.94, 17.78);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
//Meat Cleaver
setfloat(0x08e2daa0, -1315.90, -607.94, 17.78);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
//Machete
setfloat(0x08e2db00, -1315.90, -609.94, 17.78);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
//Katana
setfloat(0x08E2DB60, -1315.90, -611.94, 17.78);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
//Chainsaw
setfloat(0x08E2DBC0, -1315.90, -613.94, 17.78);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
//Grenade
setfloat(0x08E2DC20, -1340.64, -625.91, 24.58);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0x1, 0x1);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
//Remote Grenade
setfloat(0x08E2DC80, -1340.64, -623.91, 24.58);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0x1, 0x1);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
//Molotovs
setfloat(0x08E2DD40, -1340.64, -621.91, 24.58);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0x1, 0x1);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
//Tear Gas
setfloat(0x08e2d800, -1340.64, -619.91, 24.58);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1, 0x1)
setshort(0x08e2d826, 0x10f)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Pistol
setfloat(0x08E2DDA0, -1340.52, -617.91, 24.58);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0x1, 0x1);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
//Colt Python
setfloat(0x08E2DE00, -1340.52, -615.91, 24.58);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0x1, 0x1);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
//AK-47
setfloat(0x08E2DF80, -1340.52, -605.91, 24.58);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0x1, 0x1);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
//M4
setfloat(0x08E2DFE0, -1340.52, -603.91, 24.58);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0x1, 0x1);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
//Chromed Shotgun
setfloat(0x08E2DE60, -1340.52, -601.91, 24.58);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0x1, 0x1);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
//Spaz Shotgun
setfloat(0x08E2DEC0, -1340.52, -599.91, 24.58);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0x1, 0x1);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
//Combat Shotgun
setfloat(0x08E2DF20, 1340.52, -597.91, 24.58);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0x1, 0x1);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
//Tec-9
setfloat(0x08E2E040, -1340.52, -613.91, 24.58);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0x1, 0x1);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
//Micro SMG
setfloat(0x08E2E0A0, -1340.52, -611.91, 24.58);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0x1, 0x1);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
//Mac 10
setfloat(0x08E2E100, -1340.52, -609.91, 24.58);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0x1, 0x1);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
//MP5
setfloat(0x08E2E160, -1340.52, -607.91, 24.58);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0x1, 0x1);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
//Rocket Launcher
setfloat(0x08E2E280, -1340.52, -595.91, 24.58);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0x1, 0x1);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
//Flame Thrower
setfloat(0x08E2E2E0, -1340.52, -593.91, 24.58);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0x1, 0x1);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
//M60
setfloat(0x08E2E340, -1340.52, -591.91, 24.58);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0x1, 0x1);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
//Minigun
setfloat(0x08E2E3A0, -1340.52, -589.91, 24.58);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0x1, 0x1);
setshort(0x08E2E3C6, 0x122);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
//Sniper Rifle
setfloat(0x08E2E1C0, -1340.52, -587.91, 24.58);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0x1, 0x1);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
//LS Sniper Rifle
setfloat(0x08E2E220, -1340.52, -585.91, 24.58);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0x1, 0x1);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
//Camera
setfloat(0x08e2d800, -1338.41, -584.56, 24.58);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1, 0x1)
setshort(0x08e2d826, 0x124)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Health Pickup
setfloat(0x08E2E400, -1336.41, -584.56, 24.58);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x22e);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
//Armor Pickup
setfloat(0x08e2d860, -1334.41, -584.56, 24.58);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x24b)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//Hearse
setchar(0x08E4Ebfc, 156);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, -1320.26, -623.65, 11.12, 90);
//Phobos VT
setchar(0x08E4E9EC, 186);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, -1320.06, -616.49, 11.12, 90);
//Infernus
setchar(0x08E4Ea44, 142);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, -1320.06, -608.70, 11.12, 90);
//Sentinel
setchar(0x08E4Ea70, 136);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, -1320.06, -600.96, 11.12, 90);
//Deimos SP
setchar(0x08E4Eac8, 130);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, -1320.06, -595.65, 11.12, 90);
//Manana
setchar(0x08E4Eb78, 141);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, -1337.54, -607.31, 11.12, 90);
//Hellenbach GT
setchar(0x08E4Ea18, 185);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, -1337.54, -615.57, 11.12, 90);
//V8 Ghost
setchar(0x8E4EB4C, 187);
setchar(0x8E4EB4C + 0x18, 0x01);
setfloat(0x8E4EB50, -1337.54, -623.26, 11.12, 90);
//Thunder-Rodd
setchar(0x8E4EB20, 189);
setchar(0x8E4EB20 + 0x18, 0x01);
setfloat(0x8E4EB24, -1326.08, -621.94, 11.12, 0);
//Banshee
setchar(0x8E4EAF4, 160);
setchar(0x8E4EAF4 + 0x18, 0x01);
setfloat(0x8E4EAF8, -1317.93, -640.28, 11.12, 270);
//Landstalker
setchar(0x8E4EA9C, 131);
setchar(0x8E4EA9C + 0x18, 0x01);
setfloat(0x8E4EAA0, -1327.02, -640.28, 11.12, 270);
//BF Injection
setchar(0x08E4Ec54, 155);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, -1364.85, -577.04, 11.12, 270);
//Patriot
setchar(0x08E4Ecd8, 137);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, -1320.39, -577.04, 11.12, 180);
//PCJ-600
setchar(0x08E4Ec28, 205);
setchar(0x08E4Ec28 + 0x18, 0x01);
setfloat(0x08E4Ec2c, -1332.85, -578.00, 11.12, 180);
//Faggio
setchar(0x08E4Eba4, 206);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, -1345.24, -636.01, 11.12, 90);
//Freeway
setchar(0x08E4Ebfc, 207);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, -1345.24, -631.45, 11.12, 90);
//Police Car
setchar(0x08E4Ec54, 157);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, -1309.85, -623.21, 11.12, 0);
//FBI Cruiser
setchar(0x08E4Ecd8, 148);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, -1309.67, -613.42, 11.12, 0);
//Enforcer
setchar(0x08E4Ec28, 158);
setchar(0x08E4Ec28 + 0x18, 0x01);
setfloat(0x08E4Ec2c, -1309.69, -603.02, 11.12, 0);
//Rhino
setchar(0x08E4Eba4, 162);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, -1308.88, -587.43, 11.12, 0);
off()

#cheat Teleport to Rashon's Car Showroom v3
//ID: 16393
//Score: 83
//Author: rashon125
//Category: Teleport
//Description: This teleports you to the revolutionary car showroom in Francis International.
//Image: http://img101.imageshack.us/img101/682/rearviewbp4.png
//Time: 13/08/2006 05:18:12
//Working: Yes
teleport(1350.90, -578.00, 11.12)

#cheat Rashon's Car Showroom Loaded v3
//ID: 16392
//Score: 216
//Author: rashon125
//Category: Location Mods
//Description: *Located At Francis Intr.
//*All Helicopter and Plane Spawns
//*Sports Car Spawns
//*Gang Car Spawns
//*Law Enforcement Vehicle Spawns
//*Muscle Car Spawns
//*The Bus and Mr. Whoppee Join Th
//Image: http://img99.imageshack.us/img99/4418/furtherfrontviewmp4.png
//Time: 13/08/2006 05:17:12
//Working: Yes
// By Rashon125
// Located at Francis International Airport
moveto(-1342.61, -586.15, 13.40);  object(0x01BF, 0, 0, 270);
move(4.23, 4.23, 0.00);  object(0x01BF, 0, 0, 0);
move(7.56, -0.03, 0.00);  object(0x01BF, 0, 0, 0);
move(7.21, -0.09, 0.00);  object(0x01BF, 0, 0, 0);
move(5.01, 0.16, 0.00);  object(0x01BF, 0, 0, 0);
move(4.16, -4.02, 0.00);  object(0x01BF, 0, 0, 90);
move(0.04, -7.86, 0.00);  object(0x01BF, 0, 0, 90);
move(0.03, -5.90, 0.00);  object(0x01BF, 0, 0, 90);
move(0.02, -8.02, 0.00);  object(0x01BF, 0, 0, 90);
move(0.05, -8.05, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.01, -8.05, 0.00);  object(0x01BF, 0, 0, 90);
move(-4.27, -4.02, 0.00);  object(0x01BF, 0, 0, 180);
move(-7.99, -0.01, 0.00);  object(0x01BF, 0, 0, 180);
move(-7.94, -0.04, 0.00);  object(0x01BF, 0, 0, 180);
move(-4.30, -0.00, 0.00);  object(0x01BF, 0, 0, 180);
move(-4.10, 4.17, 0.00);  object(0x01BF, 0, 0, 90);
move(0.00, 8.00, 0.00);  object(0x01BF, 0, 0, 90);
move(0.01, 7.28, 0.00);  object(0x01BF, 0, 0, 90);
move(12.16, 22.22, -1.60);  object(0x01BF, 240, 0, 90);
move(4.90, 0.03, 2.80);  object(0x01BF, 240, 0, 90);
move(6.22, 0.21, 2.00);  object(0x01BF, 90, 0, 90);
move(1.97, -0.19, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.07, -7.85, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.42, -0.06, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.24, -0.06, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.70, -0.07, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.13, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(8.60, 8.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.55, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.12, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(21.55, -15.51, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.36, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(0.08, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.71, 0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.41, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.12, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(21.47, -7.72, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.29, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.59, 0.01, 0.00);  object(0x01BF, 90, 0, 89);
move(-6.43, -0.22, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.56, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(22.03, -7.73, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.55, -0.04, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.35, -0.04, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.44, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.71, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(22.06, -6.22, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.53, -0.08, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.55, -0.08, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.12, -0.07, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.86, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.71, 37.79, 3.50);  object(0x01BF, 0, 0, 90);
move(-0.07, -8.01, 0.00);  object(0x01BF, 0, 0, 90);
move(0.14, -7.67, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.25, -7.42, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.18, -7.55, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.06, -6.88, 0.00);  object(0x01BF, 0, 0, 90);
move(4.70, 41.73, 0.00);  object(0x01BF, 0, 0, 180);
move(7.55, -0.02, 0.00);  object(0x01BF, 0, 0, 180);
move(7.64, -0.10, 0.00);  object(0x01BF, 0, 0, 180);
move(4.57, -0.16, 0.00);  object(0x01BF, 0, 0, 180);
move(3.89, -4.14, 0.00);  object(0x01BF, 0, 0, 270);
move(0.00, -8.02, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -6.98, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -7.76, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -7.79, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.08, -7.14, 0.00);  object(0x01BF, 0, 0, 270);
move(-4.16, -3.53, 0.00);  object(0x01BF, 0, 0, 0);
move(-19.94, -0.00, 0.00);  object(0x01BF, 0, 0, 0);
move(7.83, -2.96, -3.60);  object(0x01BF, 90, 0, 0);
move(7.80, 2.99, 3.60);  object(0x01BF, 0, 0, 0);
move(5.52, 41.38, 3.30);  object(0x01BF, 90, 0, 90);
move(-6.50, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.14, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.71, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.31, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(21.53, -7.58, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.11, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.51, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.57, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.32, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(21.45, -7.69, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.09, -0.06, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.34, -0.06, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.36, -0.06, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.59, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(21.50, -7.79, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.42, 0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.08, 0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.32, 0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.95, 0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(21.76, -7.64, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.83, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.80, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.40, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.82, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(21.96, -6.17, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.89, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.57, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.63, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.85, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(4.77, -4.85, -6.70);  object(0x01F0, 0, 0, 90);
move(0.19, -2.54, -0.10);  object(0x01F0, 0, 0, 90);
move(0.21, -2.90, 0.00);  object(0x01F0, 0, 0, 0);
move(4.46, 0.04, 0.00);  object(0x01F0, 0, 0, 0);
move(2.90, -0.06, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.06, 3.02, 0.00);  object(0x01F0, 0, 0, 270);
move(-14.86, 3.54, 7.00);  object(0x01F0, 0, 0, 0);
move(2.92, -0.13, 0.00);  object(0x01F0, 0, 0, 0);
move(3.17, 0.10, 0.00);  object(0x01F0, 0, 0, 0);
move(3.29, -0.06, 0.00);  object(0x01F0, 0, 0, 0);
move(3.52, 0.22, 0.00);  object(0x01F0, 0, 0, 0);
move(3.69, -0.12, 0.00);  object(0x01F0, 0, 0, 0);
move(3.49, -0.01, 0.00);  object(0x01F0, 0, 0, 0);
move(3.12, 0.01, 0.00);  object(0x01F0, 0, 0, 0);
move(4.12, 0.12, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.28, 3.80, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.02, 3.35, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.41, 3.85, 0.00);  object(0x01F0, 0, 0, 270);
move(0.17, 3.21, 0.00);  object(0x01F0, 0, 0, 270);
move(0.30, 2.84, 0.00);  object(0x01F0, 0, 0, 270);
move(0.06, 3.36, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.17, 3.15, 0.00);  object(0x01F0, 0, 0, 270);
move(0.02, 1.96, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.05, 3.10, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.03, 3.28, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.02, 4.02, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.16, 3.97, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.35, 4.23, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.20, 0.19, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.26, -0.20, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.01, 0.03, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.08, -0.04, 0.00);  object(0x01F0, 0, 0, 180);
move(-2.95, 0.01, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.62, -0.05, 0.00);  object(0x01F0, 0, 0, 180);
move(-4.19, -0.07, 0.00);  object(0x01F0, 0, 0, 180);
move(1.67, -0.00, 0.00);  object(0x01F0, 0, 0, 180);
move(-4.89, -0.91, 0.00);  object(0x01F0, 0, 0, 90);
move(0.23, -3.25, 0.00);  object(0x01F0, 0, 0, 90);
move(0.13, -3.79, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.13, -3.22, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.02, -3.92, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.11, -3.49, 0.00);  object(0x01F0, 0, 0, 90);
move(0.21, -3.57, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.13, -3.29, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.05, -2.98, 0.00);  object(0x01F0, 0, 0, 90);
move(0.11, -3.90, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.65, -4.06, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.02, -4.09, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.14, 1.70, 0.00);  object(0x01F0, 0, 0, 90);
move(18.49, -9.96, -6.20);  object(0x01BF, 110, 0, 270);
move(5.85, 0.03, 2.10);  object(0x01BF, 110, 0, 270);
move(6.29, 0.03, 1.00);  object(0x01BF, 90, 0, 270);
move(1.98, 7.12, 1.20);  object(0x01BF, 110, 0, 180);
move(-0.02, 6.42, 2.40);  object(0x01BF, 110, 0, 180);
move(-0.03, 7.06, 1.70);  object(0x01BF, 90, 0, 180);
move(-7.42, -0.19, 0.00);  object(0x01BF, 90, 0, 180);
move(-7.26, 0.11, -1.20);  object(0x01BF, 250, 0, 90);
move(-2.79, -24.20, -8.38);  object(0x01F0, 0, 340, 0);
move(3.50, -0.09, 1.40);  object(0x01F0, 0, 340, 0);
move(3.59, 0.04, 1.40);  object(0x01F0, 0, 340, 0);
move(14.47, 7.45, 2.10);  object(0x01F0, 0, 340, 270);
move(-0.65, 3.96, 0.90);  object(0x01F0, 0, 340, 270);
move(0.46, 4.70, 2.10);  object(0x01F0, 0, 340, 270);
move(-8.80, -15.93, -3.50);  object(0x01F0, 0, 0, 0);
move(3.33, -0.39, 0.00);  object(0x01F0, 0, 0, 0);
move(2.97, 0.60, 0.00);  object(0x01F0, 0, 0, 270);
move(0.03, 2.92, 0.00);  object(0x01F0, 0, 0, 270);
//Brass Knuckles
setfloat(0x08e2d800, -1315.90, -593.94, 17.78);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Chisel
setfloat(0x08e2d860, -1315.90, -595.94, 17.78);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//Hockey Stick
setfloat(0x08e2d8c0, -1315.90, -597.94, 17.78);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
//Nightstick
setfloat(0x08e2d920, -1315.90, -599.94, 17.78);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
//Butcher Knife
setfloat(0x08e2d980, -1315.90, -601.94, 17.78);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
//Baseball Bat
setfloat(0x08e2d9e0, -1315.90, -603.94, 17.78);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
//Fire Axe
setfloat(0x08e2da40, -1315.90, -605.94, 17.78);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
//Meat Cleaver
setfloat(0x08e2daa0, -1315.90, -607.94, 17.78);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
//Machete
setfloat(0x08e2db00, -1315.90, -609.94, 17.78);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
//Katana
setfloat(0x08E2DB60, -1315.90, -611.94, 17.78);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
//Chainsaw
setfloat(0x08E2DBC0, -1315.90, -613.94, 17.78);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
//Grenade
setfloat(0x08E2DC20, -1340.64, -625.91, 24.58);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0x1, 0x1);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
//Remote Grenade
setfloat(0x08E2DC80, -1340.64, -623.91, 24.58);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0x1, 0x1);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
//Molotovs
setfloat(0x08E2DD40, -1340.64, -621.91, 24.58);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0x1, 0x1);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
//Tear Gas
setfloat(0x08e2d800, -1340.64, -619.91, 24.58);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1, 0x1)
setshort(0x08e2d826, 0x10f)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Pistol
setfloat(0x08E2DDA0, -1340.52, -617.91, 24.58);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0x1, 0x1);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
//Colt Python
setfloat(0x08E2DE00, -1340.52, -615.91, 24.58);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0x1, 0x1);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
//AK-47
setfloat(0x08E2DF80, -1340.52, -605.91, 24.58);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0x1, 0x1);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
//M4
setfloat(0x08E2DFE0, -1340.52, -603.91, 24.58);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0x1, 0x1);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
//Chromed Shotgun
setfloat(0x08E2DE60, -1340.52, -601.91, 24.58);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0x1, 0x1);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
//Spaz Shotgun
setfloat(0x08E2DEC0, -1340.52, -599.91, 24.58);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0x1, 0x1);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
//Combat Shotgun
setfloat(0x08E2DF20, 1340.52, -597.91, 24.58);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0x1, 0x1);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
//Tec-9
setfloat(0x08E2E040, -1340.52, -613.91, 24.58);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0x1, 0x1);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
//Micro SMG
setfloat(0x08E2E0A0, -1340.52, -611.91, 24.58);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0x1, 0x1);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
//Mac 10
setfloat(0x08E2E100, -1340.52, -609.91, 24.58);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0x1, 0x1);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
//MP5
setfloat(0x08E2E160, -1340.52, -607.91, 24.58);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0x1, 0x1);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
//Rocket Launcher
setfloat(0x08E2E280, -1340.52, -595.91, 24.58);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0x1, 0x1);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
//Flame Thrower
setfloat(0x08E2E2E0, -1340.52, -593.91, 24.58);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0x1, 0x1);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
//M60
setfloat(0x08E2E340, -1340.52, -591.91, 24.58);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0x1, 0x1);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
//Minigun
setfloat(0x08E2E3A0, -1340.52, -589.91, 24.58);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0x1, 0x1);
setshort(0x08E2E3C6, 0x122);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
//Sniper Rifle
setfloat(0x08E2E1C0, -1340.52, -587.91, 24.58);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0x1, 0x1);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
//LS Sniper Rifle
setfloat(0x08E2E220, -1340.52, -585.91, 24.58);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0x1, 0x1);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
//Camera
setfloat(0x08e2d800, -1338.41, -584.56, 24.58);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1, 0x1)
setshort(0x08e2d826, 0x124)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Health Pickup
setfloat(0x08E2E400, -1336.41, -584.56, 24.58);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x22e);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
//Armor Pickup
setfloat(0x08e2d860, -1334.41, -584.56, 24.58);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x24b)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//Stallion
setchar(0x08E4Ebfc, 167);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, -1320.26, -623.65, 11.12, 90);
//Idaho
setchar(0x08E4E9EC, 132);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, -1320.06, -616.49, 11.12, 90);
//Diablo Stallion
setchar(0x08E4Ea44, 175);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, -1320.06, -608.70, 11.12, 90);
//Esperanto
setchar(0x08E4Ea70, 150);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, -1320.06, -600.96, 11.12, 90);
//Leone Sentinel
setchar(0x08E4Eac8, 172);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, -1320.06, -595.65, 11.12, 90);
//Yakuza Stinger
setchar(0x08E4Eb78, 174);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, -1337.54, -607.31, 11.12, 90);
//Cartel Cruiser
setchar(0x08E4Ea18, 176);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, -1337.54, -615.57, 11.12, 90);
//Yardie Lobo
setchar(0x8E4EB4C, 173);
setchar(0x8E4EB4C + 0x18, 0x01);
setfloat(0x8E4EB50, -1337.54, -623.26, 11.12, 90);
//Hoods Rumpo XL
setchar(0x8E4EB20, 177);
setchar(0x8E4EB20 + 0x18, 0x01);
setfloat(0x8E4EB24, -1326.08, -621.94, 11.12, 0);
//Bus
setchar(0x8E4EAF4, 161);
setchar(0x8E4EAF4 + 0x18, 0x01);
setfloat(0x8E4EAF8, -1317.93, -640.28, 11.12, 270);
//Mr. Whoopee
setchar(0x8E4EA9C, 154);
setchar(0x8E4EA9C + 0x18, 0x01);
setfloat(0x8E4EAA0, -1327.02, -640.28, 11.12, 270);
//Police Car
setchar(0x08E4Ec54, 157);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, -1309.85, -623.21, 11.12, 0);
//FBI Cruiser
setchar(0x08E4Ecd8, 148);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, -1309.67, -613.42, 11.12, 0);
//Enforcer
setchar(0x08E4Ec28, 158);
setchar(0x08E4Ec28 + 0x18, 0x01);
setfloat(0x08E4Ec2c, -1309.69, -603.02, 11.12, 0);
//Rhino
setchar(0x08E4Eba4, 162);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, -1308.88, -587.43, 11.12, 0);
//Maverick
setchar(0x08E4Ebfc, 214);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, -1400.06, -584.84, 11.12, 270);
//Police Maverick
setchar(0x8E4EAF4, 215);
setchar(0x8E4EAF4 + 0x18, 0x01);
setfloat(0x8E4EAF8, -1394.89, -542.56, 11.12, 270);
//Hunter
setchar(0x08E4Ea18, 213);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, -1396.00, -560.46, 11.12, 270);
//Dodo
setchar(08E4Ed88, 164);
setchar(08E4Ed88 + 0x18, 0x01);
setfloat(08E4Ed8c, -1364.85, -552.24, 11.12, 270);
//Patriot
setchar(0x08E4Ebfc, 137);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, -1320.39, -577.04, 11.12, 180);
//Kuruma
setchar(0x08E4E9EC, 152);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, -1332.85, -578.00, 11.12, 180);
//Stinger
setchar(0x08E4Ea44, 133);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, -1345.24, -636.01, 11.12, 90);
//Cheetah
setchar(0x08E4Ea70, 146);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, -1345.24, -631.45, 11.12, 90);
off()

#cheat Dubed out vehicle Lot!!
//ID: 16333
//Score: 58
//Author: psphacker108
//Category: Pimp My Garage
//Description: takes over the auto lot in portland! With Every weapon known in the game including Health,photo and armor! With a total of 8 cars! All HAVE RAISED TIRES A FIRST!! CHECK IT OUT! Thanks to penguinsrule for testing Rashon125
//Image: http://telmaz.no-ip.info:3249/pictures/gtamod.gif
//Time: 12/08/2006 02:25:16
//Working: Yes
moveto(1249.00, -78.58, 12.93);  object(0x01BF, 190, 0, 276);
move(-2.26, -4.17, 0.70);  object(0x01BF, 180, 0, 178);
move(2.98, -3.93, 0.00);  object(0x01BF, 180, 0, 277);
move(-0.92, -7.44, -0.10);  object(0x01BF, 180, 0, 277);
move(-9.07, 10.92, 0.30);  object(0x01BF, 180, 0, 175);
move(-7.37, -0.63, 0.00);  object(0x01BF, 180, 0, 175);
move(-7.77, -0.67, 0.00);  object(0x01BF, 180, 0, 175);
move(-7.47, -0.64, 0.00);  object(0x01BF, 180, 0, 175);
move(-6.28, -0.54, 0.00);  object(0x01BF, 180, 0, 175);
move(-3.31, -2.45, 0.00);  object(0x01BF, 180, 0, 78);
move(41.05, -12.08, 1.10);  object(0x01BF, 180, 0, 268);
move(0.16, -5.50, 0.50);  object(0x01BF, 180, 0, 268);
move(0.38, -13.49, 0.00);  object(0x01BF, 180, 0, 268);
move(3.51, 3.74, 0.00);  object(0x01BF, 180, 0, 356);
move(0.01, 6.44, 0.00);  object(0x01BF, 180, 0, 356);
move(6.84, 0.77, 0.00);  object(0x01BF, 180, 0, 176);
move(0.52, -6.91, 0.00);  object(0x01BF, 180, 0, 177);
move(4.29, 7.51, 0.00);  object(0x01BF, 180, 0, 177);
move(2.97, -7.00, 0.00);  object(0x01BF, 180, 0, 179);
move(7.51, 0.41, 0.00);  object(0x01BF, 180, 0, 174);
move(2.32, -0.15, 0.00);  object(0x01BF, 180, 0, 117);
move(-8.74, 10.90, 0.50);  object(0x01BF, 180, 0, 90);
move(0.08, 7.66, 0.00);  object(0x01BF, 180, 0, 96);
move(16.11, 0.40, 0.00);  object(0x01BF, 180, 0, 271);
move(0.08, 7.40, 0.00);  object(0x01BF, 180, 0, 271);
move(-2.25, 2.38, 0.00);  object(0x01BF, 180, 0, 359);
move(-1.25, -5.06, 0.00);  object(0x01BF, 180, 0, 177);
move(-5.69, -0.27, 0.00);  object(0x01BF, 180, 0, 177);
move(-3.59, -0.17, 0.00);  object(0x01BF, 180, 0, 177);
move(-25.80, -31.86, -0.30);  object(0x01BF, 180, 0, 354);
move(-1.91, 0.02, 0.00);  object(0x01BF, 180, 0, 354);
move(-26.66, 0.12, 0.00);  object(0x01BF, 180, 0, 354);
move(-6.76, -0.74, 0.00);  object(0x01BF, 180, 0, 354);
move(23.21, -10.72, -0.60);  object(0x01BF, 180, 0, 2);
move(6.33, 0.59, 0.00);  object(0x01BF, 180, 0, 2);
move(2.36, -0.10, 0.00);  object(0x01BF, 180, 0, 5);
move(4.33, 6.46, 0.00);  object(0x01BF, 180, 0, 270);
move(0.00, -4.80, 0.00);  object(0x01BF, 180, 0, 270);
move(-17.19, -6.07, 1.30);  object(0x01BF, 180, 0, 271);
move(-3.75, -0.90, 0.00);  object(0x01BF, 180, 0, 1);
move(-6.29, 0.39, 0.00);  object(0x01BF, 180, 0, 1);
move(-1.81, 14.94, 0.00);  object(0x01BF, 180, 0, 181);
move(1.10, -0.01, 0.00);  object(0x01BF, 180, 0, 181);
move(-6.20, 0.08, 0.00);  object(0x01BF, 180, 0, 181);
move(-5.08, 11.05, 0.00);  object(0x01BF, 180, 0, 85);
move(0.67, -7.17, 0.00);  object(0x01BF, 180, 0, 85);
move(-0.24, 32.00, -0.60);  object(0x01BF, 180, 0, 262);
move(1.07, -7.73, 5.40);  object(0x01BF, 180, 0, 262);
move(0.98, -7.13, 0.00);  object(0x01BF, 180, 0, 262);
move(0.74, -5.35, 0.00);  object(0x01BF, 180, 0, 262);
//1 Patriot
setchar(0x08E4Ebfc, 137);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 1214.28, -89.80, 13.08, 0);
//2 Stinger
setchar(0x08E4E9EC, 133);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 1220.84, -90.12, 13.11, 0);
//4 chetta
setchar(0x08E4Ea70, 146);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, 1234.35, -90.05, 13.10, 0);
//5 demious SP
setchar(0x08E4Eac8, 130);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 1238.90, -87.94, 12.89, 0);
//7 Leaone sentinel
setchar(0x08E4Ea18, 172);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 1246.27, -91.19, 13.21, 0);
//8 Diablo stallion
setchar(0x8E4EB4C, 175);
setchar(0x8E4EB4C + 0x18, 0x01);
setfloat(0x8E4EB50, 1246.58, -100.09, 14.10, 0);
//9 cartel crusier
setchar(0x8E4EB20, 176);
setchar(0x8E4EB20 + 0x18, 0x01);
setfloat(0x8E4EB24, 1246.31, -199.11, 14.97, 0);
//10 Banshee
setchar(0x8E4EAF4, 160);
setchar(0x8E4EAF4 + 0x18, 0x01);
setfloat(0x8E4EAF8, 1235.99, -129.09, 14.97, 0);
//11 BF injection
setchar(0x8E4EA9C, 155);
setchar(0x8E4EA9C + 0x18, 0x01);
setfloat(0x8E4EAA0, 1226.37, -117.39, 14.97, 0);
//12 thunder-rod!
setchar(0x08E4Ec54, 189);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, 1217.76, -117.00, 14.97, 0);
// DUBED HUMMER pmg
setshort(0x94401d0, 250);
setfloat(0x94401cc, 1.55);
sethex(0x9459d80, 0x03, 0x41, 0x00, 0x00);
sethex(0x944fb3c, 0x00, 0x00, 0x00);
sethex(0x944fb30, 0xFF, 0xFF, 0x23);
setint(0x8E38A38, 137);
setchar(0x8E38A5C, 119, 116);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
setchar(0x9459972, 0x6);
setchar(0x9459970, 0x34);
setfloat(0x943fb8c, 2.05);
setfloat(0x94599b4, -0.3);
setfloat(0x9459974, 0.00488);
sethex(0x94599c0, 0x02, 0xa1, 0x00, 0x00);
sethex(0x944fb28, 0x00, 0x00, 0x00);
sethex(0x944faf4, 0xFF, 0xFF, 0x23);
setint(0x8E38A38, 133);
setchar(0x8E38A5C, 114, 101);
sethex(0x8E38A5E, 0x01, 0xFF);
setchar(pplayer + 0xB84, 0x00);
// Fearri pmg
setshort(0x992FCE8, 0x20, 0x46, 0x65, 0x61, 0x72, 0x72, 0x69);
setchar(0x945a4b2, 0x6);
setchar(0x945a4b0, 0x34);
setfloat(0x9440fdc, 0.65);
setfloat(0x945a4b4, 0.0075);
sethex(0x945a500, 0x82, 0x81, 0x00, 0x01);
setchar(0x967E6FC, 0x00, 0x00, 0xFF);
sethex(0x944fb34, 0x34, 0x4D, 0x9D);
sethex(0x944fb1c, 0x34, 0x4D, 0x9D);
setint(0x8E38A38, 146);
setchar(0x8E38A5C, 117, 111);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
// Demious SP pmg
setchar(0x945cd02, 0x6);
setchar(0x945cd00, 0x34);
setshort(0x943f6e0, 250);
setfloat(0x943f6dc, 1.175);
setfloat(0x945cd44, -0.9625);
setfloat(0x945cd04, 0.00688);
sethex(0x945cd50, 0x02, 0xa1, 0x00, 0x00);
sethex(0x944fb3c, 0x00, 0x00, 0x00);
sethex(0x944fb0c, 0x00, 0x00, 0x00);
setint(0x8E38A38, 130);
setchar(0x8E38A5C, 119, 107);
sethex(0x8E38A5E, 0x01, 0xFF);
setchar(pplayer + 0xB84, 0x00);
//Leone pmg pmg
setshort(0x992FEE2, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x4c, 0x65, 0x6f, 0x6e, 0x65);
setchar(0x945bd12, 0x6);
setchar(0x945bd10, 0x34);
setfloat(0x944387c, 1.15);
setfloat(0x945bd54, -0.975);
setfloat(0x945bd14, 0.00625);
sethex(0x945bd60, 0x82, 0x80, 0x00, 0x00);
setchar(0x967E6FC, 0xFF, 0x10, 0x00);
sethex(0x944faf4, 0xFF, 0xFF, 0x00);
sethex(0x944fb30, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 172);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//diablo pmg pmg
setshort(0x992FF36, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x44, 0x69, 0x41, 0x62, 0x4c, 0x6f);
setchar(0x945c672, 0x6);
setchar(0x945c670, 0x34);
setshort(0x9443d30, 250);
setfloat(0x9443d2c, 1.00);
setfloat(0x945c674, 0.00738);
sethex(0x945c6c0, 0x02, 0x81, 0x00, 0x00);
setchar(0x967E6FC, 0xFF, 0x00, 0x00);
sethex(0x944fb28, 0xFF, 0xFF, 0x00);
sethex(0x944fb10, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 175);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//Cartel Crusier
setchar(0x945c762, 0x6);
setshort(0x9443ec0, 250);
setfloat(0x9443ebc, 1.40);
setfloat(0x945c764, 0.00663);
sethex(0x945c7b0, 0x02, 0x80, 0x00, 0x00);
setchar(0x967E6FC, 0x00, 0x00, 0xFF);
sethex(0x944fb48, 0xFF, 0xFF, 0x00);
sethex(0x944fb50, 0xFF, 0x00, 0xFF);
setint(0x8E38A38, 176);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
//Banshee pmg
setchar(0x945b0e2, 0x6);
setchar(0x945b0e0, 0x34);
setfloat(0x94425bc, 1.20);
setfloat(0x945b0e4, 0.00763);
sethex(0x945b130, 0x82, 0xa1, 0x00, 0x00);
setchar(0x967E6FC, 0x00, 0xFF, 0x00);
sethex(0x944fb38, 0x00, 0x00, 0x00);
sethex(0x944fb20, 0xFF, 0x0D, 0x08);
setint(0x8E38A38, 160);
setchar(0x8E38A5C, 118, 112);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
// BF injection pmg
setchar(0x945ad22, 0x6);
setchar(0x945ad20, 0x34);
setshort(0x9441df0, 250);
setfloat(0x9441dec, 1.425);
setfloat(0x945ad24, 0.00713);
sethex(0x945ad70, 0x1a, 0xa9, 0x00, 0x07);
setchar(0x967E6FC, 0xFF, 0x00, 0xFF);
sethex(0x944fb2c, 0x00, 0x00, 0x00);
sethex(0x944fb28, 0xB9, 0xB2, 0xAC);
setint(0x8E38A38, 155);
setchar(0x8E38A5C, 115, 114);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00);
// Thunder-rod pmg
setchar(0x945d1b0, 0x34);
setshort(0x9445310, 250);
setfloat(0x944530c, 1.20);
setfloat(0x945d1f4, -0.05);
setfloat(0x945d1b4, 0.00738);
sethex(0x945d200, 0x82, 0x81, 0x00, 0x00);
setchar(0x967E6FC, 0x00, 0xFF, 0x00);
sethex(0x944fb4c, 0x00, 0x00, 0x00);
sethex(0x944fb5c, 0xFF, 0x0D, 0x08);
setint(0x8E38A38, 189);
setchar(0x8E38A5C, 123, 127);
sethex(0x8E38A5E, 0x01, 0x00);
setchar(pplayer + 0xB84, 0x00)
//weapon 1
setfloat(0x08e2d800, 1245.14, -132.32, 14.97);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x122)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//weapon 2
setfloat(0x08E2E400, 1244.18, -132.55, 14.97);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x11e);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
//weapon 3
setfloat(0x08e2d860, 1242.97, -132.61, 14.97);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x11d)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//weapon 4
setfloat(0x08e2d8c0, 1241.07, -132.71, 14.97);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x121);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
//weapon 5
setfloat(0x08e2d920, 1239.60, -132.79, 14.97, 0);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x11c);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
//weapon 6
setfloat(0x08e2d980, 1238.57, -132.85, 14.97);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x11b);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
//weapon 7
setfloat(0x08e2d9e0, 1237.08, -132.95, 14.97);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x11a);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
//weapon 8
setfloat(0x08e2da40, 1235.34, -133.05, 14.97);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x119);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
//weapon 9
setfloat(0x08e2daa0, 1234.06, -133.13, 14.97);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x118);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
//weapon 10
setfloat(0x08e2db00, 1232.88, -133.26, 14.97);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x117);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
//weapon 11
setfloat(0x08E2DB60, 1231.66, -133.40, 14.97);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x116);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
//weapon 12
setfloat(0x08E2DBC0, 1229.96, -133.56, 14.97);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x115);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
//weapon 13
setfloat(0x08E2DC20, 1228.54, -134.03, 14.97);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x114);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
//weapon 14
setfloat(0x08E2DC80, 1228.48, -135.87, 14.97);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x113);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
//weapon 15
setfloat(0x08E2DCE0, 1228.52, -137.76, 14.97);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x112);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
//weapon 16
setfloat(0x08E2DD40, 1227.80, -137.81, 14.97);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
//weapon 17
setfloat(0x08E2DDA0, 1225.94, -137.82, 14.97);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x10f);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
//weapon 18
setfloat(0x08E2DE00, 1224.59, -137.83, 14.97);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x10e);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
//weapon 19
setfloat(0x08E2DE60, 1223.11, -137.94, 14.97);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x10d);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
//weapon 20
setfloat(0x08E2DEC0, 1221.43, -137.87, 14.97);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x10c);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
//weapon 21
setfloat(0x08E2DF20, 1221.85, -125.00, 14.97);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0xff, 0xff);
setshort(0x08E2DF46, 0x10b);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
//weapon 22
setfloat(0x08E2DF80, 1220.47, -124.97, 14.97);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0xff, 0xff);
setshort(0x08E2DFA6, 0x10a);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
//weapon 23
setfloat(0x08E2DFE0, 1219.08, -125.01, 14.97);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0xff, 0xff);
setshort(0x08E2E006, 0x109);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
//weapon 24
setfloat(0x08E2E040, 1217.56, -125.02, 14.97);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0xff, 0xff);
setshort(0x08E2E066, 0x108);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
//weapon 25
setfloat(0x08E2E0A0, 1216.35, -125.04, 14.97);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x107);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
//weapon 26
setfloat(0x08E2E100, 1215.10, -125.05, 14.97);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0xff, 0xff);
setshort(0x08E2E126, 0x106);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
//weapon 27
setfloat(0x08E2E160, 1213.94, -125.06, 14.97);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x105);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
//weapon 28
setfloat(0x08E2E1C0, 1212.09, -125.08, 14.97);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x104);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
//weapon 29
setfloat(0x08E2E220, 1221.33, -131.09, 15.35);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0xff, 0xff);
setshort(0x08E2E246, 0x103);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
//weapon 30
setfloat(0x08E2E280, 1211.14, -121.77, 14.97);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0xff, 0xff);
setshort(0x08E2E2A6, 0x124);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
//weapon 31
setfloat(0x08E2E2E0, 1209.27, -111.99, 14.95);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0xff, 0xff);
setshort(0x08E2E306, 0x22e);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
//weapon 32
setfloat(0x08E2E340, 1209.61, -117.25, 14.97);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0xff, 0xff);
setshort(0x08E2E366, 0x24b);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
off()

#cheat Extra-Turbo Porsche Stinger
//ID: 16082
//Score: 51
//Author: rashon125
//Category: Pimp My Garage
//Description: This Stinger features:
//*Extra Car Weight 5,000 lbs.
//*Top Speed 215 mph
//*Better Suspension, Handling, and Traction
//*Bulet Proof, Damage Proof, Explosion Proof, Fire Proof
//*Cars Go Flying After You Ram Into Them
//Image: none
//Time: 05/08/2006 18:26:48
//Working: Yes
setfloat(0x9459fa8, -1.15);
setfloat(0x943fb8c, 0.75);
setfloat(0x94598f0, 5000);
setfloat(0x94598f8, 0.85);
setfloat(0x94599b0, 0.35);
setfloat(0x94599b4, -0.14999);
setfloat(0x94599b8, 0.55);
setfloat(0x945997c, 2.159);
setfloat(0x9459980, 2.159);
setfloat(0x9459974, 0.005);
setfloat(0x9459990, 0.55);
setfloat(0x9459998, 35);
setfloat(0x94599a8, 0.9);
setfloat(0x94599ac, 0.24);
setfloat(0x94599bc, 0.33);
setchar(0x9459920, 0);
setfloat(0x945999c, 0.9);
setfloat(0x94599a0, 0.52);
setfloat(0x94598fc, 0);
sethex(0x94599c0, 0x02, 0xa1, 0x00, 0x04);
sethex(0x944fb48, 0x00, 0x00, 0x00);
sethex(0x944faf4, 0xA2, 0xC9, 0xC8);
setint(0x8E38A38, 133);
setchar(0x8E38A5C, 122, 101);
sethex(0x8E38A5E, 0x01, 0xFF);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);

#cheat Extra-Turbo Manana
//ID: 16025
//Score: 18
//Author: rashon125
//Category: Pimp My Garage
//Description: This Manana is the best you'll see. It has:
//*Top Speed 250 mph
//*Car Weight 3,750 lbs
//*Wobbly Suspension
//*Better Traction
//*Better Handling
//*Bullet Proof, Damage Proof, Explosion Proof, and Fire Proof
//Image: none
//Time: 04/08/2006 20:37:43
//Working: Yes
setchar(0x945a0f2, 0x5);
setfloat(0x9459fa8, -1.15);
setshort(0x9440810, 250);
setfloat(0x944080c, 0.70);
setfloat(0x945a070, 3750);
setfloat(0x945a078, 0.80);
setfloat(0x945a130, 0.45);
setfloat(0x945a138, 0.55);
setfloat(0x945a0fc, 2.5);
setfloat(0x945a100, 2.5);
setfloat(0x945a0f4, 0.005);
setfloat(0x945a110, 0.65);
setfloat(0x945a118, 35);
setfloat(0x945a128, 1);
setfloat(0x945a12c, 0.15);
setchar(0x945a0a0, 0);
setfloat(0x945a11c, 0.9);
setfloat(0x945a120, 0.52);
setfloat(0x945a07c, 0);
sethex(0x945a140, 0x03, 0x20, 0x00, 0x04);
sethex(0x944fb28, 0x00, 0x00, 0x00);
sethex(0x944fb44, 0xCA, 0xC6, 0xC7);
setint(0x8E38A38, 141);
setchar(0x8E38A5C, 114, 121);
sethex(0x8E38A5E, 0x01, 0xFF);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);

#cheat Teleport To Mini Car Showroom v2.5
//ID: 15923
//Score: 52
//Author: rashon125
//Category: Teleport
//Description: This teleports you to my latest car showroom!
//Image: http://img301.imageshack.us/my.php?image=leftsideofshowroomzu6.png
//Time: 03/08/2006 18:15:14
//Working: Yes
teleport(821.40, -651.70, 14.97)

#cheat Mini Car Showroom v2.5
//ID: 15921
//Score: 82
//Author: rashon125
//Category: Location Mods
//Description: This showroom is short but sweet. Here are the features:
//*Found In Chinatown, Portland
//*All Weapon Spawns
//*15 Vehicle Spawns
//*Sports Cars That Aren't Found In Portland
//*All Motorcycle Spawns
//
//Try and you'll like it!
//Image: http://img125.imageshack.us/my.php?image=mainphotopm5.png
//Time: 03/08/2006 18:13:12
//Working: Yes
moveto(802.14, -664.29, 17.87);  object(0x01BF, 0, 0, 184);
move(-7.96, 0.36, 0.00);  object(0x01BF, 0, 0, 180);
move(-4.21, 4.07, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.01, 8.07, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.03, 7.86, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.01, 8.04, 0.00);  object(0x01BF, 0, 0, 270);
move(0.03, 7.85, 0.00);  object(0x01BF, 0, 0, 270);
move(4.29, 4.01, 0.00);  object(0x01BF, 0, 0, 0);
move(7.83, -0.02, 0.00);  object(0x01BF, 0, 0, 0);
move(3.70, -4.16, 0.00);  object(0x01BF, 0, 0, 270);
move(0.18, -8.19, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.02, -7.71, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.36, -7.78, 0.00);  object(0x01BF, 0, 0, 275);
move(-11.63, 21.75, -1.80);  object(0x01BF, 55, 0, 2);
move(0.13, 3.97, 2.90);  object(0x01BF, 55, 0, 2);
move(0.15, 2.19, 5.60);  object(0x01BF, 0, 0, 0);
move(7.52, -0.04, 0.00);  object(0x01BF, 0, 0, 0);
move(3.79, -4.27, 0.00);  object(0x01BF, 0, 0, 90);
move(0.63, -8.25, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.03, -7.67, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.43, -7.73, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.24, -8.06, 0.00);  object(0x01BF, 0, 0, 90);
move(-4.09, -4.10, 0.00);  object(0x01BF, 0, 0, 180);
move(-7.58, 0.03, 0.00);  object(0x01BF, 0, 0, 180);
move(7.82, 36.56, -3.30);  object(0x01BF, 90, 0, 0);
move(-0.03, -7.01, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.03, -6.57, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.03, -6.77, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.03, -6.52, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.05, -6.04, 0.00);  object(0x01BF, 90, 0, 178);
move(-7.80, 25.90, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.05, -6.55, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.06, -6.91, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.05, -5.96, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.05, -6.67, 0.00);  object(0x01BF, 90, 0, 0);
move(-3.68, 0.32, 3.60);  object(0x01BF, 0, 0, 270);
move(0.06, 7.83, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, 8.08, 0.00);  object(0x01BF, 0, 0, 270);
move(0.08, 7.99, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.03, 8.32, -0.30);  object(0x01BF, 0, 0, 271);
move(3.82, 1.07, 3.10);  object(0x01BF, 90, 0, 0);
move(-0.02, -6.69, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.02, -6.33, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.02, -6.64, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.02, -6.33, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.02, -7.14, 0.00);  object(0x01BF, 90, 0, 0);
move(7.88, 32.73, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.04, -6.32, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.04, -6.32, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.04, -6.52, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.04, -6.53, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.06, -7.14, 0.00);  object(0x01BF, 90, 0, 0);
//Brass Knuckles
setfloat(0x08e2d800, 804.06, -627.02, 22.45);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Chisel
setfloat(0x08e2d860, 804.06, -629.87, 22.45);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//Hockey Stick
setfloat(0x08e2d8c0, 804.06, -631.58, 22.45);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
//Nightstick
setfloat(0x08e2d920, 804.06, -633.68, 22.45);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
//Butcher Knife
setfloat(0x08e2d980, 804.06, -635.55, 22.45);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
//Baseball Bat
setfloat(0x08e2d9e0, 804.06, -637.47, 22.45);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
//Fire Axe
setfloat(0x08e2da40, 804.06, -639.58, 22.45);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
//Meat Cleaver
setfloat(0x08e2daa0, 804.06, -641.36, 22.45);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
//Machete
setfloat(0x08e2db00, 804.06, -643.53, 22.45);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
//Katana
setfloat(0x08E2DB60, 804.06, -645.09, 22.45);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
//Chainsaw
setfloat(0x08E2DBC0, 804.06, -647.17, 22.45);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
//Grenade
setfloat(0x08E2DC20, 804.06, -649.34, 22.45);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0x1, 0x1);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
//Remote Grenade
setfloat(0x08E2DC80, 804.06, -651.36, 22.45);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0x1, 0x1);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
//Molotovs
setfloat(0x08E2DD40, 804.06, -653.17, 22.45);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0x1, 0x1);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
//Tear Gas
setfloat(0x08e2d800, 804.06, -655.38, 22.45);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1, 0x1)
setshort(0x08e2d826, 0x10f)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Pistol
setfloat(0x08E2DDA0, 804.06, -657.50, 22.45);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0x1, 0x1);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
//Colt Python
setfloat(0x08E2DE00, 804.06, -659.50, 22.45);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0x1, 0x1);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
//AK-47
setfloat(0x08E2DF80, 793.78, -662.48, 22.45);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0x1, 0x1);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
//M4
setfloat(0x08E2DFE0, 791.22, -662.48, 22.45);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0x1, 0x1);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
//Chromed Shotgun
setfloat(0x08E2DE60, 790.88, -660.53, 22.45);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0x1, 0x1);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
//Spaz Shotgun
setfloat(0x08E2DEC0, 790.88, -658.66, 22.45);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0x1, 0x1);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
//Combat Shotgun
setfloat(0x08E2DF20, 790.88, -656.79, 22.45);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0x1, 0x1);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
//Tec-9
setfloat(0x08E2E040, 801.75, -662.03, 22.45);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0x1, 0x1);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
//Micro SMG
setfloat(0x08E2E0A0, 799.29, -662.03, 22.43);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0x1, 0x1);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
//Mac 10
setfloat(0x08E2E100, 797.51, -662.03, 22.43);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0x1, 0x1);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
//MP5
setfloat(0x08E2E160, 795.85, -662.03, 22.45);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0x1, 0x1);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
//Rocket Launcher
setfloat(0x08E2E280, 790.88, -654.57, 22.45);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0x1, 0x1);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
//Flame Thrower
setfloat(0x08E2E2E0, 790.88, -652.81, 22.45);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0x1, 0x1);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
//M60
setfloat(0x08E2E340, 790.88, -650.83, 22.45);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0x1, 0x1);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
//Minigun
setfloat(0x08E2E3A0, 790.88, -648.68, 22.45);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0x1, 0x1);
setshort(0x08E2E3C6, 0x122);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
//Sniper Rifle
setfloat(0x08E2E1C0, 790.88, -646.92, 22.45);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0x1, 0x1);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
//LS Sniper Rifle
setfloat(0x08E2E220, 790.88, -646.88, 22.45);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0x1, 0x1);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
//Camera
setfloat(0x08e2d800, 790.88, -642.81, 22.45);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1, 0x1)
setshort(0x08e2d826, 0x124)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Health Pickup
setfloat(0x08E2E400, 790.88, -640.74, 22.45);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x22e);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
//Armor Pickup
setfloat(0x08e2d860, 791.66, -638.45, 22.45);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x24b)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//Deimos SP
setchar(0x08E4Ebfc, 130);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 802.46, -636.17, 14.97, 270);
//Stinger
setchar(0x08E4E9EC, 133);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 801.96, -643.32, 15.10, 270);
//Yakuza Stinger
setchar(0x08E4Ea44, 174);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 801.68, -651.39, 15.32, 270);
//Infernus
setchar(0x08E4Ea70, 142);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, 795.14, -660.44, 14.97, 90);
//Cheetah
setchar(0x08E4Eac8, 146);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 794.61, -651.69, 14.97, 90);
//Banshee
setchar(0x08E4Eb78, 160);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 803.29, -669.71, 15.75, 90);
//Phobos VT
setchar(0x08E4Ea18, 186);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 801.59, -618.53, 15.75, 90);
//V8 Ghost
setchar(0x8E4EB4C, 187);
setchar(0x8E4EB4C + 0x18, 0x01);
setfloat(0x8E4EB50, 800.96, -606.41, 15.06, 90);
//Angel
setchar(0x8E4EB20, 202);
setchar(0x8E4EB20 + 0x18, 0x01);
setfloat(0x8E4EB24, 807.38, -653.95, 14.97, 90);
//Freeway
setchar(0x8E4EAF4, 207);
setchar(0x8E4EAF4 + 0x18, 0x01);
setfloat(0x8E4EAF8, 807.57, -650.29, 14.97, 90);
//PCJ-600
setchar(0x8E4EA9C, 205);
setchar(0x8E4EA9C + 0x18, 0x01);
setfloat(0x8E4EAA0, 807.55, -647.55, 14.97, 90);
//Sanchez
setchar(0x08E4Ec54, 210);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, 808.22, -644.52, 14.97, 90);
//Faggio
setchar(0x08E4Ecd8, 206);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, 809.05, -640.71, 14.97, 90);
//Avenger
setchar(0x08E4Ec28, 208);
setchar(0x08E4Ec28 + 0x18, 0x01);
setfloat(0x08E4Ec2c, 808.52, -636.01, 14.97, 90);
//Manchez
setchar(0x08E4Eba4, 209);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 807.55, -632.38, 14.97, 90);
off()

#cheat Teleport to Rashon's Car Showroom Loaded v2
//ID: 15825
//Score: 36
//Author: rashon125
//Category: Teleport
//Description: This teleports you to my new revolutionary car showroom.
//Image: http://i66.photobucket.com/albums/h257/pspman108/screen1-7.jpg
//Time: 01/08/2006 17:28:48
//Working: Yes
teleport(283.89, -198.45, 21.18)

#cheat Rashon125's Car Showroom Loaded v2
//ID: 15823
//Score: 46
//Author: rashon125
//Category: Location Mods
//Description: This is the second version of the revolutionary car showroom. It has 14 vehicle spawns and 2 helicopter spawns. It has all the weapon spawns and it located in Fort Staunton. Get the teleport off Cheatsync.
//Image: http://img352.imageshack.us/img352/3382/mainphotofr8.th.png
//Time: 01/08/2006 17:27:35
//Working: Yes
moveto(363.62, -170.43, 23.41);  object(0x01BF, 0, 0, 240);
move(-3.88, 6.95, 0.00);  object(0x01BF, 0, 0, 241);
move(2.02, -12.13, 0.00);  object(0x01BF, 0, 0, 153);
move(-7.19, -3.65, 0.00);  object(0x01BF, 0, 0, 155);
move(-6.89, -3.17, 0.00);  object(0x01BF, 0, 0, 155);
move(-5.46, 1.75, 0.00);  object(0x01BF, 0, 0, 249);
move(-3.07, 7.45, 0.00);  object(0x01BF, 0, 0, 247);
move(17.06, 16.90, 0.00);  object(0x01BF, 0, 0, 65);
move(-5.31, 1.83, 0.00);  object(0x01BF, 0, 0, 330);
move(-7.00, -3.64, 0.00);  object(0x01BF, 0, 0, 337);
move(-7.29, -3.26, 0.00);  object(0x01BF, 0, 0, 336);
move(20.06, -5.70, -1.60);  object(0x01BF, 240, 0, 156);
move(2.63, -5.08, 3.40);  object(0x01BF, 240, 0, 152);
move(-13.80, -6.70, 1.50);  object(0x01BF, 90, 0, 66);
move(-3.31, 7.03, 0.00);  object(0x01BF, 90, 0, 66);
move(-3.22, 7.25, 0.00);  object(0x01BF, 90, 0, 68);
move(12.40, -11.68, 0.00);  object(0x01BF, 90, 0, 66);
move(-3.05, 7.12, 0.00);  object(0x01BF, 90, 0, 66);
move(-3.17, 7.21, 0.00);  object(0x01BF, 90, 0, 67);
move(6.11, 2.68, 0.00);  object(0x01BF, 90, 0, 68);
move(1.79, 1.22, 0.00);  object(0x01BF, 90, 0, 63);
move(10.68, -12.33, 3.40);  object(0x01BF, 0, 0, 63);
move(-3.74, 7.21, -0.10);  object(0x01BF, 0, 0, 65);
move(-3.89, 7.28, 0.00);  object(0x01BF, 0, 0, 66);
move(-5.49, 1.14, 0.00);  object(0x01BF, 0, 0, 334);
move(-7.40, -3.37, 0.00);  object(0x01BF, 0, 0, 340);
move(-5.97, -2.71, 0.00);  object(0x01BF, 0, 0, 335);
move(4.55, -19.84, 0.00);  object(0x01BF, 0, 0, 246);
move(-2.91, 7.42, 0.00);  object(0x01BF, 0, 0, 245);
move(-3.22, 7.22, 0.00);  object(0x01BF, 0, 0, 249);
move(7.21, -5.37, -1.20);  object(0x01BF, 240, 0, 337);
move(-2.56, 5.45, 2.80);  object(0x01BF, 250, 0, 337);
move(-2.14, 5.73, 2.40);  object(0x01BF, 70, 0, 338);
move(25.69, -10.18, 2.80);  object(0x01BF, 0, 0, 59);
move(-3.85, 7.07, 0.00);  object(0x01BF, 0, 0, 65);
move(-3.43, 7.30, -0.20);  object(0x01BF, 0, 0, 62);
move(-5.90, 1.85, -0.20);  object(0x01BF, 0, 0, 338);
move(-7.53, -3.67, -0.10);  object(0x01BF, 0, 0, 340);
move(-6.90, -2.80, 0.00);  object(0x01BF, 0, 0, 334);
move(23.95, -11.65, -2.90);  object(0x01BF, 90, 0, 63);
move(-3.78, 6.83, 0.00);  object(0x01BF, 90, 0, 60);
move(-3.26, 7.18, 0.00);  object(0x01BF, 90, 0, 65);
move(-5.55, -2.83, 0.00);  object(0x01BF, 90, 0, 63);
move(3.54, -6.99, 0.00);  object(0x01BF, 90, 0, 63);
move(3.07, -7.07, 0.00);  object(0x01BF, 90, 0, 67);
move(-5.41, -2.29, 0.00);  object(0x01BF, 90, 0, 67);
move(-4.05, -1.71, 0.00);  object(0x01BF, 90, 0, 67);
move(-9.34, 13.46, 2.90);  object(0x01BF, 0, 0, 249);
move(2.67, -7.46, 0.00);  object(0x01BF, 0, 0, 246);
move(3.12, -7.37, 0.00);  object(0x01BF, 0, 0, 248);
move(5.59, -2.26, 0.00);  object(0x01BF, 0, 0, 157);
move(-7.92, 18.13, 3.40);  object(0x01BF, 90, 0, 71);
move(2.59, -7.50, 0.00);  object(0x01BF, 90, 0, 67);
move(3.02, -7.37, 0.00);  object(0x01BF, 90, 0, 69);
move(9.01, 18.66, -4.50);  object(0x01BF, 240, 0, 334);
move(-1.94, 4.05, 2.50);  object(0x01BF, 240, 0, 334);
move(-7.07, -4.90, 1.80);  object(0x01BF, 90, 0, 246);
move(3.38, -7.43, 0.00);  object(0x01BF, 90, 0, 68);
move(2.52, -7.27, 0.00);  object(0x01BF, 90, 0, 75);
move(5.99, 2.57, -0.10);  object(0x01BF, 90, 0, 244);
move(4.31, 2.06, -0.10);  object(0x01BF, 90, 0, 244);
//brass knuckles
setfloat(0x08e2d800, 341.64, -160.30, 27.89);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//chisel
setfloat(0x08e2d860, 343.96, -159.28, 27.89);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//hockey stick
setfloat(0x08e2d8c0, 345.85, -158.39, 27.89);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
//nightstick
setfloat(0x08e2d920, 347.78, -157.76, 27.89);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
//butcher knife
setfloat(0x08e2d980, 349.46, -157.04, 27.89);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
//baseball bat
setfloat(0x08e2d9e0, 351.34, -155.82, 27.89);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
//fire axe
setfloat(0x08e2da40, 352.94, -154.79, 27.89);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
//meat cleaver
setfloat(0x08e2daa0, 354.28, -156.04, 27.89);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
//machete
setfloat(0x08e2db00, 355.44, -157.90, 27.89);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
//katana
setfloat(0x08E2DB60, 356.61, -159.56, 27.89);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
//chainsaw
setfloat(0x08E2DBC0, 357.51, -162.47, 27.89);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
//Grenade
setfloat(0x08E2DC20, 358.15, -164.63, 34.59);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0x1, 0x1);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
//Remote Grenade
setfloat(0x08E2DC80, 359.09, -166.27, 34.59);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0x1, 0x1);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
//Molotovs
setfloat(0x08E2DD40, 359.79, -167.55, 34.59);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0x1, 0x1);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
//Tear Gas
setfloat(0x08e2d800, 361.03, -169.79, 34.59);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1, 0x1)
setshort(0x08e2d826, 0x10f)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Pistol
setfloat(0x08E2DDA0, 363.16, -173.52, 34.59);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0x1, 0x1);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
//Colt Python
setfloat(0x08E2DE00, 361.66, -174.72, 34.59);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0x1, 0x1);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
//AK-47
setfloat(0x08E2DF80, 355.31, -177.98, 34.59);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0x1, 0x1);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
//M4
setfloat(0x08E2DFE0, 353.56, -178.75, 34.59);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0x1, 0x1);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
//Chromed Shotgun
setfloat(0x08E2DE60, 352.02, -179.55, 34.59);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0x1, 0x1);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
//Spaz Shotgun
setfloat(0x08E2DEC0, 350.49, -180.35, 34.59);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0x1, 0x1);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
//Combat Shotgun
setfloat(0x08E2DF20, 349.24, -181.00, 34.59);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0x1, 0x1);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
//Tec-9
setfloat(0x08E2E040, 360.22, -175.93, 34.59);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0x1, 0x1);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
//Micro SMG
setfloat(0x08E2E0A0, 358.92, -176.46, 34.59);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0x1, 0x1);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
//Mac 10
setfloat(0x08E2E100, 358.04, -176.72, 34.59);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0x1, 0x1);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
//MP5
setfloat(0x08E2E160, 356.78, -177.49, 34.59);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0x1, 0x1);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
//Rocket Launcher
setfloat(0x08E2E280, 347.47, -181.21, 34.59);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0x1, 0x1);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
//Flame Thrower
setfloat(0x08E2E2E0, 346.14, -181.74, 34.59);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0x1, 0x1);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
//M60
setfloat(0x08E2E340, 344.88, -182.43, 34.59);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0x1, 0x1);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
//Minigun
setfloat(0x08E2E3A0, 343.38, -180.92, 34.59);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0xff, 0xff);
setshort(0x08E2E3C6, 0x122);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
//Sniper Rifle
setfloat(0x08E2E1C0, 342.03, -178.97, 34.59);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0x1, 0x1);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
//LS Sniper Rifle
setfloat(0x08E2E220, 343.35, -176.66, 34.59);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0x1, 0x1);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
//Camera
setfloat(0x08e2d800, 349.61, -170.19, 34.59);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1, 0x1)
setshort(0x08e2d826, 0x124)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Health Pickup
setfloat(0x08E2E400, 348.58, -168.15, 34.59);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x22e);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
//Armor Pickup
setfloat(0x08e2d860, 347.53, -165.72, 34.59);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x24b)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//Police Car
setchar(0x08E4Ebfc, 157);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 335.36, -183.30, 22.63, 0);
//FBI Cruiser
setchar(0x08E4E9EC, 148);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 329.96, -185.88, 21.11, 0);
//Enforcer
setchar(0x08E4Ea44, 158);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 324.17, -187.14, 21.11, 0);
//Rhino
setchar(0x08E4Eac8, 162);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 308.58, -192.32, 21.11, 0);
//Patriot
setchar(0x08E4Ea70, 137);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, 315.92, -189.46, 21.11, 0);
//BF Injection
setchar(0x08E4Eb78, 155);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 332.58, -168.04, 21.11, 180);
//Leone Sentinel
setchar(0x08E4Ea18, 172);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 329.04, -165.84, 21.25, 180);
//Yakuza Stinger
setchar(0x8E4EB20, 174);
setchar(0x8E4EB20 + 0x18, 0x01);
setfloat(0x8E4EB24, 318.63, -176.30, 21.11, 180);
//Diablo Stallion
setchar(0x8E4EB4C, 175);
setchar(0x8E4EB4C + 0x18, 0x01);
setfloat(0x8E4EB50, 324.19, -171.80, 21.11, 180);
//Yardie Lobo
setchar(0x8E4EAF4, 173);
setchar(0x8E4EAF4 + 0x18, 0x01);
setfloat(0x8E4EAF8, 312.05, -177.10, 21.11, 180);
//Angel
setchar(0x8E4EA9C, 202);
setchar(0x8E4EA9C + 0x18, 0x01);
setfloat(0x8E4EAA0, 289.57, -185.97, 21.17, 90);
//Freeway
setchar(0x08E4Ec54, 207);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, 290.55, -188.36, 21.16, 90);
//PCJ-600
setchar(0x08E4Ecd8, 205);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, 291.97, -191.73, 21.16, 90);
//Faggio
setchar(0x08E4Ec28, 206);
setchar(0x08E4Ec28 + 0x18, 0x01);
setfloat(0x08E4Ec2c, 292.95, -194.47, 21.16, 90);
//Sanchez
setchar(0x08E4Eba4, 210);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 293.90, -197.25, 21.15, 90);
//Hunter
setchar(0x08E4Ea18, 213);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 356.65, -187.25, 44.15, 270);
//Police Maverick
setchar(0x08E4E9C0, 214);
setfloat(0x08E4E9C4, 349.03, -197.54, 44.15);
setfloat(0x08E4E9D0, 270);
off()

#cheat New Barracks OL
//ID: 14816
//Score: 13
//Author: rashon125
//Category: Pimp My Garage
//Description: This Barracks OL is lighter with better suspension, and wheels are more able to turn which goes for better handling. It alos has better traction and is indestructable.
//Image: none
//Time: 16/07/2006 02:26:14
//Working: Unknown
setfloat(0x9442a6c, 1.25);
setfloat(0x945b330, 9000);
setfloat(0x945b338, 0.75);
setfloat(0x945b3f0, 0.5);
setfloat(0x945b3f4, -0.24999);
setfloat(0x945b3bc, 0.95);
setfloat(0x945b3c0, 0.95);
setfloat(0x945b3b4, 0.001);
setfloat(0x945b3d8, 35);
setfloat(0x945b3e8, 1.25);
setfloat(0x945b404, 0.65);
setfloat(0x945b3dc, 0.75);
setfloat(0x945b3e0, 0.5);
setfloat(0x945b33c, 0.);
sethex(0x945b400, 0x22, 0x60, 0x00, 0x04);
sethex(0x944fb54, 0xFF, 0xFF, 0x00);
sethex(0x944fb04, 0xFF, 0x00, 0xFF);
setint(0x8E38988, 163);
sethex(0x8E389AE, 0x01, 0xFF);
teleport(1155.71, -257.05, 17.30);
setchar(pplayer + 0xB84, 0x00);

#cheat Mr. Whoopee, Pimped out Version
//ID: 14814
//Score: 12
//Author: rashon125
//Category: Pimp My Garage
//Description: You can't ride this in the game but you can finally see what it is. The only thing different is this is a better version of that other Mr. Whoopee.
//Image: none
//Time: 16/07/2006 02:14:16
//Working: Unknown
setfloat(0x9441c5c, 0.75);
setfloat(0x945abb0, 1500);
setfloat(0x945abb8, 0.85);
setfloat(0x945ac70, 0.4);
setfloat(0x945ac74, -0.24999);
setfloat(0x945ac3c, 0.99667);
setfloat(0x945ac40, 0.99667);
setfloat(0x945ac34, 0.003);
setfloat(0x945ac68, 1.25);
setfloat(0x945ac6c, 0.15);
setfloat(0x945ac84, 0.25);
setfloat(0x945ac5c, 0.8);
setfloat(0x945abbc, 0);
sethex(0x945ac80, 0x02, 0x45, 0x00, 0x04);
sethex(0x944fb1c, 0xFF, 0xFF, 0xFF);
sethex(0x944fb30, 0xFF, 0x0D, 0x08);
setint(0x8E38988, 154);
setchar(0x8E389AC, 111, 116);
sethex(0x8E389AE, 0x01, 0x00);
teleport(1155.71, -257.05, 17.30);
setchar(pplayer + 0xB84, 0x00);

#cheat Pimped out Bus
//ID: 14813
//Score: 17
//Author: rashon125
//Category: Pimp My Garage
//Description: The bus is very rare in Liberty City and now you'll get the oppurunity to ride a better version. Search for rashon125 for more great cheats.
//Image: none
//Time: 16/07/2006 02:09:06
//Working: Yes
setfloat(0x945b150, 3000);
setfloat(0x945b158, 0.8);
setfloat(0x945b214, -0.29999);
setfloat(0x945b1dc, 1.12267);
setfloat(0x945b1e0, 1.12267);
setfloat(0x945b1d4, 0.003);
setfloat(0x945b1f0, 0.45);
setfloat(0x945b1f8, 35);
setfloat(0x945b200, 0.45);
setfloat(0x945b15c, 0);
sethex(0x945b220, 0x03, 0x01, 0x00, 0x04);
sethex(0x944fb54, 0x00, 0x00, 0x00);
sethex(0x944fb30, 0x89, 0x99, 0xD4);
setint(0x8E38A38, 161);
setchar(0x8E38A5C, 125, 116);
sethex(0x8E38A5E, 0x01, 0x00);
teleport(292.22, -440.37, 26.02);
setchar(pplayer + 0xB84, 0x00);

#cheat Spawn Outside My Showroom when Busted/Wasted
//ID: 14434
//Score: 32
//Author: rashon125
//Category: Misc
//Description: This spawns you oustide Rashon125's Car Showroom when Busted or Wasted. Make sure you download my Car Showroom cheat, though.
//Image: none
//Time: 09/07/2006 23:42:25
//Working: Yes
setfloat(0x8E55540, 82.94, -1623.88, 26.17);
setfloat(0x8E55530, 82.94, -1623.88, 26.17);
setfloat(0x8E55550, 82.94, -1623.88, 26.17);
setfloat(0x8E554B0, 82.94, -1623.88, 26.17);
setfloat(0x8E55490, 82.94, -1623.88, 26.17);
setfloat(0x8E554A0, 82.94, -1623.88, 26.17);
off()

#cheat Law Enforcement Car Park
//ID: 14389
//Score: 55
//Author: rashon125
//Category: Vehicle
//Description: Spawns the Rhino, Barracks OL, Enforcer, FBI Cruiser, and Police Car across the street from the Portland Docks.
//Image: none
//Time: 08/07/2006 19:37:52
//Working: Yes
//Police
setchar(0x08E4Ebfc, 157);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 1338.15, -834.09, 15.00, 270);
//FBI Cruiser
setchar(0x08E4E9EC, 148);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 1338.01, -830.93, 15.01, 270);
//Enforcer
setchar(0x08E4Ea44, 158);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 1339.13, -825.76, 15.00, 270);
//Barracks OL
setchar(0x08E4Ea70, 188);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, 1339.55, -809.68, 15.00, 270);
//Rhino
setchar(0x08E4Eac8, 162);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 1337.41, -806.12, 15.01, 270);
off()

#cheat Gang Car Park
//ID: 14388
//Score: 48
//Author: rashon125
//Category: Vehicle
//Description: This spawns all gang cars across the street from the Portland Docks. Pic soon.
//Image: none
//Time: 08/07/2006 19:36:17
//Working: Yes
//Spawns all gang cars in front of Portland Docks
//Leone Sentinel
setchar(0x08E4Ebfc, 172);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 1338.15, -834.09, 15.00, 270);
//Diablo Stallion
setchar(0x08E4E9EC, 175);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 1338.01, -830.93, 15.01, 270);
//Yakuza Stinger
setchar(0x08E4Ea44, 174);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 1339.13, -825.76, 15.00, 270);
//Yardie Lobo
setchar(0x08E4Ea70, 173);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, 1339.55, -809.68, 15.00, 270);
//Cartel Cruiser
setchar(0x08E4Eac8, 176);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 1337.41, -806.12, 15.01, 270);
//Hoods Rumpo XL
setchar(0x08E4Eb78, 177);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 1333.85, -800.62, 15.03, 270);
//Forelli Excess
setchar(0x08E4Ea18, 191);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 1330.82, -793.53, 15.03, 270);
//Sindacco Argento
setchar(0x8E4EB4C, 190);
setchar(0x8E4EB4C + 0x18, 0x01);
setfloat(0x8E4EB50, 1331.15, -788.41, 15.01, 270);
//Triad Fish Van
setchar(0x8E4EB20, 170);
setchar(0x8E4EB20 + 0x18, 0x01);
setfloat(0x8E4EB24, 1331.49, -782.25, 15.01, 270);
//Mr. Wongs
setchar(0x8E4EAF4, 171);
setchar(0x8E4EAF4 + 0x18, 0x01);
setfloat(0x8E4EAF8, 1330.66, -775.35, 15.03, 270);
off()

