#cheat Rashon's Car Showroom Loaded v3
//ID: 16392
//Score: 100
//Author: rashon125
//Category: Location Mods
//Description: *Located At Francis Intr.
//*All Helicopter and Plane Spawns
//*Sports Car Spawns
//*Gang Car Spawns
//*Law Enforcement Vehicle Spawns
//*Muscle Car Spawns
//*The Bus and Mr. Whoppee Join Th
//Image: http://img99.imageshack.us/img99/4418/furtherfrontviewmp4.png
//Time: 13/08/2006 05:17:12
//Working: Yes
// By Rashon125
// Located at Francis International Airport
moveto(-1342.61, -586.15, 13.40);  object(0x01BF, 0, 0, 270);
move(4.23, 4.23, 0.00);  object(0x01BF, 0, 0, 0);
move(7.56, -0.03, 0.00);  object(0x01BF, 0, 0, 0);
move(7.21, -0.09, 0.00);  object(0x01BF, 0, 0, 0);
move(5.01, 0.16, 0.00);  object(0x01BF, 0, 0, 0);
move(4.16, -4.02, 0.00);  object(0x01BF, 0, 0, 90);
move(0.04, -7.86, 0.00);  object(0x01BF, 0, 0, 90);
move(0.03, -5.90, 0.00);  object(0x01BF, 0, 0, 90);
move(0.02, -8.02, 0.00);  object(0x01BF, 0, 0, 90);
move(0.05, -8.05, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.01, -8.05, 0.00);  object(0x01BF, 0, 0, 90);
move(-4.27, -4.02, 0.00);  object(0x01BF, 0, 0, 180);
move(-7.99, -0.01, 0.00);  object(0x01BF, 0, 0, 180);
move(-7.94, -0.04, 0.00);  object(0x01BF, 0, 0, 180);
move(-4.30, -0.00, 0.00);  object(0x01BF, 0, 0, 180);
move(-4.10, 4.17, 0.00);  object(0x01BF, 0, 0, 90);
move(0.00, 8.00, 0.00);  object(0x01BF, 0, 0, 90);
move(0.01, 7.28, 0.00);  object(0x01BF, 0, 0, 90);
move(12.16, 22.22, -1.60);  object(0x01BF, 240, 0, 90);
move(4.90, 0.03, 2.80);  object(0x01BF, 240, 0, 90);
move(6.22, 0.21, 2.00);  object(0x01BF, 90, 0, 90);
move(1.97, -0.19, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.07, -7.85, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.42, -0.06, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.24, -0.06, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.70, -0.07, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.13, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(8.60, 8.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.55, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.12, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(21.55, -15.51, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.36, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(0.08, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.71, 0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.41, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.12, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(21.47, -7.72, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.29, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.59, 0.01, 0.00);  object(0x01BF, 90, 0, 89);
move(-6.43, -0.22, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.56, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(22.03, -7.73, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.55, -0.04, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.35, -0.04, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.44, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.71, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(22.06, -6.22, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.53, -0.08, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.55, -0.08, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.12, -0.07, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.86, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.71, 37.79, 3.50);  object(0x01BF, 0, 0, 90);
move(-0.07, -8.01, 0.00);  object(0x01BF, 0, 0, 90);
move(0.14, -7.67, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.25, -7.42, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.18, -7.55, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.06, -6.88, 0.00);  object(0x01BF, 0, 0, 90);
move(4.70, 41.73, 0.00);  object(0x01BF, 0, 0, 180);
move(7.55, -0.02, 0.00);  object(0x01BF, 0, 0, 180);
move(7.64, -0.10, 0.00);  object(0x01BF, 0, 0, 180);
move(4.57, -0.16, 0.00);  object(0x01BF, 0, 0, 180);
move(3.89, -4.14, 0.00);  object(0x01BF, 0, 0, 270);
move(0.00, -8.02, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -6.98, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -7.76, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -7.79, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.08, -7.14, 0.00);  object(0x01BF, 0, 0, 270);
move(-4.16, -3.53, 0.00);  object(0x01BF, 0, 0, 0);
move(-19.94, -0.00, 0.00);  object(0x01BF, 0, 0, 0);
move(7.83, -2.96, -3.60);  object(0x01BF, 90, 0, 0);
move(7.80, 2.99, 3.60);  object(0x01BF, 0, 0, 0);
move(5.52, 41.38, 3.30);  object(0x01BF, 90, 0, 90);
move(-6.50, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.14, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.71, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.31, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(21.53, -7.58, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.11, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.51, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.57, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.32, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(21.45, -7.69, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.09, -0.06, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.34, -0.06, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.36, -0.06, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.59, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(21.50, -7.79, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.42, 0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.08, 0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.32, 0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.95, 0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(21.76, -7.64, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.83, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.80, -0.03, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.40, -0.02, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.82, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(21.96, -6.17, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.89, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.57, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.63, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.85, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(4.77, -4.85, -6.70);  object(0x01F0, 0, 0, 90);
move(0.19, -2.54, -0.10);  object(0x01F0, 0, 0, 90);
move(0.21, -2.90, 0.00);  object(0x01F0, 0, 0, 0);
move(4.46, 0.04, 0.00);  object(0x01F0, 0, 0, 0);
move(2.90, -0.06, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.06, 3.02, 0.00);  object(0x01F0, 0, 0, 270);
move(-14.86, 3.54, 7.00);  object(0x01F0, 0, 0, 0);
move(2.92, -0.13, 0.00);  object(0x01F0, 0, 0, 0);
move(3.17, 0.10, 0.00);  object(0x01F0, 0, 0, 0);
move(3.29, -0.06, 0.00);  object(0x01F0, 0, 0, 0);
move(3.52, 0.22, 0.00);  object(0x01F0, 0, 0, 0);
move(3.69, -0.12, 0.00);  object(0x01F0, 0, 0, 0);
move(3.49, -0.01, 0.00);  object(0x01F0, 0, 0, 0);
move(3.12, 0.01, 0.00);  object(0x01F0, 0, 0, 0);
move(4.12, 0.12, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.28, 3.80, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.02, 3.35, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.41, 3.85, 0.00);  object(0x01F0, 0, 0, 270);
move(0.17, 3.21, 0.00);  object(0x01F0, 0, 0, 270);
move(0.30, 2.84, 0.00);  object(0x01F0, 0, 0, 270);
move(0.06, 3.36, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.17, 3.15, 0.00);  object(0x01F0, 0, 0, 270);
move(0.02, 1.96, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.05, 3.10, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.03, 3.28, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.02, 4.02, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.16, 3.97, 0.00);  object(0x01F0, 0, 0, 270);
move(-0.35, 4.23, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.20, 0.19, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.26, -0.20, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.01, 0.03, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.08, -0.04, 0.00);  object(0x01F0, 0, 0, 180);
move(-2.95, 0.01, 0.00);  object(0x01F0, 0, 0, 180);
move(-3.62, -0.05, 0.00);  object(0x01F0, 0, 0, 180);
move(-4.19, -0.07, 0.00);  object(0x01F0, 0, 0, 180);
move(1.67, -0.00, 0.00);  object(0x01F0, 0, 0, 180);
move(-4.89, -0.91, 0.00);  object(0x01F0, 0, 0, 90);
move(0.23, -3.25, 0.00);  object(0x01F0, 0, 0, 90);
move(0.13, -3.79, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.13, -3.22, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.02, -3.92, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.11, -3.49, 0.00);  object(0x01F0, 0, 0, 90);
move(0.21, -3.57, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.13, -3.29, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.05, -2.98, 0.00);  object(0x01F0, 0, 0, 90);
move(0.11, -3.90, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.65, -4.06, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.02, -4.09, 0.00);  object(0x01F0, 0, 0, 90);
move(-0.14, 1.70, 0.00);  object(0x01F0, 0, 0, 90);
move(18.49, -9.96, -6.20);  object(0x01BF, 110, 0, 270);
move(5.85, 0.03, 2.10);  object(0x01BF, 110, 0, 270);
move(6.29, 0.03, 1.00);  object(0x01BF, 90, 0, 270);
move(1.98, 7.12, 1.20);  object(0x01BF, 110, 0, 180);
move(-0.02, 6.42, 2.40);  object(0x01BF, 110, 0, 180);
move(-0.03, 7.06, 1.70);  object(0x01BF, 90, 0, 180);
move(-7.42, -0.19, 0.00);  object(0x01BF, 90, 0, 180);
move(-7.26, 0.11, -1.20);  object(0x01BF, 250, 0, 90);
move(-2.79, -24.20, -8.38);  object(0x01F0, 0, 340, 0);
move(3.50, -0.09, 1.40);  object(0x01F0, 0, 340, 0);
move(3.59, 0.04, 1.40);  object(0x01F0, 0, 340, 0);
move(14.47, 7.45, 2.10);  object(0x01F0, 0, 340, 270);
move(-0.65, 3.96, 0.90);  object(0x01F0, 0, 340, 270);
move(0.46, 4.70, 2.10);  object(0x01F0, 0, 340, 270);
move(-8.80, -15.93, -3.50);  object(0x01F0, 0, 0, 0);
move(3.33, -0.39, 0.00);  object(0x01F0, 0, 0, 0);
move(2.97, 0.60, 0.00);  object(0x01F0, 0, 0, 270);
move(0.03, 2.92, 0.00);  object(0x01F0, 0, 0, 270);
//Brass Knuckles
setfloat(0x08e2d800, -1315.90, -593.94, 17.78);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Chisel
setfloat(0x08e2d860, -1315.90, -595.94, 17.78);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//Hockey Stick
setfloat(0x08e2d8c0, -1315.90, -597.94, 17.78);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
//Nightstick
setfloat(0x08e2d920, -1315.90, -599.94, 17.78);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
//Butcher Knife
setfloat(0x08e2d980, -1315.90, -601.94, 17.78);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
//Baseball Bat
setfloat(0x08e2d9e0, -1315.90, -603.94, 17.78);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
//Fire Axe
setfloat(0x08e2da40, -1315.90, -605.94, 17.78);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
//Meat Cleaver
setfloat(0x08e2daa0, -1315.90, -607.94, 17.78);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
//Machete
setfloat(0x08e2db00, -1315.90, -609.94, 17.78);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
//Katana
setfloat(0x08E2DB60, -1315.90, -611.94, 17.78);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
//Chainsaw
setfloat(0x08E2DBC0, -1315.90, -613.94, 17.78);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
//Grenade
setfloat(0x08E2DC20, -1340.64, -625.91, 24.58);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0x1, 0x1);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
//Remote Grenade
setfloat(0x08E2DC80, -1340.64, -623.91, 24.58);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0x1, 0x1);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
//Molotovs
setfloat(0x08E2DD40, -1340.64, -621.91, 24.58);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0x1, 0x1);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
//Tear Gas
setfloat(0x08e2d800, -1340.64, -619.91, 24.58);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1, 0x1)
setshort(0x08e2d826, 0x10f)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Pistol
setfloat(0x08E2DDA0, -1340.52, -617.91, 24.58);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0x1, 0x1);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
//Colt Python
setfloat(0x08E2DE00, -1340.52, -615.91, 24.58);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0x1, 0x1);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
//AK-47
setfloat(0x08E2DF80, -1340.52, -605.91, 24.58);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0x1, 0x1);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
//M4
setfloat(0x08E2DFE0, -1340.52, -603.91, 24.58);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0x1, 0x1);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
//Chromed Shotgun
setfloat(0x08E2DE60, -1340.52, -601.91, 24.58);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0x1, 0x1);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
//Spaz Shotgun
setfloat(0x08E2DEC0, -1340.52, -599.91, 24.58);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0x1, 0x1);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
//Combat Shotgun
setfloat(0x08E2DF20, 1340.52, -597.91, 24.58);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0x1, 0x1);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
//Tec-9
setfloat(0x08E2E040, -1340.52, -613.91, 24.58);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0x1, 0x1);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
//Micro SMG
setfloat(0x08E2E0A0, -1340.52, -611.91, 24.58);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0x1, 0x1);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
//Mac 10
setfloat(0x08E2E100, -1340.52, -609.91, 24.58);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0x1, 0x1);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
//MP5
setfloat(0x08E2E160, -1340.52, -607.91, 24.58);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0x1, 0x1);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
//Rocket Launcher
setfloat(0x08E2E280, -1340.52, -595.91, 24.58);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0x1, 0x1);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
//Flame Thrower
setfloat(0x08E2E2E0, -1340.52, -593.91, 24.58);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0x1, 0x1);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
//M60
setfloat(0x08E2E340, -1340.52, -591.91, 24.58);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0x1, 0x1);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
//Minigun
setfloat(0x08E2E3A0, -1340.52, -589.91, 24.58);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0x1, 0x1);
setshort(0x08E2E3C6, 0x122);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
//Sniper Rifle
setfloat(0x08E2E1C0, -1340.52, -587.91, 24.58);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0x1, 0x1);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
//LS Sniper Rifle
setfloat(0x08E2E220, -1340.52, -585.91, 24.58);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0x1, 0x1);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
//Camera
setfloat(0x08e2d800, -1338.41, -584.56, 24.58);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1, 0x1)
setshort(0x08e2d826, 0x124)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Health Pickup
setfloat(0x08E2E400, -1336.41, -584.56, 24.58);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x22e);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
//Armor Pickup
setfloat(0x08e2d860, -1334.41, -584.56, 24.58);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x24b)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//Stallion
setchar(0x08E4Ebfc, 167);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, -1320.26, -623.65, 11.12, 90);
//Idaho
setchar(0x08E4E9EC, 132);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, -1320.06, -616.49, 11.12, 90);
//Diablo Stallion
setchar(0x08E4Ea44, 175);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, -1320.06, -608.70, 11.12, 90);
//Esperanto
setchar(0x08E4Ea70, 150);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, -1320.06, -600.96, 11.12, 90);
//Leone Sentinel
setchar(0x08E4Eac8, 172);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, -1320.06, -595.65, 11.12, 90);
//Yakuza Stinger
setchar(0x08E4Eb78, 174);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, -1337.54, -607.31, 11.12, 90);
//Cartel Cruiser
setchar(0x08E4Ea18, 176);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, -1337.54, -615.57, 11.12, 90);
//Yardie Lobo
setchar(0x8E4EB4C, 173);
setchar(0x8E4EB4C + 0x18, 0x01);
setfloat(0x8E4EB50, -1337.54, -623.26, 11.12, 90);
//Hoods Rumpo XL
setchar(0x8E4EB20, 177);
setchar(0x8E4EB20 + 0x18, 0x01);
setfloat(0x8E4EB24, -1326.08, -621.94, 11.12, 0);
//Bus
setchar(0x8E4EAF4, 161);
setchar(0x8E4EAF4 + 0x18, 0x01);
setfloat(0x8E4EAF8, -1317.93, -640.28, 11.12, 270);
//Mr. Whoopee
setchar(0x8E4EA9C, 154);
setchar(0x8E4EA9C + 0x18, 0x01);
setfloat(0x8E4EAA0, -1327.02, -640.28, 11.12, 270);
//Police Car
setchar(0x08E4Ec54, 157);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, -1309.85, -623.21, 11.12, 0);
//FBI Cruiser
setchar(0x08E4Ecd8, 148);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, -1309.67, -613.42, 11.12, 0);
//Enforcer
setchar(0x08E4Ec28, 158);
setchar(0x08E4Ec28 + 0x18, 0x01);
setfloat(0x08E4Ec2c, -1309.69, -603.02, 11.12, 0);
//Rhino
setchar(0x08E4Eba4, 162);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, -1308.88, -587.43, 11.12, 0);
//Maverick
setchar(0x08E4Ebfc, 214);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, -1400.06, -584.84, 11.12, 270);
//Police Maverick
setchar(0x8E4EAF4, 215);
setchar(0x8E4EAF4 + 0x18, 0x01);
setfloat(0x8E4EAF8, -1394.89, -542.56, 11.12, 270);
//Hunter
setchar(0x08E4Ea18, 213);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, -1396.00, -560.46, 11.12, 270);
//Dodo
setchar(08E4Ed88, 164);
setchar(08E4Ed88 + 0x18, 0x01);
setfloat(08E4Ed8c, -1364.85, -552.24, 11.12, 270);
//Patriot
setchar(0x08E4Ebfc, 137);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, -1320.39, -577.04, 11.12, 180);
//Kuruma
setchar(0x08E4E9EC, 152);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, -1332.85, -578.00, 11.12, 180);
//Stinger
setchar(0x08E4Ea44, 133);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, -1345.24, -636.01, 11.12, 90);
//Cheetah
setchar(0x08E4Ea70, 146);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, -1345.24, -631.45, 11.12, 90);
off()

#cheat Tall skyscrapper
//ID: 16332
//Score: 62
//Author: penguinsrule
//Category: Location Mods
//Description: this has 20+ floors and has a window on each level and has ramp so you can walk or drive to the top
//Image: http://telmaz.no-ip.info:3249/pictures/teltallv1.gif
//Time: 12/08/2006 01:38:53
//Working: Yes
moveto(92.64, -1648.41, 26.85);  object(0x01BF, 270, 330, 90);
move(0.02, -3.10, 1.80);  object(0x01BF, 270, 330, 90);
move(0.05, -7.50, 2.00);  object(0x01BF, 270, 0, 90);
move(-0.11, 18.20, 0.00);  object(0x01BF, 270, 0, 90);
move(-5.83, -0.04, 0.00);  object(0x01BF, 270, 0, 90);
move(0.05, -7.70, 0.00);  object(0x01BF, 270, 0, 90);
move(0.04, -7.20, 0.00);  object(0x01BF, 270, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01BF, 270, 0, 90);
moveto(92.64, -1648.41, 32.70);  object(0x01BF, 270, 330, 90);
move(0.02, -3.10, 1.80);  object(0x01BF, 270, 330, 90);
move(0.05, -7.50, 2.00);  object(0x01BF, 270, 0, 90);
move(-0.11, 18.20, 0.00);  object(0x01BF, 270, 0, 90);
move(-5.83, -0.04, 0.00);  object(0x01BF, 270, 0, 90);
move(0.05, -7.70, 0.00);  object(0x01BF, 270, 0, 90);
move(0.04, -7.20, 0.00);  object(0x01BF, 270, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01BF, 270, 0, 90);
moveto(92.64, -1648.41, 38.55);  object(0x01BF, 270, 330, 90);
move(0.02, -3.10, 1.80);  object(0x01BF, 270, 330, 90);
move(0.05, -7.50, 2.00);  object(0x01BF, 270, 0, 90);
move(-0.11, 18.20, 0.00);  object(0x01BF, 270, 0, 90);
move(-5.83, -0.04, 0.00);  object(0x01BF, 270, 0, 90);
move(0.05, -7.70, 0.00);  object(0x01BF, 270, 0, 90);
move(0.04, -7.20, 0.00);  object(0x01BF, 270, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01BF, 270, 0, 90);
moveto(92.64, -1648.41, 44.40);  object(0x01BF, 270, 330, 90);
move(0.02, -3.10, 1.80);  object(0x01BF, 270, 330, 90);
move(0.05, -7.50, 2.00);  object(0x01BF, 270, 0, 90);
move(-0.11, 18.20, 0.00);  object(0x01BF, 270, 0, 90);
move(-5.83, -0.04, 0.00);  object(0x01BF, 270, 0, 90);
move(0.05, -7.70, 0.00);  object(0x01BF, 270, 0, 90);
move(0.04, -7.20, 0.00);  object(0x01BF, 270, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01BF, 270, 0, 90);
moveto(92.64, -1648.41, 50.25);  object(0x01BF, 270, 330, 90);
move(0.02, -3.10, 1.80);  object(0x01BF, 270, 330, 90);
move(0.05, -7.50, 2.00);  object(0x01BF, 270, 0, 90);
move(-0.11, 18.20, 0.00);  object(0x01BF, 270, 0, 90);
move(-5.83, -0.04, 0.00);  object(0x01BF, 270, 0, 90);
move(0.05, -7.70, 0.00);  object(0x01BF, 270, 0, 90);
move(0.04, -7.20, 0.00);  object(0x01BF, 270, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01BF, 270, 0, 90);
moveto(92.64, -1648.41, 56.10);  object(0x01BF, 270, 330, 90);
move(0.02, -3.10, 1.80);  object(0x01BF, 270, 330, 90);
move(0.05, -7.50, 2.00);  object(0x01BF, 270, 0, 90);
move(-0.11, 18.20, 0.00);  object(0x01BF, 270, 0, 90);
move(-5.83, -0.04, 0.00);  object(0x01BF, 270, 0, 90);
move(0.05, -7.70, 0.00);  object(0x01BF, 270, 0, 90);
move(0.04, -7.20, 0.00);  object(0x01BF, 270, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01BF, 270, 0, 90);
moveto(92.64, -1648.41, 61.95);  object(0x01BF, 270, 330, 90);
move(0.02, -3.10, 1.80);  object(0x01BF, 270, 330, 90);
move(0.05, -7.50, 2.00);  object(0x01BF, 270, 0, 90);
move(-0.11, 18.20, 0.00);  object(0x01BF, 270, 0, 90);
move(-5.83, -0.04, 0.00);  object(0x01BF, 270, 0, 90);
move(0.05, -7.70, 0.00);  object(0x01BF, 270, 0, 90);
move(0.04, -7.20, 0.00);  object(0x01BF, 270, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01BF, 270, 0, 90);
moveto(92.64, -1648.41, 67.81);  object(0x01BF, 270, 330, 90);
move(0.02, -3.10, 1.80);  object(0x01BF, 270, 330, 90);
move(0.05, -7.50, 2.00);  object(0x01BF, 270, 0, 90);
move(-0.11, 18.20, 0.00);  object(0x01BF, 270, 0, 90);
move(-5.83, -0.04, 0.00);  object(0x01BF, 270, 0, 90);
move(0.05, -7.70, 0.00);  object(0x01BF, 270, 0, 90);
move(0.04, -7.20, 0.00);  object(0x01BF, 270, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01BF, 270, 0, 90);
moveto(92.64, -1648.41, 73.66);  object(0x01BF, 270, 330, 90);
move(0.02, -3.10, 1.80);  object(0x01BF, 270, 330, 90);
move(0.05, -7.50, 2.00);  object(0x01BF, 270, 0, 90);
move(-0.11, 18.20, 0.00);  object(0x01BF, 270, 0, 90);
move(-5.83, -0.04, 0.00);  object(0x01BF, 270, 0, 90);
move(0.05, -7.70, 0.00);  object(0x01BF, 270, 0, 90);
move(0.04, -7.20, 0.00);  object(0x01BF, 270, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01BF, 270, 0, 90);
moveto(92.64, -1648.41, 79.51);  object(0x01BF, 270, 330, 90);
move(0.02, -3.10, 1.80);  object(0x01BF, 270, 330, 90);
move(0.05, -7.50, 2.00);  object(0x01BF, 270, 0, 90);
move(-0.11, 18.20, 0.00);  object(0x01BF, 270, 0, 90);
move(-5.83, -0.04, 0.00);  object(0x01BF, 270, 0, 90);
move(0.05, -7.70, 0.00);  object(0x01BF, 270, 0, 90);
move(0.04, -7.20, 0.00);  object(0x01BF, 270, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01BF, 270, 0, 90);
moveto(92.64, -1648.41, 85.36);  object(0x01BF, 270, 330, 90);
move(0.02, -3.10, 1.80);  object(0x01BF, 270, 330, 90);
move(0.05, -7.50, 2.00);  object(0x01BF, 270, 0, 90);
move(-0.11, 18.20, 0.00);  object(0x01BF, 270, 0, 90);
move(-5.83, -0.04, 0.00);  object(0x01BF, 270, 0, 90);
move(0.05, -7.70, 0.00);  object(0x01BF, 270, 0, 90);
move(0.04, -7.20, 0.00);  object(0x01BF, 270, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01BF, 270, 0, 90);
moveto(92.64, -1648.41, 91.21);  object(0x01BF, 270, 330, 90);
move(0.02, -3.10, 1.80);  object(0x01BF, 270, 330, 90);
move(0.05, -7.50, 2.00);  object(0x01BF, 270, 0, 90);
move(-0.11, 18.20, 0.00);  object(0x01BF, 270, 0, 90);
move(-5.83, -0.04, 0.00);  object(0x01BF, 270, 0, 90);
move(0.05, -7.70, 0.00);  object(0x01BF, 270, 0, 90);
move(0.04, -7.20, 0.00);  object(0x01BF, 270, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01BF, 270, 0, 90);
moveto(92.64, -1648.41, 97.06);  object(0x01BF, 270, 330, 90);
move(0.02, -3.10, 1.80);  object(0x01BF, 270, 330, 90);
move(0.05, -7.50, 2.00);  object(0x01BF, 270, 0, 90);
move(-0.11, 18.20, 0.00);  object(0x01BF, 270, 0, 90);
move(-5.83, -0.04, 0.00);  object(0x01BF, 270, 0, 90);
move(0.05, -7.70, 0.00);  object(0x01BF, 270, 0, 90);
move(0.04, -7.20, 0.00);  object(0x01BF, 270, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01BF, 270, 0, 90);
moveto(92.64, -1648.41, 102.91);  object(0x01BF, 270, 330, 90);
move(0.02, -3.10, 1.80);  object(0x01BF, 270, 330, 90);
move(0.05, -7.50, 2.00);  object(0x01BF, 270, 0, 90);
move(-0.11, 18.20, 0.00);  object(0x01BF, 270, 0, 90);
move(-5.83, -0.04, 0.00);  object(0x01BF, 270, 0, 90);
move(0.05, -7.70, 0.00);  object(0x01BF, 270, 0, 90);
move(0.04, -7.20, 0.00);  object(0x01BF, 270, 0, 90);
move(0.02, -3.30, 0.00);  object(0x01BF, 270, 0, 90);
//s
moveto(95.95, -1640.83, 27.42);  object(0x01BF, 0, 0, 270);
move(0.02, -7.80, 0.00);  object(0x01BF, 0, 0, 270);
move(0.02, -7.60, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -2.70, 0.00);  object(0x01BF, 0, 0, 270);
move(-3.85, -4.04, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.50, 0.01, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.07, 3.91, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.07, 16.80, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.01, 1.50, 0.00);  object(0x01BF, 0, 0, 90);
move(8.35, 3.84, 0.00);  object(0x01BF, 0, 0, 180);
move(-4.30, -0.03, 0.00);  object(0x01BF, 0, 0, 180);
moveto(95.95, -1640.83, 33.27);  object(0x01BF, 0, 0, 270);
move(0.02, -7.80, 0.00);  object(0x01BF, 0, 0, 270);
move(0.02, -7.60, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -2.70, 0.00);  object(0x01BF, 0, 0, 270);
move(-3.85, -4.04, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.50, 0.01, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.07, 3.91, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.07, 16.80, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.01, 1.50, 0.00);  object(0x01BF, 0, 0, 90);
move(8.35, 3.84, 0.00);  object(0x01BF, 0, 0, 180);
move(-4.30, -0.03, 0.00);  object(0x01BF, 0, 0, 180);
moveto(95.95, -1640.83, 39.12);  object(0x01BF, 0, 0, 270);
move(0.02, -7.80, 0.00);  object(0x01BF, 0, 0, 270);
move(0.02, -7.60, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -2.70, 0.00);  object(0x01BF, 0, 0, 270);
move(-3.85, -4.04, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.50, 0.01, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.07, 3.91, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.07, 16.80, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.01, 1.50, 0.00);  object(0x01BF, 0, 0, 90);
move(8.35, 3.84, 0.00);  object(0x01BF, 0, 0, 180);
move(-4.30, -0.03, 0.00);  object(0x01BF, 0, 0, 180);
moveto(95.95, -1640.83, 44.97);  object(0x01BF, 0, 0, 270);
move(0.02, -7.80, 0.00);  object(0x01BF, 0, 0, 270);
move(0.02, -7.60, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -2.70, 0.00);  object(0x01BF, 0, 0, 270);
move(-3.85, -4.04, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.50, 0.01, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.07, 3.91, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.07, 16.80, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.01, 1.50, 0.00);  object(0x01BF, 0, 0, 90);
move(8.35, 3.84, 0.00);  object(0x01BF, 0, 0, 180);
move(-4.30, -0.03, 0.00);  object(0x01BF, 0, 0, 180);
moveto(95.95, -1640.83, 50.82);  object(0x01BF, 0, 0, 270);
move(0.02, -7.80, 0.00);  object(0x01BF, 0, 0, 270);
move(0.02, -7.60, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -2.70, 0.00);  object(0x01BF, 0, 0, 270);
move(-3.85, -4.04, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.50, 0.01, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.07, 3.91, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.07, 16.80, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.01, 1.50, 0.00);  object(0x01BF, 0, 0, 90);
move(8.35, 3.84, 0.00);  object(0x01BF, 0, 0, 180);
move(-4.30, -0.03, 0.00);  object(0x01BF, 0, 0, 180);
moveto(95.95, -1640.83, 56.67);  object(0x01BF, 0, 0, 270);
move(0.02, -7.80, 0.00);  object(0x01BF, 0, 0, 270);
move(0.02, -7.60, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -2.70, 0.00);  object(0x01BF, 0, 0, 270);
move(-3.85, -4.04, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.50, 0.01, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.07, 3.91, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.07, 16.80, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.01, 1.50, 0.00);  object(0x01BF, 0, 0, 90);
move(8.35, 3.84, 0.00);  object(0x01BF, 0, 0, 180);
move(-4.30, -0.03, 0.00);  object(0x01BF, 0, 0, 180);
moveto(95.95, -1640.83, 62.52);  object(0x01BF, 0, 0, 270);
move(0.02, -7.80, 0.00);  object(0x01BF, 0, 0, 270);
move(0.02, -7.60, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -2.70, 0.00);  object(0x01BF, 0, 0, 270);
move(-3.85, -4.04, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.50, 0.01, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.07, 3.91, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.07, 16.80, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.01, 1.50, 0.00);  object(0x01BF, 0, 0, 90);
move(8.35, 3.84, 0.00);  object(0x01BF, 0, 0, 180);
move(-4.30, -0.03, 0.00);  object(0x01BF, 0, 0, 180);
moveto(95.95, -1640.83, 68.37);  object(0x01BF, 0, 0, 270);
move(0.02, -7.80, 0.00);  object(0x01BF, 0, 0, 270);
move(0.02, -7.60, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -2.70, 0.00);  object(0x01BF, 0, 0, 270);
move(-3.85, -4.04, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.50, 0.01, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.07, 3.91, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.07, 16.80, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.01, 1.50, 0.00);  object(0x01BF, 0, 0, 90);
move(8.35, 3.84, 0.00);  object(0x01BF, 0, 0, 180);
move(-4.30, -0.03, 0.00);  object(0x01BF, 0, 0, 180);
moveto(95.95, -1640.83, 74.22);  object(0x01BF, 0, 0, 270);
move(0.02, -7.80, 0.00);  object(0x01BF, 0, 0, 270);
move(0.02, -7.60, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -2.70, 0.00);  object(0x01BF, 0, 0, 270);
move(-3.85, -4.04, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.50, 0.01, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.07, 3.91, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.07, 16.80, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.01, 1.50, 0.00);  object(0x01BF, 0, 0, 90);
move(8.35, 3.84, 0.00);  object(0x01BF, 0, 0, 180);
move(-4.30, -0.03, 0.00);  object(0x01BF, 0, 0, 180);
moveto(95.95, -1640.83, 80.07);  object(0x01BF, 0, 0, 270);
move(0.02, -7.80, 0.00);  object(0x01BF, 0, 0, 270);
move(0.02, -7.60, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -2.70, 0.00);  object(0x01BF, 0, 0, 270);
move(-3.85, -4.04, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.50, 0.01, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.07, 3.91, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.07, 16.80, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.01, 1.50, 0.00);  object(0x01BF, 0, 0, 90);
move(8.35, 3.84, 0.00);  object(0x01BF, 0, 0, 180);
move(-4.30, -0.03, 0.00);  object(0x01BF, 0, 0, 180);
moveto(95.95, -1640.83, 85.92);  object(0x01BF, 0, 0, 270);
move(0.02, -7.80, 0.00);  object(0x01BF, 0, 0, 270);
move(0.02, -7.60, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -2.70, 0.00);  object(0x01BF, 0, 0, 270);
move(-3.85, -4.04, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.50, 0.01, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.07, 3.91, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.07, 16.80, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.01, 1.50, 0.00);  object(0x01BF, 0, 0, 90);
move(8.35, 3.84, 0.00);  object(0x01BF, 0, 0, 180);
move(-4.30, -0.03, 0.00);  object(0x01BF, 0, 0, 180);
moveto(95.95, -1640.83, 91.77);  object(0x01BF, 0, 0, 270);
move(0.02, -7.80, 0.00);  object(0x01BF, 0, 0, 270);
move(0.02, -7.60, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -2.70, 0.00);  object(0x01BF, 0, 0, 270);
move(-3.85, -4.04, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.50, 0.01, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.07, 3.91, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.07, 16.80, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.01, 1.50, 0.00);  object(0x01BF, 0, 0, 90);
move(8.35, 3.84, 0.00);  object(0x01BF, 0, 0, 180);
move(-4.30, -0.03, 0.00);  object(0x01BF, 0, 0, 180);
moveto(95.95, -1640.83, 97.62);  object(0x01BF, 0, 0, 270);
move(0.02, -7.80, 0.00);  object(0x01BF, 0, 0, 270);
move(0.02, -7.60, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -2.70, 0.00);  object(0x01BF, 0, 0, 270);
move(-3.85, -4.04, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.50, 0.01, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.07, 3.91, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.07, 16.80, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.01, 1.50, 0.00);  object(0x01BF, 0, 0, 90);
move(8.35, 3.84, 0.00);  object(0x01BF, 0, 0, 180);
move(-4.30, -0.03, 0.00);  object(0x01BF, 0, 0, 180);
moveto(95.95, -1640.83, 103.47);  object(0x01BF, 0, 0, 270);
move(0.02, -7.80, 0.00);  object(0x01BF, 0, 0, 270);
move(0.02, -7.60, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -2.70, 0.00);  object(0x01BF, 0, 0, 270);
move(-3.85, -4.04, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.50, 0.01, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.07, 3.91, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.07, 16.80, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.01, 1.50, 0.00);  object(0x01BF, 0, 0, 90);
move(8.35, 3.84, 0.00);  object(0x01BF, 0, 0, 180);
move(-4.30, -0.03, 0.00);  object(0x01BF, 0, 0, 180);
teleport(85.64, -1644.41, 26.85)

#cheat tonis private beach
//ID: 16307
//Score: 63
//Author: thomas12
//Category: Location Mods
//Description: a wicked mod i made with a hunter and a speeder spawn, 6 weapon spawns, trees have been added and theres a teleport, the pic looks cr*p but it is better in game
//Image: http://img140.imageshack.us/img140/4608/screen1vi7.png
//Time: 11/08/2006 18:11:06
//Working: Yes
moveto(1519.96, -127.04, 13.74);  object(0x01BF, 0, 0, 280);
move(1.44, 7.77, 0.00);  object(0x01BF, 0, 0, 280);
move(2.67, 1.03, 3.30);  object(0x0CDB, 90, 0, 280);
move(-0.91, -4.92, 0.00);  object(0x0CDB, 90, 0, 280);
move(-0.91, -4.92, 0.00);  object(0x0CDB, 90, 0, 280);
move(-0.15, -0.79, 0.00);  object(0x0CDB, 90, 0, 280);
move(4.69, -0.87, 0.00);  object(0x0CDB, 90, 0, 280);
move(0.89, 4.82, 0.00);  object(0x0CDB, 90, 0, 280);
move(0.91, 4.92, 0.00);  object(0x0CDB, 90, 0, 280);
move(0.18, 0.98, 0.00);  object(0x0CDB, 90, 0, 280);
move(4.91, -0.91, 0.00);  object(0x0CDB, 90, 0, 280);
move(-0.89, -4.82, 0.00);  object(0x0CDB, 90, 0, 280);
move(-0.91, -4.92, 0.00);  object(0x0CDB, 90, 0, 280);
move(-0.16, -0.88, 0.00);  object(0x0CDB, 90, 0, 280);
move(4.26, 8.65, -3.37);  object(0x01BF, 0, 0, 280);
move(-1.40, -7.71, 0.00);  object(0x01BF, 0, 0, 280);
move(-7.61, 1.99, -2.05);  object(0x025B, 0, 0, 174);
move(3.87, 4.29, 0.00);  object(0x025B, 0, 0, 174);
move(-7.17, -0.40, 0.00);  object(0x025B, 0, 0, 174);
move(2.09, 5.80, 0.00);  object(0x025B, 0, 0, 174);
move(7.20, -0.82, 0.00);  object(0x025B, 0, 0, 174);
move(7.80, 9.06, -1.47);  object(0x0268, 0, 0, 144);
move(-5.81, 2.06, 0.10);  object(0x026C, 0, 0, 172);
move(-3.82, 4.03, 0.00);  object(0x026C, 0, 0, 263);
move(-2.35, -5.72, 0.20);  object(0x026C, 0, 0, 236);
move(-3.30, 4.01, 0.20);  object(0x0271, 0, 0, 144);
move(-7.27, -6.19, 1.00);  object(0x0269, 0, 0, 219);
move(18.29, 14.64, -1.37);  object(0x0268, 0, 0, 167);
move(4.20, 13.78, 2.89);  object(0x01BF, 0, 0, 317);
move(0.00, 0.00, 2.30);  object(0x01BF, 305, 0, 317);
move(2.54, -2.72, 0.70);  object(0x01BF, 245, 0, 317);
move(1.71, -1.83, -2.80);  object(0x01BF, 180, 0, 317);
move(-21.73, -62.91, 23.85);  object(0x01BF, 245, 0, 248);
move(5.08, 2.07, -3.50);  object(0x01BF, 230, 0, 248);
move(4.31, 1.76, -3.90);  object(0x01BF, 230, 0, 248);
move(4.01, 1.63, -3.60);  object(0x01BF, 230, 0, 248);
move(3.95, 1.61, -3.60);  object(0x01BF, 230, 0, 248);
move(4.58, 1.87, -4.20);  object(0x01BF, 230, 0, 248);
move(3.49, 1.42, -3.20);  object(0x01BF, 230, 0, 248);
move(3.98, 1.62, -3.60);  object(0x01BF, 230, 0, 248);
move(2.94, 1.20, -2.70);  object(0x01BF, 230, 0, 248);
move(21.66, 34.99, -5.63);  object(0x01BF, 180, 0, 10);
move(-2.02, -11.63, 0.00);  object(0x01BF, 180, 0, 10);
//weapon 1
setfloat(0x08e2d800, 1539.26, -85.83, 11.29);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x10d)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//weapon 2
setfloat(0x08E2E400, 1541.19, -88.23, 11.29);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x109);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
//weapon 3
setfloat(0x08e2d860, 1541.19, -84.42, 11.29);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x114)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//weapon 4
setfloat(0x08e2d8c0, 1544.06, -86.80, 11.29);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x11a);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
//weapon 5
setfloat(0x08e2d920, 1546.66, -84.66, 11.29);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x11f);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
//weapon 6
setfloat(0x08e2d980, 1544.15, -81.93, 11.29);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x122);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
//Created Using Vehicle Spawner
//By RASAL
setchar(0x08E4E9C0, 213);
setfloat(0x08E4E9C4, 1512.51, -152.80, 40.35);
setfloat(0x08E4E9D0, 180);
//1 vehicle
setchar(0x08E4Ebfc, 194);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 1577.98, -108.35, -0.94, 270);
teleport(1557.94, -113.01, 7.89) ;

#cheat rooftop vehicle shop
//ID: 16294
//Score: 57
//Author: thomas12
//Category: Location Mods
//Description: many vehicles spawn at the top of a roof, this mod comes with a teleport, wait a while for the stairs to spawn so u can walk up there
//Image: http://img89.imageshack.us/img89/9407/screen1ac4.png
//Time: 11/08/2006 13:56:28
//Working: Yes
moveto(269.93, -588.31, 36.58);  object(0x01BF, 60, 0, 270);
move(-4.86, -0.05, 3.10);  object(0x01BF, 55, 0, 270);
move(-5.03, -0.05, 3.50);  object(0x01BF, 55, 0, 270);
move(-3.76, -0.04, 2.90);  object(0x01BF, 50, 0, 270);
move(-3.70, -0.04, 3.10);  object(0x01BF, 50, 0, 270);
move(-4.84, -0.05, 4.10);  object(0x01BF, 50, 0, 270);
move(-5.22, -0.06, 4.00);  object(0x01BF, 55, 0, 270);
move(-5.29, -0.06, 3.70);  object(0x01BF, 55, 0, 270);
move(-4.03, -0.04, 3.00);  object(0x01BF, 50, 0, 269);
move(-5.65, -0.48, 1.30);  object(0x01BF, 75, 0, 90);
move(-5.37, 0.12, -1.10);  object(0x01BF, 80, 0, 92);
move(-6.28, 0.07, -1.90);  object(0x01BF, 65, 0, 90);
//1 vehicle
setchar(0x08E4Ebfc, 133);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 200.08, -582.08, 63.81, 0);
//2 vehicle
setchar(0x08E4E9EC, 146);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 200.75, -594.88, 63.81, 0);
//3 vehicle
setchar(0x08E4Ea44, 148);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 199.27, -588.14, 63.81, 0);
//4 vehicle
setchar(0x08E4Ea70, 174);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, 187.20, -581.55, 63.81, 0);
//5 vehicle
setchar(0x08E4Eac8, 164);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 180.06, -589.76, 63.81, 0);
//6 vehicle
setchar(0x08E4Eb78, 189);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 169.83, -595.32, 63.81, 0);
//7 vehicle
setchar(0x08E4Ea18, 187);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 169.77, -578.71, 63.81, 0);
//8 vehicle
setchar(0x8E4EB4C, 154);
setchar(0x8E4EB4C + 0x18, 0x01);
setfloat(0x8E4EB50, 185.17, -577.73, 63.81, 0);
//9 vehicle
setchar(0x8E4EB20, 165);
setchar(0x8E4EB20 + 0x18, 0x01);
setfloat(0x8E4EB24, 208.52, -584.05, 63.81, 0);
//10 vehicle
setchar(0x8E4EAF4, 175);
setchar(0x8E4EAF4 + 0x18, 0x01);
setfloat(0x8E4EAF8, 188.76, -590.43, 63.81, 0);
//11 vehicle
setchar(0x8E4EA9C, 185);
setchar(0x8E4EA9C + 0x18, 0x01);
setfloat(0x8E4EAA0, 169.45, -588.08, 63.81, 0);
//12 vehicle
setchar(0x08E4Ec54, 176);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, 193.56, -582.22, 63.81, 0);
//13 vehicle
setchar(0x08E4Ecd8, 209);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, 192.95, -594.44, 63.81, 0);
//14 Vehicle
setchar(0x08E4Ec28, 208);
setchar(0x08E4Ec28 + 0x18, 0x01);
setfloat(0x08E4Ec2c, 189.64, -597.42, 63.81, 0);
//15 Vehicle
setchar(0x08E4Eba4, 191);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 175.04, -585.90, 63.81, 0);
//remove pmg title
off()
teleport(278.17, -587.83, 36.28) ;

#cheat Triad Base
//ID: 16277
//Score: 50
//Author: penguinsrule
//Category: Location Mods
//Description: It had 2 mr wrongs vans, 2 triad fish vans, 8 weapons and shoting balcones
//Image: http://telmaz.no-ip.info:3249/pictures/teltriadv1.gif
//Time: 10/08/2006 23:11:26
//Working: Yes
moveto(874.00, -539.59, 16.37);  object(0x01BF, 0, 0, 0);
move(8.00, 0.00, 0.00);  object(0x01BF, 0, 0, 0);
move(7.70, 0.00, 0.00);  object(0x01BF, 0, 0, 0);
move(3.40, 0.00, 0.00);  object(0x01BF, 0, 0, 0);
move(3.81, -4.09, 0.00);  object(0x01BF, 0, 0, 90);
move(0.01, -7.80, 0.00);  object(0x01BF, 0, 0, 90);
move(0.00, -2.50, 0.00);  object(0x01BF, 0, 0, 90);
move(-4.00, -4.12, 0.00);  object(0x01BF, 0, 0, 180);
move(-8.00, 0.00, 0.00);  object(0x01BF, 0, 0, 180);
move(-8.00, 0.00, 0.00);  object(0x01BF, 0, 0, 180);
move(1.40, 0.00, 0.00);  object(0x01BF, 0, 0, 180);
move(-8.06, 14.26, 0.00);  object(0x01BF, 0, 0, 270);
move(0.03, -4.10, 0.00);  object(0x01BF, 0, 0, 270);
move(3.64, -10.16, 0.00);  object(0x01BF, 0, 0, 180);
move(8.07, 14.31, -0.50);  object(0x01BF, 270, 330, 0);
move(3.80, -0.01, 2.20);  object(0x01BF, 270, 330, 0);
move(6.84, 0.20, 1.90);  object(0x01BF, 270, 0, 270);
move(1.09, 0.01, 0.00);  object(0x01BF, 270, 0, 270);
move(0.05, -7.60, 0.00);  object(0x01BF, 270, 0, 270);
move(0.02, -3.00, 0.00);  object(0x01BF, 270, 0, 270);
move(-6.30, -0.04, 0.00);  object(0x01BF, 270, 0, 90);
move(-0.01, 3.20, 0.00);  object(0x01BF, 270, 0, 90);
move(-6.52, -0.01, 0.00);  object(0x01BF, 270, 0, 90);
move(0.01, -3.20, 0.00);  object(0x01BF, 270, 0, 90);
move(-2.14, 10.79, 0.00);  object(0x01BF, 270, 0, 90);
move(-4.67, 0.40, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.03, -6.13, 0.00);  object(0x01BF, 270, 0, 0);
move(0.03, -5.66, 0.00);  object(0x01BF, 270, 0, 0);
move(18.93, 15.28, 2.50);  object(0x01BF, 180, 0, 0);
move(-7.70, 0.00, 0.00);  object(0x01BF, 180, 0, 0);
move(-7.60, 0.00, 0.00);  object(0x01BF, 180, 0, 0);
move(-3.60, 0.00, 0.00);  object(0x01BF, 180, 0, 0);
move(18.99, -18.35, 0.00);  object(0x01BF, 180, 0, 180);
move(-7.80, -0.05, 0.00);  object(0x01BF, 180, 0, 180);
move(-7.80, -0.05, 0.00);  object(0x01BF, 180, 0, 180);
move(-3.50, -0.02, 0.00);  object(0x01BF, 180, 0, 180);
moveto(899.35, -554.61, 19.95);  object(0x01BF, 270, 0, 0);
move(-2.46, 11.22, 2.50);  object(0x01BF, 180, 0, 270);
move(0.03, -3.80, 0.00);  object(0x01BF, 180, 0, 270);
move(-28.96, -7.48, -2.50);  object(0x01BF, 90, 0, 180);
move(2.28, 10.95, 2.70);  object(0x01BF, 0, 0, 90);
move(0.03, -3.70, 0.00);  object(0x01BF, 0, 0, 90);
move(23.29, 3.88, 3.20);  object(0x01BF, 270, 0, 90);
move(0.02, -7.68, 0.00);  object(0x01BF, 270, 0, 90);
move(0.02, -2.90, 0.00);  object(0x01BF, 270, 0, 90);
move(-6.72, -0.05, 0.00);  object(0x01BF, 270, 0, 90);
move(-0.08, 7.80, 0.00);  object(0x01BF, 270, 0, 90);
move(-0.03, 2.90, 0.00);  object(0x01BF, 270, 0, 90);
move(-6.60, -0.07, 0.00);  object(0x01BF, 270, 0, 90);
move(0.08, -7.70, 0.00);  object(0x01BF, 270, 0, 90);
move(0.03, -2.90, 0.00);  object(0x01BF, 270, 0, 90);
move(-5.62, -0.06, 0.00);  object(0x01BF, 270, 0, 90);
move(-0.00, 7.90, 0.00);  object(0x01BF, 270, 0, 90);
move(-0.03, 2.70, 0.00);  object(0x01BF, 270, 0, 90);
move(-0.88, -0.01, 0.00);  object(0x01BF, 270, 0, 90);
move(0.08, -7.90, 0.00);  object(0x01BF, 270, 0, 90);
move(0.03, -2.60, 0.00);  object(0x01BF, 270, 0, 90);
moveto(863.96, -557.96, 20.13);  object(0x01EF, 0, 0, 0);
move(0.05, 6.43, 0.00);  object(0x01EF, 0, 0, 90);
move(-0.03, 0.07, 0.00);  object(0x01EF, 0, 0, 0);
move(39.28, -6.44, 0.00);  object(0x01EF, 0, 0, 180);
move(-0.01, 6.34, 0.00);  object(0x01EF, 0, 0, 90);
move(0.11, 0.24, 0.00);  object(0x01EF, 0, 0, 180);
setchar(0x8E4EB20, 170);
setchar(0x8E4EB20 + 0x18, 0x01);
setfloat(0x8E4EB24, 891.34, -543.7, 14.97, 90);
setchar(0x8E4EAF4, 171);
setchar(0x8E4EAF4 + 0x18, 0x01);
setfloat(0x8E4EAF8, 891.34, -548.7, 14.97, 90);
setchar(0x8E4EA9C, 170);
setchar(0x8E4EA9C + 0x18, 0x01);
setfloat(0x8E4EAA0, 891.34, -553.7, 14.97, 90);
setchar(0x08E4Ec54, 171);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, 873.69, -545.25, 14.97, 180);
setfloat(0x08e2d800, 890.44, -556.17, 21.15);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x10a)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
setfloat(0x08E2E400, 888.44, -556.17, 21.15);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x10a);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, 886.44, -556.17, 21.15);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x112)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
setfloat(0x08e2d8c0, 884.44, -556.17, 21.15);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x112);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, 882.44, -556.17, 21.15);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x11d);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, 880.44, -556.17, 21.15);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x11d);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, 878.44, -556.17, 21.15);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x119);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, 876.44, -556.17, 21.15);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x119);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
teleport(884.00, -545.59, 16.37)

#cheat Mansion Extenstion
//ID: 16249
//Score: 137
//Author: penguinsrule
//Category: Location Mods
//Description: This is an addon to sals mansion, it has 1 maverick, 1 dodo, 11 weapons, 2 leone sentinels, 2 pcj600, bansee, speeder, boat yard, weapons shack and walk way down tp the beach
//Image: http://telmaz.no-ip.info:3249/pictures/telsalv1.gif
//Time: 09/08/2006 17:01:16
//Working: Yes
moveto(1524.42, -257.85, -2.01);  object(0x01BF, 0, 0, 190);
move(7.05, -1.32, 0.00);  object(0x01BF, 0, 0, 190);
move(7.29, -1.25, 0.00);  object(0x01BF, 0, 0, 190);
move(0.57, 3.32, 3.30);  object(0x01BF, 90, 0, 190);
move(-7.49, 1.28, 0.00);  object(0x01BF, 90, 0, 190);
move(-7.88, 1.35, 0.00);  object(0x01BF, 90, 0, 190);
move(8.74, 3.64, 0.00);  object(0x01BF, 90, 0, 190);
move(-7.59, 1.30, 0.00);  object(0x01BF, 90, 0, 190);
move(2.19, 6.24, 0.00);  object(0x01BF, 90, 0, 190);
move(7.59, -1.30, 0.00);  object(0x01BF, 90, 0, 190);
move(5.91, -1.01, 0.00);  object(0x01BF, 90, 0, 190);
move(-12.84, 5.51, -3.20);  object(0x01BF, 0, 0, 190);
move(7.43, -1.29, -0.10);  object(0x01BF, 0, 0, 190);
move(5.91, -1.03, 0.00);  object(0x01BF, 0, 0, 190);
move(-4.76, -8.98, 0.00);  object(0x01BF, 0, 0, 280);
move(3.26, -2.54, 0.00);  object(0x01BF, 0, 0, 190);
move(0.29, 5.14, 0.00);  object(0x01BF, 0, 0, 190);
move(4.34, 2.52, -0.70);  object(0x01BF, 0, 270, 280);
move(-1.57, -11.50, 0.00);  object(0x01BF, 0, 270, 280);
moveto(1524.32, -254.48, 2.27);  object(0x01BF, 270, 20, 10);
move(-7.19, 1.23, 2.60);  object(0x01BF, 270, 20, 10);
moveto(1510.33, -251.91, 7.41);  object(0x01BF, 270, 20, 13);
moveto(1503.02, -250.54, 9.74);  object(0x01BF, 270, 15, 10);
moveto(1502.90, -247.26, 6.46);  object(0x01BF, 0, 15, 10);
move(-1.13, -6.29, 0.00);  object(0x01BF, 0, 15, 10);
move(8.48, 4.88, -2.30);  object(0x01BF, 0, 20, 10);
move(-1.33, -6.04, 0.00);  object(0x01BF, 0, 20, 10);
move(6.98, -1.23, -2.50);  object(0x01BF, 0, 20, 10);
move(1.07, 6.04, 0.00);  object(0x01BF, 0, 20, 10);
moveto(1522.95, -250.97, -0.43);  object(0x01BF, 0, 340, 190);
move(-1.63, -5.95, -0.00);  object(0x01BF, 0, 20, 10);
moveto(1457.10, -201.75, 54.83);  object(0x01E4, 270, 15, 270);
move(0.19, -8.71, 1.10);  object(0x01E4, 270, 0, 90);
move(5.17, -2.62, -2.50);  object(0x01E4, 270, 35, 0);
move(7.20, -0.05, -5.00);  object(0x01E4, 270, 35, 0);
move(6.70, -0.05, -4.70);  object(0x01E4, 270, 35, 0);
move(6.90, -0.05, -4.90);  object(0x01E4, 270, 35, 0);
move(6.90, -0.05, -4.80);  object(0x01E4, 270, 35, 0);
move(7.20, -0.05, -5.00);  object(0x01E4, 270, 35, 0);
move(7.20, -0.05, -5.00);  object(0x01E4, 270, 35, 0);
move(6.60, -0.05, -4.60);  object(0x01E4, 270, 35, 0);
move(7.00, -0.05, -4.90);  object(0x01E4, 270, 35, 0);
move(-3.79, 1.32, 3.50);  object(0x01EE, 0, 35, 0);
move(-6.50, 0.05, 4.60);  object(0x01EE, 0, 35, 0);
move(-6.60, 0.05, 4.60);  object(0x01EE, 0, 35, 0);
move(-6.71, 0.05, 4.70);  object(0x01EE, 0, 35, 0);
move(-6.60, 0.05, 4.50);  object(0x01EE, 0, 35, 0);
move(-6.70, 0.05, 4.60);  object(0x01EE, 0, 35, 0);
move(-6.70, 0.05, 4.60);  object(0x01EE, 0, 35, 0);
move(-6.70, 0.05, 4.80);  object(0x01EE, 0, 35, 0);
move(-7.50, 0.05, 5.30);  object(0x01EE, 0, 35, 0);
move(53.98, -3.32, -37.70);  object(0x01EE, 0, 35, 0);
move(-6.80, 0.05, 4.80);  object(0x01EE, 0, 35, 0);
move(-6.90, 0.05, 4.80);  object(0x01EE, 0, 35, 0);
move(-7.00, 0.05, 4.80);  object(0x01EE, 0, 35, 0);
move(-6.70, 0.05, 4.70);  object(0x01EE, 0, 35, 0);
move(-6.60, 0.05, 4.60);  object(0x01EE, 0, 35, 0);
move(-6.51, 0.05, 4.60);  object(0x01EE, 0, 35, 0);
move(-6.70, 0.05, 4.70);  object(0x01EE, 0, 35, 0);
move(-6.80, 0.05, 4.80);  object(0x01EE, 0, 35, 0);
move(-4.71, 0.03, 0.00);  object(0x01F0, 0, 0, 0);
move(3.15, 8.71, 0.00);  object(0x01EF, 0, 0, 90);
move(-2.97, -0.82, 0.70);  object(0x01EE, 0, 0, 90);
move(2.62, 0.62, -0.40);  object(0x01EF, 0, 15, 270);
move(-2.94, -0.02, 0.00);  object(0x01EF, 0, 15, 270);
moveto(1533.57, -241.13, 2.07);  object(0x01EE, 0, 0, 190);
move(7.98, -1.42, 0.00);  object(0x01EE, 0, 0, 190);
move(3.78, -0.71, -0.70);  object(0x01F0, 0, 0, 190);
move(-1.43, -6.35, 0.00);  object(0x01EF, 0, 0, 280);
move(-1.42, -11.42, 0.00);  object(0x01EF, 0, 0, 280);
move(-7.19, 1.23, 0.60);  object(0x01EE, 0, 0, 10);
move(-8.07, 1.45, 0.00);  object(0x01EE, 0, 0, 10);
move(-1.38, 0.25, 0.00);  object(0x01EE, 0, 0, 190);
move(0.12, 0.01, 0.20);  object(0x01EE, 0, 340, 190);
move(-7.78, 1.34, 2.90);  object(0x01EE, 0, 340, 190);
move(-8.14, 1.56, 3.00);  object(0x01EE, 0, 345, 192);
move(11.23, 4.41, -3.50);  object(0x01EE, 0, 20, 10);
move(-1.58, 0.27, 0.60);  object(0x01EE, 0, 340, 190);
move(-40.17, 47.93, 49.40);  object(0x01E4, 270, 345, 10);
move(8.43, -1.07, -0.10);  object(0x01E4, 270, 15, 10);
move(-3.27, 1.76, 1.60);  object(0x01EE, 0, 15, 10);
move(-0.47, -2.78, 0.00);  object(0x01EE, 0, 15, 10);
moveto(1483.84, -201.94, 55.70);  object(0x01EF, 0, 15, 190);
move(-0.42, -2.64, 0.00);  object(0x01EF, 0, 15, 190);
moveto(1499.60, -169.71, 56.17);  object(0x01BF, 0, 0, 90);
move(4.51, 3.84, 0.00);  object(0x01BF, 0, 0, 180);
move(7.50, -0.04, 0.00);  object(0x01BF, 0, 0, 180);
move(7.50, -0.04, 0.00);  object(0x01BF, 0, 0, 180);
move(4.22, -4.02, 0.00);  object(0x01BF, 0, 0, 90);
move(-3.21, -0.10, 3.30);  object(0x01BF, 270, 0, 90);
move(-6.22, -0.00, 0.00);  object(0x01BF, 270, 0, 90);
move(-6.06, -0.00, 0.00);  object(0x01BF, 270, 0, 90);
move(-4.26, 0.24, 0.00);  object(0x01BF, 270, 0, 90);
moveto(1503.64, -165.84, 56.10);  object(0x01BF, 0, 0, 180);
move(-0.72, -3.92, 3.30);  object(0x01BF, 270, 0, 90);
setchar(0x08E4Ebfc, 172);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 1406.60, -169.22, 50.90, 268);
setchar(0x08E4E9EC, 172);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 1409.33, -161.32, 52.25, 257);
setchar(0x08E4Ea44, 205);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 1417.04, -158.81, 52.56, 180);
setchar(0x08E4Ecd8, 205);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, 1420.96, -159.04, 52.54, 180);
setchar(0x08E4Eac8, 214);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 1498.34, -183.89, 54.57, 270);
setchar(0x08E4Eb78, 164);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 1498.34, -196.58, 54.46, 270);
setchar(0x08E4Ea18, 194);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 1541.64, -251.80, 1.60, 270);
setchar(0x08E4Ec54, 160);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, 1442.58, -188.79, 50.31, 0);
setfloat(0x08e2d800, 1502.03, -170.75, 54.92);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff);
setshort(0x08e2d826, 0x112);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
setfloat(0x08E2E400, 1504.03, -170.75, 54.92);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x112);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, 1506.03, -170.75, 54.92);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff);
setshort(0x08e2d886, 0x11a);
setchar(0x08e2d892, 0x0f);
setchar(0x08e2d893, 0x00);
setchar(0x08e2d8b0, 0xff);
setfloat(0x08e2d8c0, 1508.03, -170.75, 54.92);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x11a);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, 1510.03, -170.75, 54.92);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x108);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, 1512.03, -170.75, 54.92);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x108);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, 1514.03, -170.75, 54.92);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x114);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, 1516.03, -170.75, 54.92);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x114);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
setfloat(0x08e2daa0, 1518.03, -170.75, 54.92);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x115);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
setfloat(0x08e2db00, 1520.03, -170.75, 54.92);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x115);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
setfloat(0x08E2DCE0, 1539.41, -247.47, 2.47);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x121);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
teleport(1428.56, -184.22, 50.60);

#cheat             >>>GTA:RACE CITY>>>(BETA VERSION)
//ID: 16247
//Score: 57
//Author: ciaran06
//Category: Location Mods
//Description: Do you like fast cars?
//Do you like speed?
//Do you want to beat your friends on a race?
//
//If you answered yes then download this mod.Note this is the beta version and has not been fully tested.
//
//P.s GO TO THE STAUNTON STADUIM
//Image: none
//Time: 09/08/2006 15:12:26
//Working: Yes
//By Ciaran06
//www.moddingmasters.bbfast.com
//www.freewebs.com/gtafirm/
moveto(38.65, -159.84, 47.92);  object(0x01BF, 270, 0, 188);
move(0.92, 6.55, 0.00);  object(0x01BF, 270, 0, 188);
move(0.88, 6.29, 0.00);  object(0x01BF, 270, 0, 188);
move(0.93, 6.59, 0.00);  object(0x01BF, 270, 0, 188);
move(0.95, 6.76, 0.00);  object(0x01BF, 270, 0, 188);
move(0.85, 6.08, 0.00);  object(0x01BF, 270, 0, 188);
move(0.92, 6.58, 0.00);  object(0x01BF, 270, 0, 188);
move(0.90, 6.41, 0.00);  object(0x01BF, 270, 0, 188);
move(0.90, 6.43, 0.00);  object(0x01BF, 270, 0, 188);
move(0.86, 6.12, 0.00);  object(0x01BF, 270, 0, 188);
move(0.86, 6.12, 0.00);  object(0x01BF, 270, 0, 188);
move(0.90, 6.38, 0.00);  object(0x01BF, 270, 0, 188);
move(0.95, 6.75, 0.00);  object(0x01BF, 270, 0, 188);
move(0.88, 6.24, 0.00);  object(0x01BF, 270, 0, 188);
move(0.92, 6.56, 0.00);  object(0x01BF, 270, 0, 188);
move(0.83, 5.92, 0.00);  object(0x01BF, 270, 0, 188);
move(0.87, 6.22, 0.00);  object(0x01BF, 270, 0, 188);
move(-0.13, 5.23, -0.02);  object(0x01BF, 270, 0, 168);
move(-1.77, 5.09, 0.00);  object(0x01BF, 270, 0, 152);
move(-2.93, 4.74, 0.00);  object(0x01BF, 270, 0, 142);
move(-3.80, 3.48, 0.00);  object(0x01BF, 270, 0, 123);
move(-3.92, 1.01, 0.00);  object(0x01BF, 270, 0, 89);
move(-6.15, -0.15, 0.00);  object(0x01BF, 270, 0, 89);
move(-6.13, -0.15, 0.00);  object(0x01BF, 270, 0, 89);
move(-5.87, -0.14, 0.00);  object(0x01BF, 270, 0, 89);
move(16.53, 2.79, 0.00);  object(0x01BF, 270, 0, 119);
move(-5.39, 2.99, 0.00);  object(0x01BF, 270, 0, 119);
move(-5.69, 3.16, 0.00);  object(0x01BF, 270, 0, 119);
move(-5.63, 3.12, 0.00);  object(0x01BF, 270, 0, 119);
move(-5.80, 3.22, 0.00);  object(0x01BF, 270, 0, 119);
move(-5.50, 3.05, 0.00);  object(0x01BF, 270, 0, 119);
move(-5.69, 3.15, 0.00);  object(0x01BF, 270, 0, 119);
move(-6.00, 3.33, 0.00);  object(0x01BF, 270, 0, 119);
move(-5.89, 3.27, 0.00);  object(0x01BF, 270, 0, 119);
move(-5.67, 3.14, 0.00);  object(0x01BF, 270, 0, 119);
move(-5.54, 3.07, 0.00);  object(0x01BF, 270, 0, 119);
move(-5.15, 2.86, 0.00);  object(0x01BF, 270, 0, 119);
move(-5.90, 3.27, 0.00);  object(0x01BF, 270, 0, 119);
move(-5.69, 3.15, 0.00);  object(0x01BF, 270, 0, 119);
move(-5.90, 3.27, 0.00);  object(0x01BF, 270, 0, 119);
move(-5.66, 3.13, 0.00);  object(0x01BF, 270, 0, 119);
move(-5.89, 3.26, 0.00);  object(0x01BF, 270, 0, 119);
move(-5.61, 3.11, 0.00);  object(0x01BF, 270, 0, 119);
move(-5.77, 3.20, 0.00);  object(0x01BF, 270, 0, 119);
move(-5.58, 3.09, 0.00);  object(0x01BF, 270, 0, 119);
move(-3.76, 0.81, 0.00);  object(0x01BF, 270, 0, 85);
move(-4.42, -1.44, 0.00);  object(0x01BF, 270, 0, 60);
move(-2.85, -3.10, 0.00);  object(0x01BF, 270, 0, 26);
move(-0.71, -4.23, 0.00);  object(0x01BF, 270, 0, 352);
move(1.23, -5.81, 0.00);  object(0x01BF, 270, 0, 343);
move(1.74, -5.86, 0.00);  object(0x01BF, 270, 0, 343);
move(109.03, -162.99, 0.00);  object(0x01BF, 270, 0, 188);
move(0.85, 6.31, 0.00);  object(0x01BF, 270, 0, 188);
move(0.86, 6.41, 0.00);  object(0x01BF, 270, 0, 188);
move(0.88, 6.55, 0.00);  object(0x01BF, 270, 0, 188);
move(0.89, 6.60, 0.00);  object(0x01BF, 270, 0, 188);
move(0.81, 6.00, 0.00);  object(0x01BF, 270, 0, 188);
move(0.88, 6.55, 0.00);  object(0x01BF, 270, 0, 188);
move(0.88, 6.56, 0.00);  object(0x01BF, 270, 0, 188);
move(0.89, 6.63, 0.00);  object(0x01BF, 270, 0, 188);
move(0.78, 5.75, 0.00);  object(0x01BF, 270, 0, 188);
move(1.03, 6.16, 0.00);  object(0x01BF, 270, 0, 188);
move(0.90, 6.68, 0.00);  object(0x01BF, 270, 0, 188);
move(0.90, 6.71, 0.00);  object(0x01BF, 270, 0, 188);
moveto(42.59, -75.59, 47.88);  object(0x01BF, 270, 0, 188);
move(0.95, 6.55, 0.00);  object(0x01BF, 270, 0, 188);
move(0.85, 5.87, 0.00);  object(0x01BF, 270, 0, 188);
move(0.91, 6.25, 0.00);  object(0x01BF, 270, 0, 188);
move(0.96, 4.76, 0.00);  object(0x01BF, 270, 0, 133);
move(-2.72, 2.77, 0.00);  object(0x01BF, 270, 0, 105);
move(0.41, 4.41, 0.00);  object(0x01BF, 270, 0, 87);
move(-4.32, -0.23, 0.00);  object(0x01BF, 270, 0, 87);
move(-6.15, -0.33, 0.00);  object(0x01BF, 270, 0, 87);
move(-5.99, -0.32, 0.00);  object(0x01BF, 270, 0, 87);
move(-4.96, -0.27, 0.00);  object(0x01BF, 270, 0, 87);
move(-6.32, 7.20, -1.40);  object(0x01BF, 245, 0, 89);
move(0.20, -7.60, 0.00);  object(0x01BF, 245, 0, 89);
move(-4.63, -0.12, -2.20);  object(0x01BF, 245, 0, 89);
move(-0.20, 7.70, 0.00);  object(0x01BF, 245, 0, 89);
move(-4.49, -0.12, -1.40);  object(0x01BF, 270, 0, 89);
move(0.21, -7.80, 0.00);  object(0x01BF, 270, 0, 89);
move(-6.50, -0.17, 0.00);  object(0x01BF, 270, 0, 89);
move(-0.43, 7.79, 0.00);  object(0x01BF, 270, 0, 89);
move(-6.42, -0.17, 0.00);  object(0x01BF, 270, 0, 89);
move(0.20, -7.70, 0.00);  object(0x01BF, 270, 0, 89);
move(-6.30, -0.17, 0.00);  object(0x01BF, 270, 0, 89);
move(-0.21, 7.80, 0.00);  object(0x01BF, 270, 0, 89);
move(-6.66, -0.18, 0.00);  object(0x01BF, 270, 0, 89);
move(0.20, -7.70, 0.00);  object(0x01BF, 270, 0, 89);
move(-6.26, -0.17, 0.00);  object(0x01BF, 270, 0, 89);
move(-0.20, 7.60, 0.00);  object(0x01BF, 270, 0, 89);
move(-6.00, -0.16, 0.00);  object(0x01BF, 270, 0, 89);
move(0.20, -7.70, 0.00);  object(0x01BF, 270, 0, 89);
move(-6.39, -0.17, 0.00);  object(0x01BF, 270, 0, 88);
move(-0.22, 7.80, 0.00);  object(0x01BF, 270, 0, 88);
moveto(-77.38, -0.38, 47.88);  object(0x01BF, 270, 0, 3);
move(-1.11, -4.92, 0.00);  object(0x01BF, 270, 0, 22);
move(-2.47, -6.04, 0.00);  object(0x01BF, 270, 0, 22);
move(-2.31, -5.65, 0.00);  object(0x01BF, 270, 0, 22);
move(-2.30, -5.63, 0.00);  object(0x01BF, 270, 0, 22);
move(-2.41, -5.89, 0.00);  object(0x01BF, 270, 0, 22);
move(-2.31, -5.67, 0.00);  object(0x01BF, 270, 0, 22);
move(-2.62, -6.42, 0.00);  object(0x01BF, 270, 0, 22);
move(-2.40, -5.88, 0.00);  object(0x01BF, 270, 0, 22);
move(-2.37, -5.80, 0.00);  object(0x01BF, 270, 0, 22);
move(-2.51, -6.14, 0.00);  object(0x01BF, 270, 0, 22);
move(-2.06, -5.04, 0.00);  object(0x01BF, 270, 0, 22);
move(-0.59, -4.33, 0.00);  object(0x01BF, 270, 0, 354);
move(1.57, -4.85, 0.00);  object(0x01BF, 270, 0, 332);
move(3.15, -3.84, 0.00);  object(0x01BF, 270, 0, 310);
move(4.32, -2.28, 0.00);  object(0x01BF, 270, 0, 287);
move(5.92, -1.83, 0.00);  object(0x01BF, 270, 0, 287);
move(6.11, -1.89, 0.00);  object(0x01BF, 270, 0, 287);
move(6.21, -1.92, 0.00);  object(0x01BF, 270, 0, 287);
move(6.36, -1.97, 0.00);  object(0x01BF, 270, 0, 287);
move(3.25, -2.14, 0.00);  object(0x01BF, 270, 0, 319);
move(0.82, -2.75, 0.00);  object(0x01BF, 270, 0, 5);
move(-0.54, -6.41, 0.00);  object(0x01BF, 270, 0, 5);
move(-0.55, -6.62, 0.00);  object(0x01BF, 270, 0, 5);
move(-0.50, -5.95, 0.00);  object(0x01BF, 270, 0, 5);
move(-0.53, -6.40, 0.00);  object(0x01BF, 270, 0, 5);
move(-0.50, -5.94, 0.00);  object(0x01BF, 270, 0, 5);
move(-1.37, -4.34, 0.00);  object(0x01BF, 270, 0, 30);
move(-2.94, -3.72, 0.00);  object(0x01BF, 270, 0, 44);
move(-3.57, -2.37, 0.00);  object(0x01BF, 270, 0, 71);
move(-5.61, -1.88, 0.00);  object(0x01BF, 270, 0, 71);
move(-4.31, -2.56, 0.00);  object(0x01BF, 270, 0, 50);
move(-2.11, -2.83, 0.00);  object(0x01BF, 270, 0, 20);
move(-0.47, -4.02, 0.00);  object(0x01BF, 270, 0, 350);
move(1.80, -5.11, 0.00);  object(0x01BF, 270, 0, 331);
move(3.07, -4.81, 0.00);  object(0x01BF, 270, 0, 325);
move(3.36, -3.10, 0.00);  object(0x01BF, 270, 0, 300);
move(5.33, -2.41, 0.00);  object(0x01BF, 270, 0, 290);
move(6.00, -2.24, 0.00);  object(0x01BF, 270, 0, 290);
move(5.68, -2.12, 0.00);  object(0x01BF, 270, 0, 290);
move(5.80, -2.16, 0.00);  object(0x01BF, 270, 0, 290);
move(5.92, -2.21, 0.00);  object(0x01BF, 270, 0, 290);
move(6.31, -2.35, 0.00);  object(0x01BF, 270, 0, 290);
move(6.11, -2.28, 0.00);  object(0x01BF, 270, 0, 290);
move(6.28, -2.34, 0.00);  object(0x01BF, 270, 0, 290);
move(5.94, -2.19, 0.00);  object(0x01BF, 270, 0, 289);
move(6.32, -2.21, 0.00);  object(0x01BF, 270, 0, 289);
move(5.62, -1.96, 0.00);  object(0x01BF, 270, 0, 289);
move(4.20, -0.65, 0.00);  object(0x01BF, 270, 0, 265);
move(6.80, 0.58, 0.00);  object(0x01BF, 270, 0, 265);
move(4.21, 1.31, 0.00);  object(0x01BF, 270, 0, 240);
move(3.78, 2.76, 0.00);  object(0x01BF, 270, 0, 224);
move(4.48, 4.67, 0.00);  object(0x01BF, 270, 0, 224);
move(4.10, 3.60, 0.00);  object(0x01BF, 270, 0, 234);
move(5.43, 3.89, 0.00);  object(0x01BF, 270, 0, 234);
move(5.31, 3.80, 0.00);  object(0x01BF, 270, 0, 234);
moveto(28.86, -158.22, 47.84);  object(0x01BF, 270, 0, 55);
moveto(43.12, -156.76, 49.50);  object(0x0204, 0, 0, 278);
move(2.02, 14.66, 0.00);  object(0x0204, 0, 0, 278);
move(2.01, 14.56, 0.00);  object(0x0204, 0, 0, 278);
move(2.00, 14.46, 0.00);  object(0x0204, 0, 0, 278);
move(2.02, 14.66, 0.00);  object(0x0204, 0, 0, 278);
move(2.02, 14.66, 0.00);  object(0x0204, 0, 0, 278);
move(2.02, 14.66, 0.00);  object(0x0204, 0, 0, 278);
move(1.14, 8.22, 0.00);  object(0x0204, 0, 0, 278);
move(-0.88, 13.26, 0.00);  object(0x0204, 0, 0, 253);
move(-5.57, 8.34, 0.00);  object(0x0204, 0, 0, 229);
move(-8.38, 6.10, 0.00);  object(0x0204, 0, 0, 211);
move(-12.15, 6.99, 0.00);  object(0x0204, 0, 0, 209);
move(-12.81, 7.01, 0.00);  object(0x0204, 0, 0, 209);
move(-11.14, 6.10, 0.00);  object(0x0204, 0, 0, 209);
move(-12.90, 7.06, 0.00);  object(0x0204, 0, 0, 209);
move(-12.72, 6.96, 0.00);  object(0x0204, 0, 0, 209);
move(-12.90, 7.06, 0.00);  object(0x0204, 0, 0, 209);
move(-12.98, 7.11, 0.00);  object(0x0204, 0, 0, 209);
move(-12.98, 7.11, 0.00);  object(0x0204, 0, 0, 209);
move(-5.09, 2.78, 0.00);  object(0x0204, 0, 0, 209);
move(8.51, -62.49, -119.54);  object(0x0204, 125, 0, 304);
move(11.27, -2.91, 112.90);  object(0x01BF, 270, 0, 89);
move(0.12, -7.80, 0.00);  object(0x01BF, 270, 0, 89);
move(-6.31, -0.10, 0.00);  object(0x01BF, 270, 0, 89);
move(-0.12, 7.90, 0.00);  object(0x01BF, 270, 0, 89);
move(-6.62, -0.10, 0.00);  object(0x01BF, 270, 0, 89);
move(0.12, -8.00, 0.00);  object(0x01BF, 270, 0, 89);
move(-6.40, -0.10, 0.00);  object(0x01BF, 270, 0, 89);
move(-0.13, 7.90, 0.00);  object(0x01BF, 270, 0, 89);
move(0.51, 7.38, 0.00);  object(0x01BF, 270, 0, 178);
move(8.00, 0.23, 0.00);  object(0x01BF, 270, 0, 178);
move(-0.18, 6.44, 0.00);  object(0x01BF, 270, 0, 178);
move(-7.84, -0.05, 0.00);  object(0x01BF, 270, 0, 178);
move(-0.24, 6.35, 0.00);  object(0x01BF, 270, 0, 178);
move(7.99, 0.31, 0.00);  object(0x01BF, 270, 0, 178);
move(-0.25, 6.59, 0.00);  object(0x01BF, 270, 0, 178);
move(-7.89, -0.30, 0.00);  object(0x01BF, 270, 0, 178);
move(-0.26, 6.67, 0.00);  object(0x01BF, 270, 0, 178);
move(7.89, 0.30, 0.00);  object(0x01BF, 270, 0, 178);
move(-0.25, 6.52, 0.00);  object(0x01BF, 270, 0, 178);
move(-7.69, -0.30, 0.00);  object(0x01BF, 270, 0, 178);
move(-0.17, 4.37, 0.70);  object(0x01BF, 295, 0, 178);
move(7.59, 0.29, 0.00);  object(0x01BF, 295, 0, 178);
move(-0.15, 4.21, 1.90);  object(0x01BF, 295, 0, 178);
move(-7.69, -0.32, 0.00);  object(0x01BF, 295, 0, 178);
move(-0.10, 2.39, 1.20);  object(0x01BF, 295, 0, 178);
move(7.79, 0.33, 0.00);  object(0x01BF, 295, 0, 178);
move(-8.51, 6.13, 1.20);  object(0x01BF, 270, 0, 268);
move(6.51, 0.19, 0.00);  object(0x01BF, 270, 0, 268);
off()

#cheat Hardware Store
//ID: 16236
//Score: 60
//Author: rob_obrien2@hotmail.com
//Category: Location Mods
//Description: The Hardware store from Vice City has moved to Liberty City! 
//
//This was a great addition to Vice City, and was left out from then on. So I Brought it back!!!!!
//
//Version 2 Coming Soon!
//
//Image: http://www.freewebs.com/crocodilius/hardware%5F2.jpg
//Time: 08/08/2006 22:52:12
//Working: Yes
moveto(206.28, -1570.53, 18.82);  object(0x01BF, 0, 0, 47);
move(-11.04, -19.32, 6.30);  object(0x0239, 0, 0, 0);
move(7.87, 0.03, 1.10);  object(0x01BF, 0, 0, 0);
move(7.80, 0.00, 0.00);  object(0x01BF, 0, 0, 0);
move(3.07, 3.94, 0.00);  object(0x01BF, 0, 0, 77);
move(-1.83, 7.78, 0.00);  object(0x01BF, 0, 0, 77);
move(-1.83, 7.78, 0.00);  object(0x01BF, 0, 0, 77);
move(-4.79, 3.84, 0.00);  object(0x01BF, 0, 0, 0);
move(-8.00, 0.04, 0.00);  object(0x01BF, 0, 0, 0);
move(-4.60, -3.83, 0.00);  object(0x01BF, 0, 0, 277);
move(-0.59, -7.67, 0.00);  object(0x01BF, 0, 0, 272);
move(-0.32, -7.90, 0.00);  object(0x01BF, 0, 0, 272);
move(2.51, 16.17, -1.10);  object(0x0F36, 0, 0, 0);
move(2.90, -0.00, 0.00);  object(0x0F36, 0, 0, 0);
move(2.90, -0.00, 0.00);  object(0x0F36, 0, 0, 0);
move(2.60, -0.00, 0.00);  object(0x0F36, 0, 0, 0);
move(2.70, -0.00, 0.00);  object(0x0F36, 0, 0, 0);
move(2.80, -0.00, 0.00);  object(0x0F36, 0, 0, 0);
//Part 2
moveto(196.47, -1566.88, 26.16);  object(0x0103, 0, 0, 0);
move(5.55, -9.97, -15.00);  object(0x0103, 0, 0, 187);
move(-3.09, 9.93, 15.50);  object(0x0104, 0, 0, 0);
move(2.10, 0.02, 0.00);  object(0x0105, 0, 0, 0);
move(1.27, -9.97, -9.10);  object(0x0105, 0, 0, 184);
move(1.54, 10.29, 10.60);  object(0x0106, 0, 0, 0);
move(4.10, -0.03, -0.60);  object(0x0107, 0, 0, 0);
move(-2.20, 0.02, 0.00);  object(0x0108, 0, 0, 0);
move(-11.70, 0.09, 0.00);  object(0x0109, 0, 0, 0);
move(2.60, -8.99, -10.90);  object(0x0109, 0, 0, 218);
move(1.97, 8.96, 11.40);  object(0x010A, 0, 0, 0);
move(1.80, 0.00, 0.00);  object(0x010B, 0, 0, 0);
//Roof
moveto(195.88, -1586.28, 29.46);  object(0x01BF, 90, 0, 0);
move(7.60, 0.06, 0.00);  object(0x01BF, 90, 0, 0);
move(7.40, -0.39, 0.00);  object(0x01BF, 90, 0, 0);
move(-1.37, 6.20, 0.00);  object(0x01BF, 90, 0, 180);
move(-7.90, 0.06, 0.00);  object(0x01BF, 90, 0, 180);
move(-5.60, 0.04, 0.00);  object(0x01BF, 90, 0, 180);
move(0.44, 6.13, 0.00);  object(0x01BF, 90, 0, 180);
move(7.80, -0.06, 0.00);  object(0x01BF, 90, 0, 180);
move(3.70, -0.03, 0.00);  object(0x01BF, 90, 0, 180);
move(0.03, 4.55, 0.00);  object(0x01BF, 90, 0, 180);
move(-8.00, 0.06, 0.00);  object(0x01BF, 90, 0, 180);
move(-3.50, 0.03, 0.00);  object(0x01BF, 90, 0, 180);
//Multi Weapons Lot
//made using multi weapon lot tool
//weapon 1
setfloat(0x08e2d800, 209.23, -1572.26, 26.16);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//weapon 2
setfloat(0x08E2E400, 210.05, -1574.17, 26.16);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x104);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
//weapon 3
setfloat(0x08e2d860, 210.50, -1575.76, 26.16);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x105)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//weapon 4
setfloat(0x08e2d8c0, 211.43, -1579.33, 26.16);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x106);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
//weapon 5
setfloat(0x08e2d920, 211.80, -1581.40, 26.16);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x107);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
//weapon 6
setfloat(0x08e2d980, 212.41, -1583.76, 26.16);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x108);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
//weapon 7
setfloat(0x08e2d9e0, 213.01, -1586.09, 26.16);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x109);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
//weapon 8
setfloat(0x08e2da40, 211.02, -1588.61, 26.16);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x10a);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
//weapon 9
setfloat(0x08e2daa0, 208.30, -1588.77, 26.16);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10b);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
//weapon 10
setfloat(0x08e2db00, 206.68, -1588.81, 26.16);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10c);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
//weapon 11
setfloat(0x08E2DB60, 204.73, -1588.86, 26.16);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10d);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
teleport(196.49, -1600.19, 26.17)

#cheat Leone Base
//ID: 16224
//Score: 97
//Author: penguinsrule
//Category: Location Mods
//Description: This is a leone gang base with 2 leone sentinels, bansee, pony, maverick on heli pad and 4 weapons.
//Image: http://telmaz.no-ip.info:3249/pictures/telleonev1.gif
//Time: 08/08/2006 16:42:21
//Working: Yes
moveto(1402.20, -334.97, 51.39);  object(0x01BF, 0, 0, 180);
move(7.70, 0.06, 0.00);  object(0x01BF, 0, 0, 180);
move(7.60, 0.06, 0.00);  object(0x01BF, 0, 0, 180);
move(-19.10, 3.98, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.06, 7.80, 0.00);  object(0x01BF, 0, 0, 270);
move(0.05, 7.60, 0.00);  object(0x01BF, 0, 0, 270);
move(0.08, 7.40, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.07, 7.60, 0.00);  object(0x01BF, 0, 0, 270);
move(3.23, -30.62, 3.30);  object(0x01BF, 270, 0, 270);
move(0.00, 8.00, 0.00);  object(0x01BF, 270, 0, 270);
move(0.00, 8.00, 0.00);  object(0x01BF, 270, 0, 270);
move(0.00, 7.90, 0.00);  object(0x01BF, 270, 0, 270);
move(0.00, 6.60, 0.00);  object(0x01BF, 270, 0, 270);
move(14.62, -34.19, 0.50);  object(0x01BF, 0, 45, 0);
move(-12.70, -0.07, 0.00);  object(0x01BF, 0, 315, 0);
move(4.40, 0.02, 1.80);  object(0x01BF, 0, 0, 0);
move(3.90, 0.02, 0.00);  object(0x01BF, 0, 0, 0);
move(9.77, 4.00, -5.60);  object(0x01BF, 0, 0, 90);
move(-0.05, 7.80, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.05, 7.80, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.05, 8.10, 0.00);  object(0x01BF, 0, 0, 90);
move(-19.05, 10.41, 0.00);  object(0x01BF, 0, 0, 0);
move(13.50, -0.02, 0.00);  object(0x01BF, 0, 0, 0);
move(1.60, -0.00, 0.00);  object(0x01BF, 0, 0, 0);
move(3.98, -3.96, 0.00);  object(0x01BF, 0, 0, 90);
move(-3.47, -6.00, -1.40);  object(0x01BF, 270, 330, 90);
move(0.04, -4.80, 2.80);  object(0x01BF, 270, 330, 90);
move(-9.83, -19.42, 1.90);  object(0x01BF, 270, 0, 270);
move(-0.05, 8.00, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.05, 7.90, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.04, 6.80, 0.00);  object(0x01BF, 270, 0, 270);
move(3.42, -10.28, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.04, 7.20, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.02, 3.00, 0.00);  object(0x01BF, 270, 0, 270);
move(6.71, 0.04, 0.00);  object(0x01BF, 270, 0, 270);
move(-4.29, -18.13, 0.00);  object(0x01BF, 270, 0, 270);
move(0.05, -7.80, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.04, -4.67, 0.00);  object(0x01BF, 270, 0, 265);
move(4.43, 0.47, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.05, 7.70, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.03, 4.30, 0.00);  object(0x01BF, 270, 0, 270);
move(-17.83, -12.13, 2.20);  object(0x01BF, 315, 0, 270);
move(-0.03, 7.20, 0.00);  object(0x01BF, 315, 0, 270);
move(-0.02, 7.80, 0.00);  object(0x01BF, 315, 0, 270);
move(0.03, 7.80, 0.00);  object(0x01BF, 315, 0, 270);
move(0.10, 7.50, 0.00);  object(0x01BF, 315, 0, 270);
move(1.02, -30.42, 1.30);  object(0x01BF, 315, 0, 270);
move(-0.04, 7.60, 0.00);  object(0x01BF, 315, 0, 270);
move(-0.04, 7.90, 0.00);  object(0x01BF, 315, 0, 270);
move(0.20, 7.90, 0.00);  object(0x01BF, 315, 0, 270);
move(-0.03, 7.00, 0.00);  object(0x01BF, 315, 0, 270);
move(6.16, -30.92, 2.20);  object(0x01BF, 90, 0, 180);
move(-0.02, 6.24, 0.00);  object(0x01BF, 90, 0, 180);
move(-0.02, 6.05, 0.00);  object(0x01BF, 90, 0, 180);
move(-0.02, 6.42, 0.00);  object(0x01BF, 90, 0, 180);
move(-0.02, 6.35, 0.00);  object(0x01BF, 90, 0, 180);
move(-0.02, 6.53, 0.00);  object(0x01BF, 90, 0, 180);
move(4.81, -31.00, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.40, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(5.80, -30.09, -2.20);  object(0x01BF, 45, 0, 270);
move(-0.05, 7.80, 0.00);  object(0x01BF, 45, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 45, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 45, 0, 270);
move(-0.04, 6.90, 0.00);  object(0x01BF, 45, 0, 270);
move(-1.95, 4.09, -2.80);  object(0x01BF, 0, 315, 180);
move(-12.60, 0.07, 0.00);  object(0x01BF, 0, 45, 180);
move(8.20, -0.04, 1.70);  object(0x01BF, 0, 0, 180);
move(-3.90, 0.02, 0.00);  object(0x01BF, 0, 0, 180);
move(11.36, -34.05, 0.00);  object(0x01BF, 45, 0, 270);
move(-0.05, 7.80, 0.00);  object(0x01BF, 45, 0, 270);
move(-0.05, 7.70, 0.00);  object(0x01BF, 45, 0, 270);
move(-0.05, 7.60, 0.00);  object(0x01BF, 45, 0, 270);
move(-0.04, 6.80, 0.00);  object(0x01BF, 45, 0, 270);
moveto(1399.80, -314.63, 69.93);  object(0x01E4, 270, 30, 270);
move(-0.03, 7.50, -4.30);  object(0x01E4, 270, 30, 270);
move(0.18, 7.55, -4.40);  object(0x01E4, 270, 330, 90);
setchar(0x08E4Ebfc, 214);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 1393.72, -302.72, 73.42, 0);
setchar(0x08E4E9EC, 160);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 1401.26, -306.21, 50.00, 0);
setchar(0x08E4Ea44, 172);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 1400.98, -329.42, 50.00, 0);
setchar(0x08E4Ecd8, 172);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, 1401.08, -318.16, 50.01, 0);
setchar(0x08E4Eac8, 144);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 1417.72, -325.01, 49.28, 0);
moveto(1400.00, -322.92, 72.19);  object(0x01E4, 270, 0, 270);
move(2.76, 27.85, -13.10);  object(0x01E4, 270, 0, 180);
move(8.00, -0.06, -2.60);  object(0x01E4, 270, 325, 180);
move(7.10, -0.05, -5.00);  object(0x01E4, 270, 325, 180);
move(1.70, -0.01, -1.20);  object(0x01E4, 270, 325, 180);
move(2.33, 1.76, -0.70);  object(0x01EE, 0, 325, 180);
moveto(1414.31, -293.67, 54.88);  object(0x01EE, 0, 325, 180);
move(-8.00, -0.06, 4.80);  object(0x01EE, 0, 0, 180);
move(-5.08, -9.87, 4.70);  object(0x01EE, 0, 30, 270);
move(0.03, -7.10, 4.10);  object(0x01EE, 0, 30, 270);
move(0.03, -6.90, 4.00);  object(0x01EE, 0, 30, 270);
move(0.11, -8.90, 0.40);  object(0x01EE, 0, 0, 270);
move(-3.17, -0.57, -0.60);  object(0x01F0, 0, 0, 0);
setfloat(0x08E2DC20, 1413.95, -332.69, 55.87 );
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x11a);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
setfloat(0x08E2E0A0, 1410.95, -332.69, 55.87);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x112);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
setfloat(0x08E2E1C0, 1407.95, -332.69, 55.87);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x108);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
setfloat(0x08E2E160, 1404.95, -332.69, 55.87);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x114);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
teleport(1383.33, -282.11, 49.82)

#cheat MILITARY ACADEMY V2
//ID: 16170
//Score: 53
//Author: ciaran06
//Category: Location Mods
//Description: Remember that mod which was about 30kb in size and got loads of downloads well here is what has come of it.V2 presents all of the orignal features but then the whole of the airport is being used not just the runways.NEEDS THE TELE CODE.
//Image: none
//Time: 07/08/2006 16:44:02
//Working: Yes
//Made by Ciaran06
//www.freewebs.com/gtafirm
moveto(-997.77, -413.28, 11.62);  object(0x01BF, 0, 0, 359);
move(-7.90, -0.19, 0.00);  object(0x01BF, 0, 0, 359);
move(-7.80, -0.18, 0.00);  object(0x01BF, 0, 0, 359);
move(-8.00, -0.19, 0.00);  object(0x01BF, 0, 0, 359);
move(-7.70, -0.18, 0.00);  object(0x01BF, 0, 0, 359);
move(-7.90, -0.19, 0.00);  object(0x01BF, 0, 0, 359);
move(-3.79, -3.89, 0.00);  object(0x01BF, 0, 0, 267);
move(0.40, -7.99, 0.00);  object(0x01BF, 0, 0, 267);
move(0.15, -2.90, 0.00);  object(0x01BF, 0, 0, 267);
move(5.23, -17.80, 0.00);  object(0x01BF, 0, 0, 248);
move(0.76, -1.85, 0.00);  object(0x01BF, 0, 0, 248);
move(-0.42, 1.02, 6.60);  object(0x01BF, 0, 0, 248);
move(-0.34, 0.83, 0.00);  object(0x01BF, 0, 0, 248);
move(0.27, -0.65, 6.60);  object(0x01BF, 0, 0, 248);
move(-0.23, 0.55, 0.00);  object(0x01BF, 0, 0, 248);
move(2.11, 5.38, -12.80);  object(0x01BF, 0, 0, 157);
move(0.00, 0.00, 6.70);  object(0x01BF, 0, 0, 157);
move(0.00, 0.00, 6.20);  object(0x01BF, 0, 0, 157);
move(5.31, -2.02, -12.50);  object(0x01BF, 0, 0, 245);
move(0.47, -1.00, 0.00);  object(0x01BF, 0, 0, 245);
move(0.00, 0.00, 6.70);  object(0x01BF, 0, 0, 245);
move(-0.51, 1.09, 0.00);  object(0x01BF, 0, 0, 245);
move(0.00, 0.00, 5.70);  object(0x01BF, 0, 0, 245);
move(0.68, -1.45, 0.00);  object(0x01BF, 0, 0, 245);
move(-4.63, 0.38, 3.20);  object(0x01BF, 270, 0, 157);
move(2.62, -6.18, 0.00);  object(0x01BF, 270, 0, 157);
move(-7.54, 26.85, -16.44);  object(0x01BF, 0, 0, 1);
move(7.70, -0.08, 0.00);  object(0x01BF, 0, 0, 1);
move(0.00, 0.00, 6.60);  object(0x01BF, 0, 0, 1);
move(-7.70, 0.08, 0.00);  object(0x01BF, 0, 0, 1);
move(11.68, 3.74, -6.80);  object(0x01BF, 0, 0, 272);
move(0.00, 0.00, 6.60);  object(0x01BF, 0, 0, 272);
move(-15.80, 0.31, 0.00);  object(0x01BF, 0, 0, 87);
move(-0.08, 1.60, 0.00);  object(0x01BF, 0, 0, 87);
move(3.85, 3.84, 0.00);  object(0x01BF, 0, 0, 179);
move(7.70, 0.12, 0.00);  object(0x01BF, 0, 0, 179);
move(4.46, -3.54, 0.00);  object(0x01BF, 0, 0, 272);
move(-3.66, 3.52, 0.00);  object(0x01BF, 0, 0, 177);
move(-0.39, -3.29, 3.00);  object(0x01BF, 270, 0, 180);
move(-7.83, -0.07, 0.00);  object(0x01BF, 270, 0, 179);
move(-0.11, -0.03, 0.00);  object(0x01BF, 270, 0, 179);
move(0.16, -2.91, 0.00);  object(0x01BF, 270, 0, 0);
move(7.70, 0.02, 0.00);  object(0x01BF, 270, 0, 0);
move(-9.08, -16.32, -9.46);  object(0x01E4, 180, 180, 242);
move(3.99, -7.62, 0.00);  object(0x01E4, 180, 180, 242);
move(36.89, 30.03, -1.70);  object(0x01F0, 180, 180, 337);
move(-2.85, -1.23, 0.00);  object(0x01F0, 180, 180, 337);
move(-2.76, -1.19, 0.00);  object(0x01F0, 180, 180, 337);
move(-2.85, -1.23, 0.00);  object(0x01F0, 180, 180, 337);
move(-2.94, -1.27, 0.00);  object(0x01F0, 180, 180, 337);
move(-5.82, -2.43, 0.00);  object(0x01F0, 180, 180, 338);
move(-2.87, -1.17, 0.00);  object(0x01F0, 180, 180, 338);
move(-2.87, -1.17, 0.00);  object(0x01F0, 180, 180, 338);
move(-2.78, -1.14, 0.00);  object(0x01F0, 180, 180, 338);
move(-2.78, -1.14, 0.00);  object(0x01F0, 180, 180, 338);
move(-2.87, -1.17, 0.00);  object(0x01F0, 180, 180, 338);
move(-2.87, -1.17, 0.00);  object(0x01F0, 180, 180, 338);
move(-2.87, -1.17, 0.00);  object(0x01F0, 180, 180, 338);
move(-2.87, -1.17, 0.00);  object(0x01F0, 180, 180, 338);
move(42.86, 17.85, -0.10);  object(0x01F0, 180, 180, 338);
move(-32.91, -33.43, 17.10);  object(0x01A8, 180, 135, 157);
move(-1.08, 2.59, 0.00);  object(0x01A8, 180, 135, 157);
move(-1.11, 2.58, 0.00);  object(0x01A8, 180, 135, 157);
move(-1.00, 0.36, -0.30);  object(0x01A8, 180, 135, 65);
move(-2.54, -1.18, 0.00);  object(0x01A8, 180, 135, 65);
move(-1.72, -0.80, 0.00);  object(0x01A8, 180, 135, 65);
moveto(-873.70, -1240.34, 9.67); object(0x01BF, 270, 0, 202);
move(2.44, 5.99, 0.00); object(0x01BF, 270, 0, 202);
move(2.48, 6.09, 0.00); object(0x01BF, 270, 0, 202);
move(2.38, 5.84, 0.00); object(0x01BF, 270, 0, 202);
move(2.45, 6.00, 0.00); object(0x01BF, 270, 0, 202);
move(2.37, 6.27, 0.00); object(0x01BF, 270, 0, 201);
move(2.36, 6.31, 0.00); object(0x01BF, 270, 0, 201);
move(2.34, 6.25, 0.00); object(0x01BF, 270, 0, 201);
move(2.33, 6.22, 0.00); object(0x01BF, 270, 0, 201);
move(2.28, 6.11, 0.00); object(0x01BF, 270, 0, 201);
move(2.43, 6.36, 0.00); object(0x01BF, 270, 0, 201);
move(2.30, 5.93, 0.00); object(0x01BF, 270, 0, 201);
move(2.39, 6.16, 0.00); object(0x01BF, 270, 0, 201);
move(2.36, 6.07, 0.00); object(0x01BF, 270, 0, 201);
move(2.41, 6.21, 0.00); object(0x01BF, 270, 0, 201);
move(2.35, 6.06, 0.00); object(0x01BF, 270, 0, 201);
move(2.44, 6.28, 0.00); object(0x01BF, 270, 0, 201);
move(2.29, 5.91, 0.00); object(0x01BF, 270, 0, 201);
move(2.44, 6.31, 0.00); object(0x01BF, 270, 0, 201);
move(2.34, 6.04, 0.00); object(0x01BF, 270, 0, 201);
move(2.43, 6.27, 0.00); object(0x01BF, 270, 0, 201);
move(2.32, 5.99, 0.00); object(0x01BF, 270, 0, 201);
move(2.24, 5.79, 0.00); object(0x01BF, 270, 0, 201);
move(2.41, 6.23, 0.00); object(0x01BF, 270, 0, 201);
move(2.36, 6.24, 0.00); object(0x01BF, 270, 0, 200);
move(2.24, 6.14, 0.00); object(0x01BF, 270, 0, 200);
move(2.30, 6.29, 0.00); object(0x01BF, 270, 0, 200);
move(2.26, 6.19, 0.00); object(0x01BF, 270, 0, 200);
move(2.25, 6.15, 0.00); object(0x01BF, 270, 0, 200);
move(2.24, 6.11, 0.00); object(0x01BF, 270, 0, 200);
move(2.21, 6.09, 0.00); object(0x01BF, 270, 0, 200);
move(2.23, 6.14, 0.00); object(0x01BF, 270, 0, 200);
move(2.11, 5.86, 0.00); object(0x01BF, 270, 0, 200);
move(2.12, 5.89, 0.00); object(0x01BF, 270, 0, 200);
move(2.26, 6.27, 0.00); object(0x01BF, 270, 0, 200);
move(2.27, 6.30, 0.00); object(0x01BF, 270, 0, 200);
move(-88.73, -211.57, 0.00); object(0x01BF, 270, 0, 203);
move(2.63, 6.20, 0.00); object(0x01BF, 270, 0, 203);
move(2.51, 5.90, 0.00); object(0x01BF, 270, 0, 203);
move(2.59, 6.20, 0.00); object(0x01BF, 270, 0, 203);
move(2.34, 5.87, 0.00); object(0x01BF, 270, 0, 202);
move(2.49, 6.04, 0.00); object(0x01BF, 270, 0, 202);
move(2.23, 5.67, 0.00); object(0x01BF, 270, 0, 202);
move(1.83, 6.54, 0.00); object(0x01BF, 270, 0, 202);
move(2.52, 6.12, 0.00); object(0x01BF, 270, 0, 202);
move(2.48, 6.01, 0.00); object(0x01BF, 270, 0, 202);
move(2.59, 6.28, 0.00); object(0x01BF, 270, 0, 202);
move(2.60, 6.32, 0.00); object(0x01BF, 270, 0, 202);
move(2.44, 5.93, 0.00); object(0x01BF, 270, 0, 202);
move(1.56, 6.67, 0.00); object(0x01BF, 270, 0, 202);
move(2.50, 6.07, 0.00); object(0x01BF, 270, 0, 202);
move(2.31, 6.14, 0.00); object(0x01BF, 270, 0, 202);
move(2.45, 5.95, 0.00); object(0x01BF, 270, 0, 202);
move(2.46, 5.96, 0.00); object(0x01BF, 270, 0, 202);
move(2.46, 5.98, 0.00); object(0x01BF, 270, 0, 202);
move(2.49, 6.04, 0.00); object(0x01BF, 270, 0, 202);
move(2.44, 5.93, 0.00); object(0x01BF, 270, 0, 202);
move(2.60, 6.30, 0.00); object(0x01BF, 270, 0, 202);
move(2.54, 6.17, 0.00); object(0x01BF, 270, 0, 202);
move(1.58, 6.46, 0.00); object(0x01BF, 270, 0, 202);
move(2.55, 6.19, 0.00); object(0x01BF, 270, 0, 202);
move(2.44, 5.93, 0.00); object(0x01BF, 270, 0, 202);
move(1.75, 6.33, 0.00); object(0x01BF, 270, 0, 202);
move(2.43, 5.98, 0.00); object(0x01BF, 270, 0, 202);
move(2.37, 5.82, 0.00); object(0x01BF, 270, 0, 202);
move(2.46, 6.03, 0.00); object(0x01BF, 270, 0, 202);
move(2.51, 6.16, 0.00); object(0x01BF, 270, 0, 202);
move(1.47, 6.78, 0.00); object(0x01BF, 270, 0, 202);
move(2.38, 5.83, 0.00); object(0x01BF, 270, 0, 202);
move(2.25, 6.33, 0.00); object(0x01BF, 270, 0, 202);
move(2.44, 5.99, 0.00); object(0x01BF, 270, 0, 202);
move(2.46, 6.04, 0.00); object(0x01BF, 270, 0, 202);
moveto(-888.46, -1235.14, 9.61); object(0x01BF, 270, 0, 204);
move(2.69, 6.07, 0.00); object(0x01BF, 270, 0, 204);
move(2.75, 6.22, 0.00); object(0x01BF, 270, 0, 204);
move(2.63, 5.94, 0.00); object(0x01BF, 270, 0, 204);
move(2.73, 6.17, 0.00); object(0x01BF, 270, 0, 204);
move(2.22, 6.24, 0.00); object(0x01BF, 270, 0, 204);
move(2.73, 6.18, 0.00); object(0x01BF, 270, 0, 204);
move(2.60, 5.88, 0.00); object(0x01BF, 270, 0, 204);
move(2.66, 6.01, 0.00); object(0x01BF, 270, 0, 204);
move(0.97, 6.76, 0.00); object(0x01BF, 270, 0, 203);
move(2.57, 5.96, 0.00); object(0x01BF, 270, 0, 203);
move(2.56, 5.94, 0.00); object(0x01BF, 270, 0, 203);
move(2.57, 5.95, 0.00); object(0x01BF, 270, 0, 203);
move(1.62, 6.54, 0.00); object(0x01BF, 270, 0, 203);
move(2.67, 6.18, 0.00); object(0x01BF, 270, 0, 203);
move(2.68, 6.21, 0.00); object(0x01BF, 270, 0, 203);
move(1.63, 6.06, 0.00); object(0x01BF, 270, 0, 203);
move(2.57, 5.97, 0.00); object(0x01BF, 270, 0, 203);
move(2.48, 5.76, 0.00); object(0x01BF, 270, 0, 203);
move(2.26, 6.24, 0.00); object(0x01BF, 270, 0, 203);
move(2.51, 5.83, 0.00); object(0x01BF, 270, 0, 203);
move(2.87, 6.65, 0.00); object(0x01BF, 270, 0, 203);
move(-0.21, -0.49, 0.00); object(0x01BF, 270, 0, 203);
move(2.51, 5.83, 0.00); object(0x01BF, 270, 0, 203);
move(2.64, 6.13, 0.00); object(0x01BF, 270, 0, 203);
move(2.35, 6.21, 0.00); object(0x01BF, 270, 0, 203);
move(2.61, 6.06, 0.00); object(0x01BF, 270, 0, 203);
move(2.71, 6.28, 0.00); object(0x01BF, 270, 0, 203);
move(0.78, 6.09, 0.00); object(0x01BF, 270, 0, 203);
move(2.02, 6.20, 0.00); object(0x01BF, 270, 0, 203);
move(2.37, 6.01, 0.00); object(0x01BF, 270, 0, 203);
move(2.61, 5.89, 0.00); object(0x01BF, 270, 0, 205);
move(2.68, 5.77, 0.00); object(0x01BF, 270, 0, 205);
move(0.99, 6.63, 0.00); object(0x01BF, 270, 0, 205);
move(2.40, 6.36, 0.00); object(0x01BF, 270, 0, 205);
move(2.70, 5.80, 0.00); object(0x01BF, 270, 0, 205);
move(2.74, 5.89, 0.00); object(0x01BF, 270, 0, 205);
move(-287.41, -5.79, -4.70); object(0x01BF, 0, 0, 91);
move(0.00, 0.00, 6.70); object(0x01BF, 0, 0, 91);
move(0.00, 0.00, 6.60); object(0x01BF, 0, 0, 91);
move(0.00, 0.00, 6.50); object(0x01BF, 0, 0, 91);
move(0.00, 0.00, 6.60); object(0x01BF, 0, 0, 91);
move(0.00, 0.00, 6.50); object(0x01BF, 0, 0, 91);
move(-3.97, 3.69, -24.70); object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 6.70); object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 6.60); object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 6.60); object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 4.80); object(0x01BF, 0, 0, 0);
move(-3.32, -4.11, -32.60); object(0x01BF, 0, 0, 91);
move(0.00, 0.00, 6.60); object(0x01BF, 0, 0, 91);
move(0.00, 0.00, 6.50); object(0x01BF, 0, 0, 91);
move(0.00, 0.00, 6.60); object(0x01BF, 0, 0, 91);
move(0.00, 0.00, 6.40); object(0x01BF, 0, 0, 91);
move(0.00, 0.00, 6.50); object(0x01BF, 0, 0, 91);
move(3.72, -3.82, -32.30); object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 6.60); object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 6.60); object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 6.40); object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 6.60); object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 6.10); object(0x01BF, 0, 0, 0);
move(-0.33, 3.88, 3.20); object(0x01BF, 270, 0, 270);
move(6.70, 0.04, 0.00); object(0x01BF, 270, 0, 270);
move(0.05, -7.61, 0.00); object(0x01BF, 270, 0, 270);
move(-6.70, -0.04, 0.00); object(0x01BF, 270, 0, 270);
move(-6.60, -0.04, 0.00); object(0x01BF, 270, 0, 270);
move(0.10, 7.66, 0.00); object(0x01BF, 270, 0, 92);
move(0.28, 7.76, 0.00); object(0x01BF, 270, 0, 92);
move(6.60, -0.24, 0.00); object(0x01BF, 270, 0, 92);
move(6.40, -0.23, 0.00); object(0x01BF, 270, 0, 92);
move(0.12, -1.80, 0.67); object(0x025B, 180, 180, 187);
move(-11.21, 2.45, 0.00); object(0x025B, 180, 180, 187);
move(-3.01, -14.90, 0.00); object(0x025B, 180, 180, 187);
move(12.84, -2.10, 0.00); object(0x025B, 180, 180, 182);
move(-6.08, 5.52, 0.40); object(0x0251, 180, 180, 182);
move(0.43, 3.27, 0.00); object(0x0251, 180, 180, 182);
move(0.33, 2.48, 0.00); object(0x0251, 180, 180, 182);
move(-3.05, -2.62, 0.00); object(0x0251, 180, 180, 182);
move(4.51, -0.75, -0.10); object(0x0251, 180, 180, 204);
moveto(-1336.78, -1028.08, 11.22); object(0x01BF, 0, 0, 271);
move(-0.11, -7.40, 0.00); object(0x01BF, 0, 0, 271);
move(-0.17, -11.90, 0.00); object(0x01BF, 0, 0, 271);
move(-0.08, -5.70, 0.00); object(0x01BF, 0, 0, 271);
move(0.37, 25.09, 6.30); object(0x01BF, 0, 0, 271);
move(-0.11, -7.40, 0.00); object(0x01BF, 0, 0, 271);
move(-0.11, -7.70, 0.00); object(0x01BF, 0, 0, 271);
move(-0.11, -7.60, 0.00); object(0x01BF, 0, 0, 271);
move(-0.03, -2.30, 0.00); object(0x01BF, 0, 0, 271);
move(4.09, -4.61, -6.30); object(0x01BF, 0, 0, 192);
move(7.72, -1.67, -1.10); object(0x01BF, 0, 0, 192);
move(7.53, -1.63, -1.80); object(0x01BF, 0, 0, 192);
move(7.24, -1.56, -1.60); object(0x01BF, 0, 0, 192);
move(7.53, -1.63, -1.20); object(0x01BF, 0, 0, 192);
move(0.00, 0.00, 6.60); object(0x01BF, 0, 0, 192);
move(-7.63, 1.65, 1.00); object(0x01BF, 0, 0, 192);
move(-7.53, 1.63, 1.80); object(0x01BF, 0, 0, 192);
move(-7.24, 1.56, 1.90); object(0x01BF, 0, 0, 192);
move(-7.82, 1.69, 0.70); object(0x01BF, 0, 0, 192);
move(7.72, -1.67, 0.00); object(0x01BF, 0, 0, 192);
move(7.33, -1.58, 0.00); object(0x01BF, 0, 0, 192);
move(7.33, -1.58, 0.00); object(0x01BF, 0, 0, 192);
move(7.72, -1.67, 0.00); object(0x01BF, 0, 0, 192);
move(2.99, 3.44, -12.10); object(0x01BF, 0, 0, 84);
move(0.00, 0.00, 6.50); object(0x01BF, 0, 0, 84);
move(0.00, 0.00, 5.60); object(0x01BF, 0, 0, 84);
move(3.49, 4.04, -12.00); object(0x01BF, 0, 0, 175);
move(0.00, 0.00, 6.30); object(0x01BF, 0, 0, 175);
move(0.00, 0.00, 5.90); object(0x01BF, 0, 0, 175);
move(7.27, 0.66, 0.00); object(0x01BF, 0, 0, 175);
move(0.00, 0.00, -6.30); object(0x01BF, 0, 0, 175);
move(0.00, 0.00, -6.40); object(0x01BF, 0, 0, 175);
move(3.62, 4.43, 0.00); object(0x01BF, 0, 0, 88);
move(-0.46, 12.50, 0.00); object(0x01BF, 0, 0, 88);
move(-0.28, 7.70, 0.00); object(0x01BF, 0, 0, 88);
move(-0.26, 7.10, 0.00); object(0x01BF, 0, 0, 88);
move(0.14, -3.70, 4.90); object(0x01BF, 0, 0, 88);
move(0.29, -7.80, 0.00); object(0x01BF, 0, 0, 88);
move(0.11, -3.10, 0.00); object(0x01BF, 0, 0, 88);
move(0.47, -12.70, 0.00); object(0x01BF, 0, 0, 88);
move(0.00, 0.00, 6.60); object(0x01BF, 0, 0, 88);
move(-0.47, 12.70, 0.00); object(0x01BF, 0, 0, 88);
move(-0.29, 8.00, 0.00); object(0x01BF, 0, 0, 88);
move(-0.11, 2.90, 0.00); object(0x01BF, 0, 0, 88);
move(0.64, -17.50, -5.80); object(0x01BF, 0, 0, 88);
move(0.00, 0.00, 5.80); object(0x01BF, 0, 0, 88);
move(0.23, -6.20, 1.20); object(0x01BF, 0, 0, 88);
move(-0.29, 7.90, 0.00); object(0x01BF, 0, 0, 88);
move(-0.29, 8.00, 0.00); object(0x01BF, 0, 0, 88);
move(-0.28, 7.70, 0.00); object(0x01BF, 0, 0, 88);
move(-46.28, 3.85, -7.10); object(0x01BF, 0, 0, 0);
move(7.70, -0.01, -1.10); object(0x01BF, 0, 0, 0);
move(7.70, -0.01, -1.30); object(0x01BF, 0, 0, 0);
move(7.80, -0.01, -1.50); object(0x01BF, 0, 0, 0);
move(7.70, -0.01, -1.30); object(0x01BF, 0, 0, 0);
move(7.80, -0.01, 0.00); object(0x01BF, 0, 0, 0);
move(3.40, -0.00, 0.00); object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 6.50); object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 5.70); object(0x01BF, 0, 0, 0);
move(-8.00, 0.01, 0.00); object(0x01BF, 0, 0, 0);
move(0.00, 0.00, -6.60); object(0x01BF, 0, 0, 0);
move(-7.80, 0.01, 0.80); object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 5.80); object(0x01BF, 0, 0, 0);
move(-6.90, 0.01, -4.40); object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 4.30); object(0x01BF, 0, 0, 0);
move(-7.70, 0.01, -3.70); object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 3.60); object(0x01BF, 0, 0, 0);
move(-6.30, 0.01, -1.40); object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 1.40); object(0x01BF, 0, 0, 0);
move(-5.20, 0.01, -2.70); object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 2.60); object(0x01BF, 0, 0, 0);
move(43.67, -28.10, -4.20); object(0x01BF, 270, 0, 89);
move(-6.23, -0.16, 0.00); object(0x01BF, 270, 0, 89);
move(-6.03, -0.35, 0.00); object(0x01BF, 270, 0, 89);
move(0.21, -8.00, 0.00); object(0x01BF, 270, 0, 89);
move(11.80, 16.21, 0.00); object(0x01BF, 270, 0, 89);
move(-0.16, 7.79, 0.00); object(0x01BF, 270, 0, 89);
move(-0.22, 7.90, 0.00); object(0x01BF, 270, 0, 89);
move(-6.39, -0.16, 0.00); object(0x01BF, 270, 0, 89);
move(0.19, -7.90, 0.00); object(0x01BF, 270, 0, 89);
move(0.19, -7.60, 0.00); object(0x01BF, 270, 0, 89);
move(-5.61, -0.44, 0.00); object(0x01BF, 270, 0, 89);
move(-0.20, 8.00, 0.00); object(0x01BF, 270, 0, 89);
move(-0.19, 7.80, 0.00); object(0x01BF, 270, 0, 89);
move(-5.90, -30.95, 0.00); object(0x01BF, 270, 0, 89);
move(0.11, 8.01, 0.00); object(0x01BF, 270, 0, 89);
move(-6.30, -2.95, -1.30); object(0x01BF, 245, 0, 89);
move(-5.61, -0.14, -2.60); object(0x01BF, 245, 0, 89);
move(-1.44, -0.14, -0.70); object(0x01BF, 245, 0, 90);
move(33.14, 4.01, 5.26); object(0x021C, 180, 0, 77);
move(0.06, -1.00, 0.00); object(0x021C, 180, 0, 77);
move(0.05, -0.90, 0.00); object(0x021C, 180, 0, 77);
move(0.05, -0.90, 0.00); object(0x021C, 180, 0, 77);
move(-1.24, -0.08, 0.00); object(0x021C, 180, 0, 77);
move(-0.07, 1.10, 0.00); object(0x021C, 180, 0, 77);
move(-0.05, 0.90, 0.00); object(0x021C, 180, 0, 77);
move(-0.06, 1.00, 0.00); object(0x021C, 180, 0, 77);
move(-1.13, -3.18, 0.00); object(0x021C, 180, 0, 77);
move(-0.08, 1.30, 0.00); object(0x021C, 180, 0, 77);
move(-0.07, 1.10, 0.00); object(0x021C, 180, 0, 77);
move(-0.06, 1.00, 0.00); object(0x021C, 180, 0, 77);
move(2.33, 24.50, 2.42); object(0x0F90, 180, 0, 320);
move(-0.15, -0.18, 0.00); object(0x0F90, 180, 0, 320);
move(-0.14, -0.17, 0.00); object(0x0F90, 180, 0, 320);
move(-0.09, -0.11, 0.00); object(0x0F90, 180, 0, 320);
move(0.97, 1.48, 1.80); object(0x0F90, 180, 0, 320);
move(-0.25, -0.31, 0.00); object(0x0F90, 180, 0, 320);
move(-0.04, -0.04, 0.00); object(0x0F90, 180, 0, 320);
move(-0.34, -0.41, 0.00); object(0x0F90, 180, 0, 320);
move(0.17, 0.20, 0.00); object(0x0F90, 180, 0, 320);
move(1.00, -15.68, 0.00); object(0x0F90, 180, 0, 358);
move(-0.42, -0.06, 0.00); object(0x0F90, 180, 0, 358);
move(-0.37, -0.08, 0.00); object(0x0F90, 180, 0, 358);
move(0.00, 0.00, -2.20); object(0x0F90, 180, 0, 358);
move(-0.43, -0.09, 0.00); object(0x0F90, 180, 0, 358);
move(-0.12, -0.03, 0.00); object(0x0F90, 180, 0, 358);
move(-47.73, 17.02, -5.79); object(0x0FE9, 180, 0, 241);
move(-0.22, -28.61, 0.59); object(0x0CD1, 0, 0, 94);
move(0.34, 4.69, 0.00); object(0x0CD1, 0, 0, 94);
move(0.92, 12.47, 0.00); object(0x0CD1, 0, 0, 94);
move(0.42, 5.68, 0.00); object(0x0CD1, 0, 0, 94);
move(-2.94, -13.85, 3.93); object(0x024B, 0, 0, 268);
move(0.18, 6.41, 0.00); object(0x024B, 0, 0, 268);
move(48.98, 13.38, 3.60); object(0x024B, 0, 0, 229);
move(0.72, -0.83, 0.00); object(0x024B, 0, 0, 229);
move(-0.81, -0.71, -1.70); object(0x024B, 0, 0, 229);
move(-0.85, 0.98, 0.00); object(0x024B, 0, 0, 229);
move(1.70, -1.96, 0.00); object(0x024B, 0, 0, 229);
move(-0.08, -14.73, -0.50); object(0x0114, 0, 0, 216);
move(-0.24, 2.15, 0.00); object(0x0114, 0, 0, 216);
move(-0.18, -3.90, 0.00); object(0x0114, 0, 0, 216);
move(1.14, -0.12, 2.10); object(0x0114, 0, 0, 216);
move(-0.39, 2.09, 0.00); object(0x0114, 0, 0, 216);
move(0.22, 1.91, 0.00); object(0x0114, 0, 0, 216);
move(-3.27, 10.24, -15.64); object(0x020C, 0, 0, 182);
move(-0.43, 1.33, 0.00); object(0x020C, 0, 0, 182);
move(1.66, 2.01, 0.00); object(0x020C, 0, 0, 182);
move(-0.31, 0.95, 0.00); object(0x020C, 0, 0, 182);
move(-1.67, -0.54, 0.00); object(0x020C, 0, 0, 182);
move(0.34, -1.05, 0.00); object(0x020C, 0, 0, 182);
move(-1.05, 0.71, 0.00); object(0x020C, 0, 0, 182);
move(2.78, -1.83, 0.00); object(0x020C, 0, 0, 182);
move(0.43, -1.33, 0.00); object(0x020C, 0, 0, 182);
move(-1.59, -0.93, 0.00); object(0x020C, 0, 0, 182);
move(-1.18, 0.88, 0.00); object(0x020C, 0, 0, 182);
move(3.84, -23.77, 0.10); object(0x0214, 0, 0, 239);
move(0.06, 1.23, 0.00); object(0x0214, 0, 0, 239);
move(-1.19, -1.48, 0.00); object(0x0214, 0, 0, 239);
move(-0.08, 1.36, 0.00); object(0x0214, 0, 0, 239);
setfloat(0x08e2d800, -129.29, -1036.50, 14.30);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1, 0x1);
setshort(0x08e2d826, 0x118);
setchar(0x08e2d832, 0x0f);
setchar(0x08e2d833, 0x00);
setchar(0x08e2d850, 0xff);
move(81.66, -1701.31, -67.87); object(0x022B, 0, 55, 16);
move(0.00, 0.00, -11.90); object(0x022B, 0, 0, 1);
move(6.96, -7.13, 0.00); object(0x022B, 0, 0, 1);
move(7.47, -7.65, 0.00); object(0x022B, 0, 0, 1);
move(6.86, -7.02, 0.00); object(0x022B, 0, 0, 1);
move(9.46, -4.14, 0.00); object(0x022B, 0, 0, 339);
move(7.49, -3.38, 0.00); object(0x022B, 0, 0, 339);
move(10.01, -4.51, 0.00); object(0x022B, 0, 0, 339);
move(11.08, -5.00, 0.00); object(0x022B, 0, 0, 339);
move(8.84, -3.99, 0.00); object(0x022B, 0, 0, 339);
move(10.29, -4.64, 0.00); object(0x022B, 0, 0, 339);
move(8.72, -3.93, 0.00); object(0x022B, 0, 0, 339);
move(7.88, -3.55, 0.00); object(0x022B, 0, 0, 339);
move(6.94, -3.13, 0.00); object(0x022B, 0, 0, 339);
move(7.68, -3.46, 0.00); object(0x022B, 0, 0, 339);
move(6.01, -2.71, 0.00); object(0x022B, 0, 0, 339);
move(8.31, -3.75, 0.00); object(0x022B, 0, 0, 339);
move(7.04, -3.17, 0.00); object(0x022B, 0, 0, 339);
move(5.54, -2.50, 0.00); object(0x022B, 0, 0, 339);
move(6.67, -3.01, 0.00); object(0x022B, 0, 0, 339);
move(7.35, -3.32, 0.00); object(0x022B, 0, 0, 339);
move(6.36, -2.87, 0.00); object(0x022B, 0, 0, 339);
move(5.66, -2.55, 0.00); object(0x022B, 0, 0, 339);
move(6.18, -2.78, 0.00); object(0x022B, 0, 0, 339);
move(6.31, -2.85, 0.00); object(0x022B, 0, 0, 339);
move(4.51, 1.90, 0.00); object(0x022B, 0, 0, 316);
move(4.16, 2.31, 0.00); object(0x022B, 0, 0, 311);
move(4.35, 3.28, 0.00); object(0x022B, 0, 0, 311);
move(4.79, 5.12, 0.00); object(0x022B, 0, 0, 311);
move(2.96, 5.70, 0.00); object(0x022B, 0, 0, 311);
move(-0.32, 4.99, 0.00); object(0x022B, 0, 0, 311);
move(-0.30, 4.69, 0.00); object(0x022B, 0, 0, 311);
move(-0.40, 6.29, 0.00); object(0x022B, 0, 0, 311);
move(-186.70, 66.67, -0.50); object(0x022B, 0, 0, 346);
move(9.02, -5.46, 0.00); object(0x022B, 0, 0, 346);
move(6.85, -4.15, 0.00); object(0x022B, 0, 0, 346);
move(6.90, -4.18, 0.00); object(0x022B, 0, 0, 346);
move(6.34, -3.84, 0.00); object(0x022B, 0, 0, 346);
move(7.26, -4.40, 0.00); object(0x022B, 0, 0, 346);
move(6.68, -4.04, 0.00); object(0x022B, 0, 0, 346);
move(6.15, -3.73, 0.00); object(0x022B, 0, 0, 346);
move(6.49, -3.91, 0.00); object(0x022B, 0, 0, 346);
move(6.03, -3.65, 0.00); object(0x022B, 0, 0, 345);
move(6.48, -3.79, 0.00); object(0x022B, 0, 0, 345);
move(10.47, -6.13, 0.00); object(0x022B, 0, 0, 345);
move(7.72, -4.52, 0.00); object(0x022B, 0, 0, 345);
move(6.96, -4.05, 0.00); object(0x022B, 0, 0, 345);
move(6.76, -3.94, 0.00); object(0x022B, 0, 0, 345);
move(5.92, -3.44, 0.00); object(0x022B, 0, 0, 345);
move(4.99, -2.90, 0.00); object(0x022B, 0, 0, 345);
move(7.15, -4.15, 0.00); object(0x022B, 0, 0, 345);
move(5.90, -2.62, 0.00); object(0x022B, 0, 0, 345);
move(5.37, -3.12, 0.00); object(0x022B, 0, 0, 345);
move(5.33, -3.10, 0.00); object(0x022B, 0, 0, 345);
move(5.92, -1.47, 0.00); object(0x022B, 0, 0, 345);
move(6.20, 0.56, 0.00); object(0x022B, 0, 0, 345);
move(5.89, 0.85, 0.00); object(0x022B, 0, 0, 345);
move(5.70, 0.16, 0.00); object(0x022B, 0, 0, 345);
move(5.47, 0.64, 0.00); object(0x022B, 0, 0, 345);
move(4.45, 0.65, 0.00); object(0x022B, 0, 0, 345);
move(1.86, 3.20, 0.00); object(0x022B, 0, 0, 345);
move(-1.71, 6.21, 0.00); object(0x022B, 0, 0, 349);
move(-1.92, 5.62, 0.00); object(0x022B, 0, 0, 351);
move(-3.54, 5.91, 0.00); object(0x022B, 0, 0, 351);
move(-4.22, 6.11, 0.00); object(0x022B, 0, 0, 351);
move(-2.49, 4.83, 0.10); object(0x022B, 0, 0, 351);
move(-3.80, 5.55, 0.00); object(0x022B, 0, 0, 351);
move(-2.17, 4.72, 0.00); object(0x022B, 0, 0, 351);
move(0.04, 4.96, 0.00); object(0x022B, 0, 0, 352);
move(2.14, 4.39, 0.00); object(0x022B, 0, 0, 352);
move(4.31, 6.56, 0.00); object(0x022B, 0, 0, 12);
move(3.80, 6.06, 0.00); object(0x022B, 0, 0, 12);
move(4.21, 5.07, 0.00); object(0x022B, 0, 0, 12);
move(3.20, 5.52, 0.00); object(0x022B, 0, 0, 12);
move(2.19, 5.60, 0.00); object(0x022B, 0, 0, 12);
move(3.28, 4.30, 0.00); object(0x022B, 0, 0, 12);
move(4.62, 4.81, 0.00); object(0x022B, 0, 0, 12);
move(3.43, 2.25, 0.00); object(0x022B, 0, 0, 12);
move(3.49, -74.07, 0.20); object(0x022B, 0, 0, 90);
move(-5.01, 5.03, 0.00); object(0x022B, 0, 0, 90);
move(-4.45, 4.46, 0.00); object(0x022B, 0, 0, 90);
move(-4.69, 8.03, 0.00); object(0x022B, 0, 0, 90);
move(-2.42, 5.38, 0.00); object(0x022B, 0, 0, 91);
move(3.72, 9.96, 0.00); object(0x022B, 0, 0, 150);
move(3.48, 6.93, 0.00); object(0x022B, 0, 0, 150);
move(3.59, 3.49, 0.00); object(0x022B, 0, 0, 150);
moveto(-1333.78, -1052.90, 20.54); object(0x01BF, 270, 0, 92);
move(0.24, 8.00, 0.00); object(0x01BF, 270, 0, 92);
move(0.24, 8.00, 0.00); object(0x01BF, 270, 0, 92);
move(-0.16, 7.71, 0.00); object(0x01BF, 270, 0, 92);
move(0.03, 0.90, 0.00); object(0x01BF, 270, 0, 92);
move(2.10, -25.64, -0.10); object(0x01BF, 270, 0, 279);
move(6.18, -1.46, 0.00); object(0x01BF, 270, 0, 279);
move(5.76, -1.29, 0.00); object(0x01BF, 270, 0, 279);
move(6.13, -1.15, 0.00); object(0x01BF, 270, 0, 279);
move(6.22, -1.46, 0.00); object(0x01BF, 270, 0, 279);
move(4.09, -0.63, 0.00); object(0x01BF, 270, 0, 279);
move(-24.26, 12.77, 0.10); object(0x01BF, 270, 0, 275);
move(5.77, -0.50, 0.00); object(0x01BF, 270, 0, 275);
move(0.32, -1.97, 0.00); object(0x01BF, 270, 0, 278);
move(6.84, -1.02, 0.00); object(0x01BF, 270, 0, 278);
move(6.38, -0.95, 0.00); object(0x01BF, 270, 0, 278);
move(5.80, -0.86, 0.00); object(0x01BF, 270, 0, 278);
move(-25.40, 13.17, 0.00); object(0x01BF, 270, 0, 278);
move(5.95, -0.88, 0.00); object(0x01BF, 270, 0, 278);
move(4.79, -0.71, 0.00); object(0x01BF, 270, 0, 278);
move(6.39, -0.95, 0.00); object(0x01BF, 270, 0, 278);
move(6.41, -0.95, 0.00); object(0x01BF, 270, 0, 278);
move(6.29, -0.93, 0.00); object(0x01BF, 270, 0, 278);
move(5.44, -0.81, 0.00); object(0x01BF, 270, 0, 278);
move(2.53, -0.38, 0.00); object(0x01BF, 270, 0, 278);
move(-25.07, -1.00, 0.00); object(0x01BF, 270, 0, 277);
move(4.86, -0.60, 0.00); object(0x01BF, 270, 0, 277);
move(3.93, -0.48, 0.00); object(0x01BF, 270, 0, 277);
move(4.82, -0.60, 0.00); object(0x01BF, 270, 0, 277);
move(4.65, -4.90, 0.00); object(0x01BF, 270, 0, 268);
move(4.84, 0.17, 0.00); object(0x01BF, 270, 0, 261);
move(2.52, 0.90, 0.00); object(0x01BF, 270, 0, 265);
move(-6.62, 4.81, 0.00); object(0x01BF, 270, 0, 304);
move(-31.71, 14.92, 0.00); object(0x01BF, 270, 0, 275);
move(5.98, -0.53, 0.00); object(0x01BF, 270, 0, 275);
move(6.34, -1.02, 0.00); object(0x01BF, 270, 0, 275);
move(6.25, -0.91, 0.00); object(0x01BF, 270, 0, 275);
move(5.77, -0.87, 0.00); object(0x01BF, 270, 0, 275);
move(5.78, -0.86, 0.00); object(0x01BF, 270, 0, 275);
move(5.62, -0.85, 0.00); object(0x01BF, 270, 0, 275);
move(2.60, -0.19, 0.00); object(0x01BF, 270, 0, 276);
move(-37.96, 9.02, 0.00); object(0x01BF, 270, 0, 269);
move(4.92, -0.11, 0.00); object(0x01BF, 270, 0, 269);
move(5.87, -0.30, 0.00); object(0x01BF, 270, 0, 269);
move(5.60, 0.10, 0.00); object(0x01BF, 270, 0, 269);
move(6.47, 0.12, 0.00); object(0x01BF, 270, 0, 269);
move(5.81, 0.11, 0.00); object(0x01BF, 270, 0, 269);
move(6.08, 0.11, 0.00); object(0x01BF, 270, 0, 269);
move(2.33, 0.04, 0.00); object(0x01BF, 270, 0, 269);
move(-2.36, -4.54, 0.00); object(0x01BF, 270, 0, 269);
move(2.62, 0.05, 0.00); object(0x01BF, 270, 0, 269);
move(-75.68, 400.22, -7.73); object(0x01BF, 0, 0, 269);
move(-0.11, 7.50, 0.00); object(0x01BF, 0, 0, 269);
move(0.00, 0.00, 1.90); object(0x01BF, 0, 0, 269);
move(0.10, -6.60, 0.00); object(0x01BF, 0, 0, 269);
move(-35.32, 1.26, -2.90); object(0x01BF, 0, 0, 273);
move(-0.34, -7.59, 0.00); object(0x01BF, 0, 0, 273);
move(0.69, 15.29, 0.00); object(0x01BF, 0, 0, 273);
move(0.35, 7.69, 0.00); object(0x01BF, 0, 0, 273);
move(3.90, 3.52, 0.00); object(0x01BF, 0, 0, 357);
move(7.69, 0.35, 0.00); object(0x01BF, 0, 0, 357);
move(7.69, 0.35, 0.00); object(0x01BF, 0, 0, 357);
move(4.09, 0.19, 0.00); object(0x01BF, 0, 0, 357);
move(-21.12, -30.74, 0.00); object(0x01BF, 0, 0, 180);
move(7.60, 0.02, 0.00); object(0x01BF, 0, 0, 180);
move(7.40, 0.02, 0.00); object(0x01BF, 0, 0, 180);
move(5.30, 0.02, 0.00); object(0x01BF, 0, 0, 180);
move(3.84, 3.93, 0.00); object(0x01BF, 0, 0, 93);
move(0.41, 7.89, 0.00); object(0x01BF, 0, 0, 93);
move(0.40, 7.69, 0.00); object(0x01BF, 0, 0, 93);
move(0.40, 7.69, 0.00); object(0x01BF, 0, 0, 93);
move(-0.29, 2.76, 0.00); object(0x01BF, 0, 0, 46);
moveto(-894.95, -783.91, 12.12); object(0x01BF, 0, 0, 0);
move(-24.22, 17.46, -1.90); object(0x0F36, 0, 0, 270);
move(-0.04, 3.70, 0.00); object(0x0F36, 0, 0, 270);
move(-0.04, 3.50, 0.00); object(0x0F36, 0, 0, 270);
move(-0.04, 3.60, 0.00); object(0x0F36, 0, 0, 270);
move(-0.04, 3.40, 0.00); object(0x0F36, 0, 0, 270);
move(5.15, 0.06, 0.00); object(0x0F36, 0, 0, 270);
move(0.04, -3.30, 0.00); object(0x0F36, 0, 0, 270);
move(0.04, -3.90, 0.00); object(0x0F36, 0, 0, 270);
move(0.04, -3.60, 0.00); object(0x0F36, 0, 0, 270);
move(0.04, -3.30, 0.00); object(0x0F36, 0, 0, 270);
move(1.24, 0.22, 0.40); object(0x0257, 0, 0, 0);
move(-0.02, 3.05, 0.00); object(0x0257, 0, 0, 0);
move(0.04, 3.76, 0.00); object(0x0257, 0, 0, 0);
move(-0.05, 4.02, 0.00); object(0x0257, 0, 0, 0);
move(0.03, 3.19, 0.00); object(0x0257, 0, 0, 0);
move(-5.47, -0.15, 0.00); object(0x0257, 0, 0, 0);
move(0.01, -3.62, 0.00); object(0x0257, 0, 0, 0);
move(0.04, -3.40, 0.00); object(0x0257, 0, 0, 0);
move(0.05, -3.42, 0.00); object(0x0257, 0, 0, 0);
move(0.04, -3.67, 0.00); object(0x0257, 0, 0, 0);
move(3.00, -0.08, 0.00); object(0x0257, 0, 0, 180);
move(-0.04, 3.40, 0.00); object(0x0257, 0, 0, 180);
move(-0.02, 3.63, 0.00); object(0x0257, 0, 0, 180);
move(0.08, 3.95, 0.00); object(0x0257, 0, 0, 180);
move(-0.22, 3.29, 0.00); object(0x0257, 0, 0, 180);
move(-5.06, -0.10, 0.00); object(0x0257, 0, 0, 180);
move(-0.10, -3.30, 0.00); object(0x0257, 0, 0, 180);
move(0.06, -3.75, 0.00); object(0x0257, 0, 0, 180);
move(0.07, -3.46, 0.00); object(0x0257, 0, 0, 180);
move(0.03, -3.65, 0.00); object(0x0257, 0, 0, 180);
move(2.12, 0.91, 0.00); object(0x0251, 345, 0, 270);
move(0.03, -1.58, 0.00); object(0x0251, 345, 0, 270);
move(-0.67, 1.27, 0.40); object(0x0249, 345, 0, 270);
move(0.13, -1.55, 0.00); object(0x0249, 345, 0, 270);
move(20.35, 18.82, 0.00); object(0x025E, 0, 0, 180);
move(-0.29, -4.25, -1.10); object(0x025A, 0, 0, 90);
move(-0.89, -4.87, 1.80); object(0x025C, 0, 0, 0);
moveto(-914.04, -769.72, 10.32); object(0x0F36, 0, 0, 270);
move(-0.03, -3.32, 0.00); object(0x0F36, 0, 0, 270);
move(0.06, -3.16, 0.00); object(0x0F36, 0, 0, 270);
move(-5.18, 6.21, 0.00); object(0x0F36, 0, 0, 270);
move(-0.01, -3.31, 0.00); object(0x0F36, 0, 0, 270);
move(-0.05, -3.43, 0.00); object(0x0F36, 0, 0, 270);
move(2.53, -2.69, 0.00); object(0x0F36, 0, 0, 270);
move(-3.62, 9.54, 0.20); object(0x0257, 0, 0, 180);
move(0.00, -3.29, 0.00); object(0x0257, 0, 0, 180);
move(0.02, -3.42, 0.00); object(0x0257, 0, 0, 180);
move(2.58, -2.73, 0.00); object(0x0257, 0, 0, 180);
move(1.85, -0.18, 0.00); object(0x0257, 0, 0, 0);
move(-2.50, 2.73, 0.00); object(0x0257, 0, 0, 0);
move(0.15, 3.50, 0.00); object(0x0257, 0, 0, 0);
move(0.01, 3.36, 0.00); object(0x0257, 0, 0, 0);
move(5.19, -6.30, 0.00); object(0x0257, 0, 0, 0);
move(-0.01, 3.24, 0.00); object(0x0257, 0, 0, 0);
move(-0.08, 3.31, 0.00); object(0x0257, 0, 0, 0);
move(-1.80, 0.03, 0.00); object(0x0257, 0, 0, 180);
move(-0.18, -3.34, 0.00); object(0x0257, 0, 0, 180);
move(-0.00, -3.23, 0.00); object(0x0257, 0, 0, 180);
moveto(-873.44, -1248.83, 12.51); object(0x01BF, 0, 0, 111);
move(-2.86, -7.09, 0.00); object(0x01BF, 0, 0, 113);
move(-2.99, -7.21, 0.00); object(0x01BF, 0, 0, 113);
move(-2.90, -6.85, 0.00); object(0x01BF, 0, 0, 113);
move(-2.63, -6.66, 0.00); object(0x01BF, 0, 0, 291);
move(-2.66, -7.01, 0.00); object(0x01BF, 0, 0, 291);
move(-2.81, -7.39, 0.00); object(0x01BF, 0, 0, 291);
move(-2.81, -7.39, 0.00); object(0x01BF, 0, 0, 291);
move(-2.45, -6.45, 0.00); object(0x01BF, 0, 0, 291);
move(-42.58, 17.48, -3.27); object(0x01BF, 0, 0, 289);
move(2.58, 7.60, 0.10); object(0x01BF, 0, 0, 291);
move(2.83, 7.26, 0.00); object(0x01BF, 0, 0, 291);
move(7.88, 20.21, 0.00); object(0x01BF, 0, 0, 291);
move(2.83, 7.26, 0.00); object(0x01BF, 0, 0, 291);
move(2.91, 7.45, 0.00); object(0x01BF, 0, 0, 291);
move(2.54, 6.52, 0.00); object(0x01BF, 0, 0, 291);
move(-34.11, -51.40, 0.10); object(0x01E1, 0, 0, 113);
move(24.35, 54.74, 0.00); object(0x01E1, 0, 0, 290);
move(53.12, -18.83, 2.30); object(0x021C, 0, 0, 33);
move(-3.22, -8.15, 0.00); object(0x021C, 0, 0, 33);
move(-3.08, -7.72, 0.00); object(0x021C, 0, 0, 33);
move(-2.83, -6.75, 0.00); object(0x021C, 0, 0, 33);
move(-3.04, -8.68, 0.00); object(0x021C, 0, 0, 33);
move(-2.81, -5.91, 0.00); object(0x021C, 0, 0, 33);
move(-2.58, -6.52, 0.00); object(0x021C, 0, 0, 33);
move(-2.89, -7.15, 0.00); object(0x021C, 0, 0, 33);
move(-2.31, -6.92, 0.00); object(0x021C, 0, 0, 33);
move(-31.06, 47.70, -2.20); object(0x021C, 0, 0, 348);
move(-1.12, -2.05, 0.00); object(0x021C, 0, 0, 348);
move(-0.54, -1.74, 0.00); object(0x021C, 0, 0, 348);
move(-0.74, -1.51, 0.00); object(0x021C, 0, 0, 348);
move(-0.53, -1.97, 0.00); object(0x021C, 0, 0, 348);
move(-0.16, -1.44, 0.00); object(0x021C, 0, 0, 348);
move(-0.54, -1.86, 0.00); object(0x021C, 0, 0, 348);
moveto(-1109.35, -748.50, 11.58);  object(0x01BF, 0, 0, 128);
move(0.00, 0.00, 0.00);  object(0x01BF, 0, 0, 128);
moveto(-1020.65, -413.83, 18.02);  object(0x01BF, 0, 0, 359);
move(7.20, 0.07, 0.00);  object(0x01BF, 0, 0, 359);
move(7.10, 0.07, 0.00);  object(0x01BF, 0, 0, 359);
moveto(-998.80, -413.53, 18.02);  object(0x01BF, 0, 0, 2);
move(2.00, -0.08, 0.00);  object(0x01BF, 0, 0, 2);
off()

#cheat Police Headquaters
//ID: 16163
//Score: 79
//Author: penguinsrule
//Category: Location Mods
//Description: This is a police station what has a police maverick and pad, 2 enforcers, 2 fbi cars, 2 police cars and weapons used by police
//
//EDITED BY: magical trevor on 07/08/06 14:09:12
//EDITED BY: penguinsrule on 07/08/06 21:43:17
//
//
//Image: http://telmaz.no-ip.info:3249/pictures/telpolicev1.gif
//Time: 07/08/2006 13:49:57
//Working: Yes
moveto(80.53, -1663.15, 26.86);  object(0x01BF, 0, 0, 90);
move(-0.04, 8.00, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.04, 7.90, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.04, 7.80, 0.00);  object(0x01BF, 0, 0, 90);
move(0.16, -31.40, 0.00);  object(0x01BF, 0, 0, 90);
move(-4.09, -3.95, 0.00);  object(0x01BF, 0, 0, 180);
move(-8.00, -0.06, 0.00);  object(0x01BF, 0, 0, 180);
move(-8.00, -0.06, 0.00);  object(0x01BF, 0, 0, 180);
move(-8.00, -0.06, 0.00);  object(0x01BF, 0, 0, 180);
move(-7.80, -0.06, 0.00);  object(0x01BF, 0, 0, 180);
move(-3.66, 4.12, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.04, 7.90, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.05, 8.00, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.05, 8.00, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.04, 7.90, 0.00);  object(0x01BF, 0, 0, 270);
move(35.63, -32.47, 3.10);  object(0x01BF, 90, 0, 180);
move(0.01, 6.64, 0.00);  object(0x01BF, 90, 0, 180);
move(0.02, 6.50, 0.00);  object(0x01BF, 90, 0, 180);
move(0.01, 6.47, 0.00);  object(0x01BF, 90, 0, 180);
move(0.01, 5.55, 0.00);  object(0x01BF, 90, 0, 180);
move(0.01, 6.37, 0.00);  object(0x01BF, 90, 0, 180);
move(0.00, 1.04, 0.00);  object(0x01BF, 90, 0, 180);
move(-31.55, -32.71, 0.00);  object(0x01BF, 90, 0, 180);
move(0.01, 6.33, 0.00);  object(0x01BF, 90, 0, 180);
move(0.01, 6.61, 0.00);  object(0x01BF, 90, 0, 180);
move(0.01, 6.32, 0.00);  object(0x01BF, 90, 0, 180);
move(0.01, 6.23, 0.00);  object(0x01BF, 90, 0, 180);
move(0.01, 6.53, 0.00);  object(0x01BF, 90, 0, 180);
move(0.00, 1.01, 0.00);  object(0x01BF, 90, 0, 180);
move(25.26, -32.32, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.92, -0.05, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.44, -0.04, 0.00);  object(0x01BF, 90, 0, 90);
move(-5.65, -0.01, 0.00);  object(0x01BF, 90, 0, 90);
move(-2.08, -0.00, 0.00);  object(0x01BF, 90, 0, 90);
move(0.69, 31.88, 0.00);  object(0x01BF, 90, 0, 270);
move(6.38, 0.02, 0.00);  object(0x01BF, 90, 0, 270);
move(6.70, 0.02, 0.00);  object(0x01BF, 90, 0, 270);
move(4.60, 0.01, 0.00);  object(0x01BF, 90, 0, 270);
move(5.95, 0.01, 0.00);  object(0x01BF, 90, 0, 270);
move(1.63, 0.01, 0.00);  object(0x01BF, 90, 0, 270);
move(-5.95, -24.14, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.05, 8.00, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.05, 7.70, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.01, 1.30, 0.00);  object(0x01BF, 90, 0, 90);
move(-6.97, 3.07, 0.00);  object(0x01BF, 90, 0, 0);
move(-7.70, 0.02, 0.00);  object(0x01BF, 90, 0, 0);
move(-3.80, 0.01, 0.00);  object(0x01BF, 90, 0, 0);
move(-2.81, -5.24, 0.00);  object(0x01BF, 90, 0, 270);
move(0.07, -7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(0.06, -7.50, 0.00);  object(0x01BF, 90, 0, 270);
move(7.14, -2.38, 0.00);  object(0x01BF, 90, 0, 180);
move(7.60, -0.06, 0.00);  object(0x01BF, 90, 0, 180);
move(-11.69, 7.46, -3.30);  object(0x01BF, 180, 0, 270);
move(-0.01, 7.90, 0.00);  object(0x01BF, 180, 0, 270);
move(4.02, 4.39, 0.00);  object(0x01BF, 180, 0, 0);
move(7.00, -0.01, 0.00);  object(0x01BF, 180, 0, 0);
move(3.90, -4.19, 0.00);  object(0x01BF, 180, 0, 90);
move(0.02, -7.70, 0.00);  object(0x01BF, 180, 0, 90);
move(0.00, -0.40, 0.00);  object(0x01BF, 180, 0, 90);
move(-14.92, 8.22, 0.00);  object(0x01BF, 180, 0, 270);
move(23.50, 15.20, 0.00);  object(0x01BF, 180, 0, 180);
move(-31.70, -0.23, 0.00);  object(0x01BF, 180, 0, 180);
move(7.90, 0.06, 0.00);  object(0x01BF, 180, 0, 180);
move(15.90, 0.12, 0.00);  object(0x01BF, 180, 0, 180);
move(13.56, 9.04, 0.00);  object(0x01F3, 0, 0, 0);
move(-10.00, 0.00, 0.00);  object(0x01F3, 0, 0, 0);
move(-34.10, 0.01, 0.00);  object(0x01F3, 0, 0, 0);
move(9.90, 0.00, 0.00);  object(0x01F3, 0, 0, 0);
move(-14.64, -4.70, 0.00);  object(0x01F3, 0, 0, 269);
move(0.14, -9.80, 0.00);  object(0x01F3, 0, 0, 269);
move(0.14, -10.20, 0.00);  object(0x01F3, 0, 0, 269);
move(0.14, -9.90, 0.00);  object(0x01F3, 0, 0, 269);
move(0.05, -3.30, 0.00);  object(0x01F3, 0, 0, 269);
move(4.03, -8.02, 0.00);  object(0x01F3, 0, 0, 216);
move(48.89, 40.30, 0.00);  object(0x01F3, 0, 0, 90);
move(0.09, -9.90, 0.00);  object(0x01F3, 0, 0, 90);
move(0.09, -9.90, 0.00);  object(0x01F3, 0, 0, 90);
move(0.09, -9.90, 0.00);  object(0x01F3, 0, 0, 90);
move(0.09, -9.90, 0.00);  object(0x01F3, 0, 0, 90);
move(0.08, -8.90, 0.00);  object(0x01F3, 0, 0, 90);
move(-4.91, -3.85, 0.00);  object(0x01F3, 0, 0, 187);
move(-9.73, 1.20, 0.00);  object(0x01F3, 0, 0, 187);
move(-9.83, 1.21, 0.00);  object(0x01F3, 0, 0, 187);
move(-8.53, 2.67, 0.00);  object(0x01F3, 0, 0, 211);
move(-8.42, 3.11, 0.00);  object(0x01F3, 0, 0, 192);
setchar(0x08E4E9EC, 158);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 77.47, -1661.24, 26.08, 0);
setchar(0x08E4Ea44, 158);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 77.47, -1646.24, 26.08, 0);
setchar(0x08E4Eac8, 157);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 43.56, -1667.91, 26.04, 0);
setchar(0x08E4Eb78, 157);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 43.56, -1659.91, 26.04, 0);
setchar(0x08E4Eba4, 148);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 43.56, -1651.91, 26.04, 0);
setchar(0x08E4Ebfc, 148);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 43.56, -1643.91, 26.04, 0);
setchar(0x8E4EAF4, 215);
setchar(0x8E4EAF4 + 0x18, 0x01);
setfloat(0x8E4EAF8, 60.24, -1655.15, 26.09, 0);
setfloat(0x08E2DFE0, 51.94, -1672.70, 26.05);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0xff, 0xff);
setshort(0x08E2E006, 0x010f);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
setfloat(0x08E2E040, 53.94, -1672.70, 26.05);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0xff, 0xff);
setshort(0x08E2E066, 0x106);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
setfloat(0x08E2E0A0, 55.94, -1672.70, 26.05);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x113);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
setfloat(0x08E2E100, 57.94, -1672.70, 26.05);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0xff, 0xff);
setshort(0x08E2E126, 0x11a);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
setfloat(0x08E2E160, 59.94, -1672.70, 26.05);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x117);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
setfloat(0x08E2E1C0, 61.94, -1672.70, 26.05);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
teleport(59.35, -1631.51, 26.15)

#cheat Bon Appetit!
//ID: 16131
//Score: 46
//Author: rob_obrien2@hotmail.com
//Category: Location Mods
//Description: Marco's Bistro Is Now Under new Management. FRENCH MANAGEMENT!!!!!.
//Bonjour! Welcome to Bon Appetit, Liberty City's Finest Restaurant.
//Includes a Lovely Fish Tank, Excellent Kitchen (Newly Passed FBI Inspection), High Quality Food Guaranteed!!!!
//
//
//Image: http://www.freewebs.com/crocodilius/Bon%5FAppetit1.jpg
//Time: 06/08/2006 18:47:08
//Working: Yes
moveto(1317.67, -454.98, 61.74);  object(0x01BF, 0, 0, 270);
move(0.04, -7.90, 0.00);  object(0x01BF, 0, 0, 270);
move(0.03, -6.20, 0.00);  object(0x01BF, 0, 0, 270);
move(-3.94, -3.97, 0.00);  object(0x01BF, 0, 0, 0);
move(0.10, -0.00, 0.00);  object(0x01BF, 0, 0, 0);
move(-3.99, -3.26, -2.30);  object(0x01BF, 90, 0, 0);
move(4.00, 0.01, 0.00);  object(0x01BF, 90, 0, 0);
move(0.02, -6.71, 0.00);  object(0x01BF, 90, 0, 0);
move(-4.10, -0.01, 0.00);  object(0x01BF, 90, 0, 0);
move(7.97, 6.20, 2.30);  object(0x01BF, 0, 0, 270);
move(0.00, -5.80, 0.00);  object(0x01BF, 0, 0, 270);
move(-11.82, 0.05, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.02, 7.60, 0.00);  object(0x01BF, 0, 0, 270);
move(0.04, 7.80, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.02, 7.70, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.02, 9.50, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, -2.30, 0.00);  object(0x01BF, 0, 0, 270);
move(38.24, -12.96, -10.87);  object(0x0202, 0, 0, 308);
move(0.57, 0.90, 0.00);  object(0x0202, 0, 0, 293);
move(-2.63, -2.41, 0.00);  object(0x0202, 0, 0, 328);
move(1.02, 0.62, 0.00);  object(0x0202, 0, 0, 318);
move(1.30, 1.16, 0.10);  object(0x0202, 0, 0, 298);
move(-34.61, 15.23, 9.55);  object(0x0F8B, 0, 0, 181);
move(0.00, 0.19, -0.01);  object(0x0F8B, 0, 0, 180);
move(4.87, 0.10, 1.97);  object(0x01BF, 270, 0, 91);
move(2.55, -0.10, -3.96);  object(0x0202, 270, 0, 89);
move(-0.03, 1.20, 0.00);  object(0x0202, 270, 0, 89);
move(-0.03, 1.10, 0.00);  object(0x0202, 270, 0, 89);
move(-0.03, 1.40, 0.00);  object(0x0202, 270, 0, 89);
move(0.02, -0.80, 0.00);  object(0x0202, 270, 0, 89);
move(-6.64, -16.68, -4.20);  object(0x0202, 270, 0, 32);
move(-2.53, 14.01, 8.13);  object(0x01BF, 270, 0, 90);
move(7.13, -0.22, -3.94);  object(0x0202, 270, 0, 91);
move(0.01, 1.16, 0.00);  object(0x0202, 270, 0, 91);
move(0.01, 1.27, 0.00);  object(0x0202, 270, 0, 91);
move(0.01, 1.21, 0.00);  object(0x0202, 270, 0, 91);
move(-0.70, -0.05, 0.00);  object(0x0202, 270, 0, 91);
move(-0.02, -1.03, 0.00);  object(0x0202, 270, 0, 91);
move(-0.01, -1.26, 0.00);  object(0x0202, 270, 0, 91);
move(-0.04, -1.23, 0.00);  object(0x0202, 270, 0, 91);
move(-0.01, -1.26, 0.00);  object(0x0202, 270, 0, 90);
move(-0.00, -1.21, 0.00);  object(0x0202, 270, 0, 90);
move(2.10, 0.06, 0.00);  object(0x0202, 270, 0, 90);
move(-0.10, 1.21, 0.00);  object(0x0202, 270, 0, 90);
move(-0.83, -13.68, 0.28);  object(0x0CDB, 270, 270, 0);
move(-0.10, 4.63, 0.00);  object(0x0CDB, 270, 270, 358);
move(-0.81, -6.91, -5.20);  object(0x0CDB, 270, 270, 257);
move(-41.48, 11.60, 0.00);  object(0x0CDA, 270, 270, 175);
move(17.61, 14.41, 0.00);  object(0x0CD9, 270, 270, 244);
move(26.19, -26.27, 6.20);  object(0x0CD8, 270, 270, 272);
move(-0.32, 9.55, 0.00);  object(0x0CD8, 270, 270, 270);
move(-0.32, -1.38, 1.50);  object(0x0CD8, 270, 180, 270);
move(0.54, -2.95, 0.00);  object(0x0CD8, 270, 180, 270);
move(-0.11, -2.97, 0.00);  object(0x0CD8, 270, 180, 270);
move(0.13, -0.69, 0.00);  object(0x0CD8, 270, 180, 270);
move(-1.09, 2.44, -6.20);  object(0x0214, 270, 180, 238);
move(-1.18, -0.04, 0.60);  object(0x0214, 270, 180, 238);
move(1.94, -11.48, 4.20);  object(0x0FB8, 180, 180, 108);
move(0.40, 0.22, 0.00);  object(0x0FB8, 180, 180, 108);
move(-0.81, 0.08, 0.00);  object(0x0FB8, 180, 180, 108);
move(0.33, -0.37, -0.10);  object(0x0FB8, 180, 180, 108);
move(0.27, -0.30, 0.30);  object(0x0FB8, 180, 180, 108);
move(-0.07, 0.07, -0.20);  object(0x0FB8, 180, 180, 108);
move(-0.67, 0.75, -0.20);  object(0x0FB8, 180, 180, 108);
move(-3.13, 7.82, -2.05);  object(0x0248, 180, 180, 115);
move(2.96, 2.56, 3.00);  object(0x0249, 75, 180, 112);
move(0.23, -1.09, -0.50);  object(0x0249, 75, 180, 112);
move(0.52, 3.11, 0.00);  object(0x0249, 75, 180, 259);
move(-0.82, 2.34, 0.00);  object(0x0249, 75, 180, 259);
move(1.52, -14.37, 1.29);  object(0x0251, 350, 180, 55);
move(-1.98, -5.57, -1.91);  object(0x09F9, 350, 0, 231);
move(-5.39, 6.36, 1.11);  object(0x020D, 0, 0, 88);
move(-2.70, -0.08, 0.00);  object(0x020D, 0, 0, 88);
move(0.00, 0.00, 0.00);  object(0x020D, 0, 0, 313);
move(0.12, -0.05, 4.50);  object(0x01BF, 0, 0, 2);
move(6.21, -0.10, 0.00);  object(0x01BF, 0, 0, 0);
move(3.51, -3.12, -5.58);  object(0x0FA2, 0, 0, 101);
move(-0.01, -0.70, 0.00);  object(0x0FA2, 0, 0, 101);
move(-0.01, -0.70, 0.00);  object(0x0FA2, 0, 0, 101);
move(-0.01, -0.70, 0.00);  object(0x0FA2, 0, 0, 101);
move(-0.01, -0.80, 0.00);  object(0x0FA2, 0, 0, 101);
move(-3.50, -4.10, -0.02);  object(0x01BF, 90, 0, 179);
move(-2.05, 0.76, 0.19);  object(0x0240, 90, 0, 288);
move(-0.12, -0.79, 0.00);  object(0x0240, 90, 0, 288);
move(-0.30, 0.05, 0.00);  object(0x0240, 90, 0, 288);
move(0.06, 0.40, 0.00);  object(0x0240, 90, 0, 288);
move(0.59, -0.41, -0.10);  object(0x0240, 90, 0, 102);
move(0.03, 0.63, 0.00);  object(0x0240, 90, 0, 102);
move(0.29, -0.06, 0.00);  object(0x0240, 90, 0, 107);
move(-0.19, -0.86, 0.00);  object(0x0240, 90, 0, 107);
move(-0.58, 1.11, 0.00);  object(0x0240, 90, 0, 107);
move(1.04, -0.38, 0.00);  object(0x0240, 90, 0, 107);
move(-0.29, -0.88, 0.00);  object(0x0240, 90, 0, 107);
move(2.50, 9.62, 0.21);  object(0x021C, 90, 0, 270);
move(-1.60, 0.04, 0.00);  object(0x021C, 90, 0, 270);
move(4.23, 0.22, 0.90);  object(0x0F8C, 250, 215, 135);
move(-0.34, -0.38, -0.40);  object(0x0F8C, 250, 215, 135);
move(-6.81, -12.48, 1.40);  object(0x01BF, 180, 0, 0);
move(3.62, 0.06, 0.00);  object(0x01BF, 180, 0, 0);
move(0.21, 3.65, 3.20);  object(0x01BF, 270, 0, 359);
move(-3.95, -0.47, 0.00);  object(0x01BF, 270, 0, 359);
move(3.96, -0.13, 0.00);  object(0x01BF, 270, 0, 3);
move(-0.41, 6.73, 0.00);  object(0x01BF, 270, 0, 359);
move(-3.39, 0.24, 0.00);  object(0x01BF, 270, 0, 359);
move(-1.18, 18.33, -5.68);  object(0x025B, 0, 0, 0);
move(3.50, -4.91, 0.00);  object(0x025B, 0, 0, 0);
move(3.07, -6.42, 0.00);  object(0x025B, 0, 0, 0);
teleport(1350.00, -455.81, 50.04)

#cheat Under Ground Base
//ID: 16091
//Score: 90
//Author: penguinsrule
//Category: Location Mods
//Description: This is a base on the end of the abandoned tunnel. Has 28 weapons+4 cars+dodo+hunter
//Image: http://telmaz.no-ip.info:3249/pictures/telunderv1.gif
//Time: 05/08/2006 22:14:30
//Working: Yes
moveto(342.22, -80.47, -12.32);  object(0x01BF, 270, 0, 155);
move(-7.13, -3.40, 0.00);  object(0x01BF, 270, 0, 155);
move(8.57, 3.32, 2.96);  object(0x01BF, 180, 0, 65);
move(-12.94, -6.09, 0.00);  object(0x01BF, 180, 0, 65);
move(2.87, 2.20, -3.00);  object(0x01BF, 90, 0, 155);
move(6.60, 1.72, 6.30);  object(0x01BF, 90, 0, 155);
move(-5.79, -2.74, 0.00);  object(0x01BF, 90, 0, 155);
move(0.00, 0.00, 0.00);  object(0x01BF, 90, 0, 155);
move(8.27, -2.95, -0.80);  object(0x01BF, 75, 0, 334);
move(-5.49, -2.66, 0.00);  object(0x01BF, 75, 0, 334);
move(8.70, -2.57, -1.30);  object(0x01BF, 90, 10, 65);
move(-6.11, -2.62, 0.00);  object(0x01BF, 90, 10, 64);
move(-0.44, -0.22, 0.00);  object(0x01BF, 90, 10, 64);
move(3.38, -6.91, -1.40);  object(0x01BF, 90, 10, 65);
move(6.31, 2.87, 0.10);  object(0x01BF, 90, 350, 245);
move(-18.64, 21.14, 0.00);  object(0x01BF, 0, 0, 290);
move(12.98, 5.75, 0.00);  object(0x01BF, 0, 0, 290);
move(-10.08, -7.03, -3.00);  object(0x01BF, 270, 0, 290);
move(2.66, 7.22, 0.00);  object(0x01BF, 270, 0, 290);
move(0.73, 1.97, 0.00);  object(0x01BF, 270, 0, 290);
move(3.34, -1.12, 0.00);  object(0x01BF, 270, 0, 110);
move(-1.34, -3.66, 0.00);  object(0x01BF, 270, 0, 110);
move(-4.66, -7.74, 6.30);  object(0x01BF, 270, 0, 155);
move(5.64, 2.58, 0.00);  object(0x01BF, 270, 0, 155);
move(-5.67, 0.34, 0.00);  object(0x01BF, 270, 0, 200);
move(2.10, 5.68, 0.00);  object(0x01BF, 270, 0, 200);
move(1.97, -0.73, 0.00);  object(0x01BF, 270, 0, 200);
move(1.67, 4.52, 0.00);  object(0x01BF, 270, 0, 200);
move(-1.97, 0.73, 0.00);  object(0x01BF, 270, 0, 200);
move(-4.68, -1.06, -3.30);  object(0x01BF, 180, 0, 110);
move(0.51, 1.41, 0.00);  object(0x01BF, 180, 0, 110);
move(14.79, -0.70, 0.00);  object(0x01BF, 180, 0, 198);
move(-17.09, 5.65, 0.00);  object(0x01BF, 180, 0, 198);
move(-2.19, 5.02, 0.00);  object(0x01BF, 180, 0, 290);
move(2.66, 7.33, 0.00);  object(0x01BF, 180, 0, 290);
move(1.11, -8.99, -3.00);  object(0x01BF, 90, 0, 200);
move(6.94, -2.56, 0.00);  object(0x01BF, 90, 0, 200);
move(7.13, -2.63, 0.00);  object(0x01BF, 90, 0, 200);
move(2.53, -0.93, 0.00);  object(0x01BF, 90, 0, 200);
move(-14.43, 12.01, 0.00);  object(0x01BF, 90, 0, 200);
move(7.32, -2.70, 0.00);  object(0x01BF, 90, 0, 200);
move(7.32, -2.70, 0.00);  object(0x01BF, 90, 0, 200);
move(1.69, -0.62, 0.00);  object(0x01BF, 90, 0, 200);
move(-14.69, 12.60, 1.70);  object(0x01BF, 90, 335, 290);
move(-2.19, 4.00, 1.30);  object(0x01BF, 0, 0, 110);
move(2.52, 7.07, 0.00);  object(0x01BF, 0, 0, 110);
move(1.73, -5.36, 1.50);  object(0x01BF, 270, 335, 290);
move(2.66, 6.14, 1.70);  object(0x01BF, 270, 0, 200);
move(-4.43, -12.62, -6.20);  object(0x01BF, 270, 0, 200);
move(7.25, -2.60, 0.00);  object(0x01BF, 270, 0, 200);
move(7.34, -2.64, 0.00);  object(0x01BF, 270, 0, 200);
move(1.79, -0.64, 0.00);  object(0x01BF, 270, 0, 200);
move(-14.31, 11.05, 0.00);  object(0x01BF, 270, 0, 200);
move(7.34, -2.64, 0.00);  object(0x01BF, 270, 0, 200);
move(7.34, -2.64, 0.00);  object(0x01BF, 270, 0, 200);
move(1.41, -0.51, 0.00);  object(0x01BF, 270, 0, 200);
move(-14.06, 11.44, 0.00);  object(0x01BF, 270, 0, 200);
move(7.15, -2.57, 0.00);  object(0x01BF, 270, 0, 200);
move(7.44, -2.67, 0.00);  object(0x01BF, 270, 0, 200);
move(1.51, -0.54, 0.00);  object(0x01BF, 270, 0, 200);
move(-15.05, 8.99, 2.90);  object(0x01BF, 180, 0, 200);
move(7.44, -2.67, 0.00);  object(0x01BF, 180, 0, 200);
move(7.25, -2.60, 0.00);  object(0x01BF, 180, 0, 200);
move(1.51, -0.54, 0.00);  object(0x01BF, 180, 0, 200);
move(-10.28, 1.86, 3.30);  object(0x01BF, 90, 0, 20);
move(7.43, -2.69, 0.00);  object(0x01BF, 90, 0, 20);
move(2.07, -0.75, 0.00);  object(0x01BF, 90, 0, 20);
move(-2.12, -5.85, 0.00);  object(0x01BF, 90, 0, 20);
move(-7.24, 2.62, 0.00);  object(0x01BF, 90, 0, 20);
move(-2.26, 0.82, 0.00);  object(0x01BF, 90, 0, 20);
move(-2.11, -5.82, 0.00);  object(0x01BF, 90, 0, 20);
move(8.27, -2.99, 0.00);  object(0x01BF, 90, 0, 20);
move(-0.94, 0.34, 0.00);  object(0x01BF, 90, 0, 20);
move(1.97, -0.71, 0.00);  object(0x01BF, 90, 0, 20);
move(-17.27, 1.64, 0.00);  object(0x01BF, 90, 0, 20);
move(7.24, -2.62, 0.00);  object(0x01BF, 90, 0, 20);
move(7.43, -2.69, 0.00);  object(0x01BF, 90, 0, 20);
move(1.13, -0.41, 0.00);  object(0x01BF, 90, 0, 20);
move(-19.04, -2.76, 0.00);  object(0x01BF, 90, 0, 200);
move(7.33, -2.68, 0.00);  object(0x01BF, 90, 0, 200);
move(7.42, -2.71, 0.00);  object(0x01BF, 90, 0, 200);
move(1.88, -0.69, 0.00);  object(0x01BF, 90, 0, 200);
move(0.48, 2.73, 0.00);  object(0x01BF, 90, 0, 200);
move(-7.22, 2.67, 0.00);  object(0x01BF, 90, 0, 200);
move(-7.04, 2.60, 0.00);  object(0x01BF, 90, 0, 200);
move(-1.78, 0.66, 0.00);  object(0x01BF, 90, 0, 200);
move(19.04, -8.98, -3.10);  object(0x01BF, 180, 0, 290);
move(2.65, 7.44, 0.00);  object(0x01BF, 180, 0, 290);
move(2.55, 7.16, 0.00);  object(0x01BF, 180, 0, 290);
move(2.38, 6.69, 0.00);  object(0x01BF, 180, 0, 290);
move(0.00, 0.00, 6.20);  object(0x01BF, 180, 0, 290);
move(-2.61, -7.35, 0.00);  object(0x01BF, 180, 0, 290);
move(-2.58, -7.25, 0.00);  object(0x01BF, 180, 0, 290);
move(-2.28, -6.41, 0.00);  object(0x01BF, 180, 0, 290);
move(-5.17, -2.64, 0.00);  object(0x01BF, 180, 0, 200);
move(-16.27, 5.89, 0.00);  object(0x01BF, 180, 0, 200);
move(-2.15, 4.90, 0.00);  object(0x01BF, 180, 0, 110);
move(2.75, 7.41, 0.00);  object(0x01BF, 180, 0, 110);
move(2.71, 7.31, 0.00);  object(0x01BF, 180, 0, 110);
move(2.43, 6.56, 0.00);  object(0x01BF, 180, 0, 110);
move(11.63, -29.00, 3.20);  object(0x01BF, 270, 0, 200);
move(-7.23, 2.65, 0.00);  object(0x01BF, 270, 0, 200);
move(-6.76, 2.48, 0.00);  object(0x01BF, 270, 0, 200);
move(-2.07, 0.76, 0.00);  object(0x01BF, 270, 0, 200);
move(2.12, 5.76, 0.00);  object(0x01BF, 270, 0, 200);
move(7.32, -2.69, 0.00);  object(0x01BF, 270, 0, 200);
move(7.51, -2.76, 0.00);  object(0x01BF, 270, 0, 200);
move(1.13, -0.41, 0.00);  object(0x01BF, 270, 0, 200);
move(2.11, 5.74, 0.00);  object(0x01BF, 270, 0, 200);
move(-7.32, 2.69, 0.00);  object(0x01BF, 270, 0, 200);
move(-7.23, 2.65, 0.00);  object(0x01BF, 270, 0, 200);
move(-1.31, 0.48, 0.00);  object(0x01BF, 270, 0, 200);
move(2.16, 5.87, 0.00);  object(0x01BF, 270, 0, 200);
move(7.32, -2.69, 0.00);  object(0x01BF, 270, 0, 200);
move(7.23, -2.65, 0.00);  object(0x01BF, 270, 0, 200);
move(1.13, -0.41, 0.00);  object(0x01BF, 270, 0, 200);
move(1.91, 5.21, 0.00);  object(0x01BF, 270, 0, 200);
move(-7.13, 2.62, 0.00);  object(0x01BF, 270, 0, 200);
move(-7.23, 2.65, 0.00);  object(0x01BF, 270, 0, 200);
move(-1.13, 0.41, 0.00);  object(0x01BF, 270, 0, 200);
move(1.03, 2.81, -3.40);  object(0x01BF, 0, 0, 200);
move(7.42, -2.72, 0.00);  object(0x01BF, 0, 0, 200);
move(7.04, -2.59, 0.00);  object(0x01BF, 0, 0, 200);
move(1.03, -0.38, 0.00);  object(0x01BF, 0, 0, 200);
move(-23.09, -25.52, -2.10);  object(0x01EE, 0, 0, 110);
move(-2.80, -7.93, 0.10);  object(0x01EE, 0, 0, 110);
move(10.02, -1.42, -0.20);  object(0x01EE, 0, 0, 290);
move(3.16, -6.89, 0.20);  object(0x01EE, 0, 0, 245);
move(3.46, -7.43, -2.00);  object(0x01EE, 0, 345, 245);
move(3.55, -7.61, -1.40);  object(0x01EE, 0, 350, 245);
move(-22.68, 15.79, 3.40);  object(0x01EE, 0, 0, 65);
move(3.51, -7.63, -0.30);  object(0x01EE, 0, 15, 65);
move(3.69, -7.44, -2.00);  object(0x01EE, 0, 10, 65);
setchar(0x08E4Ebfc, 131);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 342.63, -90.08, -12.23, 25);
setchar(0x08E4E9EC, 137);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 346.84, -98.39, -13.39, 25);
setchar(0x08E4Ea44, 142);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 350.84, -106.41, -15.27, 25);
setchar(0x08E4Eac8, 213);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 342.89, -95.41, -7.09, 20);
setchar(0x08E4Eb78, 164);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 353.33, -118.03, -10.57, 280);
setchar(0x08E4Eba4, 130);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 354.92, -114.90, -16.54, 25);
setfloat(0x08e2d800, 350.69, 68.76, -11.28);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
setfloat(0x08E2E400, 351.76, -65.75, -11.28);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x104);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, 352.83, -62.74, -11.28);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x105)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
setfloat(0x08e2d8c0, 353.90, -59.73, -11.28);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x106);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, 354.76, -56.72, -11.28);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x107);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, 356.04, -53.71, -11.28);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x108);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, 357.11, 50.70, -11.28);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x109);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, 358.18, 47.69, -11.28);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x10a);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
setfloat(0x08e2daa0, 359.25, 44.68, -11.28);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10b);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
setfloat(0x08e2db00, 350.69, 68.76, -5.08);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10c);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
setfloat(0x08E2DB60, 351.76, -65.75, -5.08);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10d);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
setfloat(0x08E2DBC0, 352.83, -62.74, -5.08);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10e);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
setfloat(0x08E2DC20, 353.90, -59.73, -5.08);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x10f);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
setfloat(0x08E2DC80, 354.76, -56.72, -5.08);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x110);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
setfloat(0x08E2DCE0, 356.04, -53.71, -5.08);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x112);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
setfloat(0x08E2DD40, 357.11, 50.70, 5.08);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x113);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
setfloat(0x08E2DDA0, 358.18, 47.69, -5.08);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x114);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
setfloat(0x08E2DE00, 359.25, 44.68, -5.08);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x115);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
setfloat(0x08E2DE60, 330.65, -61.19, -5.08);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x116);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
setfloat(0x08E2DEC0, 331.67, -59.31, -5.08);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x117);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
setfloat(0x08E2DF20, 332.69, -56.30, -5.08);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0xff, 0xff);
setshort(0x08E2DF46, 0x118);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
setfloat(0x08E2DF80, 333.71, -53.29, -5.08);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0xff, 0xff);
setshort(0x08E2DFA6, 0x119);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
setfloat(0x08E2DFE0, 356.75, -43.58, -11.28);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0xff, 0xff);
setshort(0x08E2E006, 0x11a);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
setfloat(0x08E2E040, 353.87, -42.65, -11.28);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0xff, 0xff);
setshort(0x08E2E066, 0x11b);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
setfloat(0x08E2E0A0, 350.99, -41.72, -11.28);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0xff, 0xff);
setshort(0x08E2E0C6, 0x11c);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
setfloat(0x08E2E100, 348.11, -40.79, -11.28);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0xff, 0xff);
setshort(0x08E2E126, 0x11d);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
setfloat(0x08E2E160, 345.23, -39.86, -11.28);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0xff, 0xff);
setshort(0x08E2E186, 0x11e);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
setfloat(0x08E2E1C0, 342.35, -38.93, -11.28);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0xff, 0xff);
setshort(0x08E2E1E6, 0x11f);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
teleport(352.16, -117.95, -16.74)

#cheat Large Mansion v2
//ID: 16027
//Score: 89
//Author: penguinsrule
//Category: Location Mods
//Description: A large mansion with 2 cars +20 weapons + speeder+ jetty
//Image: http://telmaz.no-ip.info:3249/telmanv2.gif
//Time: 04/08/2006 21:32:25
//Working: Yes
moveto(-558.69, -973.14, 11.14);  object(0x01BF, 295, 0, 270);
move(-0.06, 7.60, 0.00);  object(0x01BF, 295, 0, 270);
move(4.66, 0.04, 2.20);  object(0x01BF, 295, 0, 270);
move(0.06, -7.60, 0.00);  object(0x01BF, 295, 0, 270);
move(-2.73, -3.64, -5.00);  object(0x01BF, 0, 335, 0);
move(-0.04, 15.08, 0.00);  object(0x01BF, 0, 335, 0);
move(3.39, -15.28, 1.70);  object(0x01BF, 0, 335, 0);
move(0.05, 15.24, 0.00);  object(0x01BF, 0, 335, 0);
move(5.54, -3.99, 4.70);  object(0x01BF, 90, 0, 270);
move(0.02, -7.50, 0.00);  object(0x01BF, 90, 0, 270);
move(0.02, -7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(0.02, -7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.08, 30.90, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.02, 7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(3.12, 0.01, 3.40);  object(0x01BF, 0, 0, 270);
move(0.06, -7.70, 0.00);  object(0x01BF, 0, 0, 270);
move(0.17, -23.30, 0.00);  object(0x01BF, 0, 0, 270);
move(0.05, -7.50, 0.00);  object(0x01BF, 0, 0, 270);
move(-6.66, 8.45, -6.70);  object(0x01BF, 0, 0, 270);
move(0.06, -8.50, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.01, 1.40, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.22, 29.69, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.05, 7.30, 0.00);  object(0x01BF, 0, 0, 270);
move(3.87, 3.85, -0.10);  object(0x01BF, 0, 0, 180);
move(8.00, 0.02, 0.00);  object(0x01BF, 0, 0, 180);
move(15.90, 0.04, 0.00);  object(0x01BF, 0, 0, 180);
move(-11.99, -3.95, 0.00);  object(0x01BF, 0, 0, 270);
move(0.04, -7.80, 0.00);  object(0x01BF, 0, 0, 270);
move(0.04, -7.70, 0.00);  object(0x01BF, 0, 0, 270);
move(3.90, -3.97, 0.00);  object(0x01BF, 0, 0, 180);
move(4.14, 19.35, 0.00);  object(0x01BF, 0, 0, 90);
move(0.06, -7.70, 0.00);  object(0x01BF, 0, 0, 90);
move(0.06, -7.90, 0.00);  object(0x01BF, 0, 0, 90);
move(-4.03, -3.68, 0.00);  object(0x01BF, 0, 0, 180);
move(-9.27, 20.15, 3.40);  object(0x01BF, 270, 0, 0);
move(-0.01, -6.80, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.01, -5.57, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.01, -6.45, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.01, -6.09, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.01, -6.58, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.01, -6.74, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.00, -1.59, 0.00);  object(0x01BF, 270, 0, 0);
move(7.83, 39.80, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.03, -6.71, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.03, -6.08, 0.00);  object(0x01BF, 270, 0, 0);
move(0.13, -6.24, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.02, -6.78, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.02, -6.32, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.02, -6.24, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.01, -1.33, 0.00);  object(0x01BF, 270, 0, 0);
move(8.04, 39.71, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.02, -6.54, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.02, -6.51, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.02, -6.57, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.02, -6.13, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.02, -6.11, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.02, -6.38, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.00, -1.44, 0.00);  object(0x01BF, 270, 0, 0);
move(5.67, 14.89, 1.20);  object(0x01E4, 270, 345, 270);
move(-0.08, 8.40, 2.30);  object(0x01E4, 270, 345, 270);
move(-0.08, 7.80, 2.10);  object(0x01E4, 270, 345, 270);
move(-1.83, -30.42, -5.60);  object(0x01BF, 270, 0, 270);
move(-0.08, 7.70, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.08, 7.90, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.08, 7.70, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.07, 7.60, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.08, 7.51, 0.00);  object(0x01BF, 270, 0, 270);
move(3.53, 0.03, -2.40);  object(0x01BF, 180, 0, 270);
move(0.06, -7.80, 0.00);  object(0x01BF, 180, 0, 270);
move(0.06, -7.80, 0.00);  object(0x01BF, 180, 0, 270);
move(0.06, -7.90, 0.00);  object(0x01BF, 180, 0, 270);
move(0.06, -7.80, 0.00);  object(0x01BF, 180, 0, 270);
move(0.05, -6.90, 0.00);  object(0x01BF, 180, 0, 270);
move(-2.93, 15.08, 0.30);  object(0x01BF, 180, 345, 270);
move(-0.05, 7.40, 2.10);  object(0x01BF, 180, 345, 270);
move(-0.04, 6.00, 1.50);  object(0x01BF, 180, 345, 270);
move(-20.69, 9.86, 5.10);  object(0x01BF, 90, 0, 270);
move(0.05, -7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(0.04, -7.30, 0.00);  object(0x01BF, 90, 0, 270);
move(6.23, 0.04, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.04, 7.30, 0.00);  object(0x01BF, 90, 0, 270);
move(6.60, 0.04, 0.00);  object(0x01BF, 90, 0, 270);
move(0.06, -7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(0.06, -7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(0.06, -7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(0.06, -7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.30, 0.00);  object(0x01BF, 90, 0, 270);
move(6.59, 0.05, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.04, 5.40, 0.00);  object(0x01BF, 90, 0, 270);
move(-2.56, 7.24, 0.00);  object(0x01BF, 90, 0, 270);
move(0.08, 7.50, 0.00);  object(0x01BF, 90, 0, 270);
move(2.08, 2.81, 0.00);  object(0x01BF, 90, 0, 270);
move(1.21, 0.01, 0.00);  object(0x01BF, 90, 0, 270);
move(0.11, -17.60, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(0.03, -5.20, 0.00);  object(0x01BF, 90, 0, 270);
move(-25.99, -4.26, -9.90);  object(0x01BF, 0, 0, 0);
move(6.50, 0.01, 1.80);  object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 6.60);  object(0x01BF, 0, 0, 0);
move(7.30, 0.01, -6.80);  object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 6.80);  object(0x01BF, 0, 0, 0);
move(8.00, 0.01, -6.70);  object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 6.70);  object(0x01BF, 0, 0, 0);
move(3.30, 0.01, -6.50);  object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 6.50);  object(0x01BF, 0, 0, 0);
moveto(-520.88, -956.99, 17.14);  object(0x01BF, 0, 345, 270);
move(-0.05, 6.80, 0.90);  object(0x01BF, 0, 0, 270);
move(3.18, -38.39, 1.10);  object(0x01BF, 0, 0, 270);
move(-0.02, 8.00, -0.10);  object(0x01BF, 0, 0, 270);
move(-0.02, 8.00, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.02, 7.90, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.02, 7.90, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.02, 6.60, 0.00);  object(0x01BF, 0, 0, 270);
move(-4.16, 3.65, -6.00);  object(0x01BF, 0, 0, 180);
move(-1.60, 0.01, 0.00);  object(0x01BF, 0, 0, 180);
move(1.60, 0.15, 5.30);  object(0x01BF, 0, 0, 180);
move(-7.90, 0.12, -0.20);  object(0x01BF, 0, 0, 180);
move(-7.40, 0.05, 0.00);  object(0x01BF, 0, 0, 180);
move(-3.40, 0.02, 0.00);  object(0x01BF, 0, 0, 180);
move(21.24, -34.23, 4.70);  object(0x01E4, 270, 340, 269);
move(-0.13, 7.90, 2.90);  object(0x01E4, 270, 340, 269);
move(-0.09, 5.30, 2.00);  object(0x01E4, 270, 340, 269);
move(1.72, 16.93, -2.00);  object(0x01BF, 180, 0, 269);
move(0.13, -7.80, 0.00);  object(0x01BF, 180, 0, 269);
move(0.13, -7.90, 0.00);  object(0x01BF, 180, 0, 269);
move(0.13, -7.90, 0.00);  object(0x01BF, 180, 0, 269);
move(0.13, -7.80, 0.00);  object(0x01BF, 180, 0, 269);
move(0.11, -6.80, 0.00);  object(0x01BF, 180, 0, 269);
move(-3.67, 29.53, 3.50);  object(0x01BF, 90, 0, 90);
move(-0.03, 7.83, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.07, 0.61, 0.00);  object(0x01BF, 90, 0, 90);
move(0.19, -24.60, 0.00);  object(0x01BF, 90, 0, 90);
move(0.04, -8.03, 0.00);  object(0x01BF, 90, 0, 90);
move(0.10, -5.43, 0.00);  object(0x01BF, 90, 0, 90);
moveto(-521.95, -946.20, 24.82);  object(0x01BF, 0, 0, 180);
move(-7.80, 0.01, 0.00);  object(0x01BF, 0, 0, 180);
move(-8.00, 0.01, 0.00);  object(0x01BF, 0, 0, 180);
move(-3.10, 0.00, 0.00);  object(0x01BF, 0, 0, 180);
move(19.00, -0.03, 1.30);  object(0x01BF, 0, 0, 180);
move(-8.00, 0.01, 0.00);  object(0x01BF, 0, 0, 180);
move(-7.90, 0.01, 0.00);  object(0x01BF, 0, 0, 180);
move(-3.00, 0.00, 0.00);  object(0x01BF, 0, 0, 180);
move(13.70, -4.10, 3.00);  object(0x01BF, 270, 0, 90);
move(0.03, -8.00, 0.00);  object(0x01BF, 270, 0, 90);
move(0.03, -7.60, 0.00);  object(0x01BF, 270, 0, 90);
move(2.50, -0.22, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -1.70, 0.00);  object(0x01BF, 270, 0, 90);
move(-2.54, -4.81, 0.00);  object(0x01BF, 270, 0, 91);
move(-0.01, -7.30, 0.00);  object(0x01BF, 270, 0, 91);
move(-0.01, -7.90, 0.00);  object(0x01BF, 270, 0, 91);
move(-0.00, -0.70, 0.00);  object(0x01BF, 270, 0, 91);
move(-6.37, 38.18, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -7.80, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -8.00, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -8.00, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -7.80, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -6.40, 0.00);  object(0x01BF, 270, 0, 90);
move(-6.50, 38.20, 0.00);  object(0x01BF, 270, 0, 90);
move(0.06, -7.90, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -7.70, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -7.90, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -8.00, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -6.70, 0.00);  object(0x01BF, 270, 0, 90);
move(-1.49, 38.00, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -7.90, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -7.90, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -7.80, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -7.70, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -6.60, 0.00);  object(0x01BF, 270, 0, 90);
moveto(-544.78, -950.16, 24.62);  object(0x01BF, 0, 0, 90);
move(0.02, -7.70, 0.00);  object(0x01BF, 0, 0, 90);
move(0.02, -7.70, 0.00);  object(0x01BF, 0, 0, 90);
move(0.02, -7.80, 0.00);  object(0x01BF, 0, 0, 90);
move(0.02, -7.90, 0.00);  object(0x01BF, 0, 0, 90);
move(0.02, -7.40, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.01, 38.28, 1.20);  object(0x01BF, 0, 0, 90);
move(0.09, -7.90, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.07, -8.00, 0.00);  object(0x01BF, 0, 0, 90);
move(0.09, -7.90, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.04, -7.30, 0.00);  object(0x01BF, 0, 0, 90);
move(0.08, -7.20, 0.00);  object(0x01BF, 0, 0, 90);
move(23.11, -3.86, 0.00);  object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 0.00);  object(0x01BF, 0, 0, 0);
move(-7.70, -0.06, 0.00);  object(0x01BF, 0, 0, 0);
move(-7.80, -0.06, 0.00);  object(0x01BF, 0, 0, 0);
move(-3.70, 0.20, 0.00);  object(0x01BF, 0, 0, 0);
move(19.99, 21.44, -8.50);  object(0x01EE, 0, 15, 90);
move(-0.06, 7.91, 2.10);  object(0x01EE, 0, 15, 90);
move(0.07, 7.76, 2.00);  object(0x01EE, 0, 15, 90);
moveto(-520.80, -971.54, 26.90);  object(0x01EE, 0, 340, 269);
move(0.10, -8.10, -3.00);  object(0x01EE, 0, 340, 269);
move(0.05, -3.80, -2.10);  object(0x01F0, 0, 340, 269);
move(-30.28, -0.85, -7.00);  object(0x01EF, 0, 0, 270);
move(0.04, -7.50, 0.00);  object(0x01EF, 0, 0, 270);
move(6.30, -0.90, 0.00);  object(0x01EF, 0, 0, 180);
move(-6.36, 31.87, 0.00);  object(0x01EF, 0, 0, 270);
move(-0.09, 7.40, 0.10);  object(0x01EF, 0, 0, 270);
move(-0.13, 6.98, 0.00);  object(0x01EF, 0, 0, 0);
move(7.20, 0.08, 15.10);  object(0x01EE, 0, 0, 0);
move(8.08, -0.01, 0.00);  object(0x01EE, 0, 0, 0);
move(9.40, -0.07, 0.00);  object(0x01EE, 0, 0, 0);
moveto(-517.68, -954.76, 30.00);  object(0x01EE, 0, 0, 270);
move(0.04, -8.30, 0.00);  object(0x01EE, 0, 0, 270);
move(0.04, -8.50, 0.00);  object(0x01EE, 0, 0, 270);
move(0.04, -8.80, 0.00);  object(0x01EE, 0, 0, 270);
move(0.04, -8.20, 0.00);  object(0x01EE, 0, 0, 270);
move(0.02, -3.90, -0.60);  object(0x01F0, 0, 0, 270);
move(-7.20, 0.20, 0.50);  object(0x01EE, 0, 0, 0);
move(-8.70, 0.07, 0.00);  object(0x01EE, 0, 0, 0);
move(-9.30, 0.07, 0.00);  object(0x01EE, 0, 0, 0);
move(-1.89, 7.75, 0.00);  object(0x01EE, 0, 0, 90);
move(-0.14, 8.48, 0.00);  object(0x01EE, 0, 0, 90);
move(0.13, 8.26, -0.10);  object(0x01EE, 0, 0, 90);
moveto(-544.50, -958.87, 29.80);  object(0x01EE, 0, 0, 90);
move(-0.10, 8.20, 0.00);  object(0x01EE, 0, 0, 90);
move(-0.05, 4.00, -0.70);  object(0x01F0, 0, 0, 90);
moveto(-552.36, -913.19, -2.22);  object(0x01BF, 0, 0, 270);
move(3.15, 0.02, 3.20);  object(0x01BF, 270, 0, 270);
move(-0.04, 7.30, 0.00);  object(0x01BF, 270, 0, 270);
move(5.14, -7.57, 0.00);  object(0x01BF, 270, 0, 270);
move(6.30, 0.03, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.04, 7.50, 0.00);  object(0x01BF, 270, 0, 270);
move(-14.47, -0.08, -3.50);  object(0x01BF, 180, 0, 270);
move(6.17, 0.04, 0.00);  object(0x01BF, 180, 0, 270);
move(5.08, 0.03, 0.00);  object(0x01BF, 180, 0, 270);
move(6.43, 0.04, 0.00);  object(0x01BF, 180, 0, 270);
move(0.05, -7.80, 0.00);  object(0x01BF, 180, 0, 270);
move(-8.97, 4.12, -0.40);  object(0x01BF, 180, 270, 180);
move(5.65, 7.60, 0.00);  object(0x01BF, 180, 270, 180);
move(-11.30, 0.08, 0.00);  object(0x01BF, 180, 270, 180);
move(-3.23, -7.61, 4.60);  object(0x01EE, 180, 180, 90);
move(0.08, -7.20, -0.70);  object(0x01EF, 180, 180, 90);
move(0.07, 14.77, 0.00);  object(0x01EF, 180, 180, 181);
move(11.40, -0.13, 0.10);  object(0x01EF, 180, 180, 181);
move(6.41, -8.06, 0.00);  object(0x01EF, 180, 180, 270);
move(-0.00, 7.40, 0.00);  object(0x01EF, 180, 180, 270);
move(-1.65, -10.00, 0.60);  object(0x01E4, 90, 190, 270);
move(-1.41, 2.70, -0.50);  object(0x01EF, 180, 190, 270);
move(2.59, 0.14, -0.20);  object(0x01EF, 180, 190, 270);
move(-4.05, -17.12, 3.20);  object(0x01E4, 90, 155, 181);
move(-8.00, 0.12, 3.70);  object(0x01E4, 90, 155, 181);
move(-8.43, 0.12, 1.90);  object(0x01E4, 90, 180, 180);
move(-3.46, 1.18, 0.70);  object(0x01EE, 180, 180, 180);
move(9.04, 0.13, -0.50);  object(0x01EE, 180, 155, 180);
move(8.10, 0.06, -3.60);  object(0x01EE, 180, 155, 180);
move(-18.01, -3.02, 3.40);  object(0x01F0, 180, 180, 90);
setchar(0x08E4Ebfc, 142);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, -558.38, -956.98, 10.87, 90);
setchar(0x08E4E9EC, 133);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, -559.50, -980.87, 10.87, 90);
setfloat(0x08e2d800, -542.98, -949.78, 22.52);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
setfloat(0x08E2E400, -542.98, -951.78, 22.52);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x104);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, -542.98, -953.78, 22.52);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x105)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
setfloat(0x08e2d8c0, -542.98, -955.78, 22.52);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x106);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, -542.98, -957.78, 22.52);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x107);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, -542.98, -959.78, 22.52);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x108);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, -542.98, -961.78, 22.52);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x109);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, -542.98, -963.78, 22.52);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x10a);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
setfloat(0x08e2daa0, -542.98, -965.78, 22.52);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10b);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
setfloat(0x08e2db00, -542.98, -967.78, 22.52);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10c);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
setfloat(0x08E2DB60, -542.98, -969.78, 22.52);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10d);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
setfloat(0x08E2DBC0, -542.98, -971.78, 22.52);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10e);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
setfloat(0x08E2DC20, -542.98, -973.78, 22.52);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x10f);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
setfloat(0x08E2DC80, -542.98, -975.78, 22.52);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x110);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
setfloat(0x08E2DCE0, -542.98, -977.78, 22.52);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x112);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
setfloat(0x08E2DD40, -542.98, -979.78, 22.52);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x113);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
setfloat(0x08E2DDA0, -542.98, -981.78, 22.52);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x114);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
setfloat(0x08E2DE00, -542.98, -983.78, 22.52);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x115);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
setfloat(0x08E2DE60, -542.98, -985.78, 22.52);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x116);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
setfloat(0x08E2DEC0, -542.98, -987.78, 22.52);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x117);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
setchar(0x08E4Eba4, 194);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, -543.76, -904.29, 1.28, 0);
off()

#cheat Large Mansion
//ID: 16007
//Score: 34
//Author: penguinsrule
//Category: Location Mods
//Description: A large mansion at the airport runway nearest to staunton+ 20 weapons+ 2 cars.
//moer to come
//Image: http://telmaz.no-ip.info:3249/telmanv1.gif
//Time: 04/08/2006 18:53:45
//Working: Yes
moveto(-558.69, -973.14, 11.14);  object(0x01BF, 295, 0, 270);
move(-0.06, 7.60, 0.00);  object(0x01BF, 295, 0, 270);
move(4.66, 0.04, 2.20);  object(0x01BF, 295, 0, 270);
move(0.06, -7.60, 0.00);  object(0x01BF, 295, 0, 270);
move(-2.73, -3.64, -5.00);  object(0x01BF, 0, 335, 0);
move(-0.04, 15.08, 0.00);  object(0x01BF, 0, 335, 0);
move(3.39, -15.28, 1.70);  object(0x01BF, 0, 335, 0);
move(0.05, 15.24, 0.00);  object(0x01BF, 0, 335, 0);
move(5.54, -3.99, 4.70);  object(0x01BF, 90, 0, 270);
move(0.02, -7.50, 0.00);  object(0x01BF, 90, 0, 270);
move(0.02, -7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(0.02, -7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.08, 30.90, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.02, 7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(3.12, 0.01, 3.40);  object(0x01BF, 0, 0, 270);
move(0.06, -7.70, 0.00);  object(0x01BF, 0, 0, 270);
move(0.17, -23.30, 0.00);  object(0x01BF, 0, 0, 270);
move(0.05, -7.50, 0.00);  object(0x01BF, 0, 0, 270);
move(-6.66, 8.45, -6.70);  object(0x01BF, 0, 0, 270);
move(0.06, -8.50, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.01, 1.40, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.22, 29.69, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.05, 7.30, 0.00);  object(0x01BF, 0, 0, 270);
move(3.87, 3.85, -0.10);  object(0x01BF, 0, 0, 180);
move(8.00, 0.02, 0.00);  object(0x01BF, 0, 0, 180);
move(15.90, 0.04, 0.00);  object(0x01BF, 0, 0, 180);
move(-11.99, -3.95, 0.00);  object(0x01BF, 0, 0, 270);
move(0.04, -7.80, 0.00);  object(0x01BF, 0, 0, 270);
move(0.04, -7.70, 0.00);  object(0x01BF, 0, 0, 270);
move(3.90, -3.97, 0.00);  object(0x01BF, 0, 0, 180);
move(4.14, 19.35, 0.00);  object(0x01BF, 0, 0, 90);
move(0.06, -7.70, 0.00);  object(0x01BF, 0, 0, 90);
move(0.06, -7.90, 0.00);  object(0x01BF, 0, 0, 90);
move(-4.03, -3.68, 0.00);  object(0x01BF, 0, 0, 180);
move(-9.27, 20.15, 3.40);  object(0x01BF, 270, 0, 0);
move(-0.01, -6.80, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.01, -5.57, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.01, -6.45, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.01, -6.09, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.01, -6.58, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.01, -6.74, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.00, -1.59, 0.00);  object(0x01BF, 270, 0, 0);
move(7.83, 39.80, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.03, -6.71, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.03, -6.08, 0.00);  object(0x01BF, 270, 0, 0);
move(0.13, -6.24, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.02, -6.78, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.02, -6.32, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.02, -6.24, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.01, -1.33, 0.00);  object(0x01BF, 270, 0, 0);
move(8.04, 39.71, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.02, -6.54, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.02, -6.51, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.02, -6.57, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.02, -6.13, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.02, -6.11, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.02, -6.38, 0.00);  object(0x01BF, 270, 0, 0);
move(-0.00, -1.44, 0.00);  object(0x01BF, 270, 0, 0);
move(5.67, 14.89, 1.20);  object(0x01E4, 270, 345, 270);
move(-0.08, 8.40, 2.30);  object(0x01E4, 270, 345, 270);
move(-0.08, 7.80, 2.10);  object(0x01E4, 270, 345, 270);
move(-1.83, -30.42, -5.60);  object(0x01BF, 270, 0, 270);
move(-0.08, 7.70, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.08, 7.90, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.08, 7.70, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.07, 7.60, 0.00);  object(0x01BF, 270, 0, 270);
move(-0.08, 7.51, 0.00);  object(0x01BF, 270, 0, 270);
move(3.53, 0.03, -2.40);  object(0x01BF, 180, 0, 270);
move(0.06, -7.80, 0.00);  object(0x01BF, 180, 0, 270);
move(0.06, -7.80, 0.00);  object(0x01BF, 180, 0, 270);
move(0.06, -7.90, 0.00);  object(0x01BF, 180, 0, 270);
move(0.06, -7.80, 0.00);  object(0x01BF, 180, 0, 270);
move(0.05, -6.90, 0.00);  object(0x01BF, 180, 0, 270);
move(-2.93, 15.08, 0.30);  object(0x01BF, 180, 345, 270);
move(-0.05, 7.40, 2.10);  object(0x01BF, 180, 345, 270);
move(-0.04, 6.00, 1.50);  object(0x01BF, 180, 345, 270);
move(-20.69, 9.86, 5.10);  object(0x01BF, 90, 0, 270);
move(0.05, -7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(0.04, -7.30, 0.00);  object(0x01BF, 90, 0, 270);
move(6.23, 0.04, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.05, 7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.04, 7.30, 0.00);  object(0x01BF, 90, 0, 270);
move(6.60, 0.04, 0.00);  object(0x01BF, 90, 0, 270);
move(0.06, -7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(0.06, -7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(0.06, -7.70, 0.00);  object(0x01BF, 90, 0, 270);
move(0.06, -7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.30, 0.00);  object(0x01BF, 90, 0, 270);
move(6.59, 0.05, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.60, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.06, 7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(-0.04, 5.40, 0.00);  object(0x01BF, 90, 0, 270);
move(-2.56, 7.24, 0.00);  object(0x01BF, 90, 0, 270);
move(0.08, 7.50, 0.00);  object(0x01BF, 90, 0, 270);
move(2.08, 2.81, 0.00);  object(0x01BF, 90, 0, 270);
move(1.21, 0.01, 0.00);  object(0x01BF, 90, 0, 270);
move(0.11, -17.60, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.90, 0.00);  object(0x01BF, 90, 0, 270);
move(0.05, -7.80, 0.00);  object(0x01BF, 90, 0, 270);
move(0.03, -5.20, 0.00);  object(0x01BF, 90, 0, 270);
move(-25.99, -4.26, -9.90);  object(0x01BF, 0, 0, 0);
move(6.50, 0.01, 1.80);  object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 6.60);  object(0x01BF, 0, 0, 0);
move(7.30, 0.01, -6.80);  object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 6.80);  object(0x01BF, 0, 0, 0);
move(8.00, 0.01, -6.70);  object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 6.70);  object(0x01BF, 0, 0, 0);
move(3.30, 0.01, -6.50);  object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 6.50);  object(0x01BF, 0, 0, 0);
moveto(-520.88, -956.99, 17.14);  object(0x01BF, 0, 345, 270);
move(-0.05, 6.80, 0.90);  object(0x01BF, 0, 0, 270);
move(3.18, -38.39, 1.10);  object(0x01BF, 0, 0, 270);
move(-0.02, 8.00, -0.10);  object(0x01BF, 0, 0, 270);
move(-0.02, 8.00, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.02, 7.90, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.02, 7.90, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.02, 6.60, 0.00);  object(0x01BF, 0, 0, 270);
move(-4.16, 3.65, -6.00);  object(0x01BF, 0, 0, 180);
move(-1.60, 0.01, 0.00);  object(0x01BF, 0, 0, 180);
move(1.60, 0.15, 5.30);  object(0x01BF, 0, 0, 180);
move(-7.90, 0.12, -0.20);  object(0x01BF, 0, 0, 180);
move(-7.40, 0.05, 0.00);  object(0x01BF, 0, 0, 180);
move(-3.40, 0.02, 0.00);  object(0x01BF, 0, 0, 180);
move(21.24, -34.23, 4.70);  object(0x01E4, 270, 340, 269);
move(-0.13, 7.90, 2.90);  object(0x01E4, 270, 340, 269);
move(-0.09, 5.30, 2.00);  object(0x01E4, 270, 340, 269);
move(1.72, 16.93, -2.00);  object(0x01BF, 180, 0, 269);
move(0.13, -7.80, 0.00);  object(0x01BF, 180, 0, 269);
move(0.13, -7.90, 0.00);  object(0x01BF, 180, 0, 269);
move(0.13, -7.90, 0.00);  object(0x01BF, 180, 0, 269);
move(0.13, -7.80, 0.00);  object(0x01BF, 180, 0, 269);
move(0.11, -6.80, 0.00);  object(0x01BF, 180, 0, 269);
move(-3.67, 29.53, 3.50);  object(0x01BF, 90, 0, 90);
move(-0.03, 7.83, 0.00);  object(0x01BF, 90, 0, 90);
move(-0.07, 0.61, 0.00);  object(0x01BF, 90, 0, 90);
move(0.19, -24.60, 0.00);  object(0x01BF, 90, 0, 90);
move(0.04, -8.03, 0.00);  object(0x01BF, 90, 0, 90);
move(0.10, -5.43, 0.00);  object(0x01BF, 90, 0, 90);
moveto(-521.95, -946.20, 24.82);  object(0x01BF, 0, 0, 180);
move(-7.80, 0.01, 0.00);  object(0x01BF, 0, 0, 180);
move(-8.00, 0.01, 0.00);  object(0x01BF, 0, 0, 180);
move(-3.10, 0.00, 0.00);  object(0x01BF, 0, 0, 180);
move(19.00, -0.03, 1.30);  object(0x01BF, 0, 0, 180);
move(-8.00, 0.01, 0.00);  object(0x01BF, 0, 0, 180);
move(-7.90, 0.01, 0.00);  object(0x01BF, 0, 0, 180);
move(-3.00, 0.00, 0.00);  object(0x01BF, 0, 0, 180);
move(13.70, -4.10, 3.00);  object(0x01BF, 270, 0, 90);
move(0.03, -8.00, 0.00);  object(0x01BF, 270, 0, 90);
move(0.03, -7.60, 0.00);  object(0x01BF, 270, 0, 90);
move(2.50, -0.22, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -1.70, 0.00);  object(0x01BF, 270, 0, 90);
move(-2.54, -4.81, 0.00);  object(0x01BF, 270, 0, 91);
move(-0.01, -7.30, 0.00);  object(0x01BF, 270, 0, 91);
move(-0.01, -7.90, 0.00);  object(0x01BF, 270, 0, 91);
move(-0.00, -0.70, 0.00);  object(0x01BF, 270, 0, 91);
move(-6.37, 38.18, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -7.80, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -8.00, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -8.00, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -7.80, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -6.40, 0.00);  object(0x01BF, 270, 0, 90);
move(-6.50, 38.20, 0.00);  object(0x01BF, 270, 0, 90);
move(0.06, -7.90, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -7.70, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -7.90, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -8.00, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -6.70, 0.00);  object(0x01BF, 270, 0, 90);
move(-1.49, 38.00, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -7.90, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -7.90, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -7.80, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -7.70, 0.00);  object(0x01BF, 270, 0, 90);
move(0.00, -6.60, 0.00);  object(0x01BF, 270, 0, 90);
moveto(-544.78, -950.16, 24.62);  object(0x01BF, 0, 0, 90);
move(0.02, -7.70, 0.00);  object(0x01BF, 0, 0, 90);
move(0.02, -7.70, 0.00);  object(0x01BF, 0, 0, 90);
move(0.02, -7.80, 0.00);  object(0x01BF, 0, 0, 90);
move(0.02, -7.90, 0.00);  object(0x01BF, 0, 0, 90);
move(0.02, -7.40, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.01, 38.28, 1.20);  object(0x01BF, 0, 0, 90);
move(0.09, -7.90, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.07, -8.00, 0.00);  object(0x01BF, 0, 0, 90);
move(0.09, -7.90, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.04, -7.30, 0.00);  object(0x01BF, 0, 0, 90);
move(0.08, -7.20, 0.00);  object(0x01BF, 0, 0, 90);
move(23.11, -3.86, 0.00);  object(0x01BF, 0, 0, 0);
move(0.00, 0.00, 0.00);  object(0x01BF, 0, 0, 0);
move(-7.70, -0.06, 0.00);  object(0x01BF, 0, 0, 0);
move(-7.80, -0.06, 0.00);  object(0x01BF, 0, 0, 0);
move(-3.70, 0.20, 0.00);  object(0x01BF, 0, 0, 0);
move(19.99, 21.44, -8.50);  object(0x01EE, 0, 15, 90);
move(-0.06, 7.91, 2.10);  object(0x01EE, 0, 15, 90);
move(0.07, 7.76, 2.00);  object(0x01EE, 0, 15, 90);
moveto(-520.80, -971.54, 26.90);  object(0x01EE, 0, 340, 269);
move(0.10, -8.10, -3.00);  object(0x01EE, 0, 340, 269);
move(0.05, -3.80, -2.10);  object(0x01F0, 0, 340, 269);
move(-30.28, -0.85, -7.00);  object(0x01EF, 0, 0, 270);
move(0.04, -7.50, 0.00);  object(0x01EF, 0, 0, 270);
move(6.30, -0.90, 0.00);  object(0x01EF, 0, 0, 180);
move(-6.36, 31.87, 0.00);  object(0x01EF, 0, 0, 270);
move(-0.09, 7.40, 0.10);  object(0x01EF, 0, 0, 270);
move(-0.13, 6.98, 0.00);  object(0x01EF, 0, 0, 0);
move(7.20, 0.08, 15.10);  object(0x01EE, 0, 0, 0);
move(8.08, -0.01, 0.00);  object(0x01EE, 0, 0, 0);
move(9.40, -0.07, 0.00);  object(0x01EE, 0, 0, 0);
moveto(-517.68, -954.76, 30.00);  object(0x01EE, 0, 0, 270);
move(0.04, -8.30, 0.00);  object(0x01EE, 0, 0, 270);
move(0.04, -8.50, 0.00);  object(0x01EE, 0, 0, 270);
move(0.04, -8.80, 0.00);  object(0x01EE, 0, 0, 270);
move(0.04, -8.20, 0.00);  object(0x01EE, 0, 0, 270);
move(0.02, -3.90, -0.60);  object(0x01F0, 0, 0, 270);
move(-7.20, 0.20, 0.50);  object(0x01EE, 0, 0, 0);
move(-8.70, 0.07, 0.00);  object(0x01EE, 0, 0, 0);
move(-9.30, 0.07, 0.00);  object(0x01EE, 0, 0, 0);
move(-1.89, 7.75, 0.00);  object(0x01EE, 0, 0, 90);
move(-0.14, 8.48, 0.00);  object(0x01EE, 0, 0, 90);
move(0.13, 8.26, -0.10);  object(0x01EE, 0, 0, 90);
moveto(-544.50, -958.87, 29.80);  object(0x01EE, 0, 0, 90);
move(-0.10, 8.20, 0.00);  object(0x01EE, 0, 0, 90);
move(-0.05, 4.00, -0.70);  object(0x01F0, 0, 0, 90);
setchar(0x08E4Ebfc, 142);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, -558.38, -956.98, 10.87, 90);
setchar(0x08E4E9EC, 133);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, -559.50, -980.87, 10.87, 90);
setfloat(0x08e2d800, -542.98, -949.78, 22.52);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
setfloat(0x08E2E400, -542.98, -951.78, 22.52);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x104);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
setfloat(0x08e2d860, -542.98, -953.78, 22.52);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x105)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
setfloat(0x08e2d8c0, -542.98, -955.78, 22.52);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x106);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
setfloat(0x08e2d920, -542.98, -957.78, 22.52);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x107);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
setfloat(0x08e2d980, -542.98, -959.78, 22.52);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x108);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
setfloat(0x08e2d9e0, -542.98, -961.78, 22.52);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x109);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
setfloat(0x08e2da40, -542.98, -963.78, 22.52);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x10a);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
setfloat(0x08e2daa0, -542.98, -965.78, 22.52);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10b);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
setfloat(0x08e2db00, -542.98, -967.78, 22.52);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10c);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
setfloat(0x08E2DB60, -542.98, -969.78, 22.52);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10d);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
setfloat(0x08E2DBC0, -542.98, -971.78, 22.52);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10e);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
setfloat(0x08E2DC20, -542.98, -973.78, 22.52);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0xff, 0xff);
setshort(0x08E2DC46, 0x10f);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
setfloat(0x08E2DC80, -542.98, -975.78, 22.52);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0xff, 0xff);
setshort(0x08E2DCA6, 0x110);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
setfloat(0x08E2DCE0, -542.98, -977.78, 22.52);
setint(0x08E2DCF4, 0);
setchar(0x08E2DCFC, 0xff, 0xff);
setshort(0x08E2DD06, 0x112);
setchar(0x08E2DD12, 0x0f);
setchar(0x08E2DD13, 0x00);
setchar(0x08E2DD30, 0xff);
setfloat(0x08E2DD40, -542.98, -979.78, 22.52);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0xff, 0xff);
setshort(0x08E2DD66, 0x113);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
setfloat(0x08E2DDA0, -542.98, -981.78, 22.52);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0xff, 0xff);
setshort(0x08E2DDC6, 0x114);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
setfloat(0x08E2DE00, -542.98, -983.78, 22.52);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0xff, 0xff);
setshort(0x08E2DE26, 0x115);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
setfloat(0x08E2DE60, -542.98, -985.78, 22.52);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0xff, 0xff);
setshort(0x08E2DE86, 0x116);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
setfloat(0x08E2DEC0, -542.98, -987.78, 22.52);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0xff, 0xff);
setshort(0x08E2DEE6, 0x117);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
off()

#cheat lovely luxury apartment furnished and decorated!
//ID: 15946
//Score: 41
//Author: shano-02
//Category: Location Mods
//Description: do u hate it when some1 puts up a "brilliant house" add-on but it ends up very dull because the walls are green but this is different! it is fully furnished and decorated! giv it a try! u wont regret it!
//Image: none
//Time: 04/08/2006 00:32:55
//Working: Yes
// created by shano-02.
// thanks to waterbottle for the item code  guide.
moveto(-1125.68, 239.15, 4.52);  object(0x0F9A, 0, 0, 298);
move(-7.94, 4.13, -0.10);  object(0x0FF6, 0, 0, 161);
move(236.98, 334.46, 112.73);  object(0x0F9B, 0, 0, 246);
move(-234.61, -1016.82, -105.00);  object(0x0F96, 0, 0, 182);
move(6.07, -0.51, 0.10);  object(0x0F9A, 0, 0, 271);
move(-6.42, -6.51, -0.10);  object(0x0F99, 0, 0, 91);
move(6.57, -0.15, 0.10);  object(0x0F95, 0, 0, 358);
move(-5.69, 8.59, -0.97);  object(0x0FBD, 0, 0, 317);
move(7.52, -10.20, 0.00);  object(0x0FAE, 0, 0, 77);
move(1.02, 0.25, 0.00);  object(0x0FA2, 0, 0, 73);
move(-10.18, 9.93, 0.00);  object(0x0F75, 0, 0, 245);
move(-37.65, 1.52, -1.00);  object(0x0F1A, 0, 0, 122);
move(47.68, 0.06, -0.20);  object(0x0EFF, 0, 0, 184);
move(-1.08, -2.02, 1.30);  object(0x0F74, 0, 0, 201);
move(-21.57, -115.56, 27.36);  object(0x012D, 0, 0, 267);
teleport(-1127.74, -431.10, 11.12)

#cheat Mini Car Showroom v2.5
//ID: 15921
//Score: 58
//Author: rashon125
//Category: Location Mods
//Description: This showroom is short but sweet. Here are the features:
//*Found In Chinatown, Portland
//*All Weapon Spawns
//*15 Vehicle Spawns
//*Sports Cars That Aren't Found In Portland
//*All Motorcycle Spawns
//
//Try and you'll like it!
//Image: http://img125.imageshack.us/my.php?image=mainphotopm5.png
//Time: 03/08/2006 18:13:12
//Working: Yes
moveto(802.14, -664.29, 17.87);  object(0x01BF, 0, 0, 184);
move(-7.96, 0.36, 0.00);  object(0x01BF, 0, 0, 180);
move(-4.21, 4.07, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.01, 8.07, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.03, 7.86, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.01, 8.04, 0.00);  object(0x01BF, 0, 0, 270);
move(0.03, 7.85, 0.00);  object(0x01BF, 0, 0, 270);
move(4.29, 4.01, 0.00);  object(0x01BF, 0, 0, 0);
move(7.83, -0.02, 0.00);  object(0x01BF, 0, 0, 0);
move(3.70, -4.16, 0.00);  object(0x01BF, 0, 0, 270);
move(0.18, -8.19, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.02, -7.71, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.36, -7.78, 0.00);  object(0x01BF, 0, 0, 275);
move(-11.63, 21.75, -1.80);  object(0x01BF, 55, 0, 2);
move(0.13, 3.97, 2.90);  object(0x01BF, 55, 0, 2);
move(0.15, 2.19, 5.60);  object(0x01BF, 0, 0, 0);
move(7.52, -0.04, 0.00);  object(0x01BF, 0, 0, 0);
move(3.79, -4.27, 0.00);  object(0x01BF, 0, 0, 90);
move(0.63, -8.25, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.03, -7.67, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.43, -7.73, 0.00);  object(0x01BF, 0, 0, 90);
move(-0.24, -8.06, 0.00);  object(0x01BF, 0, 0, 90);
move(-4.09, -4.10, 0.00);  object(0x01BF, 0, 0, 180);
move(-7.58, 0.03, 0.00);  object(0x01BF, 0, 0, 180);
move(7.82, 36.56, -3.30);  object(0x01BF, 90, 0, 0);
move(-0.03, -7.01, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.03, -6.57, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.03, -6.77, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.03, -6.52, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.05, -6.04, 0.00);  object(0x01BF, 90, 0, 178);
move(-7.80, 25.90, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.05, -6.55, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.06, -6.91, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.05, -5.96, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.05, -6.67, 0.00);  object(0x01BF, 90, 0, 0);
move(-3.68, 0.32, 3.60);  object(0x01BF, 0, 0, 270);
move(0.06, 7.83, 0.00);  object(0x01BF, 0, 0, 270);
move(0.01, 8.08, 0.00);  object(0x01BF, 0, 0, 270);
move(0.08, 7.99, 0.00);  object(0x01BF, 0, 0, 270);
move(-0.03, 8.32, -0.30);  object(0x01BF, 0, 0, 271);
move(3.82, 1.07, 3.10);  object(0x01BF, 90, 0, 0);
move(-0.02, -6.69, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.02, -6.33, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.02, -6.64, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.02, -6.33, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.02, -7.14, 0.00);  object(0x01BF, 90, 0, 0);
move(7.88, 32.73, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.04, -6.32, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.04, -6.32, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.04, -6.52, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.04, -6.53, 0.00);  object(0x01BF, 90, 0, 0);
move(-0.06, -7.14, 0.00);  object(0x01BF, 90, 0, 0);
//Brass Knuckles
setfloat(0x08e2d800, 804.06, -627.02, 22.45);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0xff, 0xff)
setshort(0x08e2d826, 0x103)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Chisel
setfloat(0x08e2d860, 804.06, -629.87, 22.45);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x104)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//Hockey Stick
setfloat(0x08e2d8c0, 804.06, -631.58, 22.45);
setint(0x08e2d8d4, 0);
setchar(0x08e2d8dC, 0xff, 0xff);
setshort(0x08e2d8e6, 0x105);
setchar(0x08e2d8f2, 0x0f);
setchar(0x08e2d8f3, 0x00);
setchar(0x08e2d910, 0xff);
//Nightstick
setfloat(0x08e2d920, 804.06, -633.68, 22.45);
setint(0x08e2d934, 0);
setchar(0x08e2d93C, 0xff, 0xff);
setshort(0x08e2d946, 0x106);
setchar(0x08e2d952, 0x0f);
setchar(0x08e2d953, 0x00);
setchar(0x08e2d970, 0xff);
//Butcher Knife
setfloat(0x08e2d980, 804.06, -635.55, 22.45);
setint(0x08e2d994, 0);
setchar(0x08e2d99C, 0xff, 0xff);
setshort(0x08e2d9a6, 0x107);
setchar(0x08e2d9b2, 0x0f);
setchar(0x08e2d9b3, 0x00);
setchar(0x08e2d9d0, 0xff);
//Baseball Bat
setfloat(0x08e2d9e0, 804.06, -637.47, 22.45);
setint(0x08e2d9f4, 0);
setchar(0x08e2d9fC, 0xff, 0xff);
setshort(0x08e2da06, 0x108);
setchar(0x08e2da12, 0x0f);
setchar(0x08e2da13, 0x00);
setchar(0x08e2da30, 0xff);
//Fire Axe
setfloat(0x08e2da40, 804.06, -639.58, 22.45);
setint(0x08e2da54, 0);
setchar(0x08e2da5C, 0xff, 0xff);
setshort(0x08e2da66, 0x109);
setchar(0x08e2da72, 0x0f);
setchar(0x08e2da73, 0x00);
setchar(0x08e2da90, 0xff);
//Meat Cleaver
setfloat(0x08e2daa0, 804.06, -641.36, 22.45);
setint(0x08e2dab4, 0);
setchar(0x08e2dabC, 0xff, 0xff);
setshort(0x08e2dac6, 0x10a);
setchar(0x08e2dad2, 0x0f);
setchar(0x08e2dad3, 0x00);
setchar(0x08e2daf0, 0xff);
//Machete
setfloat(0x08e2db00, 804.06, -643.53, 22.45);
setint(0x08e2db14, 0);
setchar(0x08e2db1C, 0xff, 0xff);
setshort(0x08e2db26, 0x10b);
setchar(0x08e2db32, 0x0f);
setchar(0x08e2db33, 0x00);
setchar(0x08e2db50, 0xff);
//Katana
setfloat(0x08E2DB60, 804.06, -645.09, 22.45);
setint(0x08E2DB74, 0);
setchar(0x08E2DB7C, 0xff, 0xff);
setshort(0x08E2DB86, 0x10c);
setchar(0x08E2DB92, 0x0f);
setchar(0x08E2DB93, 0x00);
setchar(0x08E2DBB0, 0xff);
//Chainsaw
setfloat(0x08E2DBC0, 804.06, -647.17, 22.45);
setint(0x08E2DBD4, 0);
setchar(0x08E2DBDC, 0xff, 0xff);
setshort(0x08E2DBE6, 0x10d);
setchar(0x08E2DBF2, 0x0f);
setchar(0x08E2DBF3, 0x00);
setchar(0x08E2DC10, 0xff);
//Grenade
setfloat(0x08E2DC20, 804.06, -649.34, 22.45);
setint(0x08E2DC34, 0);
setchar(0x08E2DC3C, 0x1, 0x1);
setshort(0x08E2DC46, 0x10e);
setchar(0x08E2DC52, 0x0f);
setchar(0x08E2DC53, 0x00);
setchar(0x08E2DC70, 0xff);
//Remote Grenade
setfloat(0x08E2DC80, 804.06, -651.36, 22.45);
setint(0x08E2DC94, 0);
setchar(0x08E2DC9C, 0x1, 0x1);
setshort(0x08E2DCA6, 0x123);
setchar(0x08E2DCB2, 0x0f);
setchar(0x08E2DCB3, 0x00);
setchar(0x08E2DCD0, 0xff);
//Molotovs
setfloat(0x08E2DD40, 804.06, -653.17, 22.45);
setint(0x08E2DD54, 0);
setchar(0x08E2DD5C, 0x1, 0x1);
setshort(0x08E2DD66, 0x110);
setchar(0x08E2DD72, 0x0f);
setchar(0x08E2DD73, 0x00);
setchar(0x08E2DD90, 0xff);
//Tear Gas
setfloat(0x08e2d800, 804.06, -655.38, 22.45);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1, 0x1)
setshort(0x08e2d826, 0x10f)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Pistol
setfloat(0x08E2DDA0, 804.06, -657.50, 22.45);
setint(0x08E2DDB4, 0);
setchar(0x08E2DDBC, 0x1, 0x1);
setshort(0x08E2DDC6, 0x112);
setchar(0x08E2DDD2, 0x0f);
setchar(0x08E2DDD3, 0x00);
setchar(0x08E2DDF0, 0xff);
//Colt Python
setfloat(0x08E2DE00, 804.06, -659.50, 22.45);
setint(0x08E2DE14, 0);
setchar(0x08E2DE1C, 0x1, 0x1);
setshort(0x08E2DE26, 0x113);
setchar(0x08E2DE32, 0x0f);
setchar(0x08E2DE33, 0x00);
setchar(0x08E2DE50, 0xff);
//AK-47
setfloat(0x08E2DF80, 793.78, -662.48, 22.45);
setint(0x08E2DF94, 0);
setchar(0x08E2DF9C, 0x1, 0x1);
setshort(0x08E2DFA6, 0x114);
setchar(0x08E2DFB2, 0x0f);
setchar(0x08E2DFB3, 0x00);
setchar(0x08E2DFD0, 0xff);
//M4
setfloat(0x08E2DFE0, 791.22, -662.48, 22.45);
setint(0x08E2DFF4, 0);
setchar(0x08E2DFFC, 0x1, 0x1);
setshort(0x08E2E006, 0x118);
setchar(0x08E2E012, 0x0f);
setchar(0x08E2E013, 0x00);
setchar(0x08E2D030, 0xff);
//Chromed Shotgun
setfloat(0x08E2DE60, 790.88, -660.53, 22.45);
setint(0x08E2DE74, 0);
setchar(0x08E2DE7C, 0x1, 0x1);
setshort(0x08E2DE86, 0x115);
setchar(0x08E2DE92, 0x0f);
setchar(0x08E2DE93, 0x00);
setchar(0x08E2DEB0, 0xff);
//Spaz Shotgun
setfloat(0x08E2DEC0, 790.88, -658.66, 22.45);
setint(0x08E2DED4, 0);
setchar(0x08E2DEDC, 0x1, 0x1);
setshort(0x08E2DEE6, 0x116);
setchar(0x08E2DEF2, 0x0f);
setchar(0x08E2DEF3, 0x00);
setchar(0x08E2DF10, 0xff);
//Combat Shotgun
setfloat(0x08E2DF20, 790.88, -656.79, 22.45);
setint(0x08E2DF34, 0);
setchar(0x08E2DF3C, 0x1, 0x1);
setshort(0x08E2DF46, 0x117);
setchar(0x08E2DF52, 0x0f);
setchar(0x08E2DF53, 0x00);
setchar(0x08E2DF70, 0xff);
//Tec-9
setfloat(0x08E2E040, 801.75, -662.03, 22.45);
setint(0x08E2E054, 0);
setchar(0x08E2E05C, 0x1, 0x1);
setshort(0x08E2E066, 0x119);
setchar(0x08E2E072, 0x0f);
setchar(0x08E2E073, 0x00);
setchar(0x08E2D090, 0xff);
//Micro SMG
setfloat(0x08E2E0A0, 799.29, -662.03, 22.43);
setint(0x08E2E0B4, 0);
setchar(0x08E2E0BC, 0x1, 0x1);
setshort(0x08E2E0C6, 0x11a);
setchar(0x08E2E0D2, 0x0f);
setchar(0x08E2E0D3, 0x00);
setchar(0x08E2D0F0, 0xff);
//Mac 10
setfloat(0x08E2E100, 797.51, -662.03, 22.43);
setint(0x08E2E114, 0);
setchar(0x08E2E11C, 0x1, 0x1);
setshort(0x08E2E126, 0x11b);
setchar(0x08E2E132, 0x0f);
setchar(0x08E2E133, 0x00);
setchar(0x08E2D150, 0xff);
//MP5
setfloat(0x08E2E160, 795.85, -662.03, 22.45);
setint(0x08E2E174, 0);
setchar(0x08E2E17C, 0x1, 0x1);
setshort(0x08E2E186, 0x11c);
setchar(0x08E2E192, 0x0f);
setchar(0x08E2E193, 0x00);
setchar(0x08E2D1B0, 0xff);
//Rocket Launcher
setfloat(0x08E2E280, 790.88, -654.57, 22.45);
setint(0x08E2E294, 0);
setchar(0x08E2E29C, 0x1, 0x1);
setshort(0x08E2E2A6, 0x11f);
setchar(0x08E2E2B2, 0x0f);
setchar(0x08E2E2B3, 0x00);
setchar(0x08E2D2D0, 0xff);
//Flame Thrower
setfloat(0x08E2E2E0, 790.88, -652.81, 22.45);
setint(0x08E2E2F4, 0);
setchar(0x08E2E2FC, 0x1, 0x1);
setshort(0x08E2E306, 0x120);
setchar(0x08E2E312, 0x0f);
setchar(0x08E2E313, 0x00);
setchar(0x08E2D330, 0xff);
//M60
setfloat(0x08E2E340, 790.88, -650.83, 22.45);
setint(0x08E2E354, 0);
setchar(0x08E2E35C, 0x1, 0x1);
setshort(0x08E2E366, 0x121);
setchar(0x08E2E372, 0x0f);
setchar(0x08E2E373, 0x00);
setchar(0x08E2D390, 0xff);
//Minigun
setfloat(0x08E2E3A0, 790.88, -648.68, 22.45);
setint(0x08E2E3B4, 0);
setchar(0x08E2E3BC, 0x1, 0x1);
setshort(0x08E2E3C6, 0x122);
setchar(0x08E2E3D2, 0x0f);
setchar(0x08E2E3D3, 0x00);
setchar(0x08E2D3F0, 0xff);
//Sniper Rifle
setfloat(0x08E2E1C0, 790.88, -646.92, 22.45);
setint(0x08E2E1D4, 0);
setchar(0x08E2E1DC, 0x1, 0x1);
setshort(0x08E2E1E6, 0x11d);
setchar(0x08E2E1F2, 0x0f);
setchar(0x08E2E1F3, 0x00);
setchar(0x08E2D210, 0xff);
//LS Sniper Rifle
setfloat(0x08E2E220, 790.88, -646.88, 22.45);
setint(0x08E2E234, 0);
setchar(0x08E2E23C, 0x1, 0x1);
setshort(0x08E2E246, 0x11e);
setchar(0x08E2E252, 0x0f);
setchar(0x08E2E253, 0x00);
setchar(0x08E2D270, 0xff);
//Camera
setfloat(0x08e2d800, 790.88, -642.81, 22.45);
setint(0x08e2d814, 0);
setchar(0x08E2D81C, 0x1, 0x1)
setshort(0x08e2d826, 0x124)
setchar(0x08e2d832, 0x0f)
setchar(0x08e2d833, 0x00)
setchar(0x08e2d850, 0xff)
//Health Pickup
setfloat(0x08E2E400, 790.88, -640.74, 22.45);
setint(0x08E2E414, 0);
setchar(0x08E2E41C, 0xff, 0xff);
setshort(0x08E2E426, 0x22e);
setchar(0x08E2E432, 0x0f);
setchar(0x08E2E433, 0x00);
setchar(0x08E2D450, 0xff);
//Armor Pickup
setfloat(0x08e2d860, 791.66, -638.45, 22.45);
setint(0x08e2d874, 0);
setchar(0x08E2D87C, 0xff, 0xff)
setshort(0x08e2d886, 0x24b)
setchar(0x08e2d892, 0x0f)
setchar(0x08e2d893, 0x00)
setchar(0x08e2d8b0, 0xff)
//Deimos SP
setchar(0x08E4Ebfc, 130);
setchar(0x08E4Ebfc + 0x18, 0x01);
setfloat(0x08E4Ec00, 802.46, -636.17, 14.97, 270);
//Stinger
setchar(0x08E4E9EC, 133);
setchar(0x08E4E9EC + 0x18, 0x01);
setfloat(0x08E4E9f0, 801.96, -643.32, 15.10, 270);
//Yakuza Stinger
setchar(0x08E4Ea44, 174);
setchar(0x08E4Ea44 + 0x18, 0x01);
setfloat(0x08E4Ea48, 801.68, -651.39, 15.32, 270);
//Infernus
setchar(0x08E4Ea70, 142);
setchar(0x08E4Ea70 + 0x18, 0x01);
setfloat(0x08E4Ea74, 795.14, -660.44, 14.97, 90);
//Cheetah
setchar(0x08E4Eac8, 146);
setchar(0x08E4Eac8 + 0x18, 0x01);
setfloat(0x08E4Eacc, 794.61, -651.69, 14.97, 90);
//Banshee
setchar(0x08E4Eb78, 160);
setchar(0x08E4Eb78 + 0x18, 0x01);
setfloat(0x08E4Eb7c, 803.29, -669.71, 15.75, 90);
//Phobos VT
setchar(0x08E4Ea18, 186);
setchar(0x08E4Ea18 + 0x18, 0x01);
setfloat(0x08E4Ea1c, 801.59, -618.53, 15.75, 90);
//V8 Ghost
setchar(0x8E4EB4C, 187);
setchar(0x8E4EB4C + 0x18, 0x01);
setfloat(0x8E4EB50, 800.96, -606.41, 15.06, 90);
//Angel
setchar(0x8E4EB20, 202);
setchar(0x8E4EB20 + 0x18, 0x01);
setfloat(0x8E4EB24, 807.38, -653.95, 14.97, 90);
//Freeway
setchar(0x8E4EAF4, 207);
setchar(0x8E4EAF4 + 0x18, 0x01);
setfloat(0x8E4EAF8, 807.57, -650.29, 14.97, 90);
//PCJ-600
setchar(0x8E4EA9C, 205);
setchar(0x8E4EA9C + 0x18, 0x01);
setfloat(0x8E4EAA0, 807.55, -647.55, 14.97, 90);
//Sanchez
setchar(0x08E4Ec54, 210);
setchar(0x08E4Ec54 + 0x18, 0x01);
setfloat(0x08E4Ec58, 808.22, -644.52, 14.97, 90);
//Faggio
setchar(0x08E4Ecd8, 206);
setchar(0x08E4Ecd8 + 0x18, 0x01);
setfloat(0x08E4Ecdc, 809.05, -640.71, 14.97, 90);
//Avenger
setchar(0x08E4Ec28, 208);
setchar(0x08E4Ec28 + 0x18, 0x01);
setfloat(0x08E4Ec2c, 808.52, -636.01, 14.97, 90);
//Manchez
setchar(0x08E4Eba4, 209);
setchar(0x08E4Eba4 + 0x18, 0x01);
setfloat(0x08E4Eba8, 807.55, -632.38, 14.97, 90);
off()

